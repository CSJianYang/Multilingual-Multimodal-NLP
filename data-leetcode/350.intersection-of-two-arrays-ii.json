[
    {
        "title": "Pow(x, n)",
        "question_content": "Implement pow(x, n), which calculates x raised to the power n (i.e., xn).\n&nbsp;\nExample 1:\n\nInput: x = 2.00000, n = 10\nOutput: 1024.00000\n\nExample 2:\n\nInput: x = 2.10000, n = 3\nOutput: 9.26100\n\nExample 3:\n\nInput: x = 2.00000, n = -2\nOutput: 0.25000\nExplanation: 2-2 = 1/22 = 1/4 = 0.25\n\n&nbsp;\nConstraints:\n\n\t-100.0 < x < 100.0\n\t-231 <= n <= 231-1\n\tn is an integer.\n\tEither x is not zero or n > 0.\n\t-104 <= xn <= 104",
        "solutions": [
            {
                "id": 1337794,
                "title": "java-c-simple-o-log-n-easy-faster-than-100-explained",
                "content": "* <u>**FIRST APPROACH**</u>\\n\\n\\tWe can solve this problem by multiplying x by n times\\n\\teg:\\n\\t`x = 7 and n = 11`\\n\\t**7 * 7 * 7 * 7 * 7 * 7 * 7 * 7 * 7 * 7 * 7 = 1977326743**\\n\\tHere we have **multiplied 7 for 11 times**, which will result in **O(n)**\\n\\tBut, Suppose `x = 1 and n = 2147483647`\\n\\tIf we follow this approach then, **1 will be multiplied 2147483647 times** which is not efficient at all.\\n\\t\\n* <u>**COMPLEXITY**</u>\\n\\t* **Time: O(n)**, where `n` is the given power\\n\\t* **Space: O(1)**, in-place\\n\\n<hr>\\n\\n* <u>**SECOND  APPROACH**</u>\\n\\n\\tIn order to improve efficiency we will opt for **Binary Exponentiation using which we can calculate x<sup>n</sup> using O log<sub>2</sub>(N) multiplications.**\\n\\n\\t**Basic Idea is to divide the work using binary representation of exponents**\\n\\ti.e. is to keep multiplying pow with x, if the bit is odd, and multiplying x with itself until we get 0\\n\\tWe will use very **1st example of 1st Approach** i.e.\\n\\t`x = 7, n = 11 and pow = 1`\\n\\tHere, we have to calculate 7<sup>11</sup>\\n\\t**Binary of n i.e. (11)<sub>10</sub> is (1011)<sub>2</sub>**\\n\\t**1 &nbsp; 0 &nbsp; 1 &nbsp; 1**\\n\\t2<sup>3 &nbsp;</sup>2<sup>2</sup>&nbsp; 2<sup>1</sup> &nbsp;2<sup>0</sup>&nbsp;&nbsp;  <-- Corresponding **place values** of each bit\\n\\n\\tOR we can also write this as\\n\\t**1  0  1  1**\\n\\t8 4 2 1  <-- Corresponding **place values** of each bit\\n\\n\\tNow, **7<sup>8</sup> &#215; 7<sup>2</sup> &#215; 7<sup>1</sup>** == **7<sup>11</sup>** as **7<sup>(8 + 2 + 1)</sup>** == **7<sup>11</sup>**\\n**NOTE:**  We have not considered **7<sup>4</sup>** in this case as the **4th place bit is OFF**\\n\\n\\tSo, **7<sup>8</sup> &#215; 7<sup>2</sup> &#215; 7<sup>1</sup>** == **5764801 &#215; 49 &#215; 7** == **1977326743** **<-- Desired Output**\\n\\tNow, applying logic keeping this concept in mind\\n\\n\\t```\\n\\tdouble pow = 1;\\n\\twhile(n != 0){\\n\\t\\tif((n & 1) != 0) // equivalent to if((n % 2) != 0) i.e. multiply only when the number is odd  \\n\\t\\tpow *= x;\\n\\n\\t\\tx *= x;\\n\\t\\tn >>>= 1; // equivalent to n = n / 2; i.e. keep dividing the number by 2\\n\\n\\t}\\n\\t```\\n*   <u>**PROCESS**</u>\\n\\t* \\t**Iteration 1**\\n\\tpow = <u>1 &#215; 7</u> = 7\\n\\tx = 7 \\xD7 7 = 49\\n\\tn = 11 >>> 1 = 5\\n\\n\\t* \\t**Iteration 2**\\n\\tpow = <u>7 \\xD7 49</u> = 343\\n\\tx = 49 \\xD7 49 = 2401\\n\\tn = 5 >>> 1 = 2\\n\\n\\t* \\t**Iteration 3**\\n\\tx = 2401 \\xD7 2401 = 5764801\\n\\tn = 2 >>> 1 = 1\\n\\n\\t* \\t**Iteration 4**\\n\\tpow = <u>343 \\xD7 5764801</u> = 1977326743\\n\\tx = 5764801 \\xD7 5764801 = 3.323293057 \\xD7 10\\xB9\\xB3\\n\\tn = 1 >>> 1 = 0\\n\\nWe exit the loop as the number has become 0 and we got pow as **1977326743 which is the desired output**\\nIn this binary exponentiation approach, the loop iterated for only 4 times which is nothing but (O log<sub>2</sub>(N) + 1) ~ **(O log<sub>2</sub>(N))**\\n\\nAnd for **2nd example of 1st Approach** where\\n`x = 1 and n = 2147483647`\\nThis loop executed for only 31 times **(O log<sub>2</sub>(N))** which is far far less than 2147483647 times(in case of O(N) approach)<br>\\n\\n* <u>**JAVA / C++ CODE**</u>\\n\\n\\t<iframe src=\"https://leetcode.com/playground/hRAZkbLc/shared\" frameBorder=\"0\" width=\"100%\" height=\"400\"></iframe>\\n\\n* <u>**COMPLEXITY**</u>\\n\\t* **Time: O(log<sub>2</sub>(n))**, where `n` is the given power\\n\\t* **Space: O(1),** in-place\\n\\n<img src = \"https://assets.leetcode.com/users/images/6f980162-6f32-4bfc-88e2-212a3d2d83cd_1645193689.9401023.jpeg\" width = \"100%\">\\n<br><br><br>\\n<img src = \"https://assets.leetcode.com/users/images/5e27a0db-88da-4bfa-830b-a9e18b37cc30_1645193695.887591.jpeg\" width = \"100%\">\\n<br><br>\\n\\n\\n<u>**Refer to the following github repsitory for more leetcode solutions**</u>\\nhttps://github.com/Akshaya-Amar/LeetCodeSolutions\\n\\n# **Please UPVOTE if you find this post helpful :)**",
                "solutionTags": [
                    "C++",
                    "Java",
                    "C"
                ],
                "code": "```\\n\\tdouble pow = 1;\\n\\twhile(n != 0){\\n\\t\\tif((n & 1) != 0) // equivalent to if((n % 2) != 0) i.e. multiply only when the number is odd  \\n\\t\\tpow *= x;\\n\\n\\t\\tx *= x;\\n\\t\\tn >>>= 1; // equivalent to n = n / 2; i.e. keep dividing the number by 2\\n\\n\\t}\\n\\t```",
                "codeTag": "Unknown"
            },
            {
                "id": 19546,
                "title": "short-and-easy-to-understand-solution",
                "content": "    public class Solution {\\n        public double pow(double x, int n) {\\n            if(n == 0)\\n                return 1;\\n            if(n<0){\\n                n = -n;\\n                x = 1/x;\\n            }\\n            return (n%2 == 0) ? pow(x*x, n/2) : x*pow(x*x, n/2);\\n        }\\n    }",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n        public double pow(double x, int n) {\\n            if(n == 0)\\n                return 1;\\n            if(n<0){\\n                n = -n;\\n                x = 1/x;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 19544,
                "title": "5-different-choices-when-talk-with-interviewers",
                "content": "After reading some good sharing solutions, I'd like to show them together. You can see different ideas in the code.\\n1. nest myPow\\n----------\\n\\n    double myPow(double x, int n) {\\n        if(n<0) return 1/x * myPow(1/x, -(n+1));\\n        if(n==0) return 1;\\n        if(n==2) return x*x;\\n        if(n%2==0) return myPow( myPow(x, n/2), 2);\\n        else return x*myPow( myPow(x, n/2), 2);\\n    }\\n\\n2. double myPow\\n---------------\\n\\n    double myPow(double x, int n) { \\n        if(n==0) return 1;\\n        double t = myPow(x,n/2);\\n        if(n%2) return n<0 ? 1/x*t*t : x*t*t;\\n        else return t*t;\\n    }\\n\\n3. double x\\n---------------\\n\\n    double myPow(double x, int n) { \\n        if(n==0) return 1;\\n        if(n<0){\\n            n = -n;\\n            x = 1/x;\\n        }\\n        return n%2==0 ? myPow(x*x, n/2) : x*myPow(x*x, n/2);\\n    }\\n\\n\\n4. iterative one\\n----------------\\n\\n    double myPow(double x, int n) { \\n        if(n==0) return 1;\\n        if(n<0) {\\n            n = -n;\\n            x = 1/x;\\n        }\\n        double ans = 1;\\n        while(n>0){\\n            if(n&1) ans *= x;\\n            x *= x;\\n            n >>= 1;\\n        }\\n        return ans;\\n    }\\n\\n5. bit operation\\n---------------\\nsee this [solution][1]\\n\\nIf you have other ideas, please leave it below. Thanks.\\n\\n  [1]: https://leetcode.com/discuss/12004/my-answer-using-bit-operation-c-implementation",
                "solutionTags": [
                    "Java"
                ],
                "code": "After reading some good sharing solutions, I'd like to show them together. You can see different ideas in the code.\\n1. nest myPow\\n----------\\n\\n    double myPow(double x, int n) {\\n        if(n<0) return 1/x * myPow(1/x, -(n+1));\\n        if(n==0) return 1;\\n        if(n==2) return x*x;\\n        if(n%2==0) return myPow( myPow(x, n/2), 2);\\n        else return x*myPow( myPow(x, n/2), 2);\\n    }\\n\\n2. double myPow\\n---------------\\n\\n    double myPow(double x, int n) { \\n        if(n==0) return 1;\\n        double t = myPow(x,n/2);\\n        if(n%2) return n<0 ? 1/x*t*t : x*t*t;\\n        else return t*t;\\n    }\\n\\n3. double x\\n---------------\\n\\n    double myPow(double x, int n) { \\n        if(n==0) return 1;\\n        if(n<0){\\n            n = -n;\\n            x = 1/x;\\n        }\\n        return n%2==0 ? myPow(x*x, n/2) : x*myPow(x*x, n/2);\\n    }\\n\\n\\n4. iterative one\\n----------------\\n\\n    double myPow(double x, int n) { \\n        if(n==0) return 1;\\n        if(n<0) {\\n            n = -n;\\n            x = 1/x;\\n        }\\n        double ans = 1;\\n        while(n>0){\\n            if(n&1) ans *= x;\\n            x *= x;\\n            n >>= 1;\\n        }\\n        return ans;\\n    }\\n\\n5. bit operation\\n---------------\\nsee this [solution][1]\\n\\nIf you have other ideas, please leave it below. Thanks.\\n\\n  [1]: https://leetcode.com/discuss/12004/my-answer-using-bit-operation-c-implementation",
                "codeTag": "Unknown"
            },
            {
                "id": 19560,
                "title": "shortest-python-guaranteed",
                "content": "[Surprisingly](http://stackoverflow.com/questions/30693639/why-does-class-x-mypow-pow-work-what-about-self), I can just use Python's existing `pow` like this:\\n\\n    class Solution:\\n        myPow = pow\\n\\nThat's even shorter than the other more obvious \"cheat\":\\n\\n    class Solution:\\n        def myPow(self, x, n):\\n            return x ** n\\n\\nAnd to calm down the haters, here's me *\"doing it myself\"*:\\n\\nRecursive:\\n\\n    class Solution:\\n        def myPow(self, x, n):\\n            if not n:\\n                return 1\\n            if n < 0:\\n                return 1 / self.myPow(x, -n)\\n            if n % 2:\\n                return x * self.myPow(x, n-1)\\n            return self.myPow(x*x, n/2)\\n\\nIterative:\\n\\n    class Solution:\\n        def myPow(self, x, n):\\n            if n < 0:\\n                x = 1 / x\\n                n = -n\\n            pow = 1\\n            while n:\\n                if n & 1:\\n                    pow *= x\\n                x *= x\\n                n >>= 1\\n            return pow",
                "solutionTags": [
                    "Python"
                ],
                "code": "[Surprisingly](http://stackoverflow.com/questions/30693639/why-does-class-x-mypow-pow-work-what-about-self), I can just use Python's existing `pow` like this:\\n\\n    class Solution:\\n        myPow = pow\\n\\nThat's even shorter than the other more obvious \"cheat\":\\n\\n    class Solution:\\n        def myPow(self, x, n):\\n            return x ** n\\n\\nAnd to calm down the haters, here's me *\"doing it myself\"*:\\n\\nRecursive:\\n\\n    class Solution:\\n        def myPow(self, x, n):\\n            if not n:\\n                return 1\\n            if n < 0:\\n                return 1 / self.myPow(x, -n)\\n            if n % 2:\\n                return x * self.myPow(x, n-1)\\n            return self.myPow(x*x, n/2)\\n\\nIterative:\\n\\n    class Solution:\\n        def myPow(self, x, n):\\n            if n < 0:\\n                x = 1 / x\\n                n = -n\\n            pow = 1\\n            while n:\\n                if n & 1:\\n                    pow *= x\\n                x *= x\\n                n >>= 1\\n            return pow",
                "codeTag": "Java"
            },
            {
                "id": 19563,
                "title": "iterative-log-n-solution-with-clear-explanation",
                "content": "I couldn't find a clear explanation for an interative Log(n) solution so here's mine.  The basic idea is to decompose the exponent into powers of 2, so that you can keep dividing the problem in half.  For example, lets say \\n\\nN = 9 = 2^3 + 2^0 = 1001 in binary. Then:\\n\\nx^9 = x^(2^3) * x^(2^0)\\n\\nWe can see that every time we encounter a 1 in the binary representation of N, we need to multiply the answer with x^(2^i) where **i** is the **ith** bit of the exponent.  Thus, we can keep a running total of repeatedly squaring x - (x, x^2, x^4, x^8, etc) and multiply it by the answer when we see a 1.  \\n\\nTo handle the case where N=INTEGER_MIN we use a long (64-bit) variable.  Below is solution:\\n\\n    public class Solution {\\n        public double MyPow(double x, int n) {\\n            double ans = 1;\\n            long absN = Math.Abs((long)n);\\n            while(absN > 0) {\\n                if((absN&1)==1) ans *= x;\\n                absN >>= 1;\\n                x *= x;\\n            }\\n            return n < 0 ?  1/ans : ans;\\n        }\\n    }",
                "solutionTags": [],
                "code": "class Solution {\\n        public double MyPow(double x, int n) {\\n            double ans = 1;\\n            long absN = Math.Abs((long)n);\\n            while(absN > 0) {\\n                if((absN&1)==1) ans *= x;\\n                absN >>= 1;\\n                x *= x;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 739646,
                "title": "c-iterative-vs-recursive-bitwise-solutions-explained-100-time-80-space",
                "content": "This is a classic problem: in order to computer the value of `x` raised to the `n`th power, you might start to consider first of all the case in which `n` is positive.\\n\\nLet\\'s assume that `n == 13`, so we can say `pow(x, 13) == pow(x, 1) * pow(x, 4) * pow(x, 8)`.\\n\\nLooks familiar? We basically decomposed `13` in its binary digits (`1101`).\\n\\nOkay, then: why would we care? Because that is how a computer efficiently gets powers: at each step we multiply `x` by itself, so we will get `x`(`^1`), `x^2`, `x^4`, `x^8`, `x^16` and so on.\\n\\nStarting to see the bits of the puzzle coming together now, now? We can decompose `n` as a binary number and then keep multiplying for `x` raised to some power of `2` value as we go along and - boom, the magic is done!\\n\\nOkay now, but what about negative powers?\\n\\nWell, instead of multiplying, we divide. Period.\\n\\nNo, really: it changes that little.\\n\\nIterative approach, easier to follow:\\n\\n```cpp\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double res = 1;\\n        while (n) {\\n            if (n % 2) res = n > 0 ? res * x : res / x;\\n            x = x * x;\\n            n /= 2;\\n        }\\n        return res;\\n    }\\n};\\n```\\n\\nRecursive, because oneliners are always cooler:\\n\\n```cpp\\nclass Solution {\\npublic:\\n    double myPow(double x, int n, double res = 1) {\\n        return n ? myPow(x * x, n / 2, n % 2 ? (n > 0 ? res * x : res / x) : res) : res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Recursion",
                    "Iterator"
                ],
                "code": "```cpp\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double res = 1;\\n        while (n) {\\n            if (n % 2) res = n > 0 ? res * x : res / x;\\n            x = x * x;\\n            n /= 2;\\n        }\\n        return res;\\n    }\\n};\\n```\n```cpp\\nclass Solution {\\npublic:\\n    double myPow(double x, int n, double res = 1) {\\n        return n ? myPow(x * x, n / 2, n % 2 ? (n > 0 ? res * x : res / x) : res) : res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 738830,
                "title": "python-recursive-o-log-n-solution-explained",
                "content": "This problem has in my opinion a bit strange statement: it is not specified that we can not use already existing power or logarithm function, but I will consider, that we can not use them. Also in python numbers potentially can be very big or very close to zero, what should we do in these cases? You should ask you interviewer. \\n\\nThe main idea of solution is to use as much multiplications as possible, for example how can we evaluate `x^20`? We can just multiply `x` in loop `20` times, but we also can evaluate `x^10` and multiply it by itself! Similarly, `x^10 = x^5 * x^5`. Now we have odd power, but it is not a problem, we evaluate `x^5 = x^2 * x^2 * x`. We also need to deal with some border cases, here is the full algorithm:\\n\\n1. If we have very small value of `x` we can directly return `0`, the smallest value of float is `1.175494 \\xD7 10^(-38)`.\\n2. If we have `n = 0`, return `1`.\\n3. If we have negative power, return positive power of `1/x`.\\n4. Now, we have two cases: for even and for odd `n`, where we evaluate power `n//2`.\\n\\n**Complexity**: time complexity is `O(log n)`, space complexity for this recursive algorithm is also `O(log n)`, which can be reduced to `O(1)`, if we use iterative approach instead.\\n```\\nclass Solution:\\n    def myPow(self, x, n):\\n        if abs(x) < 1e-40: return 0 \\n        if n == 0: return 1\\n        if n < 0: return self.myPow(1/x, -n)\\n        lower = self.myPow(x, n//2)\\n        if n % 2 == 0: return lower*lower\\n        if n % 2 == 1: return lower*lower*x\\n```\\n\\nIf you have any questions, feel free to ask. If you like solution and explanations, please **Upvote!**",
                "solutionTags": [
                    "Math"
                ],
                "code": "```\\nclass Solution:\\n    def myPow(self, x, n):\\n        if abs(x) < 1e-40: return 0 \\n        if n == 0: return 1\\n        if n < 0: return self.myPow(1/x, -n)\\n        lower = self.myPow(x, n//2)\\n        if n % 2 == 0: return lower*lower\\n        if n % 2 == 1: return lower*lower*x\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3206602,
                "title": "best-c-5-solution-math-recursion-brute-force-optimize-one-stop-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nWe can solve this question using math and recursion.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nWe can easily understand the all the approaches by seeing the code which is easy to understand with comments.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nTime complexity is given in code comment.\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nSpace complexity is given in code comment.\\n\\n# Code\\n```\\n/*\\n\\n    Time Complexity : O(N), because we call the recurtion until we multiply the base exponent times. Thus the\\n    time complexity is linear.\\n\\n    Space Complexity : O(N), Recursion stack space.\\n\\n*/\\n\\n\\n/***************************************** Approach 1 *****************************************/\\n\\nclass Solution {\\nprivate:\\n    double power(double x, int n){\\n        if(n==0){\\n            return 1;\\n        }\\n        return x * power(x, n-1);\\n    }\\npublic:\\n    double myPow(double x, int n) {\\n        if (n == INT_MAX) return (x == 1) ? 1 : (x == -1) ? -1 : 0;\\n        if (n == INT_MIN) return (x == 1 || x == -1) ? 1 : 0;\\n        double num = 1;\\n        if(n>=0){\\n            num = power(x, n);\\n        }\\n        else{\\n            n = -n;\\n            num = power(x, n);\\n            num = 1.0/num;\\n        }\\n        return num;\\n    }\\n};\\n\\n\\n\\n\\n\\n\\n/*\\n\\n    Time Complexity : O(N), because we loop until we multiply the base exponent times. Thus the time complexity\\n    is linear.\\n\\n    Space Complexity : O(1), Constant space.\\n\\n*/\\n\\n\\n/***************************************** Approach 2 *****************************************/\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if (n == INT_MAX) return (x == 1) ? 1 : (x == -1) ? -1 : 0;\\n        if (n == INT_MIN) return (x == 1 || x == -1) ? 1 : 0;\\n        double num = 1;\\n        if(n>=0){\\n            while(n>0){\\n                num *= x;\\n                n--;\\n            }\\n        }\\n        else{\\n            n = -n;\\n            while(n>0){\\n                num *= x;\\n                n--;\\n            }\\n            num = 1.0/num;\\n        }\\n        return num;\\n    }\\n};\\n\\n\\n\\n\\n\\n\\n/*\\n\\n    Time Complexity : O(logN).\\n\\n    Space Complexity : O(logN), Recursion stack space.\\n\\n*/\\n\\n\\n/***************************************** Approach 3 *****************************************/\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if(n==0) return 1;\\n        if(n<0) {\\n            n = abs(n);\\n            x = 1/x;\\n        }\\n        if(n%2==0){\\n            return myPow(x*x, n/2);\\n        }\\n        else{\\n            return x*myPow(x, n-1);\\n        }\\n    }\\n};\\n\\n\\n\\n\\n\\n\\n/*\\n\\n    Time Complexity : O(logN).\\n\\n    Space Complexity : O(1), Constant space.\\n\\n*/\\n\\n\\n/***************************************** Approach 4 *****************************************/\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double num = 1;\\n        long long nn = n;\\n        if(nn < 0) nn = -nn;\\n        while(nn>0){\\n            if(nn%2==1){\\n                num = num * x;\\n                nn--;\\n            }\\n            else{\\n                x = x*x;\\n                nn/=2;\\n            }\\n        }\\n        if(n < 0){\\n            num = 1.0/num;\\n        }\\n        return num;\\n    }\\n};\\n\\n\\n\\n\\n\\n\\n/*\\n\\n    Time Complexity : O(logN).\\n\\n    Space Complexity : O(logN), Constant space.\\n\\n*/\\n\\n\\n/***************************************** Approach 5 *****************************************/\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        return pow(x, n);\\n    }\\n};\\n\\n\\n\\n```\\n\\n***IF YOU LIKE THE SOLUTION THEN PLEASE UPVOTE MY SOLUTION BECAUSE IT GIVES ME MOTIVATION TO REGULARLY POST THE SOLUTION.***\\n\\n![WhatsApp Image 2023-02-10 at 19.01.02.jpeg](https://assets.leetcode.com/users/images/0a95fea4-64f4-4502-82aa-41db6d77c05c_1676054939.8270252.jpeg)",
                "solutionTags": [
                    "C++",
                    "Math",
                    "Recursion"
                ],
                "code": "```\\n/*\\n\\n    Time Complexity : O(N), because we call the recurtion until we multiply the base exponent times. Thus the\\n    time complexity is linear.\\n\\n    Space Complexity : O(N), Recursion stack space.\\n\\n*/\\n\\n\\n/***************************************** Approach 1 *****************************************/\\n\\nclass Solution {\\nprivate:\\n    double power(double x, int n){\\n        if(n==0){\\n            return 1;\\n        }\\n        return x * power(x, n-1);\\n    }\\npublic:\\n    double myPow(double x, int n) {\\n        if (n == INT_MAX) return (x == 1) ? 1 : (x == -1) ? -1 : 0;\\n        if (n == INT_MIN) return (x == 1 || x == -1) ? 1 : 0;\\n        double num = 1;\\n        if(n>=0){\\n            num = power(x, n);\\n        }\\n        else{\\n            n = -n;\\n            num = power(x, n);\\n            num = 1.0/num;\\n        }\\n        return num;\\n    }\\n};\\n\\n\\n\\n\\n\\n\\n/*\\n\\n    Time Complexity : O(N), because we loop until we multiply the base exponent times. Thus the time complexity\\n    is linear.\\n\\n    Space Complexity : O(1), Constant space.\\n\\n*/\\n\\n\\n/***************************************** Approach 2 *****************************************/\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if (n == INT_MAX) return (x == 1) ? 1 : (x == -1) ? -1 : 0;\\n        if (n == INT_MIN) return (x == 1 || x == -1) ? 1 : 0;\\n        double num = 1;\\n        if(n>=0){\\n            while(n>0){\\n                num *= x;\\n                n--;\\n            }\\n        }\\n        else{\\n            n = -n;\\n            while(n>0){\\n                num *= x;\\n                n--;\\n            }\\n            num = 1.0/num;\\n        }\\n        return num;\\n    }\\n};\\n\\n\\n\\n\\n\\n\\n/*\\n\\n    Time Complexity : O(logN).\\n\\n    Space Complexity : O(logN), Recursion stack space.\\n\\n*/\\n\\n\\n/***************************************** Approach 3 *****************************************/\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if(n==0) return 1;\\n        if(n<0) {\\n            n = abs(n);\\n            x = 1/x;\\n        }\\n        if(n%2==0){\\n            return myPow(x*x, n/2);\\n        }\\n        else{\\n            return x*myPow(x, n-1);\\n        }\\n    }\\n};\\n\\n\\n\\n\\n\\n\\n/*\\n\\n    Time Complexity : O(logN).\\n\\n    Space Complexity : O(1), Constant space.\\n\\n*/\\n\\n\\n/***************************************** Approach 4 *****************************************/\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double num = 1;\\n        long long nn = n;\\n        if(nn < 0) nn = -nn;\\n        while(nn>0){\\n            if(nn%2==1){\\n                num = num * x;\\n                nn--;\\n            }\\n            else{\\n                x = x*x;\\n                nn/=2;\\n            }\\n        }\\n        if(n < 0){\\n            num = 1.0/num;\\n        }\\n        return num;\\n    }\\n};\\n\\n\\n\\n\\n\\n\\n/*\\n\\n    Time Complexity : O(logN).\\n\\n    Space Complexity : O(logN), Constant space.\\n\\n*/\\n\\n\\n/***************************************** Approach 5 *****************************************/\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        return pow(x, n);\\n    }\\n};\\n\\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 749109,
                "title": "python-recursive-solution-faster-than-99",
                "content": "![image](https://assets.leetcode.com/users/images/5f84e242-69cb-4dc4-97ef-f492465f46f3_1595418237.69286.png)\\n```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n\\n        def function(base=x, exponent=abs(n)):\\n            if exponent == 0:\\n                return 1\\n            elif exponent % 2 == 0:\\n                return function(base * base, exponent // 2)\\n            else:\\n                return base * function(base * base, (exponent - 1) // 2)\\n\\n        f = function()\\n        \\n        return float(f) if n >= 0 else 1/f\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Math",
                    "Recursion"
                ],
                "code": "```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n\\n        def function(base=x, exponent=abs(n)):\\n            if exponent == 0:\\n                return 1\\n            elif exponent % 2 == 0:\\n                return function(base * base, exponent // 2)\\n            else:\\n                return base * function(base * base, (exponent - 1) // 2)\\n\\n        f = function()\\n        \\n        return float(f) if n >= 0 else 1/f\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1693787,
                "title": "pow-x-n-using-recursion",
                "content": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        \\n        if(n==0){\\n            return 1;\\n        }\\n        if (n < 0) { \\n            n = abs(n);\\n            x = 1/x;\\n        }\\n        if(n%2==0){\\n            return myPow(x*x,n/2);\\n        \\n        }else{\\n            return x*myPow(x*x,n/2);\\n        }\\n    }\\n};\\n```\\nTC - O(log n)\\n\\nIf you like the code, do give it a upvote\\u270C\\uFE0F",
                "solutionTags": [
                    "C",
                    "Recursion"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        \\n        if(n==0){\\n            return 1;\\n        }\\n        if (n < 0) { \\n            n = abs(n);\\n            x = 1/x;\\n        }\\n        if(n%2==0){\\n            return myPow(x*x,n/2);\\n        \\n        }else{\\n            return x*myPow(x*x,n/2);\\n        }\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 19578,
                "title": "non-recursive-c-log-n-solution",
                "content": "```\\nclass Solution {\\n    public:\\n        double myPow(double x, int n) {\\n        \\tdouble ans = 1;\\n        \\tunsigned long long p;\\n        \\tif (n < 0) {\\n        \\t\\tp = -n;\\n        \\t\\tx = 1 / x;\\n        \\t} else {\\n        \\t\\tp = n;\\n        \\t}\\n    \\t\\twhile (p) {\\n    \\t\\t\\tif (p & 1)\\n    \\t\\t\\t\\tans *= x;\\n    \\t\\t\\tx *= x;\\n    \\t\\t\\tp >>= 1;\\n    \\t\\t}\\n    \\t\\treturn ans;\\n        }\\n    };\\n```\\n\\t\\nUpdate:\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if (n == std::numeric_limits<int>::lowest()) {\\n            return myPow(1 / x, -(n + 1)) / x;\\n        }\\n        if (n < 0) {\\n            return myPow(1 / x, -n);\\n        }\\n    \\tdouble ans = 1;\\n\\t\\twhile (n) {\\n\\t\\t\\tif (n & 1 == 1) ans *= x;\\n\\t\\t\\tx *= x;\\n\\t\\t\\tn >>= 1;\\n\\t\\t}\\n\\t\\treturn ans;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public:\\n        double myPow(double x, int n) {\\n        \\tdouble ans = 1;\\n        \\tunsigned long long p;\\n        \\tif (n < 0) {\\n        \\t\\tp = -n;\\n        \\t\\tx = 1 / x;\\n        \\t} else {\\n        \\t\\tp = n;\\n        \\t}\\n    \\t\\twhile (p) {\\n    \\t\\t\\tif (p & 1)\\n    \\t\\t\\t\\tans *= x;\\n    \\t\\t\\tx *= x;\\n    \\t\\t\\tp >>= 1;\\n    \\t\\t}\\n    \\t\\treturn ans;\\n        }\\n    };\\n```\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if (n == std::numeric_limits<int>::lowest()) {\\n            return myPow(1 / x, -(n + 1)) / x;\\n        }\\n        if (n < 0) {\\n            return myPow(1 / x, -n);\\n        }\\n    \\tdouble ans = 1;\\n\\t\\twhile (n) {\\n\\t\\t\\tif (n & 1 == 1) ans *= x;\\n\\t\\t\\tx *= x;\\n\\t\\t\\tn >>= 1;\\n\\t\\t}\\n\\t\\treturn ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 19593,
                "title": "o-logn-solution-in-java",
                "content": "/* This is a simple solution based on divide and conquer */   \\n\\n     public class Solution {\\n            public double pow(double x, int m) {\\n                double temp=x;\\n                if(m==0)\\n                return 1;\\n                temp=pow(x,m/2);\\n                if(m%2==0)\\n                return temp*temp;\\n                else \\n                {\\n                if(m > 0)\\n                    return x*temp*temp;\\n                else\\n                    return (temp*temp)/x;\\n                }\\n              \\n        }",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n            public double pow(double x, int m) {\\n                double temp=x;\\n                if(m==0)\\n                return 1;\\n                temp=pow(x,m/2);\\n                if(m%2==0)\\n                return temp*temp;\\n                else \\n                {\\n                if(m > 0)\\n                    return x*temp*temp;\\n                else\\n                    return (temp*temp)/x;\\n                }",
                "codeTag": "Java"
            },
            {
                "id": 3438698,
                "title": "simplest-and-fastest-java-recursive-code",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->O(log n)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->O(log n)\\n\\n![Screenshot_20230205_171246.png](https://assets.leetcode.com/users/images/bc5dd774-6503-4448-b923-0ee6fa3e3420_1682009445.0235534.png)\\n\\n\\n# Code\\n```\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        \\n        // Base condition: If n is 0, x^0 is 1\\n        if (n == 0) {\\n            return 1;\\n        }\\n\\n        // Convert n to a long integer to handle the edge case with Integer.MIN_VALUE\\n        long N = n;\\n\\n        // If n is negative, take the reciprocal of x and make N positive\\n        if (N < 0) {\\n            N = -N;\\n            x = 1 / x;\\n        }\\n\\n        // If N is even, recursively compute the square of x^(N/2)\\n        if (N % 2 == 0) {\\n            return myPow(x * x, (int) (N / 2));\\n        } \\n    \\n        // If N is odd, recursively compute x^(N-1) and multiply it by x\\n        else {\\n            return x * myPow(x, (int) (N - 1));\\n        }\\n    }\\n}\\n\\n```",
                "solutionTags": [
                    "Java",
                    "Recursion"
                ],
                "code": "```\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        \\n        // Base condition: If n is 0, x^0 is 1\\n        if (n == 0) {\\n            return 1;\\n        }\\n\\n        // Convert n to a long integer to handle the edge case with Integer.MIN_VALUE\\n        long N = n;\\n\\n        // If n is negative, take the reciprocal of x and make N positive\\n        if (N < 0) {\\n            N = -N;\\n            x = 1 / x;\\n        }\\n\\n        // If N is even, recursively compute the square of x^(N/2)\\n        if (N % 2 == 0) {\\n            return myPow(x * x, (int) (N / 2));\\n        } \\n    \\n        // If N is odd, recursively compute x^(N-1) and multiply it by x\\n        else {\\n            return x * myPow(x, (int) (N - 1));\\n        }\\n    }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 313640,
                "title": "javascript-recursion",
                "content": "```\\n/**\\n * @param {number} x\\n * @param {number} n\\n * @return {number}\\n */\\nvar myPow = function(x, n) {\\n    if (n===0) return 1;\\n    \\n    let pow = Math.abs(n);\\n    \\n\\tlet result = pow%2===0 ? myPow(x*x,pow/2) : myPow(x*x,(pow-1)/2) * x;\\n    \\n    return n < 0 ? 1/result : result;\\n};\\n```",
                "solutionTags": [
                    "JavaScript",
                    "Recursion"
                ],
                "code": "```\\n/**\\n * @param {number} x\\n * @param {number} n\\n * @return {number}\\n */\\nvar myPow = function(x, n) {\\n    if (n===0) return 1;\\n    \\n    let pow = Math.abs(n);\\n    \\n\\tlet result = pow%2===0 ? myPow(x*x,pow/2) : myPow(x*x,(pow-1)/2) * x;\\n    \\n    return n < 0 ? 1/result : result;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 19608,
                "title": "8-lines-of-c-7-ms",
                "content": "       double pow(double x, int n) {\\n            if (n==0) return 1;\\n            double t = pow(x,n/2);\\n            if (n%2) {\\n                return n<0 ? 1/x*t*t : x*t*t;\\n            } else {\\n                return t*t;\\n            }\\n        }",
                "solutionTags": [
                    "Recursion"
                ],
                "code": "       double pow(double x, int n) {\\n            if (n==0) return 1;\\n            double t = pow(x,n/2);\\n            if (n%2) {\\n                return n<0 ? 1/x*t*t : x*t*t;\\n            } else {\\n                return t*t;\\n            }\\n        }",
                "codeTag": "Unknown"
            },
            {
                "id": 3478674,
                "title": "beats-100-full-explanation-super-easy",
                "content": "# Intuition\\nThis problem can be easily solved using **Binary Exponentiation**.\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nInitialize ans as 1.0  and store a duplicate copy of n i.e nn using to avoid overflow\\n\\nCheck if nn is a negative number, in that case, make it a positive number.\\n\\nKeep on iterating until nn is greater than zero, now if nn is an odd power then multiply x with ans ans reduce nn by 1. Else multiply x with itself and divide nn by two.\\n\\nNow after the entire binary exponentiation is complete and nn becomes zero, check if n is a negative value we know the answer will be 1 by and.\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:O(log(n))\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        double ans=1.0;\\n        long nn=n;\\n        if(nn<0) nn=-1*nn;\\n        while(nn>0){\\n            if(nn%2==1){\\n                ans = ans *x;\\n                nn=nn-1;\\n            }\\n            else{\\n                x=x*x;\\n                nn=nn/2;\\n            }\\n        }\\n        if(n<0)\\n        ans = (double)(1.0)/(double)(ans);\\n        return ans;\\n    }\\n}\\n```\\n![images.jpeg](https://assets.leetcode.com/users/images/f124cf1d-e7d1-40eb-93be-5faf89e6c54a_1683047510.624389.jpeg)\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        double ans=1.0;\\n        long nn=n;\\n        if(nn<0) nn=-1*nn;\\n        while(nn>0){\\n            if(nn%2==1){\\n                ans = ans *x;\\n                nn=nn-1;\\n            }\\n            else{\\n                x=x*x;\\n                nn=nn/2;\\n            }\\n        }\\n        if(n<0)\\n        ans = (double)(1.0)/(double)(ans);\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1515322,
                "title": "java-tc-o-logn-optimized-recursive-iterative-handles-overflow-solutions",
                "content": "**Recursive Solution 1 - Reducing N by half**\\n\\n```java\\n/**\\n * Reduce N by half in every recursion\\n *\\n * Time Complexity: O(log N)\\n *\\n * Space Complexity: O(log N) - Space required by recursion stack.\\n *\\n * N = Input number n.\\n */\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        if (n == 0) {\\n            return 1;\\n        }\\n        if (x == 0 || x == 1 || n == 1) {\\n            return x;\\n        }\\n        if (n < 0) {\\n            /**\\n             * -(n + 1) is done to avoid int overflow.\\n             */\\n            return (1 / x) * myPow(1 / x, -(n + 1));\\n        }\\n        return n % 2 == 0 ? myPow(x * x, n / 2) : x * myPow(x * x, n / 2);\\n    }\\n}\\n```\\n\\n---\\n**Recursive Solution 2 - Reducing N by half**\\n\\n```java\\n/**\\n * Reduce N by half in every recursion\\n *\\n * Time Complexity: O(log N)\\n *\\n * Space Complexity: O(log N) - Space required by recursion stack.\\n *\\n * N = Input number n.\\n */\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        if (n == 0) {\\n            return 1;\\n        }\\n        if (x == 0 || x == 1 || n == 1) {\\n            return x;\\n        }\\n\\n        double num = myPow(x, n / 2);\\n\\n        if (n % 2 == 0) {\\n            return num * num;\\n        } else {\\n            if (n < 0) {\\n                return num * num / x;\\n            } else {\\n                return num * num * x;\\n            }\\n        }\\n    }\\n}\\n```\\n\\n---\\n**Iterative Solution - Reducing N by half**\\n\\n```java\\n/**\\n * Reduce N by half in every iteration.\\n *\\n * Time Complexity: O(log N)\\n *\\n * Space Complexity: O(1)\\n *\\n * N = Input number n.\\n */\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        if (n == 0) {\\n            return 1;\\n        }\\n        if (x == 0 || x == 1 || n == 1) {\\n            return x;\\n        }\\n\\n        double result = 1;\\n        if (n < 0) {\\n            x = 1 / x;\\n            /**\\n             * -(n + 1) is done to avoid int overflow.\\n             */\\n            n = -(n + 1);\\n            result *= x;\\n        }\\n        while (n > 0) {\\n            if (n % 2 == 1) {\\n                result *= x;\\n                n--;\\n            }\\n            x *= x;\\n            n /= 2;\\n        }\\n        return result;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Math",
                    "Recursion",
                    "Iterator"
                ],
                "code": "```java\\n/**\\n * Reduce N by half in every recursion\\n *\\n * Time Complexity: O(log N)\\n *\\n * Space Complexity: O(log N) - Space required by recursion stack.\\n *\\n * N = Input number n.\\n */\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        if (n == 0) {\\n            return 1;\\n        }\\n        if (x == 0 || x == 1 || n == 1) {\\n            return x;\\n        }\\n        if (n < 0) {\\n            /**\\n             * -(n + 1) is done to avoid int overflow.\\n             */\\n            return (1 / x) * myPow(1 / x, -(n + 1));\\n        }\\n        return n % 2 == 0 ? myPow(x * x, n / 2) : x * myPow(x * x, n / 2);\\n    }\\n}\\n```\n```java\\n/**\\n * Reduce N by half in every recursion\\n *\\n * Time Complexity: O(log N)\\n *\\n * Space Complexity: O(log N) - Space required by recursion stack.\\n *\\n * N = Input number n.\\n */\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        if (n == 0) {\\n            return 1;\\n        }\\n        if (x == 0 || x == 1 || n == 1) {\\n            return x;\\n        }\\n\\n        double num = myPow(x, n / 2);\\n\\n        if (n % 2 == 0) {\\n            return num * num;\\n        } else {\\n            if (n < 0) {\\n                return num * num / x;\\n            } else {\\n                return num * num * x;\\n            }\\n        }\\n    }\\n}\\n```\n```java\\n/**\\n * Reduce N by half in every iteration.\\n *\\n * Time Complexity: O(log N)\\n *\\n * Space Complexity: O(1)\\n *\\n * N = Input number n.\\n */\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        if (n == 0) {\\n            return 1;\\n        }\\n        if (x == 0 || x == 1 || n == 1) {\\n            return x;\\n        }\\n\\n        double result = 1;\\n        if (n < 0) {\\n            x = 1 / x;\\n            /**\\n             * -(n + 1) is done to avoid int overflow.\\n             */\\n            n = -(n + 1);\\n            result *= x;\\n        }\\n        while (n > 0) {\\n            if (n % 2 == 1) {\\n                result *= x;\\n                n--;\\n            }\\n            x *= x;\\n            n /= 2;\\n        }\\n        return result;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3807721,
                "title": "2-optimised-method-bit-recursion-video-explanation-faster-log-n-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThe key intuition behind this implementation is to reduce the number of recursive calls and avoid redundant calculations by dividing the problem into smaller subproblems. By using the \"exponentiation by squaring\" technique, the function efficiently computes the power of `x` to `n` in logarithmic time complexity.\\n\\nThis implementation is quite efficient, making it suitable for calculating large powers of numbers without causing a stack overflow due to excessive recursion\\n\\nFor detailed explanation you can refer to my youtube channel (hindi Language)\\nhttps://youtu.be/mosNm5bl8Ts\\n or link in my profile.Here,you can find any solution in playlists monthwise from June 2023 with detailed explanation.i upload daily leetcode solution video with short and precise explanation (5-10) minutes.\\n\\n# Approach\\nThe given code implements a function `myPow` to calculate the power of a given number `x` raised to the integer `n`. The implementation uses a recursive approach called \"exponentiation by squaring\" to efficiently compute the result in O(log n) time complexity.\\n\\nApproach:\\n1. The `myPow` function takes two parameters: `x` (the base) and `n` (the exponent).\\n2. Inside `myPow`, it calls the `solve` function, passing `x` and the absolute value of `n`.\\n3. The `solve` function recursively calculates the power of `x` raised to `n`, using the following steps:\\n   a. If `n` is 0, it returns 1 since any number raised to the power of 0 is 1.\\n   b. Otherwise, it calculates `temp`, which is the result of `myPow(x, n/2)`. This is done to reduce redundant calculations and improve the efficiency.\\n   c. It squares `temp` to handle even exponents (`n%2==0`). If the exponent is odd, it multiplies `temp` by `x`.\\n   d. The function then returns the calculated result.\\n\\n# Complexity\\n- Time complexity:$$O(logn)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:$$O(logn)$$(Recursion stack)\\n\\n\\n# Code\\n```C++ []\\nclass Solution {\\npublic:\\n double solve(double x,int n){\\n          if(n==0){\\n            return 1; //power of 0 is 1;\\n        }\\n       double temp=myPow(x,n/2);\\n        temp=temp*temp;\\n        if(n%2==0){ // if even  return  just without doing nothing\\n            return temp;\\n        }\\n        else{\\n            return temp*x;//if odd multiple  return by multipling once more with given number\\n        }\\n    }\\n    double myPow(double x, int n) {\\n        double ans=solve(x,abs(n));\\n        if(n<0)\\n            return 1/ans;\\n            return ans;\\n       \\n    }\\n};\\n```\\n```java []\\npublic class Solution {\\n    public double solve(double x, long n) {\\n        if (n == 0) {\\n            return 1; // power of 0 is 1\\n        }\\n        double temp = solve(x, n / 2);\\n        temp = temp * temp;\\n\\n        if (n % 2 == 0) { // if even, return just without doing anything\\n            return temp;\\n        } else {\\n            return temp * x; // if odd, return by multiplying once more with the given number\\n        }\\n    }\\n\\n    public double myPow(double x, int n) {\\n        long longN = n; // Convert n to a long to handle Integer.MIN_VALUE\\n        double ans = solve(x, Math.abs(longN));\\n\\n        if (longN < 0) {\\n            return 1 / ans;\\n        }\\n        return ans;\\n    }\\n}\\n\\n```\\n```python []\\nclass Solution:\\n    def solve(self, x, n):\\n        if n == 0:\\n            return 1  # power of 0 is 1\\n        \\n        temp = self.myPow(x, n // 2)\\n        temp = temp * temp\\n        \\n        if n % 2 == 0:  # if even, return just without doing anything\\n            return temp\\n        else:\\n            return temp * x  # if odd, return by multiplying once more with given number\\n    \\n    def myPow(self, x, n):\\n        ans = self.solve(x, abs(n))\\n        \\n        if n < 0:\\n            return 1 / ans\\n        return ans\\n\\n```\\n\\n# Code 2\\n```C++ []\\nclass Solution {\\npublic:\\n//i am passing long long here because the value `-2147483648` after abs will cause overflow because int can store max `-2147483647`.so type casting.\\n    double solve(double x,long long n){\\n        double ans=1;\\n        while(n>0){\\n            int c=n&1;//checking if it is odd then we will multiply  one   extra value of x\\n            for odd value adding extra x \\n            if(c==1){\\n             ans=ans*x;\\n            }\\n           x=x*x;\\n           n=n>>1;\\n        }\\n        return ans;\\n    }\\n    double myPow(double x, int n) {\\n         if(x == 1) return 1;\\n         // -2147483648\\n         double ans=solve(x,abs(n));\\n        if(n<0)\\n            return 1/ans;\\n            cout<<INT_MAX;\\n            return ans;\\n    }\\n};\\n```\\n```java []\\npublic class Solution {\\n    public double solve(double x, long n) {\\n        double ans = 1;\\n        while (n > 0) {\\n            if ((n & 1) == 1) { // checking if it is odd then we will multiply one extra value of x\\n                ans *= x;\\n            }\\n            x *= x;\\n            n >>= 1;\\n        }\\n        return ans;\\n    }\\n\\n    public double myPow(double x, int n) {\\n        if (x == 1) return 1;\\n        long longN = n;\\n        double ans = solve(x, Math.abs(longN));\\n        if (longN < 0)\\n            return 1 / ans;\\n        return ans;\\n    }\\n}\\n\\n```\\n```python []\\nclass Solution:\\n    def solve(self, x, n):\\n        ans = 1\\n        while n > 0:\\n            if n & 1:  # checking if it is odd then we will multiply one extra value of x\\n                ans *= x\\n            x *= x\\n            n >>= 1\\n        return ans\\n    \\n    def myPow(self, x, n):\\n        if x == 1:\\n            return 1\\n        long_n = abs(n)\\n        ans = self.solve(x, long_n)\\n        if n < 0:\\n            return 1 / ans\\n        return ans\\n\\n    def main(self):\\n        x = 2.00000\\n        n = -2147483648\\n        print(self.myPow(x, n))  # Output: 0.0\\n\\nif __name__ == \"__main__\":\\n    solution = Solution()\\n    solution.main()\\n\\n```\\n\\n# Complexity\\n- Time complexity:$$O(logn)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:$$O(1)$$",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python",
                    "Bit Manipulation",
                    "Recursion"
                ],
                "code": "```C++ []\\nclass Solution {\\npublic:\\n double solve(double x,int n){\\n          if(n==0){\\n            return 1; //power of 0 is 1;\\n        }\\n       double temp=myPow(x,n/2);\\n        temp=temp*temp;\\n        if(n%2==0){ // if even  return  just without doing nothing\\n            return temp;\\n        }\\n        else{\\n            return temp*x;//if odd multiple  return by multipling once more with given number\\n        }\\n    }\\n    double myPow(double x, int n) {\\n        double ans=solve(x,abs(n));\\n        if(n<0)\\n            return 1/ans;\\n            return ans;\\n       \\n    }\\n};\\n```\n```java []\\npublic class Solution {\\n    public double solve(double x, long n) {\\n        if (n == 0) {\\n            return 1; // power of 0 is 1\\n        }\\n        double temp = solve(x, n / 2);\\n        temp = temp * temp;\\n\\n        if (n % 2 == 0) { // if even, return just without doing anything\\n            return temp;\\n        } else {\\n            return temp * x; // if odd, return by multiplying once more with the given number\\n        }\\n    }\\n\\n    public double myPow(double x, int n) {\\n        long longN = n; // Convert n to a long to handle Integer.MIN_VALUE\\n        double ans = solve(x, Math.abs(longN));\\n\\n        if (longN < 0) {\\n            return 1 / ans;\\n        }\\n        return ans;\\n    }\\n}\\n\\n```\n```python []\\nclass Solution:\\n    def solve(self, x, n):\\n        if n == 0:\\n            return 1  # power of 0 is 1\\n        \\n        temp = self.myPow(x, n // 2)\\n        temp = temp * temp\\n        \\n        if n % 2 == 0:  # if even, return just without doing anything\\n            return temp\\n        else:\\n            return temp * x  # if odd, return by multiplying once more with given number\\n    \\n    def myPow(self, x, n):\\n        ans = self.solve(x, abs(n))\\n        \\n        if n < 0:\\n            return 1 / ans\\n        return ans\\n\\n```\n```C++ []\\nclass Solution {\\npublic:\\n//i am passing long long here because the value `-2147483648` after abs will cause overflow because int can store max `-2147483647`.so type casting.\\n    double solve(double x,long long n){\\n        double ans=1;\\n        while(n>0){\\n            int c=n&1;//checking if it is odd then we will multiply  one   extra value of x\\n            for odd value adding extra x \\n            if(c==1){\\n             ans=ans*x;\\n            }\\n           x=x*x;\\n           n=n>>1;\\n        }\\n        return ans;\\n    }\\n    double myPow(double x, int n) {\\n         if(x == 1) return 1;\\n         // -2147483648\\n         double ans=solve(x,abs(n));\\n        if(n<0)\\n            return 1/ans;\\n            cout<<INT_MAX;\\n            return ans;\\n    }\\n};\\n```\n```java []\\npublic class Solution {\\n    public double solve(double x, long n) {\\n        double ans = 1;\\n        while (n > 0) {\\n            if ((n & 1) == 1) { // checking if it is odd then we will multiply one extra value of x\\n                ans *= x;\\n            }\\n            x *= x;\\n            n >>= 1;\\n        }\\n        return ans;\\n    }\\n\\n    public double myPow(double x, int n) {\\n        if (x == 1) return 1;\\n        long longN = n;\\n        double ans = solve(x, Math.abs(longN));\\n        if (longN < 0)\\n            return 1 / ans;\\n        return ans;\\n    }\\n}\\n\\n```\n```python []\\nclass Solution:\\n    def solve(self, x, n):\\n        ans = 1\\n        while n > 0:\\n            if n & 1:  # checking if it is odd then we will multiply one extra value of x\\n                ans *= x\\n            x *= x\\n            n >>= 1\\n        return ans\\n    \\n    def myPow(self, x, n):\\n        if x == 1:\\n            return 1\\n        long_n = abs(n)\\n        ans = self.solve(x, long_n)\\n        if n < 0:\\n            return 1 / ans\\n        return ans\\n\\n    def main(self):\\n        x = 2.00000\\n        n = -2147483648\\n        print(self.myPow(x, n))  # Output: 0.0\\n\\nif __name__ == \"__main__\":\\n    solution = Solution()\\n    solution.main()\\n\\n```",
                "codeTag": "C++"
            },
            {
                "id": 2541248,
                "title": "java-recursion",
                "content": "### **Please Upvote** :D\\n``` java []\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        if (n == 0) \\n            return 1.0;\\n\\n        if (n % 2 == 1) \\n            return x * myPow(x, n - 1);\\n\\n        if (n % 2 == 0) \\n            return myPow(x * x, n / 2);\\n\\n        return 1 / myPow(x, -n);\\n    }\\n}\\n\\n// TC: O(logn), SC: O(1)\\n```",
                "solutionTags": [
                    "Java",
                    "Recursion"
                ],
                "code": "``` java []\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        if (n == 0) \\n            return 1.0;\\n\\n        if (n % 2 == 1) \\n            return x * myPow(x, n - 1);\\n\\n        if (n % 2 == 0) \\n            return myPow(x * x, n / 2);\\n\\n        return 1 / myPow(x, -n);\\n    }\\n}\\n\\n// TC: O(logn), SC: O(1)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1356015,
                "title": "swift-pow-x-n-test-cases",
                "content": "```swift\\nclass Solution {\\n    func myPow(_ x: Double, _ n: Int) -> Double {\\n        var x = x, n = n, res = 1.0\\n        \\n        if n < 0 { x = 1.0/x ; n = -n }\\n        \\n        while n > 0 {\\n            if n % 2 != 0 { res *= x }\\n            x *= x\\n            n /= 2\\n        }\\n        return res\\n    }\\n}\\n```\\n\\n```swift\\nimport XCTest\\n\\n// Executed 3 tests, with 0 failures (0 unexpected) in 0.005 (0.007) seconds\\n\\nclass Tests: XCTestCase {\\n    let s = Solution()\\n    func test0() {\\n        let res = s.myPow(2.00000, 10)\\n        XCTAssertEqual(res, 1024)\\n    }\\n    func test1() {\\n        let res = s.myPow(2.10000, 3)\\n        XCTAssertEqual(res, 9.261000000000001)\\n    }\\n    func test2() {\\n        let res = s.myPow(2.00000, -2)\\n        XCTAssertEqual(res, 0.25)\\n    }\\n}\\n\\nTests.defaultTestSuite.run()\\n```",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```swift\\nclass Solution {\\n    func myPow(_ x: Double, _ n: Int) -> Double {\\n        var x = x, n = n, res = 1.0\\n        \\n        if n < 0 { x = 1.0/x ; n = -n }\\n        \\n        while n > 0 {\\n            if n % 2 != 0 { res *= x }\\n            x *= x\\n            n /= 2\\n        }\\n        return res\\n    }\\n}\\n```\n```swift\\nimport XCTest\\n\\n// Executed 3 tests, with 0 failures (0 unexpected) in 0.005 (0.007) seconds\\n\\nclass Tests: XCTestCase {\\n    let s = Solution()\\n    func test0() {\\n        let res = s.myPow(2.00000, 10)\\n        XCTAssertEqual(res, 1024)\\n    }\\n    func test1() {\\n        let res = s.myPow(2.10000, 3)\\n        XCTAssertEqual(res, 9.261000000000001)\\n    }\\n    func test2() {\\n        let res = s.myPow(2.00000, -2)\\n        XCTAssertEqual(res, 0.25)\\n    }\\n}\\n\\nTests.defaultTestSuite.run()\\n```",
                "codeTag": "Java"
            },
            {
                "id": 735170,
                "title": "python3-solution-with-a-detailed-explanation",
                "content": "We should implement `pow`, right? What happens when you do a number to the power of sth? It\\'s two cases, the power is either positive, zero, or negative. If it\\'s zero, the result is 1 regardless. Right? If it\\'s positive, you multiply your number  the power times, and if it\\'s negative, you (let\\'s say your number is x) multiply 1/x the power times. That\\'s exactly what we\\'re going to do. The code has two parts, main function (`myPow`) and `helper`, both accepting the same input variabes. Let\\'s focus on the first function, `myPow`. \\n\\nIt\\'s doing the above. If the is `>= 0`, call the `helper` function with `x` and `n` as input (line `#1`). Otherwise, call the inverse of it with `x` and `-n` as input (line `#2`). For the last case, imagine you want to do `2^(-3)`. How will you do it normally? `1/(2^3)`, right? That\\'s all. \\n\\n```\\n# First part\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n >= 0:\\n            return self.helper(x, n) #1\\n        else:\\n            return 1/self.helper(x, -n) #2\\n    \\n    \\n# Second part\\n    \\n    def helper(self, x, n): \\n        if n == 0: #3\\n            return 1\\n        \\n        temp = self.myPow(x, n//2) #4\\n         \\n        if int(n%2) == 0: #5\\n            return  temp * temp\\n        else:\\n            return temp * temp * x #6\\n```\\n\\nNow, let\\'s focus on the second part.  Line `#3` takes care of the base case when `n` is zero. Then we calculate the `temp` for the case that `n = n/2`. This way, we break down the problem into two problems, each with the same solution. So, we just need to calculate it once. If `n` is divisible by 2, then we multiply `temp` by itself (line `#5`) and if it\\'s not, we multiply the product by an additional `x` (line `#6`). \\n\\nThat\\'s all.\\n\\n\\n============================================================\\nFinal note: Please let me know if you found any error/typo/etc. I\\'ll try to fix it. \\n\\nFinal note 2: I\\'ve found explaining stuff in a simple way (at least I think it\\'s simple) would be instructive for myself. I\\'d suggest you do the same in case you\\'re having hard time understanding something. Thanks for reading.",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Recursion"
                ],
                "code": "```\\n# First part\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n >= 0:\\n            return self.helper(x, n) #1\\n        else:\\n            return 1/self.helper(x, -n) #2\\n    \\n    \\n# Second part\\n    \\n    def helper(self, x, n): \\n        if n == 0: #3\\n            return 1\\n        \\n        temp = self.myPow(x, n//2) #4\\n         \\n        if int(n%2) == 0: #5\\n            return  temp * temp\\n        else:\\n            return temp * temp * x #6\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1341862,
                "title": "python-2-fast-pow-solutions-follow-up-find-nth-root-of-a-number",
                "content": "**Solution 1: Jump double step**\\n```python\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0: return 1\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n        step = 1\\n        ans = x\\n        while step * 2 <= n:\\n            ans *= ans\\n            step *= 2\\n        return ans * self.myPow(x, n - step)\\n```\\nComplexity:\\n- Time: `O(logN)`\\n- Space: `O(1)`\\n\\n---\\n\\n**Solution 2: Half pow**\\n```python\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0: return 1\\n        if n < 0: return self.myPow(1/x, -n)\\n        half = self.myPow(x, n // 2)\\n        if n & 1:  # if n is an odd number\\n            return half * half * x\\n        return half * half\\n```\\nComplexity:\\n- Time: `O(logN)`\\n- Space: `O(1)`\\n\\n---\\n\\n**Follow-up Question: Find nth root of a number**\\nProblem statement:\\n> Many times, we need to re-implement basic functions without using any standard library functions already implemented. For example, when designing a chip that requires very little memory space.\\n> \\n> In this question we\\u2019ll implement a function root that calculates the n\\u2019th root of a number. The function takes a nonnegative number `x` and a positive integer `n`, and returns the positive `n\\u2019th` root of `x` within an error of 0.001 (i.e. suppose the real root is `y`, then the error is: `|y-root(x,n)|` and must satisfy `|y-root(x,n)| < 0.001)`.\\n> \\n> **Examples:** \\n> input:  x = 7, n = 3\\n> output: 1.913\\n> \\n> input:  x = 9, n = 2\\n> output: 3\\n\\n<iframe src=\"https://leetcode.com/playground/DWT2qBnY/shared\" frameBorder=\"0\" width=\"100%\" height=\"500\"></iframe>\\n\\nComplexity:\\n- Time: `O(logX * logN)`\\n- Space: `O(1)`",
                "solutionTags": [],
                "code": "```python\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0: return 1\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n        step = 1\\n        ans = x\\n        while step * 2 <= n:\\n            ans *= ans\\n            step *= 2\\n        return ans * self.myPow(x, n - step)\\n```\n```python\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0: return 1\\n        if n < 0: return self.myPow(1/x, -n)\\n        half = self.myPow(x, n // 2)\\n        if n & 1:  # if n is an odd number\\n            return half * half * x\\n        return half * half\\n```",
                "codeTag": "Java"
            },
            {
                "id": 19566,
                "title": "iterative-java-python-short-solution-o-log-n",
                "content": "**Java**\\n\\n    public double myPow(double x, int n) {\\n        long m = n > 0 ? n : -(long)n;\\n        double ans = 1.0;\\n        while (m != 0) {\\n            if ((m & 1) == 1)\\n                ans *= x;\\n            x *= x;\\n            m >>= 1;\\n        }\\n        return n >= 0 ? ans : 1 / ans;\\n    }\\n    //299 / 299 test cases passed.\\n    //Status: Accepted\\n    //Runtime: 1 ms\\n\\n**Python**\\n\\n    def myPow(self, x, n):\\n        m = abs(n)\\n        ans = 1.0\\n        while m:\\n            if m & 1:\\n                ans *= x\\n            x *= x\\n            m >>= 1\\n        return ans if n >= 0 else 1 / ans\\n\\n\\n    # 299 / 299 test cases passed.\\n    # Status: Accepted\\n    # Runtime: 44 ms",
                "solutionTags": [
                    "Java",
                    "Python"
                ],
                "code": "**Java**\\n\\n    public double myPow(double x, int n) {\\n        long m = n > 0 ? n : -(long)n;\\n        double ans = 1.0;\\n        while (m != 0) {\\n            if ((m & 1) == 1)\\n                ans *= x;\\n            x *= x;\\n            m >>= 1;\\n        }\\n        return n >= 0 ? ans : 1 / ans;\\n    }\\n    //299 / 299 test cases passed.\\n    //Status: Accepted\\n    //Runtime: 1 ms\\n\\n**Python**\\n\\n    def myPow(self, x, n):\\n        m = abs(n)\\n        ans = 1.0\\n        while m:\\n            if m & 1:\\n                ans *= x\\n            x *= x\\n            m >>= 1\\n        return ans if n >= 0 else 1 / ans\\n\\n\\n    # 299 / 299 test cases passed.\\n    # Status: Accepted\\n    # Runtime: 44 ms",
                "codeTag": "Python3"
            },
            {
                "id": 19733,
                "title": "simple-iterative-lg-n-solution",
                "content": "The idea is similar to the recursive version.\\n\\n    double pow(double x, int n) {\\n        double d = 1.; int m = n;\\n        for (; n; x *= x, n /= 2) if (n % 2) d *= x;\\n        return m >= 0 ? d : 1. / d;\\n    }",
                "solutionTags": [],
                "code": "The idea is similar to the recursive version.\\n\\n    double pow(double x, int n) {\\n        double d = 1.; int m = n;\\n        for (; n; x *= x, n /= 2) if (n % 2) d *= x;\\n        return m >= 0 ? d : 1. / d;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 19709,
                "title": "c-4-lines-of-code",
                "content": "    double myPow(double x, int n) {\\n        if (n==0) return 1;\\n        if (n==1) return x;\\n        if (n==-1) return 1/x;\\n        return myPow(x*x,n/2)*(n%2==0?1:n>0?x:1/x);\\n    }",
                "solutionTags": [],
                "code": "    double myPow(double x, int n) {\\n        if (n==0) return 1;\\n        if (n==1) return x;\\n        if (n==-1) return 1/x;\\n        return myPow(x*x,n/2)*(n%2==0?1:n>0?x:1/x);\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 19571,
                "title": "my-answer-using-bit-operation-c-implementation",
                "content": "    class Solution {\\n    public:\\n        double pow(double x, int n) {\\n        \\tif(n<0){\\n        \\t\\tx = 1.0/x;\\n        \\t\\tn = -n;\\n        \\t}\\n        \\tint unsigned m = n;\\n            double tbl[32] = {0};\\n            double result = 1;\\n            tbl[0] = x;\\n            for(int i=1;i<32;i++){\\n                tbl[i] = tbl[i-1]*tbl[i-1];\\n            }\\n            for(int i=0;i<32;i++){\\n                if( m & (0x1<<i) )\\n                result *= tbl[i];\\n            }\\n            return result;\\n        }\\n    };\\n\\n\\nIn bit format and for a unsigned number, the number is represented as `k0*2^0 + k1*2^1 + ... +k31*2^31`. Therefore, once we know the pow(x,2^0), pow(x,2^1), ..., pow(x,2^31), we can get pow(x,n). And pow(x,2^m) can be constructed easily as pow(x,2^m) = pow(x,2^(m-1)*pow(x,2^(m-1).",
                "solutionTags": [],
                "code": "class Solution {\\n    public:\\n        double pow(double x, int n) {\\n        \\tif(n<0){\\n        \\t\\tx = 1.0/x;\\n        \\t\\tn = -n;\\n        \\t}",
                "codeTag": "Java"
            },
            {
                "id": 290555,
                "title": "c-fast-100-0ms",
                "content": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double res=1.0;\\n        for(int i=n;i;i/=2){\\n            if(i&1)res*=x;\\n            x*=x;\\n            \\n        }\\n        return n>=0?res:1/res; \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double res=1.0;\\n        for(int i=n;i;i/=2){\\n            if(i&1)res*=x;\\n            x*=x;\\n            \\n        }\\n        return n>=0?res:1/res; \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1625042,
                "title": "java-c-simple-olog-n-easy-faster-than-100-explained",
                "content": "# **Please UPVOTE if you find this post helpful :)**\\n\\n<u>**Refer to the following github repsitory for more leetcode solutions**</u>\\nhttps://github.com/Akshaya-Amar/LeetCodeSolutions\\n\\n**APPROACHES:**\\n* <u>**First Approach**</u>\\n\\n\\tWe can solve this problem by multiplying x by n times\\n\\teg:\\n\\t`x = 7 and n = 11`\\n\\t**7 * 7 * 7 * 7 * 7 * 7 * 7 * 7 * 7 * 7 * 7 = 1977326743**\\n\\tHere we have **multiplied 7 for 11 times**, which will result in **O(n)**\\n\\tBut, Suppose `x = 1 and n = 2147483647`\\n\\tIf we follow this approach then, **1 will be multiplied 2147483647 times** which is not efficient at all.\\n\\n* <u>**Second Approach**</u>\\nIn order to improve efficiency we will opt for **Binary Exponentiation using which we can calculate x<sup>n</sup> using O log<sub>2</sub>(N) multiplications.**\\n\\n\\t**Basic Idea is to divide the work using binary representation of exponents**\\n\\ti.e. is to keep multiplying pow with x, if the bit is odd, and multiplying x with itself until we get 0\\n\\tWe will use very **1st example of 1st Approach** i.e.\\n\\t`x = 7, n = 11 and pow = 1`\\n\\tHere, we have to calculate 7<sup>11</sup>\\n\\t**Binary of n i.e. (11)<sub>10</sub> is (1011)<sub>2</sub>**\\n\\t**1 &nbsp; 0 &nbsp; 1 &nbsp; 1**\\n\\t2<sup>3 &nbsp;</sup>2<sup>2</sup>&nbsp; 2<sup>1</sup> &nbsp;2<sup>0</sup>&nbsp;&nbsp;  <-- Corresponding **place values** of each bit\\n\\n\\tOR we can also write this as\\n\\t**1  0  1  1**\\n\\t8 4 2 1  <-- Corresponding **place values** of each bit\\n\\n\\tNow, **7<sup>8</sup> &#215; 7<sup>2</sup> &#215; 7<sup>1</sup>** == **7<sup>11</sup>** as **7<sup>(8 + 2 + 1)</sup>** == **7<sup>11</sup>**\\n**NOTE:**  We have not considered **7<sup>4</sup>** in this case as the **4th place bit is OFF**\\n\\n\\tSo, **7<sup>8</sup> &#215; 7<sup>2</sup> &#215; 7<sup>1</sup>** == **5764801 &#215; 49 &#215; 7** == **1977326743** **<-- Desired Output**\\n\\tNow, applying logic keeping this concept in mind\\n\\n\\t```\\n\\tdouble pow = 1;\\n\\twhile(n != 0){\\n\\t\\tif((n & 1) != 0) // equivalent to if((n % 2) != 0) i.e. multiply only when the number is odd  \\n\\t\\tpow *= x;\\n\\n\\t\\tx *= x;\\n\\t\\tn >>>= 1; // equivalent to n = n / 2; i.e. keep dividing the number by 2\\n\\n\\t}\\n\\t```\\n*   **PROCESS**\\n\\t* \\t**Iteration 1**\\n\\tpow = <u>1 &#215; 7</u> = 7\\n\\tx = 7 \\xD7 7 = 49\\n\\tn = 11 >>> 1 = 5\\n\\n\\t* \\t**Iteration 2**\\n\\tpow = <u>7 \\xD7 49</u> = 343\\n\\tx = 49 \\xD7 49 = 2401\\n\\tn = 5 >>> 1 = 2\\n\\n\\t* \\t**Iteration 3**\\n\\tx = 2401 \\xD7 2401 = 5764801\\n\\tn = 2 >>> 1 = 1\\n\\n\\t* \\t**Iteration 4**\\n\\tpow = <u>343 \\xD7 5764801</u> = 1977326743\\n\\tx = 5764801 \\xD7 5764801 = 3.323293057 \\xD7 10\\xB9\\xB3\\n\\tn = 1 >>> 1 = 0\\n\\nWe exit the loop as the number has become 0 and we got pow as **1977326743 which is the desired output**\\nIn this binary exponentiation approach, the loop iterated for only 4 times which is nothing but (O log<sub>2</sub>(N) + 1) ~ **(O log<sub>2</sub>(N))**\\n\\nAnd for **2nd example of 1st Approach** where\\n`x = 1 and n = 2147483647`\\nThis loop executed for only 31 times **(O log<sub>2</sub>(N))** which is far far less than 2147483647 times(in case of O(N) approach)<br>\\n\\n<hr>\\n\\n<u>**JAVA / C++ CODE**</u>\\n\\n<iframe src=\"https://leetcode.com/playground/hRAZkbLc/shared\" frameBorder=\"0\" width=\"100%\" height=\"400\"></iframe>\\n\\n**COMPLEXITY:**\\n* **Time: O(log<sub>2</sub>(n))**, where `n` is the given power\\n* **Space: O(1),** in-place\\n\\n<img src = \"https://assets.leetcode.com/users/images/6f980162-6f32-4bfc-88e2-212a3d2d83cd_1645193689.9401023.jpeg\" width = \"100%\">\\n<br><br><br>\\n<img src = \"https://assets.leetcode.com/users/images/5e27a0db-88da-4bfa-830b-a9e18b37cc30_1645193695.887591.jpeg\" width = \"100%\">\\n<br><br>\\n\\n<u>**Refer to the following github repsitory for more leetcode solutions**</u>\\nhttps://github.com/Akshaya-Amar/LeetCodeSolutions\\n\\n# **Please UPVOTE if you find this post helpful :)**",
                "solutionTags": [
                    "C++",
                    "Java",
                    "C"
                ],
                "code": "```\\n\\tdouble pow = 1;\\n\\twhile(n != 0){\\n\\t\\tif((n & 1) != 0) // equivalent to if((n % 2) != 0) i.e. multiply only when the number is odd  \\n\\t\\tpow *= x;\\n\\n\\t\\tx *= x;\\n\\t\\tn >>>= 1; // equivalent to n = n / 2; i.e. keep dividing the number by 2\\n\\n\\t}\\n\\t```",
                "codeTag": "Unknown"
            },
            {
                "id": 1350210,
                "title": "c-brute-force-optimal-solution-time-o-logn-auxiliary-space-o-logn",
                "content": "**Brute Force Solution**\\n\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n\\t\\t// Brute Force Solution Time O(N) & Auxiliary Space O(N)\\n        if(n==0)\\n            return 1;\\n        else if(n>0) \\n            return x*myPow(x,n-1); \\n        else\\n            return (1/x)*myPow(x,n+1); \\n    }\\n};\\n```\\n\\n**Optimal Solution**\\n\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n\\t\\t// Optimal Solution Time O(logN) & Auxiliary Space O(logN)\\n        if(n==0) \\n\\t\\t\\treturn 1;\\n\\t\\t// Using Binary Exponentiation(Time O(logN))\\n\\t\\t// x^n=x^(n/2)*x^(n/2). So, recursive function is \\n\\t\\t// called logN times where y=x^(n/2) and function returns y*y\\n        double y = myPow(x,n/2);\\n        if(n%2==0)\\n            return y*y;\\n        else if(n < 0)\\n            return 1/x*y*y;\\n        else\\n            return x*y*y; \\n    }\\n};\\n```\\n**All suggestions are welcome. Please upvote if you like it. Thank you for reading the post.**",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n\\t\\t// Brute Force Solution Time O(N) & Auxiliary Space O(N)\\n        if(n==0)\\n            return 1;\\n        else if(n>0) \\n            return x*myPow(x,n-1); \\n        else\\n            return (1/x)*myPow(x,n+1); \\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n\\t\\t// Optimal Solution Time O(logN) & Auxiliary Space O(logN)\\n        if(n==0) \\n\\t\\t\\treturn 1;\\n\\t\\t// Using Binary Exponentiation(Time O(logN))\\n\\t\\t// x^n=x^(n/2)*x^(n/2). So, recursive function is \\n\\t\\t// called logN times where y=x^(n/2) and function returns y*y\\n        double y = myPow(x,n/2);\\n        if(n%2==0)\\n            return y*y;\\n        else if(n < 0)\\n            return 1/x*y*y;\\n        else\\n            return x*y*y; \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3773206,
                "title": "java-simple-solution-runtime-0ms-beats100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public double myPow(double x, int n) {\\n      if (n == 0)\\n            return 1.0;\\n\\n            if (n == Integer.MIN_VALUE) \\n            {\\n                x = x * x;\\n                n = n / 2;\\n           }\\n\\n        if (n < 0) \\n        {\\n            x = 1 / x;\\n            n = -n;\\n        }\\n\\n        double result = 1.0;\\n        while (n > 0) \\n        {\\n            if (n % 2 == 1)\\n                result *= x;\\n\\n            x *= x;\\n            n /= 2;\\n        }\\n\\n        return result;\\n    }\\n}\\n```\\n\\n\\n\\n![e78315ef-8a9d-492b-9908-e3917f23eb31_1674946036.087042.jpeg](https://assets.leetcode.com/users/images/18ff039e-d2d0-4d30-89be-0628a63fec66_1689505192.1650789.jpeg)\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double myPow(double x, int n) {\\n      if (n == 0)\\n            return 1.0;\\n\\n            if (n == Integer.MIN_VALUE) \\n            {\\n                x = x * x;\\n                n = n / 2;\\n           }\\n\\n        if (n < 0) \\n        {\\n            x = 1 / x;\\n            n = -n;\\n        }\\n\\n        double result = 1.0;\\n        while (n > 0) \\n        {\\n            if (n % 2 == 1)\\n                result *= x;\\n\\n            x *= x;\\n            n /= 2;\\n        }\\n\\n        return result;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 915021,
                "title": "3-approach-for-your-interview-o-n-o-log-n-o-1",
                "content": "# <h4><strong> Approach 1: Brute Force O(n)  </strong></h4>\\n\\n```\\n\\tlet res= 1\\n    for(var i=0;i<b;i++){\\n\\t\\tres = res *a\\n\\t}\\n```\\n<hr> <hr><br> <br>\\n\\n# <h4><strong> Approach 2: Recursive approach O(logn)\\n```\\nvar myPow = function(a, b) {\\n    \\n  if(b==0)      return 1            // base case  \\n  else if(b==1) return a           // base case \\n  else if(b==-1)  return 1/a\\n  else if(b%2==0){\\n  \\t\\tlet t=myPow(a, b/2);\\n      return t*t\\n  }\\n  else if(b%2!=0){\\n  \\t\\treturn a*myPow(a,b-1)\\n  }\\n\\n};\\n\\n```\\nTry to dry run this, by recursion call stack \\n u\\'ll get it.\\n<hr><hr><br> <br>\\n <h4><strong> Approach 3: Using log properties O(1) </strong> </h4>\\n \\n\\n**step1:** primarily we are using `log properties`\\nie: \\n```\\nlet result = a(to the power b)\\nApplying log on both side, we get, \\nlog(res) = b*log(a)\\nres = exp(b*(log(a))\\n```\\n\\n\\n**step2**: problem arises, when a will be negative.\\nbecause log of negatives, isnt feasible\\nto handle that issue, \\ni\\'m first calculating` b*log(a)`\\nthen,` if b is odd`, then, multiply the result with` (-1)`\\nelse for `even` number of b\\'s, `return result`\\n\\n<br><br><hr><hr>\\n\\n```\\nvar myPow = function(a, b) {\\n    \\n    let flag = 0\\n\\t\\n\\t// checking if a is negative \\n    if(a<0) {\\n        a = Math.abs(a)\\n        if(b%2!=0) flag=1    \\n\\t\\tlet res =  Math.exp(  b*Math.log(a)  )\\n        return ( flag==1 ? res*-1 : res  )\\n    }\\n\\t\\n\\t\\n\\t\\n    // when a is not negative\\n    else return Math.exp(  (b)  *  Math.log(a)  )\\n};\\n\\n```",
                "solutionTags": [
                    "JavaScript",
                    "Recursion"
                ],
                "code": "```\\n\\tlet res= 1\\n    for(var i=0;i<b;i++){\\n\\t\\tres = res *a\\n\\t}\\n```\n```\\nvar myPow = function(a, b) {\\n    \\n  if(b==0)      return 1            // base case  \\n  else if(b==1) return a           // base case \\n  else if(b==-1)  return 1/a\\n  else if(b%2==0){\\n  \\t\\tlet t=myPow(a, b/2);\\n      return t*t\\n  }\\n  else if(b%2!=0){\\n  \\t\\treturn a*myPow(a,b-1)\\n  }\\n\\n};\\n\\n```\n```\\nlet result = a(to the power b)\\nApplying log on both side, we get, \\nlog(res) = b*log(a)\\nres = exp(b*(log(a))\\n```\n```\\nvar myPow = function(a, b) {\\n    \\n    let flag = 0\\n\\t\\n\\t// checking if a is negative \\n    if(a<0) {\\n        a = Math.abs(a)\\n        if(b%2!=0) flag=1    \\n\\t\\tlet res =  Math.exp(  b*Math.log(a)  )\\n        return ( flag==1 ? res*-1 : res  )\\n    }\\n\\t\\n\\t\\n\\t\\n    // when a is not negative\\n    else return Math.exp(  (b)  *  Math.log(a)  )\\n};\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3060365,
                "title": "c-java-100-solution-using-recursion-pow-x-n",
                "content": "# Complexity\\n- Time complexity: $$O(log(n))$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n``` C++ []\\nclass Solution {\\npublic:\\n    double myPow(double x, long long n) {\\n        if(n==0 || x==1)\\n            return 1;\\n        if(x==0)\\n            return 0;\\n\\n        if(n<0)\\n            return myPow(1/x,abs(n));\\n\\n        return (n%2==0 ? myPow(x*x,n/2) : x*myPow(x*x,n/2));\\n    }\\n};\\n```\\n``` Java []\\nclass Solution {\\n    public double myPow(double x, long n) {\\n        if(n==0 || x==1)\\n            return 1;\\n        if(x==0)\\n            return 0;\\n\\n        if(n<0)\\n            return myPow(1/x,Math.abs(n));\\n\\n        return (n%2==0 ? myPow(x*x,n/2) : x*myPow(x*x,n/2));\\n    }\\n}\\n```\\nUpvote and Code By: [Arnav Sharma](https://www.linkedin.com/in/arnavsharma2711/)",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Math",
                    "Divide and Conquer",
                    "Recursion"
                ],
                "code": "``` C++ []\\nclass Solution {\\npublic:\\n    double myPow(double x, long long n) {\\n        if(n==0 || x==1)\\n            return 1;\\n        if(x==0)\\n            return 0;\\n\\n        if(n<0)\\n            return myPow(1/x,abs(n));\\n\\n        return (n%2==0 ? myPow(x*x,n/2) : x*myPow(x*x,n/2));\\n    }\\n};\\n```\n``` Java []\\nclass Solution {\\n    public double myPow(double x, long n) {\\n        if(n==0 || x==1)\\n            return 1;\\n        if(x==0)\\n            return 0;\\n\\n        if(n<0)\\n            return myPow(1/x,Math.abs(n));\\n\\n        return (n%2==0 ? myPow(x*x,n/2) : x*myPow(x*x,n/2));\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 153357,
                "title": "detailed-comment-on-overflow-case",
                "content": "You can already see many solutions that handle overflow case so I am not going to describe that here. This comment is more about understanding the overflow case. I guess many people are confused around the edge case where n = INT_MAX (or -2147483648) and why doing n = -n doesn\\'t work. It has to do with the way signed numbers are stored in modern computers. Consider simple example of signed char. The range of values for signed char are -128 to 127.\\n\\nThe values are stored in memory as- \\n```\\nInteger     Binary\\n0           0000 0000\\n1           0000 0001\\n2           0000 0010\\n.....\\n127         0111 1111\\n-1          1111 1111\\n-2          1111 1110\\n.....\\n-128        1000 0000\\n```\\nNegative values are stored as 2\\'s complement. Which is calculated as -x = 2^n - x; where n is number of bits in the data type (32 bits for int, 8 bits for signed char, 64 bits for long in most compilers). Why do we need 2\\'s compliment? Let\\'s take an example using 8 bit system which is easy to work with . Let\\'s say you want to subtract 3 from 7\\n```\\n  7\\n- 3\\n---\\n  4\\n```\\nIn memory you would store -3 as 2^8 - 3 = 253. When you want to perform subtraction you simply add the number to 2\\'s  compliment of the number you need to subtract over modulo 256 field i.e. in our case (7 + 253) % 256 i.e. 260 % 256 = 4 which is same as what we expect.\\n\\nIf you see statement n = -n with n = INT_MIN, in assembly on ARM GCC 7.x compiler it looks like\\n```\\n        mov     r3, #-2147483648  ## Load INT_MIN in r3\\n        str     r3, [sp, #4]\\n        ldr     r3, [sp, #4]\\n        rsb     r3, r3, #0         ## Reverse subtract instruction: subtracts r3 from 0\\n        str     r3, [sp, #4]\\n```\\nOn intel X86-64 with gcc 8.x compiler it lookss like\\n```\\n        xor      eax, eax   ## puts 0 value in eax\\n        mov     dword ptr [rbp - 4], -214748364   ##loads -214748364 on stack\\n        sub     eax, dword ptr [rbp - 4] ## subtracts -214748364 from 0\\n```\\nOn different compilers for Intel you may see \\'neg\\' instruction being used which basically  puts 2\\'s compliment of the number in the same place in stack/register. \\n\\n**INT_MIN** value is stored in the memory as 2^32 - 2^31 = 2^31 in 2\\'s compliment form\\n\\nNow we can see how taking 2\\'s compliment of **INT_MIN** or subtracting it from 0 results in overflow - \\n```\\n2\\'s compliment of INT_MIN: 2^32-2^31 = 2^31\\n0+2^31 = 2^31\\n```\\n\\nThis results in the same number we started with i.e. **INT_MIN** (which is negative). For a solution like this - \\n```\\ndouble mypow(double x, int n) {\\n    if(x == 0.00000) return 0.0;\\n    if( n == 0) return 1.0;\\n    if(n < 0) {\\n        n = -n;\\n        x = 1/x;\\n    }\\n    return ( n % 2 == 0) ? mypow(x*x, n/2) : x*mypow(x*x, n/2);\\n}\\n```\\nTake input, x = 2.0, n = INT_MIN. The values at end of each recursive call go as follows, ultimately resulting in overflow of the x value - \\n```\\nn: -2147483648 x: 0.5\\nn: 1073741824 x: 4 << This happens because value of n is still negative in 2nd level of recusion which makes x = 1/0.25 = 4\\nn: 536870912 x: 16\\nn: 268435456 x: 256\\nn: 134217728 x: 65536\\nn: 67108864 x: 4.29497e+09\\nn: 33554432 x: 1.84467e+19\\nn: 16777216 x: 3.40282e+38\\nn: 8388608 x: 1.15792e+77\\nn: 4194304 x: 1.34078e+154\\nn: 2097152 x: inf\\nn: 1048576 x: inf\\nn: 524288 x: inf\\nn: 262144 x: inf\\nn: 131072 x: inf\\nn: 65536 x: inf\\nn: 32768 x: inf\\nn: 16384 x: inf\\nn: 8192 x: inf\\nn: 4096 x: inf\\nn: 2048 x: inf\\nn: 1024 x: inf\\nn: 512 x: inf\\nn: 256 x: inf\\nn: 128 x: inf\\nn: 64 x: inf\\nn: 32 x: inf\\nn: 16 x: inf\\nn: 8 x: inf\\nn: 4 x: inf\\nn: 2 x: inf\\nn: 1 x: inf\\n```",
                "solutionTags": [],
                "code": "```\\nInteger     Binary\\n0           0000 0000\\n1           0000 0001\\n2           0000 0010\\n.....\\n127         0111 1111\\n-1          1111 1111\\n-2          1111 1110\\n.....\\n-128        1000 0000\\n```\n```\\n  7\\n- 3\\n---\\n  4\\n```\n```\\n        mov     r3, #-2147483648  ## Load INT_MIN in r3\\n        str     r3, [sp, #4]\\n        ldr     r3, [sp, #4]\\n        rsb     r3, r3, #0         ## Reverse subtract instruction: subtracts r3 from 0\\n        str     r3, [sp, #4]\\n```\n```\\n        xor      eax, eax   ## puts 0 value in eax\\n        mov     dword ptr [rbp - 4], -214748364   ##loads -214748364 on stack\\n        sub     eax, dword ptr [rbp - 4] ## subtracts -214748364 from 0\\n```\n```\\n2\\'s compliment of INT_MIN: 2^32-2^31 = 2^31\\n0+2^31 = 2^31\\n```\n```\\ndouble mypow(double x, int n) {\\n    if(x == 0.00000) return 0.0;\\n    if( n == 0) return 1.0;\\n    if(n < 0) {\\n        n = -n;\\n        x = 1/x;\\n    }\\n    return ( n % 2 == 0) ? mypow(x*x, n/2) : x*mypow(x*x, n/2);\\n}\\n```\n```\\nn: -2147483648 x: 0.5\\nn: 1073741824 x: 4 << This happens because value of n is still negative in 2nd level of recusion which makes x = 1/0.25 = 4\\nn: 536870912 x: 16\\nn: 268435456 x: 256\\nn: 134217728 x: 65536\\nn: 67108864 x: 4.29497e+09\\nn: 33554432 x: 1.84467e+19\\nn: 16777216 x: 3.40282e+38\\nn: 8388608 x: 1.15792e+77\\nn: 4194304 x: 1.34078e+154\\nn: 2097152 x: inf\\nn: 1048576 x: inf\\nn: 524288 x: inf\\nn: 262144 x: inf\\nn: 131072 x: inf\\nn: 65536 x: inf\\nn: 32768 x: inf\\nn: 16384 x: inf\\nn: 8192 x: inf\\nn: 4096 x: inf\\nn: 2048 x: inf\\nn: 1024 x: inf\\nn: 512 x: inf\\nn: 256 x: inf\\nn: 128 x: inf\\nn: 64 x: inf\\nn: 32 x: inf\\nn: 16 x: inf\\nn: 8 x: inf\\nn: 4 x: inf\\nn: 2 x: inf\\nn: 1 x: inf\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2771360,
                "title": "pow-x-n-java-solution-easy-explanation",
                "content": "```\\n# FIRST APPOACH :- using Loop\\n// pow(x,n) = pow(2,5) = 2*2*2*2*2 = 32 ( Multiply x to the n times)\\n// we can run a loop from 1 to n and updating our ans by multplying x \\n\\nans = 1;\\nfor(int i=1;i<=n;i++){\\n        ans = ans*x;\\n   }\\n//The problem occur when we use loop is --> given constraint of n can have maximum value \\n//upto the 2^31-1 i.e. 2147483647,  that means Time complexity of Loop solution will be O(n).\\n\\n//what if pow(2, 2147483647) = that mean we have to multiply 2 to the 2147483647 times which is obviously not sufficient at all\\n\\n# SECOND APPROACH :-  Optimizing upto O(logn)\\nExample :- pow(2, 10)  \\n\\nwe can write 2^10 as\\n1. pow(x,n) = 2^10  == 2^(2*5) == (2^2)^5 ==  (4)^5 or (2*2)^5 \\n                2^10 == 4^5  that is :- if n is even answer will be    (x*x)^n/2\\nin 2^10 we have to multiply 2 to the 10 time but now we have to multiply 4 to the only 5 times to get the answer which is half of the 10\\n\\nwe can write 4^5 as\\n2. pow(x,n) = 4^5 == (4 )* 4^4\\n if n is odd answer will be   x * x^(n-1)\\n\\nwe can write 4^4 as\\n3. pow(x,n) = 4^4 == 4^(2*2) == (4^2)^2  == (16)^2\\n here n is even answer will be (x*x)^n/2 :- (16)^2 \\nfor calculating 4^4 we have to multiply 4 to the the 4 times but now we can get answer by multipplying 16 to the 2 times\\n\\nwe can write 16^2 as\\n4. pow(x,n) = 16^2 == 16^(2*1) == (16^2)^1 == (256)^1\\nhere n is even answer will be (x*x)^n/2 :- (256)^1\\nfor calculating 16^2 we have to multiply 16 to the 2 time now for getting answer we need to multiply 256 to the 1 time\\n\\n5. pow(x,n) = 256^1 here n is odd that is x * x^(n-1) :- 256 * (256)^0 :- 256 * 1 :- 256\\n\\n//Base case\\n//if(n==0)     for any given number if power is zero it\\'s value is 1 \\n//return 1;\\n\\n//our work is just to check given power is even or odd and according to them recusion calling is doing\\n//if(n%2==0)\\n//return myPow(x*x  ,  n/2);\\n\\n//else\\n//return x *  myPow(x,  n-1);\\n\\n\\nCASE WHEN n is -ve\\nif(n<0){\\n   n = -n;\\n   x = 1/x;\\n   }\\n   \\n   \\nclass Solution {\\n    public double myPow(double x, int n) {\\n\\t\\tlong nm = n;\\n\\t\\tif(n<0){\\n\\t\\t   nm = -nm;\\n\\t\\t   x = 1/x;\\n\\t\\t  }\\n        return pow(x,nm);\\n    }\\n    public double pow(double x, long n)\\n    {\\n        if(n==0)\\n            return 1;\\n\\t\\t\\t\\n        if(n%2==0)\\n            return pow(x*x, n/2);\\n        else\\n            return x * pow(x,n-1);\\n    }\\n}\\n\\nNOTE:-  we are taking n as long varibale suppose n value is -2147483648 and we are doing n = -n\\nif n is integer it will overflow because n = -(-2147483648) = 2147483648 \\nand int can hold max value 2147483647 that why we take n as long\\n\\nTIME COMPLEXITY: - O(logn)\\nexample:- 2^64\\nrecursion calls will be\\n2^64 --> (4)^32 -->(16)^16 -->(256)^8-->(65536)^4-->(4294967296)^2-->(1.84467....)^1-->(1.84467..)^0 \\n\\n64 --> 32-->16-->8-->4-->2-->1  :- this is G.P series (n--->n/2--->n/4-->n/8-->n/16-->n/32-->n/64)\\n  \\n  general term of G.P.\\nn/2^0 --> n/2^1 --> n/2^2 --> n/2^3-->.......n/2^k \\n\\ncomparing both \\nn/2^k = 1\\nn = 2^k\\ntak log on both side\\nlog(n) = log(2^k)\\nlog(n) = klog2\\ndivide both side by log2\\nk = log(n)\\nT.C :- log(n)\\n\\n\\n\\n\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\n# FIRST APPOACH :- using Loop\\n// pow(x,n) = pow(2,5) = 2*2*2*2*2 = 32 ( Multiply x to the n times)\\n// we can run a loop from 1 to n and updating our ans by multplying x \\n\\nans = 1;\\nfor(int i=1;i<=n;i++){\\n        ans = ans*x;\\n   }\\n//The problem occur when we use loop is --> given constraint of n can have maximum value \\n//upto the 2^31-1 i.e. 2147483647,  that means Time complexity of Loop solution will be O(n).\\n\\n//what if pow(2, 2147483647) = that mean we have to multiply 2 to the 2147483647 times which is obviously not sufficient at all\\n\\n# SECOND APPROACH :-  Optimizing upto O(logn)\\nExample :- pow(2, 10)  \\n\\nwe can write 2^10 as\\n1. pow(x,n) = 2^10  == 2^(2*5) == (2^2)^5 ==  (4)^5 or (2*2)^5 \\n                2^10 == 4^5  that is :- if n is even answer will be    (x*x)^n/2\\nin 2^10 we have to multiply 2 to the 10 time but now we have to multiply 4 to the only 5 times to get the answer which is half of the 10\\n\\nwe can write 4^5 as\\n2. pow(x,n) = 4^5 == (4 )* 4^4\\n if n is odd answer will be   x * x^(n-1)\\n\\nwe can write 4^4 as\\n3. pow(x,n) = 4^4 == 4^(2*2) == (4^2)^2  == (16)^2\\n here n is even answer will be (x*x)^n/2 :- (16)^2 \\nfor calculating 4^4 we have to multiply 4 to the the 4 times but now we can get answer by multipplying 16 to the 2 times\\n\\nwe can write 16^2 as\\n4. pow(x,n) = 16^2 == 16^(2*1) == (16^2)^1 == (256)^1\\nhere n is even answer will be (x*x)^n/2 :- (256)^1\\nfor calculating 16^2 we have to multiply 16 to the 2 time now for getting answer we need to multiply 256 to the 1 time\\n\\n5. pow(x,n) = 256^1 here n is odd that is x * x^(n-1) :- 256 * (256)^0 :- 256 * 1 :- 256\\n\\n//Base case\\n//if(n==0)     for any given number if power is zero it\\'s value is 1 \\n//return 1;\\n\\n//our work is just to check given power is even or odd and according to them recusion calling is doing\\n//if(n%2==0)\\n//return myPow(x*x  ,  n/2);\\n\\n//else\\n//return x *  myPow(x,  n-1);\\n\\n\\nCASE WHEN n is -ve\\nif(n<0){\\n   n = -n;\\n   x = 1/x;\\n   }\\n   \\n   \\nclass Solution {\\n    public double myPow(double x, int n) {\\n\\t\\tlong nm = n;\\n\\t\\tif(n<0){\\n\\t\\t   nm = -nm;\\n\\t\\t   x = 1/x;\\n\\t\\t  }\\n        return pow(x,nm);\\n    }\\n    public double pow(double x, long n)\\n    {\\n        if(n==0)\\n            return 1;\\n\\t\\t\\t\\n        if(n%2==0)\\n            return pow(x*x, n/2);\\n        else\\n            return x * pow(x,n-1);\\n    }\\n}\\n\\nNOTE:-  we are taking n as long varibale suppose n value is -2147483648 and we are doing n = -n\\nif n is integer it will overflow because n = -(-2147483648) = 2147483648 \\nand int can hold max value 2147483647 that why we take n as long\\n\\nTIME COMPLEXITY: - O(logn)\\nexample:- 2^64\\nrecursion calls will be\\n2^64 --> (4)^32 -->(16)^16 -->(256)^8-->(65536)^4-->(4294967296)^2-->(1.84467....)^1-->(1.84467..)^0 \\n\\n64 --> 32-->16-->8-->4-->2-->1  :- this is G.P series (n--->n/2--->n/4-->n/8-->n/16-->n/32-->n/64)\\n  \\n  general term of G.P.\\nn/2^0 --> n/2^1 --> n/2^2 --> n/2^3-->.......n/2^k \\n\\ncomparing both \\nn/2^k = 1\\nn = 2^k\\ntak log on both side\\nlog(n) = log(2^k)\\nlog(n) = klog2\\ndivide both side by log2\\nk = log(n)\\nT.C :- log(n)\\n\\n\\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 345741,
                "title": "python3-pow-x-n",
                "content": "*  x^n = (1/x)^(-n)\\n*  x^(2n) = (x^n) *(x^n)\\n```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        # x**n == (1/x)**(-n) \\n        # by using the property above we can transform the negetive power problem to positive power problem\\n        # so that we solve the positive power situation, we also solved the negtive power situation.\\n        if n < 0:\\n            x = 1/x\\n            n = -n\\n        # We solve the positive power here:\\n        power = 1\\n        current_product = x\\n        while n > 0:\\n            # if n is odd numberm, we need to time x one more time\\n            if n%2 : \\n                power = power * current_product\\n            current_product = current_product * current_product\\n            n = n//2\\n        return power\\n            \\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        # x**n == (1/x)**(-n) \\n        # by using the property above we can transform the negetive power problem to positive power problem\\n        # so that we solve the positive power situation, we also solved the negtive power situation.\\n        if n < 0:\\n            x = 1/x\\n            n = -n\\n        # We solve the positive power here:\\n        power = 1\\n        current_product = x\\n        while n > 0:\\n            # if n is odd numberm, we need to time x one more time\\n            if n%2 : \\n                power = power * current_product\\n            current_product = current_product * current_product\\n            n = n//2\\n        return power\\n            \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3808188,
                "title": "c-recursion",
                "content": "# Code\\n```\\nclass Solution {\\npublic:\\n    double bin(double x,long long k){\\n        if(k==1)return x;\\n        double a = bin(x,k/2);\\n        if(k&1)return a*a*x;\\n        else return a*a;\\n    }\\n    double myPow(double x, int n) {\\n        if(n==0)return 1;\\n       long long k = long(abs(n));\\n       double ans = bin(x,k);\\n       if(n<0)return 1/ans;\\n       else return ans;\\n    }\\n};\\n```\\n![upvote (2).jpg](https://assets.leetcode.com/users/images/672361c6-5835-4275-ae39-0367d2738ca3_1690175812.506172.jpeg)\\n",
                "solutionTags": [
                    "C++",
                    "Math",
                    "Recursion"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    double bin(double x,long long k){\\n        if(k==1)return x;\\n        double a = bin(x,k/2);\\n        if(k&1)return a*a*x;\\n        else return a*a;\\n    }\\n    double myPow(double x, int n) {\\n        if(n==0)return 1;\\n       long long k = long(abs(n));\\n       double ans = bin(x,k);\\n       if(n<0)return 1/ans;\\n       else return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3807619,
                "title": "stepwise-image-explanation-binary-exponentiation-easy-to-understand",
                "content": "![image](https://assets.leetcode.com/users/images/6b2f6c9c-6e2f-4320-8d28-6902fd228c12_1690158819.5567503.jpeg)\\n\\n```\\nclass Solution {\\npublic:\\n    double myPow(double base, int power) \\n    {\\n        if (power < 0) { base = 1 / base; power = abs(power); }\\n        double ans = 1;\\n        while(power > 0)\\n        {\\n            if (power % 2 == 0) \\n            {\\n                base = base * base;\\n                power = power / 2;\\n            }\\n            else \\n            {\\n                ans = (ans * base);\\n                power--;\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    double myPow(double base, int power) \\n    {\\n        if (power < 0) { base = 1 / base; power = abs(power); }\\n        double ans = 1;\\n        while(power > 0)\\n        {\\n            if (power % 2 == 0) \\n            {\\n                base = base * base;\\n                power = power / 2;\\n            }\\n            else \\n            {\\n                ans = (ans * base);\\n                power--;\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 659996,
                "title": "binary-exponential-indepth-explanation",
                "content": "here is indepth explanation of binary exponential method as explained in https://cp-algorithms.com/algebra/binary-exp.html\\n\\n\\n![image](https://assets.leetcode.com/users/_ro/image_1590829480.png)\\n![image](https://assets.leetcode.com/users/_ro/image_1590829489.png)\\n\\nthis is how i did it\\n```\\ndouble binpow(double a, long long n)\\n    {\\n        double ans = 1;\\n        while(n)\\n        {\\n            if(n&1)\\n                ans *=a;\\n            a*=a;\\n            n>>=1;\\n        }\\n        return ans;\\n    }\\n    double myPow(double x, long long n) {    \\n      bool negative = (n<0) ? 1 : 0;\\n        n = abs(n);\\n        \\n      return negative ? 1 / binpow(x,n) : binpow(x,n);\\n        \\n    }\\n```\\n",
                "solutionTags": [],
                "code": "```\\ndouble binpow(double a, long long n)\\n    {\\n        double ans = 1;\\n        while(n)\\n        {\\n            if(n&1)\\n                ans *=a;\\n            a*=a;\\n            n>>=1;\\n        }\\n        return ans;\\n    }\\n    double myPow(double x, long long n) {    \\n      bool negative = (n<0) ? 1 : 0;\\n        n = abs(n);\\n        \\n      return negative ? 1 / binpow(x,n) : binpow(x,n);\\n        \\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1680111,
                "title": "my-recursive-solution",
                "content": "This is my recursive solution\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if(n==0){\\n            return 1;\\n        }\\n        if(n>0){\\n        double temp  = myPow(x,n/2);\\n        temp = temp*temp;\\n        \\n        if(n%2==0){\\n            return temp;\\n        }\\n        else{\\n            return temp*x;\\n        }\\n        }\\n        else{\\n            int t = n/2;\\n            double ans = myPow(x,-1*t);\\n            ans = ans*ans;\\n            if(n%2!=0)\\n                ans = ans*x;\\n            return 1/ans;\\n        }\\n    }\\n};\\n\\n```\\n",
                "solutionTags": [
                    "Recursion"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if(n==0){\\n            return 1;\\n        }\\n        if(n>0){\\n        double temp  = myPow(x,n/2);\\n        temp = temp*temp;\\n        \\n        if(n%2==0){\\n            return temp;\\n        }\\n        else{\\n            return temp*x;\\n        }\\n        }\\n        else{\\n            int t = n/2;\\n            double ans = myPow(x,-1*t);\\n            ans = ans*ans;\\n            if(n%2!=0)\\n                ans = ans*x;\\n            return 1/ans;\\n        }\\n    }\\n};\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 739166,
                "title": "c-recursive-approach-with-explanation",
                "content": "**So basically the approach here is to divide the n in even and odd (Since we need to find power for both positive and negative n)**\\n\\nEx:\\n\\n**x^n = x^n/2 * x^n/2;**\\n\\nif n is 0 return 1\\n\\nif n is even call recursive function for n = n/2\\n\\nand if n is odd call function x*x^n-1\\n\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if(n==0) return 1;\\n        \\n        double y = myPow(x,n/2);\\n        if(n%2==0){\\n            \\n            return y*y;\\n            \\n        }\\n        else{\\n            return n < 0 ? 1/x*y*y : x*y*y; \\n        }\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Recursion"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if(n==0) return 1;\\n        \\n        double y = myPow(x,n/2);\\n        if(n%2==0){\\n            \\n            return y*y;\\n            \\n        }\\n        else{\\n            return n < 0 ? 1/x*y*y : x*y*y; \\n        }\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 505306,
                "title": "c-detailed-solution-stack-diagrams-and-proper-explanation",
                "content": "My solution is a 0ms solution!\\nProper explanation and stack diagrams are added for better understanding.\\n\\n![image](https://assets.leetcode.com/users/debodirno/image_1581359427.png)\\n\\n```cpp\\n/**\\n * Stack diagrams for the various cases :\\n *\\n * For 2 ^ -4\\n * +              +\\n * |              |\\n * |              |\\n * |              |\\n * |              |\\n * |              |\\n * +--------------+\\n * |              |\\n * |   2, -1      +------------->   0.5\\n * +--------------+\\n * |              |\\n * |   2, -2      +------------->   0.5 x 0.5 = 0.25\\n * +--------------+\\n * |              |\\n * |   2, -4      +------------->   0.25 x 0.25 = 0.0625\\n * +--------------+\\n *\\n *\\n * For 2 ^ -5\\n * +              +\\n * |              |\\n * |              |\\n * |              |\\n * |              |\\n * |              |\\n * +--------------+\\n * |              |\\n * |   2, -1      +------------->   0.5\\n * +--------------+\\n * |              |\\n * |   2, -2      +------------->   0.5 x 0.5 = 0.25\\n * +--------------+\\n * |              |\\n * |   2, -5      +------------->   0.25 x 0.25 x 0.5 = 0.0625 x 0.5 = 0.03125\\n * +--------------+\\n *\\n *\\n * For 2 ^ 4\\n * +              +\\n * |              |\\n * |              |\\n * |              |\\n * |              |\\n * |              |\\n * +--------------+\\n * |              |\\n * |   2, 1       +------------->   2\\n * +--------------+\\n * |              |\\n * |   2, 2       +------------->   2 x 2 = 4\\n * +--------------+\\n * |              |\\n * |   2, 4       +------------->   4 x 4 = 16\\n * +--------------+\\n *\\n *\\n * For 2 ^ 5\\n * +              +\\n * |              |\\n * |              |\\n * |              |\\n * |              |\\n * |              |\\n * +--------------+\\n * |              |\\n * |   2, 1       +------------->   2\\n * +--------------+\\n * |              |\\n * |   2, 2       +------------->   2 x 2 = 4\\n * +--------------+\\n * |              |\\n * |   2, 5       +------------->   4 x 4 x 2 = 16 x 2 = 32\\n * +--------------+\\n */\\nclass Solution {\\npublic:\\n  double myPow(double x, int n) {\\n    // base conditions\\n    if (!n) {\\n      return 1;\\n    } else if (n == 1) {\\n      return x;\\n    } else if (n == -1) {\\n      return 1 / x;\\n    }\\n\\n    // keep recursing till it reaches either 1 or -1;\\n    // neglecting zero, since that cannot happen\\n    // once it reaches 1, power will hold x;\\n    // however, if it reaches -1, power will hold 1 / x.\\n    double power = myPow(x, n / 2);\\n    double base = (n > 0) ? x : 1 / x;\\n\\n    if (n % 2 == 0) { // if n is even, just multiplying the powers would do\\n      return power * power;\\n    } else { // if n is odd, multiplying the powers and then multiplying the base (x) or 1 / x would suffice\\n      return power * power * base;\\n    }\\n  }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Recursion"
                ],
                "code": "```cpp\\n/**\\n * Stack diagrams for the various cases :\\n *\\n * For 2 ^ -4\\n * +              +\\n * |              |\\n * |              |\\n * |              |\\n * |              |\\n * |              |\\n * +--------------+\\n * |              |\\n * |   2, -1      +------------->   0.5\\n * +--------------+\\n * |              |\\n * |   2, -2      +------------->   0.5 x 0.5 = 0.25\\n * +--------------+\\n * |              |\\n * |   2, -4      +------------->   0.25 x 0.25 = 0.0625\\n * +--------------+\\n *\\n *\\n * For 2 ^ -5\\n * +              +\\n * |              |\\n * |              |\\n * |              |\\n * |              |\\n * |              |\\n * +--------------+\\n * |              |\\n * |   2, -1      +------------->   0.5\\n * +--------------+\\n * |              |\\n * |   2, -2      +------------->   0.5 x 0.5 = 0.25\\n * +--------------+\\n * |              |\\n * |   2, -5      +------------->   0.25 x 0.25 x 0.5 = 0.0625 x 0.5 = 0.03125\\n * +--------------+\\n *\\n *\\n * For 2 ^ 4\\n * +              +\\n * |              |\\n * |              |\\n * |              |\\n * |              |\\n * |              |\\n * +--------------+\\n * |              |\\n * |   2, 1       +------------->   2\\n * +--------------+\\n * |              |\\n * |   2, 2       +------------->   2 x 2 = 4\\n * +--------------+\\n * |              |\\n * |   2, 4       +------------->   4 x 4 = 16\\n * +--------------+\\n *\\n *\\n * For 2 ^ 5\\n * +              +\\n * |              |\\n * |              |\\n * |              |\\n * |              |\\n * |              |\\n * +--------------+\\n * |              |\\n * |   2, 1       +------------->   2\\n * +--------------+\\n * |              |\\n * |   2, 2       +------------->   2 x 2 = 4\\n * +--------------+\\n * |              |\\n * |   2, 5       +------------->   4 x 4 x 2 = 16 x 2 = 32\\n * +--------------+\\n */\\nclass Solution {\\npublic:\\n  double myPow(double x, int n) {\\n    // base conditions\\n    if (!n) {\\n      return 1;\\n    } else if (n == 1) {\\n      return x;\\n    } else if (n == -1) {\\n      return 1 / x;\\n    }\\n\\n    // keep recursing till it reaches either 1 or -1;\\n    // neglecting zero, since that cannot happen\\n    // once it reaches 1, power will hold x;\\n    // however, if it reaches -1, power will hold 1 / x.\\n    double power = myPow(x, n / 2);\\n    double base = (n > 0) ? x : 1 / x;\\n\\n    if (n % 2 == 0) { // if n is even, just multiplying the powers would do\\n      return power * power;\\n    } else { // if n is odd, multiplying the powers and then multiplying the base (x) or 1 / x would suffice\\n      return power * power * base;\\n    }\\n  }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 358894,
                "title": "c-solution",
                "content": "Iterative O(logn) solution\\n```\\npublic class Solution \\n{\\n    public double MyPow(double x, int n) \\n    {\\n        long p = (long) n; \\n        \\n        if(p < 0 ) \\n        {\\n            p = -p;\\n            x = 1 / x;\\n        }\\n        \\n        double result = 1;\\n        while(p > 0) // x^13 = x^8 * x^4 * x^1   13 = (1101) in binary\\n        {\\n            if(p % 2 == 1) \\n                result = result * x;\\n            x = x * x;\\n            p = p / 2;\\n        }\\n        \\n        return result;\\n    }\\n}\\n```\\n\\nRecursive O(logn) solution.\\n```\\npublic class Solution \\n{\\n    public double MyPow(double x, int n) \\n    {\\n        if(n < 0) return 1/x * MyPow(1/x, -(n + 1));\\n        if(n == 0) return 1;\\n        if(n == 1) return x;\\n        if(n % 2 == 0) return MyPow(x * x, n/2);\\n        return x * MyPow(x * x, n/2);\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic class Solution \\n{\\n    public double MyPow(double x, int n) \\n    {\\n        long p = (long) n; \\n        \\n        if(p < 0 ) \\n        {\\n            p = -p;\\n            x = 1 / x;\\n        }\\n        \\n        double result = 1;\\n        while(p > 0) // x^13 = x^8 * x^4 * x^1   13 = (1101) in binary\\n        {\\n            if(p % 2 == 1) \\n                result = result * x;\\n            x = x * x;\\n            p = p / 2;\\n        }\\n        \\n        return result;\\n    }\\n}\\n```\n```\\npublic class Solution \\n{\\n    public double MyPow(double x, int n) \\n    {\\n        if(n < 0) return 1/x * MyPow(1/x, -(n + 1));\\n        if(n == 0) return 1;\\n        if(n == 1) return x;\\n        if(n % 2 == 0) return MyPow(x * x, n/2);\\n        return x * MyPow(x * x, n/2);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3807610,
                "title": "python-simple-recursive",
                "content": "# Intuition\\n\\nDivide and Conquer\\n\\nTake $x^{10}$ and  as example\\n\\n$x^{10} = x^5 * x^5 * x^0$\\n$x^5 = x^2 * x^2 * x^1$\\n$x^2 = x^1 * x^1 * x^0$\\n\\n# Complexity\\n- Time complexity: $$O(logN)$$\\n\\n- Space complexity: $$O(logN)$$\\n\\n# Code\\n```\\nclass Solution:\\n    @cache\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0:\\n            return 1\\n        elif n == 1:\\n            return x\\n        elif n == -1:\\n            return 1/x\\n        return self.myPow(x, n//2) * self.myPow(x, n//2) * self.myPow(x, n%2)\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    @cache\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0:\\n            return 1\\n        elif n == 1:\\n            return x\\n        elif n == -1:\\n            return 1/x\\n        return self.myPow(x, n//2) * self.myPow(x, n//2) * self.myPow(x, n%2)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2364754,
                "title": "pow-x-n-iterative-and-recursive-solution-explanation",
                "content": "## Solution 1 : Iterative \"School\" Solution O(n)\\n### Intuition\\nLet\\'s start by looking at the inputs to the function. x is the number we want to raise to a power and n is the power we are going to raise x to. Something important to note is that n will be an integer, that means we can use the middle school definition of exponentiation to solve the problem.\\n[![image](https://assets.leetcode.com/users/images/ac8e025f-c24a-4ff8-a974-e66be9cc36e9_1659207221.4526417.png)](https://en.wikipedia.org/wiki/Exponentiation)\\nThere is a small catch though, n won\\'t excluively be positive integers, it can be any integer even including the negatives. To get around this we need to tap into two of our exponentiation rules.\\n[![image](https://assets.leetcode.com/users/images/5fc3cb0d-4e9e-4cbb-8cef-178da1de088f_1659207789.5562131.png)](https://en.wikipedia.org/wiki/Exponentiation)\\n[![image](https://assets.leetcode.com/users/images/dfbb0d80-7754-41e7-bbcc-56e3a69cab13_1659207698.4003837.png)](https://en.wikipedia.org/wiki/Exponentiation)\\nNow that we we know how account for positive integers, negative integers, and zero, we know how to handle any n input. The case for n = 0 lives on its own, but the solution for positive and negative integers are similar. Both require multiplying x by itself n times, but the negative case needs the extra step of taking that repeated multiplication and putting it all under 1.\\n### Algorithm\\n```\\nfunction pow(x, n)\\n\\tIf n equals 0\\n\\t\\treturn 1\\n\\n\\tIf n is negative\\n\\t\\tnegative_flag = True\\n\\t\\tn = |n|\\n\\n\\trepeated_multiplication = x\\n\\tFor i in [1, n]\\n\\t\\trepeated_multiplication *= x\\n\\n\\tif negative_flag\\n\\t\\treturn (1 / repeated_multiplication)\\n\\treturn repeated_multiplication\\n````\\nNow let\\'s put it all together into our Python code.\\n### Implementation\\n```\\ndef pow(x, n):\\n\\t# Take care of our unique base case\\n\\tif (n == 0):\\n\\t\\treturn 1\\n\\t\\n\\t# Take care of our negative case\\n\\tnegative_exponent = False\\n\\tif (n < 0):\\n\\t\\tnegative_exponent = True\\n\\t\\tn *= -1\\n\\t\\n\\t# Do the shared, repeated multiplication\\n\\trepeated_multiplication = x\\n\\tfor i in range(1, n):\\n\\t\\trepeated_multiplication *= x\\n\\t\\n\\t# Return 1 / repeated_multiplication if our original exponent was negative\\n\\tif (negative_exponent):\\n\\t\\treturn (1 / repeated_multiplication)\\n\\t# Return the normal repeated_multiplication otherwise\\n\\treturn repeated_multiplication\\n```\\n### Complexity Analysis\\nLet n be the exponent x is being raised to.\\n* Time Complexity O(n)\\nFor each multiplication there are exactly two elementary operations, multiplication and assignment, so each multiplication takes O(1) time. Since we have n O(1) steps, the time complexity of our iterative solution is O(n).\\n* Space Complexity O(1)\\nWe use a boolean value to store whether or not the original exponent was exponent and we use a real value to store the return value. Both booleans and real values use constant space therefore the space complexity of this solution is O(1).\\n## Solution 2 : Recursive Solution O(log n)\\n### Intuition\\nIf we look at one more exponentiation rule we can start to formulate changes to our solution.\\n[![image](https://assets.leetcode.com/users/images/e89e6741-67f8-46ad-b0f6-d51fc587d398_1659211707.598999.png)](https://en.wikipedia.org/wiki/Exponentiation)\\nWe can split apart our exponent into two smaller exponents to get the answer. The next logical step is answering the question, how do we split our exponent? The simplest way to split up numbers is in half. When we split a number in half there are two cases, an even and and odd case. If the number was originally even it will become two identical numbers (ex: 4 = 2 + 2). If the number was originally odd it will become two identical numbers plus one (ex: 5 = 2 + 2 + 1). That means we can split our exponent up into two identical subproblems.\\n![image](https://assets.leetcode.com/users/images/083c3f33-2e08-4a96-b6da-66173a15fe27_1659216690.4437017.png)\\nHow can we get around the repeated function calls to save some calculations? A common technique for getting around this is called \"memoization\" where intermediate results are saved, then used in place of a function call we have seen already.\\n### Algorithm\\n```\\nfunction repeated_multiplication(x, n)\\n\\tif n equals 0\\n\\t\\treturn 1\\n\\tintermediate = repeated_multiplication(x, floor(n / 2))\\n\\tif n is even\\n\\t\\treturn intermediate * intermediate\\n\\treturn intermediate * intermediate * x\\n```\\nThe memoization is hard to see, but it happens at `intermediate = repeated_multiplication(x, floor(n / 2))`. If we simply returned `repeated_multiplication(x, floor(n / 2)) * repeated_multiplication(x, floor(n / 2))` the function will still have to go down the same path twice, instead we go down it once, put it in our intermediate variable, then multiply the variable by itself. Now that we have a new method of calculating the repeated multiplication, we can replace it in our previous solution for something brand new.\\n### Implementation\\n```\\ndef repeated_multiplication(base, exponent):\\n\\tif (exponent == 0):\\n\\t\\treturn 1\\n\\tintermediate = repeated_multiplication(base, exponent // 2)\\n\\tif ((exponent % 2) == 0):\\n\\t\\treturn intermediate * intermediate\\n\\treturn intermediate * intermediate * base\\n\\ndef pow(x, n):\\n\\t# The repeated_multiplication helper function takes care of n = 0 case\\n\\t\\n\\t# Take care of the negative case\\n\\tif (n < 0):\\n\\t\\treturn (1 / repeated_multiplication(x, n * -1))\\n\\t\\n\\t# Take care of the nonnegative case\\n\\treturn repeated_multiplication(x, n)\\n```\\n### Complexity Analysis\\nLet n be the exponent x is being raised to. Consider the first recursive step where we have n multiplications. To move onto the next step we divide n by 2, now we have n/2 multiplications. To move on to the next step we divide n/2 by 2, now we have n/4 multiplications. This process continues until the problem is solved.\\n[![image](https://assets.leetcode.com/users/images/d86aefc7-f7d8-4345-b477-4e99639ff992_1659215834.3239772.png)](https://www.geeksforgeeks.org/how-to-solve-time-complexity-recurrence-relations-using-recursion-tree-method/)\\nThe rest of our solution outside of the recursion consists of only elementary operations, therefore the resulting recurrence relation is T(n) = 2T(n/2) + 1.\\n* Time Complexity O(log n)\\nEach level in our recursion tree is made up of only elementary operations, so the time complexity of each level is O(1). By applying the [master theorem](https://brilliant.org/wiki/master-theorem/) to our recurrence relation we get O(log n) recursive calls. O(1) time over O(log n) recursive calls results in a total running time of O(log n).\\n* Space Complexity O(log n)\\nBy applying the master theorem to our recurrence relation we get O(log n) recursive calls. Each recursive call has itself and corresponding intermediate variable on the call stack, resulting in O(1) space complexity for each function call. O(1) memory over O(log n) recursive calls results in a total memory usage of O(log n).",
                "solutionTags": [
                    "Python",
                    "Math",
                    "Memoization",
                    "Iterator"
                ],
                "code": "```\\nfunction pow(x, n)\\n\\tIf n equals 0\\n\\t\\treturn 1\\n\\n\\tIf n is negative\\n\\t\\tnegative_flag = True\\n\\t\\tn = |n|\\n\\n\\trepeated_multiplication = x\\n\\tFor i in [1, n]\\n\\t\\trepeated_multiplication *= x\\n\\n\\tif negative_flag\\n\\t\\treturn (1 / repeated_multiplication)\\n\\treturn repeated_multiplication\\n```\n```\\ndef pow(x, n):\\n\\t# Take care of our unique base case\\n\\tif (n == 0):\\n\\t\\treturn 1\\n\\t\\n\\t# Take care of our negative case\\n\\tnegative_exponent = False\\n\\tif (n < 0):\\n\\t\\tnegative_exponent = True\\n\\t\\tn *= -1\\n\\t\\n\\t# Do the shared, repeated multiplication\\n\\trepeated_multiplication = x\\n\\tfor i in range(1, n):\\n\\t\\trepeated_multiplication *= x\\n\\t\\n\\t# Return 1 / repeated_multiplication if our original exponent was negative\\n\\tif (negative_exponent):\\n\\t\\treturn (1 / repeated_multiplication)\\n\\t# Return the normal repeated_multiplication otherwise\\n\\treturn repeated_multiplication\\n```\n```\\nfunction repeated_multiplication(x, n)\\n\\tif n equals 0\\n\\t\\treturn 1\\n\\tintermediate = repeated_multiplication(x, floor(n / 2))\\n\\tif n is even\\n\\t\\treturn intermediate * intermediate\\n\\treturn intermediate * intermediate * x\\n```\n```\\ndef repeated_multiplication(base, exponent):\\n\\tif (exponent == 0):\\n\\t\\treturn 1\\n\\tintermediate = repeated_multiplication(base, exponent // 2)\\n\\tif ((exponent % 2) == 0):\\n\\t\\treturn intermediate * intermediate\\n\\treturn intermediate * intermediate * base\\n\\ndef pow(x, n):\\n\\t# The repeated_multiplication helper function takes care of n = 0 case\\n\\t\\n\\t# Take care of the negative case\\n\\tif (n < 0):\\n\\t\\treturn (1 / repeated_multiplication(x, n * -1))\\n\\t\\n\\t# Take care of the nonnegative case\\n\\treturn repeated_multiplication(x, n)\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 2151812,
                "title": "c-5-lines-of-code-runtime-0-ms-faster-than-100-00",
                "content": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double res = 1;\\n        while (n) {\\n            if (n % 2) res = n > 0 ? res * x : res / x;\\n            x = x * x;\\n            n /= 2;\\n        }\\n        return res;\\n    }\\n\\t//If you like please upvote for others help\\n};\\n```\\n\\n![image](https://assets.leetcode.com/users/images/80e6a992-cbf9-493f-b7f7-8ecd277dcbf5_1655222885.2281206.png)\\n",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double res = 1;\\n        while (n) {\\n            if (n % 2) res = n > 0 ? res * x : res / x;\\n            x = x * x;\\n            n /= 2;\\n        }\\n        return res;\\n    }\\n\\t//If you like please upvote for others help\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1909442,
                "title": "100-fastest-swift-solution-time-o-log-n-space-o-log-n",
                "content": "```\\nclass Solution {\\n    // - Complexity:\\n    //   - time: O(log n), where n is the power value.\\n    //   - space: O(log n), where n is the power value.\\n    \\n    func myPow(_ x: Double, _ n: Int) -> Double {\\n        guard n != 0 else { return 1 }\\n\\n        var x = x\\n        var n = n\\n\\n        if n < 0 {\\n            n = -n\\n            x = 1 / x\\n        }\\n        return n % 2 == 0 ? myPow(x * x, n / 2) : x * myPow(x * x, n / 2)\\n    }\\n\\n}\\n```\\n\\nLet me know in comments if you have any doubts. I will be happy to answer.\\n\\nPlease upvote if you found the solution useful.",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\nclass Solution {\\n    // - Complexity:\\n    //   - time: O(log n), where n is the power value.\\n    //   - space: O(log n), where n is the power value.\\n    \\n    func myPow(_ x: Double, _ n: Int) -> Double {\\n        guard n != 0 else { return 1 }\\n\\n        var x = x\\n        var n = n\\n\\n        if n < 0 {\\n            n = -n\\n            x = 1 / x\\n        }\\n        return n % 2 == 0 ? myPow(x * x, n / 2) : x * myPow(x * x, n / 2)\\n    }\\n\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 165467,
                "title": "java-python-logical-thinking",
                "content": "```\\nx^n\\n= x * (x ^ (n - 1)) // cool, but not fast enough\\n\\n= (x * x) ^ (n / 2) // perfect if n is positive even \\n= x * (x * x) ^ (n / 2) // perfect if n is positive odd\\n\\nif n is negative, we use -n instead and get reciprocal at last.\\n```\\n****\\n**Java**\\n```\\n    public double myPow(double x, int n) {\\n        if (n < 0)\\n            return 1 / myPowFrom(x, -n);\\n        \\n        return myPowFrom(x, n);\\n    }\\n    \\n    private double myPowFrom(double x, int n) {\\n        if (n == 0)\\n            return 1;\\n\\n        return n % 2 == 0 \\n            ? myPowFrom(x * x, n / 2) \\n            : myPowFrom(x * x, n / 2) * x;\\n    }\\n```\\n**Python**\\n```\\n    def myPow(self, x, n):\\n        if n < 0:\\n            return 1 / self.myPowRecur(x, -n)\\n        return self.myPowRecur(x, n)\\n        \\n    def myPowRecur(self, x, n):\\n        # Base case.\\n        if n == 0:\\n            return 1\\n        \\n        if n % 2 == 0:\\n            return self.myPowRecur(x * x, int(n / 2))\\n        # else:\\n        return x * self.myPowRecur(x * x, int(n / 2))\\n```\\n**(\\u4EBA \\u2022\\u0348\\u1D17\\u2022\\u0348)** Thanks for voting!",
                "solutionTags": [],
                "code": "```\\nx^n\\n= x * (x ^ (n - 1)) // cool, but not fast enough\\n\\n= (x * x) ^ (n / 2) // perfect if n is positive even \\n= x * (x * x) ^ (n / 2) // perfect if n is positive odd\\n\\nif n is negative, we use -n instead and get reciprocal at last.\\n```\n```\\n    public double myPow(double x, int n) {\\n        if (n < 0)\\n            return 1 / myPowFrom(x, -n);\\n        \\n        return myPowFrom(x, n);\\n    }\\n    \\n    private double myPowFrom(double x, int n) {\\n        if (n == 0)\\n            return 1;\\n\\n        return n % 2 == 0 \\n            ? myPowFrom(x * x, n / 2) \\n            : myPowFrom(x * x, n / 2) * x;\\n    }\\n```\n```\\n    def myPow(self, x, n):\\n        if n < 0:\\n            return 1 / self.myPowRecur(x, -n)\\n        return self.myPowRecur(x, n)\\n        \\n    def myPowRecur(self, x, n):\\n        # Base case.\\n        if n == 0:\\n            return 1\\n        \\n        if n % 2 == 0:\\n            return self.myPowRecur(x * x, int(n / 2))\\n        # else:\\n        return x * self.myPowRecur(x * x, int(n / 2))\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 2781323,
                "title": "pow-x-n-using-recursion-100-faster",
                "content": "![image](https://assets.leetcode.com/users/images/073f4e42-78dc-4b6c-be1c-d57df5a51b11_1668528704.7679865.png)\\n\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if(n==0) return 1;\\n      if(n<0){\\n       n = abs(n);\\n        x = 1/x;\\n      }\\n      if(n%2==0) return myPow(x*x,n/2);\\n      else return x*myPow(x,n-1);\\n    }\\n};\\n\\n\\n",
                "solutionTags": [
                    "C",
                    "Recursion"
                ],
                "code": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if(n==0) return 1;\\n      if(n<0){\\n       n = abs(n);\\n        x = 1/x;\\n      }",
                "codeTag": "Java"
            },
            {
                "id": 2103223,
                "title": "c-solutions-4-approaches-brute-optimal-space-optimal",
                "content": "**1. Brute Force\\nCODE:**\\n\\n\\t // Brute Force TC - O(n) SC - O(1)\\n\\t\\t double myPow(double x, int n) {\\n\\t\\t\\tdouble ans = 1.0;\\n\\t\\t\\tfor(int i = 1; i <= abs(n); i++) {\\n\\t\\t\\t\\tans = ans * x;\\n\\t\\t\\t}\\n\\t\\t\\tif(n < 0)\\n\\t\\t\\t\\treturn 1/ans;\\n\\t\\t\\t return ans;\\n\\t\\t}\\n\\n**2. Recursive\\nCODE:**\\n\\n\\t\\t// Recursive Solution TC - O(logn) SC - O(logn)\\n\\t\\tdouble solve(double x, long long int n) {\\n\\t\\t\\tif(n == 0)\\n\\t\\t\\t\\treturn 1.0;\\n\\t\\t\\tif(n % 2 == 0)\\n\\t\\t\\t\\treturn solve(x * x, n/2);\\n\\t\\t\\telse\\n\\t\\t\\t\\treturn (x * solve(x, n-1));\\n\\t\\t}\\n\\t\\tdouble myPow(double x, int n) {\\n\\t\\t\\tdouble ans = 1.0;\\n\\t\\t\\tlong long int temp = abs(n);\\n\\t\\t\\tans = solve(x, temp);\\n\\t\\t\\tif(n<0)\\n\\t\\t\\t\\tans = 1/(ans);\\n\\t\\t\\treturn ans;\\n\\t\\t}\\n**3. Iterative \\nCODE:**\\n\\n\\t // Iterative Solution  TC - O(logn) SC - O(1)\\n\\t\\tdouble myPow(double x, int n) {\\n\\t\\t\\tdouble ans = 1.0;\\n\\t\\t\\tlong long temp = abs(n);\\n\\t\\t\\twhile(temp) {\\n\\t\\t\\t\\tif(temp % 2 != 0) {\\n\\t\\t\\t\\t\\tans = ans * x;      // 4 ^ 3  --> 4 * (4)^2\\n\\t\\t\\t\\t\\ttemp = temp - 1;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\tx = x * x;         // 2 ^ 10 --> (2 * 2) ^ 5   i.e  x = x * x, n = n / 2\\n\\t\\t\\t\\t\\ttemp = temp / 2;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tif(n<0)\\n\\t\\t\\t\\tans = 1/ans;\\n\\t\\t\\treturn ans;\\n\\t\\t}\\n\\t\\t\\n**4. Standard Library Function\\nCODE:**\\n\\n\\t// Using Standard Library Function TC - O(logn) SC - O(1)\\n\\t\\tdouble myPow(double x, int n) {\\n\\t\\t\\treturn (double)pow(x, n);\\n\\t\\t}",
                "solutionTags": [
                    "C",
                    "Math",
                    "Recursion"
                ],
                "code": "**1. Brute Force\\nCODE:**\\n\\n\\t // Brute Force TC - O(n) SC - O(1)\\n\\t\\t double myPow(double x, int n) {\\n\\t\\t\\tdouble ans = 1.0;\\n\\t\\t\\tfor(int i = 1; i <= abs(n); i++) {\\n\\t\\t\\t\\tans = ans * x;\\n\\t\\t\\t}\\n\\t\\t\\tif(n < 0)\\n\\t\\t\\t\\treturn 1/ans;\\n\\t\\t\\t return ans;\\n\\t\\t}\\n\\n**2. Recursive\\nCODE:**\\n\\n\\t\\t// Recursive Solution TC - O(logn) SC - O(logn)\\n\\t\\tdouble solve(double x, long long int n) {\\n\\t\\t\\tif(n == 0)\\n\\t\\t\\t\\treturn 1.0;\\n\\t\\t\\tif(n % 2 == 0)\\n\\t\\t\\t\\treturn solve(x * x, n/2);\\n\\t\\t\\telse\\n\\t\\t\\t\\treturn (x * solve(x, n-1));\\n\\t\\t}\\n\\t\\tdouble myPow(double x, int n) {\\n\\t\\t\\tdouble ans = 1.0;\\n\\t\\t\\tlong long int temp = abs(n);\\n\\t\\t\\tans = solve(x, temp);\\n\\t\\t\\tif(n<0)\\n\\t\\t\\t\\tans = 1/(ans);\\n\\t\\t\\treturn ans;\\n\\t\\t}\\n**3. Iterative \\nCODE:**\\n\\n\\t // Iterative Solution  TC - O(logn) SC - O(1)\\n\\t\\tdouble myPow(double x, int n) {\\n\\t\\t\\tdouble ans = 1.0;\\n\\t\\t\\tlong long temp = abs(n);\\n\\t\\t\\twhile(temp) {\\n\\t\\t\\t\\tif(temp % 2 != 0) {\\n\\t\\t\\t\\t\\tans = ans * x;      // 4 ^ 3  --> 4 * (4)^2\\n\\t\\t\\t\\t\\ttemp = temp - 1;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\tx = x * x;         // 2 ^ 10 --> (2 * 2) ^ 5   i.e  x = x * x, n = n / 2\\n\\t\\t\\t\\t\\ttemp = temp / 2;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tif(n<0)\\n\\t\\t\\t\\tans = 1/ans;\\n\\t\\t\\treturn ans;\\n\\t\\t}\\n\\t\\t\\n**4. Standard Library Function\\nCODE:**\\n\\n\\t// Using Standard Library Function TC - O(logn) SC - O(1)\\n\\t\\tdouble myPow(double x, int n) {\\n\\t\\t\\treturn (double)pow(x, n);\\n\\t\\t}",
                "codeTag": "Unknown"
            },
            {
                "id": 19756,
                "title": "lg-n-320ms-javasolution-9-lines",
                "content": "// main code is the the last line. \\n\\n\\npublic class Solution {\\n    public double pow(double x, int n) {\\n\\n        if (x == 0) return 0; \\n        if (x == 1) return 1;\\n        if (n == 0) return 1; \\n        if (n == 1) return x;\\n        if (x == -1) return (n % 2) == 0 ? 1 : -1; \\n        if (n < 0 ) return 1/ pow (x, -n);\\n        if (n == 2) return x * x;\\n        \\n        int halfPow = n/2; \\n\\n        return pow(pow(x,halfPow),2) * pow(x, n%2); \\n    }\\n}",
                "solutionTags": [],
                "code": "class Solution {\\n    public double pow(double x, int n) {\\n\\n        if (x == 0) return 0; \\n        if (x == 1) return 1;\\n        if (n == 0) return 1; \\n        if (n == 1) return x;\\n        if (x == -1) return (n % 2) == 0 ? 1 : -1; \\n        if (n < 0 ) return 1/ pow (x, -n);\\n        if (n == 2) return x * x;\\n        \\n        int halfPow = n/2; \\n\\n        return pow(pow(x,halfPow),2) * pow(x, n%2); \\n    }",
                "codeTag": "Java"
            },
            {
                "id": 2681500,
                "title": "java-basic-solution-easy-to-understand",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\n    public double myPow(double x, int n) {\\n    if(n == 0) return 1;\\n    if(n < 0) {\\n       return ((1 / x) * (myPow(1 / x, -(n + 1))));\\n    } \\n    return (n % 2 == 0) ? myPow(x * x, n / 2) : x * myPow(x * x, n / 2); \\n    }\\n}\\n```\\n# PLEASE UPVOTE IF IT WAS HELPFULL",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double myPow(double x, int n) {\\n    if(n == 0) return 1;\\n    if(n < 0) {\\n       return ((1 / x) * (myPow(1 / x, -(n + 1))));\\n    } \\n    return (n % 2 == 0) ? myPow(x * x, n / 2) : x * myPow(x * x, n / 2); \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1891099,
                "title": "python3-iteration-log-n-time-fast-easy-understanding",
                "content": "**If you like please upvote** \\u2764\\uD83D\\uDE80\\uD83D\\uDE80\\n```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        \\n        if n == 0: return 1\\n        nege = False\\n        \\n        if n < 0: \\n            nege = True\\n            n *= -1\\n        \\n        res = 1\\n        while n:\\n            if n % 2:\\n                res *= x\\n                n -= 1\\n            else:\\n                x *= x\\n                n = n//2\\n                \\n        if nege: return 1/res\\n        return res\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Divide and Conquer"
                ],
                "code": "```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        \\n        if n == 0: return 1\\n        nege = False\\n        \\n        if n < 0: \\n            nege = True\\n            n *= -1\\n        \\n        res = 1\\n        while n:\\n            if n % 2:\\n                res *= x\\n                n -= 1\\n            else:\\n                x *= x\\n                n = n//2\\n                \\n        if nege: return 1/res\\n        return res\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1513227,
                "title": "python-pure-recursion-with-memoization",
                "content": "```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        \\n        memo = {}      \\n        def power(x,n):\\n            if n in memo:return memo[n]\\n            if n==0: return 1\\n            elif n==1:return x\\n            elif n < 0:\\n                memo[n] = power(1/x,-n)\\n                return memo[n]\\n            elif n%2==0:\\n                memo[n] = power(x*x,n//2)\\n                return memo[n]\\n            else:\\n                memo[n] = x * power(x*x,(n-1)//2)\\n                return memo[n]\\n            \\n        return power(x,n)\\n```\\n\\n# \\u2714\\uFE0F Upvote will be appriciated",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Recursion",
                    "Memoization"
                ],
                "code": "```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        \\n        memo = {}      \\n        def power(x,n):\\n            if n in memo:return memo[n]\\n            if n==0: return 1\\n            elif n==1:return x\\n            elif n < 0:\\n                memo[n] = power(1/x,-n)\\n                return memo[n]\\n            elif n%2==0:\\n                memo[n] = power(x*x,n//2)\\n                return memo[n]\\n            else:\\n                memo[n] = x * power(x*x,(n-1)//2)\\n                return memo[n]\\n            \\n        return power(x,n)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1054687,
                "title": "python-simple-easy-understanding-solution-o-log-n",
                "content": "\\tclass Solution:\\n\\t\\tdef myPow(self, x: float, n: int) -> float:\\n\\t\\t\\tif n == 0: return 1\\n\\t\\t\\tif n < 0: n, x = -n, 1 / x\\n\\t\\t\\tlower = self.myPow(x, n//2)\\n\\t\\t\\treturn lower * lower * x if n % 2 else lower * lower",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Recursion"
                ],
                "code": "\\tclass Solution:\\n\\t\\tdef myPow(self, x: float, n: int) -> float:\\n\\t\\t\\tif n == 0: return 1\\n\\t\\t\\tif n < 0: n, x = -n, 1 / x\\n\\t\\t\\tlower = self.myPow(x, n//2)\\n\\t\\t\\treturn lower * lower * x if n % 2 else lower * lower",
                "codeTag": "Java"
            },
            {
                "id": 542477,
                "title": "javascript-o-log2-n",
                "content": "**algorithm**\\n- Base Case: `if (n === 0)  return 1;`\\n- Recurrence Relation: `N**N = N**(N/2 x 2) = N**(N/2) x N**(N/2)`\\n\\n**complexity**\\n- Time Complexity: O(log2 N)\\n- Space Complexity: O(log2 N)\\n```JavaScript\\n/**\\n * @param {number} x\\n * @param {number} n\\n * @return {number}\\n */\\nvar myPow = function(x, n) {\\n    if (n < 0) {\\n        x = 1 / x;\\n        n = -n;\\n    }\\n    return pow(x, n);\\n    \\n    function pow(x, n) {\\n        if (n == 0) {\\n            return 1.0;\\n        }\\n        const half = pow(x, parseInt(n / 2));\\n        if (n % 2 === 0) {\\n            return half * half;\\n        } else {\\n            return half * half * x;\\n        }\\n    }\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```JavaScript\\n/**\\n * @param {number} x\\n * @param {number} n\\n * @return {number}\\n */\\nvar myPow = function(x, n) {\\n    if (n < 0) {\\n        x = 1 / x;\\n        n = -n;\\n    }\\n    return pow(x, n);\\n    \\n    function pow(x, n) {\\n        if (n == 0) {\\n            return 1.0;\\n        }\\n        const half = pow(x, parseInt(n / 2));\\n        if (n % 2 === 0) {\\n            return half * half;\\n        } else {\\n            return half * half * x;\\n        }\\n    }\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 234748,
                "title": "c-recursive-and-iterative",
                "content": "[This post](https://leetcode.com/problems/powx-n/discuss/19546/Short-and-easy-to-understand-solution) shares a very neat recursive solution, which is rewritten in C++ below.\\n\\n```cpp\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if (!n) {\\n            return 1.0;\\n        }\\n        long p = labs(n);\\n        double power = myPow(x * x, p / 2) * (p % 2 ? x : 1);\\n        return n > 0 ? power : 1 / power;\\n    }\\n};\\n```\\n\\nAnd it can also be made iterative.\\n\\n```cpp\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        long p = labs(n);\\n        double pow = 1;\\n        while (p) {\\n            if (p % 2) {\\n                pow *= x;\\n            }\\n            x *= x;\\n            p /= 2;\\n        }\\n        return n > 0 ? pow : 1 / pow;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```cpp\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if (!n) {\\n            return 1.0;\\n        }\\n        long p = labs(n);\\n        double power = myPow(x * x, p / 2) * (p % 2 ? x : 1);\\n        return n > 0 ? power : 1 / power;\\n    }\\n};\\n```\n```cpp\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        long p = labs(n);\\n        double pow = 1;\\n        while (p) {\\n            if (p % 2) {\\n                pow *= x;\\n            }\\n            x *= x;\\n            p /= 2;\\n        }\\n        return n > 0 ? pow : 1 / pow;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 19682,
                "title": "5-lines-python-recursive-solution",
                "content": "    class Solution(object):\\n    def myPow(self, x, n):\\n        if n == 0: \\n            return 1\\n        if n == -1: \\n            return 1 / x\\n        return self.myPow(x * x, n / 2) * ([1, x][n % 2])",
                "solutionTags": [
                    "Python"
                ],
                "code": "    class Solution(object):\\n    def myPow(self, x, n):\\n        if n == 0: \\n            return 1\\n        if n == -1: \\n            return 1 / x\\n        return self.myPow(x * x, n / 2) * ([1, x][n % 2])",
                "codeTag": "Java"
            },
            {
                "id": 3086124,
                "title": "accepted-easy-solution-short-simple-best-method",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if(n==0)\\n            return 1;\\n        if(n==INT_MIN)\\n        {\\n            x*=x;\\n            n/=2;\\n        }\\n        if(n<0)\\n        {\\n            n=-n;\\n            x= 1/x;\\n        }\\n        if(n%2==0)\\n            return myPow(x*x, n/2);\\n        else\\n            return x*myPow(x*x, n/2);\\n                \\n        \\n    }\\n};\\n```\\nPlease **UPVOTE** if it helps \\u2764\\uFE0F\\uD83D\\uDE0A\\nThank You and Happy To Help You!!",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if(n==0)\\n            return 1;\\n        if(n==INT_MIN)\\n        {\\n            x*=x;\\n            n/=2;\\n        }\\n        if(n<0)\\n        {\\n            n=-n;\\n            x= 1/x;\\n        }\\n        if(n%2==0)\\n            return myPow(x*x, n/2);\\n        else\\n            return x*myPow(x*x, n/2);\\n                \\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2826259,
                "title": "python3-zero-line-solution-kind-of",
                "content": "# Code (0 line)\\n```\\nclass Solution:\\n    myPow = pow\\n```\\nthis *has* to be the shortest yet\\n\\nupvote if u liked it",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    myPow = pow\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1559121,
                "title": "50-pow-x-n-java-solution",
                "content": "```\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        double output = 1d;\\n        long power = n;\\n        if(power < 0){\\n            power = -1 * power;\\n        }\\n        while(power > 0){\\n            if(power % 2 == 1){\\n                output = output * x;\\n                power = power - 1;\\n            } else {\\n                x = x * x;\\n                power = power / 2;\\n            }\\n        }\\n        if(n<0){\\n            output = (double)(1.0) / (double)(output);\\n        }\\n        return output;\\n    }\\n}\\n```\\n\\nIf it helped, please UPVOTE. Happy Coding and keep up the good work.\\nFeel free to give your suggestions or correct me in the comments.\\nThanks for reading.\\uD83D\\uDE43",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        double output = 1d;\\n        long power = n;\\n        if(power < 0){\\n            power = -1 * power;\\n        }\\n        while(power > 0){\\n            if(power % 2 == 1){\\n                output = output * x;\\n                power = power - 1;\\n            } else {\\n                x = x * x;\\n                power = power / 2;\\n            }\\n        }\\n        if(n<0){\\n            output = (double)(1.0) / (double)(output);\\n        }\\n        return output;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 502857,
                "title": "c-simple-log-n-solution-detailed-explanation",
                "content": "```\\n/*\\n    https://leetcode.com/problems/powx-n/\\n    TC: O(log2n)\\n*/\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        // base case\\n        // +ve power\\n        if(n == 0 || n == 1)\\n            return n == 0 ? 1 : x;\\n        // -ve power\\n        if(n == -1)\\n            return 1 / x;\\n        \\n        double power = myPow(x, n/2);\\n        // if power n is even\\n        if(n % 2 == 0)\\n            return power * power;\\n        // odd power\\n        else {\\n            return power * power * (n < 0 ? (1 / x) : x);\\n        }\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Recursion"
                ],
                "code": "```\\n/*\\n    https://leetcode.com/problems/powx-n/\\n    TC: O(log2n)\\n*/\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        // base case\\n        // +ve power\\n        if(n == 0 || n == 1)\\n            return n == 0 ? 1 : x;\\n        // -ve power\\n        if(n == -1)\\n            return 1 / x;\\n        \\n        double power = myPow(x, n/2);\\n        // if power n is even\\n        if(n % 2 == 0)\\n            return power * power;\\n        // odd power\\n        else {\\n            return power * power * (n < 0 ? (1 / x) : x);\\n        }\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 19731,
                "title": "my-solution-in-java-using-divide-and-conquer",
                "content": "    public class Solution {\\n        public double myPow(double x, int n) {\\n            double res=1;\\n            while(n!=0)\\n            {\\n                if(n%2==0)\\n                {\\n                    \\n                    x=x*x;\\n                    n/=2;\\n                }\\n                else\\n                {\\n                    if(n>0)\\n                    {\\n                        res*=x;\\n                        n--;\\n                    }\\n                    else\\n                    {\\n                        res/=x;\\n                        n++;\\n                    }\\n                }\\n            }\\n            return res;\\n        }\\n    }",
                "solutionTags": [],
                "code": "class Solution {\\n        public double myPow(double x, int n) {\\n            double res=1;\\n            while(n!=0)\\n            {\\n                if(n%2==0)\\n                {\\n                    \\n                    x=x*x;\\n                    n/=2;\\n                }",
                "codeTag": "Java"
            },
            {
                "id": 19728,
                "title": "my-c-code-accepted-with-0ms",
                "content": "    double myPow(double x, int n){  \\n       if(n == 0)\\n         return 1;\\n       double t = myPow(x, n/2);\\n       if(n % 2 == 0)\\n            return t*t;\\n       else{\\n          if(n > 0)\\n             return x*t*t;\\n          else \\n            return (t*t) / x;\\n      }\\n    }",
                "solutionTags": [],
                "code": "    double myPow(double x, int n){  \\n       if(n == 0)\\n         return 1;\\n       double t = myPow(x, n/2);\\n       if(n % 2 == 0)\\n            return t*t;\\n       else{\\n          if(n > 0)\\n             return x*t*t;\\n          else \\n            return (t*t) / x;\\n      }\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 19583,
                "title": "my-answer-bit-operation-o-1",
                "content": "    class Solution {\\n    public:\\n        double pow(double x, int n) {\\n            double res=1;\\n             if(n<0){\\n                x=1/x;\\n                n=-n;\\n            }\\n            while(n>0){\\n                if(n&1==1){\\n                    res=res*x;\\n                }\\n                x*=x;\\n                n=n>>1;\\n            }\\n            return res;\\n        }\\n    };",
                "solutionTags": [],
                "code": "class Solution {\\n    public:\\n        double pow(double x, int n) {\\n            double res=1;\\n             if(n<0){\\n                x=1/x;\\n                n=-n;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 3811172,
                "title": "ex-amazon-explains-a-solution-with-a-video-python-javascript-java-and-c",
                "content": "# Solution Video\\n## *** Please upvote for this article. *** \\n\\nhttps://youtu.be/wxQ9ig_Nd8s\\n\\n# Subscribe to my channel from here. I have 229 videos as of July 25th\\nhttp://www.youtube.com/channel/UC9RMNwYTL3SXCP6ShLWVFww?sub_confirmation=1\\n\\n---\\n\\n# Approach\\nThis is based on Python Code. Other language might be different a bit.\\n\\n1. Define the `myPow` function that takes two parameters: `x` (the base) and `n` (the exponent). The function returns the value of `x` raised to the power of `n`.\\n\\n2. Define a helper function `calc_power(x, n)` that will be used for the recursive calculation. This function takes two parameters: `x` (the base) and `n` (the exponent).\\n\\n3. In the `calc_power` function:\\n   - Check the base case: If `x` is 0, return 0 (as anything raised to the power of 0 is 1).\\n   - Check another base case: If `n` is 0, return 1 (as anything raised to the power of 0 is 1).\\n   - If `n` is even, recursively calculate `res` by calling `calc_power(x, n // 2)` and then square `res` (`res = res * res`).\\n   - If `n` is odd, recursively calculate `res` by calling `calc_power(x, (n - 1) // 2)` and then square `res`, finally multiply it with `x` (`res = res * res * x`).\\n\\n4. Now, in the `myPow` function:\\n   - Get the absolute value of `n` using `abs(n)` and store it in a variable `abs_n`.\\n   - Calculate `ans` by calling `calc_power(x, abs_n)`, which gives us the value of `x` raised to the power of `abs_n`.\\n\\n5. If `n` is non-negative (`n >= 0`), return `ans`.\\n   - If `n` is negative (`n < 0`), return `1 / ans` (which gives us the result of `x` raised to the power of `-n`, i.e., the reciprocal).\\n\\nThe algorithm takes advantage of the properties of exponents and the concept that x^(n) can be calculated using x^(n/2) to avoid redundant calculations and improve the efficiency of the power calculation.\\n\\n```python []\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n\\n        def calc_power(x, n):\\n            if x == 0:\\n                return 0\\n            if n == 0:\\n                return 1\\n            \\n            res = calc_power(x, n // 2)\\n            res = res * res\\n\\n            if n % 2 == 1:\\n                return res * x\\n            \\n            return res\\n\\n        ans = calc_power(x, abs(n))\\n\\n        if n >= 0:\\n            return ans\\n        \\n        return 1 / ans \\n```\\n```javascript []\\nfunction myPow(x, n) {\\n    function calc_power(x, n) {\\n        if (x === 0) {\\n            return 0;\\n        }\\n        if (n === 0) {\\n            return 1;\\n        }\\n\\n        let res = calc_power(x, Math.floor(n / 2));\\n        res = res * res;\\n\\n        if (n % 2 === 1) {\\n            return res * x;\\n        }\\n\\n        return res;\\n    }\\n\\n    let ans = calc_power(x, Math.abs(n));\\n\\n    if (n >= 0) {\\n        return ans;\\n    }\\n\\n    return 1 / ans;\\n}\\n```\\n```java []\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        return binaryExp(x, (long) n);\\n    }\\n\\n    private double binaryExp(double x, long n) {\\n        if (n == 0) {\\n            return 1;\\n        }\\n       \\n        if (n < 0) {\\n            return 1.0 / binaryExp(x, -n);\\n        }\\n       \\n        if (n % 2 == 1) {\\n            return x * binaryExp(x * x, (n - 1) / 2);\\n        } else {\\n            return binaryExp(x * x, n / 2);\\n        }\\n    }\\n}\\n```\\n```C++ []\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        return binaryExp(x, static_cast<long>(n));\\n    }\\n\\nprivate:\\n    double binaryExp(double x, long n) {\\n        if (n == 0) {\\n            return 1;\\n        }\\n       \\n        if (n < 0) {\\n            return 1.0 / binaryExp(x, -n);\\n        }\\n       \\n        if (n % 2 == 1) {\\n            return x * binaryExp(x * x, (n - 1) / 2);\\n        } else {\\n            return binaryExp(x * x, n / 2);\\n        }\\n    }\\n};\\n```\\n",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python3",
                    "JavaScript"
                ],
                "code": "```python []\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n\\n        def calc_power(x, n):\\n            if x == 0:\\n                return 0\\n            if n == 0:\\n                return 1\\n            \\n            res = calc_power(x, n // 2)\\n            res = res * res\\n\\n            if n % 2 == 1:\\n                return res * x\\n            \\n            return res\\n\\n        ans = calc_power(x, abs(n))\\n\\n        if n >= 0:\\n            return ans\\n        \\n        return 1 / ans \\n```\n```javascript []\\nfunction myPow(x, n) {\\n    function calc_power(x, n) {\\n        if (x === 0) {\\n            return 0;\\n        }\\n        if (n === 0) {\\n            return 1;\\n        }\\n\\n        let res = calc_power(x, Math.floor(n / 2));\\n        res = res * res;\\n\\n        if (n % 2 === 1) {\\n            return res * x;\\n        }\\n\\n        return res;\\n    }\\n\\n    let ans = calc_power(x, Math.abs(n));\\n\\n    if (n >= 0) {\\n        return ans;\\n    }\\n\\n    return 1 / ans;\\n}\\n```\n```java []\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        return binaryExp(x, (long) n);\\n    }\\n\\n    private double binaryExp(double x, long n) {\\n        if (n == 0) {\\n            return 1;\\n        }\\n       \\n        if (n < 0) {\\n            return 1.0 / binaryExp(x, -n);\\n        }\\n       \\n        if (n % 2 == 1) {\\n            return x * binaryExp(x * x, (n - 1) / 2);\\n        } else {\\n            return binaryExp(x * x, n / 2);\\n        }\\n    }\\n}\\n```\n```C++ []\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        return binaryExp(x, static_cast<long>(n));\\n    }\\n\\nprivate:\\n    double binaryExp(double x, long n) {\\n        if (n == 0) {\\n            return 1;\\n        }\\n       \\n        if (n < 0) {\\n            return 1.0 / binaryExp(x, -n);\\n        }\\n       \\n        if (n % 2 == 1) {\\n            return x * binaryExp(x * x, (n - 1) / 2);\\n        } else {\\n            return binaryExp(x * x, n / 2);\\n        }\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2469256,
                "title": "python-easy-to-understand",
                "content": "2^-1 = 1 / 2^1\\n2^4 = 2 * 2 * 2 * 2 = (2^2)^2 = half * half \\n2^5 = 2 * 2 * 2 * 2 * 2 = 2 * (2^2)^2 = 2 * half * half\\n\\n```\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0:\\n            return 1\\n\\n        if n < 0:\\n            return 1 / self.myPow(x, -n)\\n\\n        half = self.myPow(x, n // 2)\\n        if n % 2 == 0:\\n            return half * half\\n\\n        return x * half * half\\n```\\n\\n",
                "solutionTags": [
                    "Python",
                    "Recursion"
                ],
                "code": "```\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0:\\n            return 1\\n\\n        if n < 0:\\n            return 1 / self.myPow(x, -n)\\n\\n        half = self.myPow(x, n // 2)\\n        if n % 2 == 0:\\n            return half * half\\n\\n        return x * half * half\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 2275484,
                "title": "c-0ms-beats-100-optimized",
                "content": "**PLEASE UPVOTE IF YOU FIND MY APPROACH HELPFUL, MEANS A LOT \\uD83D\\uDE0A**\\n\\n**Time Complexity : `O(logN)`**\\n\\n* Initialize ans as 1.0  and store a duplicate copy of n i.e power_of_x and make it positive.\\n* In a while loop keep on iterating until power_of_x becomes zero\\n* Now if power_of_x is an odd power then multiply x with ans ans reduce power_of_x by 1. Else multiply x with itself and divide power_of_x by 2.\\n* Now the entire binary exponentiation is complete and power_of_x becomes zero\\n* Check if n is a negative value, return 1/ans else return ans.\\n\\n```\\nclass Solution {\\npublic:\\n    \\n    double myPow(double x, int n) {\\n        double ans = 1.0;\\n        long long power_of_x = abs(n);\\n        \\n        while(power_of_x>0)\\n        {\\n            // if power is odd\\n            if(power_of_x%2==1)\\n            {\\n                ans = ans*x;\\n                power_of_x = power_of_x - 1;\\n            }\\n            // if power is even\\n            else if(power_of_x%2==0)\\n            {\\n                x = x*x;\\n                power_of_x = power_of_x / 2;\\n            }\\n        }\\n        \\n        if(n<0)\\n            return (double)1/(double)ans;\\n        \\n        return (double)ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    \\n    double myPow(double x, int n) {\\n        double ans = 1.0;\\n        long long power_of_x = abs(n);\\n        \\n        while(power_of_x>0)\\n        {\\n            // if power is odd\\n            if(power_of_x%2==1)\\n            {\\n                ans = ans*x;\\n                power_of_x = power_of_x - 1;\\n            }\\n            // if power is even\\n            else if(power_of_x%2==0)\\n            {\\n                x = x*x;\\n                power_of_x = power_of_x / 2;\\n            }\\n        }\\n        \\n        if(n<0)\\n            return (double)1/(double)ans;\\n        \\n        return (double)ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 19607,
                "title": "concise-c-solution",
                "content": "    public class Solution {\\n        public double MyPow(double x, int n) {\\n            if(n == 0) return 1;\\n            if(n == 1) return x;\\n            if(n == -1) return 1/x;\\n            \\n            var a = MyPow(x, n/2);\\n            return a * a * MyPow(x, n % 2);\\n        }\\n    }",
                "solutionTags": [],
                "code": "class Solution {\\n        public double MyPow(double x, int n) {\\n            if(n == 0) return 1;\\n            if(n == 1) return x;\\n            if(n == -1) return 1/x;\\n            \\n            var a = MyPow(x, n/2);\\n            return a * a * MyPow(x, n % 2);\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 3810572,
                "title": "100-recursion-js-sol-explained-with-intuition-approach",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n-     Recursive Approach.\\n- This approach is very efficient because it breaks down the problem of computing **$$x^n$$** into smaller and smaller subproblems. \\n- The base case of the recursion is when **n = 0**, in which case the function simply returns **1**.\\n\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n1. The function checks if **n** is equal to 0. \\n2. If it is, then the function simply returns **1**.\\n3. Otherwise, the function checks if **n** is negative. \\n4. If it is, then the function negates **x** and sets **n** to the absolute value of **n**.\\n5. The function then checks if **n** is even. \\n6. If it is, then the function ***recursively*** calls itself to compute $$x^(n/2)$$. \\n7. The result of this recursive call is then multiplied by itself to compute $$x^n$$.\\n8. Otherwise, the function returns $$x * myPow(x, n - 1)$$.\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n# Complexity\\n- Time complexity: $$O(log n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n\\n1. This is because the function recursively calls itself, halving the value of n each time. \\n2. The worst-case scenario is when n is a power of 2, in which case the function will make log n recursive calls.\\n\\n\\n\\n\\n\\n\\n\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n1. Because the function only stores a few local variables, and the recursive calls do not create any new objects.\\n2. So, the space complexity is not affected by the value of n.\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n# Code\\n```\\n/**\\n * @param {number} x\\n * @param {number} n\\n * @return {number}\\n */\\nvar myPow = function(x, n) {\\n  \\n  if (n === 0) {\\n    return 1;\\n  }\\n\\n  if (n < 0) {\\n    x = 1 / x;\\n    n = -n;\\n  }\\n\\n  if (n % 2 === 0) {\\n    \\n    let halfPower = myPow(x, n / 2);\\n    return halfPower * halfPower;\\n  }\\n  else {\\n    return x * myPow(x, n - 1);\\n  }  \\n};\\n```\\n\\n![cat img for upvote on LC.jpeg](https://assets.leetcode.com/users/images/27fedcbf-ed2a-4b6d-85fa-270ae74e0572_1690212326.246199.jpeg)\\n",
                "solutionTags": [
                    "JavaScript",
                    "Math",
                    "Recursion"
                ],
                "code": "```\\n/**\\n * @param {number} x\\n * @param {number} n\\n * @return {number}\\n */\\nvar myPow = function(x, n) {\\n  \\n  if (n === 0) {\\n    return 1;\\n  }\\n\\n  if (n < 0) {\\n    x = 1 / x;\\n    n = -n;\\n  }\\n\\n  if (n % 2 === 0) {\\n    \\n    let halfPower = myPow(x, n / 2);\\n    return halfPower * halfPower;\\n  }\\n  else {\\n    return x * myPow(x, n - 1);\\n  }  \\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3807795,
                "title": "beats-100-video-java-c-python",
                "content": "<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/ibyQI7Lo87Q\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>\\n\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if (n < 0) return 1.0 / pow(x, static_cast<long>(-n));\\n        return pow(x, static_cast<long>(n));\\n    }\\n    \\n    double pow(double x, long n) {\\n        if (n == 0) return 1;\\n        if (n % 2 == 0) return pow(x * x, n / 2);\\n        else return x * pow(x * x, (n - 1) / 2);\\n    }\\n};\\n```\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if (n < 0) return 1.0 / pow(x, (long long)-1*n);\\n        return pow(x, (long long) n);\\n    }\\n    \\n    double pow(double x, long long n) {\\n        if (n == 0) return 1;\\n        if (n % 2 == 0) return pow(x * x, n / 2);\\n        else return x * pow(x * x, (n - 1) / 2);\\n    }\\n};\\n\\n```\\n\\n```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0:\\n            return 1.0 / self.pow(x, -n)\\n        return self.pow(x, n)\\n    \\n    def pow(self, x: float, n: int) -> float:\\n        if n == 0:\\n            return 1.0\\n        if n % 2 == 0:\\n            return self.pow(x * x, n // 2)\\n        else:\\n            return x * self.pow(x * x, (n - 1) // 2)\\n\\n```",
                "solutionTags": [
                    "Java",
                    "Python",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if (n < 0) return 1.0 / pow(x, static_cast<long>(-n));\\n        return pow(x, static_cast<long>(n));\\n    }\\n    \\n    double pow(double x, long n) {\\n        if (n == 0) return 1;\\n        if (n % 2 == 0) return pow(x * x, n / 2);\\n        else return x * pow(x * x, (n - 1) / 2);\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if (n < 0) return 1.0 / pow(x, (long long)-1*n);\\n        return pow(x, (long long) n);\\n    }\\n    \\n    double pow(double x, long long n) {\\n        if (n == 0) return 1;\\n        if (n % 2 == 0) return pow(x * x, n / 2);\\n        else return x * pow(x * x, (n - 1) / 2);\\n    }\\n};\\n\\n```\n```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0:\\n            return 1.0 / self.pow(x, -n)\\n        return self.pow(x, n)\\n    \\n    def pow(self, x: float, n: int) -> float:\\n        if n == 0:\\n            return 1.0\\n        if n % 2 == 0:\\n            return self.pow(x * x, n // 2)\\n        else:\\n            return x * self.pow(x * x, (n - 1) // 2)\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3535395,
                "title": "simple-solution-c-java-with-explanation",
                "content": "# Brute force\\n<!-- Describe your approach to solving the problem. -->\\nThe brute force recursive solution is `pow(n) = n * pow(n - 1)`.\\nFor both iterative and recursive solution *time complexity:* $$O(n)$$\\nThis will get **Time Limit Exceeded** error, so we need to write a better solution than this.\\n\\n# Optimized solution\\nWe know $$ x^2 = x * x = (x * x)^1 $$\\nTo calculate $$x^2$$ recursively we will need to make 3 function calls,\\n`` f(x, 2) --> f(x, 1) --> f(x, 0) ``.\\nBut, to calculate $$ (x * x)^1 $$ we need 2 function calls, `` f(x * x, 1) --> f(x * x, 0)``.\\n\\nThis may seem like a minor change but this reduces the time complexity from linear to logarithmic. And is a significant improvement for larger power.\\n\\nFor even power ``f(x, n) = f(x * x, n / 2)``  \\nFor odd power ``f(x, n) = x * f(x, n - 1)`` \\n\\n**Negative power**\\n$$ x^{-n} = 1 / x^n$$\\n\\n*NOTE:* Dry run this algorithm for n = 5 and n = 8 (i.e., an even and odd power) for better understanding.\\n\\n# Complexity\\n- Time complexity: $$ O(log_2n) $$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$ O(log_2n) $$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n\\n```C++ []\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        \\n        if (n == 0) return 1.0;\\n        // even power\\n        if (n % 2 == 0) return myPow(x * x, n / 2);\\n        // odd power\\n        if (n % 2 == 1) return x * myPow(x, n - 1);\\n        // negative power\\n        return 1/myPow(x, -n);\\n    }\\n};\\n```\\n```Java []\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        \\n        if (n == 0) return 1.0;\\n        // even power\\n        if (n % 2 == 0)\\n            return myPow(x * x, n / 2);\\n        // odd power\\n        if (n % 2 == 1)\\n            return x * myPow(x, n - 1);        \\n        // negative power\\n        return 1/myPow(x, -n);\\n    }\\n}\\n```\\n**Will you upvote the solution if it was helpful?**",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Math",
                    "Recursion"
                ],
                "code": "```C++ []\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        \\n        if (n == 0) return 1.0;\\n        // even power\\n        if (n % 2 == 0) return myPow(x * x, n / 2);\\n        // odd power\\n        if (n % 2 == 1) return x * myPow(x, n - 1);\\n        // negative power\\n        return 1/myPow(x, -n);\\n    }\\n};\\n```\n```Java []\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        \\n        if (n == 0) return 1.0;\\n        // even power\\n        if (n % 2 == 0)\\n            return myPow(x * x, n / 2);\\n        // odd power\\n        if (n % 2 == 1)\\n            return x * myPow(x, n - 1);        \\n        // negative power\\n        return 1/myPow(x, -n);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3097532,
                "title": "beats-100-simple-c-python-java-very-short",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nInstead of mutlipying x one by one n times do it in logn time since we can  mutliply our number x with itself and divide our n by 2 and if n is odd we multiply our ans by x beacuse on dividing n by 2 we loss some x i.e 3/2 =1 (in reality it is $$x*x*x$$) but it comes only x*x so if n is odd multiply by extra x also. \\nAlso in negative numbers just take $$x$$ as $$1/x$$ and rest is same\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nIterative approach\\n# Complexity\\n- Time complexity:$$O(logn)$$\\n- - Space complexity:$$O(1)$$\\n# Code\\n```C++ []\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if(n==0)return 1;\\n        if(n<0)x=1/x;\\n        n=abs(n);\\n        double ans=1;\\n        while(n>0){\\n          if(n&1) ans=x*ans;\\n           x*=x;\\n           n>>=1;\\n        }\\n       \\n        return ans;\\n    }\\n};\\n```\\n```python []\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0:\\n            return 1\\n        if n < 0:\\n            x = 1/x\\n        n = abs(n)\\n        ans = 1\\n        while n > 0:\\n            if n & 1:\\n                ans = x * ans\\n            x *= x\\n            n >>= 1\\n        return ans\\n\\n```\\n```Java []\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        if(n==0) return 1;\\n        if(n<0) x = 1/x;\\n        n = Math.abs(n);\\n        double ans = 1;\\n        while(n > 0) {\\n            if((n & 1) == 1) ans = x * ans;\\n            x *= x;\\n            n >>= 1;\\n        }\\n        return ans;\\n    }\\n}\\n\\n```\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n",
                "solutionTags": [
                    "C++",
                    "Math",
                    "Recursion"
                ],
                "code": "```C++ []\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if(n==0)return 1;\\n        if(n<0)x=1/x;\\n        n=abs(n);\\n        double ans=1;\\n        while(n>0){\\n          if(n&1) ans=x*ans;\\n           x*=x;\\n           n>>=1;\\n        }\\n       \\n        return ans;\\n    }\\n};\\n```\n```python []\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0:\\n            return 1\\n        if n < 0:\\n            x = 1/x\\n        n = abs(n)\\n        ans = 1\\n        while n > 0:\\n            if n & 1:\\n                ans = x * ans\\n            x *= x\\n            n >>= 1\\n        return ans\\n\\n```\n```Java []\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        if(n==0) return 1;\\n        if(n<0) x = 1/x;\\n        n = Math.abs(n);\\n        double ans = 1;\\n        while(n > 0) {\\n            if((n & 1) == 1) ans = x * ans;\\n            x *= x;\\n            n >>= 1;\\n        }\\n        return ans;\\n    }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2098772,
                "title": "o-log-n-using-binary-exponentiation-easy-step-by-step-explanation",
                "content": "What is Binary Exponentiation?\\nBinary exponentiation (also known as exponentiation by squaring) is a trick which allows to calculate\\npow(x,n) using only O(log n) multiplications.\\n\\nLet us take an example of pow(2,10). In the approach of normal calculation we have to run our loop 10 times. Now, what if we perform binary expo here..\\nP(2,10) \\u2014\\u2014-> (2^5)^2\\np(2,5) \\u2014\\u2014\\u2014> (2^2)^2 * 2\\nP(2,2) \\u2014\\u2014\\u2014> 2 * 2\\n\\nNow , we  can see that in this computation of the power can be done in only 3 steps.\\n\\nIn general, the algorithm will be like:\\n* \\ta) if n is odd like pow(2,3) will be (2^2)*2.\\n* \\tb)if n is even like pow(2,4) will be (2^2)^2.\\n\\t(Note: Here this sign ^ represents power not xor)\\n\\t\\nHere is the code below in Python :\\n```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0: #if n is zero then result is always 1\\n          return(1.0)\\n        res = 1 # initializing res to 1\\n        t = abs(n) #storing n in a temporary variable to preserve its value\\n        while t != 0: #loop till t becomes zero\\n            if t%2 == 1: #checking if t is odd then we multiply res with x as discussed above in step (a).\\n                res *= x\\n            t >>= 1 #right shifting t so it will divide t by 2.\\n            x = x*x # calculating sq of x\\n       #Finally checking if n<0 (negative) then we return 1/res else res\\n\\t   if n < 0:\\n            return 1/res\\n        else:\\n            return res\\n\\n```\\n*Its Run Time Complexity is O(log n)*\\n\\n**Upvote if you liked the solution. Thanks..!!**",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0: #if n is zero then result is always 1\\n          return(1.0)\\n        res = 1 # initializing res to 1\\n        t = abs(n) #storing n in a temporary variable to preserve its value\\n        while t != 0: #loop till t becomes zero\\n            if t%2 == 1: #checking if t is odd then we multiply res with x as discussed above in step (a).\\n                res *= x\\n            t >>= 1 #right shifting t so it will divide t by 2.\\n            x = x*x # calculating sq of x\\n       #Finally checking if n<0 (negative) then we return 1/res else res\\n\\t   if n < 0:\\n            return 1/res\\n        else:\\n            return res\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2074126,
                "title": "java-fastest-solution-easy-to-understand",
                "content": "**Please upvote if the solution helped you**\\n*Feel free to ask any questions in the comment section*\\n```\\nclass Solution {\\n    public double myPow(double x, int y) {\\n       double temp;\\n        if( y == 0)\\n            return 1;\\n        temp = myPow(x, y/2); \\n          \\n        if (y%2 == 0)\\n            return temp*temp;\\n        else\\n        {\\n            if(y > 0)\\n                return x * temp * temp;\\n            else\\n                return (temp * temp) / x;\\n        }\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Recursion"
                ],
                "code": "```\\nclass Solution {\\n    public double myPow(double x, int y) {\\n       double temp;\\n        if( y == 0)\\n            return 1;\\n        temp = myPow(x, y/2); \\n          \\n        if (y%2 == 0)\\n            return temp*temp;\\n        else\\n        {\\n            if(y > 0)\\n                return x * temp * temp;\\n            else\\n                return (temp * temp) / x;\\n        }\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1870899,
                "title": "c-0-ms-easy-to-understand-beginner-friendly",
                "content": "\\tclass Solution {\\n\\tpublic:\\n\\t\\t\\tdouble power(double a,int b)\\n\\t\\t{\\n\\t\\tif(b==0)return 1;\\n\\t\\telse if(b%2==0)return power(a*a,b/2);\\n\\t\\telse return a*power(a*a,b/2);\\n\\t\\t}        \\n\\n\\t\\tdouble myPow(double x, int n) {\\n\\t\\tif(n<0)\\n\\t\\t{\\n\\t\\t\\tn=abs(n);\\n\\t\\t\\tx=1/x;\\n\\t\\t}\\n\\t\\treturn power(x,n);\\n\\t\\t}\\n\\t};",
                "solutionTags": [
                    "C++",
                    "C",
                    "Recursion"
                ],
                "code": "class Solution {\\n\\tpublic:\\n\\t\\t\\tdouble power(double a,int b)\\n\\t\\t{\\n\\t\\tif(b==0)return 1;\\n\\t\\telse if(b%2==0)return power(a*a,b/2);\\n\\t\\telse return a*power(a*a,b/2);\\n\\t\\t}",
                "codeTag": "Java"
            },
            {
                "id": 1078410,
                "title": "python-recursive-and-iterative",
                "content": "Python\\nThe same logic for both approches. There are 4 cases:\\n1. n == 0\\n\\tPow is always 1, no matter what value is x\\n2. n < 1\\n\\tSpecial treatment for x and n, convert it to normal case as n > 0\\n3. n > 0 and n is odd\\n\\tNormal case, standard way of calculating a power, step by step\\n4. n > 0 and n is even\\n\\tImprove the calculation, by changing x to x ** 2, and n to n // 2\\n\\n#### Recursive\\n```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        # Recursive\\n        if n == 0:\\n            return 1\\n        # Negative Power\\n        elif n < 0:\\n            return 1 / self.myPow(x, -n)\\n        # Even Power\\n        elif n % 2 == 0:\\n            return self.myPow(x * x, n / 2)\\n        # Odd Power\\n        else:\\n            return x * self.myPow(x, n - 1)\\n```\\n\\n\\n#### Iterative\\n```\\n\\nclass Solution(object):\\n    def myPow(self, x, n):\\n        \"\"\"\\n        :type x: float\\n        :type n: int\\n        :rtype: float\\n        \"\"\"\\n        # Default value to power 0\\n        pow = 1;\\n        # Iterative\\n        while n != 0:\\n            if n < 0:\\n                x = 1 / x\\n                n = -n\\n            elif n % 2 == 1:\\n                pow = x * pow\\n                n -= 1\\n            else:\\n                x = x * x\\n                n = n / 2\\n        return pow\\n```",
                "solutionTags": [
                    "Python",
                    "Recursion",
                    "Iterator"
                ],
                "code": "```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        # Recursive\\n        if n == 0:\\n            return 1\\n        # Negative Power\\n        elif n < 0:\\n            return 1 / self.myPow(x, -n)\\n        # Even Power\\n        elif n % 2 == 0:\\n            return self.myPow(x * x, n / 2)\\n        # Odd Power\\n        else:\\n            return x * self.myPow(x, n - 1)\\n```\n```\\n\\nclass Solution(object):\\n    def myPow(self, x, n):\\n        \"\"\"\\n        :type x: float\\n        :type n: int\\n        :rtype: float\\n        \"\"\"\\n        # Default value to power 0\\n        pow = 1;\\n        # Iterative\\n        while n != 0:\\n            if n < 0:\\n                x = 1 / x\\n                n = -n\\n            elif n % 2 == 1:\\n                pow = x * pow\\n                n -= 1\\n            else:\\n                x = x * x\\n                n = n / 2\\n        return pow\\n```",
                "codeTag": "Java"
            },
            {
                "id": 329785,
                "title": "python-lgn-run-time",
                "content": "Run time O(lgn), space O(1)\\n```\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0:\\n            x = 1/x\\n            n = -n\\n        ans = 1\\n        while n :\\n            if n % 2:\\n                ans = x * ans\\n                n -= 1\\n            else:\\n                x = x * x\\n                n = n // 2\\n        return ans\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0:\\n            x = 1/x\\n            n = -n\\n        ans = 1\\n        while n :\\n            if n % 2:\\n                ans = x * ans\\n                n -= 1\\n            else:\\n                x = x * x\\n                n = n // 2\\n        return ans\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 167899,
                "title": "python-solution",
                "content": "The trick is to evalute `a**n` as `(a**(n/2))**2` when `n` is even, and as `a*(a**((n-1)/2))**2` when `n` is odd.\\nRecursive algorithm: Time complexity O(log n), space complexity O(log n) (implicit stack for recursion)\\n```\\nclass Solution(object):\\n    def myPow(self, x, n):\\n        \"\"\"\\n        :type x: float\\n        :type n: int\\n        :rtype: float\\n        \"\"\"\\n        def recursion(x,n):\\n            if n == 0:\\n                return 1\\n            else:\\n                res = recursion(x, n / 2)\\n                if n % 2 == 1:\\n                    return res * res * x\\n                else:\\n                    return res * res\\n\\n        recip = False\\n        if n < 0:\\n            recip = True\\n            n = -n\\n        if recip:\\n            return 1 / recursion(x,n)\\n        else:\\n            return recursion(x,n)\\n```\\nIterative algorithm: Time complexity O(log n), space complexity O(1)\\n```\\nclass Solution(object):\\n    def myPow(self, x, n):\\n        \"\"\"\\n        :type x: float\\n        :type n: int\\n        :rtype: float\\n        \"\"\"\\n        if n == 0:\\n            return 1\\n        elif x == 0:\\n            return 0\\n        recip = False\\n        if n < 0:\\n            recip = True\\n            n = -n\\n        \\n        res = 1\\n        y = x\\n        while n > 0:\\n            if n % 2 == 1:\\n                res *= x\\n                n -= 1\\n            else:\\n                x = x * x\\n                n /= 2\\n                \\n        if recip:\\n            return 1 / res\\n        else:\\n            return res\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution(object):\\n    def myPow(self, x, n):\\n        \"\"\"\\n        :type x: float\\n        :type n: int\\n        :rtype: float\\n        \"\"\"\\n        def recursion(x,n):\\n            if n == 0:\\n                return 1\\n            else:\\n                res = recursion(x, n / 2)\\n                if n % 2 == 1:\\n                    return res * res * x\\n                else:\\n                    return res * res\\n\\n        recip = False\\n        if n < 0:\\n            recip = True\\n            n = -n\\n        if recip:\\n            return 1 / recursion(x,n)\\n        else:\\n            return recursion(x,n)\\n```\n```\\nclass Solution(object):\\n    def myPow(self, x, n):\\n        \"\"\"\\n        :type x: float\\n        :type n: int\\n        :rtype: float\\n        \"\"\"\\n        if n == 0:\\n            return 1\\n        elif x == 0:\\n            return 0\\n        recip = False\\n        if n < 0:\\n            recip = True\\n            n = -n\\n        \\n        res = 1\\n        y = x\\n        while n > 0:\\n            if n % 2 == 1:\\n                res *= x\\n                n -= 1\\n            else:\\n                x = x * x\\n                n /= 2\\n                \\n        if recip:\\n            return 1 / res\\n        else:\\n            return res\\n```",
                "codeTag": "Java"
            },
            {
                "id": 19652,
                "title": "1ms-4-lines-java-solution-o-1",
                "content": "    double ans= 1;\\n     for(long i = Math.abs((long)n); i > 0; i = i >> 1, x *=x) \\n          if((i & 1) == 1) ans *= x;\\n     return n > 0 ? ans : 1/ans;",
                "solutionTags": [
                    "Java"
                ],
                "code": "    double ans= 1;\\n     for(long i = Math.abs((long)n); i > 0; i = i >> 1, x *=x) \\n          if((i & 1) == 1) ans *= x;\\n     return n > 0 ? ans : 1/ans;",
                "codeTag": "Unknown"
            },
            {
                "id": 19565,
                "title": "iterative-c-solution",
                "content": "    class Solution {\\n    public:\\n    double pow(double x, int n) {\\n        if(n < 0)\\n            return 1/power(x, -n);\\n        else \\n            return power(x, n);\\n    }\\n    \\n    double power(double x, int n) {\\n        double result = 1;\\n        while(n>0)\\n        {\\n            if(n&0x01)\\n                result *= x;\\n            x *= x;\\n            n = n >> 1;\\n        }\\n        \\n        return result;\\n    }\\n};",
                "solutionTags": [],
                "code": "class Solution {\\n    public:\\n    double pow(double x, int n) {\\n        if(n < 0)\\n            return 1/power(x, -n);\\n        else \\n            return power(x, n);\\n    }",
                "codeTag": "Java"
            },
            {
                "id": 3808127,
                "title": "easiest-fast-exponential-using-python",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThe goal is to efficiently calculate the power base^exponent. The binary exponentiation algorithm reduces the number of multiplications required by dividing the exponent in half at each step.\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nThe code uses the binary exponentiation algorithm to calculate the result efficiently. The algorithm is based on the observation that:\\nTo compute base^exponent, we can calculate base^(exponent/2) and then square it.\\nIf exponent is odd, we can multiply the result by base.\\n\\nSteps:\\n\\n- The function first checks if exponent is 0. If it is, it returns 1, as any number raised to the power of 0 is 1.\\nThe function initializes result to 1 and is_negative to False.\\n- If exponent is negative, the function sets is_negative to True and takes the absolute value of exponent.\\n- The function then performs the binary exponentiation loop:\\n- It repeatedly divides exponent by 2 (exponent //= 2) and squares base (base *= base) at each step.\\n- If the current exponent (exponent) is odd (i.e., exponent % 2 == 1), it multiplies the result by the current base.\\n- After the loop, the function returns the result. If the original exponent was negative (is_negative is True), it returns the reciprocal of the result.\\n# Complexity\\n- Time complexity:$$O(log(n))$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:$$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def myPow(self, base: float, exponent: int) -> float:\\n        if exponent == 0:\\n            return 1\\n\\n        result = 1\\n        is_negative = False\\n\\n        if exponent < 0:\\n            is_negative = True\\n            exponent = -exponent\\n\\n        while exponent > 0:\\n            if exponent % 2 == 1:\\n                result *= base\\n            base *= base\\n            exponent //= 2\\n\\n        return 1 / result if is_negative else result\\n\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def myPow(self, base: float, exponent: int) -> float:\\n        if exponent == 0:\\n            return 1\\n\\n        result = 1\\n        is_negative = False\\n\\n        if exponent < 0:\\n            is_negative = True\\n            exponent = -exponent\\n\\n        while exponent > 0:\\n            if exponent % 2 == 1:\\n                result *= base\\n            base *= base\\n            exponent //= 2\\n\\n        return 1 / result if is_negative else result\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3807623,
                "title": "video-fast-and-furious-binary-exponentiation-for-pow-x-n",
                "content": "# Intuition\\nWhen faced with the task of calculating x raised to the power n, the first instinct might be to simply multiply x, n times. However, this approach is time-consuming and inefficient for large values of n. To optimize this, we could use binary exponentiation, a method that allows us to calculate large powers efficiently.\\n\\nhttps://youtu.be/FJr-Yuqr5QE\\n\\n# Approach\\nWe approach this problem using binary exponentiation which reduces the time complexity to O(log n) from O(n). If n is negative, we convert it to positive and take the reciprocal of the base x. We then repeatedly square the base (stored in `current_product`) and reduce the power to half until the power becomes zero. If at any point, the power is odd, we multiply the `result` by `current_product`. The final `result` will be the answer.\\n\\n# Complexity\\n- Time complexity: The time complexity of our algorithm is \\\\(O(\\\\log n)\\\\), as we are reducing the power to half in each step.\\n\\n- Space complexity: The space complexity of our algorithm is \\\\(O(1)\\\\), as we are using only a constant amount of space.\\n\\n# Code\\n```Python []\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0: \\n            x = 1 / x \\n            n = -n \\n        result = 1 \\n        current_product = x \\n        while n > 0: \\n            if n % 2 == 1: \\n                result = result * current_product \\n            current_product = current_product * current_product \\n            n = n // 2 \\n        return result \\n```\\n``` C++ []\\nclass Solution {\\npublic:\\n    double myPow(double x, long long n) {\\n        if(n < 0) {\\n            x = 1 / x;\\n            n = -n;\\n        }\\n\\n        double result = 1;\\n        double current_product = x;\\n\\n        while(n > 0) {\\n            if(n % 2 == 1) {\\n                result = result * current_product;\\n            }\\n            current_product = current_product * current_product;\\n            n = n / 2;\\n        }\\n\\n        return result;\\n    }\\n};\\n```\\n``` JavaScript []\\nvar myPow = function(x, n) {\\n    if(n < 0) {\\n        x = 1 / x;\\n        n = -n;\\n    }\\n\\n    let result = 1;\\n    let current_product = x;\\n\\n    while(n > 0) {\\n        if(n % 2 == 1) {\\n            result = result * current_product;\\n        }\\n        current_product = current_product * current_product;\\n        n = Math.floor(n / 2);\\n    }\\n\\n    return result;    \\n};\\n```\\n``` Java []\\nclass Solution {\\n    public double myPow(double x, long n) {\\n        if(n < 0) {\\n            x = 1 / x;\\n            n = -n;\\n        }\\n\\n        double result = 1;\\n        double current_product = x;\\n\\n        while(n > 0) {\\n            if(n % 2 == 1) {\\n                result = result * current_product;\\n            }\\n            current_product = current_product * current_product;\\n            n = n / 2;\\n        }\\n\\n        return result;\\n    }\\n}\\n```\\n``` C# []\\npublic class Solution {\\n    public double MyPow(double x, long n) {\\n        if(n < 0) {\\n            x = 1 / x;\\n            n = -n;\\n        }\\n\\n        double result = 1;\\n        double current_product = x;\\n\\n        while(n > 0) {\\n            if(n % 2 == 1) {\\n                result = result * current_product;\\n            }\\n            current_product = current_product * current_product;\\n            n = n / 2;\\n        }\\n\\n        return result;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python3",
                    "C#",
                    "JavaScript"
                ],
                "code": "```Python []\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0: \\n            x = 1 / x \\n            n = -n \\n        result = 1 \\n        current_product = x \\n        while n > 0: \\n            if n % 2 == 1: \\n                result = result * current_product \\n            current_product = current_product * current_product \\n            n = n // 2 \\n        return result \\n```\n``` C++ []\\nclass Solution {\\npublic:\\n    double myPow(double x, long long n) {\\n        if(n < 0) {\\n            x = 1 / x;\\n            n = -n;\\n        }\\n\\n        double result = 1;\\n        double current_product = x;\\n\\n        while(n > 0) {\\n            if(n % 2 == 1) {\\n                result = result * current_product;\\n            }\\n            current_product = current_product * current_product;\\n            n = n / 2;\\n        }\\n\\n        return result;\\n    }\\n};\\n```\n``` JavaScript []\\nvar myPow = function(x, n) {\\n    if(n < 0) {\\n        x = 1 / x;\\n        n = -n;\\n    }\\n\\n    let result = 1;\\n    let current_product = x;\\n\\n    while(n > 0) {\\n        if(n % 2 == 1) {\\n            result = result * current_product;\\n        }\\n        current_product = current_product * current_product;\\n        n = Math.floor(n / 2);\\n    }\\n\\n    return result;    \\n};\\n```\n``` Java []\\nclass Solution {\\n    public double myPow(double x, long n) {\\n        if(n < 0) {\\n            x = 1 / x;\\n            n = -n;\\n        }\\n\\n        double result = 1;\\n        double current_product = x;\\n\\n        while(n > 0) {\\n            if(n % 2 == 1) {\\n                result = result * current_product;\\n            }\\n            current_product = current_product * current_product;\\n            n = n / 2;\\n        }\\n\\n        return result;\\n    }\\n}\\n```\n``` C# []\\npublic class Solution {\\n    public double MyPow(double x, long n) {\\n        if(n < 0) {\\n            x = 1 / x;\\n            n = -n;\\n        }\\n\\n        double result = 1;\\n        double current_product = x;\\n\\n        while(n > 0) {\\n            if(n % 2 == 1) {\\n                result = result * current_product;\\n            }\\n            current_product = current_product * current_product;\\n            n = n / 2;\\n        }\\n\\n        return result;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3578585,
                "title": "c-binary-exponentiation-in-o-logn",
                "content": "# Approach\\nThe main idea behind this approach is to use the binary representation of `n` to efficiently calculate `pow(x, n)`\\n\\nThis approach uses the fact that any number `x` raised to an even power can be obtained by squaring `x` multiple times. This property allows us to reduce the number of multiplications required and hence reduces the time complexity.\\n\\n1. Initialize a variable `pow` to 1.0, which will store the result of `x` raised to the power of `n`\\n\\n2. Start with the binary representation of `n` and iterate from its least significant bit to the most significant bit\\n\\n3. If a bit is 1, it means that the corresponding power of `x` contributes to the final result. So, we multiply `pow` with `x` to include this power in the result\\n\\n4. After considering the current power of `x`, square `x`. This prepares `x` for the next iteration, where it will be raised to the power of 2\\n\\n5. Now, we divide `n` with 2\\n\\n6. Repeat steps 3-5 until all the bits of `n` becomes `0`\\n\\nThe key insight here is that by decomposing `n` into its binary representation, we can identify which powers of `x` are needed to compute the final result. Instead of simply multiplying `x` by itself `n` times, we only multiply when the corresponding bit in `n` is set to 1. This reduces the number of multiplications required\\n\\n### Example:\\n`pow(3, 5)` : `3^5`. 5 can be written as `0101` => $2^2+2^0$ => $3^5$ = $3^{2^2}*3^{2^0}$\\n\\n# Complexity\\n- Time complexity: O(logn)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n)\\n    {\\n        if(x == 1 || x == 0)\\n            return x;\\n\\n        double pow = 1.0;\\n\\n        while(n)\\n        {\\n            if(n%2 == 1 && n>0)\\n                pow *= x;\\n            else if(n%2 == -1 && n<0)\\n                pow /= x;\\n\\n            x *= x;\\n            n /= 2;\\n        }  \\n\\n        return pow;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Binary Search",
                    "Bit Manipulation"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n)\\n    {\\n        if(x == 1 || x == 0)\\n            return x;\\n\\n        double pow = 1.0;\\n\\n        while(n)\\n        {\\n            if(n%2 == 1 && n>0)\\n                pow *= x;\\n            else if(n%2 == -1 && n<0)\\n                pow /= x;\\n\\n            x *= x;\\n            n /= 2;\\n        }  \\n\\n        return pow;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1987227,
                "title": "java-c-python-javascript-kotlin-swift-o-n-time-beats-99-97-memory-speed-0ms-april-2022",
                "content": "***Hello it would be my pleasure to introduce myself Darian.***\\n\\n***Java***\\n```\\npublic class Solution {\\n        public double pow(double x, int m) {\\n            double temp=x;\\n            if(m==0)\\n            return 1;\\n            temp=pow(x,m/2);\\n            if(m%2==0)\\n            return temp*temp;\\n            else \\n            {\\n            if(m > 0)\\n                return x*temp*temp;\\n            else\\n                return (temp*temp)/x;\\n            }\\n          \\n    }\\n```\\n\\n***JavaScript***\\n```\\nvar myPow = function(x, n) {\\n  const on = n;\\n  let ans = 1;\\n  n = [...Math.abs(n).toString(2)];\\n  while(n.length) {\\n    const instruction = n.shift(); \\n    switch(instruction) {\\n      case \"0\": \\n        ans *= ans; \\n        break;\\n      case \"1\":\\n        ans *= ans;\\n        ans *= x; \\n        break;\\n    }\\n  } \\n  return on < 0 ? 1/ans : ans;\\n};\\n```\\n\\n***C++***\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double res = 1;\\n        while (n) {\\n            if (n % 2) res = n > 0 ? res * x : res / x;\\n            x = x * x;\\n            n /= 2;\\n        }\\n        return res;\\n    }\\n};\\n```\\n\\n***Python***\\n```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n\\n        def function(base=x, exponent=abs(n)):\\n            if exponent == 0:\\n                return 1\\n            elif exponent % 2 == 0:\\n                return function(base * base, exponent // 2)\\n            else:\\n                return base * function(base * base, (exponent - 1) // 2)\\n\\n        f = function()\\n        \\n        return float(f) if n >= 0 else 1/f\\n```\\n\\n***Kotlin***\\n```\\nclass Solution {\\n    fun myPow(x: Double, n: Int): Double {\\n        val num: Double = if (n < 0) 1/x else x\\n        var power: Long = Math.abs(n.toLong())\\n        var product: Double = num\\n        var res: Double = 1.0\\n        while (power > 0) {\\n            if (power%2 == 1L) {\\n                res = res * product\\n            }\\n            power = power/2\\n            product = product * product\\n        }\\n        return res\\n    }\\n}\\n```\\n\\n***Swift***\\n```\\nclass Solution {\\n    // - Complexity:\\n    //   - time: O(log n), where n is the power value.\\n    //   - space: O(log n), where n is the power value.\\n    \\n    func myPow(_ x: Double, _ n: Int) -> Double {\\n        guard n != 0 else { return 1 }\\n\\n        var x = x\\n        var n = n\\n\\n        if n < 0 {\\n            n = -n\\n            x = 1 / x\\n        }\\n        return n % 2 == 0 ? myPow(x * x, n / 2) : x * myPow(x * x, n / 2)\\n    }\\n\\n}\\n```\\n\\n***Consider upvote if useful! Hopefully it can be used in your advantage!***\\n***Take care brother, peace, love!***",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python",
                    "C",
                    "JavaScript",
                    "Swift",
                    "Kotlin"
                ],
                "code": "```\\npublic class Solution {\\n        public double pow(double x, int m) {\\n            double temp=x;\\n            if(m==0)\\n            return 1;\\n            temp=pow(x,m/2);\\n            if(m%2==0)\\n            return temp*temp;\\n            else \\n            {\\n            if(m > 0)\\n                return x*temp*temp;\\n            else\\n                return (temp*temp)/x;\\n            }\\n          \\n    }\\n```\n```\\nvar myPow = function(x, n) {\\n  const on = n;\\n  let ans = 1;\\n  n = [...Math.abs(n).toString(2)];\\n  while(n.length) {\\n    const instruction = n.shift(); \\n    switch(instruction) {\\n      case \"0\": \\n        ans *= ans; \\n        break;\\n      case \"1\":\\n        ans *= ans;\\n        ans *= x; \\n        break;\\n    }\\n  } \\n  return on < 0 ? 1/ans : ans;\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double res = 1;\\n        while (n) {\\n            if (n % 2) res = n > 0 ? res * x : res / x;\\n            x = x * x;\\n            n /= 2;\\n        }\\n        return res;\\n    }\\n};\\n```\n```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n\\n        def function(base=x, exponent=abs(n)):\\n            if exponent == 0:\\n                return 1\\n            elif exponent % 2 == 0:\\n                return function(base * base, exponent // 2)\\n            else:\\n                return base * function(base * base, (exponent - 1) // 2)\\n\\n        f = function()\\n        \\n        return float(f) if n >= 0 else 1/f\\n```\n```\\nclass Solution {\\n    fun myPow(x: Double, n: Int): Double {\\n        val num: Double = if (n < 0) 1/x else x\\n        var power: Long = Math.abs(n.toLong())\\n        var product: Double = num\\n        var res: Double = 1.0\\n        while (power > 0) {\\n            if (power%2 == 1L) {\\n                res = res * product\\n            }\\n            power = power/2\\n            product = product * product\\n        }\\n        return res\\n    }\\n}\\n```\n```\\nclass Solution {\\n    // - Complexity:\\n    //   - time: O(log n), where n is the power value.\\n    //   - space: O(log n), where n is the power value.\\n    \\n    func myPow(_ x: Double, _ n: Int) -> Double {\\n        guard n != 0 else { return 1 }\\n\\n        var x = x\\n        var n = n\\n\\n        if n < 0 {\\n            n = -n\\n            x = 1 / x\\n        }\\n        return n % 2 == 0 ? myPow(x * x, n / 2) : x * myPow(x * x, n / 2)\\n    }\\n\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1869646,
                "title": "fast-power-algorithm-binary-exponentiation",
                "content": "[Leetcode](https://leetcode.com/) [50. Pow(x, n)](https://leetcode.com/problems/powx-n/).\\n\\n***By Frank Luo***\\n\\nWe know how to find $2.0$ raised to the power $10$. The easiest way is to multiply $10$ times $2.0$ by loop, but what if we have to find $2.0$ raised to the power very large number such as $10000$ or more?\\n\\nWe will discuss how to find the solution of such problems by using an fast, efficient algorithm.\\n\\n# Brute Force\\n\\nWe multiply $a$ to itself $b$ times. That is, $a^b = \\\\underbrace{a \\\\times a \\\\dots \\\\times a}_b$. \\n\\nA simple java implementation of that would be:\\n\\n```java\\n    public static double myPow(double x, int n) {\\n        if (n == 0 || x == 1) {\\n            return 1;\\n        } else if (x == 0) {\\n            return 0;\\n        }\\n\\n        double ans = x;\\n        boolean isNegative = false;\\n        long nLong = n;\\n        if (nLong < 0) {\\n            nLong = -nLong;\\n            isNegative = true;\\n        }\\n\\n        for (int i = 1; i < nLong; i++) {\\n            ans = ans * x;\\n        }\\n\\n        if (isNegative) {\\n            ans = 1 / ans;\\n        }\\n\\n        return ans;\\n    }\\n```\\n\\n## Analysis\\n\\n- **Time Complexity**: $O(n)$\\n- **Space Complexity**: $O(1)$\\n\\n# Exponentiation by Squaring\\n\\nExponentiation by Squaring can help us in finding the powers of large positive integers. The key is to the **divide the power in half** at each step.\\n\\nThe following recursive approach expresses the same idea:\\n\\n$$\\na^n = \\\\begin{cases} 1 &\\\\text{if } n == 0 \\\\\\\\ \\\\left(a^{\\\\frac{n}{2}}\\\\right)^2 &\\\\text{if } n > 0 \\\\text{ and } n \\\\text{ even} \\\\\\\\\\n\\\\left(a^{\\\\frac{n - 1}{2}}\\\\right)^2 \\\\cdot a &\\\\text{if } n > 0 \\\\text{ and } n \\\\text{ odd} \\\\\\\\ \\\\end{cases}\\n$$\\n\\nLet\\u2019s take an example:\\n\\n$$\\n3^{10} = 3 \\\\times 3 \\\\times 3 \\\\times 3 \\\\times 3 \\\\times 3 \\\\times 3 \\\\times 3 \\\\times 3 \\\\times 3\\n$$\\n\\nTry to divide the power by $2$:\\n\\n$$\\n3^{10} = (3 \\\\times 3) \\\\times (3 \\\\times 3) \\\\times (3 \\\\times 3) \\\\times (3 \\\\times 3) \\\\times (3 \\\\times 3)\\n$$\\n\\n$$\\n3^{10} = ((3 \\\\times 3) ^ 5)\\n$$\\n\\n$$\\n3^{10} = 9^5\\n$$\\n\\nEffectively, power is divided by $2$ and base is multiplied to itself. So we can write $3^10 = 9^5$.\\n\\nNow, our problem is to find $9^5$.\\n\\n$$\\n9^5 = 9 \\\\times 9 \\\\times 9 \\\\times 9 \\\\times 9\\n$$\\n\\n// Try to divide the power by $2$\\n// Since the power is an odd number here, we cannot do so.\\n// However there\\'s another way to represent $9^5$\\n\\n$$\\n9^5 = (9^4) \\\\times 9\\n$$\\n\\n// Now we can find $9^4$ and later multiple the extra $9$ to the result\\n\\n$$\\n9^5 = (81^2) \\\\times 9\\n$$\\n\\nEffectively, when power is not divisible by $2$, we make power even by taking out the extra $9$. Then we already know the solution when power is divisible by $2$. Divide the power by $2$ and multiply the base to itself.\\n\\nNow our problem is to find $(81^2) \\\\times 9$\\n\\n$$\\n(81^2) \\\\times 9 = (81 \\\\times 81) \\\\times 9\\n$$\\n\\n// Try to divide the power by $2$\\n$$\\n(81 ^ 2) \\\\times 9 = (6561 ^ 1) \\\\times 9\\n$$\\n\\nFinally, we have our solution $3^10 = (6561^1) \\\\times 9 = 6561 \\\\times 9 = 59049$\\n\\nLet\\u2019s use **recusive** in java.\\n\\n```java\\n    public static double myPow_quick(double x, int n) {\\n\\t\\tlong N = n;\\n\\t\\tif (n > 0) {\\n            return quickMul(x, N);\\n        } else {\\n            return 1.0 / quickMul(x, -N);\\n        }\\n    }\\n\\n    public static double quickMul(double x, long n) {\\n        if (n == 0) {\\n            return 1.0;\\n        }\\n\\n        double y = quickMul(x, n / 2);\\n        if (n % 2 == 0) {\\n            return y * y;\\n        } else {\\n            return y * y * x;\\n        }\\n    }\\n```\\n\\n## Analysis\\n\\n- **Time Complexity**: $O(\\\\log n)$\\n- **Space Complexity**: $O(\\\\log n)$\\n\\n# Iterative\\n\\nAlthough the complexity of both approaches is identical, but if we use **iteration** instead of **recursion** will be faster in practice since we don\\'t have the overhead of the recursive calls and reduce the space.\\n\\n```java\\n    public static double myPow_3(double x, int n) {\\n        long N = n;\\n        return N >= 0 ? binaryPower(x, N) : 1.0 / binaryPower(x, -N);\\n    }\\n\\n    public static double binaryPower(double a, long b) {\\n\\t\\tdouble res = 1.0;\\n\\t\\twhile (b > 0) {\\n\\t\\t\\tif ((b & 1) == 1) {\\n\\t\\t\\t\\tres = res * a;\\n\\t\\t\\t}\\n\\t\\t\\ta = a * a;\\n\\t\\t\\tb >>= 1;\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn res;\\n\\t}\\n```\\n\\n## Analysis\\n\\n- **Time Complexity**: $O(logn)$\\n- **Space Complexity**: $O(logn)$\\n\\n--------------------------\\n\\nAll suggestions are welcome. \\nIf you have any query or suggestion please comment below.\\nPlease upvote\\uD83D\\uDC4D if you like\\uD83D\\uDC97 it. Thank you:-)\\n\\nExplore More [Leetcode Solutions](https://leetcode.com/discuss/general-discussion/1868912/My-Leetcode-Solutions-All-In-One). \\uD83D\\uDE09\\uD83D\\uDE03\\uD83D\\uDC97\\n\\n",
                "solutionTags": [
                    "Java",
                    "Math",
                    "Binary Search"
                ],
                "code": "```java\\n    public static double myPow(double x, int n) {\\n        if (n == 0 || x == 1) {\\n            return 1;\\n        } else if (x == 0) {\\n            return 0;\\n        }\\n\\n        double ans = x;\\n        boolean isNegative = false;\\n        long nLong = n;\\n        if (nLong < 0) {\\n            nLong = -nLong;\\n            isNegative = true;\\n        }\\n\\n        for (int i = 1; i < nLong; i++) {\\n            ans = ans * x;\\n        }\\n\\n        if (isNegative) {\\n            ans = 1 / ans;\\n        }\\n\\n        return ans;\\n    }\\n```\n```java\\n    public static double myPow_quick(double x, int n) {\\n\\t\\tlong N = n;\\n\\t\\tif (n > 0) {\\n            return quickMul(x, N);\\n        } else {\\n            return 1.0 / quickMul(x, -N);\\n        }\\n    }\\n\\n    public static double quickMul(double x, long n) {\\n        if (n == 0) {\\n            return 1.0;\\n        }\\n\\n        double y = quickMul(x, n / 2);\\n        if (n % 2 == 0) {\\n            return y * y;\\n        } else {\\n            return y * y * x;\\n        }\\n    }\\n```\n```java\\n    public static double myPow_3(double x, int n) {\\n        long N = n;\\n        return N >= 0 ? binaryPower(x, N) : 1.0 / binaryPower(x, -N);\\n    }\\n\\n    public static double binaryPower(double a, long b) {\\n\\t\\tdouble res = 1.0;\\n\\t\\twhile (b > 0) {\\n\\t\\t\\tif ((b & 1) == 1) {\\n\\t\\t\\t\\tres = res * a;\\n\\t\\t\\t}\\n\\t\\t\\ta = a * a;\\n\\t\\t\\tb >>= 1;\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn res;\\n\\t}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1841398,
                "title": "java-100-recursive-solution-divide-conquer",
                "content": "I was having trouble understanding how the mathematical form for the recursive function works.\\nSo I have shown a visual example of how it works, for better understanding. \\nHope it helps!\\n\\n\\n1) Brute force: (Time Limit Exceeded)\\n\\nTime: O(N)\\nSpace: O(1)\\n\\n\\nclass Solution {\\n    \\n    public double myPow(double x, int n) {\\n        \\n        double res=1;\\n        if(n<0)                //If n is negative, then do (1/x)^(-n)\\n        {\\n            n=-n;\\n            x=1/x;\\n        }\\n        for(int i=0; i<n; i++)\\n            res=res*x;\\n        return res;\\n            \\n    }\\n}\\n\\n\\n2) Divide & Conquer, Recursive solution \\n\\nTime: O(log n)\\nSpace: O(1)\\n\\nExample:\\nFor n>0 & even:\\n![image](https://assets.leetcode.com/users/images/8f14f83d-1ff7-4390-a417-9534cb60ad53_1647062290.2058234.png)\\n\\n\\nFor n>0 & odd: \\n![image](https://assets.leetcode.com/users/images/07690771-f72e-42e7-8861-35452db83e9e_1647061701.036213.png)\\n\\nFor n<0:\\n![image](https://assets.leetcode.com/users/images/7dd4d769-6ea0-4ae9-ad22-68c0e2edc541_1647062223.9094896.png)\\n\\n\\n\\n\\n\\n\\nclass Solution {\\n    \\n    double res;\\n    \\n    public double myPow(double x, int n) \\n\\t{\\n        return pow(x,n);\\n    }\\n    \\n    public double pow(double x, long n)         //Here long n is necessary for handling boundary n conditions e.g. Integer.MAX_VALUE or Integer.MIN_VALUE\\n    {\\n        if(n==0) \\n            return 1;\\n        \\n        if(n<0)                   //If n is negative\\n            return pow(1/x, -n);\\n        \\n        res=pow(x*x,n/2);\\n        \\n        if(n%2==1)               //If n is odd\\n            res=res*x;\\n        \\n        return res;\\n    }\\n}\\n\\n",
                "solutionTags": [
                    "Java",
                    "Divide and Conquer",
                    "Recursion"
                ],
                "code": "class Solution {\\n    \\n    public double myPow(double x, int n) {\\n        \\n        double res=1;\\n        if(n<0)                //If n is negative, then do (1/x)^(-n)\\n        {\\n            n=-n;\\n            x=1/x;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 1787981,
                "title": "javascript-solution-beats-99-explained",
                "content": "Should be relatively easy to come up with the recursive setup based on the recurrence:\\n\\n```\\n2 ^ 10 = 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2\\n       =  4 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2\\n\\t   =  8 * 2 * 2 * 2 * 2 * 2 * 2\\n\\t\\t\\tetc\\n```\\n\\n(may have messed up the number of `2` due to copy / paste error, but you get the idea)\\nWe need to acount for `n` being negative, which would just turn into `1 / myPow(x, Math.abs(n))`\\nBases cases of `0` and `1` are also considered.\\n\\n```\\n/**\\n * @param {number} x\\n * @param {number} n\\n * @return {number}\\n */\\nvar myPow = function(x, n) {\\n    if(n == 0) {\\n        return 1;\\n    }\\n    if(n == 1) {\\n        return x\\n    }\\n    if(n < 0) {\\n        return 1 / myPow(x, Math.abs(n))\\n    }\\n    return x * myPow(x, n - 1);\\n};\\n```\\n\\nThe issue with the above approach (while its valid) is that you will continue to put function calls into your runtime\\'s callstack and you\\'ll eventually reach its limit and get a stack over flow error. In order to reduce the number of recursive calls, you need can either:\\n* Use dynamic programming\\n* Find an additional recurrence relation within the computation that reduces the number of calls:\\n\\n```\\n2 ^ 6 = 2 * 2 * 2 * 2 * 2 * 2\\n```\\n\\nNote that we could represent `2 * 2 * 2 * 2 * 2 * 2` into the same base when we recurse:\\n\\n`4 * myPow(2, n - 1)`\\n\\nor we can change the base value in the next recusive call:\\n\\n`myPow(4, n / 2)`\\n\\ne.g. `2 ^ 6` is the same thing as `4^3`, except by using `4^3` you will reduce the number of recusive calls for the next step! In fact, you reduce it by half, with each subsequent call. This only works when `n` is even however. We can now add this additional base case to our function, and achieve `O(log(n))` time.\\n\\n```\\n/**\\n * @param {number} x\\n * @param {number} n\\n * @return {number}\\n */\\nvar myPow = function(x, n) {\\n    if(n == 0) {\\n        return 1;\\n    }\\n    if(n % 2 == 0) {\\n        return myPow(x * x, n / 2)\\n    }\\n    if(n == 1) {\\n        return x\\n    }\\n    if(n < 0) {\\n        return 1 / myPow(x, Math.abs(n))\\n    }\\n    return x * myPow(x, n - 1);\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n2 ^ 10 = 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2\\n       =  4 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2\\n\\t   =  8 * 2 * 2 * 2 * 2 * 2 * 2\\n\\t\\t\\tetc\\n```\n```\\n/**\\n * @param {number} x\\n * @param {number} n\\n * @return {number}\\n */\\nvar myPow = function(x, n) {\\n    if(n == 0) {\\n        return 1;\\n    }\\n    if(n == 1) {\\n        return x\\n    }\\n    if(n < 0) {\\n        return 1 / myPow(x, Math.abs(n))\\n    }\\n    return x * myPow(x, n - 1);\\n};\\n```\n```\\n2 ^ 6 = 2 * 2 * 2 * 2 * 2 * 2\\n```\n```\\n/**\\n * @param {number} x\\n * @param {number} n\\n * @return {number}\\n */\\nvar myPow = function(x, n) {\\n    if(n == 0) {\\n        return 1;\\n    }\\n    if(n % 2 == 0) {\\n        return myPow(x * x, n / 2)\\n    }\\n    if(n == 1) {\\n        return x\\n    }\\n    if(n < 0) {\\n        return 1 / myPow(x, Math.abs(n))\\n    }\\n    return x * myPow(x, n - 1);\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1713177,
                "title": "c-binary-representation",
                "content": "```c\\ndouble myPow(double x, int n) {\\n  double sum = 1.0;\\n\\n  int sign = n < 0 ? -1 : 1;\\n  unsigned int nn = (unsigned int) n * sign; // let \"nn\" = positive \"n\"\\n\\n  while (nn) {\\n    if (nn & 1) {\\n      sum *= x;\\n    }\\n    nn >>= 1;\\n    x *= x;\\n  }\\n\\n  return sign == 1 ? sum : 1.0 / sum;\\n}\\n```\\n\\nYou can just scan through the binary representation of `n` from its LSB to its MSB and multiply with its corresonding weighting.\\n![image](https://assets.leetcode.com/users/images/995aad5d-e729-4c9e-8247-13147c7036f8_1642942112.9953718.png)\\n",
                "solutionTags": [
                    "C"
                ],
                "code": "```c\\ndouble myPow(double x, int n) {\\n  double sum = 1.0;\\n\\n  int sign = n < 0 ? -1 : 1;\\n  unsigned int nn = (unsigned int) n * sign; // let \"nn\" = positive \"n\"\\n\\n  while (nn) {\\n    if (nn & 1) {\\n      sum *= x;\\n    }\\n    nn >>= 1;\\n    x *= x;\\n  }\\n\\n  return sign == 1 ? sum : 1.0 / sum;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 739596,
                "title": "java-correct-solution-o-1-capacity-no-abs",
                "content": "1. int absn = Math.abs(n) is bad approach - Integer.MIN_VALUE has no correspondent positive int\\n2. long absn = Math.abs((long)n) is bad approach - solution is not scalable to myPow(double x, long n)\\n3. division by 2 using >> (shift) and modulo by using n & 1 can be used only for n > 0 and\\n    SHOULD NOT BE USED before compiled code understanding (compiler can do optimizations by own)\\n4. recursion is bad approach - O(logn) capacity (call stack)\\n5. this is 99% accurate solution :) last x*= x multiplication (when n == 0) is not needed, feel free to optimize loop body and condition\\n\\n```\\n    public double myPow(double x, int n) {\\n        double result = 1.0;\\n        if (n < 0)\\n            x = 1.0 / x;\\n        while (n != 0) {\\n            if (n % 2 != 0)\\n                result *= x;\\n            n /= 2;\\n            x *= x;\\n        } \\n        return result;\\n    }\\n\\t",
                "solutionTags": [],
                "code": "1. int absn = Math.abs(n) is bad approach - Integer.MIN_VALUE has no correspondent positive int\\n2. long absn = Math.abs((long)n) is bad approach - solution is not scalable to myPow(double x, long n)\\n3. division by 2 using >> (shift) and modulo by using n & 1 can be used only for n > 0 and\\n    SHOULD NOT BE USED before compiled code understanding (compiler can do optimizations by own)\\n4. recursion is bad approach - O(logn) capacity (call stack)\\n5. this is 99% accurate solution :) last x*= x multiplication (when n == 0) is not needed, feel free to optimize loop body and condition\\n\\n```\\n    public double myPow(double x, int n) {\\n        double result = 1.0;\\n        if (n < 0)\\n            x = 1.0 / x;\\n        while (n != 0) {\\n            if (n % 2 != 0)\\n                result *= x;\\n            n /= 2;\\n            x *= x;\\n        } \\n        return result;\\n    }\\n\\t",
                "codeTag": "Unknown"
            },
            {
                "id": 738803,
                "title": "c-recursive-approach",
                "content": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n     \\n        if(n==0)\\n             return 1;\\n        double t=myPow(x,n/2);\\n        \\n        if(n%2)\\n            return n<0? 1/x*t*t:x*t*t; \\n        else\\n            return t*t;\\n        \\n        \\n        /*\\n        Example \\n        \\n        2^4--->\\n        \\n       n= 4,2,1,0\\n        t=mypow(2,4)   t*t=16\\n        t=mypow(2,2)   t*t=4\\n        t=mypow(2,1)   t=x*t*t=2\\n        t=mypow(2,0)   t=1(returned value)\\n        \\n    \\n        since n=0-->    x*t*t\\n        \\n        */\\n\\n    }\\n};\\n\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n     \\n        if(n==0)\\n             return 1;\\n        double t=myPow(x,n/2);\\n        \\n        if(n%2)\\n            return n<0? 1/x*t*t:x*t*t; \\n        else\\n            return t*t;\\n        \\n        \\n        /*\\n        Example \\n        \\n        2^4--->\\n        \\n       n= 4,2,1,0\\n        t=mypow(2,4)   t*t=16\\n        t=mypow(2,2)   t*t=4\\n        t=mypow(2,1)   t=x*t*t=2\\n        t=mypow(2,0)   t=1(returned value)\\n        \\n    \\n        since n=0-->    x*t*t\\n        \\n        */\\n\\n    }\\n};\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 450392,
                "title": "java-accepted-log2-n-time",
                "content": "\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        double pow = 0;\\n        double result = 0;\\n        \\n        if(n == 0) {\\n            result = 1;\\n        } else {\\n            pow = myPow(x, n / 2);\\n            if(n % 2 == -1) {\\n                result = pow * pow / x;\\n            }\\n            if(n % 2 == 0) {\\n                result = pow * pow;\\n            }\\n            if(n % 2 == +1) {\\n                result = pow * pow * x;\\n            }\\n        }\\n        \\n        return(result);\\n    }\\n}",
                "solutionTags": [],
                "code": "class Solution {\\n    public double myPow(double x, int n) {\\n        double pow = 0;\\n        double result = 0;\\n        \\n        if(n == 0) {\\n            result = 1;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 336569,
                "title": "java-solution",
                "content": "```\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        if(n<0) return 1/x * myPow(1/x, -(n+1));\\n        if(n==0) return 1;\\n        if(n==2) return x*x;\\n        if(n%2==0) return myPow( myPow(x, n/2), 2);\\n        else return x*myPow( myPow(x, n/2), 2);\\n    }\\n}\\n```\\n\\nRuntime: 0 ms, faster than 100.00% of Java online submissions for Pow(x, n).\\nMemory Usage: 33.5 MB, less than 5.02% of Java online submissions for Pow(x, n).",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        if(n<0) return 1/x * myPow(1/x, -(n+1));\\n        if(n==0) return 1;\\n        if(n==2) return x*x;\\n        if(n%2==0) return myPow( myPow(x, n/2), 2);\\n        else return x*myPow( myPow(x, n/2), 2);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 245385,
                "title": "java-solutions",
                "content": "**Solution 1: Iterative**\\n\\n- First, lets assume `n` is positive. The **brute-force** algorithm is to form x<sup>2</sup> = x * x, then x<sup>3</sup> = x<sup>2</sup> * x, and so on. This approach takes `n - 1` multiplications, which is 2<sup>k</sup>, where `k` is the number of bits in the integer `n`.\\n- The key to efficiency is to try and get more work done with each multiplication, thereby using fewer multiplications to accomplish the same result. For example- to compute (1.1)<sup>21</sup>, instead of starting with `1.1` and multiplying `20` times by `1.1` , we could multiply `1.1` by (1.1)<sup>2</sup>  `10` times for a total of `11` multiplications, i.e. one to compute (1.1)<sup>2</sup>, and `10` additional multiplications by (1.1)<sup>2</sup>. We can still do better by computing (1.1)<sup>3</sup>, (1.1)<sup>4</sup>, etc.\\n- When `n` is a power of `2`, the approach that uses minimum multiplications is an iterated squaring, i.e., forming x, x<sup>2</sup>, (x<sup>2</sup>)<sup>2</sup> = x<sup>4</sup>, (x<sup>4</sup>)<sup>2</sup> = x<sup>8</sup>, . . .  To develop an algorithm for general `n`, is is instructive to look at the binary representation of `n`, as well as properties of exponentiation, specifically x<sup>n1 + n2</sup> = x<sup>n1</sup> * x<sup>n2</sup>.\\n- We begin with some small concrete instances, first assuming that `n` is positive. For Example- x<sup>(1010)<sub>2</sub></sup> = x<sup>(101)<sub>2</sub> + (101)<sub>2</sub></sup> = x<sup>(101)<sub>2</sub></sup> * x<sup>(101)<sub>2</sub></sup>, Similarly, x<sup>(101)<sub>2</sub></sup> = x<sup>(100)<sub>2</sub> + (1)<sub>2</sub></sup> = x<sup>(100)<sub>2</sub></sup> * x =  x<sup>(10)<sub>2</sub></sup> * x<sup>(10)<sub>2</sub></sup> * x.\\n- Generalizing, if the least significant bit of `n` is `0` (if `n` is even), the result is (x<sup>n/2</sup>)<sup>2</sup>; otherwise it is x * (x<sup>n/2</sup>)<sup>2</sup>. This gives us a recursive algorithm for computing x<sup>n</sup> when `n` is positive.\\n- The only change when `n` is negative is replacing `x` by `1 / x` and `n` by `-n`. Also we need to handle the case separately when `n` is the lowest integer (`Integer.MIN_VALUE`).\\n\\nTime complexity: `O(k) = O(log n)` - where `k` is the number of bits in an integer `n`\\nSpace complexity: `O(1)`\\n\\n```\\nclass Solution\\n{\\n    public double myPow(double x, int n)\\n\\t{\\n        double result = 1;\\n\\t\\t\\n\\t\\tif(x == 1 || n == 0)\\n            return 1;\\n        if(x == -1)\\n\\t\\t    return n % 2 == 0 ? 1 : -1;\\n        if(n == Integer.MIN_VALUE)\\n            return 0;\\n        \\n        if(n < 0)\\n\\t\\t{\\n            n = -n;\\n            x = 1 / x;\\n        }\\n\\n        while(n > 0)\\n\\t\\t{\\n            if(n % 2 == 1) \\n\\t\\t\\t\\tresult *= x;\\n            \\n\\t\\t\\tx = x * x;\\n            n = n >> 1;\\n        }\\n        return result;\\n    }\\n}\\n```\\n\\n**Solution 2: Recursive**\\n\\nTime complexity: `O(k) = O(log n)` - where `k` is the number of bits in an integer `n`\\nSpace complexity: `O(k) = O(log n)` - space required for the recursive function call stack.\\n\\n```\\nclass Solution\\n{\\n\\tpublic double myPow(double x, int n)\\n\\t{\\n\\t\\tif(n == 0)\\n\\t\\t\\treturn 1;\\n\\t\\t\\n\\t\\tif(n < 0)\\n\\t\\t{\\n\\t\\t\\tif(n == Integer.MIN_VALUE)\\n\\t\\t\\t{\\n\\t\\t\\t\\tx = x * x;\\n\\t\\t\\t\\tn = n / 2;\\n\\t\\t\\t}\\n\\t\\t\\telse\\n\\t\\t\\t{\\n\\t\\t\\t\\tn = -n;\\n\\t\\t\\t\\tx = 1 / x;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn n % 2 == 0 ? myPow(x * x, n / 2) : x *  myPow(x * x, n / 2);\\n\\t}\\n}\\n```\\n",
                "solutionTags": [],
                "code": "```\\nclass Solution\\n{\\n    public double myPow(double x, int n)\\n\\t{\\n        double result = 1;\\n\\t\\t\\n\\t\\tif(x == 1 || n == 0)\\n            return 1;\\n        if(x == -1)\\n\\t\\t    return n % 2 == 0 ? 1 : -1;\\n        if(n == Integer.MIN_VALUE)\\n            return 0;\\n        \\n        if(n < 0)\\n\\t\\t{\\n            n = -n;\\n            x = 1 / x;\\n        }\\n\\n        while(n > 0)\\n\\t\\t{\\n            if(n % 2 == 1) \\n\\t\\t\\t\\tresult *= x;\\n            \\n\\t\\t\\tx = x * x;\\n            n = n >> 1;\\n        }\\n        return result;\\n    }\\n}\\n```\n```\\nclass Solution\\n{\\n\\tpublic double myPow(double x, int n)\\n\\t{\\n\\t\\tif(n == 0)\\n\\t\\t\\treturn 1;\\n\\t\\t\\n\\t\\tif(n < 0)\\n\\t\\t{\\n\\t\\t\\tif(n == Integer.MIN_VALUE)\\n\\t\\t\\t{\\n\\t\\t\\t\\tx = x * x;\\n\\t\\t\\t\\tn = n / 2;\\n\\t\\t\\t}\\n\\t\\t\\telse\\n\\t\\t\\t{\\n\\t\\t\\t\\tn = -n;\\n\\t\\t\\t\\tx = 1 / x;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn n % 2 == 0 ? myPow(x * x, n / 2) : x *  myPow(x * x, n / 2);\\n\\t}\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 197432,
                "title": "javascript-solution",
                "content": "```javascript\\nvar myPow = function(x, n) {\\n  if (n === 0) return 1;\\n  if (n === 1) return x;\\n  if (x === 0) return 0;\\n\\n  if (n > 0) {\\n    return (n % 2 === 1 ? x : 1) * myPow(x * x, Math.floor(n / 2));\\n  } else {\\n    return myPow(1 / x, -n);\\n  }\\n};\\n```",
                "solutionTags": [],
                "code": "```javascript\\nvar myPow = function(x, n) {\\n  if (n === 0) return 1;\\n  if (n === 1) return x;\\n  if (x === 0) return 0;\\n\\n  if (n > 0) {\\n    return (n % 2 === 1 ? x : 1) * myPow(x * x, Math.floor(n / 2));\\n  } else {\\n    return myPow(1 / x, -n);\\n  }\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 19704,
                "title": "4ms-solution-c",
                "content": "    class Solution\\n    {\\n    public:\\n        double myPow(double x, int n)\\n        {\\n            bitset<32> bit(abs(n));\\n            double result = 1;\\n            for(int i = bit.size()-1; i >= 0; i--)\\n            {\\n                result*=result;\\n                if(bit[i] == 1)\\n                    result *=x;\\n            }\\n            return (n >= 0)?result : 1/result;\\n        }\\n    };",
                "solutionTags": [
                    "C++"
                ],
                "code": "class Solution\\n    {\\n    public:\\n        double myPow(double x, int n)\\n        {\\n            bitset<32> bit(abs(n));\\n            double result = 1;\\n            for(int i = bit.size()-1; i >= 0; i--)\\n            {\\n                result*=result;\\n                if(bit[i] == 1)\\n                    result *=x;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 19772,
                "title": "share-my-accepted-python-solution-russian",
                "content": "I guess, this is easy to understand, the time complex is O(log(n)), this is a fast implementation.\\n\\n\\n\\n\\n    class Solution:\\n    # @param x, a float\\n    # @param n, a integer\\n    # @return a float\\n    def pow(self, x, n):\\n        if(n==0):\\n            return 1;\\n        elif(n==1):\\n            return x;\\n        if(n<0):\\n            return self.pow(1/x,-n);\\n        else:\\n            if(n%2==0):\\n                return self.pow(x*x,n/2);\\n            else:\\n                return self.pow(x*x,(n-1)/2)*x;",
                "solutionTags": [
                    "Python"
                ],
                "code": "I guess, this is easy to understand, the time complex is O(log(n)), this is a fast implementation.\\n\\n\\n\\n\\n    class Solution:\\n    # @param x, a float\\n    # @param n, a integer\\n    # @return a float\\n    def pow(self, x, n):\\n        if(n==0):\\n            return 1;\\n        elif(n==1):\\n            return x;\\n        if(n<0):\\n            return self.pow(1/x,-n);\\n        else:\\n            if(n%2==0):\\n                return self.pow(x*x,n/2);\\n            else:\\n                return self.pow(x*x,(n-1)/2)*x;",
                "codeTag": "Java"
            },
            {
                "id": 3807836,
                "title": "c-solution-for-pow-x-n-problem",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThe problem is to calculate the value of x raised to the power n. Since n can be a large negative number, positive number, or zero, we need to handle these cases efficiently. Additionally, we can use the divide-and-conquer technique to optimize the power calculation process.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n1. We\\'ll handle the base cases first: if n is zero, the result is 1, and if n is negative, we\\'ll convert it to a positive number by taking the reciprocal of x and making n positive.\\n1. We\\'ll then implement a recursive function CalculatePow that will efficiently calculate the power using the divide-and-conquer technique. It recursively calculates the result of x raised to n/2 and then squares it to handle even powers. For odd powers, we multiply the result by x once more.\\n1. The MyPow function first handles the base cases and then calls CalculatePow to compute the result.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nThe time complexity of the solution is O(log n) because the divide-and-conquer approach reduces the number of recursive calls by half in each step.\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nThe space complexity is O(log n) as well, as we have log n recursive calls in the call stack due to the divide-and-conquer approach.\\n\\n# Code\\n```\\npublic class Solution {\\n    public double MyPow(double x, int n) {\\n        long N = n;\\n        if (N == 0) return 1;\\n        if (N < 0) {\\n            x = 1 / x;\\n            N = -N;\\n        }\\n        return CalculatePow(x, N);\\n    }\\n    private double CalculatePow(double x, long n) {\\n        if (n == 1) return x;\\n        double halfPow = CalculatePow(x, n / 2);\\n        return n % 2 == 0 ? halfPow * halfPow : halfPow * halfPow * x;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public double MyPow(double x, int n) {\\n        long N = n;\\n        if (N == 0) return 1;\\n        if (N < 0) {\\n            x = 1 / x;\\n            N = -N;\\n        }\\n        return CalculatePow(x, N);\\n    }\\n    private double CalculatePow(double x, long n) {\\n        if (n == 1) return x;\\n        double halfPow = CalculatePow(x, n / 2);\\n        return n % 2 == 0 ? halfPow * halfPow : halfPow * halfPow * x;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3712013,
                "title": "simple-and-clear-solution-c-maths",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if(n==0){\\n            return 1;\\n        }\\n\\n        if(n==1){\\n            return x;\\n        }\\n\\n        if(n>0){\\n            if(n%2==0){\\n                return myPow(x*x, n/2);\\n            }\\n            else{\\n                return x*myPow(x*x, n/2);\\n            }\\n        }\\n\\n        else{\\n            n= abs(n);\\n            if(n%2==0){\\n                return 1/myPow(x*x, n/2);\\n            }\\n            else{\\n                return 1/(x*myPow(x*x, n/2));\\n            }\\n        }\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if(n==0){\\n            return 1;\\n        }\\n\\n        if(n==1){\\n            return x;\\n        }\\n\\n        if(n>0){\\n            if(n%2==0){\\n                return myPow(x*x, n/2);\\n            }\\n            else{\\n                return x*myPow(x*x, n/2);\\n            }\\n        }\\n\\n        else{\\n            n= abs(n);\\n            if(n%2==0){\\n                return 1/myPow(x*x, n/2);\\n            }\\n            else{\\n                return 1/(x*myPow(x*x, n/2));\\n            }\\n        }\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3366818,
                "title": "beats-100-easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n- Using Bit Manipulation to solve it.\\n- Very easy approach.\\n\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n- If number is positive calling ans() function and calculating power.\\n- if number is negative calling ans() function by passing (-n) and returning (1 / ans) as result. [since a ^ -b = 1 / (a ^ b)]\\n- I am taking care of n = -2147483648 at the begining itself. \\uD83D\\uDE1C\\n- In the ans() function we right shift the value of n until it is 0.\\n- Everytime x is updated to (x * x) .\\n- If the last bit of n is 1 then we multiply x to ans.\\n\\n\\n# Complexity\\n- Time complexity: O(logn)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        if(x == 1) return 1;\\n        if(n == -2147483648 && x > 1) return 0;\\n        if(n >= 0) return ans(x, n);\\n        else return 1 / ans(x, -1*n);\\n    }\\n\\n    double ans(double x,int n){\\n        double ans = 1;\\n        while(n > 0){\\n            if((n & 1) == 1){\\n                ans *= x;\\n            }\\n            x *= x;\\n            n = n >> 1;\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Bit Manipulation"
                ],
                "code": "```\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        if(x == 1) return 1;\\n        if(n == -2147483648 && x > 1) return 0;\\n        if(n >= 0) return ans(x, n);\\n        else return 1 / ans(x, -1*n);\\n    }\\n\\n    double ans(double x,int n){\\n        double ans = 1;\\n        while(n > 0){\\n            if((n & 1) == 1){\\n                ans *= x;\\n            }\\n            x *= x;\\n            n = n >> 1;\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3035151,
                "title": "simple-solution-using-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n    Binary Exponentiation\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(log$$n$$)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\npublic class Solution {\\n   public double MyPow(double x, int n)\\n    {\\n        double resul = 1; \\n        if(n < 0) {\\n            n = -n;\\n            x = 1 / x;\\n        }\\n\\n        while(n != 0) {\\n            if((n & 1) != 0) {\\n                result *= x;\\n            } \\n\\n            x *= x;\\n            n = (int)((uint)n >> 1);\\n        }\\n        return result;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n   public double MyPow(double x, int n)\\n    {\\n        double resul = 1; \\n        if(n < 0) {\\n            n = -n;\\n            x = 1 / x;\\n        }\\n\\n        while(n != 0) {\\n            if((n & 1) != 0) {\\n                result *= x;\\n            } \\n\\n            x *= x;\\n            n = (int)((uint)n >> 1);\\n        }\\n        return result;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2609922,
                "title": "c-iterative-and-recursive-with-explanation-easy",
                "content": "```\\nclass Solution {\\npublic:\\n        \\n        // iterative approach\\n        double myPow(double x, int n) {\\n        double res = 1;\\n        while (n) {\\n            if (n % 2) \\n            {\\n              if(n) res *= x; // if n is positive than multiply it by x\\n              else res /= x; \\n\\t\\t\\t  // if the power is negative, then we have to divide it  because we know a^-1 = 1/a\\n            }\\n            x = x * x;\\n            n /= 2;\\n        }\\n        return res;\\n    }\\n};\\n\\nclass Solution {\\npublic:        \\n         // one liner recursive and smarter code\\n        \\n         double myPow(double x, int n,double res=1) {\\n         return n ? myPow(x * x, n / 2, n % 2 ? (n > 0 ? res * x : res / x) : res) : res;\\n}\\n};\\n\\n```",
                "solutionTags": [
                    "C",
                    "Recursion",
                    "Iterator"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n        \\n        // iterative approach\\n        double myPow(double x, int n) {\\n        double res = 1;\\n        while (n) {\\n            if (n % 2) \\n            {\\n              if(n) res *= x; // if n is positive than multiply it by x\\n              else res /= x; \\n\\t\\t\\t  // if the power is negative, then we have to divide it  because we know a^-1 = 1/a\\n            }\\n            x = x * x;\\n            n /= 2;\\n        }\\n        return res;\\n    }\\n};\\n\\nclass Solution {\\npublic:        \\n         // one liner recursive and smarter code\\n        \\n         double myPow(double x, int n,double res=1) {\\n         return n ? myPow(x * x, n / 2, n % 2 ? (n > 0 ? res * x : res / x) : res) : res;\\n}\\n};\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2546074,
                "title": "python-o-logn-o-1",
                "content": "```py\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0:\\n            return 1\\n        \\n        total, val, left = 1, x, abs(n)\\n\\n        while left > 1:\\n            if left % 2 == 0:\\n                left = left // 2\\n                val = val * val\\n            else:\\n                total *= val\\n                left -= 1\\n\\n        return total * val if n > 0 else 1 / (total * val)",
                "solutionTags": [
                    "Python",
                    "Math"
                ],
                "code": "```py\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0:\\n            return 1\\n        \\n        total, val, left = 1, x, abs(n)\\n\\n        while left > 1:\\n            if left % 2 == 0:\\n                left = left // 2\\n                val = val * val\\n            else:\\n                total *= val\\n                left -= 1\\n\\n        return total * val if n > 0 else 1 / (total * val)",
                "codeTag": "Java"
            },
            {
                "id": 2472703,
                "title": "brehhhh",
                "content": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        \\n        return pow(x,n);\\n    }\\n};\\n```\\n\\n![image](https://assets.leetcode.com/users/images/1bd29308-2593-4b86-9e28-fbcacc4002ce_1661336453.1564255.png)\\n",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        \\n        return pow(x,n);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1529204,
                "title": "simple-0-ms-faster-than-100-00-of-c-memory-usage-less-than-96-37-of-c",
                "content": ": 0 ms, faster than 100.00% of C++ online submissions for Pow(x, n).\\nMemory Usage: 5.7 MB, less than 96.37% of C++ online submissions for Pow(x, n).\\n\\nhere the hack is you have to change the   ( int n ) to ( long n )\\nbecause of below test case:-\\n1.00000\\n-2147483648\\n\\n```\\ndouble myPow(double x, long n) \\n    {\\n        if(n<0)\\n        {\\n            return (myPow(1/x,-n));\\n        }\\n        if(n==0)\\n            return 1;\\n        if(n%2==0)\\n            return myPow(x*x,n/2);\\n        else\\n            return x*myPow(x*x,(n-1)/2);        \\n    }\\n```\\n\\nplease Upvote if you understand the solution It will help other people also Thank you !!",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\ndouble myPow(double x, long n) \\n    {\\n        if(n<0)\\n        {\\n            return (myPow(1/x,-n));\\n        }\\n        if(n==0)\\n            return 1;\\n        if(n%2==0)\\n            return myPow(x*x,n/2);\\n        else\\n            return x*myPow(x*x,(n-1)/2);        \\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1302791,
                "title": "c-solution-descriptive-faster-than-100-o-log-n",
                "content": "**C++ Solution using bitwise operators**\\n\\nSo the question is that we just need to find the x^n\\n\\nFirst we consider teh solution for only positive values of n.\\n\\n### example pow(3,5)\\n\\nOur number is 3 and we want 3 raised to teh power 5 . The most basic approach would be to do solmething like \\n\\nans = 3x3x3x3x3 using a for loop but this would be of complexity o(n)\\n\\n*Optimisation* -> We convert n into its binary form . (ps here n^x means n to the power x and not xor )\\n* 3^5 =>convert 5 to binary=> 3^(101)\\n* 3^(101) => 3^(4x1 + 2x0 + 1x1)\\n*  3^(4x1 + 2x0 + 1x1) =>( 3^(4x1)  ) x (  3^(2x0)  )x ( 3^(1x1))\\n\\nHere we see a pattern :-\\n* If we consider n to be in its binary form , then for each set bit in n at index i from the right , we multiply 3 raised to the power of the index value in our answer . And for unset bits we just mutiply ans by 1 or we can skip this.\\n* What I mean by index value explained ->  The next line will have the binary representaion of a number and below it will have the index value . ex 23\\n___1____0______1______1_____1\\n_2^4__2^3 __2^2 __2^1 __2^0\\n__16____8______4______2_____1\\n\\n* so if we need the 3^23we just do ans = [3^16] x [1] x [3^4] x [3^2] x  [3^1] . \\n\\n### Logic\\n* Store the vaues of x and n in variables Number and Power respecitively.\\n* Take an answer variable equal to 1 for now .\\n* We iterate till our Power is more than 0 . \\n* In each iteration => if the last set bit of variable Power is set , the  we multiply our answer with Number. \\n* in each itearation => Right shift the power and Square the Number .\\n* The loop will go through all the bits and multiply teh requires power of n as we have mentioned above .\\n\\n### Handling for Negative Values of Power\\nex 3^(-5)\\n* We take a bool isNegative and just set it as true if power is negative\\n* if Power is negative just multily power by -1 and do the same thing as metioned in logic\\n* Before returning the ans just check if power was negative and if its true , then we return 1/ans\\n* This is because pow(3,-5) = 1/pow(3/5)\\n\\nCode \\n```\\n    double myPow(double x, int n) {\\n        \\n        // we store these values \\n        double number = x;\\n        long long power = n ;\\n        \\n        //we just store this bool value to keep a track if our power is negative\\n        bool isPowerNegative = ( (n<0) ? true : false );\\n        if( isPowerNegative){\\n            power= (-1)*power;\\n        }       \\n        //how we solve teh qn is that we keep see our power as bbits in binary format\\n        //if m=3 & n = 5 then => n = 101 >> and 3^5 ==> 3^(bin(101)  ==> 3^(4*1 + 2*0  + 1*1) ==>\\n        // 3^(4) * 3^(2*0) * 3^(1*1)\\n        //so at each index of bits , my power of three is swuare and if the bit is set , then\\n        //we will just multiply that power to our answer\\n        double answer = 1 ;\\n        \\n        while( power > 0){\\n                \\n            if((power&1) > 0)\\n            {\\n                answer *=  number;\\n            }\\n            \\n            number*=number;\\n            power = power>>1;\\n            \\n        }\\n        \\n        if(isPowerNegative){\\n            answer = 1/answer;\\n        }\\n        \\n        return answer;\\n        \\n        \\n    }\\n\\n```\\n\\n\\n\\n",
                "solutionTags": [
                    "C",
                    "Bit Manipulation",
                    "Bitmask"
                ],
                "code": "```\\n    double myPow(double x, int n) {\\n        \\n        // we store these values \\n        double number = x;\\n        long long power = n ;\\n        \\n        //we just store this bool value to keep a track if our power is negative\\n        bool isPowerNegative = ( (n<0) ? true : false );\\n        if( isPowerNegative){\\n            power= (-1)*power;\\n        }       \\n        //how we solve teh qn is that we keep see our power as bbits in binary format\\n        //if m=3 & n = 5 then => n = 101 >> and 3^5 ==> 3^(bin(101)  ==> 3^(4*1 + 2*0  + 1*1) ==>\\n        // 3^(4) * 3^(2*0) * 3^(1*1)\\n        //so at each index of bits , my power of three is swuare and if the bit is set , then\\n        //we will just multiply that power to our answer\\n        double answer = 1 ;\\n        \\n        while( power > 0){\\n                \\n            if((power&1) > 0)\\n            {\\n                answer *=  number;\\n            }\\n            \\n            number*=number;\\n            power = power>>1;\\n            \\n        }\\n        \\n        if(isPowerNegative){\\n            answer = 1/answer;\\n        }\\n        \\n        return answer;\\n        \\n        \\n    }\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 738814,
                "title": "java-clean-code",
                "content": "```\\nclass Solution {\\n    public double pow(double x, int n){\\n        if(n == 0) return 1;\\n        if(n == 1) return x;\\n        if(n % 2 == 0)\\n            return pow(x * x, n/2);\\n        return x * pow(x * x, n/2);\\n    }\\n    public double myPow(double x, int n) {\\n        if(n < 0)\\n            return 1.0/pow(x, -n);\\n        return pow(x, n);\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public double pow(double x, int n){\\n        if(n == 0) return 1;\\n        if(n == 1) return x;\\n        if(n % 2 == 0)\\n            return pow(x * x, n/2);\\n        return x * pow(x * x, n/2);\\n    }\\n    public double myPow(double x, int n) {\\n        if(n < 0)\\n            return 1.0/pow(x, -n);\\n        return pow(x, n);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 375712,
                "title": "python-iterative-solution",
                "content": "Inspiratioin:\\n```\\n2^10 = 4^5 = (4^1) * (16^2) = (4^1) * (256^1)\\n```\\n\\n**General case:**\\nTo get `pow(num, power)`\\n* If the `power` is even, use `power/2` as new `power` and `num*num` as new `num`.\\n* if the `power` is odd, multiply the `res` by the `num` and `power` becomes even again.\\n* Finally, when `power` becomes 1,  `pow(num, power)` is the product of `res` and `num**1`.\\n\\n```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0 or x == 1.0:\\n            return 1.0\\n        if x == 0:\\n            if n < 0:\\n                return float(\\'inf\\')\\n            else:\\n                return 0.0\\n        \\n        if n < 0:\\n            x, n = 1/x, -n\\n        \\n        res, num, power = 1.0, x, n\\n        while power != 1:\\n            if power%2 == 0:\\n                num = num*num\\n                power /= 2\\n            else:\\n                res *= num\\n                power -= 1\\n        \\n        return res*num\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\n2^10 = 4^5 = (4^1) * (16^2) = (4^1) * (256^1)\\n```\n```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0 or x == 1.0:\\n            return 1.0\\n        if x == 0:\\n            if n < 0:\\n                return float(\\'inf\\')\\n            else:\\n                return 0.0\\n        \\n        if n < 0:\\n            x, n = 1/x, -n\\n        \\n        res, num, power = 1.0, x, n\\n        while power != 1:\\n            if power%2 == 0:\\n                num = num*num\\n                power /= 2\\n            else:\\n                res *= num\\n                power -= 1\\n        \\n        return res*num\\n```",
                "codeTag": "Java"
            },
            {
                "id": 19665,
                "title": "how-is-this-so-easy-c-solution-did-i-do-this-in-the-right-way",
                "content": "    class Solution {\\n    public:\\n        double myPow(double x, int n) {\\n            if(n==0||x==1) return 1;\\n            if(n==-2147483648) return (double)1/(x*myPow(x,2147483647));\\n            if(n<0) return (double)1/myPow(x,0-n);\\n            if(n%2==0) return myPow(x*x,n/2);\\n            return x* myPow(x,n-1);\\n        }\\n    };",
                "solutionTags": [],
                "code": "class Solution {\\n    public:\\n        double myPow(double x, int n) {\\n            if(n==0||x==1) return 1;\\n            if(n==-2147483648) return (double)1/(x*myPow(x,2147483647));\\n            if(n<0) return (double)1/myPow(x,0-n);\\n            if(n%2==0) return myPow(x*x,n/2);\\n            return x* myPow(x,n-1);\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 19581,
                "title": "simple-java-solution-with-explanation-use-binary-search",
                "content": "\\n    public double myPow(double x, int n) {\\n        // special case\\n        if (x == 0 || x == 1 || n == 1) {return x;}\\n        else if (n == 0) {return 1;}\\n        // negative result\\n        if (x < 0 && n % 2 != 0) {return -myPow(-x, n);}\\n        else if (x < 0 && n % 2 == 0) {return myPow(-x, n);}\\n        // fractor result\\n        if (n < 0) {return 1/myPow(x, -n);}\\n        // main calculation\\n        return helper(x, n);\\n    }\\n    private double helper(double x, int n) {\\n        // precondition: x > 0 && n > 0\\n        if (n == 1) {return x;}\\n        return (((n % 2) == 0)? helper(x*x, n/2): (helper(x*x, n/2)*x));\\n    }\\n\\n\\n----------\\nmy idea is:\\n1. firstly, consider all special case and try to make the input x and n as positive number\\n2. use the idea of binary search. it will decrease the n. Even though the x will increase, the total amount of calculation still decreases.",
                "solutionTags": [
                    "Java"
                ],
                "code": "\\n    public double myPow(double x, int n) {\\n        // special case\\n        if (x == 0 || x == 1 || n == 1) {return x;}\\n        else if (n == 0) {return 1;}\\n        // negative result\\n        if (x < 0 && n % 2 != 0) {return -myPow(-x, n);}\\n        else if (x < 0 && n % 2 == 0) {return myPow(-x, n);}\\n        // fractor result\\n        if (n < 0) {return 1/myPow(x, -n);}\\n        // main calculation\\n        return helper(x, n);\\n    }\\n    private double helper(double x, int n) {\\n        // precondition: x > 0 && n > 0\\n        if (n == 1) {return x;}\\n        return (((n % 2) == 0)? helper(x*x, n/2): (helper(x*x, n/2)*x));\\n    }\\n\\n\\n----------\\nmy idea is:\\n1. firstly, consider all special case and try to make the input x and n as positive number\\n2. use the idea of binary search. it will decrease the n. Even though the x will increase, the total amount of calculation still decreases.",
                "codeTag": "Unknown"
            },
            {
                "id": 19739,
                "title": "my-8-lines-ac-o-logn-solution-in-java",
                "content": "This is a concise solution with recursion.\\n\\n    public class Solution {\\n        public double myPow(double x, int n) {\\n    \\t\\tif (n == 0)\\n    \\t\\t\\treturn 1;\\n    \\n    \\t\\tif (n % 2 == 0) {\\n    \\t\\t\\treturn myPow(x * x, n / 2);\\n    \\t\\t} else {\\n    \\t\\t\\tif (n > 0)\\n    \\t\\t\\t\\treturn x * myPow(x, n - 1);\\n    \\t\\t\\telse\\n    \\t\\t\\t\\treturn 1 / x * myPow(x, n + 1);\\n    \\t\\t}\\n        }\\n    }",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n        public double myPow(double x, int n) {\\n    \\t\\tif (n == 0)\\n    \\t\\t\\treturn 1;\\n    \\n    \\t\\tif (n % 2 == 0) {\\n    \\t\\t\\treturn myPow(x * x, n / 2);\\n    \\t\\t}",
                "codeTag": "Java"
            },
            {
                "id": 19542,
                "title": "python-solution-o-logn-59ms",
                "content": "    class Solution:\\n        # @param {float} x\\n        # @param {integer} n\\n        # @return {float}\\n        def myPow(self, x, n):\\n            if n < 0:\\n                return 1 / self.pow(x, -n)\\n            else:\\n                return self.pow(x, n)\\n    \\n        def pow(self, x, n):\\n            if n == 0:\\n                return 1\\n    \\n            temp = self.pow(x, n / 2)\\n            if n % 2 == 0:\\n                return temp * temp\\n            else:\\n                return temp * temp * x",
                "solutionTags": [
                    "Python"
                ],
                "code": "class Solution:\\n        # @param {float}",
                "codeTag": "Java"
            },
            {
                "id": 3809572,
                "title": "2-methods-explained-beats-100-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nA modified BS approach.\\n- Create a method binaryExp, which takes x and n as parameters.\\n- If n is 0, we return 1.\\n- If n is negative, we calculate the result if n is positive and return the reciprocal of it, thus we return 1 / binaryExp(1/x, n)\\n-  Otherwise, using binary exponentiation we reduce the exponent n to half and calculate and return the result after solving the new sub-problem recursively as discussed previously.\\n- Call binaryExp(x, n) method and return the result.\\n\\n# Complexity\\n- Time complexity: O(logn) \\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(logn) : recursion, O(1) : iterative \\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Reursive\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if(n==0)return 1;\\n        if(n<0){\\n            n = abs(n);\\n            x = 1/x;\\n        }\\n        if(n%2==0){\\n            return myPow(x*x, n/2);\\n        }\\n        else return x* myPow(x ,n-1);\\n        \\n        \\n    }\\n};\\n```\\n\\n# Iterative\\n```\\nclass Solution {\\npublic:\\n    double binaryExp(double x, long long n) {\\n        if (n == 0) {\\n            return 1;\\n        }\\n       \\n        // Handle case where, n < 0.\\n        if (n < 0) {\\n            n = -1 * n;\\n            x = 1.0 / x;\\n        }\\n       \\n        // Perform Binary Exponentiation.\\n        double result = 1;\\n        while (n) {\\n            // If \\'n\\' is odd we multiply result with \\'x\\' and reduce \\'n\\' by \\'1\\'.\\n            if (n % 2 == 1) {\\n                result = result * x;\\n                n -= 1;\\n            }\\n            // We square \\'x\\' and reduce \\'n\\' by half, x^n => (x^2)^(n/2).\\n            x = x * x;\\n            n = n / 2;\\n        }\\n        return result;\\n    }\\n\\n    double myPow(double x, int n) {\\n        return binaryExp(x, (long long) n);\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math",
                    "Recursion",
                    "Iterator"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if(n==0)return 1;\\n        if(n<0){\\n            n = abs(n);\\n            x = 1/x;\\n        }\\n        if(n%2==0){\\n            return myPow(x*x, n/2);\\n        }\\n        else return x* myPow(x ,n-1);\\n        \\n        \\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    double binaryExp(double x, long long n) {\\n        if (n == 0) {\\n            return 1;\\n        }\\n       \\n        // Handle case where, n < 0.\\n        if (n < 0) {\\n            n = -1 * n;\\n            x = 1.0 / x;\\n        }\\n       \\n        // Perform Binary Exponentiation.\\n        double result = 1;\\n        while (n) {\\n            // If \\'n\\' is odd we multiply result with \\'x\\' and reduce \\'n\\' by \\'1\\'.\\n            if (n % 2 == 1) {\\n                result = result * x;\\n                n -= 1;\\n            }\\n            // We square \\'x\\' and reduce \\'n\\' by half, x^n => (x^2)^(n/2).\\n            x = x * x;\\n            n = n / 2;\\n        }\\n        return result;\\n    }\\n\\n    double myPow(double x, int n) {\\n        return binaryExp(x, (long long) n);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3808613,
                "title": "iterative-binary-exponentiation-beats-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nUsed **Binary exponentiation algorithm**, which repeatedly squares the base and halves the exponent until it\\'s zero.\\nSince the exponent is halved at each iteration, the time complexity is logarithmic according to the exponent\\'s size. if n is negative the result is fractional and thus return 1 / binexp(x, n) otherwise return the binexp(x, n)\\n\\nor simply, Using built-in pow() function :: \\nreturn pow(x, n); \\nIt works because given constraints are within the accurately represented range of values by floating-point numbers for pow().\\n\\n# Complexity\\n- Time complexity:\\nO(log n)\\n- Space complexity:\\nO(1)\\n# Code\\n```\\nclass Solution {\\npublic:\\n    double binexp(double base, double exp) {\\n        double ans = 1.0;\\n        while(exp)\\n        {\\n            if ((int)exp % 2) ans = (ans * base) ;\\n            base = (base * base) ;\\n            exp /= 2.0;\\n        }\\n        return ans;\\n    }\\n\\n    double myPow(double x, int n) {\\n        return (n < 0)? 1.0 / binexp(x, n) : binexp(x, n);\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math",
                    "Recursion"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    double binexp(double base, double exp) {\\n        double ans = 1.0;\\n        while(exp)\\n        {\\n            if ((int)exp % 2) ans = (ans * base) ;\\n            base = (base * base) ;\\n            exp /= 2.0;\\n        }\\n        return ans;\\n    }\\n\\n    double myPow(double x, int n) {\\n        return (n < 0)? 1.0 / binexp(x, n) : binexp(x, n);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3807888,
                "title": "c-o-logn",
                "content": "**Connect with me on LinkedIn**: https://www.linkedin.com/in/abhay5349singh/\\n\\n```\\nclass Solution {\\npublic:\\n    \\n    double power(double x ,long n){\\n        if(n==0) return 1;\\n        \\n        if(!(n&1)) return power(x*x,n/2); // even power\\n        return x*power(x,n-1); // odd power \\n    }\\n    \\n    double myPow(double x, int n) {\\n        if(n==0) return 1;\\n        \\n        long l=abs((long)n);\\n        double ans=power(x,l);\\n        \\n        return (n>0 ? ans:1/ans);\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    \\n    double power(double x ,long n){\\n        if(n==0) return 1;\\n        \\n        if(!(n&1)) return power(x*x,n/2); // even power\\n        return x*power(x,n-1); // odd power \\n    }\\n    \\n    double myPow(double x, int n) {\\n        if(n==0) return 1;\\n        \\n        long l=abs((long)n);\\n        double ans=power(x,l);\\n        \\n        return (n>0 ? ans:1/ans);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3807630,
                "title": "c-lsbf-msbf-in-log-n-time-beats-100",
                "content": "# Intuition\\nFollow the rules. Use LSBF/MSBF algorithm to compute. LSBF is in nature can be implemented in a recursive way. MSBF is plemented in an iterative way and can be furthermore optimised. \\n\\nSuch similar computation is used in the most modern antisymmetry cryptography systems, eg. RSA, DSA. \\n\\n# Approach\\nThis programm is really fast and it beats 100%.\\nAccording to the binary expression of the exponent n, this can be done by using successive multiplications and squarings. In order to speed up the calculation, the syntax of switch-case is used instead of if-else-if one in the possible conditional branches.\\n\\nMSBF algorithm is a little bit more subtle. You need to care for possible overflowing for x=INT_MIN=-2^31. If only int type is used, the change sign will cause overflow.\\n\\nSolve this question violating the rules with only 1 line\\n[Please turn on English subtitles if neccessary]\\n[https://youtu.be/P22N3fd73eM](https://youtu.be/P22N3fd73eM)\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n$$O(\\\\log n)$$\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nO(1)+ stack for recursion=$O(\\\\log n)$\\n# Code for BSBF\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n      if (n==0) return 1.0;\\n      int n_mod2=n%2;\\n      double a=1.0;\\n      switch(n_mod2)\\n      {\\n          case 0:a=1;\\n            break;\\n          case 1: a=x;\\n            break;\\n          case -1: a=1.0/x;\\n            break;\\n      }\\n      return myPow( x*x, n/2)*a;\\n    }\\n};\\n```\\n# Code for MSBF\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if (n==0) return 1.0;\\n        int sgn=(n>0)?1:-1;\\n        long long exp=(long long)n*sgn;//avoid of overflow for n=INT_MIN change sign \\n        bitset<32> bexp(exp);\\n        double a=1;\\n        x=(sgn==1)?x:1.0/x;\\n        for(int b=31; b>=0; b--){\\n            a=a*a;\\n            if (bexp[b]) a*=x;\\n        }\\n        return a;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math",
                    "Bit Manipulation",
                    "Recursion"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n      if (n==0) return 1.0;\\n      int n_mod2=n%2;\\n      double a=1.0;\\n      switch(n_mod2)\\n      {\\n          case 0:a=1;\\n            break;\\n          case 1: a=x;\\n            break;\\n          case -1: a=1.0/x;\\n            break;\\n      }\\n      return myPow( x*x, n/2)*a;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if (n==0) return 1.0;\\n        int sgn=(n>0)?1:-1;\\n        long long exp=(long long)n*sgn;//avoid of overflow for n=INT_MIN change sign \\n        bitset<32> bexp(exp);\\n        double a=1;\\n        x=(sgn==1)?x:1.0/x;\\n        for(int b=31; b>=0; b--){\\n            a=a*a;\\n            if (bexp[b]) a*=x;\\n        }\\n        return a;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3561202,
                "title": "best-o-logn-solution",
                "content": "# Approach\\nBinary Exponentiation\\n\\n# Complexity\\n- Time complexity:\\n$$O(logn)$$\\n\\n- Space complexity:\\n$$O(1)$$\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double ans = 1.0;\\n        long long nn = abs(n);\\n        while (nn != 0) {\\n            if (nn % 2 == 0) {\\n                x = x * x;\\n                nn = nn / 2;\\n            } else {\\n                nn = nn - 1;\\n                ans = ans * x;\\n            }\\n        }\\n        if (n < 0) {\\n            ans = 1 / ans;\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double ans = 1.0;\\n        long long nn = abs(n);\\n        while (nn != 0) {\\n            if (nn % 2 == 0) {\\n                x = x * x;\\n                nn = nn / 2;\\n            } else {\\n                nn = nn - 1;\\n                ans = ans * x;\\n            }\\n        }\\n        if (n < 0) {\\n            ans = 1 / ans;\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3265681,
                "title": "easy-to-understand-c-solution-with-0ms-runtime",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n    if (n == 0) {\\n        return 1.0;\\n    }\\n    double res = 1.0;\\n    long long p = abs((long long) n);\\n    while (p > 0) {\\n        if (p % 2 == 1) {\\n            res *= x;\\n        }\\n        x *= x;\\n        p /= 2;\\n    }\\n    if (n < 0) {\\n        return 1.0 / res;\\n    } else {\\n        return res;\\n    }\\n}\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n    if (n == 0) {\\n        return 1.0;\\n    }\\n    double res = 1.0;\\n    long long p = abs((long long) n);\\n    while (p > 0) {\\n        if (p % 2 == 1) {\\n            res *= x;\\n        }\\n        x *= x;\\n        p /= 2;\\n    }\\n    if (n < 0) {\\n        return 1.0 / res;\\n    } else {\\n        return res;\\n    }\\n}\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2660347,
                "title": "faster-than-100-c",
                "content": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double ans = pow(x , n);\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double ans = pow(x , n);\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2520941,
                "title": "js-o-logn-with-explanation",
                "content": "We can simply iterate from 1 to n and multiply number by itself:\\n2 ^ 8 = 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 = 256 => O(n)\\nBut from the other side this problem can be simplified to:\\n2 ^ 8 = (2 ^ 4) * (2 ^ 4) \\nIn this case we just want to calculate 2 ^ 4, and then multiply the result by itself. And to calculate 2 ^ 4 we should divide it too:\\n2 ^ 4 = (2 ^ 2) * (2 ^ 2)\\nSo for each step we should just solve half of the problem => O(logn)\\n```\\n/**\\n * @param {number} x\\n * @param {number} n\\n * @return {number}\\n */\\nconst binaryPow = (num, power) => {\\n    if (num === 0) return 0;\\n    if (power === 0) return 1;\\n    if (power === 1) return num;\\n    \\n    const halfPower = Math.floor(power / 2);\\n    const halfRes = binaryPow(num, halfPower);\\n    const res = halfRes * halfRes;\\n    \\n    return power % 2 === 0 ? res : res * num;\\n}\\n\\nconst myPow = (x, n) => {\\n    const res = binaryPow(x, Math.abs(n));\\n    \\n    return n < 0 ? 1/res : res;\\n};\\n```",
                "solutionTags": [
                    "JavaScript",
                    "Recursion"
                ],
                "code": "```\\n/**\\n * @param {number} x\\n * @param {number} n\\n * @return {number}\\n */\\nconst binaryPow = (num, power) => {\\n    if (num === 0) return 0;\\n    if (power === 0) return 1;\\n    if (power === 1) return num;\\n    \\n    const halfPower = Math.floor(power / 2);\\n    const halfRes = binaryPow(num, halfPower);\\n    const res = halfRes * halfRes;\\n    \\n    return power % 2 === 0 ? res : res * num;\\n}\\n\\nconst myPow = (x, n) => {\\n    const res = binaryPow(x, Math.abs(n));\\n    \\n    return n < 0 ? 1/res : res;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2509076,
                "title": "c-0ms-easy-solution",
                "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        \\n        if(n == 0)\\n            return 1;\\n        \\n        if(x == 1)\\n           return 1; \\n        \\n       long long n1 = n;\\n        double res = 1.0;\\n        \\n        if(n < 0)\\n        {\\n            n1 = n1 * (-1);\\n        }\\n        \\n        while(n1)\\n        {\\n            if(n1%2 == 0){\\n                x = x * x;\\n                n1 = n1 / 2;\\n            }\\n            \\n            else{\\n                res = res * x;\\n                n1--;\\n            }\\n        } \\n        \\n        if(n < 0 )\\n        {\\n            res = 1 / res;\\n        }\\n        \\n        \\n        return res;\\n    }\\n};",
                "solutionTags": [
                    "C",
                    "Iterator"
                ],
                "code": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        \\n        if(n == 0)\\n            return 1;\\n        \\n        if(x == 1)\\n           return 1; \\n        \\n       long long n1 = n;\\n        double res = 1.0;\\n        \\n        if(n < 0)\\n        {\\n            n1 = n1 * (-1);\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 2264894,
                "title": "cpp-recursion-easy",
                "content": "```\\n  double calculation(double x, long int n) \\n     {\\n         if(n==0) return 1;\\n         else if( n<0)\\n             return calculation(1/x,-n);\\n         else if(n%2)\\n             return calculation(x*x,n/2)*x;\\n         else\\n             return calculation(x*x,n/2);\\n     }\\n   \\n    double myPow(double x, int n) {\\n       \\n     return calculation(x,n)   ;\\n    }\\n```",
                "solutionTags": [
                    "C++",
                    "Recursion"
                ],
                "code": "```\\n  double calculation(double x, long int n) \\n     {\\n         if(n==0) return 1;\\n         else if( n<0)\\n             return calculation(1/x,-n);\\n         else if(n%2)\\n             return calculation(x*x,n/2)*x;\\n         else\\n             return calculation(x*x,n/2);\\n     }\\n   \\n    double myPow(double x, int n) {\\n       \\n     return calculation(x,n)   ;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1687578,
                "title": "c-recursive-o-log-n-solution-recursion-laws-faster-than-100",
                "content": "**Binary Exponentiation :**\\n\\n**Like the robots of Asimov, all recursive algorithms must obey three important laws:**\\n1.  A recursive algorithm must call itself, **recursively.**\\n2.  A recursive algorithm must have a **base case.**\\n\\t`if (n == 0) {\\n\\t\\t\\t\\t\\treturn 1;\\n\\t\\t\\t\\t}`\\t\\t \\n3. A recursive algorithm must change its state and move  **toward the base case.**\\n\\n![image](https://assets.leetcode.com/users/images/abe68c78-acda-4118-82cd-557ad7b70592_1642084413.5401745.png)\\n\\n\\n\\nTo handle the case where N=INTEGER_MIN we can use \"abs\" or long (64-bit) variable\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n            //base condition\\n        if(n == 0) {\\n            return 1;\\n        }\\n        \\n        if (n < 0) { \\n            n = abs(n);\\n            x = 1/x;\\n        }\\n        \\n        return (n % 2 == 0) ? myPow(x*x, n / 2) : x * myPow(x*x, n / 2);\\n    }\\n};\\n```",
                "solutionTags": [
                    "Math",
                    "Recursion"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n            //base condition\\n        if(n == 0) {\\n            return 1;\\n        }\\n        \\n        if (n < 0) { \\n            n = abs(n);\\n            x = 1/x;\\n        }\\n        \\n        return (n % 2 == 0) ? myPow(x*x, n / 2) : x * myPow(x*x, n / 2);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1678542,
                "title": "1-liner-c-solution-100-faster-0ms",
                "content": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n,double res=1) {\\n         return n ? myPow(x * x, n / 2, n % 2 ? (n > 0 ? res * x : res / x) : res) : res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Recursion"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n,double res=1) {\\n         return n ? myPow(x * x, n / 2, n % 2 ? (n > 0 ? res * x : res / x) : res) : res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1613917,
                "title": "easy-python-o-logn-solution-with-explanation",
                "content": "```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        ans = 1\\n        #Create temporary variable to store n \\n        N = n\\n        #If it is negative, make it positive\\n        if(N < 0): N = -N\\n        #Iterate while it is greater than 0    \\n        while(N > 0):\\n            #If it is an odd number, multiply ans by x, decrease N by 1\\n            if(N % 2 == 1): ans, N = ans*x, N-1\\n            #If it is an even number, square x, divide N by 2\\n            else: x, N = x*x, N/2\\n        #If it was negative, invert it (since it is to a negative power)\\n        if(n <0): ans = 1 / ans\\n        return ans\\n        \\n```\\nLet\\'s test with an input. \\n\\n        For x = 2, n = -6 \\n\\t\\t\\n        Since n is -6, N = -n = 6\\n        1) First pass:\\n        N%2 != 1 (Since 6 is divisible by 2)\\n        We hit else conditional,\\n        x = x*x = 2*2 = 4\\n        N = N/2 = 6/2 = 3\\n        x = 4, N = 3, ans = 1\\n        \\n        2) Second pass: \\n        N%2 == 1 (Since 3 is not divisible by 2)\\n        We hit if conditional, \\n        ans = ans*x = 1*4 = 4\\n        N = N-1 = 2 \\n        x = 4, N = 2, ans = 4\\n        \\n        3) Third pass: \\n        N%2 != 1 (Since 2 is divisible by 2)\\n        We hit else conditional, \\n        x = x*x = 4*4 = 16\\n        N = N/2 = 2/2 = 1\\n        x = 16, N = 1, ans = 4\\n        \\n        4) Fourth pass (final):\\n        N%2 == 1 (Since 1 is not divisible by 2)\\n        We hit if conditional, \\n        ans = ans*x = 4*16 = 64\\n        N = N-1 = 0 \\n        x = 16, N = 0, ans = 64 \\n        \\n        Loop terminates\\n        \\n        Now, since n < 0, ans = 1/ans = 1/64.\\n",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        ans = 1\\n        #Create temporary variable to store n \\n        N = n\\n        #If it is negative, make it positive\\n        if(N < 0): N = -N\\n        #Iterate while it is greater than 0    \\n        while(N > 0):\\n            #If it is an odd number, multiply ans by x, decrease N by 1\\n            if(N % 2 == 1): ans, N = ans*x, N-1\\n            #If it is an even number, square x, divide N by 2\\n            else: x, N = x*x, N/2\\n        #If it was negative, invert it (since it is to a negative power)\\n        if(n <0): ans = 1 / ans\\n        return ans\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 1555952,
                "title": "o-1-simple-solution-using-math-with-steps-and-explanation",
                "content": "**Simple solution using log concept in math**\\n**Time: O(1)\\nSpace: O(1)**\\n\\n* Let y = x ^ n\\n\\t* Apply log base 10 on both sides \\n* log (y) = log(x ^ n)\\n* log (y) = n * log(x)\\n* y = logInverse( n * log(x) )\\n* y = 10 ^ ( n * log(x) )\\n\\t* Because logInverse(num) = (10 ^ num)   when base is 10\\n```\\nclass Solution:\\n\\n    def myPow(self, x: float, n: int) -> float:\\n        log_y = n * math.log10(abs(x))              # Take abs(x) because log(-x) is invalid\\n        ans = 10 ** log_y\\n\\t\\t\\n        if x < 0:\\n\\t\\t    # Choose the right sign for the ans\\n\\t\\t\\t# If you multiply -ve number even number of times, sign will be +ve; otherwise -ve\\n            ans *= [1,-1][n % 2]\\n\\t\\t\\t\\n        return ans\\n```",
                "solutionTags": [
                    "Python",
                    "Math"
                ],
                "code": "```\\nclass Solution:\\n\\n    def myPow(self, x: float, n: int) -> float:\\n        log_y = n * math.log10(abs(x))              # Take abs(x) because log(-x) is invalid\\n        ans = 10 ** log_y\\n\\t\\t\\n        if x < 0:\\n\\t\\t    # Choose the right sign for the ans\\n\\t\\t\\t# If you multiply -ve number even number of times, sign will be +ve; otherwise -ve\\n            ans *= [1,-1][n % 2]\\n\\t\\t\\t\\n        return ans\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1526020,
                "title": "python-intuitive-solution",
                "content": "## Recursive\\n```python\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0:\\n            return 1\\n        if n < 0:\\n            return 1 / self.myPow(x, abs(n))\\n        return x * self.myPow(x, n - 1) if n % 2 else self.myPow(x * x, n // 2)\\n```\\n\\n## Iterative\\n```python\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        product, index = 1, abs(n)\\n        while index:\\n            if index % 2:\\n                product *= x\\n            # accumulate base on the formula x ** 2n =  (x ** 2) ** n\\n            x *= x  \\n            index //= 2  # index always will be [1, 0] at last\\n        return product if n >= 0 else 1 / product\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```python\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0:\\n            return 1\\n        if n < 0:\\n            return 1 / self.myPow(x, abs(n))\\n        return x * self.myPow(x, n - 1) if n % 2 else self.myPow(x * x, n // 2)\\n```\n```python\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        product, index = 1, abs(n)\\n        while index:\\n            if index % 2:\\n                product *= x\\n            # accumulate base on the formula x ** 2n =  (x ** 2) ** n\\n            x *= x  \\n            index //= 2  # index always will be [1, 0] at last\\n        return product if n >= 0 else 1 / product\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1228314,
                "title": "java-100-fast-simple-recursive",
                "content": "```\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        if (x==0){\\n            return 0;\\n        }\\n        else if (n>=0){\\n            return pow1(x,n); //will return x^n\\n        }\\n        else{\\n           return pow1(1/x,n); //will return 1/x^n\\n                                //passing n or -n both will give same ans \\n        }\\n        \\n        \\n    }\\n    //recursive function to clac power\\n    //uses x^n=(x^(n/2))*(x^(n/2))\\n    public double pow1(double x,int n){\\n        if(n==0){\\n            return 1;\\n        }\\n        else if(n%2==0){\\n            double a= pow1(x,n/2);\\n            return a*a;\\n        }else{\\n            double a=pow1(x,n/2);\\n            return x*a*a;\\n        }\\n    }\\n   \\n}",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n    public double myPow(double x, int n) {\\n        if (x==0){\\n            return 0;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 1191185,
                "title": "javascript-solution-detailed-explanation",
                "content": "### Basic ideas\\n```\\n(x ^ a) ^ b = x^(a * b)\\n```\\nTherefore,\\n* If n is even,\\n\\t```\\n\\tx ^ n = x ^ (2 * (n / 2)) = (x ^ 2) ^ (n / 2)\\n\\t```\\n* If n is odd\\n\\t```\\n\\tx ^ n = x ^ ( 2 * (n - 1) / 2 + 1 ) = (x ^ 2) ^ ((n - 1) / 2 * x\\n\\t```\\nThis way, we can reach `x ^ n` in O(logN) time\\n### Source code\\n```\\nvar myPow = function(x, n) {\\n    if (n === 0) return 1;\\n    if (n === 1) return x;\\n    if (n < 0) return 1 / myPow(x, -n);\\n    // n is even : x^n = (x^2)^(n/2);\\n    if ((n & 1) === 0) return myPow(x * x, n/2);\\n    // n is odd : x^n = (x^2)^((n-1)/2) * x;\\n    return x * myPow(x * x, (n - 1)/2);\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n(x ^ a) ^ b = x^(a * b)\\n```\n```\\n\\tx ^ n = x ^ (2 * (n / 2)) = (x ^ 2) ^ (n / 2)\\n\\t```\n```\\n\\tx ^ n = x ^ ( 2 * (n - 1) / 2 + 1 ) = (x ^ 2) ^ ((n - 1) / 2 * x\\n\\t```\n```\\nvar myPow = function(x, n) {\\n    if (n === 0) return 1;\\n    if (n === 1) return x;\\n    if (n < 0) return 1 / myPow(x, -n);\\n    // n is even : x^n = (x^2)^(n/2);\\n    if ((n & 1) === 0) return myPow(x * x, n/2);\\n    // n is odd : x^n = (x^2)^((n-1)/2) * x;\\n    return x * myPow(x * x, (n - 1)/2);\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1109673,
                "title": "recursive-and-iterative-fast-exponention-solution-in-java",
                "content": "**Solution 1: Recursive Solution**\\n```\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        boolean negative=false;\\n        \\n     if(n<0){\\n         negative=true;\\n         n=-n;\\n     }\\n        double val=myPowHelper(x,n);\\n        if(negative==true) return 1/val;\\n        return val;\\n    }\\n    \\n    private double myPowHelper(double x,int n){\\n           if(n==0) return 1.0;\\n        \\n        double rans=myPowHelper(x,n/2);  // recursion answer\\n        double ans=rans*rans;   \\n         \\n        if((n&1)!=0) ans*=x;    // if n is odd \\n        \\n        return ans;\\n    }\\n}\\n```\\n\\n**Solution 2: Iterative version**\\n```\\n public double myPow(double x, int n) {\\n        long pow = Math.abs((long)n);\\n        double res = 1;\\n        while(pow>0) {\\n            if((pow&1)>0) {\\n                res*=x;\\n            }\\n            pow>>=1;\\n            x*=x;\\n        }    \\n        return n>=0?res:1/res;\\n    }\\n```\\t\\n**Time : O(logN) and Space :O(1)**\\nApplication of this question. : [Fibonacci number](https://leetcode.com/problems/fibonacci-number/discuss/1109647/all-possible-solutions-in-java)\\n",
                "solutionTags": [
                    "Java",
                    "Recursion",
                    "Iterator"
                ],
                "code": "```\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        boolean negative=false;\\n        \\n     if(n<0){\\n         negative=true;\\n         n=-n;\\n     }\\n        double val=myPowHelper(x,n);\\n        if(negative==true) return 1/val;\\n        return val;\\n    }\\n    \\n    private double myPowHelper(double x,int n){\\n           if(n==0) return 1.0;\\n        \\n        double rans=myPowHelper(x,n/2);  // recursion answer\\n        double ans=rans*rans;   \\n         \\n        if((n&1)!=0) ans*=x;    // if n is odd \\n        \\n        return ans;\\n    }\\n}\\n```\n```\\n public double myPow(double x, int n) {\\n        long pow = Math.abs((long)n);\\n        double res = 1;\\n        while(pow>0) {\\n            if((pow&1)>0) {\\n                res*=x;\\n            }\\n            pow>>=1;\\n            x*=x;\\n        }    \\n        return n>=0?res:1/res;\\n    }\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1079926,
                "title": "c-solution-100-faster-easy-to-understand",
                "content": "Understand this. Let us say you are given to find 2^10. You can treat it as following.\\n2^10 -> (2^2)^5 -> 4^5 -> (4^4)^2 * 4 -> (16^2) * 4-> 256 * 4=1024.\\nWhat you are doing here is squaring the x part and dividing the power by 2. If power is odd, then you are making it even, by keeping the extra x away. This way you are able to solve the question easily. The same concept is applied below.\\n\\n\\n```class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        // If the power is zero, then no need to proceed.\\n\\t\\tif(n==0){\\n            return 1;\\n        }\\n        double t=1,y=x;\\n\\t\\t\\n\\t\\t//Keep in mind the limit of int data type. If its exceeding the range, return 0;\\n        if(n==-2147483648){\\n            if(x==1){\\n                return 1;\\n            }\\n            else if(x==-1){\\n                return 1;\\n            }\\n            return 0;\\n        }\\n\\t\\t\\n\\t\\t//Keep the absolute power stored in the variable\\n        int ti=abs(n);\\n        \\n\\t\\t/* Now this step is easy. All you have to do is square the y part, and divide the power by half.\\n\\t\\tDo this while the power is greater than 1. If the power is even, divide by 2. Else reduce it by one and multiply \\n\\t\\tthe remaining integer in any other variable, as Explained above.*/\\n        while(ti>1){\\n            if(ti%2==0){\\n                y*=y;\\n                ti/=2;\\n            }\\n            else{\\n                t*=y;\\n                ti-=1;\\n            }\\n        }\\n\\t\\t\\n\\t\\t//Multiply the storing part with the answer.\\n        y*=t;\\n\\t\\t//Check if n is positive or negative. If negative, then we need to divide it by 1.\\n        if(n < 0){\\n            return 1/y;\\n        }\\n\\t\\t//Return the Answer\\n        return y;\\n    }\\n};\\n```\\n\\n**If you like it, then please give an Upvote.**",
                "solutionTags": [
                    "C",
                    "Iterator"
                ],
                "code": "```class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        // If the power is zero, then no need to proceed.\\n\\t\\tif(n==0){\\n            return 1;\\n        }\\n        double t=1,y=x;\\n\\t\\t\\n\\t\\t//Keep in mind the limit of int data type. If its exceeding the range, return 0;\\n        if(n==-2147483648){\\n            if(x==1){\\n                return 1;\\n            }\\n            else if(x==-1){\\n                return 1;\\n            }\\n            return 0;\\n        }\\n\\t\\t\\n\\t\\t//Keep the absolute power stored in the variable\\n        int ti=abs(n);\\n        \\n\\t\\t/* Now this step is easy. All you have to do is square the y part, and divide the power by half.\\n\\t\\tDo this while the power is greater than 1. If the power is even, divide by 2. Else reduce it by one and multiply \\n\\t\\tthe remaining integer in any other variable, as Explained above.*/\\n        while(ti>1){\\n            if(ti%2==0){\\n                y*=y;\\n                ti/=2;\\n            }\\n            else{\\n                t*=y;\\n                ti-=1;\\n            }\\n        }\\n\\t\\t\\n\\t\\t//Multiply the storing part with the answer.\\n        y*=t;\\n\\t\\t//Check if n is positive or negative. If negative, then we need to divide it by 1.\\n        if(n < 0){\\n            return 1/y;\\n        }\\n\\t\\t//Return the Answer\\n        return y;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 762118,
                "title": "python-better-than-99",
                "content": "```\\ndef myPow(self, x: float, n: int) -> float:\\n        if n == 0: return 1\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n        \\n        if n % 2:\\n            return x * self.myPow(x*x, n//2)\\n        else:\\n            return self.myPow(x*x, n//2)\\n```",
                "solutionTags": [],
                "code": "```\\ndef myPow(self, x: float, n: int) -> float:\\n        if n == 0: return 1\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n        \\n        if n % 2:\\n            return x * self.myPow(x*x, n//2)\\n        else:\\n            return self.myPow(x*x, n//2)\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 739779,
                "title": "java-5-liner-recursion",
                "content": "```\\npublic double myPow(double x, int n) {\\n\\tif (n==Integer.MIN_VALUE) return x==1||x==-1 ? 1 : 0;\\n\\tif (n<0) return 1/myPow(x, -n);\\n\\tif (n==0) return 1;\\n\\tif (n%2==0) return myPow(x * x, n/2);\\n\\treturn x * myPow(x, n - 1);\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic double myPow(double x, int n) {\\n\\tif (n==Integer.MIN_VALUE) return x==1||x==-1 ? 1 : 0;\\n\\tif (n<0) return 1/myPow(x, -n);\\n\\tif (n==0) return 1;\\n\\tif (n%2==0) return myPow(x * x, n/2);\\n\\treturn x * myPow(x, n - 1);\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 739000,
                "title": "recursive-o-logn-solution",
                "content": "\\tpublic double myPow(double x, int n) {\\n\\t\\tif (n == 0) {\\n\\t\\t\\treturn 1;\\n\\t\\t}\\n\\t\\tdouble power = myPow(x, n / 2);\\n\\t\\tif (n % 2 == 0) {\\n\\t\\t\\treturn power * power;\\n\\t\\t} else {\\n\\t\\t\\tif (n > 0) {\\n\\t\\t\\t\\treturn (x * power * power);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn (power * power) / x;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}",
                "solutionTags": [
                    "Java",
                    "Recursion"
                ],
                "code": "\\tpublic double myPow(double x, int n) {\\n\\t\\tif (n == 0) {\\n\\t\\t\\treturn 1;\\n\\t\\t}\\n\\t\\tdouble power = myPow(x, n / 2);\\n\\t\\tif (n % 2 == 0) {\\n\\t\\t\\treturn power * power;\\n\\t\\t} else {\\n\\t\\t\\tif (n > 0) {\\n\\t\\t\\t\\treturn (x * power * power);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn (power * power) / x;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}",
                "codeTag": "Unknown"
            },
            {
                "id": 327778,
                "title": "java-0ms-100-00",
                "content": "Runtime: 0 ms, faster than 100.00% of Java online submissions for Pow(x, n).\\nMemory Usage: 33.5 MB, less than 5.03% of Java online submissions for Pow(x, n).\\n\\n    public double myPow(double x, int n) {\\n        if (n == 0) return 1;\\n        if (n == 1) return x;\\n        if (n == -1) return 1 / x;\\n\\n        final int mid = n / 2;\\n\\n        if (mid * 2 == n) {\\n            // n is even.\\n            double powXMID = myPow(x, mid);\\n            return powXMID * powXMID;\\n        } else {\\n            // n is odd.\\n            double powXMID = myPow(x, mid);\\n            return powXMID * powXMID * myPow(x, n - mid * 2);\\n        }\\n    }",
                "solutionTags": [],
                "code": "Runtime: 0 ms, faster than 100.00% of Java online submissions for Pow(x, n).\\nMemory Usage: 33.5 MB, less than 5.03% of Java online submissions for Pow(x, n).\\n\\n    public double myPow(double x, int n) {\\n        if (n == 0) return 1;\\n        if (n == 1) return x;\\n        if (n == -1) return 1 / x;\\n\\n        final int mid = n / 2;\\n\\n        if (mid * 2 == n) {\\n            // n is even.\\n            double powXMID = myPow(x, mid);\\n            return powXMID * powXMID;\\n        } else {\\n            // n is odd.\\n            double powXMID = myPow(x, mid);\\n            return powXMID * powXMID * myPow(x, n - mid * 2);\\n        }\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 308104,
                "title": "simple-and-easy-to-understand-iterative-python-solution-o-logn",
                "content": "```\\n def myPow(self, x, n):\\n        \"\"\"\\n        :type x: float\\n        :type n: int\\n        :rtype: float\\n        \"\"\"\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n        result = 1\\n        while n:\\n            if n % 2:\\n                result *= x\\n            x *= x\\n            n = n//2\\n        return result\\n\\t\\t",
                "solutionTags": [],
                "code": "```\\n def myPow(self, x, n):\\n        \"\"\"\\n        :type x: float\\n        :type n: int\\n        :rtype: float\\n        \"\"\"\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n        result = 1\\n        while n:\\n            if n % 2:\\n                result *= x\\n            x *= x\\n            n = n//2\\n        return result\\n\\t\\t",
                "codeTag": "Python3"
            },
            {
                "id": 253204,
                "title": "swift",
                "content": "```\\nclass Solution {\\n    func myPow(_ x: Double, _ n: Int) -> Double {\\n        if n == 0 {\\n            return 1\\n        } else if n < 0 {\\n            return 1/myPow(x,-n)\\n        } else if n%2 == 0 {\\n            let half = myPow(x, n/2)\\n            return half * half\\n        } else {\\n            return x * myPow(x, n-1)\\n        }\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    func myPow(_ x: Double, _ n: Int) -> Double {\\n        if n == 0 {\\n            return 1\\n        } else if n < 0 {\\n            return 1/myPow(x,-n)\\n        } else if n%2 == 0 {\\n            let half = myPow(x, n/2)\\n            return half * half\\n        } else {\\n            return x * myPow(x, n-1)\\n        }\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 252769,
                "title": "simple-java-solution-that-beats-100",
                "content": "```\\npublic double myPow(double x, int n) {\\n\\tif(n == 1) return x;\\n\\tif(n == -1) return 1 / x;\\n\\tif(n == 0) return 1.0;\\n\\tdouble half = myPow(x, n / 2);\\n\\treturn half * half * myPow(x, n % 2);\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic double myPow(double x, int n) {\\n\\tif(n == 1) return x;\\n\\tif(n == -1) return 1 / x;\\n\\tif(n == 0) return 1.0;\\n\\tdouble half = myPow(x, n / 2);\\n\\treturn half * half * myPow(x, n % 2);\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 19547,
                "title": "interesting-java-solution-with-some-tricks-that-beats-95",
                "content": "Here is my recursive solution to this problem. Note that one trick when dealing with negative max Integer is to instead of -n where overflow happens have it -(n+1) then multiply it by x.\\n\\n```\\n    public double myPow(double x, int n) {\\n        if(n<0){\\n            return 1/(myPow(x,-(n+1))*x);\\n        }\\n\\t\\tif (n == 0) {\\n\\t\\t\\treturn 1;\\n\\t\\t} else if (n % 2 == 0) {\\n\\t\\t\\treturn Math.pow(myPow(x, n / 2), 2);\\n\\t\\t} else {\\n\\t\\t\\treturn x * myPow(x, n - 1);\\n\\t\\t}\\n\\t}\\n```",
                "solutionTags": [],
                "code": "```\\n    public double myPow(double x, int n) {\\n        if(n<0){\\n            return 1/(myPow(x,-(n+1))*x);\\n        }\\n\\t\\tif (n == 0) {\\n\\t\\t\\treturn 1;\\n\\t\\t} else if (n % 2 == 0) {\\n\\t\\t\\treturn Math.pow(myPow(x, n / 2), 2);\\n\\t\\t} else {\\n\\t\\t\\treturn x * myPow(x, n - 1);\\n\\t\\t}\\n\\t}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 19580,
                "title": "recursive-javascript-solution",
                "content": "I came out with this implementation myself after a few submissions that covered edge cases.\\n\\nIt's passing all cases but anyone able to improve my solution?\\n\\n```javascript\\n/**\\n * @param {number} x\\n * @param {number} n\\n * @return {number}\\n */\\nvar myPow = function(x, n) {\\n    if (n === 0) return 1\\n    else if (n === 1) return x;\\n    else if (n === -1) return 1 / x;\\n    else if (n % 2 === 0) {\\n        const m = myPow(x, n/2);\\n        return m * m\\n    }\\n    else return x * myPow(x, n - 1);\\n};\\n```",
                "solutionTags": [],
                "code": "```javascript\\n/**\\n * @param {number} x\\n * @param {number} n\\n * @return {number}\\n */\\nvar myPow = function(x, n) {\\n    if (n === 0) return 1\\n    else if (n === 1) return x;\\n    else if (n === -1) return 1 / x;\\n    else if (n % 2 === 0) {\\n        const m = myPow(x, n/2);\\n        return m * m\\n    }\\n    else return x * myPow(x, n - 1);\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 19618,
                "title": "java-solution-beats-96",
                "content": "\\n\\n```\\npublic class Solution {\\n    public double myPow(double x, int n) {\\n        if(n == 0) { return 1.0; }\\n        if(x == 0) { return 0.0; }\\n        \\n        if(n % 2 == 0) {\\n            return myPow(x * x, n / 2);\\n        } else {\\n            return (n > 0 ? x : 1.0 / x ) * myPow(x * x, n / 2) ;\\n        }\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic class Solution {\\n    public double myPow(double x, int n) {\\n        if(n == 0) { return 1.0; }\\n        if(x == 0) { return 0.0; }\\n        \\n        if(n % 2 == 0) {\\n            return myPow(x * x, n / 2);\\n        } else {\\n            return (n > 0 ? x : 1.0 / x ) * myPow(x * x, n / 2) ;\\n        }\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 19629,
                "title": "sharing-my-1ms-java-solution-with-pseudocode",
                "content": "/*\\n        PSEUDOCODE:\\n\\nIf n is 0, we return 1 since any number to the power of 0 is 1\\nif n is 1, we return x since any number to the power of 1 is itself\\nif n < 0, we return (1/x) * myPow(1/x, -(n+1))\\n   We could have just return myPow(1/x, -n), but we want to avoid overflow for the case where n is at the borderline \\n   of negative integers (i.e, n = -2147483648). \\n    Example, x^(-3) = (1/x)^3 = (1/x) * (1/x)^2 = (1/x) * (1/x)^(-(-2)) = (1/x) * [(1/x)^(-(-3+1)] = 1/x * [(1/x)^2]\\n\\nFor all other cases, we do the followings:\\n\\nWe know that, for any integers n and k, we can rewrite n as: n = k * (n/k) + (n % k). \\nFor k = 2, n = 2 * (n/2) + (n % 2).\\n\\nExample:\\n7 = 2*(7 / 2) + 7 % 2 = 2*(3) + 1\\n6 = 2*(6 / 2) + 6 % 2 = 2*(3) + 0\\n4 = 3*(4 / 3) + 4 % 3 = 3*(1) + 1\\n\\nWe will be using the formulas below to simplify:\\n\\npow(x, a*b) = pow(x, b*a)\\npow(x, a+b) = pow(x, b+a)\\npow(x, a*b) = pow(pow(x, a), b), i.e. x^(a*b) = (x^(a))^b\\npow(x, a+b) = pow(x, a) * pow(x, b), i.e x^(a+b) = (x^a) * (x^b)\\n\\nSince n = 2 * (n/2) + (n % 2), we have:\\npow(x, n) = pow(x, [ 2*(n/2) + (n%2) ] ) = pow(x, 2*(n/2) ) * pow(x, (n%2)) =\\n          = pow(x, (n/2)*2 ) * pow(x, (n%2)) = pow( pow(x, n/2), 2) * pow(x, (n%2))\\n\\nUsing the ^ sign, we can rewrite the above formula as:\\nx^n = x^[ 2*(n/2) + (n % 2) ] = x^( 2*(n/2) ) * x^(n % 2) =\\n    = [ x^( (n/2)*2 ) ] * x^(n % 2) = [ (x^(n/2)) ^ 2 ] * x^(n % 2)\\n\\nLet y = pow(x, n/2), i.e y = x^(n/2)\\nAlso, let r = n % 2 and z = pow(x, n%2) = pow(x, r).\\n\\nTherefore,\\nresult = pow(x, n) = pow( pow(x, n/2), 2) * pow(x, (n%2)) = \\n       = pow(y, 2) * pow(x, r) = (y^2) * (x^r) = (y*y) * (x^r)\\n\\nBut, since r = n%2 is either 0 or 1, x^r is therefore either 1 (if r=0) or x (if r=1)\\nThus, our result will be: \\nif r = n%2 = 0, result = (y*y). Otherwise, result = (y*y) * x\\n( Remember y = pow(x, n/2) = x^(n/2) )\\n*/\\n```\\npublic double myPow(double x, int n) {\\n        if (n == 0) return 1;\\n        if (n == 1) return x;\\n        if (n < 0) return ( (1/x) * myPow(1/x, -(n+1)) );\\n        \\n        double y = myPow(x, n/2);\\n        double z = y*y;\\n        int r = n % 2;\\n        \\n        return (r == 0) ? z : (z * x);\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\npublic double myPow(double x, int n) {\\n        if (n == 0) return 1;\\n        if (n == 1) return x;\\n        if (n < 0) return ( (1/x) * myPow(1/x, -(n+1)) );\\n        \\n        double y = myPow(x, n/2);\\n        double z = y*y;\\n        int r = n % 2;\\n        \\n        return (r == 0) ? z : (z * x);\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 19661,
                "title": "simple-and-clear-java-solution",
                "content": "    public class Solution {\\n        public double myPow(double x, int n) {\\n            if(n == 0)\\n                return 1;\\n            \\n            if(n == 1)\\n                return x;\\n            \\n            if(n == -1)\\n                return 1/x;\\n\\n            double num = myPow(x, n/2);       \\n            return num * num * myPow(x, n%2); \\n            \\n        }\\n        \\n    }",
                "solutionTags": [],
                "code": "class Solution {\\n        public double myPow(double x, int n) {\\n            if(n == 0)\\n                return 1;\\n            \\n            if(n == 1)\\n                return x;\\n            \\n            if(n == -1)\\n                return 1/x;\\n\\n            double num = myPow(x, n/2);       \\n            return num * num * myPow(x, n%2); \\n            \\n        }",
                "codeTag": "Java"
            },
            {
                "id": 19691,
                "title": "exponentiation-by-squaring-java-1ms-ac",
                "content": "    public double myPow(double x, int n) {\\n      if (n == 0) return 1.0;\\n      if (n < 0) { x = 1 / x; n = ~n + 1; }\\n      if (n == 1) return x;\\n      if (n == 2) return x * x;\\n      if ((n & 1) == 1) return x * myPow(x * x, n >> 1);\\n      return myPow(x * x, n >> 1);\\n    }\\n\\n - Anything raised to the 0th power is 1.\\n - Anything raised to a negative power is it's reciprocal raised to a positive power of the same magnitude.\\n - Anything raised to the 1st power remain unchanged.\\n - Raising anything to the second power just multiplies itself once.\\n - Anything raised to an arbitrary odd power is itself multiplied by its second power raised to half the original power.\\n - Anything raised to an arbitrary even power is it's second power raised to half the original power.\\n\\nThe halfing and squaring makes the algorithm logarithmic with respect to n i.e O(log n).\\n[https://en.wikipedia.org/wiki/Exponentiation_by_squaring][1]\\n\\n\\n  [1]: https://en.wikipedia.org/wiki/Exponentiation_by_squaring",
                "solutionTags": [
                    "Java",
                    "Recursion"
                ],
                "code": "    public double myPow(double x, int n) {\\n      if (n == 0) return 1.0;\\n      if (n < 0) { x = 1 / x; n = ~n + 1; }\\n      if (n == 1) return x;\\n      if (n == 2) return x * x;\\n      if ((n & 1) == 1) return x * myPow(x * x, n >> 1);\\n      return myPow(x * x, n >> 1);\\n    }\\n\\n - Anything raised to the 0th power is 1.\\n - Anything raised to a negative power is it's reciprocal raised to a positive power of the same magnitude.\\n - Anything raised to the 1st power remain unchanged.\\n - Raising anything to the second power just multiplies itself once.\\n - Anything raised to an arbitrary odd power is itself multiplied by its second power raised to half the original power.\\n - Anything raised to an arbitrary even power is it's second power raised to half the original power.\\n\\nThe halfing and squaring makes the algorithm logarithmic with respect to n i.e O(log n).\\n[https://en.wikipedia.org/wiki/Exponentiation_by_squaring][1]\\n\\n\\n  [1]: https://en.wikipedia.org/wiki/Exponentiation_by_squaring",
                "codeTag": "Unknown"
            },
            {
                "id": 19695,
                "title": "simple-c-solution-using-2-k-ary",
                "content": "    class Solution {\\n    public:\\n        double myPow(double x, int n) {\\n            double ret = 1;\\n            if (n < 0){\\n                n *= -1;\\n                x = 1 / x;\\n            }\\n            while (n > 0){\\n                if (n & 1) ret *= x;\\n                x = x * x;\\n                n >>= 1;\\n            }\\n            return ret;\\n        }\\n    };",
                "solutionTags": [
                    "C++"
                ],
                "code": "class Solution {\\n    public:\\n        double myPow(double x, int n) {\\n            double ret = 1;\\n            if (n < 0){\\n                n *= -1;\\n                x = 1 / x;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 3620249,
                "title": "simple-solution-for-python",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\n1. Base case: n is zero, `x^0 is 1`\\n2. If n is negative, convert x to its reciprocal and change n to positive\\n3. If n is even, use the formula `(x^n/2)^2`. Otherwise `x * (x^((n-1)/2))^2`\\n\\n\\n# Complexity\\n- Time complexity: O(n) to O(log n) depending the input case\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(log n) extra space for each callstack. (recursive binary tree)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0:\\n            return 1\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n\\n        result = self.myPow(x, n // 2)\\n        if n % 2 == 0:\\n            return result * result\\n        else:\\n            return x * result * result\\n\\n\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0:\\n            return 1\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n\\n        result = self.myPow(x, n // 2)\\n        if n % 2 == 0:\\n            return result * result\\n        else:\\n            return x * result * result\\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3531924,
                "title": "accepted-very-easy-and-explained-in-detail",
                "content": "\\n\\n# Complexity\\n- Time complexity:\\nO(logn)\\n\\n- Space complexity:\\nO(logn)\\n\\n# Code\\n```\\nclass Solution {\\n    func myPow(_ x: Double, _ n: Int) -> Double {\\n        // for n==0 we return 0 example 2^0\\n        if n == -1 {\\n            return 1/x\\n        }\\n        // for n==1 we return x example 2^1\\n        if n == 1 {\\n            return x\\n        }\\n        // for n==-1 we return 1/x example 2^-1\\n        if n == 0 {\\n            return 1\\n        }\\n        // we call this function for half power like we have to calculate 2^4 so we can calculate 2^2 * 2^2 \\n        let a = myPow(x, n/2)\\n        if n > 0 {\\n            if n%2 == 0 { // example 2^4 here 4 is even so ans will be  ans*ans here ans is 2^2\\n                return a*a\\n            } \\n            // example 2^5 here 5 is odd so ans will be  ans*ans*2 here ans is 2^2\\n            return a*a*x  \\n        }\\n        \\n        if n%2 == 0 {// example 2^-4 here -4 is even so ans will be  ans*ans here ans is 2^-2\\n            return  a*a\\n        } \\n        // example 2^-5 here 5 is odd so ans will be (ans*ans)/2  here ans is 2^-2\\n        return a*a/x       \\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\nclass Solution {\\n    func myPow(_ x: Double, _ n: Int) -> Double {\\n        // for n==0 we return 0 example 2^0\\n        if n == -1 {\\n            return 1/x\\n        }\\n        // for n==1 we return x example 2^1\\n        if n == 1 {\\n            return x\\n        }\\n        // for n==-1 we return 1/x example 2^-1\\n        if n == 0 {\\n            return 1\\n        }\\n        // we call this function for half power like we have to calculate 2^4 so we can calculate 2^2 * 2^2 \\n        let a = myPow(x, n/2)\\n        if n > 0 {\\n            if n%2 == 0 { // example 2^4 here 4 is even so ans will be  ans*ans here ans is 2^2\\n                return a*a\\n            } \\n            // example 2^5 here 5 is odd so ans will be  ans*ans*2 here ans is 2^2\\n            return a*a*x  \\n        }\\n        \\n        if n%2 == 0 {// example 2^-4 here -4 is even so ans will be  ans*ans here ans is 2^-2\\n            return  a*a\\n        } \\n        // example 2^-5 here 5 is odd so ans will be (ans*ans)/2  here ans is 2^-2\\n        return a*a/x       \\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3531914,
                "title": "accepted-very-easy-and-explained-in-detail",
                "content": "\\n# Complexity\\n- Time complexity:\\nO(log(n))\\n- Space complexity:\\nO(log(n))\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n       // for n==0 we return 0 example 2^0\\n        if(n==0) {\\n          return 1;\\n        }\\n         // for n==1 we return x example 2^1\\n        if(n==1) {\\n          return x;\\n        }\\n         // for n==-1 we return 1/x example 2^-1\\n        if(n==-1) {\\n          return 1/x;\\n        }\\n\\n        // we call this function for half power like we have to calculate 2^4 so we can calculate 2^2 * 2^2 \\n        double ans=myPow(x,n/2);\\n       \\n        if(n>0) { \\n          if(n%2==0) { // example 2^4 here 4 is even so ans will be  ans*ans here ans is 2^2\\n            return ans*ans;\\n          }\\n          else {\\n            return ans*ans*x; // example 2^5 here 5 is odd so ans will be  ans*ans*2 here ans is 2^2\\n          }  \\n         } else {\\n            if(n%2==0){\\n              return ans * ans; // example 2^-4 here -4 is even so ans will be  ans*ans here ans is 2^-2\\n            }\\n            else{\\n              return (ans*ans)/x;// example 2^-5 here 5 is odd so ans will be (ans*ans)/2  here ans is 2^-2\\n            }  \\n         }\\n    }\\n};\\n\\n\\n\\n\\n\\n```",
                "solutionTags": [
                    "C++",
                    "Recursion"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n       // for n==0 we return 0 example 2^0\\n        if(n==0) {\\n          return 1;\\n        }\\n         // for n==1 we return x example 2^1\\n        if(n==1) {\\n          return x;\\n        }\\n         // for n==-1 we return 1/x example 2^-1\\n        if(n==-1) {\\n          return 1/x;\\n        }\\n\\n        // we call this function for half power like we have to calculate 2^4 so we can calculate 2^2 * 2^2 \\n        double ans=myPow(x,n/2);\\n       \\n        if(n>0) { \\n          if(n%2==0) { // example 2^4 here 4 is even so ans will be  ans*ans here ans is 2^2\\n            return ans*ans;\\n          }\\n          else {\\n            return ans*ans*x; // example 2^5 here 5 is odd so ans will be  ans*ans*2 here ans is 2^2\\n          }  \\n         } else {\\n            if(n%2==0){\\n              return ans * ans; // example 2^-4 here -4 is even so ans will be  ans*ans here ans is 2^-2\\n            }\\n            else{\\n              return (ans*ans)/x;// example 2^-5 here 5 is odd so ans will be (ans*ans)/2  here ans is 2^-2\\n            }  \\n         }\\n    }\\n};\\n\\n\\n\\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3340508,
                "title": "c-100-fast-single-line-code",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(logn)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        return pow(x,n);\\n    }\\n};\\n```\\nThis works for real\\nLmao Dead :)\\n\\nAlso if you want a detailed function (100% fast), here tis :\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if(n < 0)  x = 1 / x;\\n        long num = labs(n);\\n        double pow = 1;\\n        \\n        while(num){          // equivalent to while(num == 1)\\n            if(num & 1)     // equivalent to if(num % 2 == 1) \\n                pow *= x;\\n\\n            x *= x;         //equivalent to x = x^2\\n            num >>= 1;     //equivalent to nums /= 2\\n        }\\n        return pow;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        return pow(x,n);\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        if(n < 0)  x = 1 / x;\\n        long num = labs(n);\\n        double pow = 1;\\n        \\n        while(num){          // equivalent to while(num == 1)\\n            if(num & 1)     // equivalent to if(num % 2 == 1) \\n                pow *= x;\\n\\n            x *= x;         //equivalent to x = x^2\\n            num >>= 1;     //equivalent to nums /= 2\\n        }\\n        return pow;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3217521,
                "title": "o-1-c-solution-explained-with-images",
                "content": "If you have learned the exponential to logarithmic conversion in your school level mathematics. Then, it would be a piece of cake to you.\\n\\n![solution.jpg](https://assets.leetcode.com/users/images/7f2732bb-de75-41a5-86b9-2d65ed0397b7_1677054064.045268.jpeg)\\n\\nAs the log function accepts only positive value, so we have to check for the negative input.\\n\\n# Approach\\n- if x > 0, return the ans as shown in the above image\\n- if x < 0, first check whether the value of n is even or odd (as for odd the answer would be negative and for even answer will be positve)\\nfor example : $$-2^2 = 4$$ but $$-2^5 = -32$$\\n- return the answer according to the above logic, see solution for better understanding.\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        // return the equation, if x > 0\\n        if (x > 0) return exp(n * log(x));\\n        \\n        // else, we would check for the even and odd parameter\\n        int sign = n % 2 == 0 ? 1 : -1;\\n        x = abs(x); // convert the x to positve\\n        return sign * exp(n * log(x)); // return the result with the appropriate sign\\n    }\\n};\\n```\\n# Complexity\\n- Time complexity: $$O(1)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        // return the equation, if x > 0\\n        if (x > 0) return exp(n * log(x));\\n        \\n        // else, we would check for the even and odd parameter\\n        int sign = n % 2 == 0 ? 1 : -1;\\n        x = abs(x); // convert the x to positve\\n        return sign * exp(n * log(x)); // return the result with the appropriate sign\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3175225,
                "title": "java-recursive-sol-0ms-beats-100",
                "content": "# Code\\n```\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        if (n==0) return 1;\\n        else if (n%2==0) return myPow(x*x, n/2);\\n        else if (n%2==1) return x*myPow(x, n-1);\\n        return 1/myPow(x, -n);\\n    }\\n}",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n    public double myPow(double x, int n) {\\n        if (n==0) return 1;\\n        else if (n%2==0) return myPow(x*x, n/2);\\n        else if (n%2==1) return x*myPow(x, n-1);\\n        return 1/myPow(x, -n);\\n    }",
                "codeTag": "Java"
            }
        ],
        "discussions": [
            {
                "id": 1805804,
                "content": [
                    {
                        "username": "mrkanesir",
                        "content": "how am i supposed to NOT get stack overflow with n=2147483647 ..."
                    },
                    {
                        "username": "itsmesuni19",
                        "content": " if your solu is O(n) solu, use long long i in the loop"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "What are you doing bro, I didn\\'t get this error, try to solve in O(log N)"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "use python? "
                    },
                    {
                        "username": "19bec1397",
                        "content": "[@satyasanjay1999](/satyasanjay1999) how\\n"
                    },
                    {
                        "username": "satyasanjay1999",
                        "content": "You should optimize the solution in logn time complexity. It will also reduce the stack size, then it will also run for n = -2147483648."
                    },
                    {
                        "username": "Linearly_Independent",
                        "content": "\\n\\n\\nreturn x**n"
                    },
                    {
                        "username": "AssortedFantasy",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The point of Leetcode is interview practice.\\nWould you go to an interview, and if they ask how should you implement a fast power algorithm you give them the answer of `x**y`? The point is to test your math skills."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The first two words of the question ask you to implement pow(x, n). It's simply illogical to Implement it by calling itself."
                    },
                    {
                        "username": "Satyam_Mishra",
                        "content": "[@Miiza](/Miiza) Where this is mentioned? My code accepted at just return pow(x,n)"
                    },
                    {
                        "username": "Braderbell",
                        "content": "return pow(x, n)"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "as of  this we should know the implementation of x**n"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "is it working"
                    },
                    {
                        "username": "Miiza",
                        "content": "Only that this is using pow(x, n) in the background, which you\\'re not suppose to use."
                    },
                    {
                        "username": "henrygriffin330",
                        "content": "this is what i did"
                    },
                    {
                        "username": "yanyehe",
                        "content": "duh"
                    },
                    {
                        "username": "JainAnshul",
                        "content": "for Python, is there anything better (in terms of complexity) than this? Otherwise, this seems to be obvious."
                    },
                    {
                        "username": "olooney",
                        "content": "This is the 37th problem I\\'ve solved on the site and in the end I got a respectible 4ms solution. But honestly, It seems like its 2% algorithm, 98% fiddling with binary representations of signed integers and floating point numbers. I also note that, as of this writing, the problem has 1160 downvotes to 428 upvotes, so there\\'s certainly some shared negativity out there. \\n\\nPersonally, I didn\\'t enjoy this problem because I felt like I spent more time writing custom test cases for corner cases than I did programming. Frankly I cannot imagine getting this question in an interview and having the interviewer go, \"aha! but your solution doesn\\'t account for the case when n is -2^31 and x is exactly -1.0! There\\'s no way we\\'d hire such an incompetent programmer!\" And yet the way the acceptance tests are written, you need to nail *every* *single* corner case. Perhaps that frustration is limited to C/C++? Or there\\'s a different algorithm that more naturally accounts for these edge cases? \\n\\nWhat was your experience? Would you agree or disagree with my thesis that this is the worst problem on the site? "
                    },
                    {
                        "username": "samstafford",
                        "content": "funny, when I saw the title of this one, I initially presumed rational exponent, not integer.  I got all excited about Taylor Series with coefficient reuse.  In fact, I will try that."
                    },
                    {
                        "username": "user0291CQ",
                        "content": "I personally don\\'t like questions that have math as a related topic, because that description is vague. Let\\'s say I want to do this problem, and I don\\'t know recursion, nor do I know how to get the power of a number. I can look in the related topics section, and see that I need to know recursion, and study that, before retrying the problem.\\n\\nWhat will I see for the other part of the problem? Just a generic statement, \"Math\". And sure, this problem tells you what to do, but what about the Climbing Stairs problem? The generic \"Math\" topic tells me nothing of the type of math knowledge needed to solve the problem."
                    },
                    {
                        "username": "adlong01",
                        "content": "[@super____hot](/super____hot) I get a considerably faster solution using log."
                    },
                    {
                        "username": "imfosf0r",
                        "content": "I\\'d disagree: your complaints about the edge cases are just how this function is supposed to work, because of how math works. If you get a different answer for -2^31 than everyone else, then the function isn\\'t working right yet."
                    },
                    {
                        "username": "super____hot",
                        "content": "in python x**n is the fastest method"
                    },
                    {
                        "username": "misterabdul",
                        "content": "I\\'m a C fan & I solve this problem using C. For me this is an interesting problem that let me learn again how the basic pow function could be implemented & let me try to optimize my solution to account for every corner cases. This is such a fun exercises in C IMO."
                    },
                    {
                        "username": "tylermatchett",
                        "content": "Here is a test case made by someone who was in a bad mood\\nx=-1\\nn=2147483647"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "This was a simple one. n%2 ==1, x^n is going to be -1. Because -1 ^ even number is equal to 1  AND -1^odd number is equal to -1."
                    },
                    {
                        "username": "sylvex",
                        "content": "```\\nx =\\n2.00000\\nn =\\n-2147483648\\n```\\nWhat even is the point of this edge case???"
                    },
                    {
                        "username": "tree9",
                        "content": "[@tojoSaha](/tojoSaha)  check this out please https://leetcode.com/problems/powx-n/solutions/4086833/beats-100-log-n-solution/ it handles the above case. Basically invert x and make n positive and carry on with same logic as for positive x and n. Take long N."
                    },
                    {
                        "username": "kavyamittal1282",
                        "content": "[@m_afnan2018](/m_afnan2018)  iam doing in java and geting the same error"
                    },
                    {
                        "username": "sandevil23",
                        "content": "i noticed that they have assigned int to n and here they are passing the upper and lower limits of long int "
                    },
                    {
                        "username": "amar180N_th",
                        "content": "hey I also got the same error here"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "Use long long..."
                    },
                    {
                        "username": "ekalavya_pc",
                        "content": "[@tojoSaha](/tojoSaha) use abs"
                    },
                    {
                        "username": "issac_tirkey1",
                        "content": "[@heisenberg280](/heisenberg280) -2^31 = 2147483648 and the positive integer limits till 2147483647 i.e 2^31-1. So when n is negative and -2^31  when you multiply it with -1 to make positive it overflows so store -1*n into a temp variable of type long long and it should work. (before storing typecast it into long long)"
                    },
                    {
                        "username": "tojoSaha",
                        "content": "Were u able to find the solution to this test case?.. If so.. then please tell"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "To make sure that your algorithm is fast."
                    },
                    {
                        "username": "heisenberg280",
                        "content": "How to solve this?"
                    },
                    {
                        "username": "shadowfax_",
                        "content": "just has the onsite and the interviewer tdidn\\'t want the recursive version but wanted the fast one with no recursion. \\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "Hitro",
                        "content": "I\\'m wondering why you guys are not using builtin Math.pow() method??\\nPlease give me some insight.\\nThank you :)"
                    },
                    {
                        "username": "marcjeffs6",
                        "content": "[@barstow123](/barstow123) Is this real? I can go to FAANG and any given Sr developer will know how to recreate any built in method and explain its prime optimization?"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Anarchy-NET",
                        "content": "We were asked to implement the built -in, which is basically Math.pow();\\nSo yeah, that\\'s what we\\'re doing"
                    },
                    {
                        "username": "barstow123",
                        "content": "The idea here is that we perform our work on the shoulders of giants.\\n\\nA more senior developer should be able to recreate built ins and explain how they are optimized if they want higher pay. for example, \"compile the solution in C++ for best performance\" is a good thing to say during senior interviews."
                    },
                    {
                        "username": "otherside2",
                        "content": "My C# code returns the expected Output for the below values when run in Visual Studio, but not here in Leetcode. Where is the disconnect? Could that be the reason why this question has so many thumbs down?\\n\\n240 / 304 test cases passed.\\nStatus: Wrong Answer\\n\\nSubmitted: 0\\xA0minutes ago\\nInput: \\n8.84372\\n-5\\nOutput: \\n0.0\\nExpected: \\n2e-05"
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "make 1 condition for n<0 and return 1/ans(that you are returning)"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Nishtha_2",
                        "content": "Question is under the catogery of binary search can someone suggest me solution with binary search"
                    },
                    {
                        "username": "AshutoshPatel028",
                        "content": "[@AdityaBhate](/AdityaBhate) IT doesn\\'t exist!!!"
                    },
                    {
                        "username": "r_shweta",
                        "content": "same\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "To implement this problem in a naive way, we would need to multiply x with x for n times, as the n is too large, code would take ages to complete. Idea here is that once we find a square of x, we can multiply square of x with square of x to get x^4, we can again multiply x^4 with x^4 to get x^8 and so on and so forth.\\nx^1 * x^1 = x^(1+1) = x^2\\nx^2 * x^2 = x^(2+2) = x^4\\nx^4 * x^4 = x^(4+4) = x^8\\n.....\\nBy this way, we can reduce the time complexity from O(n) to O(log n), This problem comes under binary search as we are squaring(binary) each answer."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "AnudeepReddyBondugula",
                        "content": "[@chickooo](/chickooo)  Actually it follows the concept of binary search, if you want to calculate for n = 4 you first calculate for  n = 2 and before calculating n = 2, you calculate n =1, so that you can obtain the solution in log(n) instead of calculating for 4 times it will take O(N) "
                    },
                    {
                        "username": "chickooo",
                        "content": "I don\\'t know why it was showing under the tag **binary search**, but the tags are now updated to **Math** and **Recursion**"
                    },
                    {
                        "username": "Will",
                        "content": "Please show me the code if any one can solve this using binary search. \\nThanks a lot!"
                    },
                    {
                        "username": "shivagama02",
                        "content": "The code for the same using binary search can be done in javascript. The code for the same is here: \\n\\nvar myPow = function(x, n) {\\n  if (n === 0) return 1;\\n  if (n > 0) return pow(x, n);\\n  if (n < 0) return 1 / pow(x, -n);\\n};\\n\\nvar pow = function (x, n) {\\n  if (n === 1) return x;\\n  var num = pow(x, Math.floor(n / 2));\\n  if (n % 2 === 0) {\\n    return num * num;\\n  } else {\\n    return x * num * num;\\n  }\\n};\\n\\n\\nThe code i tried has been accepted with time and space complexity of  O(log(n))."
                    },
                    {
                        "username": "0xatul",
                        "content": "[@user2387402](/user2387402) Dude that's comment from 2015, that guy must've already moved on lol"
                    },
                    {
                        "username": "user2387402",
                        "content": "It\\'s not binary search. It is binary exploitation. Read the editorial."
                    },
                    {
                        "username": "mateenrehanbatt",
                        "content": "class Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n\\n        result = 1\\n        while n > 0:\\n            if n % 2 == 1:\\n                result *= x\\n            x *= x\\n            n //= 2\\n\\n        return result"
                    }
                ]
            },
            {
                "id": 1576589,
                "content": [
                    {
                        "username": "mrkanesir",
                        "content": "how am i supposed to NOT get stack overflow with n=2147483647 ..."
                    },
                    {
                        "username": "itsmesuni19",
                        "content": " if your solu is O(n) solu, use long long i in the loop"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "What are you doing bro, I didn\\'t get this error, try to solve in O(log N)"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "use python? "
                    },
                    {
                        "username": "19bec1397",
                        "content": "[@satyasanjay1999](/satyasanjay1999) how\\n"
                    },
                    {
                        "username": "satyasanjay1999",
                        "content": "You should optimize the solution in logn time complexity. It will also reduce the stack size, then it will also run for n = -2147483648."
                    },
                    {
                        "username": "Linearly_Independent",
                        "content": "\\n\\n\\nreturn x**n"
                    },
                    {
                        "username": "AssortedFantasy",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The point of Leetcode is interview practice.\\nWould you go to an interview, and if they ask how should you implement a fast power algorithm you give them the answer of `x**y`? The point is to test your math skills."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The first two words of the question ask you to implement pow(x, n). It's simply illogical to Implement it by calling itself."
                    },
                    {
                        "username": "Satyam_Mishra",
                        "content": "[@Miiza](/Miiza) Where this is mentioned? My code accepted at just return pow(x,n)"
                    },
                    {
                        "username": "Braderbell",
                        "content": "return pow(x, n)"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "as of  this we should know the implementation of x**n"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "is it working"
                    },
                    {
                        "username": "Miiza",
                        "content": "Only that this is using pow(x, n) in the background, which you\\'re not suppose to use."
                    },
                    {
                        "username": "henrygriffin330",
                        "content": "this is what i did"
                    },
                    {
                        "username": "yanyehe",
                        "content": "duh"
                    },
                    {
                        "username": "JainAnshul",
                        "content": "for Python, is there anything better (in terms of complexity) than this? Otherwise, this seems to be obvious."
                    },
                    {
                        "username": "olooney",
                        "content": "This is the 37th problem I\\'ve solved on the site and in the end I got a respectible 4ms solution. But honestly, It seems like its 2% algorithm, 98% fiddling with binary representations of signed integers and floating point numbers. I also note that, as of this writing, the problem has 1160 downvotes to 428 upvotes, so there\\'s certainly some shared negativity out there. \\n\\nPersonally, I didn\\'t enjoy this problem because I felt like I spent more time writing custom test cases for corner cases than I did programming. Frankly I cannot imagine getting this question in an interview and having the interviewer go, \"aha! but your solution doesn\\'t account for the case when n is -2^31 and x is exactly -1.0! There\\'s no way we\\'d hire such an incompetent programmer!\" And yet the way the acceptance tests are written, you need to nail *every* *single* corner case. Perhaps that frustration is limited to C/C++? Or there\\'s a different algorithm that more naturally accounts for these edge cases? \\n\\nWhat was your experience? Would you agree or disagree with my thesis that this is the worst problem on the site? "
                    },
                    {
                        "username": "samstafford",
                        "content": "funny, when I saw the title of this one, I initially presumed rational exponent, not integer.  I got all excited about Taylor Series with coefficient reuse.  In fact, I will try that."
                    },
                    {
                        "username": "user0291CQ",
                        "content": "I personally don\\'t like questions that have math as a related topic, because that description is vague. Let\\'s say I want to do this problem, and I don\\'t know recursion, nor do I know how to get the power of a number. I can look in the related topics section, and see that I need to know recursion, and study that, before retrying the problem.\\n\\nWhat will I see for the other part of the problem? Just a generic statement, \"Math\". And sure, this problem tells you what to do, but what about the Climbing Stairs problem? The generic \"Math\" topic tells me nothing of the type of math knowledge needed to solve the problem."
                    },
                    {
                        "username": "adlong01",
                        "content": "[@super____hot](/super____hot) I get a considerably faster solution using log."
                    },
                    {
                        "username": "imfosf0r",
                        "content": "I\\'d disagree: your complaints about the edge cases are just how this function is supposed to work, because of how math works. If you get a different answer for -2^31 than everyone else, then the function isn\\'t working right yet."
                    },
                    {
                        "username": "super____hot",
                        "content": "in python x**n is the fastest method"
                    },
                    {
                        "username": "misterabdul",
                        "content": "I\\'m a C fan & I solve this problem using C. For me this is an interesting problem that let me learn again how the basic pow function could be implemented & let me try to optimize my solution to account for every corner cases. This is such a fun exercises in C IMO."
                    },
                    {
                        "username": "tylermatchett",
                        "content": "Here is a test case made by someone who was in a bad mood\\nx=-1\\nn=2147483647"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "This was a simple one. n%2 ==1, x^n is going to be -1. Because -1 ^ even number is equal to 1  AND -1^odd number is equal to -1."
                    },
                    {
                        "username": "sylvex",
                        "content": "```\\nx =\\n2.00000\\nn =\\n-2147483648\\n```\\nWhat even is the point of this edge case???"
                    },
                    {
                        "username": "tree9",
                        "content": "[@tojoSaha](/tojoSaha)  check this out please https://leetcode.com/problems/powx-n/solutions/4086833/beats-100-log-n-solution/ it handles the above case. Basically invert x and make n positive and carry on with same logic as for positive x and n. Take long N."
                    },
                    {
                        "username": "kavyamittal1282",
                        "content": "[@m_afnan2018](/m_afnan2018)  iam doing in java and geting the same error"
                    },
                    {
                        "username": "sandevil23",
                        "content": "i noticed that they have assigned int to n and here they are passing the upper and lower limits of long int "
                    },
                    {
                        "username": "amar180N_th",
                        "content": "hey I also got the same error here"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "Use long long..."
                    },
                    {
                        "username": "ekalavya_pc",
                        "content": "[@tojoSaha](/tojoSaha) use abs"
                    },
                    {
                        "username": "issac_tirkey1",
                        "content": "[@heisenberg280](/heisenberg280) -2^31 = 2147483648 and the positive integer limits till 2147483647 i.e 2^31-1. So when n is negative and -2^31  when you multiply it with -1 to make positive it overflows so store -1*n into a temp variable of type long long and it should work. (before storing typecast it into long long)"
                    },
                    {
                        "username": "tojoSaha",
                        "content": "Were u able to find the solution to this test case?.. If so.. then please tell"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "To make sure that your algorithm is fast."
                    },
                    {
                        "username": "heisenberg280",
                        "content": "How to solve this?"
                    },
                    {
                        "username": "shadowfax_",
                        "content": "just has the onsite and the interviewer tdidn\\'t want the recursive version but wanted the fast one with no recursion. \\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "Hitro",
                        "content": "I\\'m wondering why you guys are not using builtin Math.pow() method??\\nPlease give me some insight.\\nThank you :)"
                    },
                    {
                        "username": "marcjeffs6",
                        "content": "[@barstow123](/barstow123) Is this real? I can go to FAANG and any given Sr developer will know how to recreate any built in method and explain its prime optimization?"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Anarchy-NET",
                        "content": "We were asked to implement the built -in, which is basically Math.pow();\\nSo yeah, that\\'s what we\\'re doing"
                    },
                    {
                        "username": "barstow123",
                        "content": "The idea here is that we perform our work on the shoulders of giants.\\n\\nA more senior developer should be able to recreate built ins and explain how they are optimized if they want higher pay. for example, \"compile the solution in C++ for best performance\" is a good thing to say during senior interviews."
                    },
                    {
                        "username": "otherside2",
                        "content": "My C# code returns the expected Output for the below values when run in Visual Studio, but not here in Leetcode. Where is the disconnect? Could that be the reason why this question has so many thumbs down?\\n\\n240 / 304 test cases passed.\\nStatus: Wrong Answer\\n\\nSubmitted: 0\\xA0minutes ago\\nInput: \\n8.84372\\n-5\\nOutput: \\n0.0\\nExpected: \\n2e-05"
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "make 1 condition for n<0 and return 1/ans(that you are returning)"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Nishtha_2",
                        "content": "Question is under the catogery of binary search can someone suggest me solution with binary search"
                    },
                    {
                        "username": "AshutoshPatel028",
                        "content": "[@AdityaBhate](/AdityaBhate) IT doesn\\'t exist!!!"
                    },
                    {
                        "username": "r_shweta",
                        "content": "same\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "To implement this problem in a naive way, we would need to multiply x with x for n times, as the n is too large, code would take ages to complete. Idea here is that once we find a square of x, we can multiply square of x with square of x to get x^4, we can again multiply x^4 with x^4 to get x^8 and so on and so forth.\\nx^1 * x^1 = x^(1+1) = x^2\\nx^2 * x^2 = x^(2+2) = x^4\\nx^4 * x^4 = x^(4+4) = x^8\\n.....\\nBy this way, we can reduce the time complexity from O(n) to O(log n), This problem comes under binary search as we are squaring(binary) each answer."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "AnudeepReddyBondugula",
                        "content": "[@chickooo](/chickooo)  Actually it follows the concept of binary search, if you want to calculate for n = 4 you first calculate for  n = 2 and before calculating n = 2, you calculate n =1, so that you can obtain the solution in log(n) instead of calculating for 4 times it will take O(N) "
                    },
                    {
                        "username": "chickooo",
                        "content": "I don\\'t know why it was showing under the tag **binary search**, but the tags are now updated to **Math** and **Recursion**"
                    },
                    {
                        "username": "Will",
                        "content": "Please show me the code if any one can solve this using binary search. \\nThanks a lot!"
                    },
                    {
                        "username": "shivagama02",
                        "content": "The code for the same using binary search can be done in javascript. The code for the same is here: \\n\\nvar myPow = function(x, n) {\\n  if (n === 0) return 1;\\n  if (n > 0) return pow(x, n);\\n  if (n < 0) return 1 / pow(x, -n);\\n};\\n\\nvar pow = function (x, n) {\\n  if (n === 1) return x;\\n  var num = pow(x, Math.floor(n / 2));\\n  if (n % 2 === 0) {\\n    return num * num;\\n  } else {\\n    return x * num * num;\\n  }\\n};\\n\\n\\nThe code i tried has been accepted with time and space complexity of  O(log(n))."
                    },
                    {
                        "username": "0xatul",
                        "content": "[@user2387402](/user2387402) Dude that's comment from 2015, that guy must've already moved on lol"
                    },
                    {
                        "username": "user2387402",
                        "content": "It\\'s not binary search. It is binary exploitation. Read the editorial."
                    },
                    {
                        "username": "mateenrehanbatt",
                        "content": "class Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n\\n        result = 1\\n        while n > 0:\\n            if n % 2 == 1:\\n                result *= x\\n            x *= x\\n            n //= 2\\n\\n        return result"
                    }
                ]
            },
            {
                "id": 1565960,
                "content": [
                    {
                        "username": "mrkanesir",
                        "content": "how am i supposed to NOT get stack overflow with n=2147483647 ..."
                    },
                    {
                        "username": "itsmesuni19",
                        "content": " if your solu is O(n) solu, use long long i in the loop"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "What are you doing bro, I didn\\'t get this error, try to solve in O(log N)"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "use python? "
                    },
                    {
                        "username": "19bec1397",
                        "content": "[@satyasanjay1999](/satyasanjay1999) how\\n"
                    },
                    {
                        "username": "satyasanjay1999",
                        "content": "You should optimize the solution in logn time complexity. It will also reduce the stack size, then it will also run for n = -2147483648."
                    },
                    {
                        "username": "Linearly_Independent",
                        "content": "\\n\\n\\nreturn x**n"
                    },
                    {
                        "username": "AssortedFantasy",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The point of Leetcode is interview practice.\\nWould you go to an interview, and if they ask how should you implement a fast power algorithm you give them the answer of `x**y`? The point is to test your math skills."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The first two words of the question ask you to implement pow(x, n). It's simply illogical to Implement it by calling itself."
                    },
                    {
                        "username": "Satyam_Mishra",
                        "content": "[@Miiza](/Miiza) Where this is mentioned? My code accepted at just return pow(x,n)"
                    },
                    {
                        "username": "Braderbell",
                        "content": "return pow(x, n)"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "as of  this we should know the implementation of x**n"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "is it working"
                    },
                    {
                        "username": "Miiza",
                        "content": "Only that this is using pow(x, n) in the background, which you\\'re not suppose to use."
                    },
                    {
                        "username": "henrygriffin330",
                        "content": "this is what i did"
                    },
                    {
                        "username": "yanyehe",
                        "content": "duh"
                    },
                    {
                        "username": "JainAnshul",
                        "content": "for Python, is there anything better (in terms of complexity) than this? Otherwise, this seems to be obvious."
                    },
                    {
                        "username": "olooney",
                        "content": "This is the 37th problem I\\'ve solved on the site and in the end I got a respectible 4ms solution. But honestly, It seems like its 2% algorithm, 98% fiddling with binary representations of signed integers and floating point numbers. I also note that, as of this writing, the problem has 1160 downvotes to 428 upvotes, so there\\'s certainly some shared negativity out there. \\n\\nPersonally, I didn\\'t enjoy this problem because I felt like I spent more time writing custom test cases for corner cases than I did programming. Frankly I cannot imagine getting this question in an interview and having the interviewer go, \"aha! but your solution doesn\\'t account for the case when n is -2^31 and x is exactly -1.0! There\\'s no way we\\'d hire such an incompetent programmer!\" And yet the way the acceptance tests are written, you need to nail *every* *single* corner case. Perhaps that frustration is limited to C/C++? Or there\\'s a different algorithm that more naturally accounts for these edge cases? \\n\\nWhat was your experience? Would you agree or disagree with my thesis that this is the worst problem on the site? "
                    },
                    {
                        "username": "samstafford",
                        "content": "funny, when I saw the title of this one, I initially presumed rational exponent, not integer.  I got all excited about Taylor Series with coefficient reuse.  In fact, I will try that."
                    },
                    {
                        "username": "user0291CQ",
                        "content": "I personally don\\'t like questions that have math as a related topic, because that description is vague. Let\\'s say I want to do this problem, and I don\\'t know recursion, nor do I know how to get the power of a number. I can look in the related topics section, and see that I need to know recursion, and study that, before retrying the problem.\\n\\nWhat will I see for the other part of the problem? Just a generic statement, \"Math\". And sure, this problem tells you what to do, but what about the Climbing Stairs problem? The generic \"Math\" topic tells me nothing of the type of math knowledge needed to solve the problem."
                    },
                    {
                        "username": "adlong01",
                        "content": "[@super____hot](/super____hot) I get a considerably faster solution using log."
                    },
                    {
                        "username": "imfosf0r",
                        "content": "I\\'d disagree: your complaints about the edge cases are just how this function is supposed to work, because of how math works. If you get a different answer for -2^31 than everyone else, then the function isn\\'t working right yet."
                    },
                    {
                        "username": "super____hot",
                        "content": "in python x**n is the fastest method"
                    },
                    {
                        "username": "misterabdul",
                        "content": "I\\'m a C fan & I solve this problem using C. For me this is an interesting problem that let me learn again how the basic pow function could be implemented & let me try to optimize my solution to account for every corner cases. This is such a fun exercises in C IMO."
                    },
                    {
                        "username": "tylermatchett",
                        "content": "Here is a test case made by someone who was in a bad mood\\nx=-1\\nn=2147483647"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "This was a simple one. n%2 ==1, x^n is going to be -1. Because -1 ^ even number is equal to 1  AND -1^odd number is equal to -1."
                    },
                    {
                        "username": "sylvex",
                        "content": "```\\nx =\\n2.00000\\nn =\\n-2147483648\\n```\\nWhat even is the point of this edge case???"
                    },
                    {
                        "username": "tree9",
                        "content": "[@tojoSaha](/tojoSaha)  check this out please https://leetcode.com/problems/powx-n/solutions/4086833/beats-100-log-n-solution/ it handles the above case. Basically invert x and make n positive and carry on with same logic as for positive x and n. Take long N."
                    },
                    {
                        "username": "kavyamittal1282",
                        "content": "[@m_afnan2018](/m_afnan2018)  iam doing in java and geting the same error"
                    },
                    {
                        "username": "sandevil23",
                        "content": "i noticed that they have assigned int to n and here they are passing the upper and lower limits of long int "
                    },
                    {
                        "username": "amar180N_th",
                        "content": "hey I also got the same error here"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "Use long long..."
                    },
                    {
                        "username": "ekalavya_pc",
                        "content": "[@tojoSaha](/tojoSaha) use abs"
                    },
                    {
                        "username": "issac_tirkey1",
                        "content": "[@heisenberg280](/heisenberg280) -2^31 = 2147483648 and the positive integer limits till 2147483647 i.e 2^31-1. So when n is negative and -2^31  when you multiply it with -1 to make positive it overflows so store -1*n into a temp variable of type long long and it should work. (before storing typecast it into long long)"
                    },
                    {
                        "username": "tojoSaha",
                        "content": "Were u able to find the solution to this test case?.. If so.. then please tell"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "To make sure that your algorithm is fast."
                    },
                    {
                        "username": "heisenberg280",
                        "content": "How to solve this?"
                    },
                    {
                        "username": "shadowfax_",
                        "content": "just has the onsite and the interviewer tdidn\\'t want the recursive version but wanted the fast one with no recursion. \\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "Hitro",
                        "content": "I\\'m wondering why you guys are not using builtin Math.pow() method??\\nPlease give me some insight.\\nThank you :)"
                    },
                    {
                        "username": "marcjeffs6",
                        "content": "[@barstow123](/barstow123) Is this real? I can go to FAANG and any given Sr developer will know how to recreate any built in method and explain its prime optimization?"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Anarchy-NET",
                        "content": "We were asked to implement the built -in, which is basically Math.pow();\\nSo yeah, that\\'s what we\\'re doing"
                    },
                    {
                        "username": "barstow123",
                        "content": "The idea here is that we perform our work on the shoulders of giants.\\n\\nA more senior developer should be able to recreate built ins and explain how they are optimized if they want higher pay. for example, \"compile the solution in C++ for best performance\" is a good thing to say during senior interviews."
                    },
                    {
                        "username": "otherside2",
                        "content": "My C# code returns the expected Output for the below values when run in Visual Studio, but not here in Leetcode. Where is the disconnect? Could that be the reason why this question has so many thumbs down?\\n\\n240 / 304 test cases passed.\\nStatus: Wrong Answer\\n\\nSubmitted: 0\\xA0minutes ago\\nInput: \\n8.84372\\n-5\\nOutput: \\n0.0\\nExpected: \\n2e-05"
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "make 1 condition for n<0 and return 1/ans(that you are returning)"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Nishtha_2",
                        "content": "Question is under the catogery of binary search can someone suggest me solution with binary search"
                    },
                    {
                        "username": "AshutoshPatel028",
                        "content": "[@AdityaBhate](/AdityaBhate) IT doesn\\'t exist!!!"
                    },
                    {
                        "username": "r_shweta",
                        "content": "same\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "To implement this problem in a naive way, we would need to multiply x with x for n times, as the n is too large, code would take ages to complete. Idea here is that once we find a square of x, we can multiply square of x with square of x to get x^4, we can again multiply x^4 with x^4 to get x^8 and so on and so forth.\\nx^1 * x^1 = x^(1+1) = x^2\\nx^2 * x^2 = x^(2+2) = x^4\\nx^4 * x^4 = x^(4+4) = x^8\\n.....\\nBy this way, we can reduce the time complexity from O(n) to O(log n), This problem comes under binary search as we are squaring(binary) each answer."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "AnudeepReddyBondugula",
                        "content": "[@chickooo](/chickooo)  Actually it follows the concept of binary search, if you want to calculate for n = 4 you first calculate for  n = 2 and before calculating n = 2, you calculate n =1, so that you can obtain the solution in log(n) instead of calculating for 4 times it will take O(N) "
                    },
                    {
                        "username": "chickooo",
                        "content": "I don\\'t know why it was showing under the tag **binary search**, but the tags are now updated to **Math** and **Recursion**"
                    },
                    {
                        "username": "Will",
                        "content": "Please show me the code if any one can solve this using binary search. \\nThanks a lot!"
                    },
                    {
                        "username": "shivagama02",
                        "content": "The code for the same using binary search can be done in javascript. The code for the same is here: \\n\\nvar myPow = function(x, n) {\\n  if (n === 0) return 1;\\n  if (n > 0) return pow(x, n);\\n  if (n < 0) return 1 / pow(x, -n);\\n};\\n\\nvar pow = function (x, n) {\\n  if (n === 1) return x;\\n  var num = pow(x, Math.floor(n / 2));\\n  if (n % 2 === 0) {\\n    return num * num;\\n  } else {\\n    return x * num * num;\\n  }\\n};\\n\\n\\nThe code i tried has been accepted with time and space complexity of  O(log(n))."
                    },
                    {
                        "username": "0xatul",
                        "content": "[@user2387402](/user2387402) Dude that's comment from 2015, that guy must've already moved on lol"
                    },
                    {
                        "username": "user2387402",
                        "content": "It\\'s not binary search. It is binary exploitation. Read the editorial."
                    },
                    {
                        "username": "mateenrehanbatt",
                        "content": "class Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n\\n        result = 1\\n        while n > 0:\\n            if n % 2 == 1:\\n                result *= x\\n            x *= x\\n            n //= 2\\n\\n        return result"
                    }
                ]
            },
            {
                "id": 1803500,
                "content": [
                    {
                        "username": "mrkanesir",
                        "content": "how am i supposed to NOT get stack overflow with n=2147483647 ..."
                    },
                    {
                        "username": "itsmesuni19",
                        "content": " if your solu is O(n) solu, use long long i in the loop"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "What are you doing bro, I didn\\'t get this error, try to solve in O(log N)"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "use python? "
                    },
                    {
                        "username": "19bec1397",
                        "content": "[@satyasanjay1999](/satyasanjay1999) how\\n"
                    },
                    {
                        "username": "satyasanjay1999",
                        "content": "You should optimize the solution in logn time complexity. It will also reduce the stack size, then it will also run for n = -2147483648."
                    },
                    {
                        "username": "Linearly_Independent",
                        "content": "\\n\\n\\nreturn x**n"
                    },
                    {
                        "username": "AssortedFantasy",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The point of Leetcode is interview practice.\\nWould you go to an interview, and if they ask how should you implement a fast power algorithm you give them the answer of `x**y`? The point is to test your math skills."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The first two words of the question ask you to implement pow(x, n). It's simply illogical to Implement it by calling itself."
                    },
                    {
                        "username": "Satyam_Mishra",
                        "content": "[@Miiza](/Miiza) Where this is mentioned? My code accepted at just return pow(x,n)"
                    },
                    {
                        "username": "Braderbell",
                        "content": "return pow(x, n)"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "as of  this we should know the implementation of x**n"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "is it working"
                    },
                    {
                        "username": "Miiza",
                        "content": "Only that this is using pow(x, n) in the background, which you\\'re not suppose to use."
                    },
                    {
                        "username": "henrygriffin330",
                        "content": "this is what i did"
                    },
                    {
                        "username": "yanyehe",
                        "content": "duh"
                    },
                    {
                        "username": "JainAnshul",
                        "content": "for Python, is there anything better (in terms of complexity) than this? Otherwise, this seems to be obvious."
                    },
                    {
                        "username": "olooney",
                        "content": "This is the 37th problem I\\'ve solved on the site and in the end I got a respectible 4ms solution. But honestly, It seems like its 2% algorithm, 98% fiddling with binary representations of signed integers and floating point numbers. I also note that, as of this writing, the problem has 1160 downvotes to 428 upvotes, so there\\'s certainly some shared negativity out there. \\n\\nPersonally, I didn\\'t enjoy this problem because I felt like I spent more time writing custom test cases for corner cases than I did programming. Frankly I cannot imagine getting this question in an interview and having the interviewer go, \"aha! but your solution doesn\\'t account for the case when n is -2^31 and x is exactly -1.0! There\\'s no way we\\'d hire such an incompetent programmer!\" And yet the way the acceptance tests are written, you need to nail *every* *single* corner case. Perhaps that frustration is limited to C/C++? Or there\\'s a different algorithm that more naturally accounts for these edge cases? \\n\\nWhat was your experience? Would you agree or disagree with my thesis that this is the worst problem on the site? "
                    },
                    {
                        "username": "samstafford",
                        "content": "funny, when I saw the title of this one, I initially presumed rational exponent, not integer.  I got all excited about Taylor Series with coefficient reuse.  In fact, I will try that."
                    },
                    {
                        "username": "user0291CQ",
                        "content": "I personally don\\'t like questions that have math as a related topic, because that description is vague. Let\\'s say I want to do this problem, and I don\\'t know recursion, nor do I know how to get the power of a number. I can look in the related topics section, and see that I need to know recursion, and study that, before retrying the problem.\\n\\nWhat will I see for the other part of the problem? Just a generic statement, \"Math\". And sure, this problem tells you what to do, but what about the Climbing Stairs problem? The generic \"Math\" topic tells me nothing of the type of math knowledge needed to solve the problem."
                    },
                    {
                        "username": "adlong01",
                        "content": "[@super____hot](/super____hot) I get a considerably faster solution using log."
                    },
                    {
                        "username": "imfosf0r",
                        "content": "I\\'d disagree: your complaints about the edge cases are just how this function is supposed to work, because of how math works. If you get a different answer for -2^31 than everyone else, then the function isn\\'t working right yet."
                    },
                    {
                        "username": "super____hot",
                        "content": "in python x**n is the fastest method"
                    },
                    {
                        "username": "misterabdul",
                        "content": "I\\'m a C fan & I solve this problem using C. For me this is an interesting problem that let me learn again how the basic pow function could be implemented & let me try to optimize my solution to account for every corner cases. This is such a fun exercises in C IMO."
                    },
                    {
                        "username": "tylermatchett",
                        "content": "Here is a test case made by someone who was in a bad mood\\nx=-1\\nn=2147483647"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "This was a simple one. n%2 ==1, x^n is going to be -1. Because -1 ^ even number is equal to 1  AND -1^odd number is equal to -1."
                    },
                    {
                        "username": "sylvex",
                        "content": "```\\nx =\\n2.00000\\nn =\\n-2147483648\\n```\\nWhat even is the point of this edge case???"
                    },
                    {
                        "username": "tree9",
                        "content": "[@tojoSaha](/tojoSaha)  check this out please https://leetcode.com/problems/powx-n/solutions/4086833/beats-100-log-n-solution/ it handles the above case. Basically invert x and make n positive and carry on with same logic as for positive x and n. Take long N."
                    },
                    {
                        "username": "kavyamittal1282",
                        "content": "[@m_afnan2018](/m_afnan2018)  iam doing in java and geting the same error"
                    },
                    {
                        "username": "sandevil23",
                        "content": "i noticed that they have assigned int to n and here they are passing the upper and lower limits of long int "
                    },
                    {
                        "username": "amar180N_th",
                        "content": "hey I also got the same error here"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "Use long long..."
                    },
                    {
                        "username": "ekalavya_pc",
                        "content": "[@tojoSaha](/tojoSaha) use abs"
                    },
                    {
                        "username": "issac_tirkey1",
                        "content": "[@heisenberg280](/heisenberg280) -2^31 = 2147483648 and the positive integer limits till 2147483647 i.e 2^31-1. So when n is negative and -2^31  when you multiply it with -1 to make positive it overflows so store -1*n into a temp variable of type long long and it should work. (before storing typecast it into long long)"
                    },
                    {
                        "username": "tojoSaha",
                        "content": "Were u able to find the solution to this test case?.. If so.. then please tell"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "To make sure that your algorithm is fast."
                    },
                    {
                        "username": "heisenberg280",
                        "content": "How to solve this?"
                    },
                    {
                        "username": "shadowfax_",
                        "content": "just has the onsite and the interviewer tdidn\\'t want the recursive version but wanted the fast one with no recursion. \\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "Hitro",
                        "content": "I\\'m wondering why you guys are not using builtin Math.pow() method??\\nPlease give me some insight.\\nThank you :)"
                    },
                    {
                        "username": "marcjeffs6",
                        "content": "[@barstow123](/barstow123) Is this real? I can go to FAANG and any given Sr developer will know how to recreate any built in method and explain its prime optimization?"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Anarchy-NET",
                        "content": "We were asked to implement the built -in, which is basically Math.pow();\\nSo yeah, that\\'s what we\\'re doing"
                    },
                    {
                        "username": "barstow123",
                        "content": "The idea here is that we perform our work on the shoulders of giants.\\n\\nA more senior developer should be able to recreate built ins and explain how they are optimized if they want higher pay. for example, \"compile the solution in C++ for best performance\" is a good thing to say during senior interviews."
                    },
                    {
                        "username": "otherside2",
                        "content": "My C# code returns the expected Output for the below values when run in Visual Studio, but not here in Leetcode. Where is the disconnect? Could that be the reason why this question has so many thumbs down?\\n\\n240 / 304 test cases passed.\\nStatus: Wrong Answer\\n\\nSubmitted: 0\\xA0minutes ago\\nInput: \\n8.84372\\n-5\\nOutput: \\n0.0\\nExpected: \\n2e-05"
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "make 1 condition for n<0 and return 1/ans(that you are returning)"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Nishtha_2",
                        "content": "Question is under the catogery of binary search can someone suggest me solution with binary search"
                    },
                    {
                        "username": "AshutoshPatel028",
                        "content": "[@AdityaBhate](/AdityaBhate) IT doesn\\'t exist!!!"
                    },
                    {
                        "username": "r_shweta",
                        "content": "same\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "To implement this problem in a naive way, we would need to multiply x with x for n times, as the n is too large, code would take ages to complete. Idea here is that once we find a square of x, we can multiply square of x with square of x to get x^4, we can again multiply x^4 with x^4 to get x^8 and so on and so forth.\\nx^1 * x^1 = x^(1+1) = x^2\\nx^2 * x^2 = x^(2+2) = x^4\\nx^4 * x^4 = x^(4+4) = x^8\\n.....\\nBy this way, we can reduce the time complexity from O(n) to O(log n), This problem comes under binary search as we are squaring(binary) each answer."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "AnudeepReddyBondugula",
                        "content": "[@chickooo](/chickooo)  Actually it follows the concept of binary search, if you want to calculate for n = 4 you first calculate for  n = 2 and before calculating n = 2, you calculate n =1, so that you can obtain the solution in log(n) instead of calculating for 4 times it will take O(N) "
                    },
                    {
                        "username": "chickooo",
                        "content": "I don\\'t know why it was showing under the tag **binary search**, but the tags are now updated to **Math** and **Recursion**"
                    },
                    {
                        "username": "Will",
                        "content": "Please show me the code if any one can solve this using binary search. \\nThanks a lot!"
                    },
                    {
                        "username": "shivagama02",
                        "content": "The code for the same using binary search can be done in javascript. The code for the same is here: \\n\\nvar myPow = function(x, n) {\\n  if (n === 0) return 1;\\n  if (n > 0) return pow(x, n);\\n  if (n < 0) return 1 / pow(x, -n);\\n};\\n\\nvar pow = function (x, n) {\\n  if (n === 1) return x;\\n  var num = pow(x, Math.floor(n / 2));\\n  if (n % 2 === 0) {\\n    return num * num;\\n  } else {\\n    return x * num * num;\\n  }\\n};\\n\\n\\nThe code i tried has been accepted with time and space complexity of  O(log(n))."
                    },
                    {
                        "username": "0xatul",
                        "content": "[@user2387402](/user2387402) Dude that's comment from 2015, that guy must've already moved on lol"
                    },
                    {
                        "username": "user2387402",
                        "content": "It\\'s not binary search. It is binary exploitation. Read the editorial."
                    },
                    {
                        "username": "mateenrehanbatt",
                        "content": "class Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n\\n        result = 1\\n        while n > 0:\\n            if n % 2 == 1:\\n                result *= x\\n            x *= x\\n            n //= 2\\n\\n        return result"
                    }
                ]
            },
            {
                "id": 1835821,
                "content": [
                    {
                        "username": "mrkanesir",
                        "content": "how am i supposed to NOT get stack overflow with n=2147483647 ..."
                    },
                    {
                        "username": "itsmesuni19",
                        "content": " if your solu is O(n) solu, use long long i in the loop"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "What are you doing bro, I didn\\'t get this error, try to solve in O(log N)"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "use python? "
                    },
                    {
                        "username": "19bec1397",
                        "content": "[@satyasanjay1999](/satyasanjay1999) how\\n"
                    },
                    {
                        "username": "satyasanjay1999",
                        "content": "You should optimize the solution in logn time complexity. It will also reduce the stack size, then it will also run for n = -2147483648."
                    },
                    {
                        "username": "Linearly_Independent",
                        "content": "\\n\\n\\nreturn x**n"
                    },
                    {
                        "username": "AssortedFantasy",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The point of Leetcode is interview practice.\\nWould you go to an interview, and if they ask how should you implement a fast power algorithm you give them the answer of `x**y`? The point is to test your math skills."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The first two words of the question ask you to implement pow(x, n). It's simply illogical to Implement it by calling itself."
                    },
                    {
                        "username": "Satyam_Mishra",
                        "content": "[@Miiza](/Miiza) Where this is mentioned? My code accepted at just return pow(x,n)"
                    },
                    {
                        "username": "Braderbell",
                        "content": "return pow(x, n)"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "as of  this we should know the implementation of x**n"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "is it working"
                    },
                    {
                        "username": "Miiza",
                        "content": "Only that this is using pow(x, n) in the background, which you\\'re not suppose to use."
                    },
                    {
                        "username": "henrygriffin330",
                        "content": "this is what i did"
                    },
                    {
                        "username": "yanyehe",
                        "content": "duh"
                    },
                    {
                        "username": "JainAnshul",
                        "content": "for Python, is there anything better (in terms of complexity) than this? Otherwise, this seems to be obvious."
                    },
                    {
                        "username": "olooney",
                        "content": "This is the 37th problem I\\'ve solved on the site and in the end I got a respectible 4ms solution. But honestly, It seems like its 2% algorithm, 98% fiddling with binary representations of signed integers and floating point numbers. I also note that, as of this writing, the problem has 1160 downvotes to 428 upvotes, so there\\'s certainly some shared negativity out there. \\n\\nPersonally, I didn\\'t enjoy this problem because I felt like I spent more time writing custom test cases for corner cases than I did programming. Frankly I cannot imagine getting this question in an interview and having the interviewer go, \"aha! but your solution doesn\\'t account for the case when n is -2^31 and x is exactly -1.0! There\\'s no way we\\'d hire such an incompetent programmer!\" And yet the way the acceptance tests are written, you need to nail *every* *single* corner case. Perhaps that frustration is limited to C/C++? Or there\\'s a different algorithm that more naturally accounts for these edge cases? \\n\\nWhat was your experience? Would you agree or disagree with my thesis that this is the worst problem on the site? "
                    },
                    {
                        "username": "samstafford",
                        "content": "funny, when I saw the title of this one, I initially presumed rational exponent, not integer.  I got all excited about Taylor Series with coefficient reuse.  In fact, I will try that."
                    },
                    {
                        "username": "user0291CQ",
                        "content": "I personally don\\'t like questions that have math as a related topic, because that description is vague. Let\\'s say I want to do this problem, and I don\\'t know recursion, nor do I know how to get the power of a number. I can look in the related topics section, and see that I need to know recursion, and study that, before retrying the problem.\\n\\nWhat will I see for the other part of the problem? Just a generic statement, \"Math\". And sure, this problem tells you what to do, but what about the Climbing Stairs problem? The generic \"Math\" topic tells me nothing of the type of math knowledge needed to solve the problem."
                    },
                    {
                        "username": "adlong01",
                        "content": "[@super____hot](/super____hot) I get a considerably faster solution using log."
                    },
                    {
                        "username": "imfosf0r",
                        "content": "I\\'d disagree: your complaints about the edge cases are just how this function is supposed to work, because of how math works. If you get a different answer for -2^31 than everyone else, then the function isn\\'t working right yet."
                    },
                    {
                        "username": "super____hot",
                        "content": "in python x**n is the fastest method"
                    },
                    {
                        "username": "misterabdul",
                        "content": "I\\'m a C fan & I solve this problem using C. For me this is an interesting problem that let me learn again how the basic pow function could be implemented & let me try to optimize my solution to account for every corner cases. This is such a fun exercises in C IMO."
                    },
                    {
                        "username": "tylermatchett",
                        "content": "Here is a test case made by someone who was in a bad mood\\nx=-1\\nn=2147483647"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "This was a simple one. n%2 ==1, x^n is going to be -1. Because -1 ^ even number is equal to 1  AND -1^odd number is equal to -1."
                    },
                    {
                        "username": "sylvex",
                        "content": "```\\nx =\\n2.00000\\nn =\\n-2147483648\\n```\\nWhat even is the point of this edge case???"
                    },
                    {
                        "username": "tree9",
                        "content": "[@tojoSaha](/tojoSaha)  check this out please https://leetcode.com/problems/powx-n/solutions/4086833/beats-100-log-n-solution/ it handles the above case. Basically invert x and make n positive and carry on with same logic as for positive x and n. Take long N."
                    },
                    {
                        "username": "kavyamittal1282",
                        "content": "[@m_afnan2018](/m_afnan2018)  iam doing in java and geting the same error"
                    },
                    {
                        "username": "sandevil23",
                        "content": "i noticed that they have assigned int to n and here they are passing the upper and lower limits of long int "
                    },
                    {
                        "username": "amar180N_th",
                        "content": "hey I also got the same error here"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "Use long long..."
                    },
                    {
                        "username": "ekalavya_pc",
                        "content": "[@tojoSaha](/tojoSaha) use abs"
                    },
                    {
                        "username": "issac_tirkey1",
                        "content": "[@heisenberg280](/heisenberg280) -2^31 = 2147483648 and the positive integer limits till 2147483647 i.e 2^31-1. So when n is negative and -2^31  when you multiply it with -1 to make positive it overflows so store -1*n into a temp variable of type long long and it should work. (before storing typecast it into long long)"
                    },
                    {
                        "username": "tojoSaha",
                        "content": "Were u able to find the solution to this test case?.. If so.. then please tell"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "To make sure that your algorithm is fast."
                    },
                    {
                        "username": "heisenberg280",
                        "content": "How to solve this?"
                    },
                    {
                        "username": "shadowfax_",
                        "content": "just has the onsite and the interviewer tdidn\\'t want the recursive version but wanted the fast one with no recursion. \\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "Hitro",
                        "content": "I\\'m wondering why you guys are not using builtin Math.pow() method??\\nPlease give me some insight.\\nThank you :)"
                    },
                    {
                        "username": "marcjeffs6",
                        "content": "[@barstow123](/barstow123) Is this real? I can go to FAANG and any given Sr developer will know how to recreate any built in method and explain its prime optimization?"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Anarchy-NET",
                        "content": "We were asked to implement the built -in, which is basically Math.pow();\\nSo yeah, that\\'s what we\\'re doing"
                    },
                    {
                        "username": "barstow123",
                        "content": "The idea here is that we perform our work on the shoulders of giants.\\n\\nA more senior developer should be able to recreate built ins and explain how they are optimized if they want higher pay. for example, \"compile the solution in C++ for best performance\" is a good thing to say during senior interviews."
                    },
                    {
                        "username": "otherside2",
                        "content": "My C# code returns the expected Output for the below values when run in Visual Studio, but not here in Leetcode. Where is the disconnect? Could that be the reason why this question has so many thumbs down?\\n\\n240 / 304 test cases passed.\\nStatus: Wrong Answer\\n\\nSubmitted: 0\\xA0minutes ago\\nInput: \\n8.84372\\n-5\\nOutput: \\n0.0\\nExpected: \\n2e-05"
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "make 1 condition for n<0 and return 1/ans(that you are returning)"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Nishtha_2",
                        "content": "Question is under the catogery of binary search can someone suggest me solution with binary search"
                    },
                    {
                        "username": "AshutoshPatel028",
                        "content": "[@AdityaBhate](/AdityaBhate) IT doesn\\'t exist!!!"
                    },
                    {
                        "username": "r_shweta",
                        "content": "same\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "To implement this problem in a naive way, we would need to multiply x with x for n times, as the n is too large, code would take ages to complete. Idea here is that once we find a square of x, we can multiply square of x with square of x to get x^4, we can again multiply x^4 with x^4 to get x^8 and so on and so forth.\\nx^1 * x^1 = x^(1+1) = x^2\\nx^2 * x^2 = x^(2+2) = x^4\\nx^4 * x^4 = x^(4+4) = x^8\\n.....\\nBy this way, we can reduce the time complexity from O(n) to O(log n), This problem comes under binary search as we are squaring(binary) each answer."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "AnudeepReddyBondugula",
                        "content": "[@chickooo](/chickooo)  Actually it follows the concept of binary search, if you want to calculate for n = 4 you first calculate for  n = 2 and before calculating n = 2, you calculate n =1, so that you can obtain the solution in log(n) instead of calculating for 4 times it will take O(N) "
                    },
                    {
                        "username": "chickooo",
                        "content": "I don\\'t know why it was showing under the tag **binary search**, but the tags are now updated to **Math** and **Recursion**"
                    },
                    {
                        "username": "Will",
                        "content": "Please show me the code if any one can solve this using binary search. \\nThanks a lot!"
                    },
                    {
                        "username": "shivagama02",
                        "content": "The code for the same using binary search can be done in javascript. The code for the same is here: \\n\\nvar myPow = function(x, n) {\\n  if (n === 0) return 1;\\n  if (n > 0) return pow(x, n);\\n  if (n < 0) return 1 / pow(x, -n);\\n};\\n\\nvar pow = function (x, n) {\\n  if (n === 1) return x;\\n  var num = pow(x, Math.floor(n / 2));\\n  if (n % 2 === 0) {\\n    return num * num;\\n  } else {\\n    return x * num * num;\\n  }\\n};\\n\\n\\nThe code i tried has been accepted with time and space complexity of  O(log(n))."
                    },
                    {
                        "username": "0xatul",
                        "content": "[@user2387402](/user2387402) Dude that's comment from 2015, that guy must've already moved on lol"
                    },
                    {
                        "username": "user2387402",
                        "content": "It\\'s not binary search. It is binary exploitation. Read the editorial."
                    },
                    {
                        "username": "mateenrehanbatt",
                        "content": "class Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n\\n        result = 1\\n        while n > 0:\\n            if n % 2 == 1:\\n                result *= x\\n            x *= x\\n            n //= 2\\n\\n        return result"
                    }
                ]
            },
            {
                "id": 1570780,
                "content": [
                    {
                        "username": "mrkanesir",
                        "content": "how am i supposed to NOT get stack overflow with n=2147483647 ..."
                    },
                    {
                        "username": "itsmesuni19",
                        "content": " if your solu is O(n) solu, use long long i in the loop"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "What are you doing bro, I didn\\'t get this error, try to solve in O(log N)"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "use python? "
                    },
                    {
                        "username": "19bec1397",
                        "content": "[@satyasanjay1999](/satyasanjay1999) how\\n"
                    },
                    {
                        "username": "satyasanjay1999",
                        "content": "You should optimize the solution in logn time complexity. It will also reduce the stack size, then it will also run for n = -2147483648."
                    },
                    {
                        "username": "Linearly_Independent",
                        "content": "\\n\\n\\nreturn x**n"
                    },
                    {
                        "username": "AssortedFantasy",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The point of Leetcode is interview practice.\\nWould you go to an interview, and if they ask how should you implement a fast power algorithm you give them the answer of `x**y`? The point is to test your math skills."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The first two words of the question ask you to implement pow(x, n). It's simply illogical to Implement it by calling itself."
                    },
                    {
                        "username": "Satyam_Mishra",
                        "content": "[@Miiza](/Miiza) Where this is mentioned? My code accepted at just return pow(x,n)"
                    },
                    {
                        "username": "Braderbell",
                        "content": "return pow(x, n)"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "as of  this we should know the implementation of x**n"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "is it working"
                    },
                    {
                        "username": "Miiza",
                        "content": "Only that this is using pow(x, n) in the background, which you\\'re not suppose to use."
                    },
                    {
                        "username": "henrygriffin330",
                        "content": "this is what i did"
                    },
                    {
                        "username": "yanyehe",
                        "content": "duh"
                    },
                    {
                        "username": "JainAnshul",
                        "content": "for Python, is there anything better (in terms of complexity) than this? Otherwise, this seems to be obvious."
                    },
                    {
                        "username": "olooney",
                        "content": "This is the 37th problem I\\'ve solved on the site and in the end I got a respectible 4ms solution. But honestly, It seems like its 2% algorithm, 98% fiddling with binary representations of signed integers and floating point numbers. I also note that, as of this writing, the problem has 1160 downvotes to 428 upvotes, so there\\'s certainly some shared negativity out there. \\n\\nPersonally, I didn\\'t enjoy this problem because I felt like I spent more time writing custom test cases for corner cases than I did programming. Frankly I cannot imagine getting this question in an interview and having the interviewer go, \"aha! but your solution doesn\\'t account for the case when n is -2^31 and x is exactly -1.0! There\\'s no way we\\'d hire such an incompetent programmer!\" And yet the way the acceptance tests are written, you need to nail *every* *single* corner case. Perhaps that frustration is limited to C/C++? Or there\\'s a different algorithm that more naturally accounts for these edge cases? \\n\\nWhat was your experience? Would you agree or disagree with my thesis that this is the worst problem on the site? "
                    },
                    {
                        "username": "samstafford",
                        "content": "funny, when I saw the title of this one, I initially presumed rational exponent, not integer.  I got all excited about Taylor Series with coefficient reuse.  In fact, I will try that."
                    },
                    {
                        "username": "user0291CQ",
                        "content": "I personally don\\'t like questions that have math as a related topic, because that description is vague. Let\\'s say I want to do this problem, and I don\\'t know recursion, nor do I know how to get the power of a number. I can look in the related topics section, and see that I need to know recursion, and study that, before retrying the problem.\\n\\nWhat will I see for the other part of the problem? Just a generic statement, \"Math\". And sure, this problem tells you what to do, but what about the Climbing Stairs problem? The generic \"Math\" topic tells me nothing of the type of math knowledge needed to solve the problem."
                    },
                    {
                        "username": "adlong01",
                        "content": "[@super____hot](/super____hot) I get a considerably faster solution using log."
                    },
                    {
                        "username": "imfosf0r",
                        "content": "I\\'d disagree: your complaints about the edge cases are just how this function is supposed to work, because of how math works. If you get a different answer for -2^31 than everyone else, then the function isn\\'t working right yet."
                    },
                    {
                        "username": "super____hot",
                        "content": "in python x**n is the fastest method"
                    },
                    {
                        "username": "misterabdul",
                        "content": "I\\'m a C fan & I solve this problem using C. For me this is an interesting problem that let me learn again how the basic pow function could be implemented & let me try to optimize my solution to account for every corner cases. This is such a fun exercises in C IMO."
                    },
                    {
                        "username": "tylermatchett",
                        "content": "Here is a test case made by someone who was in a bad mood\\nx=-1\\nn=2147483647"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "This was a simple one. n%2 ==1, x^n is going to be -1. Because -1 ^ even number is equal to 1  AND -1^odd number is equal to -1."
                    },
                    {
                        "username": "sylvex",
                        "content": "```\\nx =\\n2.00000\\nn =\\n-2147483648\\n```\\nWhat even is the point of this edge case???"
                    },
                    {
                        "username": "tree9",
                        "content": "[@tojoSaha](/tojoSaha)  check this out please https://leetcode.com/problems/powx-n/solutions/4086833/beats-100-log-n-solution/ it handles the above case. Basically invert x and make n positive and carry on with same logic as for positive x and n. Take long N."
                    },
                    {
                        "username": "kavyamittal1282",
                        "content": "[@m_afnan2018](/m_afnan2018)  iam doing in java and geting the same error"
                    },
                    {
                        "username": "sandevil23",
                        "content": "i noticed that they have assigned int to n and here they are passing the upper and lower limits of long int "
                    },
                    {
                        "username": "amar180N_th",
                        "content": "hey I also got the same error here"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "Use long long..."
                    },
                    {
                        "username": "ekalavya_pc",
                        "content": "[@tojoSaha](/tojoSaha) use abs"
                    },
                    {
                        "username": "issac_tirkey1",
                        "content": "[@heisenberg280](/heisenberg280) -2^31 = 2147483648 and the positive integer limits till 2147483647 i.e 2^31-1. So when n is negative and -2^31  when you multiply it with -1 to make positive it overflows so store -1*n into a temp variable of type long long and it should work. (before storing typecast it into long long)"
                    },
                    {
                        "username": "tojoSaha",
                        "content": "Were u able to find the solution to this test case?.. If so.. then please tell"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "To make sure that your algorithm is fast."
                    },
                    {
                        "username": "heisenberg280",
                        "content": "How to solve this?"
                    },
                    {
                        "username": "shadowfax_",
                        "content": "just has the onsite and the interviewer tdidn\\'t want the recursive version but wanted the fast one with no recursion. \\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "Hitro",
                        "content": "I\\'m wondering why you guys are not using builtin Math.pow() method??\\nPlease give me some insight.\\nThank you :)"
                    },
                    {
                        "username": "marcjeffs6",
                        "content": "[@barstow123](/barstow123) Is this real? I can go to FAANG and any given Sr developer will know how to recreate any built in method and explain its prime optimization?"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Anarchy-NET",
                        "content": "We were asked to implement the built -in, which is basically Math.pow();\\nSo yeah, that\\'s what we\\'re doing"
                    },
                    {
                        "username": "barstow123",
                        "content": "The idea here is that we perform our work on the shoulders of giants.\\n\\nA more senior developer should be able to recreate built ins and explain how they are optimized if they want higher pay. for example, \"compile the solution in C++ for best performance\" is a good thing to say during senior interviews."
                    },
                    {
                        "username": "otherside2",
                        "content": "My C# code returns the expected Output for the below values when run in Visual Studio, but not here in Leetcode. Where is the disconnect? Could that be the reason why this question has so many thumbs down?\\n\\n240 / 304 test cases passed.\\nStatus: Wrong Answer\\n\\nSubmitted: 0\\xA0minutes ago\\nInput: \\n8.84372\\n-5\\nOutput: \\n0.0\\nExpected: \\n2e-05"
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "make 1 condition for n<0 and return 1/ans(that you are returning)"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Nishtha_2",
                        "content": "Question is under the catogery of binary search can someone suggest me solution with binary search"
                    },
                    {
                        "username": "AshutoshPatel028",
                        "content": "[@AdityaBhate](/AdityaBhate) IT doesn\\'t exist!!!"
                    },
                    {
                        "username": "r_shweta",
                        "content": "same\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "To implement this problem in a naive way, we would need to multiply x with x for n times, as the n is too large, code would take ages to complete. Idea here is that once we find a square of x, we can multiply square of x with square of x to get x^4, we can again multiply x^4 with x^4 to get x^8 and so on and so forth.\\nx^1 * x^1 = x^(1+1) = x^2\\nx^2 * x^2 = x^(2+2) = x^4\\nx^4 * x^4 = x^(4+4) = x^8\\n.....\\nBy this way, we can reduce the time complexity from O(n) to O(log n), This problem comes under binary search as we are squaring(binary) each answer."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "AnudeepReddyBondugula",
                        "content": "[@chickooo](/chickooo)  Actually it follows the concept of binary search, if you want to calculate for n = 4 you first calculate for  n = 2 and before calculating n = 2, you calculate n =1, so that you can obtain the solution in log(n) instead of calculating for 4 times it will take O(N) "
                    },
                    {
                        "username": "chickooo",
                        "content": "I don\\'t know why it was showing under the tag **binary search**, but the tags are now updated to **Math** and **Recursion**"
                    },
                    {
                        "username": "Will",
                        "content": "Please show me the code if any one can solve this using binary search. \\nThanks a lot!"
                    },
                    {
                        "username": "shivagama02",
                        "content": "The code for the same using binary search can be done in javascript. The code for the same is here: \\n\\nvar myPow = function(x, n) {\\n  if (n === 0) return 1;\\n  if (n > 0) return pow(x, n);\\n  if (n < 0) return 1 / pow(x, -n);\\n};\\n\\nvar pow = function (x, n) {\\n  if (n === 1) return x;\\n  var num = pow(x, Math.floor(n / 2));\\n  if (n % 2 === 0) {\\n    return num * num;\\n  } else {\\n    return x * num * num;\\n  }\\n};\\n\\n\\nThe code i tried has been accepted with time and space complexity of  O(log(n))."
                    },
                    {
                        "username": "0xatul",
                        "content": "[@user2387402](/user2387402) Dude that's comment from 2015, that guy must've already moved on lol"
                    },
                    {
                        "username": "user2387402",
                        "content": "It\\'s not binary search. It is binary exploitation. Read the editorial."
                    },
                    {
                        "username": "mateenrehanbatt",
                        "content": "class Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n\\n        result = 1\\n        while n > 0:\\n            if n % 2 == 1:\\n                result *= x\\n            x *= x\\n            n //= 2\\n\\n        return result"
                    }
                ]
            },
            {
                "id": 1572534,
                "content": [
                    {
                        "username": "mrkanesir",
                        "content": "how am i supposed to NOT get stack overflow with n=2147483647 ..."
                    },
                    {
                        "username": "itsmesuni19",
                        "content": " if your solu is O(n) solu, use long long i in the loop"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "What are you doing bro, I didn\\'t get this error, try to solve in O(log N)"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "use python? "
                    },
                    {
                        "username": "19bec1397",
                        "content": "[@satyasanjay1999](/satyasanjay1999) how\\n"
                    },
                    {
                        "username": "satyasanjay1999",
                        "content": "You should optimize the solution in logn time complexity. It will also reduce the stack size, then it will also run for n = -2147483648."
                    },
                    {
                        "username": "Linearly_Independent",
                        "content": "\\n\\n\\nreturn x**n"
                    },
                    {
                        "username": "AssortedFantasy",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The point of Leetcode is interview practice.\\nWould you go to an interview, and if they ask how should you implement a fast power algorithm you give them the answer of `x**y`? The point is to test your math skills."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The first two words of the question ask you to implement pow(x, n). It's simply illogical to Implement it by calling itself."
                    },
                    {
                        "username": "Satyam_Mishra",
                        "content": "[@Miiza](/Miiza) Where this is mentioned? My code accepted at just return pow(x,n)"
                    },
                    {
                        "username": "Braderbell",
                        "content": "return pow(x, n)"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "as of  this we should know the implementation of x**n"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "is it working"
                    },
                    {
                        "username": "Miiza",
                        "content": "Only that this is using pow(x, n) in the background, which you\\'re not suppose to use."
                    },
                    {
                        "username": "henrygriffin330",
                        "content": "this is what i did"
                    },
                    {
                        "username": "yanyehe",
                        "content": "duh"
                    },
                    {
                        "username": "JainAnshul",
                        "content": "for Python, is there anything better (in terms of complexity) than this? Otherwise, this seems to be obvious."
                    },
                    {
                        "username": "olooney",
                        "content": "This is the 37th problem I\\'ve solved on the site and in the end I got a respectible 4ms solution. But honestly, It seems like its 2% algorithm, 98% fiddling with binary representations of signed integers and floating point numbers. I also note that, as of this writing, the problem has 1160 downvotes to 428 upvotes, so there\\'s certainly some shared negativity out there. \\n\\nPersonally, I didn\\'t enjoy this problem because I felt like I spent more time writing custom test cases for corner cases than I did programming. Frankly I cannot imagine getting this question in an interview and having the interviewer go, \"aha! but your solution doesn\\'t account for the case when n is -2^31 and x is exactly -1.0! There\\'s no way we\\'d hire such an incompetent programmer!\" And yet the way the acceptance tests are written, you need to nail *every* *single* corner case. Perhaps that frustration is limited to C/C++? Or there\\'s a different algorithm that more naturally accounts for these edge cases? \\n\\nWhat was your experience? Would you agree or disagree with my thesis that this is the worst problem on the site? "
                    },
                    {
                        "username": "samstafford",
                        "content": "funny, when I saw the title of this one, I initially presumed rational exponent, not integer.  I got all excited about Taylor Series with coefficient reuse.  In fact, I will try that."
                    },
                    {
                        "username": "user0291CQ",
                        "content": "I personally don\\'t like questions that have math as a related topic, because that description is vague. Let\\'s say I want to do this problem, and I don\\'t know recursion, nor do I know how to get the power of a number. I can look in the related topics section, and see that I need to know recursion, and study that, before retrying the problem.\\n\\nWhat will I see for the other part of the problem? Just a generic statement, \"Math\". And sure, this problem tells you what to do, but what about the Climbing Stairs problem? The generic \"Math\" topic tells me nothing of the type of math knowledge needed to solve the problem."
                    },
                    {
                        "username": "adlong01",
                        "content": "[@super____hot](/super____hot) I get a considerably faster solution using log."
                    },
                    {
                        "username": "imfosf0r",
                        "content": "I\\'d disagree: your complaints about the edge cases are just how this function is supposed to work, because of how math works. If you get a different answer for -2^31 than everyone else, then the function isn\\'t working right yet."
                    },
                    {
                        "username": "super____hot",
                        "content": "in python x**n is the fastest method"
                    },
                    {
                        "username": "misterabdul",
                        "content": "I\\'m a C fan & I solve this problem using C. For me this is an interesting problem that let me learn again how the basic pow function could be implemented & let me try to optimize my solution to account for every corner cases. This is such a fun exercises in C IMO."
                    },
                    {
                        "username": "tylermatchett",
                        "content": "Here is a test case made by someone who was in a bad mood\\nx=-1\\nn=2147483647"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "This was a simple one. n%2 ==1, x^n is going to be -1. Because -1 ^ even number is equal to 1  AND -1^odd number is equal to -1."
                    },
                    {
                        "username": "sylvex",
                        "content": "```\\nx =\\n2.00000\\nn =\\n-2147483648\\n```\\nWhat even is the point of this edge case???"
                    },
                    {
                        "username": "tree9",
                        "content": "[@tojoSaha](/tojoSaha)  check this out please https://leetcode.com/problems/powx-n/solutions/4086833/beats-100-log-n-solution/ it handles the above case. Basically invert x and make n positive and carry on with same logic as for positive x and n. Take long N."
                    },
                    {
                        "username": "kavyamittal1282",
                        "content": "[@m_afnan2018](/m_afnan2018)  iam doing in java and geting the same error"
                    },
                    {
                        "username": "sandevil23",
                        "content": "i noticed that they have assigned int to n and here they are passing the upper and lower limits of long int "
                    },
                    {
                        "username": "amar180N_th",
                        "content": "hey I also got the same error here"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "Use long long..."
                    },
                    {
                        "username": "ekalavya_pc",
                        "content": "[@tojoSaha](/tojoSaha) use abs"
                    },
                    {
                        "username": "issac_tirkey1",
                        "content": "[@heisenberg280](/heisenberg280) -2^31 = 2147483648 and the positive integer limits till 2147483647 i.e 2^31-1. So when n is negative and -2^31  when you multiply it with -1 to make positive it overflows so store -1*n into a temp variable of type long long and it should work. (before storing typecast it into long long)"
                    },
                    {
                        "username": "tojoSaha",
                        "content": "Were u able to find the solution to this test case?.. If so.. then please tell"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "To make sure that your algorithm is fast."
                    },
                    {
                        "username": "heisenberg280",
                        "content": "How to solve this?"
                    },
                    {
                        "username": "shadowfax_",
                        "content": "just has the onsite and the interviewer tdidn\\'t want the recursive version but wanted the fast one with no recursion. \\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "Hitro",
                        "content": "I\\'m wondering why you guys are not using builtin Math.pow() method??\\nPlease give me some insight.\\nThank you :)"
                    },
                    {
                        "username": "marcjeffs6",
                        "content": "[@barstow123](/barstow123) Is this real? I can go to FAANG and any given Sr developer will know how to recreate any built in method and explain its prime optimization?"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Anarchy-NET",
                        "content": "We were asked to implement the built -in, which is basically Math.pow();\\nSo yeah, that\\'s what we\\'re doing"
                    },
                    {
                        "username": "barstow123",
                        "content": "The idea here is that we perform our work on the shoulders of giants.\\n\\nA more senior developer should be able to recreate built ins and explain how they are optimized if they want higher pay. for example, \"compile the solution in C++ for best performance\" is a good thing to say during senior interviews."
                    },
                    {
                        "username": "otherside2",
                        "content": "My C# code returns the expected Output for the below values when run in Visual Studio, but not here in Leetcode. Where is the disconnect? Could that be the reason why this question has so many thumbs down?\\n\\n240 / 304 test cases passed.\\nStatus: Wrong Answer\\n\\nSubmitted: 0\\xA0minutes ago\\nInput: \\n8.84372\\n-5\\nOutput: \\n0.0\\nExpected: \\n2e-05"
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "make 1 condition for n<0 and return 1/ans(that you are returning)"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Nishtha_2",
                        "content": "Question is under the catogery of binary search can someone suggest me solution with binary search"
                    },
                    {
                        "username": "AshutoshPatel028",
                        "content": "[@AdityaBhate](/AdityaBhate) IT doesn\\'t exist!!!"
                    },
                    {
                        "username": "r_shweta",
                        "content": "same\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "To implement this problem in a naive way, we would need to multiply x with x for n times, as the n is too large, code would take ages to complete. Idea here is that once we find a square of x, we can multiply square of x with square of x to get x^4, we can again multiply x^4 with x^4 to get x^8 and so on and so forth.\\nx^1 * x^1 = x^(1+1) = x^2\\nx^2 * x^2 = x^(2+2) = x^4\\nx^4 * x^4 = x^(4+4) = x^8\\n.....\\nBy this way, we can reduce the time complexity from O(n) to O(log n), This problem comes under binary search as we are squaring(binary) each answer."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "AnudeepReddyBondugula",
                        "content": "[@chickooo](/chickooo)  Actually it follows the concept of binary search, if you want to calculate for n = 4 you first calculate for  n = 2 and before calculating n = 2, you calculate n =1, so that you can obtain the solution in log(n) instead of calculating for 4 times it will take O(N) "
                    },
                    {
                        "username": "chickooo",
                        "content": "I don\\'t know why it was showing under the tag **binary search**, but the tags are now updated to **Math** and **Recursion**"
                    },
                    {
                        "username": "Will",
                        "content": "Please show me the code if any one can solve this using binary search. \\nThanks a lot!"
                    },
                    {
                        "username": "shivagama02",
                        "content": "The code for the same using binary search can be done in javascript. The code for the same is here: \\n\\nvar myPow = function(x, n) {\\n  if (n === 0) return 1;\\n  if (n > 0) return pow(x, n);\\n  if (n < 0) return 1 / pow(x, -n);\\n};\\n\\nvar pow = function (x, n) {\\n  if (n === 1) return x;\\n  var num = pow(x, Math.floor(n / 2));\\n  if (n % 2 === 0) {\\n    return num * num;\\n  } else {\\n    return x * num * num;\\n  }\\n};\\n\\n\\nThe code i tried has been accepted with time and space complexity of  O(log(n))."
                    },
                    {
                        "username": "0xatul",
                        "content": "[@user2387402](/user2387402) Dude that's comment from 2015, that guy must've already moved on lol"
                    },
                    {
                        "username": "user2387402",
                        "content": "It\\'s not binary search. It is binary exploitation. Read the editorial."
                    },
                    {
                        "username": "mateenrehanbatt",
                        "content": "class Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n\\n        result = 1\\n        while n > 0:\\n            if n % 2 == 1:\\n                result *= x\\n            x *= x\\n            n //= 2\\n\\n        return result"
                    }
                ]
            },
            {
                "id": 1572134,
                "content": [
                    {
                        "username": "mrkanesir",
                        "content": "how am i supposed to NOT get stack overflow with n=2147483647 ..."
                    },
                    {
                        "username": "itsmesuni19",
                        "content": " if your solu is O(n) solu, use long long i in the loop"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "What are you doing bro, I didn\\'t get this error, try to solve in O(log N)"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "use python? "
                    },
                    {
                        "username": "19bec1397",
                        "content": "[@satyasanjay1999](/satyasanjay1999) how\\n"
                    },
                    {
                        "username": "satyasanjay1999",
                        "content": "You should optimize the solution in logn time complexity. It will also reduce the stack size, then it will also run for n = -2147483648."
                    },
                    {
                        "username": "Linearly_Independent",
                        "content": "\\n\\n\\nreturn x**n"
                    },
                    {
                        "username": "AssortedFantasy",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The point of Leetcode is interview practice.\\nWould you go to an interview, and if they ask how should you implement a fast power algorithm you give them the answer of `x**y`? The point is to test your math skills."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The first two words of the question ask you to implement pow(x, n). It's simply illogical to Implement it by calling itself."
                    },
                    {
                        "username": "Satyam_Mishra",
                        "content": "[@Miiza](/Miiza) Where this is mentioned? My code accepted at just return pow(x,n)"
                    },
                    {
                        "username": "Braderbell",
                        "content": "return pow(x, n)"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "as of  this we should know the implementation of x**n"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "is it working"
                    },
                    {
                        "username": "Miiza",
                        "content": "Only that this is using pow(x, n) in the background, which you\\'re not suppose to use."
                    },
                    {
                        "username": "henrygriffin330",
                        "content": "this is what i did"
                    },
                    {
                        "username": "yanyehe",
                        "content": "duh"
                    },
                    {
                        "username": "JainAnshul",
                        "content": "for Python, is there anything better (in terms of complexity) than this? Otherwise, this seems to be obvious."
                    },
                    {
                        "username": "olooney",
                        "content": "This is the 37th problem I\\'ve solved on the site and in the end I got a respectible 4ms solution. But honestly, It seems like its 2% algorithm, 98% fiddling with binary representations of signed integers and floating point numbers. I also note that, as of this writing, the problem has 1160 downvotes to 428 upvotes, so there\\'s certainly some shared negativity out there. \\n\\nPersonally, I didn\\'t enjoy this problem because I felt like I spent more time writing custom test cases for corner cases than I did programming. Frankly I cannot imagine getting this question in an interview and having the interviewer go, \"aha! but your solution doesn\\'t account for the case when n is -2^31 and x is exactly -1.0! There\\'s no way we\\'d hire such an incompetent programmer!\" And yet the way the acceptance tests are written, you need to nail *every* *single* corner case. Perhaps that frustration is limited to C/C++? Or there\\'s a different algorithm that more naturally accounts for these edge cases? \\n\\nWhat was your experience? Would you agree or disagree with my thesis that this is the worst problem on the site? "
                    },
                    {
                        "username": "samstafford",
                        "content": "funny, when I saw the title of this one, I initially presumed rational exponent, not integer.  I got all excited about Taylor Series with coefficient reuse.  In fact, I will try that."
                    },
                    {
                        "username": "user0291CQ",
                        "content": "I personally don\\'t like questions that have math as a related topic, because that description is vague. Let\\'s say I want to do this problem, and I don\\'t know recursion, nor do I know how to get the power of a number. I can look in the related topics section, and see that I need to know recursion, and study that, before retrying the problem.\\n\\nWhat will I see for the other part of the problem? Just a generic statement, \"Math\". And sure, this problem tells you what to do, but what about the Climbing Stairs problem? The generic \"Math\" topic tells me nothing of the type of math knowledge needed to solve the problem."
                    },
                    {
                        "username": "adlong01",
                        "content": "[@super____hot](/super____hot) I get a considerably faster solution using log."
                    },
                    {
                        "username": "imfosf0r",
                        "content": "I\\'d disagree: your complaints about the edge cases are just how this function is supposed to work, because of how math works. If you get a different answer for -2^31 than everyone else, then the function isn\\'t working right yet."
                    },
                    {
                        "username": "super____hot",
                        "content": "in python x**n is the fastest method"
                    },
                    {
                        "username": "misterabdul",
                        "content": "I\\'m a C fan & I solve this problem using C. For me this is an interesting problem that let me learn again how the basic pow function could be implemented & let me try to optimize my solution to account for every corner cases. This is such a fun exercises in C IMO."
                    },
                    {
                        "username": "tylermatchett",
                        "content": "Here is a test case made by someone who was in a bad mood\\nx=-1\\nn=2147483647"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "This was a simple one. n%2 ==1, x^n is going to be -1. Because -1 ^ even number is equal to 1  AND -1^odd number is equal to -1."
                    },
                    {
                        "username": "sylvex",
                        "content": "```\\nx =\\n2.00000\\nn =\\n-2147483648\\n```\\nWhat even is the point of this edge case???"
                    },
                    {
                        "username": "tree9",
                        "content": "[@tojoSaha](/tojoSaha)  check this out please https://leetcode.com/problems/powx-n/solutions/4086833/beats-100-log-n-solution/ it handles the above case. Basically invert x and make n positive and carry on with same logic as for positive x and n. Take long N."
                    },
                    {
                        "username": "kavyamittal1282",
                        "content": "[@m_afnan2018](/m_afnan2018)  iam doing in java and geting the same error"
                    },
                    {
                        "username": "sandevil23",
                        "content": "i noticed that they have assigned int to n and here they are passing the upper and lower limits of long int "
                    },
                    {
                        "username": "amar180N_th",
                        "content": "hey I also got the same error here"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "Use long long..."
                    },
                    {
                        "username": "ekalavya_pc",
                        "content": "[@tojoSaha](/tojoSaha) use abs"
                    },
                    {
                        "username": "issac_tirkey1",
                        "content": "[@heisenberg280](/heisenberg280) -2^31 = 2147483648 and the positive integer limits till 2147483647 i.e 2^31-1. So when n is negative and -2^31  when you multiply it with -1 to make positive it overflows so store -1*n into a temp variable of type long long and it should work. (before storing typecast it into long long)"
                    },
                    {
                        "username": "tojoSaha",
                        "content": "Were u able to find the solution to this test case?.. If so.. then please tell"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "To make sure that your algorithm is fast."
                    },
                    {
                        "username": "heisenberg280",
                        "content": "How to solve this?"
                    },
                    {
                        "username": "shadowfax_",
                        "content": "just has the onsite and the interviewer tdidn\\'t want the recursive version but wanted the fast one with no recursion. \\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "Hitro",
                        "content": "I\\'m wondering why you guys are not using builtin Math.pow() method??\\nPlease give me some insight.\\nThank you :)"
                    },
                    {
                        "username": "marcjeffs6",
                        "content": "[@barstow123](/barstow123) Is this real? I can go to FAANG and any given Sr developer will know how to recreate any built in method and explain its prime optimization?"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Anarchy-NET",
                        "content": "We were asked to implement the built -in, which is basically Math.pow();\\nSo yeah, that\\'s what we\\'re doing"
                    },
                    {
                        "username": "barstow123",
                        "content": "The idea here is that we perform our work on the shoulders of giants.\\n\\nA more senior developer should be able to recreate built ins and explain how they are optimized if they want higher pay. for example, \"compile the solution in C++ for best performance\" is a good thing to say during senior interviews."
                    },
                    {
                        "username": "otherside2",
                        "content": "My C# code returns the expected Output for the below values when run in Visual Studio, but not here in Leetcode. Where is the disconnect? Could that be the reason why this question has so many thumbs down?\\n\\n240 / 304 test cases passed.\\nStatus: Wrong Answer\\n\\nSubmitted: 0\\xA0minutes ago\\nInput: \\n8.84372\\n-5\\nOutput: \\n0.0\\nExpected: \\n2e-05"
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "make 1 condition for n<0 and return 1/ans(that you are returning)"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Nishtha_2",
                        "content": "Question is under the catogery of binary search can someone suggest me solution with binary search"
                    },
                    {
                        "username": "AshutoshPatel028",
                        "content": "[@AdityaBhate](/AdityaBhate) IT doesn\\'t exist!!!"
                    },
                    {
                        "username": "r_shweta",
                        "content": "same\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "To implement this problem in a naive way, we would need to multiply x with x for n times, as the n is too large, code would take ages to complete. Idea here is that once we find a square of x, we can multiply square of x with square of x to get x^4, we can again multiply x^4 with x^4 to get x^8 and so on and so forth.\\nx^1 * x^1 = x^(1+1) = x^2\\nx^2 * x^2 = x^(2+2) = x^4\\nx^4 * x^4 = x^(4+4) = x^8\\n.....\\nBy this way, we can reduce the time complexity from O(n) to O(log n), This problem comes under binary search as we are squaring(binary) each answer."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "AnudeepReddyBondugula",
                        "content": "[@chickooo](/chickooo)  Actually it follows the concept of binary search, if you want to calculate for n = 4 you first calculate for  n = 2 and before calculating n = 2, you calculate n =1, so that you can obtain the solution in log(n) instead of calculating for 4 times it will take O(N) "
                    },
                    {
                        "username": "chickooo",
                        "content": "I don\\'t know why it was showing under the tag **binary search**, but the tags are now updated to **Math** and **Recursion**"
                    },
                    {
                        "username": "Will",
                        "content": "Please show me the code if any one can solve this using binary search. \\nThanks a lot!"
                    },
                    {
                        "username": "shivagama02",
                        "content": "The code for the same using binary search can be done in javascript. The code for the same is here: \\n\\nvar myPow = function(x, n) {\\n  if (n === 0) return 1;\\n  if (n > 0) return pow(x, n);\\n  if (n < 0) return 1 / pow(x, -n);\\n};\\n\\nvar pow = function (x, n) {\\n  if (n === 1) return x;\\n  var num = pow(x, Math.floor(n / 2));\\n  if (n % 2 === 0) {\\n    return num * num;\\n  } else {\\n    return x * num * num;\\n  }\\n};\\n\\n\\nThe code i tried has been accepted with time and space complexity of  O(log(n))."
                    },
                    {
                        "username": "0xatul",
                        "content": "[@user2387402](/user2387402) Dude that's comment from 2015, that guy must've already moved on lol"
                    },
                    {
                        "username": "user2387402",
                        "content": "It\\'s not binary search. It is binary exploitation. Read the editorial."
                    },
                    {
                        "username": "mateenrehanbatt",
                        "content": "class Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n\\n        result = 1\\n        while n > 0:\\n            if n % 2 == 1:\\n                result *= x\\n            x *= x\\n            n //= 2\\n\\n        return result"
                    }
                ]
            },
            {
                "id": 1565602,
                "content": [
                    {
                        "username": "mrkanesir",
                        "content": "how am i supposed to NOT get stack overflow with n=2147483647 ..."
                    },
                    {
                        "username": "itsmesuni19",
                        "content": " if your solu is O(n) solu, use long long i in the loop"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "What are you doing bro, I didn\\'t get this error, try to solve in O(log N)"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "use python? "
                    },
                    {
                        "username": "19bec1397",
                        "content": "[@satyasanjay1999](/satyasanjay1999) how\\n"
                    },
                    {
                        "username": "satyasanjay1999",
                        "content": "You should optimize the solution in logn time complexity. It will also reduce the stack size, then it will also run for n = -2147483648."
                    },
                    {
                        "username": "Linearly_Independent",
                        "content": "\\n\\n\\nreturn x**n"
                    },
                    {
                        "username": "AssortedFantasy",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The point of Leetcode is interview practice.\\nWould you go to an interview, and if they ask how should you implement a fast power algorithm you give them the answer of `x**y`? The point is to test your math skills."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The first two words of the question ask you to implement pow(x, n). It's simply illogical to Implement it by calling itself."
                    },
                    {
                        "username": "Satyam_Mishra",
                        "content": "[@Miiza](/Miiza) Where this is mentioned? My code accepted at just return pow(x,n)"
                    },
                    {
                        "username": "Braderbell",
                        "content": "return pow(x, n)"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "as of  this we should know the implementation of x**n"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "is it working"
                    },
                    {
                        "username": "Miiza",
                        "content": "Only that this is using pow(x, n) in the background, which you\\'re not suppose to use."
                    },
                    {
                        "username": "henrygriffin330",
                        "content": "this is what i did"
                    },
                    {
                        "username": "yanyehe",
                        "content": "duh"
                    },
                    {
                        "username": "JainAnshul",
                        "content": "for Python, is there anything better (in terms of complexity) than this? Otherwise, this seems to be obvious."
                    },
                    {
                        "username": "olooney",
                        "content": "This is the 37th problem I\\'ve solved on the site and in the end I got a respectible 4ms solution. But honestly, It seems like its 2% algorithm, 98% fiddling with binary representations of signed integers and floating point numbers. I also note that, as of this writing, the problem has 1160 downvotes to 428 upvotes, so there\\'s certainly some shared negativity out there. \\n\\nPersonally, I didn\\'t enjoy this problem because I felt like I spent more time writing custom test cases for corner cases than I did programming. Frankly I cannot imagine getting this question in an interview and having the interviewer go, \"aha! but your solution doesn\\'t account for the case when n is -2^31 and x is exactly -1.0! There\\'s no way we\\'d hire such an incompetent programmer!\" And yet the way the acceptance tests are written, you need to nail *every* *single* corner case. Perhaps that frustration is limited to C/C++? Or there\\'s a different algorithm that more naturally accounts for these edge cases? \\n\\nWhat was your experience? Would you agree or disagree with my thesis that this is the worst problem on the site? "
                    },
                    {
                        "username": "samstafford",
                        "content": "funny, when I saw the title of this one, I initially presumed rational exponent, not integer.  I got all excited about Taylor Series with coefficient reuse.  In fact, I will try that."
                    },
                    {
                        "username": "user0291CQ",
                        "content": "I personally don\\'t like questions that have math as a related topic, because that description is vague. Let\\'s say I want to do this problem, and I don\\'t know recursion, nor do I know how to get the power of a number. I can look in the related topics section, and see that I need to know recursion, and study that, before retrying the problem.\\n\\nWhat will I see for the other part of the problem? Just a generic statement, \"Math\". And sure, this problem tells you what to do, but what about the Climbing Stairs problem? The generic \"Math\" topic tells me nothing of the type of math knowledge needed to solve the problem."
                    },
                    {
                        "username": "adlong01",
                        "content": "[@super____hot](/super____hot) I get a considerably faster solution using log."
                    },
                    {
                        "username": "imfosf0r",
                        "content": "I\\'d disagree: your complaints about the edge cases are just how this function is supposed to work, because of how math works. If you get a different answer for -2^31 than everyone else, then the function isn\\'t working right yet."
                    },
                    {
                        "username": "super____hot",
                        "content": "in python x**n is the fastest method"
                    },
                    {
                        "username": "misterabdul",
                        "content": "I\\'m a C fan & I solve this problem using C. For me this is an interesting problem that let me learn again how the basic pow function could be implemented & let me try to optimize my solution to account for every corner cases. This is such a fun exercises in C IMO."
                    },
                    {
                        "username": "tylermatchett",
                        "content": "Here is a test case made by someone who was in a bad mood\\nx=-1\\nn=2147483647"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "This was a simple one. n%2 ==1, x^n is going to be -1. Because -1 ^ even number is equal to 1  AND -1^odd number is equal to -1."
                    },
                    {
                        "username": "sylvex",
                        "content": "```\\nx =\\n2.00000\\nn =\\n-2147483648\\n```\\nWhat even is the point of this edge case???"
                    },
                    {
                        "username": "tree9",
                        "content": "[@tojoSaha](/tojoSaha)  check this out please https://leetcode.com/problems/powx-n/solutions/4086833/beats-100-log-n-solution/ it handles the above case. Basically invert x and make n positive and carry on with same logic as for positive x and n. Take long N."
                    },
                    {
                        "username": "kavyamittal1282",
                        "content": "[@m_afnan2018](/m_afnan2018)  iam doing in java and geting the same error"
                    },
                    {
                        "username": "sandevil23",
                        "content": "i noticed that they have assigned int to n and here they are passing the upper and lower limits of long int "
                    },
                    {
                        "username": "amar180N_th",
                        "content": "hey I also got the same error here"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "Use long long..."
                    },
                    {
                        "username": "ekalavya_pc",
                        "content": "[@tojoSaha](/tojoSaha) use abs"
                    },
                    {
                        "username": "issac_tirkey1",
                        "content": "[@heisenberg280](/heisenberg280) -2^31 = 2147483648 and the positive integer limits till 2147483647 i.e 2^31-1. So when n is negative and -2^31  when you multiply it with -1 to make positive it overflows so store -1*n into a temp variable of type long long and it should work. (before storing typecast it into long long)"
                    },
                    {
                        "username": "tojoSaha",
                        "content": "Were u able to find the solution to this test case?.. If so.. then please tell"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "To make sure that your algorithm is fast."
                    },
                    {
                        "username": "heisenberg280",
                        "content": "How to solve this?"
                    },
                    {
                        "username": "shadowfax_",
                        "content": "just has the onsite and the interviewer tdidn\\'t want the recursive version but wanted the fast one with no recursion. \\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "Hitro",
                        "content": "I\\'m wondering why you guys are not using builtin Math.pow() method??\\nPlease give me some insight.\\nThank you :)"
                    },
                    {
                        "username": "marcjeffs6",
                        "content": "[@barstow123](/barstow123) Is this real? I can go to FAANG and any given Sr developer will know how to recreate any built in method and explain its prime optimization?"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Anarchy-NET",
                        "content": "We were asked to implement the built -in, which is basically Math.pow();\\nSo yeah, that\\'s what we\\'re doing"
                    },
                    {
                        "username": "barstow123",
                        "content": "The idea here is that we perform our work on the shoulders of giants.\\n\\nA more senior developer should be able to recreate built ins and explain how they are optimized if they want higher pay. for example, \"compile the solution in C++ for best performance\" is a good thing to say during senior interviews."
                    },
                    {
                        "username": "otherside2",
                        "content": "My C# code returns the expected Output for the below values when run in Visual Studio, but not here in Leetcode. Where is the disconnect? Could that be the reason why this question has so many thumbs down?\\n\\n240 / 304 test cases passed.\\nStatus: Wrong Answer\\n\\nSubmitted: 0\\xA0minutes ago\\nInput: \\n8.84372\\n-5\\nOutput: \\n0.0\\nExpected: \\n2e-05"
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "make 1 condition for n<0 and return 1/ans(that you are returning)"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Nishtha_2",
                        "content": "Question is under the catogery of binary search can someone suggest me solution with binary search"
                    },
                    {
                        "username": "AshutoshPatel028",
                        "content": "[@AdityaBhate](/AdityaBhate) IT doesn\\'t exist!!!"
                    },
                    {
                        "username": "r_shweta",
                        "content": "same\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "To implement this problem in a naive way, we would need to multiply x with x for n times, as the n is too large, code would take ages to complete. Idea here is that once we find a square of x, we can multiply square of x with square of x to get x^4, we can again multiply x^4 with x^4 to get x^8 and so on and so forth.\\nx^1 * x^1 = x^(1+1) = x^2\\nx^2 * x^2 = x^(2+2) = x^4\\nx^4 * x^4 = x^(4+4) = x^8\\n.....\\nBy this way, we can reduce the time complexity from O(n) to O(log n), This problem comes under binary search as we are squaring(binary) each answer."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "AnudeepReddyBondugula",
                        "content": "[@chickooo](/chickooo)  Actually it follows the concept of binary search, if you want to calculate for n = 4 you first calculate for  n = 2 and before calculating n = 2, you calculate n =1, so that you can obtain the solution in log(n) instead of calculating for 4 times it will take O(N) "
                    },
                    {
                        "username": "chickooo",
                        "content": "I don\\'t know why it was showing under the tag **binary search**, but the tags are now updated to **Math** and **Recursion**"
                    },
                    {
                        "username": "Will",
                        "content": "Please show me the code if any one can solve this using binary search. \\nThanks a lot!"
                    },
                    {
                        "username": "shivagama02",
                        "content": "The code for the same using binary search can be done in javascript. The code for the same is here: \\n\\nvar myPow = function(x, n) {\\n  if (n === 0) return 1;\\n  if (n > 0) return pow(x, n);\\n  if (n < 0) return 1 / pow(x, -n);\\n};\\n\\nvar pow = function (x, n) {\\n  if (n === 1) return x;\\n  var num = pow(x, Math.floor(n / 2));\\n  if (n % 2 === 0) {\\n    return num * num;\\n  } else {\\n    return x * num * num;\\n  }\\n};\\n\\n\\nThe code i tried has been accepted with time and space complexity of  O(log(n))."
                    },
                    {
                        "username": "0xatul",
                        "content": "[@user2387402](/user2387402) Dude that's comment from 2015, that guy must've already moved on lol"
                    },
                    {
                        "username": "user2387402",
                        "content": "It\\'s not binary search. It is binary exploitation. Read the editorial."
                    },
                    {
                        "username": "mateenrehanbatt",
                        "content": "class Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n\\n        result = 1\\n        while n > 0:\\n            if n % 2 == 1:\\n                result *= x\\n            x *= x\\n            n //= 2\\n\\n        return result"
                    }
                ]
            },
            {
                "id": 1567826,
                "content": [
                    {
                        "username": "mrkanesir",
                        "content": "how am i supposed to NOT get stack overflow with n=2147483647 ..."
                    },
                    {
                        "username": "itsmesuni19",
                        "content": " if your solu is O(n) solu, use long long i in the loop"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "What are you doing bro, I didn\\'t get this error, try to solve in O(log N)"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "use python? "
                    },
                    {
                        "username": "19bec1397",
                        "content": "[@satyasanjay1999](/satyasanjay1999) how\\n"
                    },
                    {
                        "username": "satyasanjay1999",
                        "content": "You should optimize the solution in logn time complexity. It will also reduce the stack size, then it will also run for n = -2147483648."
                    },
                    {
                        "username": "Linearly_Independent",
                        "content": "\\n\\n\\nreturn x**n"
                    },
                    {
                        "username": "AssortedFantasy",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The point of Leetcode is interview practice.\\nWould you go to an interview, and if they ask how should you implement a fast power algorithm you give them the answer of `x**y`? The point is to test your math skills."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The first two words of the question ask you to implement pow(x, n). It's simply illogical to Implement it by calling itself."
                    },
                    {
                        "username": "Satyam_Mishra",
                        "content": "[@Miiza](/Miiza) Where this is mentioned? My code accepted at just return pow(x,n)"
                    },
                    {
                        "username": "Braderbell",
                        "content": "return pow(x, n)"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "as of  this we should know the implementation of x**n"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "is it working"
                    },
                    {
                        "username": "Miiza",
                        "content": "Only that this is using pow(x, n) in the background, which you\\'re not suppose to use."
                    },
                    {
                        "username": "henrygriffin330",
                        "content": "this is what i did"
                    },
                    {
                        "username": "yanyehe",
                        "content": "duh"
                    },
                    {
                        "username": "JainAnshul",
                        "content": "for Python, is there anything better (in terms of complexity) than this? Otherwise, this seems to be obvious."
                    },
                    {
                        "username": "olooney",
                        "content": "This is the 37th problem I\\'ve solved on the site and in the end I got a respectible 4ms solution. But honestly, It seems like its 2% algorithm, 98% fiddling with binary representations of signed integers and floating point numbers. I also note that, as of this writing, the problem has 1160 downvotes to 428 upvotes, so there\\'s certainly some shared negativity out there. \\n\\nPersonally, I didn\\'t enjoy this problem because I felt like I spent more time writing custom test cases for corner cases than I did programming. Frankly I cannot imagine getting this question in an interview and having the interviewer go, \"aha! but your solution doesn\\'t account for the case when n is -2^31 and x is exactly -1.0! There\\'s no way we\\'d hire such an incompetent programmer!\" And yet the way the acceptance tests are written, you need to nail *every* *single* corner case. Perhaps that frustration is limited to C/C++? Or there\\'s a different algorithm that more naturally accounts for these edge cases? \\n\\nWhat was your experience? Would you agree or disagree with my thesis that this is the worst problem on the site? "
                    },
                    {
                        "username": "samstafford",
                        "content": "funny, when I saw the title of this one, I initially presumed rational exponent, not integer.  I got all excited about Taylor Series with coefficient reuse.  In fact, I will try that."
                    },
                    {
                        "username": "user0291CQ",
                        "content": "I personally don\\'t like questions that have math as a related topic, because that description is vague. Let\\'s say I want to do this problem, and I don\\'t know recursion, nor do I know how to get the power of a number. I can look in the related topics section, and see that I need to know recursion, and study that, before retrying the problem.\\n\\nWhat will I see for the other part of the problem? Just a generic statement, \"Math\". And sure, this problem tells you what to do, but what about the Climbing Stairs problem? The generic \"Math\" topic tells me nothing of the type of math knowledge needed to solve the problem."
                    },
                    {
                        "username": "adlong01",
                        "content": "[@super____hot](/super____hot) I get a considerably faster solution using log."
                    },
                    {
                        "username": "imfosf0r",
                        "content": "I\\'d disagree: your complaints about the edge cases are just how this function is supposed to work, because of how math works. If you get a different answer for -2^31 than everyone else, then the function isn\\'t working right yet."
                    },
                    {
                        "username": "super____hot",
                        "content": "in python x**n is the fastest method"
                    },
                    {
                        "username": "misterabdul",
                        "content": "I\\'m a C fan & I solve this problem using C. For me this is an interesting problem that let me learn again how the basic pow function could be implemented & let me try to optimize my solution to account for every corner cases. This is such a fun exercises in C IMO."
                    },
                    {
                        "username": "tylermatchett",
                        "content": "Here is a test case made by someone who was in a bad mood\\nx=-1\\nn=2147483647"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "This was a simple one. n%2 ==1, x^n is going to be -1. Because -1 ^ even number is equal to 1  AND -1^odd number is equal to -1."
                    },
                    {
                        "username": "sylvex",
                        "content": "```\\nx =\\n2.00000\\nn =\\n-2147483648\\n```\\nWhat even is the point of this edge case???"
                    },
                    {
                        "username": "tree9",
                        "content": "[@tojoSaha](/tojoSaha)  check this out please https://leetcode.com/problems/powx-n/solutions/4086833/beats-100-log-n-solution/ it handles the above case. Basically invert x and make n positive and carry on with same logic as for positive x and n. Take long N."
                    },
                    {
                        "username": "kavyamittal1282",
                        "content": "[@m_afnan2018](/m_afnan2018)  iam doing in java and geting the same error"
                    },
                    {
                        "username": "sandevil23",
                        "content": "i noticed that they have assigned int to n and here they are passing the upper and lower limits of long int "
                    },
                    {
                        "username": "amar180N_th",
                        "content": "hey I also got the same error here"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "Use long long..."
                    },
                    {
                        "username": "ekalavya_pc",
                        "content": "[@tojoSaha](/tojoSaha) use abs"
                    },
                    {
                        "username": "issac_tirkey1",
                        "content": "[@heisenberg280](/heisenberg280) -2^31 = 2147483648 and the positive integer limits till 2147483647 i.e 2^31-1. So when n is negative and -2^31  when you multiply it with -1 to make positive it overflows so store -1*n into a temp variable of type long long and it should work. (before storing typecast it into long long)"
                    },
                    {
                        "username": "tojoSaha",
                        "content": "Were u able to find the solution to this test case?.. If so.. then please tell"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "To make sure that your algorithm is fast."
                    },
                    {
                        "username": "heisenberg280",
                        "content": "How to solve this?"
                    },
                    {
                        "username": "shadowfax_",
                        "content": "just has the onsite and the interviewer tdidn\\'t want the recursive version but wanted the fast one with no recursion. \\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "Hitro",
                        "content": "I\\'m wondering why you guys are not using builtin Math.pow() method??\\nPlease give me some insight.\\nThank you :)"
                    },
                    {
                        "username": "marcjeffs6",
                        "content": "[@barstow123](/barstow123) Is this real? I can go to FAANG and any given Sr developer will know how to recreate any built in method and explain its prime optimization?"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Anarchy-NET",
                        "content": "We were asked to implement the built -in, which is basically Math.pow();\\nSo yeah, that\\'s what we\\'re doing"
                    },
                    {
                        "username": "barstow123",
                        "content": "The idea here is that we perform our work on the shoulders of giants.\\n\\nA more senior developer should be able to recreate built ins and explain how they are optimized if they want higher pay. for example, \"compile the solution in C++ for best performance\" is a good thing to say during senior interviews."
                    },
                    {
                        "username": "otherside2",
                        "content": "My C# code returns the expected Output for the below values when run in Visual Studio, but not here in Leetcode. Where is the disconnect? Could that be the reason why this question has so many thumbs down?\\n\\n240 / 304 test cases passed.\\nStatus: Wrong Answer\\n\\nSubmitted: 0\\xA0minutes ago\\nInput: \\n8.84372\\n-5\\nOutput: \\n0.0\\nExpected: \\n2e-05"
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "make 1 condition for n<0 and return 1/ans(that you are returning)"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Nishtha_2",
                        "content": "Question is under the catogery of binary search can someone suggest me solution with binary search"
                    },
                    {
                        "username": "AshutoshPatel028",
                        "content": "[@AdityaBhate](/AdityaBhate) IT doesn\\'t exist!!!"
                    },
                    {
                        "username": "r_shweta",
                        "content": "same\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "To implement this problem in a naive way, we would need to multiply x with x for n times, as the n is too large, code would take ages to complete. Idea here is that once we find a square of x, we can multiply square of x with square of x to get x^4, we can again multiply x^4 with x^4 to get x^8 and so on and so forth.\\nx^1 * x^1 = x^(1+1) = x^2\\nx^2 * x^2 = x^(2+2) = x^4\\nx^4 * x^4 = x^(4+4) = x^8\\n.....\\nBy this way, we can reduce the time complexity from O(n) to O(log n), This problem comes under binary search as we are squaring(binary) each answer."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "AnudeepReddyBondugula",
                        "content": "[@chickooo](/chickooo)  Actually it follows the concept of binary search, if you want to calculate for n = 4 you first calculate for  n = 2 and before calculating n = 2, you calculate n =1, so that you can obtain the solution in log(n) instead of calculating for 4 times it will take O(N) "
                    },
                    {
                        "username": "chickooo",
                        "content": "I don\\'t know why it was showing under the tag **binary search**, but the tags are now updated to **Math** and **Recursion**"
                    },
                    {
                        "username": "Will",
                        "content": "Please show me the code if any one can solve this using binary search. \\nThanks a lot!"
                    },
                    {
                        "username": "shivagama02",
                        "content": "The code for the same using binary search can be done in javascript. The code for the same is here: \\n\\nvar myPow = function(x, n) {\\n  if (n === 0) return 1;\\n  if (n > 0) return pow(x, n);\\n  if (n < 0) return 1 / pow(x, -n);\\n};\\n\\nvar pow = function (x, n) {\\n  if (n === 1) return x;\\n  var num = pow(x, Math.floor(n / 2));\\n  if (n % 2 === 0) {\\n    return num * num;\\n  } else {\\n    return x * num * num;\\n  }\\n};\\n\\n\\nThe code i tried has been accepted with time and space complexity of  O(log(n))."
                    },
                    {
                        "username": "0xatul",
                        "content": "[@user2387402](/user2387402) Dude that's comment from 2015, that guy must've already moved on lol"
                    },
                    {
                        "username": "user2387402",
                        "content": "It\\'s not binary search. It is binary exploitation. Read the editorial."
                    },
                    {
                        "username": "mateenrehanbatt",
                        "content": "class Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n\\n        result = 1\\n        while n > 0:\\n            if n % 2 == 1:\\n                result *= x\\n            x *= x\\n            n //= 2\\n\\n        return result"
                    }
                ]
            },
            {
                "id": 1805804,
                "content": [
                    {
                        "username": "mrkanesir",
                        "content": "how am i supposed to NOT get stack overflow with n=2147483647 ..."
                    },
                    {
                        "username": "itsmesuni19",
                        "content": " if your solu is O(n) solu, use long long i in the loop"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "What are you doing bro, I didn\\'t get this error, try to solve in O(log N)"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "use python? "
                    },
                    {
                        "username": "19bec1397",
                        "content": "[@satyasanjay1999](/satyasanjay1999) how\\n"
                    },
                    {
                        "username": "satyasanjay1999",
                        "content": "You should optimize the solution in logn time complexity. It will also reduce the stack size, then it will also run for n = -2147483648."
                    },
                    {
                        "username": "Linearly_Independent",
                        "content": "\\n\\n\\nreturn x**n"
                    },
                    {
                        "username": "AssortedFantasy",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The point of Leetcode is interview practice.\\nWould you go to an interview, and if they ask how should you implement a fast power algorithm you give them the answer of `x**y`? The point is to test your math skills."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The first two words of the question ask you to implement pow(x, n). It's simply illogical to Implement it by calling itself."
                    },
                    {
                        "username": "Satyam_Mishra",
                        "content": "[@Miiza](/Miiza) Where this is mentioned? My code accepted at just return pow(x,n)"
                    },
                    {
                        "username": "Braderbell",
                        "content": "return pow(x, n)"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "as of  this we should know the implementation of x**n"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "is it working"
                    },
                    {
                        "username": "Miiza",
                        "content": "Only that this is using pow(x, n) in the background, which you\\'re not suppose to use."
                    },
                    {
                        "username": "henrygriffin330",
                        "content": "this is what i did"
                    },
                    {
                        "username": "yanyehe",
                        "content": "duh"
                    },
                    {
                        "username": "JainAnshul",
                        "content": "for Python, is there anything better (in terms of complexity) than this? Otherwise, this seems to be obvious."
                    },
                    {
                        "username": "olooney",
                        "content": "This is the 37th problem I\\'ve solved on the site and in the end I got a respectible 4ms solution. But honestly, It seems like its 2% algorithm, 98% fiddling with binary representations of signed integers and floating point numbers. I also note that, as of this writing, the problem has 1160 downvotes to 428 upvotes, so there\\'s certainly some shared negativity out there. \\n\\nPersonally, I didn\\'t enjoy this problem because I felt like I spent more time writing custom test cases for corner cases than I did programming. Frankly I cannot imagine getting this question in an interview and having the interviewer go, \"aha! but your solution doesn\\'t account for the case when n is -2^31 and x is exactly -1.0! There\\'s no way we\\'d hire such an incompetent programmer!\" And yet the way the acceptance tests are written, you need to nail *every* *single* corner case. Perhaps that frustration is limited to C/C++? Or there\\'s a different algorithm that more naturally accounts for these edge cases? \\n\\nWhat was your experience? Would you agree or disagree with my thesis that this is the worst problem on the site? "
                    },
                    {
                        "username": "samstafford",
                        "content": "funny, when I saw the title of this one, I initially presumed rational exponent, not integer.  I got all excited about Taylor Series with coefficient reuse.  In fact, I will try that."
                    },
                    {
                        "username": "user0291CQ",
                        "content": "I personally don\\'t like questions that have math as a related topic, because that description is vague. Let\\'s say I want to do this problem, and I don\\'t know recursion, nor do I know how to get the power of a number. I can look in the related topics section, and see that I need to know recursion, and study that, before retrying the problem.\\n\\nWhat will I see for the other part of the problem? Just a generic statement, \"Math\". And sure, this problem tells you what to do, but what about the Climbing Stairs problem? The generic \"Math\" topic tells me nothing of the type of math knowledge needed to solve the problem."
                    },
                    {
                        "username": "adlong01",
                        "content": "[@super____hot](/super____hot) I get a considerably faster solution using log."
                    },
                    {
                        "username": "imfosf0r",
                        "content": "I\\'d disagree: your complaints about the edge cases are just how this function is supposed to work, because of how math works. If you get a different answer for -2^31 than everyone else, then the function isn\\'t working right yet."
                    },
                    {
                        "username": "super____hot",
                        "content": "in python x**n is the fastest method"
                    },
                    {
                        "username": "misterabdul",
                        "content": "I\\'m a C fan & I solve this problem using C. For me this is an interesting problem that let me learn again how the basic pow function could be implemented & let me try to optimize my solution to account for every corner cases. This is such a fun exercises in C IMO."
                    },
                    {
                        "username": "tylermatchett",
                        "content": "Here is a test case made by someone who was in a bad mood\\nx=-1\\nn=2147483647"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "This was a simple one. n%2 ==1, x^n is going to be -1. Because -1 ^ even number is equal to 1  AND -1^odd number is equal to -1."
                    },
                    {
                        "username": "sylvex",
                        "content": "```\\nx =\\n2.00000\\nn =\\n-2147483648\\n```\\nWhat even is the point of this edge case???"
                    },
                    {
                        "username": "tree9",
                        "content": "[@tojoSaha](/tojoSaha)  check this out please https://leetcode.com/problems/powx-n/solutions/4086833/beats-100-log-n-solution/ it handles the above case. Basically invert x and make n positive and carry on with same logic as for positive x and n. Take long N."
                    },
                    {
                        "username": "kavyamittal1282",
                        "content": "[@m_afnan2018](/m_afnan2018)  iam doing in java and geting the same error"
                    },
                    {
                        "username": "sandevil23",
                        "content": "i noticed that they have assigned int to n and here they are passing the upper and lower limits of long int "
                    },
                    {
                        "username": "amar180N_th",
                        "content": "hey I also got the same error here"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "Use long long..."
                    },
                    {
                        "username": "ekalavya_pc",
                        "content": "[@tojoSaha](/tojoSaha) use abs"
                    },
                    {
                        "username": "issac_tirkey1",
                        "content": "[@heisenberg280](/heisenberg280) -2^31 = 2147483648 and the positive integer limits till 2147483647 i.e 2^31-1. So when n is negative and -2^31  when you multiply it with -1 to make positive it overflows so store -1*n into a temp variable of type long long and it should work. (before storing typecast it into long long)"
                    },
                    {
                        "username": "tojoSaha",
                        "content": "Were u able to find the solution to this test case?.. If so.. then please tell"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "To make sure that your algorithm is fast."
                    },
                    {
                        "username": "heisenberg280",
                        "content": "How to solve this?"
                    },
                    {
                        "username": "shadowfax_",
                        "content": "just has the onsite and the interviewer tdidn\\'t want the recursive version but wanted the fast one with no recursion. \\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "Hitro",
                        "content": "I\\'m wondering why you guys are not using builtin Math.pow() method??\\nPlease give me some insight.\\nThank you :)"
                    },
                    {
                        "username": "marcjeffs6",
                        "content": "[@barstow123](/barstow123) Is this real? I can go to FAANG and any given Sr developer will know how to recreate any built in method and explain its prime optimization?"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Anarchy-NET",
                        "content": "We were asked to implement the built -in, which is basically Math.pow();\\nSo yeah, that\\'s what we\\'re doing"
                    },
                    {
                        "username": "barstow123",
                        "content": "The idea here is that we perform our work on the shoulders of giants.\\n\\nA more senior developer should be able to recreate built ins and explain how they are optimized if they want higher pay. for example, \"compile the solution in C++ for best performance\" is a good thing to say during senior interviews."
                    },
                    {
                        "username": "otherside2",
                        "content": "My C# code returns the expected Output for the below values when run in Visual Studio, but not here in Leetcode. Where is the disconnect? Could that be the reason why this question has so many thumbs down?\\n\\n240 / 304 test cases passed.\\nStatus: Wrong Answer\\n\\nSubmitted: 0\\xA0minutes ago\\nInput: \\n8.84372\\n-5\\nOutput: \\n0.0\\nExpected: \\n2e-05"
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "make 1 condition for n<0 and return 1/ans(that you are returning)"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Nishtha_2",
                        "content": "Question is under the catogery of binary search can someone suggest me solution with binary search"
                    },
                    {
                        "username": "AshutoshPatel028",
                        "content": "[@AdityaBhate](/AdityaBhate) IT doesn\\'t exist!!!"
                    },
                    {
                        "username": "r_shweta",
                        "content": "same\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "To implement this problem in a naive way, we would need to multiply x with x for n times, as the n is too large, code would take ages to complete. Idea here is that once we find a square of x, we can multiply square of x with square of x to get x^4, we can again multiply x^4 with x^4 to get x^8 and so on and so forth.\\nx^1 * x^1 = x^(1+1) = x^2\\nx^2 * x^2 = x^(2+2) = x^4\\nx^4 * x^4 = x^(4+4) = x^8\\n.....\\nBy this way, we can reduce the time complexity from O(n) to O(log n), This problem comes under binary search as we are squaring(binary) each answer."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "AnudeepReddyBondugula",
                        "content": "[@chickooo](/chickooo)  Actually it follows the concept of binary search, if you want to calculate for n = 4 you first calculate for  n = 2 and before calculating n = 2, you calculate n =1, so that you can obtain the solution in log(n) instead of calculating for 4 times it will take O(N) "
                    },
                    {
                        "username": "chickooo",
                        "content": "I don\\'t know why it was showing under the tag **binary search**, but the tags are now updated to **Math** and **Recursion**"
                    },
                    {
                        "username": "Will",
                        "content": "Please show me the code if any one can solve this using binary search. \\nThanks a lot!"
                    },
                    {
                        "username": "shivagama02",
                        "content": "The code for the same using binary search can be done in javascript. The code for the same is here: \\n\\nvar myPow = function(x, n) {\\n  if (n === 0) return 1;\\n  if (n > 0) return pow(x, n);\\n  if (n < 0) return 1 / pow(x, -n);\\n};\\n\\nvar pow = function (x, n) {\\n  if (n === 1) return x;\\n  var num = pow(x, Math.floor(n / 2));\\n  if (n % 2 === 0) {\\n    return num * num;\\n  } else {\\n    return x * num * num;\\n  }\\n};\\n\\n\\nThe code i tried has been accepted with time and space complexity of  O(log(n))."
                    },
                    {
                        "username": "0xatul",
                        "content": "[@user2387402](/user2387402) Dude that's comment from 2015, that guy must've already moved on lol"
                    },
                    {
                        "username": "user2387402",
                        "content": "It\\'s not binary search. It is binary exploitation. Read the editorial."
                    },
                    {
                        "username": "mateenrehanbatt",
                        "content": "class Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n\\n        result = 1\\n        while n > 0:\\n            if n % 2 == 1:\\n                result *= x\\n            x *= x\\n            n //= 2\\n\\n        return result"
                    }
                ]
            },
            {
                "id": 1576589,
                "content": [
                    {
                        "username": "mrkanesir",
                        "content": "how am i supposed to NOT get stack overflow with n=2147483647 ..."
                    },
                    {
                        "username": "itsmesuni19",
                        "content": " if your solu is O(n) solu, use long long i in the loop"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "What are you doing bro, I didn\\'t get this error, try to solve in O(log N)"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "use python? "
                    },
                    {
                        "username": "19bec1397",
                        "content": "[@satyasanjay1999](/satyasanjay1999) how\\n"
                    },
                    {
                        "username": "satyasanjay1999",
                        "content": "You should optimize the solution in logn time complexity. It will also reduce the stack size, then it will also run for n = -2147483648."
                    },
                    {
                        "username": "Linearly_Independent",
                        "content": "\\n\\n\\nreturn x**n"
                    },
                    {
                        "username": "AssortedFantasy",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The point of Leetcode is interview practice.\\nWould you go to an interview, and if they ask how should you implement a fast power algorithm you give them the answer of `x**y`? The point is to test your math skills."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The first two words of the question ask you to implement pow(x, n). It's simply illogical to Implement it by calling itself."
                    },
                    {
                        "username": "Satyam_Mishra",
                        "content": "[@Miiza](/Miiza) Where this is mentioned? My code accepted at just return pow(x,n)"
                    },
                    {
                        "username": "Braderbell",
                        "content": "return pow(x, n)"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "as of  this we should know the implementation of x**n"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "is it working"
                    },
                    {
                        "username": "Miiza",
                        "content": "Only that this is using pow(x, n) in the background, which you\\'re not suppose to use."
                    },
                    {
                        "username": "henrygriffin330",
                        "content": "this is what i did"
                    },
                    {
                        "username": "yanyehe",
                        "content": "duh"
                    },
                    {
                        "username": "JainAnshul",
                        "content": "for Python, is there anything better (in terms of complexity) than this? Otherwise, this seems to be obvious."
                    },
                    {
                        "username": "olooney",
                        "content": "This is the 37th problem I\\'ve solved on the site and in the end I got a respectible 4ms solution. But honestly, It seems like its 2% algorithm, 98% fiddling with binary representations of signed integers and floating point numbers. I also note that, as of this writing, the problem has 1160 downvotes to 428 upvotes, so there\\'s certainly some shared negativity out there. \\n\\nPersonally, I didn\\'t enjoy this problem because I felt like I spent more time writing custom test cases for corner cases than I did programming. Frankly I cannot imagine getting this question in an interview and having the interviewer go, \"aha! but your solution doesn\\'t account for the case when n is -2^31 and x is exactly -1.0! There\\'s no way we\\'d hire such an incompetent programmer!\" And yet the way the acceptance tests are written, you need to nail *every* *single* corner case. Perhaps that frustration is limited to C/C++? Or there\\'s a different algorithm that more naturally accounts for these edge cases? \\n\\nWhat was your experience? Would you agree or disagree with my thesis that this is the worst problem on the site? "
                    },
                    {
                        "username": "samstafford",
                        "content": "funny, when I saw the title of this one, I initially presumed rational exponent, not integer.  I got all excited about Taylor Series with coefficient reuse.  In fact, I will try that."
                    },
                    {
                        "username": "user0291CQ",
                        "content": "I personally don\\'t like questions that have math as a related topic, because that description is vague. Let\\'s say I want to do this problem, and I don\\'t know recursion, nor do I know how to get the power of a number. I can look in the related topics section, and see that I need to know recursion, and study that, before retrying the problem.\\n\\nWhat will I see for the other part of the problem? Just a generic statement, \"Math\". And sure, this problem tells you what to do, but what about the Climbing Stairs problem? The generic \"Math\" topic tells me nothing of the type of math knowledge needed to solve the problem."
                    },
                    {
                        "username": "adlong01",
                        "content": "[@super____hot](/super____hot) I get a considerably faster solution using log."
                    },
                    {
                        "username": "imfosf0r",
                        "content": "I\\'d disagree: your complaints about the edge cases are just how this function is supposed to work, because of how math works. If you get a different answer for -2^31 than everyone else, then the function isn\\'t working right yet."
                    },
                    {
                        "username": "super____hot",
                        "content": "in python x**n is the fastest method"
                    },
                    {
                        "username": "misterabdul",
                        "content": "I\\'m a C fan & I solve this problem using C. For me this is an interesting problem that let me learn again how the basic pow function could be implemented & let me try to optimize my solution to account for every corner cases. This is such a fun exercises in C IMO."
                    },
                    {
                        "username": "tylermatchett",
                        "content": "Here is a test case made by someone who was in a bad mood\\nx=-1\\nn=2147483647"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "This was a simple one. n%2 ==1, x^n is going to be -1. Because -1 ^ even number is equal to 1  AND -1^odd number is equal to -1."
                    },
                    {
                        "username": "sylvex",
                        "content": "```\\nx =\\n2.00000\\nn =\\n-2147483648\\n```\\nWhat even is the point of this edge case???"
                    },
                    {
                        "username": "tree9",
                        "content": "[@tojoSaha](/tojoSaha)  check this out please https://leetcode.com/problems/powx-n/solutions/4086833/beats-100-log-n-solution/ it handles the above case. Basically invert x and make n positive and carry on with same logic as for positive x and n. Take long N."
                    },
                    {
                        "username": "kavyamittal1282",
                        "content": "[@m_afnan2018](/m_afnan2018)  iam doing in java and geting the same error"
                    },
                    {
                        "username": "sandevil23",
                        "content": "i noticed that they have assigned int to n and here they are passing the upper and lower limits of long int "
                    },
                    {
                        "username": "amar180N_th",
                        "content": "hey I also got the same error here"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "Use long long..."
                    },
                    {
                        "username": "ekalavya_pc",
                        "content": "[@tojoSaha](/tojoSaha) use abs"
                    },
                    {
                        "username": "issac_tirkey1",
                        "content": "[@heisenberg280](/heisenberg280) -2^31 = 2147483648 and the positive integer limits till 2147483647 i.e 2^31-1. So when n is negative and -2^31  when you multiply it with -1 to make positive it overflows so store -1*n into a temp variable of type long long and it should work. (before storing typecast it into long long)"
                    },
                    {
                        "username": "tojoSaha",
                        "content": "Were u able to find the solution to this test case?.. If so.. then please tell"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "To make sure that your algorithm is fast."
                    },
                    {
                        "username": "heisenberg280",
                        "content": "How to solve this?"
                    },
                    {
                        "username": "shadowfax_",
                        "content": "just has the onsite and the interviewer tdidn\\'t want the recursive version but wanted the fast one with no recursion. \\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "Hitro",
                        "content": "I\\'m wondering why you guys are not using builtin Math.pow() method??\\nPlease give me some insight.\\nThank you :)"
                    },
                    {
                        "username": "marcjeffs6",
                        "content": "[@barstow123](/barstow123) Is this real? I can go to FAANG and any given Sr developer will know how to recreate any built in method and explain its prime optimization?"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Anarchy-NET",
                        "content": "We were asked to implement the built -in, which is basically Math.pow();\\nSo yeah, that\\'s what we\\'re doing"
                    },
                    {
                        "username": "barstow123",
                        "content": "The idea here is that we perform our work on the shoulders of giants.\\n\\nA more senior developer should be able to recreate built ins and explain how they are optimized if they want higher pay. for example, \"compile the solution in C++ for best performance\" is a good thing to say during senior interviews."
                    },
                    {
                        "username": "otherside2",
                        "content": "My C# code returns the expected Output for the below values when run in Visual Studio, but not here in Leetcode. Where is the disconnect? Could that be the reason why this question has so many thumbs down?\\n\\n240 / 304 test cases passed.\\nStatus: Wrong Answer\\n\\nSubmitted: 0\\xA0minutes ago\\nInput: \\n8.84372\\n-5\\nOutput: \\n0.0\\nExpected: \\n2e-05"
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "make 1 condition for n<0 and return 1/ans(that you are returning)"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Nishtha_2",
                        "content": "Question is under the catogery of binary search can someone suggest me solution with binary search"
                    },
                    {
                        "username": "AshutoshPatel028",
                        "content": "[@AdityaBhate](/AdityaBhate) IT doesn\\'t exist!!!"
                    },
                    {
                        "username": "r_shweta",
                        "content": "same\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "To implement this problem in a naive way, we would need to multiply x with x for n times, as the n is too large, code would take ages to complete. Idea here is that once we find a square of x, we can multiply square of x with square of x to get x^4, we can again multiply x^4 with x^4 to get x^8 and so on and so forth.\\nx^1 * x^1 = x^(1+1) = x^2\\nx^2 * x^2 = x^(2+2) = x^4\\nx^4 * x^4 = x^(4+4) = x^8\\n.....\\nBy this way, we can reduce the time complexity from O(n) to O(log n), This problem comes under binary search as we are squaring(binary) each answer."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "AnudeepReddyBondugula",
                        "content": "[@chickooo](/chickooo)  Actually it follows the concept of binary search, if you want to calculate for n = 4 you first calculate for  n = 2 and before calculating n = 2, you calculate n =1, so that you can obtain the solution in log(n) instead of calculating for 4 times it will take O(N) "
                    },
                    {
                        "username": "chickooo",
                        "content": "I don\\'t know why it was showing under the tag **binary search**, but the tags are now updated to **Math** and **Recursion**"
                    },
                    {
                        "username": "Will",
                        "content": "Please show me the code if any one can solve this using binary search. \\nThanks a lot!"
                    },
                    {
                        "username": "shivagama02",
                        "content": "The code for the same using binary search can be done in javascript. The code for the same is here: \\n\\nvar myPow = function(x, n) {\\n  if (n === 0) return 1;\\n  if (n > 0) return pow(x, n);\\n  if (n < 0) return 1 / pow(x, -n);\\n};\\n\\nvar pow = function (x, n) {\\n  if (n === 1) return x;\\n  var num = pow(x, Math.floor(n / 2));\\n  if (n % 2 === 0) {\\n    return num * num;\\n  } else {\\n    return x * num * num;\\n  }\\n};\\n\\n\\nThe code i tried has been accepted with time and space complexity of  O(log(n))."
                    },
                    {
                        "username": "0xatul",
                        "content": "[@user2387402](/user2387402) Dude that's comment from 2015, that guy must've already moved on lol"
                    },
                    {
                        "username": "user2387402",
                        "content": "It\\'s not binary search. It is binary exploitation. Read the editorial."
                    },
                    {
                        "username": "mateenrehanbatt",
                        "content": "class Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n\\n        result = 1\\n        while n > 0:\\n            if n % 2 == 1:\\n                result *= x\\n            x *= x\\n            n //= 2\\n\\n        return result"
                    }
                ]
            },
            {
                "id": 1565960,
                "content": [
                    {
                        "username": "mrkanesir",
                        "content": "how am i supposed to NOT get stack overflow with n=2147483647 ..."
                    },
                    {
                        "username": "itsmesuni19",
                        "content": " if your solu is O(n) solu, use long long i in the loop"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "What are you doing bro, I didn\\'t get this error, try to solve in O(log N)"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "use python? "
                    },
                    {
                        "username": "19bec1397",
                        "content": "[@satyasanjay1999](/satyasanjay1999) how\\n"
                    },
                    {
                        "username": "satyasanjay1999",
                        "content": "You should optimize the solution in logn time complexity. It will also reduce the stack size, then it will also run for n = -2147483648."
                    },
                    {
                        "username": "Linearly_Independent",
                        "content": "\\n\\n\\nreturn x**n"
                    },
                    {
                        "username": "AssortedFantasy",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The point of Leetcode is interview practice.\\nWould you go to an interview, and if they ask how should you implement a fast power algorithm you give them the answer of `x**y`? The point is to test your math skills."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The first two words of the question ask you to implement pow(x, n). It's simply illogical to Implement it by calling itself."
                    },
                    {
                        "username": "Satyam_Mishra",
                        "content": "[@Miiza](/Miiza) Where this is mentioned? My code accepted at just return pow(x,n)"
                    },
                    {
                        "username": "Braderbell",
                        "content": "return pow(x, n)"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "as of  this we should know the implementation of x**n"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "is it working"
                    },
                    {
                        "username": "Miiza",
                        "content": "Only that this is using pow(x, n) in the background, which you\\'re not suppose to use."
                    },
                    {
                        "username": "henrygriffin330",
                        "content": "this is what i did"
                    },
                    {
                        "username": "yanyehe",
                        "content": "duh"
                    },
                    {
                        "username": "JainAnshul",
                        "content": "for Python, is there anything better (in terms of complexity) than this? Otherwise, this seems to be obvious."
                    },
                    {
                        "username": "olooney",
                        "content": "This is the 37th problem I\\'ve solved on the site and in the end I got a respectible 4ms solution. But honestly, It seems like its 2% algorithm, 98% fiddling with binary representations of signed integers and floating point numbers. I also note that, as of this writing, the problem has 1160 downvotes to 428 upvotes, so there\\'s certainly some shared negativity out there. \\n\\nPersonally, I didn\\'t enjoy this problem because I felt like I spent more time writing custom test cases for corner cases than I did programming. Frankly I cannot imagine getting this question in an interview and having the interviewer go, \"aha! but your solution doesn\\'t account for the case when n is -2^31 and x is exactly -1.0! There\\'s no way we\\'d hire such an incompetent programmer!\" And yet the way the acceptance tests are written, you need to nail *every* *single* corner case. Perhaps that frustration is limited to C/C++? Or there\\'s a different algorithm that more naturally accounts for these edge cases? \\n\\nWhat was your experience? Would you agree or disagree with my thesis that this is the worst problem on the site? "
                    },
                    {
                        "username": "samstafford",
                        "content": "funny, when I saw the title of this one, I initially presumed rational exponent, not integer.  I got all excited about Taylor Series with coefficient reuse.  In fact, I will try that."
                    },
                    {
                        "username": "user0291CQ",
                        "content": "I personally don\\'t like questions that have math as a related topic, because that description is vague. Let\\'s say I want to do this problem, and I don\\'t know recursion, nor do I know how to get the power of a number. I can look in the related topics section, and see that I need to know recursion, and study that, before retrying the problem.\\n\\nWhat will I see for the other part of the problem? Just a generic statement, \"Math\". And sure, this problem tells you what to do, but what about the Climbing Stairs problem? The generic \"Math\" topic tells me nothing of the type of math knowledge needed to solve the problem."
                    },
                    {
                        "username": "adlong01",
                        "content": "[@super____hot](/super____hot) I get a considerably faster solution using log."
                    },
                    {
                        "username": "imfosf0r",
                        "content": "I\\'d disagree: your complaints about the edge cases are just how this function is supposed to work, because of how math works. If you get a different answer for -2^31 than everyone else, then the function isn\\'t working right yet."
                    },
                    {
                        "username": "super____hot",
                        "content": "in python x**n is the fastest method"
                    },
                    {
                        "username": "misterabdul",
                        "content": "I\\'m a C fan & I solve this problem using C. For me this is an interesting problem that let me learn again how the basic pow function could be implemented & let me try to optimize my solution to account for every corner cases. This is such a fun exercises in C IMO."
                    },
                    {
                        "username": "tylermatchett",
                        "content": "Here is a test case made by someone who was in a bad mood\\nx=-1\\nn=2147483647"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "This was a simple one. n%2 ==1, x^n is going to be -1. Because -1 ^ even number is equal to 1  AND -1^odd number is equal to -1."
                    },
                    {
                        "username": "sylvex",
                        "content": "```\\nx =\\n2.00000\\nn =\\n-2147483648\\n```\\nWhat even is the point of this edge case???"
                    },
                    {
                        "username": "tree9",
                        "content": "[@tojoSaha](/tojoSaha)  check this out please https://leetcode.com/problems/powx-n/solutions/4086833/beats-100-log-n-solution/ it handles the above case. Basically invert x and make n positive and carry on with same logic as for positive x and n. Take long N."
                    },
                    {
                        "username": "kavyamittal1282",
                        "content": "[@m_afnan2018](/m_afnan2018)  iam doing in java and geting the same error"
                    },
                    {
                        "username": "sandevil23",
                        "content": "i noticed that they have assigned int to n and here they are passing the upper and lower limits of long int "
                    },
                    {
                        "username": "amar180N_th",
                        "content": "hey I also got the same error here"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "Use long long..."
                    },
                    {
                        "username": "ekalavya_pc",
                        "content": "[@tojoSaha](/tojoSaha) use abs"
                    },
                    {
                        "username": "issac_tirkey1",
                        "content": "[@heisenberg280](/heisenberg280) -2^31 = 2147483648 and the positive integer limits till 2147483647 i.e 2^31-1. So when n is negative and -2^31  when you multiply it with -1 to make positive it overflows so store -1*n into a temp variable of type long long and it should work. (before storing typecast it into long long)"
                    },
                    {
                        "username": "tojoSaha",
                        "content": "Were u able to find the solution to this test case?.. If so.. then please tell"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "To make sure that your algorithm is fast."
                    },
                    {
                        "username": "heisenberg280",
                        "content": "How to solve this?"
                    },
                    {
                        "username": "shadowfax_",
                        "content": "just has the onsite and the interviewer tdidn\\'t want the recursive version but wanted the fast one with no recursion. \\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "Hitro",
                        "content": "I\\'m wondering why you guys are not using builtin Math.pow() method??\\nPlease give me some insight.\\nThank you :)"
                    },
                    {
                        "username": "marcjeffs6",
                        "content": "[@barstow123](/barstow123) Is this real? I can go to FAANG and any given Sr developer will know how to recreate any built in method and explain its prime optimization?"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Anarchy-NET",
                        "content": "We were asked to implement the built -in, which is basically Math.pow();\\nSo yeah, that\\'s what we\\'re doing"
                    },
                    {
                        "username": "barstow123",
                        "content": "The idea here is that we perform our work on the shoulders of giants.\\n\\nA more senior developer should be able to recreate built ins and explain how they are optimized if they want higher pay. for example, \"compile the solution in C++ for best performance\" is a good thing to say during senior interviews."
                    },
                    {
                        "username": "otherside2",
                        "content": "My C# code returns the expected Output for the below values when run in Visual Studio, but not here in Leetcode. Where is the disconnect? Could that be the reason why this question has so many thumbs down?\\n\\n240 / 304 test cases passed.\\nStatus: Wrong Answer\\n\\nSubmitted: 0\\xA0minutes ago\\nInput: \\n8.84372\\n-5\\nOutput: \\n0.0\\nExpected: \\n2e-05"
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "make 1 condition for n<0 and return 1/ans(that you are returning)"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Nishtha_2",
                        "content": "Question is under the catogery of binary search can someone suggest me solution with binary search"
                    },
                    {
                        "username": "AshutoshPatel028",
                        "content": "[@AdityaBhate](/AdityaBhate) IT doesn\\'t exist!!!"
                    },
                    {
                        "username": "r_shweta",
                        "content": "same\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "To implement this problem in a naive way, we would need to multiply x with x for n times, as the n is too large, code would take ages to complete. Idea here is that once we find a square of x, we can multiply square of x with square of x to get x^4, we can again multiply x^4 with x^4 to get x^8 and so on and so forth.\\nx^1 * x^1 = x^(1+1) = x^2\\nx^2 * x^2 = x^(2+2) = x^4\\nx^4 * x^4 = x^(4+4) = x^8\\n.....\\nBy this way, we can reduce the time complexity from O(n) to O(log n), This problem comes under binary search as we are squaring(binary) each answer."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "AnudeepReddyBondugula",
                        "content": "[@chickooo](/chickooo)  Actually it follows the concept of binary search, if you want to calculate for n = 4 you first calculate for  n = 2 and before calculating n = 2, you calculate n =1, so that you can obtain the solution in log(n) instead of calculating for 4 times it will take O(N) "
                    },
                    {
                        "username": "chickooo",
                        "content": "I don\\'t know why it was showing under the tag **binary search**, but the tags are now updated to **Math** and **Recursion**"
                    },
                    {
                        "username": "Will",
                        "content": "Please show me the code if any one can solve this using binary search. \\nThanks a lot!"
                    },
                    {
                        "username": "shivagama02",
                        "content": "The code for the same using binary search can be done in javascript. The code for the same is here: \\n\\nvar myPow = function(x, n) {\\n  if (n === 0) return 1;\\n  if (n > 0) return pow(x, n);\\n  if (n < 0) return 1 / pow(x, -n);\\n};\\n\\nvar pow = function (x, n) {\\n  if (n === 1) return x;\\n  var num = pow(x, Math.floor(n / 2));\\n  if (n % 2 === 0) {\\n    return num * num;\\n  } else {\\n    return x * num * num;\\n  }\\n};\\n\\n\\nThe code i tried has been accepted with time and space complexity of  O(log(n))."
                    },
                    {
                        "username": "0xatul",
                        "content": "[@user2387402](/user2387402) Dude that's comment from 2015, that guy must've already moved on lol"
                    },
                    {
                        "username": "user2387402",
                        "content": "It\\'s not binary search. It is binary exploitation. Read the editorial."
                    },
                    {
                        "username": "mateenrehanbatt",
                        "content": "class Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n\\n        result = 1\\n        while n > 0:\\n            if n % 2 == 1:\\n                result *= x\\n            x *= x\\n            n //= 2\\n\\n        return result"
                    }
                ]
            },
            {
                "id": 1803500,
                "content": [
                    {
                        "username": "mrkanesir",
                        "content": "how am i supposed to NOT get stack overflow with n=2147483647 ..."
                    },
                    {
                        "username": "itsmesuni19",
                        "content": " if your solu is O(n) solu, use long long i in the loop"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "What are you doing bro, I didn\\'t get this error, try to solve in O(log N)"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "use python? "
                    },
                    {
                        "username": "19bec1397",
                        "content": "[@satyasanjay1999](/satyasanjay1999) how\\n"
                    },
                    {
                        "username": "satyasanjay1999",
                        "content": "You should optimize the solution in logn time complexity. It will also reduce the stack size, then it will also run for n = -2147483648."
                    },
                    {
                        "username": "Linearly_Independent",
                        "content": "\\n\\n\\nreturn x**n"
                    },
                    {
                        "username": "AssortedFantasy",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The point of Leetcode is interview practice.\\nWould you go to an interview, and if they ask how should you implement a fast power algorithm you give them the answer of `x**y`? The point is to test your math skills."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The first two words of the question ask you to implement pow(x, n). It's simply illogical to Implement it by calling itself."
                    },
                    {
                        "username": "Satyam_Mishra",
                        "content": "[@Miiza](/Miiza) Where this is mentioned? My code accepted at just return pow(x,n)"
                    },
                    {
                        "username": "Braderbell",
                        "content": "return pow(x, n)"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "as of  this we should know the implementation of x**n"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "is it working"
                    },
                    {
                        "username": "Miiza",
                        "content": "Only that this is using pow(x, n) in the background, which you\\'re not suppose to use."
                    },
                    {
                        "username": "henrygriffin330",
                        "content": "this is what i did"
                    },
                    {
                        "username": "yanyehe",
                        "content": "duh"
                    },
                    {
                        "username": "JainAnshul",
                        "content": "for Python, is there anything better (in terms of complexity) than this? Otherwise, this seems to be obvious."
                    },
                    {
                        "username": "olooney",
                        "content": "This is the 37th problem I\\'ve solved on the site and in the end I got a respectible 4ms solution. But honestly, It seems like its 2% algorithm, 98% fiddling with binary representations of signed integers and floating point numbers. I also note that, as of this writing, the problem has 1160 downvotes to 428 upvotes, so there\\'s certainly some shared negativity out there. \\n\\nPersonally, I didn\\'t enjoy this problem because I felt like I spent more time writing custom test cases for corner cases than I did programming. Frankly I cannot imagine getting this question in an interview and having the interviewer go, \"aha! but your solution doesn\\'t account for the case when n is -2^31 and x is exactly -1.0! There\\'s no way we\\'d hire such an incompetent programmer!\" And yet the way the acceptance tests are written, you need to nail *every* *single* corner case. Perhaps that frustration is limited to C/C++? Or there\\'s a different algorithm that more naturally accounts for these edge cases? \\n\\nWhat was your experience? Would you agree or disagree with my thesis that this is the worst problem on the site? "
                    },
                    {
                        "username": "samstafford",
                        "content": "funny, when I saw the title of this one, I initially presumed rational exponent, not integer.  I got all excited about Taylor Series with coefficient reuse.  In fact, I will try that."
                    },
                    {
                        "username": "user0291CQ",
                        "content": "I personally don\\'t like questions that have math as a related topic, because that description is vague. Let\\'s say I want to do this problem, and I don\\'t know recursion, nor do I know how to get the power of a number. I can look in the related topics section, and see that I need to know recursion, and study that, before retrying the problem.\\n\\nWhat will I see for the other part of the problem? Just a generic statement, \"Math\". And sure, this problem tells you what to do, but what about the Climbing Stairs problem? The generic \"Math\" topic tells me nothing of the type of math knowledge needed to solve the problem."
                    },
                    {
                        "username": "adlong01",
                        "content": "[@super____hot](/super____hot) I get a considerably faster solution using log."
                    },
                    {
                        "username": "imfosf0r",
                        "content": "I\\'d disagree: your complaints about the edge cases are just how this function is supposed to work, because of how math works. If you get a different answer for -2^31 than everyone else, then the function isn\\'t working right yet."
                    },
                    {
                        "username": "super____hot",
                        "content": "in python x**n is the fastest method"
                    },
                    {
                        "username": "misterabdul",
                        "content": "I\\'m a C fan & I solve this problem using C. For me this is an interesting problem that let me learn again how the basic pow function could be implemented & let me try to optimize my solution to account for every corner cases. This is such a fun exercises in C IMO."
                    },
                    {
                        "username": "tylermatchett",
                        "content": "Here is a test case made by someone who was in a bad mood\\nx=-1\\nn=2147483647"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "This was a simple one. n%2 ==1, x^n is going to be -1. Because -1 ^ even number is equal to 1  AND -1^odd number is equal to -1."
                    },
                    {
                        "username": "sylvex",
                        "content": "```\\nx =\\n2.00000\\nn =\\n-2147483648\\n```\\nWhat even is the point of this edge case???"
                    },
                    {
                        "username": "tree9",
                        "content": "[@tojoSaha](/tojoSaha)  check this out please https://leetcode.com/problems/powx-n/solutions/4086833/beats-100-log-n-solution/ it handles the above case. Basically invert x and make n positive and carry on with same logic as for positive x and n. Take long N."
                    },
                    {
                        "username": "kavyamittal1282",
                        "content": "[@m_afnan2018](/m_afnan2018)  iam doing in java and geting the same error"
                    },
                    {
                        "username": "sandevil23",
                        "content": "i noticed that they have assigned int to n and here they are passing the upper and lower limits of long int "
                    },
                    {
                        "username": "amar180N_th",
                        "content": "hey I also got the same error here"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "Use long long..."
                    },
                    {
                        "username": "ekalavya_pc",
                        "content": "[@tojoSaha](/tojoSaha) use abs"
                    },
                    {
                        "username": "issac_tirkey1",
                        "content": "[@heisenberg280](/heisenberg280) -2^31 = 2147483648 and the positive integer limits till 2147483647 i.e 2^31-1. So when n is negative and -2^31  when you multiply it with -1 to make positive it overflows so store -1*n into a temp variable of type long long and it should work. (before storing typecast it into long long)"
                    },
                    {
                        "username": "tojoSaha",
                        "content": "Were u able to find the solution to this test case?.. If so.. then please tell"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "To make sure that your algorithm is fast."
                    },
                    {
                        "username": "heisenberg280",
                        "content": "How to solve this?"
                    },
                    {
                        "username": "shadowfax_",
                        "content": "just has the onsite and the interviewer tdidn\\'t want the recursive version but wanted the fast one with no recursion. \\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "Hitro",
                        "content": "I\\'m wondering why you guys are not using builtin Math.pow() method??\\nPlease give me some insight.\\nThank you :)"
                    },
                    {
                        "username": "marcjeffs6",
                        "content": "[@barstow123](/barstow123) Is this real? I can go to FAANG and any given Sr developer will know how to recreate any built in method and explain its prime optimization?"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Anarchy-NET",
                        "content": "We were asked to implement the built -in, which is basically Math.pow();\\nSo yeah, that\\'s what we\\'re doing"
                    },
                    {
                        "username": "barstow123",
                        "content": "The idea here is that we perform our work on the shoulders of giants.\\n\\nA more senior developer should be able to recreate built ins and explain how they are optimized if they want higher pay. for example, \"compile the solution in C++ for best performance\" is a good thing to say during senior interviews."
                    },
                    {
                        "username": "otherside2",
                        "content": "My C# code returns the expected Output for the below values when run in Visual Studio, but not here in Leetcode. Where is the disconnect? Could that be the reason why this question has so many thumbs down?\\n\\n240 / 304 test cases passed.\\nStatus: Wrong Answer\\n\\nSubmitted: 0\\xA0minutes ago\\nInput: \\n8.84372\\n-5\\nOutput: \\n0.0\\nExpected: \\n2e-05"
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "make 1 condition for n<0 and return 1/ans(that you are returning)"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Nishtha_2",
                        "content": "Question is under the catogery of binary search can someone suggest me solution with binary search"
                    },
                    {
                        "username": "AshutoshPatel028",
                        "content": "[@AdityaBhate](/AdityaBhate) IT doesn\\'t exist!!!"
                    },
                    {
                        "username": "r_shweta",
                        "content": "same\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "To implement this problem in a naive way, we would need to multiply x with x for n times, as the n is too large, code would take ages to complete. Idea here is that once we find a square of x, we can multiply square of x with square of x to get x^4, we can again multiply x^4 with x^4 to get x^8 and so on and so forth.\\nx^1 * x^1 = x^(1+1) = x^2\\nx^2 * x^2 = x^(2+2) = x^4\\nx^4 * x^4 = x^(4+4) = x^8\\n.....\\nBy this way, we can reduce the time complexity from O(n) to O(log n), This problem comes under binary search as we are squaring(binary) each answer."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "AnudeepReddyBondugula",
                        "content": "[@chickooo](/chickooo)  Actually it follows the concept of binary search, if you want to calculate for n = 4 you first calculate for  n = 2 and before calculating n = 2, you calculate n =1, so that you can obtain the solution in log(n) instead of calculating for 4 times it will take O(N) "
                    },
                    {
                        "username": "chickooo",
                        "content": "I don\\'t know why it was showing under the tag **binary search**, but the tags are now updated to **Math** and **Recursion**"
                    },
                    {
                        "username": "Will",
                        "content": "Please show me the code if any one can solve this using binary search. \\nThanks a lot!"
                    },
                    {
                        "username": "shivagama02",
                        "content": "The code for the same using binary search can be done in javascript. The code for the same is here: \\n\\nvar myPow = function(x, n) {\\n  if (n === 0) return 1;\\n  if (n > 0) return pow(x, n);\\n  if (n < 0) return 1 / pow(x, -n);\\n};\\n\\nvar pow = function (x, n) {\\n  if (n === 1) return x;\\n  var num = pow(x, Math.floor(n / 2));\\n  if (n % 2 === 0) {\\n    return num * num;\\n  } else {\\n    return x * num * num;\\n  }\\n};\\n\\n\\nThe code i tried has been accepted with time and space complexity of  O(log(n))."
                    },
                    {
                        "username": "0xatul",
                        "content": "[@user2387402](/user2387402) Dude that's comment from 2015, that guy must've already moved on lol"
                    },
                    {
                        "username": "user2387402",
                        "content": "It\\'s not binary search. It is binary exploitation. Read the editorial."
                    },
                    {
                        "username": "mateenrehanbatt",
                        "content": "class Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n\\n        result = 1\\n        while n > 0:\\n            if n % 2 == 1:\\n                result *= x\\n            x *= x\\n            n //= 2\\n\\n        return result"
                    }
                ]
            },
            {
                "id": 1835821,
                "content": [
                    {
                        "username": "mrkanesir",
                        "content": "how am i supposed to NOT get stack overflow with n=2147483647 ..."
                    },
                    {
                        "username": "itsmesuni19",
                        "content": " if your solu is O(n) solu, use long long i in the loop"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "What are you doing bro, I didn\\'t get this error, try to solve in O(log N)"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "use python? "
                    },
                    {
                        "username": "19bec1397",
                        "content": "[@satyasanjay1999](/satyasanjay1999) how\\n"
                    },
                    {
                        "username": "satyasanjay1999",
                        "content": "You should optimize the solution in logn time complexity. It will also reduce the stack size, then it will also run for n = -2147483648."
                    },
                    {
                        "username": "Linearly_Independent",
                        "content": "\\n\\n\\nreturn x**n"
                    },
                    {
                        "username": "AssortedFantasy",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The point of Leetcode is interview practice.\\nWould you go to an interview, and if they ask how should you implement a fast power algorithm you give them the answer of `x**y`? The point is to test your math skills."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The first two words of the question ask you to implement pow(x, n). It's simply illogical to Implement it by calling itself."
                    },
                    {
                        "username": "Satyam_Mishra",
                        "content": "[@Miiza](/Miiza) Where this is mentioned? My code accepted at just return pow(x,n)"
                    },
                    {
                        "username": "Braderbell",
                        "content": "return pow(x, n)"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "as of  this we should know the implementation of x**n"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "is it working"
                    },
                    {
                        "username": "Miiza",
                        "content": "Only that this is using pow(x, n) in the background, which you\\'re not suppose to use."
                    },
                    {
                        "username": "henrygriffin330",
                        "content": "this is what i did"
                    },
                    {
                        "username": "yanyehe",
                        "content": "duh"
                    },
                    {
                        "username": "JainAnshul",
                        "content": "for Python, is there anything better (in terms of complexity) than this? Otherwise, this seems to be obvious."
                    },
                    {
                        "username": "olooney",
                        "content": "This is the 37th problem I\\'ve solved on the site and in the end I got a respectible 4ms solution. But honestly, It seems like its 2% algorithm, 98% fiddling with binary representations of signed integers and floating point numbers. I also note that, as of this writing, the problem has 1160 downvotes to 428 upvotes, so there\\'s certainly some shared negativity out there. \\n\\nPersonally, I didn\\'t enjoy this problem because I felt like I spent more time writing custom test cases for corner cases than I did programming. Frankly I cannot imagine getting this question in an interview and having the interviewer go, \"aha! but your solution doesn\\'t account for the case when n is -2^31 and x is exactly -1.0! There\\'s no way we\\'d hire such an incompetent programmer!\" And yet the way the acceptance tests are written, you need to nail *every* *single* corner case. Perhaps that frustration is limited to C/C++? Or there\\'s a different algorithm that more naturally accounts for these edge cases? \\n\\nWhat was your experience? Would you agree or disagree with my thesis that this is the worst problem on the site? "
                    },
                    {
                        "username": "samstafford",
                        "content": "funny, when I saw the title of this one, I initially presumed rational exponent, not integer.  I got all excited about Taylor Series with coefficient reuse.  In fact, I will try that."
                    },
                    {
                        "username": "user0291CQ",
                        "content": "I personally don\\'t like questions that have math as a related topic, because that description is vague. Let\\'s say I want to do this problem, and I don\\'t know recursion, nor do I know how to get the power of a number. I can look in the related topics section, and see that I need to know recursion, and study that, before retrying the problem.\\n\\nWhat will I see for the other part of the problem? Just a generic statement, \"Math\". And sure, this problem tells you what to do, but what about the Climbing Stairs problem? The generic \"Math\" topic tells me nothing of the type of math knowledge needed to solve the problem."
                    },
                    {
                        "username": "adlong01",
                        "content": "[@super____hot](/super____hot) I get a considerably faster solution using log."
                    },
                    {
                        "username": "imfosf0r",
                        "content": "I\\'d disagree: your complaints about the edge cases are just how this function is supposed to work, because of how math works. If you get a different answer for -2^31 than everyone else, then the function isn\\'t working right yet."
                    },
                    {
                        "username": "super____hot",
                        "content": "in python x**n is the fastest method"
                    },
                    {
                        "username": "misterabdul",
                        "content": "I\\'m a C fan & I solve this problem using C. For me this is an interesting problem that let me learn again how the basic pow function could be implemented & let me try to optimize my solution to account for every corner cases. This is such a fun exercises in C IMO."
                    },
                    {
                        "username": "tylermatchett",
                        "content": "Here is a test case made by someone who was in a bad mood\\nx=-1\\nn=2147483647"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "This was a simple one. n%2 ==1, x^n is going to be -1. Because -1 ^ even number is equal to 1  AND -1^odd number is equal to -1."
                    },
                    {
                        "username": "sylvex",
                        "content": "```\\nx =\\n2.00000\\nn =\\n-2147483648\\n```\\nWhat even is the point of this edge case???"
                    },
                    {
                        "username": "tree9",
                        "content": "[@tojoSaha](/tojoSaha)  check this out please https://leetcode.com/problems/powx-n/solutions/4086833/beats-100-log-n-solution/ it handles the above case. Basically invert x and make n positive and carry on with same logic as for positive x and n. Take long N."
                    },
                    {
                        "username": "kavyamittal1282",
                        "content": "[@m_afnan2018](/m_afnan2018)  iam doing in java and geting the same error"
                    },
                    {
                        "username": "sandevil23",
                        "content": "i noticed that they have assigned int to n and here they are passing the upper and lower limits of long int "
                    },
                    {
                        "username": "amar180N_th",
                        "content": "hey I also got the same error here"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "Use long long..."
                    },
                    {
                        "username": "ekalavya_pc",
                        "content": "[@tojoSaha](/tojoSaha) use abs"
                    },
                    {
                        "username": "issac_tirkey1",
                        "content": "[@heisenberg280](/heisenberg280) -2^31 = 2147483648 and the positive integer limits till 2147483647 i.e 2^31-1. So when n is negative and -2^31  when you multiply it with -1 to make positive it overflows so store -1*n into a temp variable of type long long and it should work. (before storing typecast it into long long)"
                    },
                    {
                        "username": "tojoSaha",
                        "content": "Were u able to find the solution to this test case?.. If so.. then please tell"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "To make sure that your algorithm is fast."
                    },
                    {
                        "username": "heisenberg280",
                        "content": "How to solve this?"
                    },
                    {
                        "username": "shadowfax_",
                        "content": "just has the onsite and the interviewer tdidn\\'t want the recursive version but wanted the fast one with no recursion. \\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "Hitro",
                        "content": "I\\'m wondering why you guys are not using builtin Math.pow() method??\\nPlease give me some insight.\\nThank you :)"
                    },
                    {
                        "username": "marcjeffs6",
                        "content": "[@barstow123](/barstow123) Is this real? I can go to FAANG and any given Sr developer will know how to recreate any built in method and explain its prime optimization?"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Anarchy-NET",
                        "content": "We were asked to implement the built -in, which is basically Math.pow();\\nSo yeah, that\\'s what we\\'re doing"
                    },
                    {
                        "username": "barstow123",
                        "content": "The idea here is that we perform our work on the shoulders of giants.\\n\\nA more senior developer should be able to recreate built ins and explain how they are optimized if they want higher pay. for example, \"compile the solution in C++ for best performance\" is a good thing to say during senior interviews."
                    },
                    {
                        "username": "otherside2",
                        "content": "My C# code returns the expected Output for the below values when run in Visual Studio, but not here in Leetcode. Where is the disconnect? Could that be the reason why this question has so many thumbs down?\\n\\n240 / 304 test cases passed.\\nStatus: Wrong Answer\\n\\nSubmitted: 0\\xA0minutes ago\\nInput: \\n8.84372\\n-5\\nOutput: \\n0.0\\nExpected: \\n2e-05"
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "make 1 condition for n<0 and return 1/ans(that you are returning)"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Nishtha_2",
                        "content": "Question is under the catogery of binary search can someone suggest me solution with binary search"
                    },
                    {
                        "username": "AshutoshPatel028",
                        "content": "[@AdityaBhate](/AdityaBhate) IT doesn\\'t exist!!!"
                    },
                    {
                        "username": "r_shweta",
                        "content": "same\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "To implement this problem in a naive way, we would need to multiply x with x for n times, as the n is too large, code would take ages to complete. Idea here is that once we find a square of x, we can multiply square of x with square of x to get x^4, we can again multiply x^4 with x^4 to get x^8 and so on and so forth.\\nx^1 * x^1 = x^(1+1) = x^2\\nx^2 * x^2 = x^(2+2) = x^4\\nx^4 * x^4 = x^(4+4) = x^8\\n.....\\nBy this way, we can reduce the time complexity from O(n) to O(log n), This problem comes under binary search as we are squaring(binary) each answer."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "AnudeepReddyBondugula",
                        "content": "[@chickooo](/chickooo)  Actually it follows the concept of binary search, if you want to calculate for n = 4 you first calculate for  n = 2 and before calculating n = 2, you calculate n =1, so that you can obtain the solution in log(n) instead of calculating for 4 times it will take O(N) "
                    },
                    {
                        "username": "chickooo",
                        "content": "I don\\'t know why it was showing under the tag **binary search**, but the tags are now updated to **Math** and **Recursion**"
                    },
                    {
                        "username": "Will",
                        "content": "Please show me the code if any one can solve this using binary search. \\nThanks a lot!"
                    },
                    {
                        "username": "shivagama02",
                        "content": "The code for the same using binary search can be done in javascript. The code for the same is here: \\n\\nvar myPow = function(x, n) {\\n  if (n === 0) return 1;\\n  if (n > 0) return pow(x, n);\\n  if (n < 0) return 1 / pow(x, -n);\\n};\\n\\nvar pow = function (x, n) {\\n  if (n === 1) return x;\\n  var num = pow(x, Math.floor(n / 2));\\n  if (n % 2 === 0) {\\n    return num * num;\\n  } else {\\n    return x * num * num;\\n  }\\n};\\n\\n\\nThe code i tried has been accepted with time and space complexity of  O(log(n))."
                    },
                    {
                        "username": "0xatul",
                        "content": "[@user2387402](/user2387402) Dude that's comment from 2015, that guy must've already moved on lol"
                    },
                    {
                        "username": "user2387402",
                        "content": "It\\'s not binary search. It is binary exploitation. Read the editorial."
                    },
                    {
                        "username": "mateenrehanbatt",
                        "content": "class Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n\\n        result = 1\\n        while n > 0:\\n            if n % 2 == 1:\\n                result *= x\\n            x *= x\\n            n //= 2\\n\\n        return result"
                    }
                ]
            },
            {
                "id": 1570780,
                "content": [
                    {
                        "username": "mrkanesir",
                        "content": "how am i supposed to NOT get stack overflow with n=2147483647 ..."
                    },
                    {
                        "username": "itsmesuni19",
                        "content": " if your solu is O(n) solu, use long long i in the loop"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "What are you doing bro, I didn\\'t get this error, try to solve in O(log N)"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "use python? "
                    },
                    {
                        "username": "19bec1397",
                        "content": "[@satyasanjay1999](/satyasanjay1999) how\\n"
                    },
                    {
                        "username": "satyasanjay1999",
                        "content": "You should optimize the solution in logn time complexity. It will also reduce the stack size, then it will also run for n = -2147483648."
                    },
                    {
                        "username": "Linearly_Independent",
                        "content": "\\n\\n\\nreturn x**n"
                    },
                    {
                        "username": "AssortedFantasy",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The point of Leetcode is interview practice.\\nWould you go to an interview, and if they ask how should you implement a fast power algorithm you give them the answer of `x**y`? The point is to test your math skills."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The first two words of the question ask you to implement pow(x, n). It's simply illogical to Implement it by calling itself."
                    },
                    {
                        "username": "Satyam_Mishra",
                        "content": "[@Miiza](/Miiza) Where this is mentioned? My code accepted at just return pow(x,n)"
                    },
                    {
                        "username": "Braderbell",
                        "content": "return pow(x, n)"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "as of  this we should know the implementation of x**n"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "is it working"
                    },
                    {
                        "username": "Miiza",
                        "content": "Only that this is using pow(x, n) in the background, which you\\'re not suppose to use."
                    },
                    {
                        "username": "henrygriffin330",
                        "content": "this is what i did"
                    },
                    {
                        "username": "yanyehe",
                        "content": "duh"
                    },
                    {
                        "username": "JainAnshul",
                        "content": "for Python, is there anything better (in terms of complexity) than this? Otherwise, this seems to be obvious."
                    },
                    {
                        "username": "olooney",
                        "content": "This is the 37th problem I\\'ve solved on the site and in the end I got a respectible 4ms solution. But honestly, It seems like its 2% algorithm, 98% fiddling with binary representations of signed integers and floating point numbers. I also note that, as of this writing, the problem has 1160 downvotes to 428 upvotes, so there\\'s certainly some shared negativity out there. \\n\\nPersonally, I didn\\'t enjoy this problem because I felt like I spent more time writing custom test cases for corner cases than I did programming. Frankly I cannot imagine getting this question in an interview and having the interviewer go, \"aha! but your solution doesn\\'t account for the case when n is -2^31 and x is exactly -1.0! There\\'s no way we\\'d hire such an incompetent programmer!\" And yet the way the acceptance tests are written, you need to nail *every* *single* corner case. Perhaps that frustration is limited to C/C++? Or there\\'s a different algorithm that more naturally accounts for these edge cases? \\n\\nWhat was your experience? Would you agree or disagree with my thesis that this is the worst problem on the site? "
                    },
                    {
                        "username": "samstafford",
                        "content": "funny, when I saw the title of this one, I initially presumed rational exponent, not integer.  I got all excited about Taylor Series with coefficient reuse.  In fact, I will try that."
                    },
                    {
                        "username": "user0291CQ",
                        "content": "I personally don\\'t like questions that have math as a related topic, because that description is vague. Let\\'s say I want to do this problem, and I don\\'t know recursion, nor do I know how to get the power of a number. I can look in the related topics section, and see that I need to know recursion, and study that, before retrying the problem.\\n\\nWhat will I see for the other part of the problem? Just a generic statement, \"Math\". And sure, this problem tells you what to do, but what about the Climbing Stairs problem? The generic \"Math\" topic tells me nothing of the type of math knowledge needed to solve the problem."
                    },
                    {
                        "username": "adlong01",
                        "content": "[@super____hot](/super____hot) I get a considerably faster solution using log."
                    },
                    {
                        "username": "imfosf0r",
                        "content": "I\\'d disagree: your complaints about the edge cases are just how this function is supposed to work, because of how math works. If you get a different answer for -2^31 than everyone else, then the function isn\\'t working right yet."
                    },
                    {
                        "username": "super____hot",
                        "content": "in python x**n is the fastest method"
                    },
                    {
                        "username": "misterabdul",
                        "content": "I\\'m a C fan & I solve this problem using C. For me this is an interesting problem that let me learn again how the basic pow function could be implemented & let me try to optimize my solution to account for every corner cases. This is such a fun exercises in C IMO."
                    },
                    {
                        "username": "tylermatchett",
                        "content": "Here is a test case made by someone who was in a bad mood\\nx=-1\\nn=2147483647"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "This was a simple one. n%2 ==1, x^n is going to be -1. Because -1 ^ even number is equal to 1  AND -1^odd number is equal to -1."
                    },
                    {
                        "username": "sylvex",
                        "content": "```\\nx =\\n2.00000\\nn =\\n-2147483648\\n```\\nWhat even is the point of this edge case???"
                    },
                    {
                        "username": "tree9",
                        "content": "[@tojoSaha](/tojoSaha)  check this out please https://leetcode.com/problems/powx-n/solutions/4086833/beats-100-log-n-solution/ it handles the above case. Basically invert x and make n positive and carry on with same logic as for positive x and n. Take long N."
                    },
                    {
                        "username": "kavyamittal1282",
                        "content": "[@m_afnan2018](/m_afnan2018)  iam doing in java and geting the same error"
                    },
                    {
                        "username": "sandevil23",
                        "content": "i noticed that they have assigned int to n and here they are passing the upper and lower limits of long int "
                    },
                    {
                        "username": "amar180N_th",
                        "content": "hey I also got the same error here"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "Use long long..."
                    },
                    {
                        "username": "ekalavya_pc",
                        "content": "[@tojoSaha](/tojoSaha) use abs"
                    },
                    {
                        "username": "issac_tirkey1",
                        "content": "[@heisenberg280](/heisenberg280) -2^31 = 2147483648 and the positive integer limits till 2147483647 i.e 2^31-1. So when n is negative and -2^31  when you multiply it with -1 to make positive it overflows so store -1*n into a temp variable of type long long and it should work. (before storing typecast it into long long)"
                    },
                    {
                        "username": "tojoSaha",
                        "content": "Were u able to find the solution to this test case?.. If so.. then please tell"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "To make sure that your algorithm is fast."
                    },
                    {
                        "username": "heisenberg280",
                        "content": "How to solve this?"
                    },
                    {
                        "username": "shadowfax_",
                        "content": "just has the onsite and the interviewer tdidn\\'t want the recursive version but wanted the fast one with no recursion. \\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "Hitro",
                        "content": "I\\'m wondering why you guys are not using builtin Math.pow() method??\\nPlease give me some insight.\\nThank you :)"
                    },
                    {
                        "username": "marcjeffs6",
                        "content": "[@barstow123](/barstow123) Is this real? I can go to FAANG and any given Sr developer will know how to recreate any built in method and explain its prime optimization?"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Anarchy-NET",
                        "content": "We were asked to implement the built -in, which is basically Math.pow();\\nSo yeah, that\\'s what we\\'re doing"
                    },
                    {
                        "username": "barstow123",
                        "content": "The idea here is that we perform our work on the shoulders of giants.\\n\\nA more senior developer should be able to recreate built ins and explain how they are optimized if they want higher pay. for example, \"compile the solution in C++ for best performance\" is a good thing to say during senior interviews."
                    },
                    {
                        "username": "otherside2",
                        "content": "My C# code returns the expected Output for the below values when run in Visual Studio, but not here in Leetcode. Where is the disconnect? Could that be the reason why this question has so many thumbs down?\\n\\n240 / 304 test cases passed.\\nStatus: Wrong Answer\\n\\nSubmitted: 0\\xA0minutes ago\\nInput: \\n8.84372\\n-5\\nOutput: \\n0.0\\nExpected: \\n2e-05"
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "make 1 condition for n<0 and return 1/ans(that you are returning)"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Nishtha_2",
                        "content": "Question is under the catogery of binary search can someone suggest me solution with binary search"
                    },
                    {
                        "username": "AshutoshPatel028",
                        "content": "[@AdityaBhate](/AdityaBhate) IT doesn\\'t exist!!!"
                    },
                    {
                        "username": "r_shweta",
                        "content": "same\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "To implement this problem in a naive way, we would need to multiply x with x for n times, as the n is too large, code would take ages to complete. Idea here is that once we find a square of x, we can multiply square of x with square of x to get x^4, we can again multiply x^4 with x^4 to get x^8 and so on and so forth.\\nx^1 * x^1 = x^(1+1) = x^2\\nx^2 * x^2 = x^(2+2) = x^4\\nx^4 * x^4 = x^(4+4) = x^8\\n.....\\nBy this way, we can reduce the time complexity from O(n) to O(log n), This problem comes under binary search as we are squaring(binary) each answer."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "AnudeepReddyBondugula",
                        "content": "[@chickooo](/chickooo)  Actually it follows the concept of binary search, if you want to calculate for n = 4 you first calculate for  n = 2 and before calculating n = 2, you calculate n =1, so that you can obtain the solution in log(n) instead of calculating for 4 times it will take O(N) "
                    },
                    {
                        "username": "chickooo",
                        "content": "I don\\'t know why it was showing under the tag **binary search**, but the tags are now updated to **Math** and **Recursion**"
                    },
                    {
                        "username": "Will",
                        "content": "Please show me the code if any one can solve this using binary search. \\nThanks a lot!"
                    },
                    {
                        "username": "shivagama02",
                        "content": "The code for the same using binary search can be done in javascript. The code for the same is here: \\n\\nvar myPow = function(x, n) {\\n  if (n === 0) return 1;\\n  if (n > 0) return pow(x, n);\\n  if (n < 0) return 1 / pow(x, -n);\\n};\\n\\nvar pow = function (x, n) {\\n  if (n === 1) return x;\\n  var num = pow(x, Math.floor(n / 2));\\n  if (n % 2 === 0) {\\n    return num * num;\\n  } else {\\n    return x * num * num;\\n  }\\n};\\n\\n\\nThe code i tried has been accepted with time and space complexity of  O(log(n))."
                    },
                    {
                        "username": "0xatul",
                        "content": "[@user2387402](/user2387402) Dude that's comment from 2015, that guy must've already moved on lol"
                    },
                    {
                        "username": "user2387402",
                        "content": "It\\'s not binary search. It is binary exploitation. Read the editorial."
                    },
                    {
                        "username": "mateenrehanbatt",
                        "content": "class Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n\\n        result = 1\\n        while n > 0:\\n            if n % 2 == 1:\\n                result *= x\\n            x *= x\\n            n //= 2\\n\\n        return result"
                    }
                ]
            },
            {
                "id": 1572534,
                "content": [
                    {
                        "username": "mrkanesir",
                        "content": "how am i supposed to NOT get stack overflow with n=2147483647 ..."
                    },
                    {
                        "username": "itsmesuni19",
                        "content": " if your solu is O(n) solu, use long long i in the loop"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "What are you doing bro, I didn\\'t get this error, try to solve in O(log N)"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "use python? "
                    },
                    {
                        "username": "19bec1397",
                        "content": "[@satyasanjay1999](/satyasanjay1999) how\\n"
                    },
                    {
                        "username": "satyasanjay1999",
                        "content": "You should optimize the solution in logn time complexity. It will also reduce the stack size, then it will also run for n = -2147483648."
                    },
                    {
                        "username": "Linearly_Independent",
                        "content": "\\n\\n\\nreturn x**n"
                    },
                    {
                        "username": "AssortedFantasy",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The point of Leetcode is interview practice.\\nWould you go to an interview, and if they ask how should you implement a fast power algorithm you give them the answer of `x**y`? The point is to test your math skills."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The first two words of the question ask you to implement pow(x, n). It's simply illogical to Implement it by calling itself."
                    },
                    {
                        "username": "Satyam_Mishra",
                        "content": "[@Miiza](/Miiza) Where this is mentioned? My code accepted at just return pow(x,n)"
                    },
                    {
                        "username": "Braderbell",
                        "content": "return pow(x, n)"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "as of  this we should know the implementation of x**n"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "is it working"
                    },
                    {
                        "username": "Miiza",
                        "content": "Only that this is using pow(x, n) in the background, which you\\'re not suppose to use."
                    },
                    {
                        "username": "henrygriffin330",
                        "content": "this is what i did"
                    },
                    {
                        "username": "yanyehe",
                        "content": "duh"
                    },
                    {
                        "username": "JainAnshul",
                        "content": "for Python, is there anything better (in terms of complexity) than this? Otherwise, this seems to be obvious."
                    },
                    {
                        "username": "olooney",
                        "content": "This is the 37th problem I\\'ve solved on the site and in the end I got a respectible 4ms solution. But honestly, It seems like its 2% algorithm, 98% fiddling with binary representations of signed integers and floating point numbers. I also note that, as of this writing, the problem has 1160 downvotes to 428 upvotes, so there\\'s certainly some shared negativity out there. \\n\\nPersonally, I didn\\'t enjoy this problem because I felt like I spent more time writing custom test cases for corner cases than I did programming. Frankly I cannot imagine getting this question in an interview and having the interviewer go, \"aha! but your solution doesn\\'t account for the case when n is -2^31 and x is exactly -1.0! There\\'s no way we\\'d hire such an incompetent programmer!\" And yet the way the acceptance tests are written, you need to nail *every* *single* corner case. Perhaps that frustration is limited to C/C++? Or there\\'s a different algorithm that more naturally accounts for these edge cases? \\n\\nWhat was your experience? Would you agree or disagree with my thesis that this is the worst problem on the site? "
                    },
                    {
                        "username": "samstafford",
                        "content": "funny, when I saw the title of this one, I initially presumed rational exponent, not integer.  I got all excited about Taylor Series with coefficient reuse.  In fact, I will try that."
                    },
                    {
                        "username": "user0291CQ",
                        "content": "I personally don\\'t like questions that have math as a related topic, because that description is vague. Let\\'s say I want to do this problem, and I don\\'t know recursion, nor do I know how to get the power of a number. I can look in the related topics section, and see that I need to know recursion, and study that, before retrying the problem.\\n\\nWhat will I see for the other part of the problem? Just a generic statement, \"Math\". And sure, this problem tells you what to do, but what about the Climbing Stairs problem? The generic \"Math\" topic tells me nothing of the type of math knowledge needed to solve the problem."
                    },
                    {
                        "username": "adlong01",
                        "content": "[@super____hot](/super____hot) I get a considerably faster solution using log."
                    },
                    {
                        "username": "imfosf0r",
                        "content": "I\\'d disagree: your complaints about the edge cases are just how this function is supposed to work, because of how math works. If you get a different answer for -2^31 than everyone else, then the function isn\\'t working right yet."
                    },
                    {
                        "username": "super____hot",
                        "content": "in python x**n is the fastest method"
                    },
                    {
                        "username": "misterabdul",
                        "content": "I\\'m a C fan & I solve this problem using C. For me this is an interesting problem that let me learn again how the basic pow function could be implemented & let me try to optimize my solution to account for every corner cases. This is such a fun exercises in C IMO."
                    },
                    {
                        "username": "tylermatchett",
                        "content": "Here is a test case made by someone who was in a bad mood\\nx=-1\\nn=2147483647"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "This was a simple one. n%2 ==1, x^n is going to be -1. Because -1 ^ even number is equal to 1  AND -1^odd number is equal to -1."
                    },
                    {
                        "username": "sylvex",
                        "content": "```\\nx =\\n2.00000\\nn =\\n-2147483648\\n```\\nWhat even is the point of this edge case???"
                    },
                    {
                        "username": "tree9",
                        "content": "[@tojoSaha](/tojoSaha)  check this out please https://leetcode.com/problems/powx-n/solutions/4086833/beats-100-log-n-solution/ it handles the above case. Basically invert x and make n positive and carry on with same logic as for positive x and n. Take long N."
                    },
                    {
                        "username": "kavyamittal1282",
                        "content": "[@m_afnan2018](/m_afnan2018)  iam doing in java and geting the same error"
                    },
                    {
                        "username": "sandevil23",
                        "content": "i noticed that they have assigned int to n and here they are passing the upper and lower limits of long int "
                    },
                    {
                        "username": "amar180N_th",
                        "content": "hey I also got the same error here"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "Use long long..."
                    },
                    {
                        "username": "ekalavya_pc",
                        "content": "[@tojoSaha](/tojoSaha) use abs"
                    },
                    {
                        "username": "issac_tirkey1",
                        "content": "[@heisenberg280](/heisenberg280) -2^31 = 2147483648 and the positive integer limits till 2147483647 i.e 2^31-1. So when n is negative and -2^31  when you multiply it with -1 to make positive it overflows so store -1*n into a temp variable of type long long and it should work. (before storing typecast it into long long)"
                    },
                    {
                        "username": "tojoSaha",
                        "content": "Were u able to find the solution to this test case?.. If so.. then please tell"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "To make sure that your algorithm is fast."
                    },
                    {
                        "username": "heisenberg280",
                        "content": "How to solve this?"
                    },
                    {
                        "username": "shadowfax_",
                        "content": "just has the onsite and the interviewer tdidn\\'t want the recursive version but wanted the fast one with no recursion. \\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "Hitro",
                        "content": "I\\'m wondering why you guys are not using builtin Math.pow() method??\\nPlease give me some insight.\\nThank you :)"
                    },
                    {
                        "username": "marcjeffs6",
                        "content": "[@barstow123](/barstow123) Is this real? I can go to FAANG and any given Sr developer will know how to recreate any built in method and explain its prime optimization?"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Anarchy-NET",
                        "content": "We were asked to implement the built -in, which is basically Math.pow();\\nSo yeah, that\\'s what we\\'re doing"
                    },
                    {
                        "username": "barstow123",
                        "content": "The idea here is that we perform our work on the shoulders of giants.\\n\\nA more senior developer should be able to recreate built ins and explain how they are optimized if they want higher pay. for example, \"compile the solution in C++ for best performance\" is a good thing to say during senior interviews."
                    },
                    {
                        "username": "otherside2",
                        "content": "My C# code returns the expected Output for the below values when run in Visual Studio, but not here in Leetcode. Where is the disconnect? Could that be the reason why this question has so many thumbs down?\\n\\n240 / 304 test cases passed.\\nStatus: Wrong Answer\\n\\nSubmitted: 0\\xA0minutes ago\\nInput: \\n8.84372\\n-5\\nOutput: \\n0.0\\nExpected: \\n2e-05"
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "make 1 condition for n<0 and return 1/ans(that you are returning)"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Nishtha_2",
                        "content": "Question is under the catogery of binary search can someone suggest me solution with binary search"
                    },
                    {
                        "username": "AshutoshPatel028",
                        "content": "[@AdityaBhate](/AdityaBhate) IT doesn\\'t exist!!!"
                    },
                    {
                        "username": "r_shweta",
                        "content": "same\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "To implement this problem in a naive way, we would need to multiply x with x for n times, as the n is too large, code would take ages to complete. Idea here is that once we find a square of x, we can multiply square of x with square of x to get x^4, we can again multiply x^4 with x^4 to get x^8 and so on and so forth.\\nx^1 * x^1 = x^(1+1) = x^2\\nx^2 * x^2 = x^(2+2) = x^4\\nx^4 * x^4 = x^(4+4) = x^8\\n.....\\nBy this way, we can reduce the time complexity from O(n) to O(log n), This problem comes under binary search as we are squaring(binary) each answer."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "AnudeepReddyBondugula",
                        "content": "[@chickooo](/chickooo)  Actually it follows the concept of binary search, if you want to calculate for n = 4 you first calculate for  n = 2 and before calculating n = 2, you calculate n =1, so that you can obtain the solution in log(n) instead of calculating for 4 times it will take O(N) "
                    },
                    {
                        "username": "chickooo",
                        "content": "I don\\'t know why it was showing under the tag **binary search**, but the tags are now updated to **Math** and **Recursion**"
                    },
                    {
                        "username": "Will",
                        "content": "Please show me the code if any one can solve this using binary search. \\nThanks a lot!"
                    },
                    {
                        "username": "shivagama02",
                        "content": "The code for the same using binary search can be done in javascript. The code for the same is here: \\n\\nvar myPow = function(x, n) {\\n  if (n === 0) return 1;\\n  if (n > 0) return pow(x, n);\\n  if (n < 0) return 1 / pow(x, -n);\\n};\\n\\nvar pow = function (x, n) {\\n  if (n === 1) return x;\\n  var num = pow(x, Math.floor(n / 2));\\n  if (n % 2 === 0) {\\n    return num * num;\\n  } else {\\n    return x * num * num;\\n  }\\n};\\n\\n\\nThe code i tried has been accepted with time and space complexity of  O(log(n))."
                    },
                    {
                        "username": "0xatul",
                        "content": "[@user2387402](/user2387402) Dude that's comment from 2015, that guy must've already moved on lol"
                    },
                    {
                        "username": "user2387402",
                        "content": "It\\'s not binary search. It is binary exploitation. Read the editorial."
                    },
                    {
                        "username": "mateenrehanbatt",
                        "content": "class Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n\\n        result = 1\\n        while n > 0:\\n            if n % 2 == 1:\\n                result *= x\\n            x *= x\\n            n //= 2\\n\\n        return result"
                    }
                ]
            },
            {
                "id": 1572134,
                "content": [
                    {
                        "username": "mrkanesir",
                        "content": "how am i supposed to NOT get stack overflow with n=2147483647 ..."
                    },
                    {
                        "username": "itsmesuni19",
                        "content": " if your solu is O(n) solu, use long long i in the loop"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "What are you doing bro, I didn\\'t get this error, try to solve in O(log N)"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "use python? "
                    },
                    {
                        "username": "19bec1397",
                        "content": "[@satyasanjay1999](/satyasanjay1999) how\\n"
                    },
                    {
                        "username": "satyasanjay1999",
                        "content": "You should optimize the solution in logn time complexity. It will also reduce the stack size, then it will also run for n = -2147483648."
                    },
                    {
                        "username": "Linearly_Independent",
                        "content": "\\n\\n\\nreturn x**n"
                    },
                    {
                        "username": "AssortedFantasy",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The point of Leetcode is interview practice.\\nWould you go to an interview, and if they ask how should you implement a fast power algorithm you give them the answer of `x**y`? The point is to test your math skills."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The first two words of the question ask you to implement pow(x, n). It's simply illogical to Implement it by calling itself."
                    },
                    {
                        "username": "Satyam_Mishra",
                        "content": "[@Miiza](/Miiza) Where this is mentioned? My code accepted at just return pow(x,n)"
                    },
                    {
                        "username": "Braderbell",
                        "content": "return pow(x, n)"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "as of  this we should know the implementation of x**n"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "is it working"
                    },
                    {
                        "username": "Miiza",
                        "content": "Only that this is using pow(x, n) in the background, which you\\'re not suppose to use."
                    },
                    {
                        "username": "henrygriffin330",
                        "content": "this is what i did"
                    },
                    {
                        "username": "yanyehe",
                        "content": "duh"
                    },
                    {
                        "username": "JainAnshul",
                        "content": "for Python, is there anything better (in terms of complexity) than this? Otherwise, this seems to be obvious."
                    },
                    {
                        "username": "olooney",
                        "content": "This is the 37th problem I\\'ve solved on the site and in the end I got a respectible 4ms solution. But honestly, It seems like its 2% algorithm, 98% fiddling with binary representations of signed integers and floating point numbers. I also note that, as of this writing, the problem has 1160 downvotes to 428 upvotes, so there\\'s certainly some shared negativity out there. \\n\\nPersonally, I didn\\'t enjoy this problem because I felt like I spent more time writing custom test cases for corner cases than I did programming. Frankly I cannot imagine getting this question in an interview and having the interviewer go, \"aha! but your solution doesn\\'t account for the case when n is -2^31 and x is exactly -1.0! There\\'s no way we\\'d hire such an incompetent programmer!\" And yet the way the acceptance tests are written, you need to nail *every* *single* corner case. Perhaps that frustration is limited to C/C++? Or there\\'s a different algorithm that more naturally accounts for these edge cases? \\n\\nWhat was your experience? Would you agree or disagree with my thesis that this is the worst problem on the site? "
                    },
                    {
                        "username": "samstafford",
                        "content": "funny, when I saw the title of this one, I initially presumed rational exponent, not integer.  I got all excited about Taylor Series with coefficient reuse.  In fact, I will try that."
                    },
                    {
                        "username": "user0291CQ",
                        "content": "I personally don\\'t like questions that have math as a related topic, because that description is vague. Let\\'s say I want to do this problem, and I don\\'t know recursion, nor do I know how to get the power of a number. I can look in the related topics section, and see that I need to know recursion, and study that, before retrying the problem.\\n\\nWhat will I see for the other part of the problem? Just a generic statement, \"Math\". And sure, this problem tells you what to do, but what about the Climbing Stairs problem? The generic \"Math\" topic tells me nothing of the type of math knowledge needed to solve the problem."
                    },
                    {
                        "username": "adlong01",
                        "content": "[@super____hot](/super____hot) I get a considerably faster solution using log."
                    },
                    {
                        "username": "imfosf0r",
                        "content": "I\\'d disagree: your complaints about the edge cases are just how this function is supposed to work, because of how math works. If you get a different answer for -2^31 than everyone else, then the function isn\\'t working right yet."
                    },
                    {
                        "username": "super____hot",
                        "content": "in python x**n is the fastest method"
                    },
                    {
                        "username": "misterabdul",
                        "content": "I\\'m a C fan & I solve this problem using C. For me this is an interesting problem that let me learn again how the basic pow function could be implemented & let me try to optimize my solution to account for every corner cases. This is such a fun exercises in C IMO."
                    },
                    {
                        "username": "tylermatchett",
                        "content": "Here is a test case made by someone who was in a bad mood\\nx=-1\\nn=2147483647"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "This was a simple one. n%2 ==1, x^n is going to be -1. Because -1 ^ even number is equal to 1  AND -1^odd number is equal to -1."
                    },
                    {
                        "username": "sylvex",
                        "content": "```\\nx =\\n2.00000\\nn =\\n-2147483648\\n```\\nWhat even is the point of this edge case???"
                    },
                    {
                        "username": "tree9",
                        "content": "[@tojoSaha](/tojoSaha)  check this out please https://leetcode.com/problems/powx-n/solutions/4086833/beats-100-log-n-solution/ it handles the above case. Basically invert x and make n positive and carry on with same logic as for positive x and n. Take long N."
                    },
                    {
                        "username": "kavyamittal1282",
                        "content": "[@m_afnan2018](/m_afnan2018)  iam doing in java and geting the same error"
                    },
                    {
                        "username": "sandevil23",
                        "content": "i noticed that they have assigned int to n and here they are passing the upper and lower limits of long int "
                    },
                    {
                        "username": "amar180N_th",
                        "content": "hey I also got the same error here"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "Use long long..."
                    },
                    {
                        "username": "ekalavya_pc",
                        "content": "[@tojoSaha](/tojoSaha) use abs"
                    },
                    {
                        "username": "issac_tirkey1",
                        "content": "[@heisenberg280](/heisenberg280) -2^31 = 2147483648 and the positive integer limits till 2147483647 i.e 2^31-1. So when n is negative and -2^31  when you multiply it with -1 to make positive it overflows so store -1*n into a temp variable of type long long and it should work. (before storing typecast it into long long)"
                    },
                    {
                        "username": "tojoSaha",
                        "content": "Were u able to find the solution to this test case?.. If so.. then please tell"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "To make sure that your algorithm is fast."
                    },
                    {
                        "username": "heisenberg280",
                        "content": "How to solve this?"
                    },
                    {
                        "username": "shadowfax_",
                        "content": "just has the onsite and the interviewer tdidn\\'t want the recursive version but wanted the fast one with no recursion. \\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "Hitro",
                        "content": "I\\'m wondering why you guys are not using builtin Math.pow() method??\\nPlease give me some insight.\\nThank you :)"
                    },
                    {
                        "username": "marcjeffs6",
                        "content": "[@barstow123](/barstow123) Is this real? I can go to FAANG and any given Sr developer will know how to recreate any built in method and explain its prime optimization?"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Anarchy-NET",
                        "content": "We were asked to implement the built -in, which is basically Math.pow();\\nSo yeah, that\\'s what we\\'re doing"
                    },
                    {
                        "username": "barstow123",
                        "content": "The idea here is that we perform our work on the shoulders of giants.\\n\\nA more senior developer should be able to recreate built ins and explain how they are optimized if they want higher pay. for example, \"compile the solution in C++ for best performance\" is a good thing to say during senior interviews."
                    },
                    {
                        "username": "otherside2",
                        "content": "My C# code returns the expected Output for the below values when run in Visual Studio, but not here in Leetcode. Where is the disconnect? Could that be the reason why this question has so many thumbs down?\\n\\n240 / 304 test cases passed.\\nStatus: Wrong Answer\\n\\nSubmitted: 0\\xA0minutes ago\\nInput: \\n8.84372\\n-5\\nOutput: \\n0.0\\nExpected: \\n2e-05"
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "make 1 condition for n<0 and return 1/ans(that you are returning)"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Nishtha_2",
                        "content": "Question is under the catogery of binary search can someone suggest me solution with binary search"
                    },
                    {
                        "username": "AshutoshPatel028",
                        "content": "[@AdityaBhate](/AdityaBhate) IT doesn\\'t exist!!!"
                    },
                    {
                        "username": "r_shweta",
                        "content": "same\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "To implement this problem in a naive way, we would need to multiply x with x for n times, as the n is too large, code would take ages to complete. Idea here is that once we find a square of x, we can multiply square of x with square of x to get x^4, we can again multiply x^4 with x^4 to get x^8 and so on and so forth.\\nx^1 * x^1 = x^(1+1) = x^2\\nx^2 * x^2 = x^(2+2) = x^4\\nx^4 * x^4 = x^(4+4) = x^8\\n.....\\nBy this way, we can reduce the time complexity from O(n) to O(log n), This problem comes under binary search as we are squaring(binary) each answer."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "AnudeepReddyBondugula",
                        "content": "[@chickooo](/chickooo)  Actually it follows the concept of binary search, if you want to calculate for n = 4 you first calculate for  n = 2 and before calculating n = 2, you calculate n =1, so that you can obtain the solution in log(n) instead of calculating for 4 times it will take O(N) "
                    },
                    {
                        "username": "chickooo",
                        "content": "I don\\'t know why it was showing under the tag **binary search**, but the tags are now updated to **Math** and **Recursion**"
                    },
                    {
                        "username": "Will",
                        "content": "Please show me the code if any one can solve this using binary search. \\nThanks a lot!"
                    },
                    {
                        "username": "shivagama02",
                        "content": "The code for the same using binary search can be done in javascript. The code for the same is here: \\n\\nvar myPow = function(x, n) {\\n  if (n === 0) return 1;\\n  if (n > 0) return pow(x, n);\\n  if (n < 0) return 1 / pow(x, -n);\\n};\\n\\nvar pow = function (x, n) {\\n  if (n === 1) return x;\\n  var num = pow(x, Math.floor(n / 2));\\n  if (n % 2 === 0) {\\n    return num * num;\\n  } else {\\n    return x * num * num;\\n  }\\n};\\n\\n\\nThe code i tried has been accepted with time and space complexity of  O(log(n))."
                    },
                    {
                        "username": "0xatul",
                        "content": "[@user2387402](/user2387402) Dude that's comment from 2015, that guy must've already moved on lol"
                    },
                    {
                        "username": "user2387402",
                        "content": "It\\'s not binary search. It is binary exploitation. Read the editorial."
                    },
                    {
                        "username": "mateenrehanbatt",
                        "content": "class Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n\\n        result = 1\\n        while n > 0:\\n            if n % 2 == 1:\\n                result *= x\\n            x *= x\\n            n //= 2\\n\\n        return result"
                    }
                ]
            },
            {
                "id": 1565602,
                "content": [
                    {
                        "username": "mrkanesir",
                        "content": "how am i supposed to NOT get stack overflow with n=2147483647 ..."
                    },
                    {
                        "username": "itsmesuni19",
                        "content": " if your solu is O(n) solu, use long long i in the loop"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "What are you doing bro, I didn\\'t get this error, try to solve in O(log N)"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "use python? "
                    },
                    {
                        "username": "19bec1397",
                        "content": "[@satyasanjay1999](/satyasanjay1999) how\\n"
                    },
                    {
                        "username": "satyasanjay1999",
                        "content": "You should optimize the solution in logn time complexity. It will also reduce the stack size, then it will also run for n = -2147483648."
                    },
                    {
                        "username": "Linearly_Independent",
                        "content": "\\n\\n\\nreturn x**n"
                    },
                    {
                        "username": "AssortedFantasy",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The point of Leetcode is interview practice.\\nWould you go to an interview, and if they ask how should you implement a fast power algorithm you give them the answer of `x**y`? The point is to test your math skills."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The first two words of the question ask you to implement pow(x, n). It's simply illogical to Implement it by calling itself."
                    },
                    {
                        "username": "Satyam_Mishra",
                        "content": "[@Miiza](/Miiza) Where this is mentioned? My code accepted at just return pow(x,n)"
                    },
                    {
                        "username": "Braderbell",
                        "content": "return pow(x, n)"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "as of  this we should know the implementation of x**n"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "is it working"
                    },
                    {
                        "username": "Miiza",
                        "content": "Only that this is using pow(x, n) in the background, which you\\'re not suppose to use."
                    },
                    {
                        "username": "henrygriffin330",
                        "content": "this is what i did"
                    },
                    {
                        "username": "yanyehe",
                        "content": "duh"
                    },
                    {
                        "username": "JainAnshul",
                        "content": "for Python, is there anything better (in terms of complexity) than this? Otherwise, this seems to be obvious."
                    },
                    {
                        "username": "olooney",
                        "content": "This is the 37th problem I\\'ve solved on the site and in the end I got a respectible 4ms solution. But honestly, It seems like its 2% algorithm, 98% fiddling with binary representations of signed integers and floating point numbers. I also note that, as of this writing, the problem has 1160 downvotes to 428 upvotes, so there\\'s certainly some shared negativity out there. \\n\\nPersonally, I didn\\'t enjoy this problem because I felt like I spent more time writing custom test cases for corner cases than I did programming. Frankly I cannot imagine getting this question in an interview and having the interviewer go, \"aha! but your solution doesn\\'t account for the case when n is -2^31 and x is exactly -1.0! There\\'s no way we\\'d hire such an incompetent programmer!\" And yet the way the acceptance tests are written, you need to nail *every* *single* corner case. Perhaps that frustration is limited to C/C++? Or there\\'s a different algorithm that more naturally accounts for these edge cases? \\n\\nWhat was your experience? Would you agree or disagree with my thesis that this is the worst problem on the site? "
                    },
                    {
                        "username": "samstafford",
                        "content": "funny, when I saw the title of this one, I initially presumed rational exponent, not integer.  I got all excited about Taylor Series with coefficient reuse.  In fact, I will try that."
                    },
                    {
                        "username": "user0291CQ",
                        "content": "I personally don\\'t like questions that have math as a related topic, because that description is vague. Let\\'s say I want to do this problem, and I don\\'t know recursion, nor do I know how to get the power of a number. I can look in the related topics section, and see that I need to know recursion, and study that, before retrying the problem.\\n\\nWhat will I see for the other part of the problem? Just a generic statement, \"Math\". And sure, this problem tells you what to do, but what about the Climbing Stairs problem? The generic \"Math\" topic tells me nothing of the type of math knowledge needed to solve the problem."
                    },
                    {
                        "username": "adlong01",
                        "content": "[@super____hot](/super____hot) I get a considerably faster solution using log."
                    },
                    {
                        "username": "imfosf0r",
                        "content": "I\\'d disagree: your complaints about the edge cases are just how this function is supposed to work, because of how math works. If you get a different answer for -2^31 than everyone else, then the function isn\\'t working right yet."
                    },
                    {
                        "username": "super____hot",
                        "content": "in python x**n is the fastest method"
                    },
                    {
                        "username": "misterabdul",
                        "content": "I\\'m a C fan & I solve this problem using C. For me this is an interesting problem that let me learn again how the basic pow function could be implemented & let me try to optimize my solution to account for every corner cases. This is such a fun exercises in C IMO."
                    },
                    {
                        "username": "tylermatchett",
                        "content": "Here is a test case made by someone who was in a bad mood\\nx=-1\\nn=2147483647"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "This was a simple one. n%2 ==1, x^n is going to be -1. Because -1 ^ even number is equal to 1  AND -1^odd number is equal to -1."
                    },
                    {
                        "username": "sylvex",
                        "content": "```\\nx =\\n2.00000\\nn =\\n-2147483648\\n```\\nWhat even is the point of this edge case???"
                    },
                    {
                        "username": "tree9",
                        "content": "[@tojoSaha](/tojoSaha)  check this out please https://leetcode.com/problems/powx-n/solutions/4086833/beats-100-log-n-solution/ it handles the above case. Basically invert x and make n positive and carry on with same logic as for positive x and n. Take long N."
                    },
                    {
                        "username": "kavyamittal1282",
                        "content": "[@m_afnan2018](/m_afnan2018)  iam doing in java and geting the same error"
                    },
                    {
                        "username": "sandevil23",
                        "content": "i noticed that they have assigned int to n and here they are passing the upper and lower limits of long int "
                    },
                    {
                        "username": "amar180N_th",
                        "content": "hey I also got the same error here"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "Use long long..."
                    },
                    {
                        "username": "ekalavya_pc",
                        "content": "[@tojoSaha](/tojoSaha) use abs"
                    },
                    {
                        "username": "issac_tirkey1",
                        "content": "[@heisenberg280](/heisenberg280) -2^31 = 2147483648 and the positive integer limits till 2147483647 i.e 2^31-1. So when n is negative and -2^31  when you multiply it with -1 to make positive it overflows so store -1*n into a temp variable of type long long and it should work. (before storing typecast it into long long)"
                    },
                    {
                        "username": "tojoSaha",
                        "content": "Were u able to find the solution to this test case?.. If so.. then please tell"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "To make sure that your algorithm is fast."
                    },
                    {
                        "username": "heisenberg280",
                        "content": "How to solve this?"
                    },
                    {
                        "username": "shadowfax_",
                        "content": "just has the onsite and the interviewer tdidn\\'t want the recursive version but wanted the fast one with no recursion. \\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "Hitro",
                        "content": "I\\'m wondering why you guys are not using builtin Math.pow() method??\\nPlease give me some insight.\\nThank you :)"
                    },
                    {
                        "username": "marcjeffs6",
                        "content": "[@barstow123](/barstow123) Is this real? I can go to FAANG and any given Sr developer will know how to recreate any built in method and explain its prime optimization?"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Anarchy-NET",
                        "content": "We were asked to implement the built -in, which is basically Math.pow();\\nSo yeah, that\\'s what we\\'re doing"
                    },
                    {
                        "username": "barstow123",
                        "content": "The idea here is that we perform our work on the shoulders of giants.\\n\\nA more senior developer should be able to recreate built ins and explain how they are optimized if they want higher pay. for example, \"compile the solution in C++ for best performance\" is a good thing to say during senior interviews."
                    },
                    {
                        "username": "otherside2",
                        "content": "My C# code returns the expected Output for the below values when run in Visual Studio, but not here in Leetcode. Where is the disconnect? Could that be the reason why this question has so many thumbs down?\\n\\n240 / 304 test cases passed.\\nStatus: Wrong Answer\\n\\nSubmitted: 0\\xA0minutes ago\\nInput: \\n8.84372\\n-5\\nOutput: \\n0.0\\nExpected: \\n2e-05"
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "make 1 condition for n<0 and return 1/ans(that you are returning)"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Nishtha_2",
                        "content": "Question is under the catogery of binary search can someone suggest me solution with binary search"
                    },
                    {
                        "username": "AshutoshPatel028",
                        "content": "[@AdityaBhate](/AdityaBhate) IT doesn\\'t exist!!!"
                    },
                    {
                        "username": "r_shweta",
                        "content": "same\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "To implement this problem in a naive way, we would need to multiply x with x for n times, as the n is too large, code would take ages to complete. Idea here is that once we find a square of x, we can multiply square of x with square of x to get x^4, we can again multiply x^4 with x^4 to get x^8 and so on and so forth.\\nx^1 * x^1 = x^(1+1) = x^2\\nx^2 * x^2 = x^(2+2) = x^4\\nx^4 * x^4 = x^(4+4) = x^8\\n.....\\nBy this way, we can reduce the time complexity from O(n) to O(log n), This problem comes under binary search as we are squaring(binary) each answer."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "AnudeepReddyBondugula",
                        "content": "[@chickooo](/chickooo)  Actually it follows the concept of binary search, if you want to calculate for n = 4 you first calculate for  n = 2 and before calculating n = 2, you calculate n =1, so that you can obtain the solution in log(n) instead of calculating for 4 times it will take O(N) "
                    },
                    {
                        "username": "chickooo",
                        "content": "I don\\'t know why it was showing under the tag **binary search**, but the tags are now updated to **Math** and **Recursion**"
                    },
                    {
                        "username": "Will",
                        "content": "Please show me the code if any one can solve this using binary search. \\nThanks a lot!"
                    },
                    {
                        "username": "shivagama02",
                        "content": "The code for the same using binary search can be done in javascript. The code for the same is here: \\n\\nvar myPow = function(x, n) {\\n  if (n === 0) return 1;\\n  if (n > 0) return pow(x, n);\\n  if (n < 0) return 1 / pow(x, -n);\\n};\\n\\nvar pow = function (x, n) {\\n  if (n === 1) return x;\\n  var num = pow(x, Math.floor(n / 2));\\n  if (n % 2 === 0) {\\n    return num * num;\\n  } else {\\n    return x * num * num;\\n  }\\n};\\n\\n\\nThe code i tried has been accepted with time and space complexity of  O(log(n))."
                    },
                    {
                        "username": "0xatul",
                        "content": "[@user2387402](/user2387402) Dude that's comment from 2015, that guy must've already moved on lol"
                    },
                    {
                        "username": "user2387402",
                        "content": "It\\'s not binary search. It is binary exploitation. Read the editorial."
                    },
                    {
                        "username": "mateenrehanbatt",
                        "content": "class Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n\\n        result = 1\\n        while n > 0:\\n            if n % 2 == 1:\\n                result *= x\\n            x *= x\\n            n //= 2\\n\\n        return result"
                    }
                ]
            },
            {
                "id": 1567826,
                "content": [
                    {
                        "username": "mrkanesir",
                        "content": "how am i supposed to NOT get stack overflow with n=2147483647 ..."
                    },
                    {
                        "username": "itsmesuni19",
                        "content": " if your solu is O(n) solu, use long long i in the loop"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "What are you doing bro, I didn\\'t get this error, try to solve in O(log N)"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "use python? "
                    },
                    {
                        "username": "19bec1397",
                        "content": "[@satyasanjay1999](/satyasanjay1999) how\\n"
                    },
                    {
                        "username": "satyasanjay1999",
                        "content": "You should optimize the solution in logn time complexity. It will also reduce the stack size, then it will also run for n = -2147483648."
                    },
                    {
                        "username": "Linearly_Independent",
                        "content": "\\n\\n\\nreturn x**n"
                    },
                    {
                        "username": "AssortedFantasy",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The point of Leetcode is interview practice.\\nWould you go to an interview, and if they ask how should you implement a fast power algorithm you give them the answer of `x**y`? The point is to test your math skills."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@Satyam_Mishra](/Satyam_Mishra) The first two words of the question ask you to implement pow(x, n). It's simply illogical to Implement it by calling itself."
                    },
                    {
                        "username": "Satyam_Mishra",
                        "content": "[@Miiza](/Miiza) Where this is mentioned? My code accepted at just return pow(x,n)"
                    },
                    {
                        "username": "Braderbell",
                        "content": "return pow(x, n)"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "as of  this we should know the implementation of x**n"
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "is it working"
                    },
                    {
                        "username": "Miiza",
                        "content": "Only that this is using pow(x, n) in the background, which you\\'re not suppose to use."
                    },
                    {
                        "username": "henrygriffin330",
                        "content": "this is what i did"
                    },
                    {
                        "username": "yanyehe",
                        "content": "duh"
                    },
                    {
                        "username": "JainAnshul",
                        "content": "for Python, is there anything better (in terms of complexity) than this? Otherwise, this seems to be obvious."
                    },
                    {
                        "username": "olooney",
                        "content": "This is the 37th problem I\\'ve solved on the site and in the end I got a respectible 4ms solution. But honestly, It seems like its 2% algorithm, 98% fiddling with binary representations of signed integers and floating point numbers. I also note that, as of this writing, the problem has 1160 downvotes to 428 upvotes, so there\\'s certainly some shared negativity out there. \\n\\nPersonally, I didn\\'t enjoy this problem because I felt like I spent more time writing custom test cases for corner cases than I did programming. Frankly I cannot imagine getting this question in an interview and having the interviewer go, \"aha! but your solution doesn\\'t account for the case when n is -2^31 and x is exactly -1.0! There\\'s no way we\\'d hire such an incompetent programmer!\" And yet the way the acceptance tests are written, you need to nail *every* *single* corner case. Perhaps that frustration is limited to C/C++? Or there\\'s a different algorithm that more naturally accounts for these edge cases? \\n\\nWhat was your experience? Would you agree or disagree with my thesis that this is the worst problem on the site? "
                    },
                    {
                        "username": "samstafford",
                        "content": "funny, when I saw the title of this one, I initially presumed rational exponent, not integer.  I got all excited about Taylor Series with coefficient reuse.  In fact, I will try that."
                    },
                    {
                        "username": "user0291CQ",
                        "content": "I personally don\\'t like questions that have math as a related topic, because that description is vague. Let\\'s say I want to do this problem, and I don\\'t know recursion, nor do I know how to get the power of a number. I can look in the related topics section, and see that I need to know recursion, and study that, before retrying the problem.\\n\\nWhat will I see for the other part of the problem? Just a generic statement, \"Math\". And sure, this problem tells you what to do, but what about the Climbing Stairs problem? The generic \"Math\" topic tells me nothing of the type of math knowledge needed to solve the problem."
                    },
                    {
                        "username": "adlong01",
                        "content": "[@super____hot](/super____hot) I get a considerably faster solution using log."
                    },
                    {
                        "username": "imfosf0r",
                        "content": "I\\'d disagree: your complaints about the edge cases are just how this function is supposed to work, because of how math works. If you get a different answer for -2^31 than everyone else, then the function isn\\'t working right yet."
                    },
                    {
                        "username": "super____hot",
                        "content": "in python x**n is the fastest method"
                    },
                    {
                        "username": "misterabdul",
                        "content": "I\\'m a C fan & I solve this problem using C. For me this is an interesting problem that let me learn again how the basic pow function could be implemented & let me try to optimize my solution to account for every corner cases. This is such a fun exercises in C IMO."
                    },
                    {
                        "username": "tylermatchett",
                        "content": "Here is a test case made by someone who was in a bad mood\\nx=-1\\nn=2147483647"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "This was a simple one. n%2 ==1, x^n is going to be -1. Because -1 ^ even number is equal to 1  AND -1^odd number is equal to -1."
                    },
                    {
                        "username": "sylvex",
                        "content": "```\\nx =\\n2.00000\\nn =\\n-2147483648\\n```\\nWhat even is the point of this edge case???"
                    },
                    {
                        "username": "tree9",
                        "content": "[@tojoSaha](/tojoSaha)  check this out please https://leetcode.com/problems/powx-n/solutions/4086833/beats-100-log-n-solution/ it handles the above case. Basically invert x and make n positive and carry on with same logic as for positive x and n. Take long N."
                    },
                    {
                        "username": "kavyamittal1282",
                        "content": "[@m_afnan2018](/m_afnan2018)  iam doing in java and geting the same error"
                    },
                    {
                        "username": "sandevil23",
                        "content": "i noticed that they have assigned int to n and here they are passing the upper and lower limits of long int "
                    },
                    {
                        "username": "amar180N_th",
                        "content": "hey I also got the same error here"
                    },
                    {
                        "username": "m_afnan2018",
                        "content": "Use long long..."
                    },
                    {
                        "username": "ekalavya_pc",
                        "content": "[@tojoSaha](/tojoSaha) use abs"
                    },
                    {
                        "username": "issac_tirkey1",
                        "content": "[@heisenberg280](/heisenberg280) -2^31 = 2147483648 and the positive integer limits till 2147483647 i.e 2^31-1. So when n is negative and -2^31  when you multiply it with -1 to make positive it overflows so store -1*n into a temp variable of type long long and it should work. (before storing typecast it into long long)"
                    },
                    {
                        "username": "tojoSaha",
                        "content": "Were u able to find the solution to this test case?.. If so.. then please tell"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "To make sure that your algorithm is fast."
                    },
                    {
                        "username": "heisenberg280",
                        "content": "How to solve this?"
                    },
                    {
                        "username": "shadowfax_",
                        "content": "just has the onsite and the interviewer tdidn\\'t want the recursive version but wanted the fast one with no recursion. \\n\\n"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "Hitro",
                        "content": "I\\'m wondering why you guys are not using builtin Math.pow() method??\\nPlease give me some insight.\\nThank you :)"
                    },
                    {
                        "username": "marcjeffs6",
                        "content": "[@barstow123](/barstow123) Is this real? I can go to FAANG and any given Sr developer will know how to recreate any built in method and explain its prime optimization?"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Anarchy-NET",
                        "content": "We were asked to implement the built -in, which is basically Math.pow();\\nSo yeah, that\\'s what we\\'re doing"
                    },
                    {
                        "username": "barstow123",
                        "content": "The idea here is that we perform our work on the shoulders of giants.\\n\\nA more senior developer should be able to recreate built ins and explain how they are optimized if they want higher pay. for example, \"compile the solution in C++ for best performance\" is a good thing to say during senior interviews."
                    },
                    {
                        "username": "otherside2",
                        "content": "My C# code returns the expected Output for the below values when run in Visual Studio, but not here in Leetcode. Where is the disconnect? Could that be the reason why this question has so many thumbs down?\\n\\n240 / 304 test cases passed.\\nStatus: Wrong Answer\\n\\nSubmitted: 0\\xA0minutes ago\\nInput: \\n8.84372\\n-5\\nOutput: \\n0.0\\nExpected: \\n2e-05"
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "make 1 condition for n<0 and return 1/ans(that you are returning)"
                    },
                    {
                        "username": "201132",
                        "content": "https://youtu.be/-mNn11iRZ5k\\n"
                    },
                    {
                        "username": "Nishtha_2",
                        "content": "Question is under the catogery of binary search can someone suggest me solution with binary search"
                    },
                    {
                        "username": "AshutoshPatel028",
                        "content": "[@AdityaBhate](/AdityaBhate) IT doesn\\'t exist!!!"
                    },
                    {
                        "username": "r_shweta",
                        "content": "same\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "To implement this problem in a naive way, we would need to multiply x with x for n times, as the n is too large, code would take ages to complete. Idea here is that once we find a square of x, we can multiply square of x with square of x to get x^4, we can again multiply x^4 with x^4 to get x^8 and so on and so forth.\\nx^1 * x^1 = x^(1+1) = x^2\\nx^2 * x^2 = x^(2+2) = x^4\\nx^4 * x^4 = x^(4+4) = x^8\\n.....\\nBy this way, we can reduce the time complexity from O(n) to O(log n), This problem comes under binary search as we are squaring(binary) each answer."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "AnudeepReddyBondugula",
                        "content": "[@chickooo](/chickooo)  Actually it follows the concept of binary search, if you want to calculate for n = 4 you first calculate for  n = 2 and before calculating n = 2, you calculate n =1, so that you can obtain the solution in log(n) instead of calculating for 4 times it will take O(N) "
                    },
                    {
                        "username": "chickooo",
                        "content": "I don\\'t know why it was showing under the tag **binary search**, but the tags are now updated to **Math** and **Recursion**"
                    },
                    {
                        "username": "Will",
                        "content": "Please show me the code if any one can solve this using binary search. \\nThanks a lot!"
                    },
                    {
                        "username": "shivagama02",
                        "content": "The code for the same using binary search can be done in javascript. The code for the same is here: \\n\\nvar myPow = function(x, n) {\\n  if (n === 0) return 1;\\n  if (n > 0) return pow(x, n);\\n  if (n < 0) return 1 / pow(x, -n);\\n};\\n\\nvar pow = function (x, n) {\\n  if (n === 1) return x;\\n  var num = pow(x, Math.floor(n / 2));\\n  if (n % 2 === 0) {\\n    return num * num;\\n  } else {\\n    return x * num * num;\\n  }\\n};\\n\\n\\nThe code i tried has been accepted with time and space complexity of  O(log(n))."
                    },
                    {
                        "username": "0xatul",
                        "content": "[@user2387402](/user2387402) Dude that's comment from 2015, that guy must've already moved on lol"
                    },
                    {
                        "username": "user2387402",
                        "content": "It\\'s not binary search. It is binary exploitation. Read the editorial."
                    },
                    {
                        "username": "mateenrehanbatt",
                        "content": "class Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n < 0:\\n            x = 1 / x\\n            n = -n\\n\\n        result = 1\\n        while n > 0:\\n            if n % 2 == 1:\\n                result *= x\\n            x *= x\\n            n //= 2\\n\\n        return result"
                    }
                ]
            },
            {
                "id": 1863488,
                "content": [
                    {
                        "username": "natitati",
                        "content": "Is there something broken about testcase 305?"
                    },
                    {
                        "username": "Shristi_uniyal",
                        "content": "return Double.parseDouble(String.format(\"%.5f\",Math.pow(x,n)));"
                    },
                    {
                        "username": "fantazer",
                        "content": "There is something abnormal. \\n\\nTime Limit Exceeded ------ 305 / 305 testcases passed ???\\nLast Executed Input\\nx = \\n\\nLiterally, x = nothing there, empty space. \\nHow is that possible? \\n \\n`double myPow(double x, int n){\\n\\n    if (x==1.0) return 1;\\n    if (x==-1){\\n        if (n%2 == 0) return 1.0;\\n        else return -1.0;\\n    }\\n    if (x>1.0 && n<-2147483647) return 0;\\n    double res = 1;\\n    int t;\\n    if (n>=0) t=n;\\n    else t=n*(-1);\\n    if (t>=0){\\n        while(t--){\\n            res*=x; \\n        }\\n    }\\n    if (n>=0)\\n    return res;\\n    return 1/res;\\n}`"
                    },
                    {
                        "username": "superplane",
                        "content": "I have done several Leetcode problems with python. In general I feel that using python, iterative solutions are generally faster than recursive ones. For some problems, recursive solutions will exceed time limit, while iterative ones will not. Does anyone have similar feeling? Is it generally true for python?"
                    },
                    {
                        "username": "the-iter8",
                        "content": "[@Dabboiiii](/Dabboiiii) Time + space"
                    },
                    {
                        "username": "Dabboiiii",
                        "content": "recursive solutions always take more time than iterative. it\\'s one of their downsides"
                    },
                    {
                        "username": "anwendeng",
                        "content": "Exponentiation can use its binary expression to compute! \n# If you want to change sign for n, be careful! When n=-2^31, it would lead to a overflow."
                    },
                    {
                        "username": "Arpit_001",
                        "content": "Stucking at a high on weed test case\\nx= 0.000001\\nn=-2147483647 \\nhow to not get StackOverFlowError"
                    },
                    {
                        "username": "breathermachine",
                        "content": "Use long instead of int"
                    },
                    {
                        "username": "yuangaonyc",
                        "content": "Couldn\\'t pass the test case where $x =  0.999999999 and $n = -2147483648.\\nIf I var_export($x), it is 1.00000. Am I missing something or is this an issue with how leetcode runs these test cases for php?"
                    },
                    {
                        "username": "Shaybra",
                        "content": "your code should check for the maxes for the power, and then return 0 or inf"
                    },
                    {
                        "username": "TibetSoap",
                        "content": "Happening the same using C# and C++. This is really ridiculous. "
                    },
                    {
                        "username": "soumyajit_0",
                        "content": "return pow(x,n);\\n\\nBeats 100% of the Solution :) \\nI have successfully unlocked my clown outfit."
                    },
                    {
                        "username": "justsolveitlmao",
                        "content": "lmao, thanks for the laugh"
                    },
                    {
                        "username": "szm9119",
                        "content": "divide by zero test case not considered"
                    },
                    {
                        "username": "grovre",
                        "content": "Leetcode\\'s got some balls making this one the daily"
                    }
                ]
            },
            {
                "id": 1573433,
                "content": [
                    {
                        "username": "natitati",
                        "content": "Is there something broken about testcase 305?"
                    },
                    {
                        "username": "Shristi_uniyal",
                        "content": "return Double.parseDouble(String.format(\"%.5f\",Math.pow(x,n)));"
                    },
                    {
                        "username": "fantazer",
                        "content": "There is something abnormal. \\n\\nTime Limit Exceeded ------ 305 / 305 testcases passed ???\\nLast Executed Input\\nx = \\n\\nLiterally, x = nothing there, empty space. \\nHow is that possible? \\n \\n`double myPow(double x, int n){\\n\\n    if (x==1.0) return 1;\\n    if (x==-1){\\n        if (n%2 == 0) return 1.0;\\n        else return -1.0;\\n    }\\n    if (x>1.0 && n<-2147483647) return 0;\\n    double res = 1;\\n    int t;\\n    if (n>=0) t=n;\\n    else t=n*(-1);\\n    if (t>=0){\\n        while(t--){\\n            res*=x; \\n        }\\n    }\\n    if (n>=0)\\n    return res;\\n    return 1/res;\\n}`"
                    },
                    {
                        "username": "superplane",
                        "content": "I have done several Leetcode problems with python. In general I feel that using python, iterative solutions are generally faster than recursive ones. For some problems, recursive solutions will exceed time limit, while iterative ones will not. Does anyone have similar feeling? Is it generally true for python?"
                    },
                    {
                        "username": "the-iter8",
                        "content": "[@Dabboiiii](/Dabboiiii) Time + space"
                    },
                    {
                        "username": "Dabboiiii",
                        "content": "recursive solutions always take more time than iterative. it\\'s one of their downsides"
                    },
                    {
                        "username": "anwendeng",
                        "content": "Exponentiation can use its binary expression to compute! \n# If you want to change sign for n, be careful! When n=-2^31, it would lead to a overflow."
                    },
                    {
                        "username": "Arpit_001",
                        "content": "Stucking at a high on weed test case\\nx= 0.000001\\nn=-2147483647 \\nhow to not get StackOverFlowError"
                    },
                    {
                        "username": "breathermachine",
                        "content": "Use long instead of int"
                    },
                    {
                        "username": "yuangaonyc",
                        "content": "Couldn\\'t pass the test case where $x =  0.999999999 and $n = -2147483648.\\nIf I var_export($x), it is 1.00000. Am I missing something or is this an issue with how leetcode runs these test cases for php?"
                    },
                    {
                        "username": "Shaybra",
                        "content": "your code should check for the maxes for the power, and then return 0 or inf"
                    },
                    {
                        "username": "TibetSoap",
                        "content": "Happening the same using C# and C++. This is really ridiculous. "
                    },
                    {
                        "username": "soumyajit_0",
                        "content": "return pow(x,n);\\n\\nBeats 100% of the Solution :) \\nI have successfully unlocked my clown outfit."
                    },
                    {
                        "username": "justsolveitlmao",
                        "content": "lmao, thanks for the laugh"
                    },
                    {
                        "username": "szm9119",
                        "content": "divide by zero test case not considered"
                    },
                    {
                        "username": "grovre",
                        "content": "Leetcode\\'s got some balls making this one the daily"
                    }
                ]
            },
            {
                "id": 1736993,
                "content": [
                    {
                        "username": "natitati",
                        "content": "Is there something broken about testcase 305?"
                    },
                    {
                        "username": "Shristi_uniyal",
                        "content": "return Double.parseDouble(String.format(\"%.5f\",Math.pow(x,n)));"
                    },
                    {
                        "username": "fantazer",
                        "content": "There is something abnormal. \\n\\nTime Limit Exceeded ------ 305 / 305 testcases passed ???\\nLast Executed Input\\nx = \\n\\nLiterally, x = nothing there, empty space. \\nHow is that possible? \\n \\n`double myPow(double x, int n){\\n\\n    if (x==1.0) return 1;\\n    if (x==-1){\\n        if (n%2 == 0) return 1.0;\\n        else return -1.0;\\n    }\\n    if (x>1.0 && n<-2147483647) return 0;\\n    double res = 1;\\n    int t;\\n    if (n>=0) t=n;\\n    else t=n*(-1);\\n    if (t>=0){\\n        while(t--){\\n            res*=x; \\n        }\\n    }\\n    if (n>=0)\\n    return res;\\n    return 1/res;\\n}`"
                    },
                    {
                        "username": "superplane",
                        "content": "I have done several Leetcode problems with python. In general I feel that using python, iterative solutions are generally faster than recursive ones. For some problems, recursive solutions will exceed time limit, while iterative ones will not. Does anyone have similar feeling? Is it generally true for python?"
                    },
                    {
                        "username": "the-iter8",
                        "content": "[@Dabboiiii](/Dabboiiii) Time + space"
                    },
                    {
                        "username": "Dabboiiii",
                        "content": "recursive solutions always take more time than iterative. it\\'s one of their downsides"
                    },
                    {
                        "username": "anwendeng",
                        "content": "Exponentiation can use its binary expression to compute! \n# If you want to change sign for n, be careful! When n=-2^31, it would lead to a overflow."
                    },
                    {
                        "username": "Arpit_001",
                        "content": "Stucking at a high on weed test case\\nx= 0.000001\\nn=-2147483647 \\nhow to not get StackOverFlowError"
                    },
                    {
                        "username": "breathermachine",
                        "content": "Use long instead of int"
                    },
                    {
                        "username": "yuangaonyc",
                        "content": "Couldn\\'t pass the test case where $x =  0.999999999 and $n = -2147483648.\\nIf I var_export($x), it is 1.00000. Am I missing something or is this an issue with how leetcode runs these test cases for php?"
                    },
                    {
                        "username": "Shaybra",
                        "content": "your code should check for the maxes for the power, and then return 0 or inf"
                    },
                    {
                        "username": "TibetSoap",
                        "content": "Happening the same using C# and C++. This is really ridiculous. "
                    },
                    {
                        "username": "soumyajit_0",
                        "content": "return pow(x,n);\\n\\nBeats 100% of the Solution :) \\nI have successfully unlocked my clown outfit."
                    },
                    {
                        "username": "justsolveitlmao",
                        "content": "lmao, thanks for the laugh"
                    },
                    {
                        "username": "szm9119",
                        "content": "divide by zero test case not considered"
                    },
                    {
                        "username": "grovre",
                        "content": "Leetcode\\'s got some balls making this one the daily"
                    }
                ]
            },
            {
                "id": 1571123,
                "content": [
                    {
                        "username": "natitati",
                        "content": "Is there something broken about testcase 305?"
                    },
                    {
                        "username": "Shristi_uniyal",
                        "content": "return Double.parseDouble(String.format(\"%.5f\",Math.pow(x,n)));"
                    },
                    {
                        "username": "fantazer",
                        "content": "There is something abnormal. \\n\\nTime Limit Exceeded ------ 305 / 305 testcases passed ???\\nLast Executed Input\\nx = \\n\\nLiterally, x = nothing there, empty space. \\nHow is that possible? \\n \\n`double myPow(double x, int n){\\n\\n    if (x==1.0) return 1;\\n    if (x==-1){\\n        if (n%2 == 0) return 1.0;\\n        else return -1.0;\\n    }\\n    if (x>1.0 && n<-2147483647) return 0;\\n    double res = 1;\\n    int t;\\n    if (n>=0) t=n;\\n    else t=n*(-1);\\n    if (t>=0){\\n        while(t--){\\n            res*=x; \\n        }\\n    }\\n    if (n>=0)\\n    return res;\\n    return 1/res;\\n}`"
                    },
                    {
                        "username": "superplane",
                        "content": "I have done several Leetcode problems with python. In general I feel that using python, iterative solutions are generally faster than recursive ones. For some problems, recursive solutions will exceed time limit, while iterative ones will not. Does anyone have similar feeling? Is it generally true for python?"
                    },
                    {
                        "username": "the-iter8",
                        "content": "[@Dabboiiii](/Dabboiiii) Time + space"
                    },
                    {
                        "username": "Dabboiiii",
                        "content": "recursive solutions always take more time than iterative. it\\'s one of their downsides"
                    },
                    {
                        "username": "anwendeng",
                        "content": "Exponentiation can use its binary expression to compute! \n# If you want to change sign for n, be careful! When n=-2^31, it would lead to a overflow."
                    },
                    {
                        "username": "Arpit_001",
                        "content": "Stucking at a high on weed test case\\nx= 0.000001\\nn=-2147483647 \\nhow to not get StackOverFlowError"
                    },
                    {
                        "username": "breathermachine",
                        "content": "Use long instead of int"
                    },
                    {
                        "username": "yuangaonyc",
                        "content": "Couldn\\'t pass the test case where $x =  0.999999999 and $n = -2147483648.\\nIf I var_export($x), it is 1.00000. Am I missing something or is this an issue with how leetcode runs these test cases for php?"
                    },
                    {
                        "username": "Shaybra",
                        "content": "your code should check for the maxes for the power, and then return 0 or inf"
                    },
                    {
                        "username": "TibetSoap",
                        "content": "Happening the same using C# and C++. This is really ridiculous. "
                    },
                    {
                        "username": "soumyajit_0",
                        "content": "return pow(x,n);\\n\\nBeats 100% of the Solution :) \\nI have successfully unlocked my clown outfit."
                    },
                    {
                        "username": "justsolveitlmao",
                        "content": "lmao, thanks for the laugh"
                    },
                    {
                        "username": "szm9119",
                        "content": "divide by zero test case not considered"
                    },
                    {
                        "username": "grovre",
                        "content": "Leetcode\\'s got some balls making this one the daily"
                    }
                ]
            },
            {
                "id": 1983554,
                "content": [
                    {
                        "username": "natitati",
                        "content": "Is there something broken about testcase 305?"
                    },
                    {
                        "username": "Shristi_uniyal",
                        "content": "return Double.parseDouble(String.format(\"%.5f\",Math.pow(x,n)));"
                    },
                    {
                        "username": "fantazer",
                        "content": "There is something abnormal. \\n\\nTime Limit Exceeded ------ 305 / 305 testcases passed ???\\nLast Executed Input\\nx = \\n\\nLiterally, x = nothing there, empty space. \\nHow is that possible? \\n \\n`double myPow(double x, int n){\\n\\n    if (x==1.0) return 1;\\n    if (x==-1){\\n        if (n%2 == 0) return 1.0;\\n        else return -1.0;\\n    }\\n    if (x>1.0 && n<-2147483647) return 0;\\n    double res = 1;\\n    int t;\\n    if (n>=0) t=n;\\n    else t=n*(-1);\\n    if (t>=0){\\n        while(t--){\\n            res*=x; \\n        }\\n    }\\n    if (n>=0)\\n    return res;\\n    return 1/res;\\n}`"
                    },
                    {
                        "username": "superplane",
                        "content": "I have done several Leetcode problems with python. In general I feel that using python, iterative solutions are generally faster than recursive ones. For some problems, recursive solutions will exceed time limit, while iterative ones will not. Does anyone have similar feeling? Is it generally true for python?"
                    },
                    {
                        "username": "the-iter8",
                        "content": "[@Dabboiiii](/Dabboiiii) Time + space"
                    },
                    {
                        "username": "Dabboiiii",
                        "content": "recursive solutions always take more time than iterative. it\\'s one of their downsides"
                    },
                    {
                        "username": "anwendeng",
                        "content": "Exponentiation can use its binary expression to compute! \n# If you want to change sign for n, be careful! When n=-2^31, it would lead to a overflow."
                    },
                    {
                        "username": "Arpit_001",
                        "content": "Stucking at a high on weed test case\\nx= 0.000001\\nn=-2147483647 \\nhow to not get StackOverFlowError"
                    },
                    {
                        "username": "breathermachine",
                        "content": "Use long instead of int"
                    },
                    {
                        "username": "yuangaonyc",
                        "content": "Couldn\\'t pass the test case where $x =  0.999999999 and $n = -2147483648.\\nIf I var_export($x), it is 1.00000. Am I missing something or is this an issue with how leetcode runs these test cases for php?"
                    },
                    {
                        "username": "Shaybra",
                        "content": "your code should check for the maxes for the power, and then return 0 or inf"
                    },
                    {
                        "username": "TibetSoap",
                        "content": "Happening the same using C# and C++. This is really ridiculous. "
                    },
                    {
                        "username": "soumyajit_0",
                        "content": "return pow(x,n);\\n\\nBeats 100% of the Solution :) \\nI have successfully unlocked my clown outfit."
                    },
                    {
                        "username": "justsolveitlmao",
                        "content": "lmao, thanks for the laugh"
                    },
                    {
                        "username": "szm9119",
                        "content": "divide by zero test case not considered"
                    },
                    {
                        "username": "grovre",
                        "content": "Leetcode\\'s got some balls making this one the daily"
                    }
                ]
            },
            {
                "id": 1984112,
                "content": [
                    {
                        "username": "natitati",
                        "content": "Is there something broken about testcase 305?"
                    },
                    {
                        "username": "Shristi_uniyal",
                        "content": "return Double.parseDouble(String.format(\"%.5f\",Math.pow(x,n)));"
                    },
                    {
                        "username": "fantazer",
                        "content": "There is something abnormal. \\n\\nTime Limit Exceeded ------ 305 / 305 testcases passed ???\\nLast Executed Input\\nx = \\n\\nLiterally, x = nothing there, empty space. \\nHow is that possible? \\n \\n`double myPow(double x, int n){\\n\\n    if (x==1.0) return 1;\\n    if (x==-1){\\n        if (n%2 == 0) return 1.0;\\n        else return -1.0;\\n    }\\n    if (x>1.0 && n<-2147483647) return 0;\\n    double res = 1;\\n    int t;\\n    if (n>=0) t=n;\\n    else t=n*(-1);\\n    if (t>=0){\\n        while(t--){\\n            res*=x; \\n        }\\n    }\\n    if (n>=0)\\n    return res;\\n    return 1/res;\\n}`"
                    },
                    {
                        "username": "superplane",
                        "content": "I have done several Leetcode problems with python. In general I feel that using python, iterative solutions are generally faster than recursive ones. For some problems, recursive solutions will exceed time limit, while iterative ones will not. Does anyone have similar feeling? Is it generally true for python?"
                    },
                    {
                        "username": "the-iter8",
                        "content": "[@Dabboiiii](/Dabboiiii) Time + space"
                    },
                    {
                        "username": "Dabboiiii",
                        "content": "recursive solutions always take more time than iterative. it\\'s one of their downsides"
                    },
                    {
                        "username": "anwendeng",
                        "content": "Exponentiation can use its binary expression to compute! \n# If you want to change sign for n, be careful! When n=-2^31, it would lead to a overflow."
                    },
                    {
                        "username": "Arpit_001",
                        "content": "Stucking at a high on weed test case\\nx= 0.000001\\nn=-2147483647 \\nhow to not get StackOverFlowError"
                    },
                    {
                        "username": "breathermachine",
                        "content": "Use long instead of int"
                    },
                    {
                        "username": "yuangaonyc",
                        "content": "Couldn\\'t pass the test case where $x =  0.999999999 and $n = -2147483648.\\nIf I var_export($x), it is 1.00000. Am I missing something or is this an issue with how leetcode runs these test cases for php?"
                    },
                    {
                        "username": "Shaybra",
                        "content": "your code should check for the maxes for the power, and then return 0 or inf"
                    },
                    {
                        "username": "TibetSoap",
                        "content": "Happening the same using C# and C++. This is really ridiculous. "
                    },
                    {
                        "username": "soumyajit_0",
                        "content": "return pow(x,n);\\n\\nBeats 100% of the Solution :) \\nI have successfully unlocked my clown outfit."
                    },
                    {
                        "username": "justsolveitlmao",
                        "content": "lmao, thanks for the laugh"
                    },
                    {
                        "username": "szm9119",
                        "content": "divide by zero test case not considered"
                    },
                    {
                        "username": "grovre",
                        "content": "Leetcode\\'s got some balls making this one the daily"
                    }
                ]
            },
            {
                "id": 1570660,
                "content": [
                    {
                        "username": "natitati",
                        "content": "Is there something broken about testcase 305?"
                    },
                    {
                        "username": "Shristi_uniyal",
                        "content": "return Double.parseDouble(String.format(\"%.5f\",Math.pow(x,n)));"
                    },
                    {
                        "username": "fantazer",
                        "content": "There is something abnormal. \\n\\nTime Limit Exceeded ------ 305 / 305 testcases passed ???\\nLast Executed Input\\nx = \\n\\nLiterally, x = nothing there, empty space. \\nHow is that possible? \\n \\n`double myPow(double x, int n){\\n\\n    if (x==1.0) return 1;\\n    if (x==-1){\\n        if (n%2 == 0) return 1.0;\\n        else return -1.0;\\n    }\\n    if (x>1.0 && n<-2147483647) return 0;\\n    double res = 1;\\n    int t;\\n    if (n>=0) t=n;\\n    else t=n*(-1);\\n    if (t>=0){\\n        while(t--){\\n            res*=x; \\n        }\\n    }\\n    if (n>=0)\\n    return res;\\n    return 1/res;\\n}`"
                    },
                    {
                        "username": "superplane",
                        "content": "I have done several Leetcode problems with python. In general I feel that using python, iterative solutions are generally faster than recursive ones. For some problems, recursive solutions will exceed time limit, while iterative ones will not. Does anyone have similar feeling? Is it generally true for python?"
                    },
                    {
                        "username": "the-iter8",
                        "content": "[@Dabboiiii](/Dabboiiii) Time + space"
                    },
                    {
                        "username": "Dabboiiii",
                        "content": "recursive solutions always take more time than iterative. it\\'s one of their downsides"
                    },
                    {
                        "username": "anwendeng",
                        "content": "Exponentiation can use its binary expression to compute! \n# If you want to change sign for n, be careful! When n=-2^31, it would lead to a overflow."
                    },
                    {
                        "username": "Arpit_001",
                        "content": "Stucking at a high on weed test case\\nx= 0.000001\\nn=-2147483647 \\nhow to not get StackOverFlowError"
                    },
                    {
                        "username": "breathermachine",
                        "content": "Use long instead of int"
                    },
                    {
                        "username": "yuangaonyc",
                        "content": "Couldn\\'t pass the test case where $x =  0.999999999 and $n = -2147483648.\\nIf I var_export($x), it is 1.00000. Am I missing something or is this an issue with how leetcode runs these test cases for php?"
                    },
                    {
                        "username": "Shaybra",
                        "content": "your code should check for the maxes for the power, and then return 0 or inf"
                    },
                    {
                        "username": "TibetSoap",
                        "content": "Happening the same using C# and C++. This is really ridiculous. "
                    },
                    {
                        "username": "soumyajit_0",
                        "content": "return pow(x,n);\\n\\nBeats 100% of the Solution :) \\nI have successfully unlocked my clown outfit."
                    },
                    {
                        "username": "justsolveitlmao",
                        "content": "lmao, thanks for the laugh"
                    },
                    {
                        "username": "szm9119",
                        "content": "divide by zero test case not considered"
                    },
                    {
                        "username": "grovre",
                        "content": "Leetcode\\'s got some balls making this one the daily"
                    }
                ]
            },
            {
                "id": 1984485,
                "content": [
                    {
                        "username": "natitati",
                        "content": "Is there something broken about testcase 305?"
                    },
                    {
                        "username": "Shristi_uniyal",
                        "content": "return Double.parseDouble(String.format(\"%.5f\",Math.pow(x,n)));"
                    },
                    {
                        "username": "fantazer",
                        "content": "There is something abnormal. \\n\\nTime Limit Exceeded ------ 305 / 305 testcases passed ???\\nLast Executed Input\\nx = \\n\\nLiterally, x = nothing there, empty space. \\nHow is that possible? \\n \\n`double myPow(double x, int n){\\n\\n    if (x==1.0) return 1;\\n    if (x==-1){\\n        if (n%2 == 0) return 1.0;\\n        else return -1.0;\\n    }\\n    if (x>1.0 && n<-2147483647) return 0;\\n    double res = 1;\\n    int t;\\n    if (n>=0) t=n;\\n    else t=n*(-1);\\n    if (t>=0){\\n        while(t--){\\n            res*=x; \\n        }\\n    }\\n    if (n>=0)\\n    return res;\\n    return 1/res;\\n}`"
                    },
                    {
                        "username": "superplane",
                        "content": "I have done several Leetcode problems with python. In general I feel that using python, iterative solutions are generally faster than recursive ones. For some problems, recursive solutions will exceed time limit, while iterative ones will not. Does anyone have similar feeling? Is it generally true for python?"
                    },
                    {
                        "username": "the-iter8",
                        "content": "[@Dabboiiii](/Dabboiiii) Time + space"
                    },
                    {
                        "username": "Dabboiiii",
                        "content": "recursive solutions always take more time than iterative. it\\'s one of their downsides"
                    },
                    {
                        "username": "anwendeng",
                        "content": "Exponentiation can use its binary expression to compute! \n# If you want to change sign for n, be careful! When n=-2^31, it would lead to a overflow."
                    },
                    {
                        "username": "Arpit_001",
                        "content": "Stucking at a high on weed test case\\nx= 0.000001\\nn=-2147483647 \\nhow to not get StackOverFlowError"
                    },
                    {
                        "username": "breathermachine",
                        "content": "Use long instead of int"
                    },
                    {
                        "username": "yuangaonyc",
                        "content": "Couldn\\'t pass the test case where $x =  0.999999999 and $n = -2147483648.\\nIf I var_export($x), it is 1.00000. Am I missing something or is this an issue with how leetcode runs these test cases for php?"
                    },
                    {
                        "username": "Shaybra",
                        "content": "your code should check for the maxes for the power, and then return 0 or inf"
                    },
                    {
                        "username": "TibetSoap",
                        "content": "Happening the same using C# and C++. This is really ridiculous. "
                    },
                    {
                        "username": "soumyajit_0",
                        "content": "return pow(x,n);\\n\\nBeats 100% of the Solution :) \\nI have successfully unlocked my clown outfit."
                    },
                    {
                        "username": "justsolveitlmao",
                        "content": "lmao, thanks for the laugh"
                    },
                    {
                        "username": "szm9119",
                        "content": "divide by zero test case not considered"
                    },
                    {
                        "username": "grovre",
                        "content": "Leetcode\\'s got some balls making this one the daily"
                    }
                ]
            },
            {
                "id": 1568875,
                "content": [
                    {
                        "username": "natitati",
                        "content": "Is there something broken about testcase 305?"
                    },
                    {
                        "username": "Shristi_uniyal",
                        "content": "return Double.parseDouble(String.format(\"%.5f\",Math.pow(x,n)));"
                    },
                    {
                        "username": "fantazer",
                        "content": "There is something abnormal. \\n\\nTime Limit Exceeded ------ 305 / 305 testcases passed ???\\nLast Executed Input\\nx = \\n\\nLiterally, x = nothing there, empty space. \\nHow is that possible? \\n \\n`double myPow(double x, int n){\\n\\n    if (x==1.0) return 1;\\n    if (x==-1){\\n        if (n%2 == 0) return 1.0;\\n        else return -1.0;\\n    }\\n    if (x>1.0 && n<-2147483647) return 0;\\n    double res = 1;\\n    int t;\\n    if (n>=0) t=n;\\n    else t=n*(-1);\\n    if (t>=0){\\n        while(t--){\\n            res*=x; \\n        }\\n    }\\n    if (n>=0)\\n    return res;\\n    return 1/res;\\n}`"
                    },
                    {
                        "username": "superplane",
                        "content": "I have done several Leetcode problems with python. In general I feel that using python, iterative solutions are generally faster than recursive ones. For some problems, recursive solutions will exceed time limit, while iterative ones will not. Does anyone have similar feeling? Is it generally true for python?"
                    },
                    {
                        "username": "the-iter8",
                        "content": "[@Dabboiiii](/Dabboiiii) Time + space"
                    },
                    {
                        "username": "Dabboiiii",
                        "content": "recursive solutions always take more time than iterative. it\\'s one of their downsides"
                    },
                    {
                        "username": "anwendeng",
                        "content": "Exponentiation can use its binary expression to compute! \n# If you want to change sign for n, be careful! When n=-2^31, it would lead to a overflow."
                    },
                    {
                        "username": "Arpit_001",
                        "content": "Stucking at a high on weed test case\\nx= 0.000001\\nn=-2147483647 \\nhow to not get StackOverFlowError"
                    },
                    {
                        "username": "breathermachine",
                        "content": "Use long instead of int"
                    },
                    {
                        "username": "yuangaonyc",
                        "content": "Couldn\\'t pass the test case where $x =  0.999999999 and $n = -2147483648.\\nIf I var_export($x), it is 1.00000. Am I missing something or is this an issue with how leetcode runs these test cases for php?"
                    },
                    {
                        "username": "Shaybra",
                        "content": "your code should check for the maxes for the power, and then return 0 or inf"
                    },
                    {
                        "username": "TibetSoap",
                        "content": "Happening the same using C# and C++. This is really ridiculous. "
                    },
                    {
                        "username": "soumyajit_0",
                        "content": "return pow(x,n);\\n\\nBeats 100% of the Solution :) \\nI have successfully unlocked my clown outfit."
                    },
                    {
                        "username": "justsolveitlmao",
                        "content": "lmao, thanks for the laugh"
                    },
                    {
                        "username": "szm9119",
                        "content": "divide by zero test case not considered"
                    },
                    {
                        "username": "grovre",
                        "content": "Leetcode\\'s got some balls making this one the daily"
                    }
                ]
            },
            {
                "id": 1983973,
                "content": [
                    {
                        "username": "natitati",
                        "content": "Is there something broken about testcase 305?"
                    },
                    {
                        "username": "Shristi_uniyal",
                        "content": "return Double.parseDouble(String.format(\"%.5f\",Math.pow(x,n)));"
                    },
                    {
                        "username": "fantazer",
                        "content": "There is something abnormal. \\n\\nTime Limit Exceeded ------ 305 / 305 testcases passed ???\\nLast Executed Input\\nx = \\n\\nLiterally, x = nothing there, empty space. \\nHow is that possible? \\n \\n`double myPow(double x, int n){\\n\\n    if (x==1.0) return 1;\\n    if (x==-1){\\n        if (n%2 == 0) return 1.0;\\n        else return -1.0;\\n    }\\n    if (x>1.0 && n<-2147483647) return 0;\\n    double res = 1;\\n    int t;\\n    if (n>=0) t=n;\\n    else t=n*(-1);\\n    if (t>=0){\\n        while(t--){\\n            res*=x; \\n        }\\n    }\\n    if (n>=0)\\n    return res;\\n    return 1/res;\\n}`"
                    },
                    {
                        "username": "superplane",
                        "content": "I have done several Leetcode problems with python. In general I feel that using python, iterative solutions are generally faster than recursive ones. For some problems, recursive solutions will exceed time limit, while iterative ones will not. Does anyone have similar feeling? Is it generally true for python?"
                    },
                    {
                        "username": "the-iter8",
                        "content": "[@Dabboiiii](/Dabboiiii) Time + space"
                    },
                    {
                        "username": "Dabboiiii",
                        "content": "recursive solutions always take more time than iterative. it\\'s one of their downsides"
                    },
                    {
                        "username": "anwendeng",
                        "content": "Exponentiation can use its binary expression to compute! \n# If you want to change sign for n, be careful! When n=-2^31, it would lead to a overflow."
                    },
                    {
                        "username": "Arpit_001",
                        "content": "Stucking at a high on weed test case\\nx= 0.000001\\nn=-2147483647 \\nhow to not get StackOverFlowError"
                    },
                    {
                        "username": "breathermachine",
                        "content": "Use long instead of int"
                    },
                    {
                        "username": "yuangaonyc",
                        "content": "Couldn\\'t pass the test case where $x =  0.999999999 and $n = -2147483648.\\nIf I var_export($x), it is 1.00000. Am I missing something or is this an issue with how leetcode runs these test cases for php?"
                    },
                    {
                        "username": "Shaybra",
                        "content": "your code should check for the maxes for the power, and then return 0 or inf"
                    },
                    {
                        "username": "TibetSoap",
                        "content": "Happening the same using C# and C++. This is really ridiculous. "
                    },
                    {
                        "username": "soumyajit_0",
                        "content": "return pow(x,n);\\n\\nBeats 100% of the Solution :) \\nI have successfully unlocked my clown outfit."
                    },
                    {
                        "username": "justsolveitlmao",
                        "content": "lmao, thanks for the laugh"
                    },
                    {
                        "username": "szm9119",
                        "content": "divide by zero test case not considered"
                    },
                    {
                        "username": "grovre",
                        "content": "Leetcode\\'s got some balls making this one the daily"
                    }
                ]
            },
            {
                "id": 1748280,
                "content": [
                    {
                        "username": "tomereli",
                        "content": "I\\'m keeping getting Time limit exceeded to a simple brut force implementation not different than the one in the official solution. Any idea why??\\n```\\n    def myPow(self, x: float, n: int) -> float:\\n        result = 1\\n        for i in range(abs(n)):\\n            result *= x\\n        return result if n > 0 else 1/result\\n```"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "[@GodOfm4a1](/GodOfm4a1) Yes, you are right. we can set the base cases and do this recursively."
                    },
                    {
                        "username": "GodOfm4a1",
                        "content": "[@abdulmoomin007](/abdulmoomin007) So we store the results of x^2 , x^4 .... like that, and then build the intended answer?\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "[@YaJohny](/YaJohny) Here\\'s a hint.\\nx*x = x^2, \\nx^2 * x^2 = x^4, \\nx^4*x^4 = x^8\\n....\\nfor x^2147483648, instead of multiplying x with x 2147483648 times, you have to cut down the logic by divide and conquer."
                    },
                    {
                        "username": "YaJohny",
                        "content": "[@abdulmoomin007](/abdulmoomin007) Do you know how to fix that?"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "One of the constraints for n is -2^31 <= n <= 2^31-1. 2^31 is 2147483648. running for loop a billion times would give TLE always."
                    },
                    {
                        "username": "Ebad1001",
                        "content": "I have already solved this question the last month. But now when I am re-submitting my old solution, it\\'s showing _wrong answer_ for certain test cases. It looks like that they have updated and added some new test cases."
                    },
                    {
                        "username": "oops_moment",
                        "content": "LOL WHEN I AM WRITING THIS , WHAT IS SEE IS 8.1K UPVOTES AND 8.1 K DOWNVOTES LOL, but we will do it lesss gooo \\uD83E\\uDD13\\uD83E\\uDD13\\n\\n\\uD83E\\uDD14 We know that naively multiplying x by itself n times would surely lead to a Time Limit Exceeded (TLE) error for larger values of n.\\n\\n\\uD83C\\uDF1F Consider an example, let\\'s find 2^4. Instead of multiplying 2 four times, why not do 2 * 2 raised to power 2? Yes! If n is even, just divide n by 2 (n/=2), and square x (x*=x) in each step.\\n\\n\\uD83E\\uDD37\\u200D\\u2642\\uFE0F But what if n is odd, say 2^3? To handle this, we convert it into an even-powered case. We multiply the finalAns by x to account for the extra power, and then you remain with 2^2, which we handle similarly as we do for positive cases.\\n\\n\\uD83E\\uDD13 Now, here\\'s a question for you! Which special case do you need to handle? If the absolute value of n is INT_MIN, you might try to make it positive by -1. But be cautious! This will exceed the int limit. To address this, we use one more long long variable called temp and perform the operation on it.\\n\\nWith this approach, we can efficiently calculate the power of x raised to n without facing any TLE issues. Keep practicing and happy coding! \\uD83D\\uDE04\\uD83D\\uDC4D\\n"
                    },
                    {
                        "username": "Rmsa77",
                        "content": "Couldnt pass this testcase \\nthis is a TLE..!\\nx =\\n2.00000\\nn =\\n-2147483648"
                    },
                    {
                        "username": "Prajjal",
                        "content": "[@ashuranjan003](/ashuranjan003) End the loop immediately when it becomes zero\\n"
                    },
                    {
                        "username": "Prajjal",
                        "content": "End the loop immediately when it becomes zero\\n"
                    },
                    {
                        "username": "ashuranjan003",
                        "content": "same happens to me \\uD83D\\uDE05"
                    },
                    {
                        "username": "vintiduggar26",
                        "content": "my code is satisfying all the test cases. but when i am trying to submit the code it is showing me this error\\nAddressSanitizer:DEADLYSIGNAL\\n=================================================================\\n==34==ERROR: AddressSanitizer: stack-overflow on address 0x7ffe2acafff8 (pc 0x000000343a4b bp 0x7ffe2acb0010 sp 0x7ffe2acb0000 T0)\\n==34==ABORTING"
                    },
                    {
                        "username": "Deepanshu_Chhillar",
                        "content": "This error means either you are  variable is trying to store more value than allocated, basically you can say its stackoverflow. \\n\\nDo check that you are returning zero if variable is exceeding the value.\\n\\nFor eg:\\ndouble p=1;\\n if(p>DBL_MAX)\\n          {\\n              return 0;\\n          }\\n        }"
                    },
                    {
                        "username": "lavankumarganji",
                        "content": "are you check ing all the edg cases ?\\n"
                    },
                    {
                        "username": "user7734BK",
                        "content": "a \"medium\" problem that lets use the pow function?! please add more checks."
                    },
                    {
                        "username": "eduard92",
                        "content": "checks are done at the interview... Like they give you this problem and you have the audacity to write `Math.Pow` and not knowing any other solution."
                    },
                    {
                        "username": "nitin_leetcode",
                        "content": "When I submit the solution, it runs into stackoverflow exception with the inputs:\\nx: 1.00001 \\nn: 123456\\nBut when I run my code for this input, it runs successfully returning the correct answer.\\n"
                    },
                    {
                        "username": "anujpachauri",
                        "content": "return Math.pow(x, n);"
                    },
                    {
                        "username": "kaviyacute",
                        "content": "return pow(x,n);\\n One line answer and is 100% efficient"
                    },
                    {
                        "username": "ProtoDot",
                        "content": "In C++:\\n```C++\\nclass Solution {\\npublic:\\n    double myPow(double x, int n_) {\\n        long long n = n_;\\n        if(n == 0) return 1.0;\\n        if(n < 0)\\n        {\\n            n = -n;\\n            x = 1./x;\\n        }\\n        double res = x;\\n        while(n > 1)\\n        {\\n            res *= res;\\n            res = n % 2 == 0 ? res : res * x;\\n            n >>= 1;\\n        }\\n        return res;\\n    }\\n};\\n```\\nReturns 0.00000 with x = 8.84372 and n = -5 for some reason, and I cannot figure out why. Any help?"
                    }
                ]
            },
            {
                "id": 1984370,
                "content": [
                    {
                        "username": "tomereli",
                        "content": "I\\'m keeping getting Time limit exceeded to a simple brut force implementation not different than the one in the official solution. Any idea why??\\n```\\n    def myPow(self, x: float, n: int) -> float:\\n        result = 1\\n        for i in range(abs(n)):\\n            result *= x\\n        return result if n > 0 else 1/result\\n```"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "[@GodOfm4a1](/GodOfm4a1) Yes, you are right. we can set the base cases and do this recursively."
                    },
                    {
                        "username": "GodOfm4a1",
                        "content": "[@abdulmoomin007](/abdulmoomin007) So we store the results of x^2 , x^4 .... like that, and then build the intended answer?\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "[@YaJohny](/YaJohny) Here\\'s a hint.\\nx*x = x^2, \\nx^2 * x^2 = x^4, \\nx^4*x^4 = x^8\\n....\\nfor x^2147483648, instead of multiplying x with x 2147483648 times, you have to cut down the logic by divide and conquer."
                    },
                    {
                        "username": "YaJohny",
                        "content": "[@abdulmoomin007](/abdulmoomin007) Do you know how to fix that?"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "One of the constraints for n is -2^31 <= n <= 2^31-1. 2^31 is 2147483648. running for loop a billion times would give TLE always."
                    },
                    {
                        "username": "Ebad1001",
                        "content": "I have already solved this question the last month. But now when I am re-submitting my old solution, it\\'s showing _wrong answer_ for certain test cases. It looks like that they have updated and added some new test cases."
                    },
                    {
                        "username": "oops_moment",
                        "content": "LOL WHEN I AM WRITING THIS , WHAT IS SEE IS 8.1K UPVOTES AND 8.1 K DOWNVOTES LOL, but we will do it lesss gooo \\uD83E\\uDD13\\uD83E\\uDD13\\n\\n\\uD83E\\uDD14 We know that naively multiplying x by itself n times would surely lead to a Time Limit Exceeded (TLE) error for larger values of n.\\n\\n\\uD83C\\uDF1F Consider an example, let\\'s find 2^4. Instead of multiplying 2 four times, why not do 2 * 2 raised to power 2? Yes! If n is even, just divide n by 2 (n/=2), and square x (x*=x) in each step.\\n\\n\\uD83E\\uDD37\\u200D\\u2642\\uFE0F But what if n is odd, say 2^3? To handle this, we convert it into an even-powered case. We multiply the finalAns by x to account for the extra power, and then you remain with 2^2, which we handle similarly as we do for positive cases.\\n\\n\\uD83E\\uDD13 Now, here\\'s a question for you! Which special case do you need to handle? If the absolute value of n is INT_MIN, you might try to make it positive by -1. But be cautious! This will exceed the int limit. To address this, we use one more long long variable called temp and perform the operation on it.\\n\\nWith this approach, we can efficiently calculate the power of x raised to n without facing any TLE issues. Keep practicing and happy coding! \\uD83D\\uDE04\\uD83D\\uDC4D\\n"
                    },
                    {
                        "username": "Rmsa77",
                        "content": "Couldnt pass this testcase \\nthis is a TLE..!\\nx =\\n2.00000\\nn =\\n-2147483648"
                    },
                    {
                        "username": "Prajjal",
                        "content": "[@ashuranjan003](/ashuranjan003) End the loop immediately when it becomes zero\\n"
                    },
                    {
                        "username": "Prajjal",
                        "content": "End the loop immediately when it becomes zero\\n"
                    },
                    {
                        "username": "ashuranjan003",
                        "content": "same happens to me \\uD83D\\uDE05"
                    },
                    {
                        "username": "vintiduggar26",
                        "content": "my code is satisfying all the test cases. but when i am trying to submit the code it is showing me this error\\nAddressSanitizer:DEADLYSIGNAL\\n=================================================================\\n==34==ERROR: AddressSanitizer: stack-overflow on address 0x7ffe2acafff8 (pc 0x000000343a4b bp 0x7ffe2acb0010 sp 0x7ffe2acb0000 T0)\\n==34==ABORTING"
                    },
                    {
                        "username": "Deepanshu_Chhillar",
                        "content": "This error means either you are  variable is trying to store more value than allocated, basically you can say its stackoverflow. \\n\\nDo check that you are returning zero if variable is exceeding the value.\\n\\nFor eg:\\ndouble p=1;\\n if(p>DBL_MAX)\\n          {\\n              return 0;\\n          }\\n        }"
                    },
                    {
                        "username": "lavankumarganji",
                        "content": "are you check ing all the edg cases ?\\n"
                    },
                    {
                        "username": "user7734BK",
                        "content": "a \"medium\" problem that lets use the pow function?! please add more checks."
                    },
                    {
                        "username": "eduard92",
                        "content": "checks are done at the interview... Like they give you this problem and you have the audacity to write `Math.Pow` and not knowing any other solution."
                    },
                    {
                        "username": "nitin_leetcode",
                        "content": "When I submit the solution, it runs into stackoverflow exception with the inputs:\\nx: 1.00001 \\nn: 123456\\nBut when I run my code for this input, it runs successfully returning the correct answer.\\n"
                    },
                    {
                        "username": "anujpachauri",
                        "content": "return Math.pow(x, n);"
                    },
                    {
                        "username": "kaviyacute",
                        "content": "return pow(x,n);\\n One line answer and is 100% efficient"
                    },
                    {
                        "username": "ProtoDot",
                        "content": "In C++:\\n```C++\\nclass Solution {\\npublic:\\n    double myPow(double x, int n_) {\\n        long long n = n_;\\n        if(n == 0) return 1.0;\\n        if(n < 0)\\n        {\\n            n = -n;\\n            x = 1./x;\\n        }\\n        double res = x;\\n        while(n > 1)\\n        {\\n            res *= res;\\n            res = n % 2 == 0 ? res : res * x;\\n            n >>= 1;\\n        }\\n        return res;\\n    }\\n};\\n```\\nReturns 0.00000 with x = 8.84372 and n = -5 for some reason, and I cannot figure out why. Any help?"
                    }
                ]
            },
            {
                "id": 1984294,
                "content": [
                    {
                        "username": "tomereli",
                        "content": "I\\'m keeping getting Time limit exceeded to a simple brut force implementation not different than the one in the official solution. Any idea why??\\n```\\n    def myPow(self, x: float, n: int) -> float:\\n        result = 1\\n        for i in range(abs(n)):\\n            result *= x\\n        return result if n > 0 else 1/result\\n```"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "[@GodOfm4a1](/GodOfm4a1) Yes, you are right. we can set the base cases and do this recursively."
                    },
                    {
                        "username": "GodOfm4a1",
                        "content": "[@abdulmoomin007](/abdulmoomin007) So we store the results of x^2 , x^4 .... like that, and then build the intended answer?\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "[@YaJohny](/YaJohny) Here\\'s a hint.\\nx*x = x^2, \\nx^2 * x^2 = x^4, \\nx^4*x^4 = x^8\\n....\\nfor x^2147483648, instead of multiplying x with x 2147483648 times, you have to cut down the logic by divide and conquer."
                    },
                    {
                        "username": "YaJohny",
                        "content": "[@abdulmoomin007](/abdulmoomin007) Do you know how to fix that?"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "One of the constraints for n is -2^31 <= n <= 2^31-1. 2^31 is 2147483648. running for loop a billion times would give TLE always."
                    },
                    {
                        "username": "Ebad1001",
                        "content": "I have already solved this question the last month. But now when I am re-submitting my old solution, it\\'s showing _wrong answer_ for certain test cases. It looks like that they have updated and added some new test cases."
                    },
                    {
                        "username": "oops_moment",
                        "content": "LOL WHEN I AM WRITING THIS , WHAT IS SEE IS 8.1K UPVOTES AND 8.1 K DOWNVOTES LOL, but we will do it lesss gooo \\uD83E\\uDD13\\uD83E\\uDD13\\n\\n\\uD83E\\uDD14 We know that naively multiplying x by itself n times would surely lead to a Time Limit Exceeded (TLE) error for larger values of n.\\n\\n\\uD83C\\uDF1F Consider an example, let\\'s find 2^4. Instead of multiplying 2 four times, why not do 2 * 2 raised to power 2? Yes! If n is even, just divide n by 2 (n/=2), and square x (x*=x) in each step.\\n\\n\\uD83E\\uDD37\\u200D\\u2642\\uFE0F But what if n is odd, say 2^3? To handle this, we convert it into an even-powered case. We multiply the finalAns by x to account for the extra power, and then you remain with 2^2, which we handle similarly as we do for positive cases.\\n\\n\\uD83E\\uDD13 Now, here\\'s a question for you! Which special case do you need to handle? If the absolute value of n is INT_MIN, you might try to make it positive by -1. But be cautious! This will exceed the int limit. To address this, we use one more long long variable called temp and perform the operation on it.\\n\\nWith this approach, we can efficiently calculate the power of x raised to n without facing any TLE issues. Keep practicing and happy coding! \\uD83D\\uDE04\\uD83D\\uDC4D\\n"
                    },
                    {
                        "username": "Rmsa77",
                        "content": "Couldnt pass this testcase \\nthis is a TLE..!\\nx =\\n2.00000\\nn =\\n-2147483648"
                    },
                    {
                        "username": "Prajjal",
                        "content": "[@ashuranjan003](/ashuranjan003) End the loop immediately when it becomes zero\\n"
                    },
                    {
                        "username": "Prajjal",
                        "content": "End the loop immediately when it becomes zero\\n"
                    },
                    {
                        "username": "ashuranjan003",
                        "content": "same happens to me \\uD83D\\uDE05"
                    },
                    {
                        "username": "vintiduggar26",
                        "content": "my code is satisfying all the test cases. but when i am trying to submit the code it is showing me this error\\nAddressSanitizer:DEADLYSIGNAL\\n=================================================================\\n==34==ERROR: AddressSanitizer: stack-overflow on address 0x7ffe2acafff8 (pc 0x000000343a4b bp 0x7ffe2acb0010 sp 0x7ffe2acb0000 T0)\\n==34==ABORTING"
                    },
                    {
                        "username": "Deepanshu_Chhillar",
                        "content": "This error means either you are  variable is trying to store more value than allocated, basically you can say its stackoverflow. \\n\\nDo check that you are returning zero if variable is exceeding the value.\\n\\nFor eg:\\ndouble p=1;\\n if(p>DBL_MAX)\\n          {\\n              return 0;\\n          }\\n        }"
                    },
                    {
                        "username": "lavankumarganji",
                        "content": "are you check ing all the edg cases ?\\n"
                    },
                    {
                        "username": "user7734BK",
                        "content": "a \"medium\" problem that lets use the pow function?! please add more checks."
                    },
                    {
                        "username": "eduard92",
                        "content": "checks are done at the interview... Like they give you this problem and you have the audacity to write `Math.Pow` and not knowing any other solution."
                    },
                    {
                        "username": "nitin_leetcode",
                        "content": "When I submit the solution, it runs into stackoverflow exception with the inputs:\\nx: 1.00001 \\nn: 123456\\nBut when I run my code for this input, it runs successfully returning the correct answer.\\n"
                    },
                    {
                        "username": "anujpachauri",
                        "content": "return Math.pow(x, n);"
                    },
                    {
                        "username": "kaviyacute",
                        "content": "return pow(x,n);\\n One line answer and is 100% efficient"
                    },
                    {
                        "username": "ProtoDot",
                        "content": "In C++:\\n```C++\\nclass Solution {\\npublic:\\n    double myPow(double x, int n_) {\\n        long long n = n_;\\n        if(n == 0) return 1.0;\\n        if(n < 0)\\n        {\\n            n = -n;\\n            x = 1./x;\\n        }\\n        double res = x;\\n        while(n > 1)\\n        {\\n            res *= res;\\n            res = n % 2 == 0 ? res : res * x;\\n            n >>= 1;\\n        }\\n        return res;\\n    }\\n};\\n```\\nReturns 0.00000 with x = 8.84372 and n = -5 for some reason, and I cannot figure out why. Any help?"
                    }
                ]
            },
            {
                "id": 1832314,
                "content": [
                    {
                        "username": "tomereli",
                        "content": "I\\'m keeping getting Time limit exceeded to a simple brut force implementation not different than the one in the official solution. Any idea why??\\n```\\n    def myPow(self, x: float, n: int) -> float:\\n        result = 1\\n        for i in range(abs(n)):\\n            result *= x\\n        return result if n > 0 else 1/result\\n```"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "[@GodOfm4a1](/GodOfm4a1) Yes, you are right. we can set the base cases and do this recursively."
                    },
                    {
                        "username": "GodOfm4a1",
                        "content": "[@abdulmoomin007](/abdulmoomin007) So we store the results of x^2 , x^4 .... like that, and then build the intended answer?\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "[@YaJohny](/YaJohny) Here\\'s a hint.\\nx*x = x^2, \\nx^2 * x^2 = x^4, \\nx^4*x^4 = x^8\\n....\\nfor x^2147483648, instead of multiplying x with x 2147483648 times, you have to cut down the logic by divide and conquer."
                    },
                    {
                        "username": "YaJohny",
                        "content": "[@abdulmoomin007](/abdulmoomin007) Do you know how to fix that?"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "One of the constraints for n is -2^31 <= n <= 2^31-1. 2^31 is 2147483648. running for loop a billion times would give TLE always."
                    },
                    {
                        "username": "Ebad1001",
                        "content": "I have already solved this question the last month. But now when I am re-submitting my old solution, it\\'s showing _wrong answer_ for certain test cases. It looks like that they have updated and added some new test cases."
                    },
                    {
                        "username": "oops_moment",
                        "content": "LOL WHEN I AM WRITING THIS , WHAT IS SEE IS 8.1K UPVOTES AND 8.1 K DOWNVOTES LOL, but we will do it lesss gooo \\uD83E\\uDD13\\uD83E\\uDD13\\n\\n\\uD83E\\uDD14 We know that naively multiplying x by itself n times would surely lead to a Time Limit Exceeded (TLE) error for larger values of n.\\n\\n\\uD83C\\uDF1F Consider an example, let\\'s find 2^4. Instead of multiplying 2 four times, why not do 2 * 2 raised to power 2? Yes! If n is even, just divide n by 2 (n/=2), and square x (x*=x) in each step.\\n\\n\\uD83E\\uDD37\\u200D\\u2642\\uFE0F But what if n is odd, say 2^3? To handle this, we convert it into an even-powered case. We multiply the finalAns by x to account for the extra power, and then you remain with 2^2, which we handle similarly as we do for positive cases.\\n\\n\\uD83E\\uDD13 Now, here\\'s a question for you! Which special case do you need to handle? If the absolute value of n is INT_MIN, you might try to make it positive by -1. But be cautious! This will exceed the int limit. To address this, we use one more long long variable called temp and perform the operation on it.\\n\\nWith this approach, we can efficiently calculate the power of x raised to n without facing any TLE issues. Keep practicing and happy coding! \\uD83D\\uDE04\\uD83D\\uDC4D\\n"
                    },
                    {
                        "username": "Rmsa77",
                        "content": "Couldnt pass this testcase \\nthis is a TLE..!\\nx =\\n2.00000\\nn =\\n-2147483648"
                    },
                    {
                        "username": "Prajjal",
                        "content": "[@ashuranjan003](/ashuranjan003) End the loop immediately when it becomes zero\\n"
                    },
                    {
                        "username": "Prajjal",
                        "content": "End the loop immediately when it becomes zero\\n"
                    },
                    {
                        "username": "ashuranjan003",
                        "content": "same happens to me \\uD83D\\uDE05"
                    },
                    {
                        "username": "vintiduggar26",
                        "content": "my code is satisfying all the test cases. but when i am trying to submit the code it is showing me this error\\nAddressSanitizer:DEADLYSIGNAL\\n=================================================================\\n==34==ERROR: AddressSanitizer: stack-overflow on address 0x7ffe2acafff8 (pc 0x000000343a4b bp 0x7ffe2acb0010 sp 0x7ffe2acb0000 T0)\\n==34==ABORTING"
                    },
                    {
                        "username": "Deepanshu_Chhillar",
                        "content": "This error means either you are  variable is trying to store more value than allocated, basically you can say its stackoverflow. \\n\\nDo check that you are returning zero if variable is exceeding the value.\\n\\nFor eg:\\ndouble p=1;\\n if(p>DBL_MAX)\\n          {\\n              return 0;\\n          }\\n        }"
                    },
                    {
                        "username": "lavankumarganji",
                        "content": "are you check ing all the edg cases ?\\n"
                    },
                    {
                        "username": "user7734BK",
                        "content": "a \"medium\" problem that lets use the pow function?! please add more checks."
                    },
                    {
                        "username": "eduard92",
                        "content": "checks are done at the interview... Like they give you this problem and you have the audacity to write `Math.Pow` and not knowing any other solution."
                    },
                    {
                        "username": "nitin_leetcode",
                        "content": "When I submit the solution, it runs into stackoverflow exception with the inputs:\\nx: 1.00001 \\nn: 123456\\nBut when I run my code for this input, it runs successfully returning the correct answer.\\n"
                    },
                    {
                        "username": "anujpachauri",
                        "content": "return Math.pow(x, n);"
                    },
                    {
                        "username": "kaviyacute",
                        "content": "return pow(x,n);\\n One line answer and is 100% efficient"
                    },
                    {
                        "username": "ProtoDot",
                        "content": "In C++:\\n```C++\\nclass Solution {\\npublic:\\n    double myPow(double x, int n_) {\\n        long long n = n_;\\n        if(n == 0) return 1.0;\\n        if(n < 0)\\n        {\\n            n = -n;\\n            x = 1./x;\\n        }\\n        double res = x;\\n        while(n > 1)\\n        {\\n            res *= res;\\n            res = n % 2 == 0 ? res : res * x;\\n            n >>= 1;\\n        }\\n        return res;\\n    }\\n};\\n```\\nReturns 0.00000 with x = 8.84372 and n = -5 for some reason, and I cannot figure out why. Any help?"
                    }
                ]
            },
            {
                "id": 1790418,
                "content": [
                    {
                        "username": "tomereli",
                        "content": "I\\'m keeping getting Time limit exceeded to a simple brut force implementation not different than the one in the official solution. Any idea why??\\n```\\n    def myPow(self, x: float, n: int) -> float:\\n        result = 1\\n        for i in range(abs(n)):\\n            result *= x\\n        return result if n > 0 else 1/result\\n```"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "[@GodOfm4a1](/GodOfm4a1) Yes, you are right. we can set the base cases and do this recursively."
                    },
                    {
                        "username": "GodOfm4a1",
                        "content": "[@abdulmoomin007](/abdulmoomin007) So we store the results of x^2 , x^4 .... like that, and then build the intended answer?\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "[@YaJohny](/YaJohny) Here\\'s a hint.\\nx*x = x^2, \\nx^2 * x^2 = x^4, \\nx^4*x^4 = x^8\\n....\\nfor x^2147483648, instead of multiplying x with x 2147483648 times, you have to cut down the logic by divide and conquer."
                    },
                    {
                        "username": "YaJohny",
                        "content": "[@abdulmoomin007](/abdulmoomin007) Do you know how to fix that?"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "One of the constraints for n is -2^31 <= n <= 2^31-1. 2^31 is 2147483648. running for loop a billion times would give TLE always."
                    },
                    {
                        "username": "Ebad1001",
                        "content": "I have already solved this question the last month. But now when I am re-submitting my old solution, it\\'s showing _wrong answer_ for certain test cases. It looks like that they have updated and added some new test cases."
                    },
                    {
                        "username": "oops_moment",
                        "content": "LOL WHEN I AM WRITING THIS , WHAT IS SEE IS 8.1K UPVOTES AND 8.1 K DOWNVOTES LOL, but we will do it lesss gooo \\uD83E\\uDD13\\uD83E\\uDD13\\n\\n\\uD83E\\uDD14 We know that naively multiplying x by itself n times would surely lead to a Time Limit Exceeded (TLE) error for larger values of n.\\n\\n\\uD83C\\uDF1F Consider an example, let\\'s find 2^4. Instead of multiplying 2 four times, why not do 2 * 2 raised to power 2? Yes! If n is even, just divide n by 2 (n/=2), and square x (x*=x) in each step.\\n\\n\\uD83E\\uDD37\\u200D\\u2642\\uFE0F But what if n is odd, say 2^3? To handle this, we convert it into an even-powered case. We multiply the finalAns by x to account for the extra power, and then you remain with 2^2, which we handle similarly as we do for positive cases.\\n\\n\\uD83E\\uDD13 Now, here\\'s a question for you! Which special case do you need to handle? If the absolute value of n is INT_MIN, you might try to make it positive by -1. But be cautious! This will exceed the int limit. To address this, we use one more long long variable called temp and perform the operation on it.\\n\\nWith this approach, we can efficiently calculate the power of x raised to n without facing any TLE issues. Keep practicing and happy coding! \\uD83D\\uDE04\\uD83D\\uDC4D\\n"
                    },
                    {
                        "username": "Rmsa77",
                        "content": "Couldnt pass this testcase \\nthis is a TLE..!\\nx =\\n2.00000\\nn =\\n-2147483648"
                    },
                    {
                        "username": "Prajjal",
                        "content": "[@ashuranjan003](/ashuranjan003) End the loop immediately when it becomes zero\\n"
                    },
                    {
                        "username": "Prajjal",
                        "content": "End the loop immediately when it becomes zero\\n"
                    },
                    {
                        "username": "ashuranjan003",
                        "content": "same happens to me \\uD83D\\uDE05"
                    },
                    {
                        "username": "vintiduggar26",
                        "content": "my code is satisfying all the test cases. but when i am trying to submit the code it is showing me this error\\nAddressSanitizer:DEADLYSIGNAL\\n=================================================================\\n==34==ERROR: AddressSanitizer: stack-overflow on address 0x7ffe2acafff8 (pc 0x000000343a4b bp 0x7ffe2acb0010 sp 0x7ffe2acb0000 T0)\\n==34==ABORTING"
                    },
                    {
                        "username": "Deepanshu_Chhillar",
                        "content": "This error means either you are  variable is trying to store more value than allocated, basically you can say its stackoverflow. \\n\\nDo check that you are returning zero if variable is exceeding the value.\\n\\nFor eg:\\ndouble p=1;\\n if(p>DBL_MAX)\\n          {\\n              return 0;\\n          }\\n        }"
                    },
                    {
                        "username": "lavankumarganji",
                        "content": "are you check ing all the edg cases ?\\n"
                    },
                    {
                        "username": "user7734BK",
                        "content": "a \"medium\" problem that lets use the pow function?! please add more checks."
                    },
                    {
                        "username": "eduard92",
                        "content": "checks are done at the interview... Like they give you this problem and you have the audacity to write `Math.Pow` and not knowing any other solution."
                    },
                    {
                        "username": "nitin_leetcode",
                        "content": "When I submit the solution, it runs into stackoverflow exception with the inputs:\\nx: 1.00001 \\nn: 123456\\nBut when I run my code for this input, it runs successfully returning the correct answer.\\n"
                    },
                    {
                        "username": "anujpachauri",
                        "content": "return Math.pow(x, n);"
                    },
                    {
                        "username": "kaviyacute",
                        "content": "return pow(x,n);\\n One line answer and is 100% efficient"
                    },
                    {
                        "username": "ProtoDot",
                        "content": "In C++:\\n```C++\\nclass Solution {\\npublic:\\n    double myPow(double x, int n_) {\\n        long long n = n_;\\n        if(n == 0) return 1.0;\\n        if(n < 0)\\n        {\\n            n = -n;\\n            x = 1./x;\\n        }\\n        double res = x;\\n        while(n > 1)\\n        {\\n            res *= res;\\n            res = n % 2 == 0 ? res : res * x;\\n            n >>= 1;\\n        }\\n        return res;\\n    }\\n};\\n```\\nReturns 0.00000 with x = 8.84372 and n = -5 for some reason, and I cannot figure out why. Any help?"
                    }
                ]
            },
            {
                "id": 1781278,
                "content": [
                    {
                        "username": "tomereli",
                        "content": "I\\'m keeping getting Time limit exceeded to a simple brut force implementation not different than the one in the official solution. Any idea why??\\n```\\n    def myPow(self, x: float, n: int) -> float:\\n        result = 1\\n        for i in range(abs(n)):\\n            result *= x\\n        return result if n > 0 else 1/result\\n```"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "[@GodOfm4a1](/GodOfm4a1) Yes, you are right. we can set the base cases and do this recursively."
                    },
                    {
                        "username": "GodOfm4a1",
                        "content": "[@abdulmoomin007](/abdulmoomin007) So we store the results of x^2 , x^4 .... like that, and then build the intended answer?\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "[@YaJohny](/YaJohny) Here\\'s a hint.\\nx*x = x^2, \\nx^2 * x^2 = x^4, \\nx^4*x^4 = x^8\\n....\\nfor x^2147483648, instead of multiplying x with x 2147483648 times, you have to cut down the logic by divide and conquer."
                    },
                    {
                        "username": "YaJohny",
                        "content": "[@abdulmoomin007](/abdulmoomin007) Do you know how to fix that?"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "One of the constraints for n is -2^31 <= n <= 2^31-1. 2^31 is 2147483648. running for loop a billion times would give TLE always."
                    },
                    {
                        "username": "Ebad1001",
                        "content": "I have already solved this question the last month. But now when I am re-submitting my old solution, it\\'s showing _wrong answer_ for certain test cases. It looks like that they have updated and added some new test cases."
                    },
                    {
                        "username": "oops_moment",
                        "content": "LOL WHEN I AM WRITING THIS , WHAT IS SEE IS 8.1K UPVOTES AND 8.1 K DOWNVOTES LOL, but we will do it lesss gooo \\uD83E\\uDD13\\uD83E\\uDD13\\n\\n\\uD83E\\uDD14 We know that naively multiplying x by itself n times would surely lead to a Time Limit Exceeded (TLE) error for larger values of n.\\n\\n\\uD83C\\uDF1F Consider an example, let\\'s find 2^4. Instead of multiplying 2 four times, why not do 2 * 2 raised to power 2? Yes! If n is even, just divide n by 2 (n/=2), and square x (x*=x) in each step.\\n\\n\\uD83E\\uDD37\\u200D\\u2642\\uFE0F But what if n is odd, say 2^3? To handle this, we convert it into an even-powered case. We multiply the finalAns by x to account for the extra power, and then you remain with 2^2, which we handle similarly as we do for positive cases.\\n\\n\\uD83E\\uDD13 Now, here\\'s a question for you! Which special case do you need to handle? If the absolute value of n is INT_MIN, you might try to make it positive by -1. But be cautious! This will exceed the int limit. To address this, we use one more long long variable called temp and perform the operation on it.\\n\\nWith this approach, we can efficiently calculate the power of x raised to n without facing any TLE issues. Keep practicing and happy coding! \\uD83D\\uDE04\\uD83D\\uDC4D\\n"
                    },
                    {
                        "username": "Rmsa77",
                        "content": "Couldnt pass this testcase \\nthis is a TLE..!\\nx =\\n2.00000\\nn =\\n-2147483648"
                    },
                    {
                        "username": "Prajjal",
                        "content": "[@ashuranjan003](/ashuranjan003) End the loop immediately when it becomes zero\\n"
                    },
                    {
                        "username": "Prajjal",
                        "content": "End the loop immediately when it becomes zero\\n"
                    },
                    {
                        "username": "ashuranjan003",
                        "content": "same happens to me \\uD83D\\uDE05"
                    },
                    {
                        "username": "vintiduggar26",
                        "content": "my code is satisfying all the test cases. but when i am trying to submit the code it is showing me this error\\nAddressSanitizer:DEADLYSIGNAL\\n=================================================================\\n==34==ERROR: AddressSanitizer: stack-overflow on address 0x7ffe2acafff8 (pc 0x000000343a4b bp 0x7ffe2acb0010 sp 0x7ffe2acb0000 T0)\\n==34==ABORTING"
                    },
                    {
                        "username": "Deepanshu_Chhillar",
                        "content": "This error means either you are  variable is trying to store more value than allocated, basically you can say its stackoverflow. \\n\\nDo check that you are returning zero if variable is exceeding the value.\\n\\nFor eg:\\ndouble p=1;\\n if(p>DBL_MAX)\\n          {\\n              return 0;\\n          }\\n        }"
                    },
                    {
                        "username": "lavankumarganji",
                        "content": "are you check ing all the edg cases ?\\n"
                    },
                    {
                        "username": "user7734BK",
                        "content": "a \"medium\" problem that lets use the pow function?! please add more checks."
                    },
                    {
                        "username": "eduard92",
                        "content": "checks are done at the interview... Like they give you this problem and you have the audacity to write `Math.Pow` and not knowing any other solution."
                    },
                    {
                        "username": "nitin_leetcode",
                        "content": "When I submit the solution, it runs into stackoverflow exception with the inputs:\\nx: 1.00001 \\nn: 123456\\nBut when I run my code for this input, it runs successfully returning the correct answer.\\n"
                    },
                    {
                        "username": "anujpachauri",
                        "content": "return Math.pow(x, n);"
                    },
                    {
                        "username": "kaviyacute",
                        "content": "return pow(x,n);\\n One line answer and is 100% efficient"
                    },
                    {
                        "username": "ProtoDot",
                        "content": "In C++:\\n```C++\\nclass Solution {\\npublic:\\n    double myPow(double x, int n_) {\\n        long long n = n_;\\n        if(n == 0) return 1.0;\\n        if(n < 0)\\n        {\\n            n = -n;\\n            x = 1./x;\\n        }\\n        double res = x;\\n        while(n > 1)\\n        {\\n            res *= res;\\n            res = n % 2 == 0 ? res : res * x;\\n            n >>= 1;\\n        }\\n        return res;\\n    }\\n};\\n```\\nReturns 0.00000 with x = 8.84372 and n = -5 for some reason, and I cannot figure out why. Any help?"
                    }
                ]
            },
            {
                "id": 1572025,
                "content": [
                    {
                        "username": "tomereli",
                        "content": "I\\'m keeping getting Time limit exceeded to a simple brut force implementation not different than the one in the official solution. Any idea why??\\n```\\n    def myPow(self, x: float, n: int) -> float:\\n        result = 1\\n        for i in range(abs(n)):\\n            result *= x\\n        return result if n > 0 else 1/result\\n```"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "[@GodOfm4a1](/GodOfm4a1) Yes, you are right. we can set the base cases and do this recursively."
                    },
                    {
                        "username": "GodOfm4a1",
                        "content": "[@abdulmoomin007](/abdulmoomin007) So we store the results of x^2 , x^4 .... like that, and then build the intended answer?\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "[@YaJohny](/YaJohny) Here\\'s a hint.\\nx*x = x^2, \\nx^2 * x^2 = x^4, \\nx^4*x^4 = x^8\\n....\\nfor x^2147483648, instead of multiplying x with x 2147483648 times, you have to cut down the logic by divide and conquer."
                    },
                    {
                        "username": "YaJohny",
                        "content": "[@abdulmoomin007](/abdulmoomin007) Do you know how to fix that?"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "One of the constraints for n is -2^31 <= n <= 2^31-1. 2^31 is 2147483648. running for loop a billion times would give TLE always."
                    },
                    {
                        "username": "Ebad1001",
                        "content": "I have already solved this question the last month. But now when I am re-submitting my old solution, it\\'s showing _wrong answer_ for certain test cases. It looks like that they have updated and added some new test cases."
                    },
                    {
                        "username": "oops_moment",
                        "content": "LOL WHEN I AM WRITING THIS , WHAT IS SEE IS 8.1K UPVOTES AND 8.1 K DOWNVOTES LOL, but we will do it lesss gooo \\uD83E\\uDD13\\uD83E\\uDD13\\n\\n\\uD83E\\uDD14 We know that naively multiplying x by itself n times would surely lead to a Time Limit Exceeded (TLE) error for larger values of n.\\n\\n\\uD83C\\uDF1F Consider an example, let\\'s find 2^4. Instead of multiplying 2 four times, why not do 2 * 2 raised to power 2? Yes! If n is even, just divide n by 2 (n/=2), and square x (x*=x) in each step.\\n\\n\\uD83E\\uDD37\\u200D\\u2642\\uFE0F But what if n is odd, say 2^3? To handle this, we convert it into an even-powered case. We multiply the finalAns by x to account for the extra power, and then you remain with 2^2, which we handle similarly as we do for positive cases.\\n\\n\\uD83E\\uDD13 Now, here\\'s a question for you! Which special case do you need to handle? If the absolute value of n is INT_MIN, you might try to make it positive by -1. But be cautious! This will exceed the int limit. To address this, we use one more long long variable called temp and perform the operation on it.\\n\\nWith this approach, we can efficiently calculate the power of x raised to n without facing any TLE issues. Keep practicing and happy coding! \\uD83D\\uDE04\\uD83D\\uDC4D\\n"
                    },
                    {
                        "username": "Rmsa77",
                        "content": "Couldnt pass this testcase \\nthis is a TLE..!\\nx =\\n2.00000\\nn =\\n-2147483648"
                    },
                    {
                        "username": "Prajjal",
                        "content": "[@ashuranjan003](/ashuranjan003) End the loop immediately when it becomes zero\\n"
                    },
                    {
                        "username": "Prajjal",
                        "content": "End the loop immediately when it becomes zero\\n"
                    },
                    {
                        "username": "ashuranjan003",
                        "content": "same happens to me \\uD83D\\uDE05"
                    },
                    {
                        "username": "vintiduggar26",
                        "content": "my code is satisfying all the test cases. but when i am trying to submit the code it is showing me this error\\nAddressSanitizer:DEADLYSIGNAL\\n=================================================================\\n==34==ERROR: AddressSanitizer: stack-overflow on address 0x7ffe2acafff8 (pc 0x000000343a4b bp 0x7ffe2acb0010 sp 0x7ffe2acb0000 T0)\\n==34==ABORTING"
                    },
                    {
                        "username": "Deepanshu_Chhillar",
                        "content": "This error means either you are  variable is trying to store more value than allocated, basically you can say its stackoverflow. \\n\\nDo check that you are returning zero if variable is exceeding the value.\\n\\nFor eg:\\ndouble p=1;\\n if(p>DBL_MAX)\\n          {\\n              return 0;\\n          }\\n        }"
                    },
                    {
                        "username": "lavankumarganji",
                        "content": "are you check ing all the edg cases ?\\n"
                    },
                    {
                        "username": "user7734BK",
                        "content": "a \"medium\" problem that lets use the pow function?! please add more checks."
                    },
                    {
                        "username": "eduard92",
                        "content": "checks are done at the interview... Like they give you this problem and you have the audacity to write `Math.Pow` and not knowing any other solution."
                    },
                    {
                        "username": "nitin_leetcode",
                        "content": "When I submit the solution, it runs into stackoverflow exception with the inputs:\\nx: 1.00001 \\nn: 123456\\nBut when I run my code for this input, it runs successfully returning the correct answer.\\n"
                    },
                    {
                        "username": "anujpachauri",
                        "content": "return Math.pow(x, n);"
                    },
                    {
                        "username": "kaviyacute",
                        "content": "return pow(x,n);\\n One line answer and is 100% efficient"
                    },
                    {
                        "username": "ProtoDot",
                        "content": "In C++:\\n```C++\\nclass Solution {\\npublic:\\n    double myPow(double x, int n_) {\\n        long long n = n_;\\n        if(n == 0) return 1.0;\\n        if(n < 0)\\n        {\\n            n = -n;\\n            x = 1./x;\\n        }\\n        double res = x;\\n        while(n > 1)\\n        {\\n            res *= res;\\n            res = n % 2 == 0 ? res : res * x;\\n            n >>= 1;\\n        }\\n        return res;\\n    }\\n};\\n```\\nReturns 0.00000 with x = 8.84372 and n = -5 for some reason, and I cannot figure out why. Any help?"
                    }
                ]
            },
            {
                "id": 1573742,
                "content": [
                    {
                        "username": "tomereli",
                        "content": "I\\'m keeping getting Time limit exceeded to a simple brut force implementation not different than the one in the official solution. Any idea why??\\n```\\n    def myPow(self, x: float, n: int) -> float:\\n        result = 1\\n        for i in range(abs(n)):\\n            result *= x\\n        return result if n > 0 else 1/result\\n```"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "[@GodOfm4a1](/GodOfm4a1) Yes, you are right. we can set the base cases and do this recursively."
                    },
                    {
                        "username": "GodOfm4a1",
                        "content": "[@abdulmoomin007](/abdulmoomin007) So we store the results of x^2 , x^4 .... like that, and then build the intended answer?\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "[@YaJohny](/YaJohny) Here\\'s a hint.\\nx*x = x^2, \\nx^2 * x^2 = x^4, \\nx^4*x^4 = x^8\\n....\\nfor x^2147483648, instead of multiplying x with x 2147483648 times, you have to cut down the logic by divide and conquer."
                    },
                    {
                        "username": "YaJohny",
                        "content": "[@abdulmoomin007](/abdulmoomin007) Do you know how to fix that?"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "One of the constraints for n is -2^31 <= n <= 2^31-1. 2^31 is 2147483648. running for loop a billion times would give TLE always."
                    },
                    {
                        "username": "Ebad1001",
                        "content": "I have already solved this question the last month. But now when I am re-submitting my old solution, it\\'s showing _wrong answer_ for certain test cases. It looks like that they have updated and added some new test cases."
                    },
                    {
                        "username": "oops_moment",
                        "content": "LOL WHEN I AM WRITING THIS , WHAT IS SEE IS 8.1K UPVOTES AND 8.1 K DOWNVOTES LOL, but we will do it lesss gooo \\uD83E\\uDD13\\uD83E\\uDD13\\n\\n\\uD83E\\uDD14 We know that naively multiplying x by itself n times would surely lead to a Time Limit Exceeded (TLE) error for larger values of n.\\n\\n\\uD83C\\uDF1F Consider an example, let\\'s find 2^4. Instead of multiplying 2 four times, why not do 2 * 2 raised to power 2? Yes! If n is even, just divide n by 2 (n/=2), and square x (x*=x) in each step.\\n\\n\\uD83E\\uDD37\\u200D\\u2642\\uFE0F But what if n is odd, say 2^3? To handle this, we convert it into an even-powered case. We multiply the finalAns by x to account for the extra power, and then you remain with 2^2, which we handle similarly as we do for positive cases.\\n\\n\\uD83E\\uDD13 Now, here\\'s a question for you! Which special case do you need to handle? If the absolute value of n is INT_MIN, you might try to make it positive by -1. But be cautious! This will exceed the int limit. To address this, we use one more long long variable called temp and perform the operation on it.\\n\\nWith this approach, we can efficiently calculate the power of x raised to n without facing any TLE issues. Keep practicing and happy coding! \\uD83D\\uDE04\\uD83D\\uDC4D\\n"
                    },
                    {
                        "username": "Rmsa77",
                        "content": "Couldnt pass this testcase \\nthis is a TLE..!\\nx =\\n2.00000\\nn =\\n-2147483648"
                    },
                    {
                        "username": "Prajjal",
                        "content": "[@ashuranjan003](/ashuranjan003) End the loop immediately when it becomes zero\\n"
                    },
                    {
                        "username": "Prajjal",
                        "content": "End the loop immediately when it becomes zero\\n"
                    },
                    {
                        "username": "ashuranjan003",
                        "content": "same happens to me \\uD83D\\uDE05"
                    },
                    {
                        "username": "vintiduggar26",
                        "content": "my code is satisfying all the test cases. but when i am trying to submit the code it is showing me this error\\nAddressSanitizer:DEADLYSIGNAL\\n=================================================================\\n==34==ERROR: AddressSanitizer: stack-overflow on address 0x7ffe2acafff8 (pc 0x000000343a4b bp 0x7ffe2acb0010 sp 0x7ffe2acb0000 T0)\\n==34==ABORTING"
                    },
                    {
                        "username": "Deepanshu_Chhillar",
                        "content": "This error means either you are  variable is trying to store more value than allocated, basically you can say its stackoverflow. \\n\\nDo check that you are returning zero if variable is exceeding the value.\\n\\nFor eg:\\ndouble p=1;\\n if(p>DBL_MAX)\\n          {\\n              return 0;\\n          }\\n        }"
                    },
                    {
                        "username": "lavankumarganji",
                        "content": "are you check ing all the edg cases ?\\n"
                    },
                    {
                        "username": "user7734BK",
                        "content": "a \"medium\" problem that lets use the pow function?! please add more checks."
                    },
                    {
                        "username": "eduard92",
                        "content": "checks are done at the interview... Like they give you this problem and you have the audacity to write `Math.Pow` and not knowing any other solution."
                    },
                    {
                        "username": "nitin_leetcode",
                        "content": "When I submit the solution, it runs into stackoverflow exception with the inputs:\\nx: 1.00001 \\nn: 123456\\nBut when I run my code for this input, it runs successfully returning the correct answer.\\n"
                    },
                    {
                        "username": "anujpachauri",
                        "content": "return Math.pow(x, n);"
                    },
                    {
                        "username": "kaviyacute",
                        "content": "return pow(x,n);\\n One line answer and is 100% efficient"
                    },
                    {
                        "username": "ProtoDot",
                        "content": "In C++:\\n```C++\\nclass Solution {\\npublic:\\n    double myPow(double x, int n_) {\\n        long long n = n_;\\n        if(n == 0) return 1.0;\\n        if(n < 0)\\n        {\\n            n = -n;\\n            x = 1./x;\\n        }\\n        double res = x;\\n        while(n > 1)\\n        {\\n            res *= res;\\n            res = n % 2 == 0 ? res : res * x;\\n            n >>= 1;\\n        }\\n        return res;\\n    }\\n};\\n```\\nReturns 0.00000 with x = 8.84372 and n = -5 for some reason, and I cannot figure out why. Any help?"
                    }
                ]
            },
            {
                "id": 1572657,
                "content": [
                    {
                        "username": "tomereli",
                        "content": "I\\'m keeping getting Time limit exceeded to a simple brut force implementation not different than the one in the official solution. Any idea why??\\n```\\n    def myPow(self, x: float, n: int) -> float:\\n        result = 1\\n        for i in range(abs(n)):\\n            result *= x\\n        return result if n > 0 else 1/result\\n```"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "[@GodOfm4a1](/GodOfm4a1) Yes, you are right. we can set the base cases and do this recursively."
                    },
                    {
                        "username": "GodOfm4a1",
                        "content": "[@abdulmoomin007](/abdulmoomin007) So we store the results of x^2 , x^4 .... like that, and then build the intended answer?\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "[@YaJohny](/YaJohny) Here\\'s a hint.\\nx*x = x^2, \\nx^2 * x^2 = x^4, \\nx^4*x^4 = x^8\\n....\\nfor x^2147483648, instead of multiplying x with x 2147483648 times, you have to cut down the logic by divide and conquer."
                    },
                    {
                        "username": "YaJohny",
                        "content": "[@abdulmoomin007](/abdulmoomin007) Do you know how to fix that?"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "One of the constraints for n is -2^31 <= n <= 2^31-1. 2^31 is 2147483648. running for loop a billion times would give TLE always."
                    },
                    {
                        "username": "Ebad1001",
                        "content": "I have already solved this question the last month. But now when I am re-submitting my old solution, it\\'s showing _wrong answer_ for certain test cases. It looks like that they have updated and added some new test cases."
                    },
                    {
                        "username": "oops_moment",
                        "content": "LOL WHEN I AM WRITING THIS , WHAT IS SEE IS 8.1K UPVOTES AND 8.1 K DOWNVOTES LOL, but we will do it lesss gooo \\uD83E\\uDD13\\uD83E\\uDD13\\n\\n\\uD83E\\uDD14 We know that naively multiplying x by itself n times would surely lead to a Time Limit Exceeded (TLE) error for larger values of n.\\n\\n\\uD83C\\uDF1F Consider an example, let\\'s find 2^4. Instead of multiplying 2 four times, why not do 2 * 2 raised to power 2? Yes! If n is even, just divide n by 2 (n/=2), and square x (x*=x) in each step.\\n\\n\\uD83E\\uDD37\\u200D\\u2642\\uFE0F But what if n is odd, say 2^3? To handle this, we convert it into an even-powered case. We multiply the finalAns by x to account for the extra power, and then you remain with 2^2, which we handle similarly as we do for positive cases.\\n\\n\\uD83E\\uDD13 Now, here\\'s a question for you! Which special case do you need to handle? If the absolute value of n is INT_MIN, you might try to make it positive by -1. But be cautious! This will exceed the int limit. To address this, we use one more long long variable called temp and perform the operation on it.\\n\\nWith this approach, we can efficiently calculate the power of x raised to n without facing any TLE issues. Keep practicing and happy coding! \\uD83D\\uDE04\\uD83D\\uDC4D\\n"
                    },
                    {
                        "username": "Rmsa77",
                        "content": "Couldnt pass this testcase \\nthis is a TLE..!\\nx =\\n2.00000\\nn =\\n-2147483648"
                    },
                    {
                        "username": "Prajjal",
                        "content": "[@ashuranjan003](/ashuranjan003) End the loop immediately when it becomes zero\\n"
                    },
                    {
                        "username": "Prajjal",
                        "content": "End the loop immediately when it becomes zero\\n"
                    },
                    {
                        "username": "ashuranjan003",
                        "content": "same happens to me \\uD83D\\uDE05"
                    },
                    {
                        "username": "vintiduggar26",
                        "content": "my code is satisfying all the test cases. but when i am trying to submit the code it is showing me this error\\nAddressSanitizer:DEADLYSIGNAL\\n=================================================================\\n==34==ERROR: AddressSanitizer: stack-overflow on address 0x7ffe2acafff8 (pc 0x000000343a4b bp 0x7ffe2acb0010 sp 0x7ffe2acb0000 T0)\\n==34==ABORTING"
                    },
                    {
                        "username": "Deepanshu_Chhillar",
                        "content": "This error means either you are  variable is trying to store more value than allocated, basically you can say its stackoverflow. \\n\\nDo check that you are returning zero if variable is exceeding the value.\\n\\nFor eg:\\ndouble p=1;\\n if(p>DBL_MAX)\\n          {\\n              return 0;\\n          }\\n        }"
                    },
                    {
                        "username": "lavankumarganji",
                        "content": "are you check ing all the edg cases ?\\n"
                    },
                    {
                        "username": "user7734BK",
                        "content": "a \"medium\" problem that lets use the pow function?! please add more checks."
                    },
                    {
                        "username": "eduard92",
                        "content": "checks are done at the interview... Like they give you this problem and you have the audacity to write `Math.Pow` and not knowing any other solution."
                    },
                    {
                        "username": "nitin_leetcode",
                        "content": "When I submit the solution, it runs into stackoverflow exception with the inputs:\\nx: 1.00001 \\nn: 123456\\nBut when I run my code for this input, it runs successfully returning the correct answer.\\n"
                    },
                    {
                        "username": "anujpachauri",
                        "content": "return Math.pow(x, n);"
                    },
                    {
                        "username": "kaviyacute",
                        "content": "return pow(x,n);\\n One line answer and is 100% efficient"
                    },
                    {
                        "username": "ProtoDot",
                        "content": "In C++:\\n```C++\\nclass Solution {\\npublic:\\n    double myPow(double x, int n_) {\\n        long long n = n_;\\n        if(n == 0) return 1.0;\\n        if(n < 0)\\n        {\\n            n = -n;\\n            x = 1./x;\\n        }\\n        double res = x;\\n        while(n > 1)\\n        {\\n            res *= res;\\n            res = n % 2 == 0 ? res : res * x;\\n            n >>= 1;\\n        }\\n        return res;\\n    }\\n};\\n```\\nReturns 0.00000 with x = 8.84372 and n = -5 for some reason, and I cannot figure out why. Any help?"
                    }
                ]
            },
            {
                "id": 2014670,
                "content": [
                    {
                        "username": "tomereli",
                        "content": "I\\'m keeping getting Time limit exceeded to a simple brut force implementation not different than the one in the official solution. Any idea why??\\n```\\n    def myPow(self, x: float, n: int) -> float:\\n        result = 1\\n        for i in range(abs(n)):\\n            result *= x\\n        return result if n > 0 else 1/result\\n```"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "[@GodOfm4a1](/GodOfm4a1) Yes, you are right. we can set the base cases and do this recursively."
                    },
                    {
                        "username": "GodOfm4a1",
                        "content": "[@abdulmoomin007](/abdulmoomin007) So we store the results of x^2 , x^4 .... like that, and then build the intended answer?\\n"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "[@YaJohny](/YaJohny) Here\\'s a hint.\\nx*x = x^2, \\nx^2 * x^2 = x^4, \\nx^4*x^4 = x^8\\n....\\nfor x^2147483648, instead of multiplying x with x 2147483648 times, you have to cut down the logic by divide and conquer."
                    },
                    {
                        "username": "YaJohny",
                        "content": "[@abdulmoomin007](/abdulmoomin007) Do you know how to fix that?"
                    },
                    {
                        "username": "abdulmoomin007",
                        "content": "One of the constraints for n is -2^31 <= n <= 2^31-1. 2^31 is 2147483648. running for loop a billion times would give TLE always."
                    },
                    {
                        "username": "Ebad1001",
                        "content": "I have already solved this question the last month. But now when I am re-submitting my old solution, it\\'s showing _wrong answer_ for certain test cases. It looks like that they have updated and added some new test cases."
                    },
                    {
                        "username": "oops_moment",
                        "content": "LOL WHEN I AM WRITING THIS , WHAT IS SEE IS 8.1K UPVOTES AND 8.1 K DOWNVOTES LOL, but we will do it lesss gooo \\uD83E\\uDD13\\uD83E\\uDD13\\n\\n\\uD83E\\uDD14 We know that naively multiplying x by itself n times would surely lead to a Time Limit Exceeded (TLE) error for larger values of n.\\n\\n\\uD83C\\uDF1F Consider an example, let\\'s find 2^4. Instead of multiplying 2 four times, why not do 2 * 2 raised to power 2? Yes! If n is even, just divide n by 2 (n/=2), and square x (x*=x) in each step.\\n\\n\\uD83E\\uDD37\\u200D\\u2642\\uFE0F But what if n is odd, say 2^3? To handle this, we convert it into an even-powered case. We multiply the finalAns by x to account for the extra power, and then you remain with 2^2, which we handle similarly as we do for positive cases.\\n\\n\\uD83E\\uDD13 Now, here\\'s a question for you! Which special case do you need to handle? If the absolute value of n is INT_MIN, you might try to make it positive by -1. But be cautious! This will exceed the int limit. To address this, we use one more long long variable called temp and perform the operation on it.\\n\\nWith this approach, we can efficiently calculate the power of x raised to n without facing any TLE issues. Keep practicing and happy coding! \\uD83D\\uDE04\\uD83D\\uDC4D\\n"
                    },
                    {
                        "username": "Rmsa77",
                        "content": "Couldnt pass this testcase \\nthis is a TLE..!\\nx =\\n2.00000\\nn =\\n-2147483648"
                    },
                    {
                        "username": "Prajjal",
                        "content": "[@ashuranjan003](/ashuranjan003) End the loop immediately when it becomes zero\\n"
                    },
                    {
                        "username": "Prajjal",
                        "content": "End the loop immediately when it becomes zero\\n"
                    },
                    {
                        "username": "ashuranjan003",
                        "content": "same happens to me \\uD83D\\uDE05"
                    },
                    {
                        "username": "vintiduggar26",
                        "content": "my code is satisfying all the test cases. but when i am trying to submit the code it is showing me this error\\nAddressSanitizer:DEADLYSIGNAL\\n=================================================================\\n==34==ERROR: AddressSanitizer: stack-overflow on address 0x7ffe2acafff8 (pc 0x000000343a4b bp 0x7ffe2acb0010 sp 0x7ffe2acb0000 T0)\\n==34==ABORTING"
                    },
                    {
                        "username": "Deepanshu_Chhillar",
                        "content": "This error means either you are  variable is trying to store more value than allocated, basically you can say its stackoverflow. \\n\\nDo check that you are returning zero if variable is exceeding the value.\\n\\nFor eg:\\ndouble p=1;\\n if(p>DBL_MAX)\\n          {\\n              return 0;\\n          }\\n        }"
                    },
                    {
                        "username": "lavankumarganji",
                        "content": "are you check ing all the edg cases ?\\n"
                    },
                    {
                        "username": "user7734BK",
                        "content": "a \"medium\" problem that lets use the pow function?! please add more checks."
                    },
                    {
                        "username": "eduard92",
                        "content": "checks are done at the interview... Like they give you this problem and you have the audacity to write `Math.Pow` and not knowing any other solution."
                    },
                    {
                        "username": "nitin_leetcode",
                        "content": "When I submit the solution, it runs into stackoverflow exception with the inputs:\\nx: 1.00001 \\nn: 123456\\nBut when I run my code for this input, it runs successfully returning the correct answer.\\n"
                    },
                    {
                        "username": "anujpachauri",
                        "content": "return Math.pow(x, n);"
                    },
                    {
                        "username": "kaviyacute",
                        "content": "return pow(x,n);\\n One line answer and is 100% efficient"
                    },
                    {
                        "username": "ProtoDot",
                        "content": "In C++:\\n```C++\\nclass Solution {\\npublic:\\n    double myPow(double x, int n_) {\\n        long long n = n_;\\n        if(n == 0) return 1.0;\\n        if(n < 0)\\n        {\\n            n = -n;\\n            x = 1./x;\\n        }\\n        double res = x;\\n        while(n > 1)\\n        {\\n            res *= res;\\n            res = n % 2 == 0 ? res : res * x;\\n            n >>= 1;\\n        }\\n        return res;\\n    }\\n};\\n```\\nReturns 0.00000 with x = 8.84372 and n = -5 for some reason, and I cannot figure out why. Any help?"
                    }
                ]
            },
            {
                "id": 2006411,
                "content": [
                    {
                        "username": "Rahul_108",
                        "content": "Mood Off  :(\\nx = 0.00001\\nn = 2147483647"
                    },
                    {
                        "username": "RishabhMishra2710",
                        "content": "Someone just hates society \\nn = INT_MIN & x = 1.0000000000001 wtf !!"
                    },
                    {
                        "username": "KingShuK17",
                        "content": "binary exponentiation  :)\\njust a little clue!"
                    },
                    {
                        "username": "Rishipandey14",
                        "content": "return x**n"
                    },
                    {
                        "username": "Mohit_Jariwala",
                        "content": "When interviewer has personal issues with you"
                    },
                    {
                        "username": "psionl0",
                        "content": "Without giving too much away (the editorial does that) one way to deal with the edge cases where n = -2147483648 is as follows:\n```\n   if (n < 0) {\n       return myPow(1 / x, -(n+1)) / x;\n   } . . .\n```\nIf you are coding an iterative solution then you can deal with the edge case like this:\n```\n   double div = 1.0, result = 1.0;\n   if (n < 0) {\n       div = x;\n       x = 1/x;\n       n = -(n+1);\n   } . . .\n```\nAt the end of the computations, return ``result / div``."
                    },
                    {
                        "username": "psionl0",
                        "content": "[@breathermachine](/breathermachine) Changing the arguments like that is cheating. Since the arguments are a double and an integer, these are what we have to work with (although you can cast the integer into a double if you are not using recursion)."
                    },
                    {
                        "username": "breathermachine",
                        "content": "[@psionl0](/psionl0) Or you can just promote the exponent's type to a long, and virtually the same binary exponentiation algorithm will still work https://leetcode.com/problems/powx-n/submissions/1002575265/"
                    },
                    {
                        "username": "psionl0",
                        "content": "[@charonme](/charonme) Fancy that! Thanks for that edge case. I have now deleted my edit."
                    },
                    {
                        "username": "charonme",
                        "content": "except 1.0000000000001 ^ (-2147483648) expects 0.99979"
                    },
                    {
                        "username": "supervaka",
                        "content": "is there a similar implement log(b, x) kind of problem?"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "y4cj4sul3",
                        "content": "I was just testing some cases using C++ and accidentally found something weird when I do `abs()` on the input argument `n` when `n = -2147483648`. \\n\\nThe expected return value of `abs(INT_MIN)` should be `INT_MIN` because of the 2\\'s complement representation, and I did get `-2147483648` as I printed `abs(n)` out. However, when I try to divide `n` by 2 after that, I got `1073741824`  instead of `-1073741824`.\\n\\nSo I try out several things as shown in the picture below. It seems that `n` is actually converted to positive by `abs()` but in a 64-bit manner.\\n\\n![image](https://assets.leetcode.com/users/images/16ee1a6c-6168-4f7b-8ef7-379dd32d9ace_1648312777.6464503.png)\\n\\nHowever, if one assigns `INT_MIN` to `n` in the code rather than in the leetcode console, it becomes normal as what `a` behaved in the picture. Also, I test it out on my computer and everything works fine. So I guess the problem is happening when the leetcode feeds testcases from the console to the code. Any idea of that?"
                    },
                    {
                        "username": "yuv",
                        "content": "Well, I\\'ve got the reason behind the weirdness. It\\'s lied in the range of a signed integer. The range is [-2147483648 to 2147483647]. So, if we try to do the `abs()` operation on the `INT_MIN` then it won\\'t be possible to fit in `int` range. Because the INT_MAX value is one less than that. To avoid it you must store the power value in a `long` type variable. Then it would behave normally."
                    },
                    {
                        "username": "yuv",
                        "content": "It\\'s weird behavior. It\\'s still showing `n` as negative after `abs()` operation. But it is returning true for the `n > 0` condition. "
                    },
                    {
                        "username": "yixuan5",
                        "content": "It is not specific to algorithm, but more for corner case.\\n\\nUse recursion, but it is slower than while loop."
                    }
                ]
            },
            {
                "id": 1984398,
                "content": [
                    {
                        "username": "Rahul_108",
                        "content": "Mood Off  :(\\nx = 0.00001\\nn = 2147483647"
                    },
                    {
                        "username": "RishabhMishra2710",
                        "content": "Someone just hates society \\nn = INT_MIN & x = 1.0000000000001 wtf !!"
                    },
                    {
                        "username": "KingShuK17",
                        "content": "binary exponentiation  :)\\njust a little clue!"
                    },
                    {
                        "username": "Rishipandey14",
                        "content": "return x**n"
                    },
                    {
                        "username": "Mohit_Jariwala",
                        "content": "When interviewer has personal issues with you"
                    },
                    {
                        "username": "psionl0",
                        "content": "Without giving too much away (the editorial does that) one way to deal with the edge cases where n = -2147483648 is as follows:\n```\n   if (n < 0) {\n       return myPow(1 / x, -(n+1)) / x;\n   } . . .\n```\nIf you are coding an iterative solution then you can deal with the edge case like this:\n```\n   double div = 1.0, result = 1.0;\n   if (n < 0) {\n       div = x;\n       x = 1/x;\n       n = -(n+1);\n   } . . .\n```\nAt the end of the computations, return ``result / div``."
                    },
                    {
                        "username": "psionl0",
                        "content": "[@breathermachine](/breathermachine) Changing the arguments like that is cheating. Since the arguments are a double and an integer, these are what we have to work with (although you can cast the integer into a double if you are not using recursion)."
                    },
                    {
                        "username": "breathermachine",
                        "content": "[@psionl0](/psionl0) Or you can just promote the exponent's type to a long, and virtually the same binary exponentiation algorithm will still work https://leetcode.com/problems/powx-n/submissions/1002575265/"
                    },
                    {
                        "username": "psionl0",
                        "content": "[@charonme](/charonme) Fancy that! Thanks for that edge case. I have now deleted my edit."
                    },
                    {
                        "username": "charonme",
                        "content": "except 1.0000000000001 ^ (-2147483648) expects 0.99979"
                    },
                    {
                        "username": "supervaka",
                        "content": "is there a similar implement log(b, x) kind of problem?"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "y4cj4sul3",
                        "content": "I was just testing some cases using C++ and accidentally found something weird when I do `abs()` on the input argument `n` when `n = -2147483648`. \\n\\nThe expected return value of `abs(INT_MIN)` should be `INT_MIN` because of the 2\\'s complement representation, and I did get `-2147483648` as I printed `abs(n)` out. However, when I try to divide `n` by 2 after that, I got `1073741824`  instead of `-1073741824`.\\n\\nSo I try out several things as shown in the picture below. It seems that `n` is actually converted to positive by `abs()` but in a 64-bit manner.\\n\\n![image](https://assets.leetcode.com/users/images/16ee1a6c-6168-4f7b-8ef7-379dd32d9ace_1648312777.6464503.png)\\n\\nHowever, if one assigns `INT_MIN` to `n` in the code rather than in the leetcode console, it becomes normal as what `a` behaved in the picture. Also, I test it out on my computer and everything works fine. So I guess the problem is happening when the leetcode feeds testcases from the console to the code. Any idea of that?"
                    },
                    {
                        "username": "yuv",
                        "content": "Well, I\\'ve got the reason behind the weirdness. It\\'s lied in the range of a signed integer. The range is [-2147483648 to 2147483647]. So, if we try to do the `abs()` operation on the `INT_MIN` then it won\\'t be possible to fit in `int` range. Because the INT_MAX value is one less than that. To avoid it you must store the power value in a `long` type variable. Then it would behave normally."
                    },
                    {
                        "username": "yuv",
                        "content": "It\\'s weird behavior. It\\'s still showing `n` as negative after `abs()` operation. But it is returning true for the `n > 0` condition. "
                    },
                    {
                        "username": "yixuan5",
                        "content": "It is not specific to algorithm, but more for corner case.\\n\\nUse recursion, but it is slower than while loop."
                    }
                ]
            },
            {
                "id": 1984113,
                "content": [
                    {
                        "username": "Rahul_108",
                        "content": "Mood Off  :(\\nx = 0.00001\\nn = 2147483647"
                    },
                    {
                        "username": "RishabhMishra2710",
                        "content": "Someone just hates society \\nn = INT_MIN & x = 1.0000000000001 wtf !!"
                    },
                    {
                        "username": "KingShuK17",
                        "content": "binary exponentiation  :)\\njust a little clue!"
                    },
                    {
                        "username": "Rishipandey14",
                        "content": "return x**n"
                    },
                    {
                        "username": "Mohit_Jariwala",
                        "content": "When interviewer has personal issues with you"
                    },
                    {
                        "username": "psionl0",
                        "content": "Without giving too much away (the editorial does that) one way to deal with the edge cases where n = -2147483648 is as follows:\n```\n   if (n < 0) {\n       return myPow(1 / x, -(n+1)) / x;\n   } . . .\n```\nIf you are coding an iterative solution then you can deal with the edge case like this:\n```\n   double div = 1.0, result = 1.0;\n   if (n < 0) {\n       div = x;\n       x = 1/x;\n       n = -(n+1);\n   } . . .\n```\nAt the end of the computations, return ``result / div``."
                    },
                    {
                        "username": "psionl0",
                        "content": "[@breathermachine](/breathermachine) Changing the arguments like that is cheating. Since the arguments are a double and an integer, these are what we have to work with (although you can cast the integer into a double if you are not using recursion)."
                    },
                    {
                        "username": "breathermachine",
                        "content": "[@psionl0](/psionl0) Or you can just promote the exponent's type to a long, and virtually the same binary exponentiation algorithm will still work https://leetcode.com/problems/powx-n/submissions/1002575265/"
                    },
                    {
                        "username": "psionl0",
                        "content": "[@charonme](/charonme) Fancy that! Thanks for that edge case. I have now deleted my edit."
                    },
                    {
                        "username": "charonme",
                        "content": "except 1.0000000000001 ^ (-2147483648) expects 0.99979"
                    },
                    {
                        "username": "supervaka",
                        "content": "is there a similar implement log(b, x) kind of problem?"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "y4cj4sul3",
                        "content": "I was just testing some cases using C++ and accidentally found something weird when I do `abs()` on the input argument `n` when `n = -2147483648`. \\n\\nThe expected return value of `abs(INT_MIN)` should be `INT_MIN` because of the 2\\'s complement representation, and I did get `-2147483648` as I printed `abs(n)` out. However, when I try to divide `n` by 2 after that, I got `1073741824`  instead of `-1073741824`.\\n\\nSo I try out several things as shown in the picture below. It seems that `n` is actually converted to positive by `abs()` but in a 64-bit manner.\\n\\n![image](https://assets.leetcode.com/users/images/16ee1a6c-6168-4f7b-8ef7-379dd32d9ace_1648312777.6464503.png)\\n\\nHowever, if one assigns `INT_MIN` to `n` in the code rather than in the leetcode console, it becomes normal as what `a` behaved in the picture. Also, I test it out on my computer and everything works fine. So I guess the problem is happening when the leetcode feeds testcases from the console to the code. Any idea of that?"
                    },
                    {
                        "username": "yuv",
                        "content": "Well, I\\'ve got the reason behind the weirdness. It\\'s lied in the range of a signed integer. The range is [-2147483648 to 2147483647]. So, if we try to do the `abs()` operation on the `INT_MIN` then it won\\'t be possible to fit in `int` range. Because the INT_MAX value is one less than that. To avoid it you must store the power value in a `long` type variable. Then it would behave normally."
                    },
                    {
                        "username": "yuv",
                        "content": "It\\'s weird behavior. It\\'s still showing `n` as negative after `abs()` operation. But it is returning true for the `n > 0` condition. "
                    },
                    {
                        "username": "yixuan5",
                        "content": "It is not specific to algorithm, but more for corner case.\\n\\nUse recursion, but it is slower than while loop."
                    }
                ]
            },
            {
                "id": 1983839,
                "content": [
                    {
                        "username": "Rahul_108",
                        "content": "Mood Off  :(\\nx = 0.00001\\nn = 2147483647"
                    },
                    {
                        "username": "RishabhMishra2710",
                        "content": "Someone just hates society \\nn = INT_MIN & x = 1.0000000000001 wtf !!"
                    },
                    {
                        "username": "KingShuK17",
                        "content": "binary exponentiation  :)\\njust a little clue!"
                    },
                    {
                        "username": "Rishipandey14",
                        "content": "return x**n"
                    },
                    {
                        "username": "Mohit_Jariwala",
                        "content": "When interviewer has personal issues with you"
                    },
                    {
                        "username": "psionl0",
                        "content": "Without giving too much away (the editorial does that) one way to deal with the edge cases where n = -2147483648 is as follows:\n```\n   if (n < 0) {\n       return myPow(1 / x, -(n+1)) / x;\n   } . . .\n```\nIf you are coding an iterative solution then you can deal with the edge case like this:\n```\n   double div = 1.0, result = 1.0;\n   if (n < 0) {\n       div = x;\n       x = 1/x;\n       n = -(n+1);\n   } . . .\n```\nAt the end of the computations, return ``result / div``."
                    },
                    {
                        "username": "psionl0",
                        "content": "[@breathermachine](/breathermachine) Changing the arguments like that is cheating. Since the arguments are a double and an integer, these are what we have to work with (although you can cast the integer into a double if you are not using recursion)."
                    },
                    {
                        "username": "breathermachine",
                        "content": "[@psionl0](/psionl0) Or you can just promote the exponent's type to a long, and virtually the same binary exponentiation algorithm will still work https://leetcode.com/problems/powx-n/submissions/1002575265/"
                    },
                    {
                        "username": "psionl0",
                        "content": "[@charonme](/charonme) Fancy that! Thanks for that edge case. I have now deleted my edit."
                    },
                    {
                        "username": "charonme",
                        "content": "except 1.0000000000001 ^ (-2147483648) expects 0.99979"
                    },
                    {
                        "username": "supervaka",
                        "content": "is there a similar implement log(b, x) kind of problem?"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "y4cj4sul3",
                        "content": "I was just testing some cases using C++ and accidentally found something weird when I do `abs()` on the input argument `n` when `n = -2147483648`. \\n\\nThe expected return value of `abs(INT_MIN)` should be `INT_MIN` because of the 2\\'s complement representation, and I did get `-2147483648` as I printed `abs(n)` out. However, when I try to divide `n` by 2 after that, I got `1073741824`  instead of `-1073741824`.\\n\\nSo I try out several things as shown in the picture below. It seems that `n` is actually converted to positive by `abs()` but in a 64-bit manner.\\n\\n![image](https://assets.leetcode.com/users/images/16ee1a6c-6168-4f7b-8ef7-379dd32d9ace_1648312777.6464503.png)\\n\\nHowever, if one assigns `INT_MIN` to `n` in the code rather than in the leetcode console, it becomes normal as what `a` behaved in the picture. Also, I test it out on my computer and everything works fine. So I guess the problem is happening when the leetcode feeds testcases from the console to the code. Any idea of that?"
                    },
                    {
                        "username": "yuv",
                        "content": "Well, I\\'ve got the reason behind the weirdness. It\\'s lied in the range of a signed integer. The range is [-2147483648 to 2147483647]. So, if we try to do the `abs()` operation on the `INT_MIN` then it won\\'t be possible to fit in `int` range. Because the INT_MAX value is one less than that. To avoid it you must store the power value in a `long` type variable. Then it would behave normally."
                    },
                    {
                        "username": "yuv",
                        "content": "It\\'s weird behavior. It\\'s still showing `n` as negative after `abs()` operation. But it is returning true for the `n > 0` condition. "
                    },
                    {
                        "username": "yixuan5",
                        "content": "It is not specific to algorithm, but more for corner case.\\n\\nUse recursion, but it is slower than while loop."
                    }
                ]
            },
            {
                "id": 1983818,
                "content": [
                    {
                        "username": "Rahul_108",
                        "content": "Mood Off  :(\\nx = 0.00001\\nn = 2147483647"
                    },
                    {
                        "username": "RishabhMishra2710",
                        "content": "Someone just hates society \\nn = INT_MIN & x = 1.0000000000001 wtf !!"
                    },
                    {
                        "username": "KingShuK17",
                        "content": "binary exponentiation  :)\\njust a little clue!"
                    },
                    {
                        "username": "Rishipandey14",
                        "content": "return x**n"
                    },
                    {
                        "username": "Mohit_Jariwala",
                        "content": "When interviewer has personal issues with you"
                    },
                    {
                        "username": "psionl0",
                        "content": "Without giving too much away (the editorial does that) one way to deal with the edge cases where n = -2147483648 is as follows:\n```\n   if (n < 0) {\n       return myPow(1 / x, -(n+1)) / x;\n   } . . .\n```\nIf you are coding an iterative solution then you can deal with the edge case like this:\n```\n   double div = 1.0, result = 1.0;\n   if (n < 0) {\n       div = x;\n       x = 1/x;\n       n = -(n+1);\n   } . . .\n```\nAt the end of the computations, return ``result / div``."
                    },
                    {
                        "username": "psionl0",
                        "content": "[@breathermachine](/breathermachine) Changing the arguments like that is cheating. Since the arguments are a double and an integer, these are what we have to work with (although you can cast the integer into a double if you are not using recursion)."
                    },
                    {
                        "username": "breathermachine",
                        "content": "[@psionl0](/psionl0) Or you can just promote the exponent's type to a long, and virtually the same binary exponentiation algorithm will still work https://leetcode.com/problems/powx-n/submissions/1002575265/"
                    },
                    {
                        "username": "psionl0",
                        "content": "[@charonme](/charonme) Fancy that! Thanks for that edge case. I have now deleted my edit."
                    },
                    {
                        "username": "charonme",
                        "content": "except 1.0000000000001 ^ (-2147483648) expects 0.99979"
                    },
                    {
                        "username": "supervaka",
                        "content": "is there a similar implement log(b, x) kind of problem?"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "y4cj4sul3",
                        "content": "I was just testing some cases using C++ and accidentally found something weird when I do `abs()` on the input argument `n` when `n = -2147483648`. \\n\\nThe expected return value of `abs(INT_MIN)` should be `INT_MIN` because of the 2\\'s complement representation, and I did get `-2147483648` as I printed `abs(n)` out. However, when I try to divide `n` by 2 after that, I got `1073741824`  instead of `-1073741824`.\\n\\nSo I try out several things as shown in the picture below. It seems that `n` is actually converted to positive by `abs()` but in a 64-bit manner.\\n\\n![image](https://assets.leetcode.com/users/images/16ee1a6c-6168-4f7b-8ef7-379dd32d9ace_1648312777.6464503.png)\\n\\nHowever, if one assigns `INT_MIN` to `n` in the code rather than in the leetcode console, it becomes normal as what `a` behaved in the picture. Also, I test it out on my computer and everything works fine. So I guess the problem is happening when the leetcode feeds testcases from the console to the code. Any idea of that?"
                    },
                    {
                        "username": "yuv",
                        "content": "Well, I\\'ve got the reason behind the weirdness. It\\'s lied in the range of a signed integer. The range is [-2147483648 to 2147483647]. So, if we try to do the `abs()` operation on the `INT_MIN` then it won\\'t be possible to fit in `int` range. Because the INT_MAX value is one less than that. To avoid it you must store the power value in a `long` type variable. Then it would behave normally."
                    },
                    {
                        "username": "yuv",
                        "content": "It\\'s weird behavior. It\\'s still showing `n` as negative after `abs()` operation. But it is returning true for the `n > 0` condition. "
                    },
                    {
                        "username": "yixuan5",
                        "content": "It is not specific to algorithm, but more for corner case.\\n\\nUse recursion, but it is slower than while loop."
                    }
                ]
            },
            {
                "id": 1983632,
                "content": [
                    {
                        "username": "Rahul_108",
                        "content": "Mood Off  :(\\nx = 0.00001\\nn = 2147483647"
                    },
                    {
                        "username": "RishabhMishra2710",
                        "content": "Someone just hates society \\nn = INT_MIN & x = 1.0000000000001 wtf !!"
                    },
                    {
                        "username": "KingShuK17",
                        "content": "binary exponentiation  :)\\njust a little clue!"
                    },
                    {
                        "username": "Rishipandey14",
                        "content": "return x**n"
                    },
                    {
                        "username": "Mohit_Jariwala",
                        "content": "When interviewer has personal issues with you"
                    },
                    {
                        "username": "psionl0",
                        "content": "Without giving too much away (the editorial does that) one way to deal with the edge cases where n = -2147483648 is as follows:\n```\n   if (n < 0) {\n       return myPow(1 / x, -(n+1)) / x;\n   } . . .\n```\nIf you are coding an iterative solution then you can deal with the edge case like this:\n```\n   double div = 1.0, result = 1.0;\n   if (n < 0) {\n       div = x;\n       x = 1/x;\n       n = -(n+1);\n   } . . .\n```\nAt the end of the computations, return ``result / div``."
                    },
                    {
                        "username": "psionl0",
                        "content": "[@breathermachine](/breathermachine) Changing the arguments like that is cheating. Since the arguments are a double and an integer, these are what we have to work with (although you can cast the integer into a double if you are not using recursion)."
                    },
                    {
                        "username": "breathermachine",
                        "content": "[@psionl0](/psionl0) Or you can just promote the exponent's type to a long, and virtually the same binary exponentiation algorithm will still work https://leetcode.com/problems/powx-n/submissions/1002575265/"
                    },
                    {
                        "username": "psionl0",
                        "content": "[@charonme](/charonme) Fancy that! Thanks for that edge case. I have now deleted my edit."
                    },
                    {
                        "username": "charonme",
                        "content": "except 1.0000000000001 ^ (-2147483648) expects 0.99979"
                    },
                    {
                        "username": "supervaka",
                        "content": "is there a similar implement log(b, x) kind of problem?"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "y4cj4sul3",
                        "content": "I was just testing some cases using C++ and accidentally found something weird when I do `abs()` on the input argument `n` when `n = -2147483648`. \\n\\nThe expected return value of `abs(INT_MIN)` should be `INT_MIN` because of the 2\\'s complement representation, and I did get `-2147483648` as I printed `abs(n)` out. However, when I try to divide `n` by 2 after that, I got `1073741824`  instead of `-1073741824`.\\n\\nSo I try out several things as shown in the picture below. It seems that `n` is actually converted to positive by `abs()` but in a 64-bit manner.\\n\\n![image](https://assets.leetcode.com/users/images/16ee1a6c-6168-4f7b-8ef7-379dd32d9ace_1648312777.6464503.png)\\n\\nHowever, if one assigns `INT_MIN` to `n` in the code rather than in the leetcode console, it becomes normal as what `a` behaved in the picture. Also, I test it out on my computer and everything works fine. So I guess the problem is happening when the leetcode feeds testcases from the console to the code. Any idea of that?"
                    },
                    {
                        "username": "yuv",
                        "content": "Well, I\\'ve got the reason behind the weirdness. It\\'s lied in the range of a signed integer. The range is [-2147483648 to 2147483647]. So, if we try to do the `abs()` operation on the `INT_MIN` then it won\\'t be possible to fit in `int` range. Because the INT_MAX value is one less than that. To avoid it you must store the power value in a `long` type variable. Then it would behave normally."
                    },
                    {
                        "username": "yuv",
                        "content": "It\\'s weird behavior. It\\'s still showing `n` as negative after `abs()` operation. But it is returning true for the `n > 0` condition. "
                    },
                    {
                        "username": "yixuan5",
                        "content": "It is not specific to algorithm, but more for corner case.\\n\\nUse recursion, but it is slower than while loop."
                    }
                ]
            },
            {
                "id": 1832579,
                "content": [
                    {
                        "username": "Rahul_108",
                        "content": "Mood Off  :(\\nx = 0.00001\\nn = 2147483647"
                    },
                    {
                        "username": "RishabhMishra2710",
                        "content": "Someone just hates society \\nn = INT_MIN & x = 1.0000000000001 wtf !!"
                    },
                    {
                        "username": "KingShuK17",
                        "content": "binary exponentiation  :)\\njust a little clue!"
                    },
                    {
                        "username": "Rishipandey14",
                        "content": "return x**n"
                    },
                    {
                        "username": "Mohit_Jariwala",
                        "content": "When interviewer has personal issues with you"
                    },
                    {
                        "username": "psionl0",
                        "content": "Without giving too much away (the editorial does that) one way to deal with the edge cases where n = -2147483648 is as follows:\n```\n   if (n < 0) {\n       return myPow(1 / x, -(n+1)) / x;\n   } . . .\n```\nIf you are coding an iterative solution then you can deal with the edge case like this:\n```\n   double div = 1.0, result = 1.0;\n   if (n < 0) {\n       div = x;\n       x = 1/x;\n       n = -(n+1);\n   } . . .\n```\nAt the end of the computations, return ``result / div``."
                    },
                    {
                        "username": "psionl0",
                        "content": "[@breathermachine](/breathermachine) Changing the arguments like that is cheating. Since the arguments are a double and an integer, these are what we have to work with (although you can cast the integer into a double if you are not using recursion)."
                    },
                    {
                        "username": "breathermachine",
                        "content": "[@psionl0](/psionl0) Or you can just promote the exponent's type to a long, and virtually the same binary exponentiation algorithm will still work https://leetcode.com/problems/powx-n/submissions/1002575265/"
                    },
                    {
                        "username": "psionl0",
                        "content": "[@charonme](/charonme) Fancy that! Thanks for that edge case. I have now deleted my edit."
                    },
                    {
                        "username": "charonme",
                        "content": "except 1.0000000000001 ^ (-2147483648) expects 0.99979"
                    },
                    {
                        "username": "supervaka",
                        "content": "is there a similar implement log(b, x) kind of problem?"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "y4cj4sul3",
                        "content": "I was just testing some cases using C++ and accidentally found something weird when I do `abs()` on the input argument `n` when `n = -2147483648`. \\n\\nThe expected return value of `abs(INT_MIN)` should be `INT_MIN` because of the 2\\'s complement representation, and I did get `-2147483648` as I printed `abs(n)` out. However, when I try to divide `n` by 2 after that, I got `1073741824`  instead of `-1073741824`.\\n\\nSo I try out several things as shown in the picture below. It seems that `n` is actually converted to positive by `abs()` but in a 64-bit manner.\\n\\n![image](https://assets.leetcode.com/users/images/16ee1a6c-6168-4f7b-8ef7-379dd32d9ace_1648312777.6464503.png)\\n\\nHowever, if one assigns `INT_MIN` to `n` in the code rather than in the leetcode console, it becomes normal as what `a` behaved in the picture. Also, I test it out on my computer and everything works fine. So I guess the problem is happening when the leetcode feeds testcases from the console to the code. Any idea of that?"
                    },
                    {
                        "username": "yuv",
                        "content": "Well, I\\'ve got the reason behind the weirdness. It\\'s lied in the range of a signed integer. The range is [-2147483648 to 2147483647]. So, if we try to do the `abs()` operation on the `INT_MIN` then it won\\'t be possible to fit in `int` range. Because the INT_MAX value is one less than that. To avoid it you must store the power value in a `long` type variable. Then it would behave normally."
                    },
                    {
                        "username": "yuv",
                        "content": "It\\'s weird behavior. It\\'s still showing `n` as negative after `abs()` operation. But it is returning true for the `n > 0` condition. "
                    },
                    {
                        "username": "yixuan5",
                        "content": "It is not specific to algorithm, but more for corner case.\\n\\nUse recursion, but it is slower than while loop."
                    }
                ]
            },
            {
                "id": 1732851,
                "content": [
                    {
                        "username": "Rahul_108",
                        "content": "Mood Off  :(\\nx = 0.00001\\nn = 2147483647"
                    },
                    {
                        "username": "RishabhMishra2710",
                        "content": "Someone just hates society \\nn = INT_MIN & x = 1.0000000000001 wtf !!"
                    },
                    {
                        "username": "KingShuK17",
                        "content": "binary exponentiation  :)\\njust a little clue!"
                    },
                    {
                        "username": "Rishipandey14",
                        "content": "return x**n"
                    },
                    {
                        "username": "Mohit_Jariwala",
                        "content": "When interviewer has personal issues with you"
                    },
                    {
                        "username": "psionl0",
                        "content": "Without giving too much away (the editorial does that) one way to deal with the edge cases where n = -2147483648 is as follows:\n```\n   if (n < 0) {\n       return myPow(1 / x, -(n+1)) / x;\n   } . . .\n```\nIf you are coding an iterative solution then you can deal with the edge case like this:\n```\n   double div = 1.0, result = 1.0;\n   if (n < 0) {\n       div = x;\n       x = 1/x;\n       n = -(n+1);\n   } . . .\n```\nAt the end of the computations, return ``result / div``."
                    },
                    {
                        "username": "psionl0",
                        "content": "[@breathermachine](/breathermachine) Changing the arguments like that is cheating. Since the arguments are a double and an integer, these are what we have to work with (although you can cast the integer into a double if you are not using recursion)."
                    },
                    {
                        "username": "breathermachine",
                        "content": "[@psionl0](/psionl0) Or you can just promote the exponent's type to a long, and virtually the same binary exponentiation algorithm will still work https://leetcode.com/problems/powx-n/submissions/1002575265/"
                    },
                    {
                        "username": "psionl0",
                        "content": "[@charonme](/charonme) Fancy that! Thanks for that edge case. I have now deleted my edit."
                    },
                    {
                        "username": "charonme",
                        "content": "except 1.0000000000001 ^ (-2147483648) expects 0.99979"
                    },
                    {
                        "username": "supervaka",
                        "content": "is there a similar implement log(b, x) kind of problem?"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "y4cj4sul3",
                        "content": "I was just testing some cases using C++ and accidentally found something weird when I do `abs()` on the input argument `n` when `n = -2147483648`. \\n\\nThe expected return value of `abs(INT_MIN)` should be `INT_MIN` because of the 2\\'s complement representation, and I did get `-2147483648` as I printed `abs(n)` out. However, when I try to divide `n` by 2 after that, I got `1073741824`  instead of `-1073741824`.\\n\\nSo I try out several things as shown in the picture below. It seems that `n` is actually converted to positive by `abs()` but in a 64-bit manner.\\n\\n![image](https://assets.leetcode.com/users/images/16ee1a6c-6168-4f7b-8ef7-379dd32d9ace_1648312777.6464503.png)\\n\\nHowever, if one assigns `INT_MIN` to `n` in the code rather than in the leetcode console, it becomes normal as what `a` behaved in the picture. Also, I test it out on my computer and everything works fine. So I guess the problem is happening when the leetcode feeds testcases from the console to the code. Any idea of that?"
                    },
                    {
                        "username": "yuv",
                        "content": "Well, I\\'ve got the reason behind the weirdness. It\\'s lied in the range of a signed integer. The range is [-2147483648 to 2147483647]. So, if we try to do the `abs()` operation on the `INT_MIN` then it won\\'t be possible to fit in `int` range. Because the INT_MAX value is one less than that. To avoid it you must store the power value in a `long` type variable. Then it would behave normally."
                    },
                    {
                        "username": "yuv",
                        "content": "It\\'s weird behavior. It\\'s still showing `n` as negative after `abs()` operation. But it is returning true for the `n > 0` condition. "
                    },
                    {
                        "username": "yixuan5",
                        "content": "It is not specific to algorithm, but more for corner case.\\n\\nUse recursion, but it is slower than while loop."
                    }
                ]
            },
            {
                "id": 1576550,
                "content": [
                    {
                        "username": "Rahul_108",
                        "content": "Mood Off  :(\\nx = 0.00001\\nn = 2147483647"
                    },
                    {
                        "username": "RishabhMishra2710",
                        "content": "Someone just hates society \\nn = INT_MIN & x = 1.0000000000001 wtf !!"
                    },
                    {
                        "username": "KingShuK17",
                        "content": "binary exponentiation  :)\\njust a little clue!"
                    },
                    {
                        "username": "Rishipandey14",
                        "content": "return x**n"
                    },
                    {
                        "username": "Mohit_Jariwala",
                        "content": "When interviewer has personal issues with you"
                    },
                    {
                        "username": "psionl0",
                        "content": "Without giving too much away (the editorial does that) one way to deal with the edge cases where n = -2147483648 is as follows:\n```\n   if (n < 0) {\n       return myPow(1 / x, -(n+1)) / x;\n   } . . .\n```\nIf you are coding an iterative solution then you can deal with the edge case like this:\n```\n   double div = 1.0, result = 1.0;\n   if (n < 0) {\n       div = x;\n       x = 1/x;\n       n = -(n+1);\n   } . . .\n```\nAt the end of the computations, return ``result / div``."
                    },
                    {
                        "username": "psionl0",
                        "content": "[@breathermachine](/breathermachine) Changing the arguments like that is cheating. Since the arguments are a double and an integer, these are what we have to work with (although you can cast the integer into a double if you are not using recursion)."
                    },
                    {
                        "username": "breathermachine",
                        "content": "[@psionl0](/psionl0) Or you can just promote the exponent's type to a long, and virtually the same binary exponentiation algorithm will still work https://leetcode.com/problems/powx-n/submissions/1002575265/"
                    },
                    {
                        "username": "psionl0",
                        "content": "[@charonme](/charonme) Fancy that! Thanks for that edge case. I have now deleted my edit."
                    },
                    {
                        "username": "charonme",
                        "content": "except 1.0000000000001 ^ (-2147483648) expects 0.99979"
                    },
                    {
                        "username": "supervaka",
                        "content": "is there a similar implement log(b, x) kind of problem?"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "y4cj4sul3",
                        "content": "I was just testing some cases using C++ and accidentally found something weird when I do `abs()` on the input argument `n` when `n = -2147483648`. \\n\\nThe expected return value of `abs(INT_MIN)` should be `INT_MIN` because of the 2\\'s complement representation, and I did get `-2147483648` as I printed `abs(n)` out. However, when I try to divide `n` by 2 after that, I got `1073741824`  instead of `-1073741824`.\\n\\nSo I try out several things as shown in the picture below. It seems that `n` is actually converted to positive by `abs()` but in a 64-bit manner.\\n\\n![image](https://assets.leetcode.com/users/images/16ee1a6c-6168-4f7b-8ef7-379dd32d9ace_1648312777.6464503.png)\\n\\nHowever, if one assigns `INT_MIN` to `n` in the code rather than in the leetcode console, it becomes normal as what `a` behaved in the picture. Also, I test it out on my computer and everything works fine. So I guess the problem is happening when the leetcode feeds testcases from the console to the code. Any idea of that?"
                    },
                    {
                        "username": "yuv",
                        "content": "Well, I\\'ve got the reason behind the weirdness. It\\'s lied in the range of a signed integer. The range is [-2147483648 to 2147483647]. So, if we try to do the `abs()` operation on the `INT_MIN` then it won\\'t be possible to fit in `int` range. Because the INT_MAX value is one less than that. To avoid it you must store the power value in a `long` type variable. Then it would behave normally."
                    },
                    {
                        "username": "yuv",
                        "content": "It\\'s weird behavior. It\\'s still showing `n` as negative after `abs()` operation. But it is returning true for the `n > 0` condition. "
                    },
                    {
                        "username": "yixuan5",
                        "content": "It is not specific to algorithm, but more for corner case.\\n\\nUse recursion, but it is slower than while loop."
                    }
                ]
            },
            {
                "id": 1573585,
                "content": [
                    {
                        "username": "Rahul_108",
                        "content": "Mood Off  :(\\nx = 0.00001\\nn = 2147483647"
                    },
                    {
                        "username": "RishabhMishra2710",
                        "content": "Someone just hates society \\nn = INT_MIN & x = 1.0000000000001 wtf !!"
                    },
                    {
                        "username": "KingShuK17",
                        "content": "binary exponentiation  :)\\njust a little clue!"
                    },
                    {
                        "username": "Rishipandey14",
                        "content": "return x**n"
                    },
                    {
                        "username": "Mohit_Jariwala",
                        "content": "When interviewer has personal issues with you"
                    },
                    {
                        "username": "psionl0",
                        "content": "Without giving too much away (the editorial does that) one way to deal with the edge cases where n = -2147483648 is as follows:\n```\n   if (n < 0) {\n       return myPow(1 / x, -(n+1)) / x;\n   } . . .\n```\nIf you are coding an iterative solution then you can deal with the edge case like this:\n```\n   double div = 1.0, result = 1.0;\n   if (n < 0) {\n       div = x;\n       x = 1/x;\n       n = -(n+1);\n   } . . .\n```\nAt the end of the computations, return ``result / div``."
                    },
                    {
                        "username": "psionl0",
                        "content": "[@breathermachine](/breathermachine) Changing the arguments like that is cheating. Since the arguments are a double and an integer, these are what we have to work with (although you can cast the integer into a double if you are not using recursion)."
                    },
                    {
                        "username": "breathermachine",
                        "content": "[@psionl0](/psionl0) Or you can just promote the exponent's type to a long, and virtually the same binary exponentiation algorithm will still work https://leetcode.com/problems/powx-n/submissions/1002575265/"
                    },
                    {
                        "username": "psionl0",
                        "content": "[@charonme](/charonme) Fancy that! Thanks for that edge case. I have now deleted my edit."
                    },
                    {
                        "username": "charonme",
                        "content": "except 1.0000000000001 ^ (-2147483648) expects 0.99979"
                    },
                    {
                        "username": "supervaka",
                        "content": "is there a similar implement log(b, x) kind of problem?"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "#  Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\nhttps://leetcode.com/problems/powx-n/solutions/2966997/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "y4cj4sul3",
                        "content": "I was just testing some cases using C++ and accidentally found something weird when I do `abs()` on the input argument `n` when `n = -2147483648`. \\n\\nThe expected return value of `abs(INT_MIN)` should be `INT_MIN` because of the 2\\'s complement representation, and I did get `-2147483648` as I printed `abs(n)` out. However, when I try to divide `n` by 2 after that, I got `1073741824`  instead of `-1073741824`.\\n\\nSo I try out several things as shown in the picture below. It seems that `n` is actually converted to positive by `abs()` but in a 64-bit manner.\\n\\n![image](https://assets.leetcode.com/users/images/16ee1a6c-6168-4f7b-8ef7-379dd32d9ace_1648312777.6464503.png)\\n\\nHowever, if one assigns `INT_MIN` to `n` in the code rather than in the leetcode console, it becomes normal as what `a` behaved in the picture. Also, I test it out on my computer and everything works fine. So I guess the problem is happening when the leetcode feeds testcases from the console to the code. Any idea of that?"
                    },
                    {
                        "username": "yuv",
                        "content": "Well, I\\'ve got the reason behind the weirdness. It\\'s lied in the range of a signed integer. The range is [-2147483648 to 2147483647]. So, if we try to do the `abs()` operation on the `INT_MIN` then it won\\'t be possible to fit in `int` range. Because the INT_MAX value is one less than that. To avoid it you must store the power value in a `long` type variable. Then it would behave normally."
                    },
                    {
                        "username": "yuv",
                        "content": "It\\'s weird behavior. It\\'s still showing `n` as negative after `abs()` operation. But it is returning true for the `n > 0` condition. "
                    },
                    {
                        "username": "yixuan5",
                        "content": "It is not specific to algorithm, but more for corner case.\\n\\nUse recursion, but it is slower than while loop."
                    }
                ]
            },
            {
                "id": 1571124,
                "content": [
                    {
                        "username": "taozhuo",
                        "content": "This is Divide and Conquer. Just saying."
                    },
                    {
                        "username": "manglam_bhargava",
                        "content": "Any ideas why this question has so many dislikes?"
                    },
                    {
                        "username": "PentaMa",
                        "content": "It doesn\\'t tell us how exactly we should implement this `myPow` but just wants the answer, and that makes a lot of people simply use the built-in methods such as Math.pow()"
                    },
                    {
                        "username": "rexhu100",
                        "content": "I think it\\'s time that the LC team take a comprehensive look at how they evaluate the difficulty rating of the problems."
                    },
                    {
                        "username": "user7478F",
                        "content": "I don\\'t understand why it\\'s only 33% acceptance, it\\'s not even medium, its basic if all that\\'s what we have to do ,we\\'re just asked to implement pow function which returns x raised to power n."
                    },
                    {
                        "username": "cswartzell",
                        "content": "Did you just return x^n or pow(x, n)? That\\'s not really implementing the power function but using a built in. Thats like being asked to write a sorting function for A and responding \"return sorted(A)\". You\\'ve missed the entire point of the exercise. Try computing the squares *without* using a function that does it for you. "
                    },
                    {
                        "username": "superljw",
                        "content": "this is not a good problem, if run code with 0.0/0, the result will be 1.\\nif 0.0/0, then 1=2.\\n\\n0*1=0;\\n0*2=0;\\n=>0*1=0*2\\n=>0/0 *1=2\\n=>1=2\\n\\n"
                    },
                    {
                        "username": "tgrhp",
                        "content": "My code fails the following test:\\n\\nInput:\\t-1.00000, -2147483648\\nOutput:\\t-1.00000\\nExpected:\\t1.00000\\n\\nWhy is this the wrong output?\\n\\n\\nEdit:\\nThanks for answering (-1)^2=1, I realized that after I posted the question..."
                    },
                    {
                        "username": "Thetensordude",
                        "content": "SOLUTION AHEAD!!!\\n\\nNeed advice!\\n\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0: return 1\\n        elif n == 1:    return x\\n        else:\\n            if n % 2 == 0:\\n                potential = (x ** (n // 2))\\n                return potential * potential\\n            else:\\n                pot = (x ** (n // 2))\\n                return pot * pot * x\\n        \\n\\nIs this a valid solution? I think it is too easy for medium level for recursion is the way?"
                    },
                    {
                        "username": "leetcode_tusharlokare",
                        "content": "the answer is straight forward, in python use \\'**\\' operator to find out the power of number."
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n    if(n==0){\\n        return 1;\\n    }\\n    if(n==1){\\n        return x;\\n    }\\n    double ans = myPow(x,n/2);\\n    if(n&1){\\n        return x*ans*ans;\\n    }\\n    if(n<0){\\n        return 1/(ans*ans);\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n    }\\n};\\n\\nplease help ans is write but for big numbers ans is  not in power of 10 how can i convert it"
                    },
                    {
                        "username": "shetevrushabh77",
                        "content": "Talented me using simple code:\\nMath.pow(x,n);"
                    }
                ]
            },
            {
                "id": 1576095,
                "content": [
                    {
                        "username": "taozhuo",
                        "content": "This is Divide and Conquer. Just saying."
                    },
                    {
                        "username": "manglam_bhargava",
                        "content": "Any ideas why this question has so many dislikes?"
                    },
                    {
                        "username": "PentaMa",
                        "content": "It doesn\\'t tell us how exactly we should implement this `myPow` but just wants the answer, and that makes a lot of people simply use the built-in methods such as Math.pow()"
                    },
                    {
                        "username": "rexhu100",
                        "content": "I think it\\'s time that the LC team take a comprehensive look at how they evaluate the difficulty rating of the problems."
                    },
                    {
                        "username": "user7478F",
                        "content": "I don\\'t understand why it\\'s only 33% acceptance, it\\'s not even medium, its basic if all that\\'s what we have to do ,we\\'re just asked to implement pow function which returns x raised to power n."
                    },
                    {
                        "username": "cswartzell",
                        "content": "Did you just return x^n or pow(x, n)? That\\'s not really implementing the power function but using a built in. Thats like being asked to write a sorting function for A and responding \"return sorted(A)\". You\\'ve missed the entire point of the exercise. Try computing the squares *without* using a function that does it for you. "
                    },
                    {
                        "username": "superljw",
                        "content": "this is not a good problem, if run code with 0.0/0, the result will be 1.\\nif 0.0/0, then 1=2.\\n\\n0*1=0;\\n0*2=0;\\n=>0*1=0*2\\n=>0/0 *1=2\\n=>1=2\\n\\n"
                    },
                    {
                        "username": "tgrhp",
                        "content": "My code fails the following test:\\n\\nInput:\\t-1.00000, -2147483648\\nOutput:\\t-1.00000\\nExpected:\\t1.00000\\n\\nWhy is this the wrong output?\\n\\n\\nEdit:\\nThanks for answering (-1)^2=1, I realized that after I posted the question..."
                    },
                    {
                        "username": "Thetensordude",
                        "content": "SOLUTION AHEAD!!!\\n\\nNeed advice!\\n\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0: return 1\\n        elif n == 1:    return x\\n        else:\\n            if n % 2 == 0:\\n                potential = (x ** (n // 2))\\n                return potential * potential\\n            else:\\n                pot = (x ** (n // 2))\\n                return pot * pot * x\\n        \\n\\nIs this a valid solution? I think it is too easy for medium level for recursion is the way?"
                    },
                    {
                        "username": "leetcode_tusharlokare",
                        "content": "the answer is straight forward, in python use \\'**\\' operator to find out the power of number."
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n    if(n==0){\\n        return 1;\\n    }\\n    if(n==1){\\n        return x;\\n    }\\n    double ans = myPow(x,n/2);\\n    if(n&1){\\n        return x*ans*ans;\\n    }\\n    if(n<0){\\n        return 1/(ans*ans);\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n    }\\n};\\n\\nplease help ans is write but for big numbers ans is  not in power of 10 how can i convert it"
                    },
                    {
                        "username": "shetevrushabh77",
                        "content": "Talented me using simple code:\\nMath.pow(x,n);"
                    }
                ]
            },
            {
                "id": 1574142,
                "content": [
                    {
                        "username": "taozhuo",
                        "content": "This is Divide and Conquer. Just saying."
                    },
                    {
                        "username": "manglam_bhargava",
                        "content": "Any ideas why this question has so many dislikes?"
                    },
                    {
                        "username": "PentaMa",
                        "content": "It doesn\\'t tell us how exactly we should implement this `myPow` but just wants the answer, and that makes a lot of people simply use the built-in methods such as Math.pow()"
                    },
                    {
                        "username": "rexhu100",
                        "content": "I think it\\'s time that the LC team take a comprehensive look at how they evaluate the difficulty rating of the problems."
                    },
                    {
                        "username": "user7478F",
                        "content": "I don\\'t understand why it\\'s only 33% acceptance, it\\'s not even medium, its basic if all that\\'s what we have to do ,we\\'re just asked to implement pow function which returns x raised to power n."
                    },
                    {
                        "username": "cswartzell",
                        "content": "Did you just return x^n or pow(x, n)? That\\'s not really implementing the power function but using a built in. Thats like being asked to write a sorting function for A and responding \"return sorted(A)\". You\\'ve missed the entire point of the exercise. Try computing the squares *without* using a function that does it for you. "
                    },
                    {
                        "username": "superljw",
                        "content": "this is not a good problem, if run code with 0.0/0, the result will be 1.\\nif 0.0/0, then 1=2.\\n\\n0*1=0;\\n0*2=0;\\n=>0*1=0*2\\n=>0/0 *1=2\\n=>1=2\\n\\n"
                    },
                    {
                        "username": "tgrhp",
                        "content": "My code fails the following test:\\n\\nInput:\\t-1.00000, -2147483648\\nOutput:\\t-1.00000\\nExpected:\\t1.00000\\n\\nWhy is this the wrong output?\\n\\n\\nEdit:\\nThanks for answering (-1)^2=1, I realized that after I posted the question..."
                    },
                    {
                        "username": "Thetensordude",
                        "content": "SOLUTION AHEAD!!!\\n\\nNeed advice!\\n\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0: return 1\\n        elif n == 1:    return x\\n        else:\\n            if n % 2 == 0:\\n                potential = (x ** (n // 2))\\n                return potential * potential\\n            else:\\n                pot = (x ** (n // 2))\\n                return pot * pot * x\\n        \\n\\nIs this a valid solution? I think it is too easy for medium level for recursion is the way?"
                    },
                    {
                        "username": "leetcode_tusharlokare",
                        "content": "the answer is straight forward, in python use \\'**\\' operator to find out the power of number."
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n    if(n==0){\\n        return 1;\\n    }\\n    if(n==1){\\n        return x;\\n    }\\n    double ans = myPow(x,n/2);\\n    if(n&1){\\n        return x*ans*ans;\\n    }\\n    if(n<0){\\n        return 1/(ans*ans);\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n    }\\n};\\n\\nplease help ans is write but for big numbers ans is  not in power of 10 how can i convert it"
                    },
                    {
                        "username": "shetevrushabh77",
                        "content": "Talented me using simple code:\\nMath.pow(x,n);"
                    }
                ]
            },
            {
                "id": 1983754,
                "content": [
                    {
                        "username": "taozhuo",
                        "content": "This is Divide and Conquer. Just saying."
                    },
                    {
                        "username": "manglam_bhargava",
                        "content": "Any ideas why this question has so many dislikes?"
                    },
                    {
                        "username": "PentaMa",
                        "content": "It doesn\\'t tell us how exactly we should implement this `myPow` but just wants the answer, and that makes a lot of people simply use the built-in methods such as Math.pow()"
                    },
                    {
                        "username": "rexhu100",
                        "content": "I think it\\'s time that the LC team take a comprehensive look at how they evaluate the difficulty rating of the problems."
                    },
                    {
                        "username": "user7478F",
                        "content": "I don\\'t understand why it\\'s only 33% acceptance, it\\'s not even medium, its basic if all that\\'s what we have to do ,we\\'re just asked to implement pow function which returns x raised to power n."
                    },
                    {
                        "username": "cswartzell",
                        "content": "Did you just return x^n or pow(x, n)? That\\'s not really implementing the power function but using a built in. Thats like being asked to write a sorting function for A and responding \"return sorted(A)\". You\\'ve missed the entire point of the exercise. Try computing the squares *without* using a function that does it for you. "
                    },
                    {
                        "username": "superljw",
                        "content": "this is not a good problem, if run code with 0.0/0, the result will be 1.\\nif 0.0/0, then 1=2.\\n\\n0*1=0;\\n0*2=0;\\n=>0*1=0*2\\n=>0/0 *1=2\\n=>1=2\\n\\n"
                    },
                    {
                        "username": "tgrhp",
                        "content": "My code fails the following test:\\n\\nInput:\\t-1.00000, -2147483648\\nOutput:\\t-1.00000\\nExpected:\\t1.00000\\n\\nWhy is this the wrong output?\\n\\n\\nEdit:\\nThanks for answering (-1)^2=1, I realized that after I posted the question..."
                    },
                    {
                        "username": "Thetensordude",
                        "content": "SOLUTION AHEAD!!!\\n\\nNeed advice!\\n\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0: return 1\\n        elif n == 1:    return x\\n        else:\\n            if n % 2 == 0:\\n                potential = (x ** (n // 2))\\n                return potential * potential\\n            else:\\n                pot = (x ** (n // 2))\\n                return pot * pot * x\\n        \\n\\nIs this a valid solution? I think it is too easy for medium level for recursion is the way?"
                    },
                    {
                        "username": "leetcode_tusharlokare",
                        "content": "the answer is straight forward, in python use \\'**\\' operator to find out the power of number."
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n    if(n==0){\\n        return 1;\\n    }\\n    if(n==1){\\n        return x;\\n    }\\n    double ans = myPow(x,n/2);\\n    if(n&1){\\n        return x*ans*ans;\\n    }\\n    if(n<0){\\n        return 1/(ans*ans);\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n    }\\n};\\n\\nplease help ans is write but for big numbers ans is  not in power of 10 how can i convert it"
                    },
                    {
                        "username": "shetevrushabh77",
                        "content": "Talented me using simple code:\\nMath.pow(x,n);"
                    }
                ]
            },
            {
                "id": 1572749,
                "content": [
                    {
                        "username": "taozhuo",
                        "content": "This is Divide and Conquer. Just saying."
                    },
                    {
                        "username": "manglam_bhargava",
                        "content": "Any ideas why this question has so many dislikes?"
                    },
                    {
                        "username": "PentaMa",
                        "content": "It doesn\\'t tell us how exactly we should implement this `myPow` but just wants the answer, and that makes a lot of people simply use the built-in methods such as Math.pow()"
                    },
                    {
                        "username": "rexhu100",
                        "content": "I think it\\'s time that the LC team take a comprehensive look at how they evaluate the difficulty rating of the problems."
                    },
                    {
                        "username": "user7478F",
                        "content": "I don\\'t understand why it\\'s only 33% acceptance, it\\'s not even medium, its basic if all that\\'s what we have to do ,we\\'re just asked to implement pow function which returns x raised to power n."
                    },
                    {
                        "username": "cswartzell",
                        "content": "Did you just return x^n or pow(x, n)? That\\'s not really implementing the power function but using a built in. Thats like being asked to write a sorting function for A and responding \"return sorted(A)\". You\\'ve missed the entire point of the exercise. Try computing the squares *without* using a function that does it for you. "
                    },
                    {
                        "username": "superljw",
                        "content": "this is not a good problem, if run code with 0.0/0, the result will be 1.\\nif 0.0/0, then 1=2.\\n\\n0*1=0;\\n0*2=0;\\n=>0*1=0*2\\n=>0/0 *1=2\\n=>1=2\\n\\n"
                    },
                    {
                        "username": "tgrhp",
                        "content": "My code fails the following test:\\n\\nInput:\\t-1.00000, -2147483648\\nOutput:\\t-1.00000\\nExpected:\\t1.00000\\n\\nWhy is this the wrong output?\\n\\n\\nEdit:\\nThanks for answering (-1)^2=1, I realized that after I posted the question..."
                    },
                    {
                        "username": "Thetensordude",
                        "content": "SOLUTION AHEAD!!!\\n\\nNeed advice!\\n\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0: return 1\\n        elif n == 1:    return x\\n        else:\\n            if n % 2 == 0:\\n                potential = (x ** (n // 2))\\n                return potential * potential\\n            else:\\n                pot = (x ** (n // 2))\\n                return pot * pot * x\\n        \\n\\nIs this a valid solution? I think it is too easy for medium level for recursion is the way?"
                    },
                    {
                        "username": "leetcode_tusharlokare",
                        "content": "the answer is straight forward, in python use \\'**\\' operator to find out the power of number."
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n    if(n==0){\\n        return 1;\\n    }\\n    if(n==1){\\n        return x;\\n    }\\n    double ans = myPow(x,n/2);\\n    if(n&1){\\n        return x*ans*ans;\\n    }\\n    if(n<0){\\n        return 1/(ans*ans);\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n    }\\n};\\n\\nplease help ans is write but for big numbers ans is  not in power of 10 how can i convert it"
                    },
                    {
                        "username": "shetevrushabh77",
                        "content": "Talented me using simple code:\\nMath.pow(x,n);"
                    }
                ]
            },
            {
                "id": 1571125,
                "content": [
                    {
                        "username": "taozhuo",
                        "content": "This is Divide and Conquer. Just saying."
                    },
                    {
                        "username": "manglam_bhargava",
                        "content": "Any ideas why this question has so many dislikes?"
                    },
                    {
                        "username": "PentaMa",
                        "content": "It doesn\\'t tell us how exactly we should implement this `myPow` but just wants the answer, and that makes a lot of people simply use the built-in methods such as Math.pow()"
                    },
                    {
                        "username": "rexhu100",
                        "content": "I think it\\'s time that the LC team take a comprehensive look at how they evaluate the difficulty rating of the problems."
                    },
                    {
                        "username": "user7478F",
                        "content": "I don\\'t understand why it\\'s only 33% acceptance, it\\'s not even medium, its basic if all that\\'s what we have to do ,we\\'re just asked to implement pow function which returns x raised to power n."
                    },
                    {
                        "username": "cswartzell",
                        "content": "Did you just return x^n or pow(x, n)? That\\'s not really implementing the power function but using a built in. Thats like being asked to write a sorting function for A and responding \"return sorted(A)\". You\\'ve missed the entire point of the exercise. Try computing the squares *without* using a function that does it for you. "
                    },
                    {
                        "username": "superljw",
                        "content": "this is not a good problem, if run code with 0.0/0, the result will be 1.\\nif 0.0/0, then 1=2.\\n\\n0*1=0;\\n0*2=0;\\n=>0*1=0*2\\n=>0/0 *1=2\\n=>1=2\\n\\n"
                    },
                    {
                        "username": "tgrhp",
                        "content": "My code fails the following test:\\n\\nInput:\\t-1.00000, -2147483648\\nOutput:\\t-1.00000\\nExpected:\\t1.00000\\n\\nWhy is this the wrong output?\\n\\n\\nEdit:\\nThanks for answering (-1)^2=1, I realized that after I posted the question..."
                    },
                    {
                        "username": "Thetensordude",
                        "content": "SOLUTION AHEAD!!!\\n\\nNeed advice!\\n\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0: return 1\\n        elif n == 1:    return x\\n        else:\\n            if n % 2 == 0:\\n                potential = (x ** (n // 2))\\n                return potential * potential\\n            else:\\n                pot = (x ** (n // 2))\\n                return pot * pot * x\\n        \\n\\nIs this a valid solution? I think it is too easy for medium level for recursion is the way?"
                    },
                    {
                        "username": "leetcode_tusharlokare",
                        "content": "the answer is straight forward, in python use \\'**\\' operator to find out the power of number."
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n    if(n==0){\\n        return 1;\\n    }\\n    if(n==1){\\n        return x;\\n    }\\n    double ans = myPow(x,n/2);\\n    if(n&1){\\n        return x*ans*ans;\\n    }\\n    if(n<0){\\n        return 1/(ans*ans);\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n    }\\n};\\n\\nplease help ans is write but for big numbers ans is  not in power of 10 how can i convert it"
                    },
                    {
                        "username": "shetevrushabh77",
                        "content": "Talented me using simple code:\\nMath.pow(x,n);"
                    }
                ]
            },
            {
                "id": 2076722,
                "content": [
                    {
                        "username": "taozhuo",
                        "content": "This is Divide and Conquer. Just saying."
                    },
                    {
                        "username": "manglam_bhargava",
                        "content": "Any ideas why this question has so many dislikes?"
                    },
                    {
                        "username": "PentaMa",
                        "content": "It doesn\\'t tell us how exactly we should implement this `myPow` but just wants the answer, and that makes a lot of people simply use the built-in methods such as Math.pow()"
                    },
                    {
                        "username": "rexhu100",
                        "content": "I think it\\'s time that the LC team take a comprehensive look at how they evaluate the difficulty rating of the problems."
                    },
                    {
                        "username": "user7478F",
                        "content": "I don\\'t understand why it\\'s only 33% acceptance, it\\'s not even medium, its basic if all that\\'s what we have to do ,we\\'re just asked to implement pow function which returns x raised to power n."
                    },
                    {
                        "username": "cswartzell",
                        "content": "Did you just return x^n or pow(x, n)? That\\'s not really implementing the power function but using a built in. Thats like being asked to write a sorting function for A and responding \"return sorted(A)\". You\\'ve missed the entire point of the exercise. Try computing the squares *without* using a function that does it for you. "
                    },
                    {
                        "username": "superljw",
                        "content": "this is not a good problem, if run code with 0.0/0, the result will be 1.\\nif 0.0/0, then 1=2.\\n\\n0*1=0;\\n0*2=0;\\n=>0*1=0*2\\n=>0/0 *1=2\\n=>1=2\\n\\n"
                    },
                    {
                        "username": "tgrhp",
                        "content": "My code fails the following test:\\n\\nInput:\\t-1.00000, -2147483648\\nOutput:\\t-1.00000\\nExpected:\\t1.00000\\n\\nWhy is this the wrong output?\\n\\n\\nEdit:\\nThanks for answering (-1)^2=1, I realized that after I posted the question..."
                    },
                    {
                        "username": "Thetensordude",
                        "content": "SOLUTION AHEAD!!!\\n\\nNeed advice!\\n\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0: return 1\\n        elif n == 1:    return x\\n        else:\\n            if n % 2 == 0:\\n                potential = (x ** (n // 2))\\n                return potential * potential\\n            else:\\n                pot = (x ** (n // 2))\\n                return pot * pot * x\\n        \\n\\nIs this a valid solution? I think it is too easy for medium level for recursion is the way?"
                    },
                    {
                        "username": "leetcode_tusharlokare",
                        "content": "the answer is straight forward, in python use \\'**\\' operator to find out the power of number."
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n    if(n==0){\\n        return 1;\\n    }\\n    if(n==1){\\n        return x;\\n    }\\n    double ans = myPow(x,n/2);\\n    if(n&1){\\n        return x*ans*ans;\\n    }\\n    if(n<0){\\n        return 1/(ans*ans);\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n    }\\n};\\n\\nplease help ans is write but for big numbers ans is  not in power of 10 how can i convert it"
                    },
                    {
                        "username": "shetevrushabh77",
                        "content": "Talented me using simple code:\\nMath.pow(x,n);"
                    }
                ]
            },
            {
                "id": 2071070,
                "content": [
                    {
                        "username": "taozhuo",
                        "content": "This is Divide and Conquer. Just saying."
                    },
                    {
                        "username": "manglam_bhargava",
                        "content": "Any ideas why this question has so many dislikes?"
                    },
                    {
                        "username": "PentaMa",
                        "content": "It doesn\\'t tell us how exactly we should implement this `myPow` but just wants the answer, and that makes a lot of people simply use the built-in methods such as Math.pow()"
                    },
                    {
                        "username": "rexhu100",
                        "content": "I think it\\'s time that the LC team take a comprehensive look at how they evaluate the difficulty rating of the problems."
                    },
                    {
                        "username": "user7478F",
                        "content": "I don\\'t understand why it\\'s only 33% acceptance, it\\'s not even medium, its basic if all that\\'s what we have to do ,we\\'re just asked to implement pow function which returns x raised to power n."
                    },
                    {
                        "username": "cswartzell",
                        "content": "Did you just return x^n or pow(x, n)? That\\'s not really implementing the power function but using a built in. Thats like being asked to write a sorting function for A and responding \"return sorted(A)\". You\\'ve missed the entire point of the exercise. Try computing the squares *without* using a function that does it for you. "
                    },
                    {
                        "username": "superljw",
                        "content": "this is not a good problem, if run code with 0.0/0, the result will be 1.\\nif 0.0/0, then 1=2.\\n\\n0*1=0;\\n0*2=0;\\n=>0*1=0*2\\n=>0/0 *1=2\\n=>1=2\\n\\n"
                    },
                    {
                        "username": "tgrhp",
                        "content": "My code fails the following test:\\n\\nInput:\\t-1.00000, -2147483648\\nOutput:\\t-1.00000\\nExpected:\\t1.00000\\n\\nWhy is this the wrong output?\\n\\n\\nEdit:\\nThanks for answering (-1)^2=1, I realized that after I posted the question..."
                    },
                    {
                        "username": "Thetensordude",
                        "content": "SOLUTION AHEAD!!!\\n\\nNeed advice!\\n\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0: return 1\\n        elif n == 1:    return x\\n        else:\\n            if n % 2 == 0:\\n                potential = (x ** (n // 2))\\n                return potential * potential\\n            else:\\n                pot = (x ** (n // 2))\\n                return pot * pot * x\\n        \\n\\nIs this a valid solution? I think it is too easy for medium level for recursion is the way?"
                    },
                    {
                        "username": "leetcode_tusharlokare",
                        "content": "the answer is straight forward, in python use \\'**\\' operator to find out the power of number."
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n    if(n==0){\\n        return 1;\\n    }\\n    if(n==1){\\n        return x;\\n    }\\n    double ans = myPow(x,n/2);\\n    if(n&1){\\n        return x*ans*ans;\\n    }\\n    if(n<0){\\n        return 1/(ans*ans);\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n    }\\n};\\n\\nplease help ans is write but for big numbers ans is  not in power of 10 how can i convert it"
                    },
                    {
                        "username": "shetevrushabh77",
                        "content": "Talented me using simple code:\\nMath.pow(x,n);"
                    }
                ]
            },
            {
                "id": 2070614,
                "content": [
                    {
                        "username": "taozhuo",
                        "content": "This is Divide and Conquer. Just saying."
                    },
                    {
                        "username": "manglam_bhargava",
                        "content": "Any ideas why this question has so many dislikes?"
                    },
                    {
                        "username": "PentaMa",
                        "content": "It doesn\\'t tell us how exactly we should implement this `myPow` but just wants the answer, and that makes a lot of people simply use the built-in methods such as Math.pow()"
                    },
                    {
                        "username": "rexhu100",
                        "content": "I think it\\'s time that the LC team take a comprehensive look at how they evaluate the difficulty rating of the problems."
                    },
                    {
                        "username": "user7478F",
                        "content": "I don\\'t understand why it\\'s only 33% acceptance, it\\'s not even medium, its basic if all that\\'s what we have to do ,we\\'re just asked to implement pow function which returns x raised to power n."
                    },
                    {
                        "username": "cswartzell",
                        "content": "Did you just return x^n or pow(x, n)? That\\'s not really implementing the power function but using a built in. Thats like being asked to write a sorting function for A and responding \"return sorted(A)\". You\\'ve missed the entire point of the exercise. Try computing the squares *without* using a function that does it for you. "
                    },
                    {
                        "username": "superljw",
                        "content": "this is not a good problem, if run code with 0.0/0, the result will be 1.\\nif 0.0/0, then 1=2.\\n\\n0*1=0;\\n0*2=0;\\n=>0*1=0*2\\n=>0/0 *1=2\\n=>1=2\\n\\n"
                    },
                    {
                        "username": "tgrhp",
                        "content": "My code fails the following test:\\n\\nInput:\\t-1.00000, -2147483648\\nOutput:\\t-1.00000\\nExpected:\\t1.00000\\n\\nWhy is this the wrong output?\\n\\n\\nEdit:\\nThanks for answering (-1)^2=1, I realized that after I posted the question..."
                    },
                    {
                        "username": "Thetensordude",
                        "content": "SOLUTION AHEAD!!!\\n\\nNeed advice!\\n\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0: return 1\\n        elif n == 1:    return x\\n        else:\\n            if n % 2 == 0:\\n                potential = (x ** (n // 2))\\n                return potential * potential\\n            else:\\n                pot = (x ** (n // 2))\\n                return pot * pot * x\\n        \\n\\nIs this a valid solution? I think it is too easy for medium level for recursion is the way?"
                    },
                    {
                        "username": "leetcode_tusharlokare",
                        "content": "the answer is straight forward, in python use \\'**\\' operator to find out the power of number."
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n    if(n==0){\\n        return 1;\\n    }\\n    if(n==1){\\n        return x;\\n    }\\n    double ans = myPow(x,n/2);\\n    if(n&1){\\n        return x*ans*ans;\\n    }\\n    if(n<0){\\n        return 1/(ans*ans);\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n    }\\n};\\n\\nplease help ans is write but for big numbers ans is  not in power of 10 how can i convert it"
                    },
                    {
                        "username": "shetevrushabh77",
                        "content": "Talented me using simple code:\\nMath.pow(x,n);"
                    }
                ]
            },
            {
                "id": 2067334,
                "content": [
                    {
                        "username": "taozhuo",
                        "content": "This is Divide and Conquer. Just saying."
                    },
                    {
                        "username": "manglam_bhargava",
                        "content": "Any ideas why this question has so many dislikes?"
                    },
                    {
                        "username": "PentaMa",
                        "content": "It doesn\\'t tell us how exactly we should implement this `myPow` but just wants the answer, and that makes a lot of people simply use the built-in methods such as Math.pow()"
                    },
                    {
                        "username": "rexhu100",
                        "content": "I think it\\'s time that the LC team take a comprehensive look at how they evaluate the difficulty rating of the problems."
                    },
                    {
                        "username": "user7478F",
                        "content": "I don\\'t understand why it\\'s only 33% acceptance, it\\'s not even medium, its basic if all that\\'s what we have to do ,we\\'re just asked to implement pow function which returns x raised to power n."
                    },
                    {
                        "username": "cswartzell",
                        "content": "Did you just return x^n or pow(x, n)? That\\'s not really implementing the power function but using a built in. Thats like being asked to write a sorting function for A and responding \"return sorted(A)\". You\\'ve missed the entire point of the exercise. Try computing the squares *without* using a function that does it for you. "
                    },
                    {
                        "username": "superljw",
                        "content": "this is not a good problem, if run code with 0.0/0, the result will be 1.\\nif 0.0/0, then 1=2.\\n\\n0*1=0;\\n0*2=0;\\n=>0*1=0*2\\n=>0/0 *1=2\\n=>1=2\\n\\n"
                    },
                    {
                        "username": "tgrhp",
                        "content": "My code fails the following test:\\n\\nInput:\\t-1.00000, -2147483648\\nOutput:\\t-1.00000\\nExpected:\\t1.00000\\n\\nWhy is this the wrong output?\\n\\n\\nEdit:\\nThanks for answering (-1)^2=1, I realized that after I posted the question..."
                    },
                    {
                        "username": "Thetensordude",
                        "content": "SOLUTION AHEAD!!!\\n\\nNeed advice!\\n\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:\\n        if n == 0: return 1\\n        elif n == 1:    return x\\n        else:\\n            if n % 2 == 0:\\n                potential = (x ** (n // 2))\\n                return potential * potential\\n            else:\\n                pot = (x ** (n // 2))\\n                return pot * pot * x\\n        \\n\\nIs this a valid solution? I think it is too easy for medium level for recursion is the way?"
                    },
                    {
                        "username": "leetcode_tusharlokare",
                        "content": "the answer is straight forward, in python use \\'**\\' operator to find out the power of number."
                    },
                    {
                        "username": "AYUSH-KATRE",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n    if(n==0){\\n        return 1;\\n    }\\n    if(n==1){\\n        return x;\\n    }\\n    double ans = myPow(x,n/2);\\n    if(n&1){\\n        return x*ans*ans;\\n    }\\n    if(n<0){\\n        return 1/(ans*ans);\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n    }\\n};\\n\\nplease help ans is write but for big numbers ans is  not in power of 10 how can i convert it"
                    },
                    {
                        "username": "shetevrushabh77",
                        "content": "Talented me using simple code:\\nMath.pow(x,n);"
                    }
                ]
            },
            {
                "id": 2066844,
                "content": [
                    {
                        "username": "Mr_Harshit_k",
                        "content": "i have an question why we are not using Math.pow(x,n) ?"
                    },
                    {
                        "username": "Kaltu",
                        "content": "Because the first two words of the problem statement explicitly ask you to implement it. It makes no sense to implement a function by calling itself."
                    },
                    {
                        "username": "aftabmk",
                        "content": "why pow even a question, since we have built in pow fn in cpp, and other modern language,maybe in the near future leetcode question might be like code Djikstra algorithm without using any coding language."
                    },
                    {
                        "username": "benjelplan",
                        "content": "why do any exercise on leetcode.com then since chatgpt can solve it in a few seconds? "
                    },
                    {
                        "username": "avi_gangurde7227",
                        "content": "bhadwa ques"
                    },
                    {
                        "username": "Hazzy_18",
                        "content": "this took so much time for the testcase (x=1.00000 and n=-2147483648) I still didnt get the \\ncode:\\npublic double myPow(double x, int n) {\\n        if(n<0){\\n            n=-n;\\n            return 1/(double)myPow(x,n);\\n        }\\n        if(n>0){\\n            if(n%2==0){\\n                return myPow(x*x,(n/2));\\n            }else{\\n                return x*myPow(x,n-1);\\n            }\\n        }\\n        return (double)1;\\n    }"
                    },
                    {
                        "username": "benjelplan",
                        "content": "Can somebody please explain to me how -2.00000 ^ 2 = 4.00000?\\nI think that -2^2 = -4 and that\\'s what happens in python as well if you enter -2**2\\n\\nthanks!"
                    },
                    {
                        "username": "benjelplan",
                        "content": "[@Kaltu](/Kaltu) Thanks for explaining! I thought that writing -2**2 meant the same thing as (-2)**2"
                    },
                    {
                        "username": "Kaltu",
                        "content": "`-2**2` in python means `-(2**2)` but we are passing `-2` a function `def pow(x, n): return x ** n` and called by `pow(-2, 2)` it means `(-2) ** 2`\nmore information, search for `operator precedence`"
                    },
                    {
                        "username": "ishan_01",
                        "content": "This question must be marked easy, Give a single reason for marking it as Medium ?"
                    },
                    {
                        "username": "ishan_01",
                        "content": "[@Kaltu](/Kaltu) let\\'s me clear this to you, I have not used any power function or inbuild function. Also if someone uses power function then too it\\'s not called \"cheating\" [@Yulin Liu](/Kaltu) You need to read problem statement, there no where mentioned that you can\\'t use inbuild functions."
                    },
                    {
                        "username": "Kaltu",
                        "content": "because you are implemeting the power function, which logically means you are not allowed to use power function to do so unless you are cheating. and sure, cheating is always easy."
                    },
                    {
                        "username": "rahulramdasi44",
                        "content": "Decimals in the descriptions are confusing. In Javascript we don\\'t get a number like 1024.00000, it\\'ll always be 1024\\nI think description should be updated to have proper examples."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@rahulramdasi44](/rahulramdasi44) I don\\'t know what\\'s consufing you but it\\'s just a way to hint you the system is verifying floating point numbers to the precision of fifth decimal point, regardless of the language.\\nI don\\'t see how JavaScript is special anyway here. JavaScript does use IEEE754 just like others."
                    },
                    {
                        "username": "rahulramdasi44",
                        "content": "In Javascript we don't get a **number** like 1024.00000 because `.toFixed` will return a string and not a number. In description, the return type is number and its confusing because of examples where result is shown as 1024.00000"
                    },
                    {
                        "username": "Kaltu",
                        "content": "Why you don\\'t get a number like 1024.00000in JS? I can just `console.log(myPow(2, 10).toFixed(5))` and I does get `1024.00000`"
                    },
                    {
                        "username": "mohitgoel14",
                        "content": "I want to solve this problem using recursion but getting error of stack overflow error when INT_MAX = n."
                    },
                    {
                        "username": "Sacristaria",
                        "content": "You call a function INT_MAX times the stack is gonna overflow, you need to figure out a way to call it less times."
                    },
                    {
                        "username": "jmeena660",
                        "content": "why i am getting error in greater values its stack overflown on address \\ni just did it using simple recursion "
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Most likely overflowing when the exponent is 2^31-1, each recursion is gonna go to the stack and with that many it is bound to overflow. Might be something else, hard to tell without seeing any code."
                    },
                    {
                        "username": "willmccarten13",
                        "content": "even if this isnt the right way to solve it, i just want to know the answer to this question: why is the compiler saying that 2147483648 is too large to put into my long variable? shouldn\\'t the range for a long encompass that?"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "If you\\'re doing -n, it is putting the result in an int, which is too large for n == INT_MIN, try casting the variable first then negating it."
                    },
                    {
                        "username": "natitati",
                        "content": "The range for long is -2147483648 to 2147483647, therefore 2147483648 will overflow if put into a long variable."
                    }
                ]
            },
            {
                "id": 2062029,
                "content": [
                    {
                        "username": "Mr_Harshit_k",
                        "content": "i have an question why we are not using Math.pow(x,n) ?"
                    },
                    {
                        "username": "Kaltu",
                        "content": "Because the first two words of the problem statement explicitly ask you to implement it. It makes no sense to implement a function by calling itself."
                    },
                    {
                        "username": "aftabmk",
                        "content": "why pow even a question, since we have built in pow fn in cpp, and other modern language,maybe in the near future leetcode question might be like code Djikstra algorithm without using any coding language."
                    },
                    {
                        "username": "benjelplan",
                        "content": "why do any exercise on leetcode.com then since chatgpt can solve it in a few seconds? "
                    },
                    {
                        "username": "avi_gangurde7227",
                        "content": "bhadwa ques"
                    },
                    {
                        "username": "Hazzy_18",
                        "content": "this took so much time for the testcase (x=1.00000 and n=-2147483648) I still didnt get the \\ncode:\\npublic double myPow(double x, int n) {\\n        if(n<0){\\n            n=-n;\\n            return 1/(double)myPow(x,n);\\n        }\\n        if(n>0){\\n            if(n%2==0){\\n                return myPow(x*x,(n/2));\\n            }else{\\n                return x*myPow(x,n-1);\\n            }\\n        }\\n        return (double)1;\\n    }"
                    },
                    {
                        "username": "benjelplan",
                        "content": "Can somebody please explain to me how -2.00000 ^ 2 = 4.00000?\\nI think that -2^2 = -4 and that\\'s what happens in python as well if you enter -2**2\\n\\nthanks!"
                    },
                    {
                        "username": "benjelplan",
                        "content": "[@Kaltu](/Kaltu) Thanks for explaining! I thought that writing -2**2 meant the same thing as (-2)**2"
                    },
                    {
                        "username": "Kaltu",
                        "content": "`-2**2` in python means `-(2**2)` but we are passing `-2` a function `def pow(x, n): return x ** n` and called by `pow(-2, 2)` it means `(-2) ** 2`\nmore information, search for `operator precedence`"
                    },
                    {
                        "username": "ishan_01",
                        "content": "This question must be marked easy, Give a single reason for marking it as Medium ?"
                    },
                    {
                        "username": "ishan_01",
                        "content": "[@Kaltu](/Kaltu) let\\'s me clear this to you, I have not used any power function or inbuild function. Also if someone uses power function then too it\\'s not called \"cheating\" [@Yulin Liu](/Kaltu) You need to read problem statement, there no where mentioned that you can\\'t use inbuild functions."
                    },
                    {
                        "username": "Kaltu",
                        "content": "because you are implemeting the power function, which logically means you are not allowed to use power function to do so unless you are cheating. and sure, cheating is always easy."
                    },
                    {
                        "username": "rahulramdasi44",
                        "content": "Decimals in the descriptions are confusing. In Javascript we don\\'t get a number like 1024.00000, it\\'ll always be 1024\\nI think description should be updated to have proper examples."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@rahulramdasi44](/rahulramdasi44) I don\\'t know what\\'s consufing you but it\\'s just a way to hint you the system is verifying floating point numbers to the precision of fifth decimal point, regardless of the language.\\nI don\\'t see how JavaScript is special anyway here. JavaScript does use IEEE754 just like others."
                    },
                    {
                        "username": "rahulramdasi44",
                        "content": "In Javascript we don't get a **number** like 1024.00000 because `.toFixed` will return a string and not a number. In description, the return type is number and its confusing because of examples where result is shown as 1024.00000"
                    },
                    {
                        "username": "Kaltu",
                        "content": "Why you don\\'t get a number like 1024.00000in JS? I can just `console.log(myPow(2, 10).toFixed(5))` and I does get `1024.00000`"
                    },
                    {
                        "username": "mohitgoel14",
                        "content": "I want to solve this problem using recursion but getting error of stack overflow error when INT_MAX = n."
                    },
                    {
                        "username": "Sacristaria",
                        "content": "You call a function INT_MAX times the stack is gonna overflow, you need to figure out a way to call it less times."
                    },
                    {
                        "username": "jmeena660",
                        "content": "why i am getting error in greater values its stack overflown on address \\ni just did it using simple recursion "
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Most likely overflowing when the exponent is 2^31-1, each recursion is gonna go to the stack and with that many it is bound to overflow. Might be something else, hard to tell without seeing any code."
                    },
                    {
                        "username": "willmccarten13",
                        "content": "even if this isnt the right way to solve it, i just want to know the answer to this question: why is the compiler saying that 2147483648 is too large to put into my long variable? shouldn\\'t the range for a long encompass that?"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "If you\\'re doing -n, it is putting the result in an int, which is too large for n == INT_MIN, try casting the variable first then negating it."
                    },
                    {
                        "username": "natitati",
                        "content": "The range for long is -2147483648 to 2147483647, therefore 2147483648 will overflow if put into a long variable."
                    }
                ]
            },
            {
                "id": 2059892,
                "content": [
                    {
                        "username": "Mr_Harshit_k",
                        "content": "i have an question why we are not using Math.pow(x,n) ?"
                    },
                    {
                        "username": "Kaltu",
                        "content": "Because the first two words of the problem statement explicitly ask you to implement it. It makes no sense to implement a function by calling itself."
                    },
                    {
                        "username": "aftabmk",
                        "content": "why pow even a question, since we have built in pow fn in cpp, and other modern language,maybe in the near future leetcode question might be like code Djikstra algorithm without using any coding language."
                    },
                    {
                        "username": "benjelplan",
                        "content": "why do any exercise on leetcode.com then since chatgpt can solve it in a few seconds? "
                    },
                    {
                        "username": "avi_gangurde7227",
                        "content": "bhadwa ques"
                    },
                    {
                        "username": "Hazzy_18",
                        "content": "this took so much time for the testcase (x=1.00000 and n=-2147483648) I still didnt get the \\ncode:\\npublic double myPow(double x, int n) {\\n        if(n<0){\\n            n=-n;\\n            return 1/(double)myPow(x,n);\\n        }\\n        if(n>0){\\n            if(n%2==0){\\n                return myPow(x*x,(n/2));\\n            }else{\\n                return x*myPow(x,n-1);\\n            }\\n        }\\n        return (double)1;\\n    }"
                    },
                    {
                        "username": "benjelplan",
                        "content": "Can somebody please explain to me how -2.00000 ^ 2 = 4.00000?\\nI think that -2^2 = -4 and that\\'s what happens in python as well if you enter -2**2\\n\\nthanks!"
                    },
                    {
                        "username": "benjelplan",
                        "content": "[@Kaltu](/Kaltu) Thanks for explaining! I thought that writing -2**2 meant the same thing as (-2)**2"
                    },
                    {
                        "username": "Kaltu",
                        "content": "`-2**2` in python means `-(2**2)` but we are passing `-2` a function `def pow(x, n): return x ** n` and called by `pow(-2, 2)` it means `(-2) ** 2`\nmore information, search for `operator precedence`"
                    },
                    {
                        "username": "ishan_01",
                        "content": "This question must be marked easy, Give a single reason for marking it as Medium ?"
                    },
                    {
                        "username": "ishan_01",
                        "content": "[@Kaltu](/Kaltu) let\\'s me clear this to you, I have not used any power function or inbuild function. Also if someone uses power function then too it\\'s not called \"cheating\" [@Yulin Liu](/Kaltu) You need to read problem statement, there no where mentioned that you can\\'t use inbuild functions."
                    },
                    {
                        "username": "Kaltu",
                        "content": "because you are implemeting the power function, which logically means you are not allowed to use power function to do so unless you are cheating. and sure, cheating is always easy."
                    },
                    {
                        "username": "rahulramdasi44",
                        "content": "Decimals in the descriptions are confusing. In Javascript we don\\'t get a number like 1024.00000, it\\'ll always be 1024\\nI think description should be updated to have proper examples."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@rahulramdasi44](/rahulramdasi44) I don\\'t know what\\'s consufing you but it\\'s just a way to hint you the system is verifying floating point numbers to the precision of fifth decimal point, regardless of the language.\\nI don\\'t see how JavaScript is special anyway here. JavaScript does use IEEE754 just like others."
                    },
                    {
                        "username": "rahulramdasi44",
                        "content": "In Javascript we don't get a **number** like 1024.00000 because `.toFixed` will return a string and not a number. In description, the return type is number and its confusing because of examples where result is shown as 1024.00000"
                    },
                    {
                        "username": "Kaltu",
                        "content": "Why you don\\'t get a number like 1024.00000in JS? I can just `console.log(myPow(2, 10).toFixed(5))` and I does get `1024.00000`"
                    },
                    {
                        "username": "mohitgoel14",
                        "content": "I want to solve this problem using recursion but getting error of stack overflow error when INT_MAX = n."
                    },
                    {
                        "username": "Sacristaria",
                        "content": "You call a function INT_MAX times the stack is gonna overflow, you need to figure out a way to call it less times."
                    },
                    {
                        "username": "jmeena660",
                        "content": "why i am getting error in greater values its stack overflown on address \\ni just did it using simple recursion "
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Most likely overflowing when the exponent is 2^31-1, each recursion is gonna go to the stack and with that many it is bound to overflow. Might be something else, hard to tell without seeing any code."
                    },
                    {
                        "username": "willmccarten13",
                        "content": "even if this isnt the right way to solve it, i just want to know the answer to this question: why is the compiler saying that 2147483648 is too large to put into my long variable? shouldn\\'t the range for a long encompass that?"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "If you\\'re doing -n, it is putting the result in an int, which is too large for n == INT_MIN, try casting the variable first then negating it."
                    },
                    {
                        "username": "natitati",
                        "content": "The range for long is -2147483648 to 2147483647, therefore 2147483648 will overflow if put into a long variable."
                    }
                ]
            },
            {
                "id": 2047867,
                "content": [
                    {
                        "username": "Mr_Harshit_k",
                        "content": "i have an question why we are not using Math.pow(x,n) ?"
                    },
                    {
                        "username": "Kaltu",
                        "content": "Because the first two words of the problem statement explicitly ask you to implement it. It makes no sense to implement a function by calling itself."
                    },
                    {
                        "username": "aftabmk",
                        "content": "why pow even a question, since we have built in pow fn in cpp, and other modern language,maybe in the near future leetcode question might be like code Djikstra algorithm without using any coding language."
                    },
                    {
                        "username": "benjelplan",
                        "content": "why do any exercise on leetcode.com then since chatgpt can solve it in a few seconds? "
                    },
                    {
                        "username": "avi_gangurde7227",
                        "content": "bhadwa ques"
                    },
                    {
                        "username": "Hazzy_18",
                        "content": "this took so much time for the testcase (x=1.00000 and n=-2147483648) I still didnt get the \\ncode:\\npublic double myPow(double x, int n) {\\n        if(n<0){\\n            n=-n;\\n            return 1/(double)myPow(x,n);\\n        }\\n        if(n>0){\\n            if(n%2==0){\\n                return myPow(x*x,(n/2));\\n            }else{\\n                return x*myPow(x,n-1);\\n            }\\n        }\\n        return (double)1;\\n    }"
                    },
                    {
                        "username": "benjelplan",
                        "content": "Can somebody please explain to me how -2.00000 ^ 2 = 4.00000?\\nI think that -2^2 = -4 and that\\'s what happens in python as well if you enter -2**2\\n\\nthanks!"
                    },
                    {
                        "username": "benjelplan",
                        "content": "[@Kaltu](/Kaltu) Thanks for explaining! I thought that writing -2**2 meant the same thing as (-2)**2"
                    },
                    {
                        "username": "Kaltu",
                        "content": "`-2**2` in python means `-(2**2)` but we are passing `-2` a function `def pow(x, n): return x ** n` and called by `pow(-2, 2)` it means `(-2) ** 2`\nmore information, search for `operator precedence`"
                    },
                    {
                        "username": "ishan_01",
                        "content": "This question must be marked easy, Give a single reason for marking it as Medium ?"
                    },
                    {
                        "username": "ishan_01",
                        "content": "[@Kaltu](/Kaltu) let\\'s me clear this to you, I have not used any power function or inbuild function. Also if someone uses power function then too it\\'s not called \"cheating\" [@Yulin Liu](/Kaltu) You need to read problem statement, there no where mentioned that you can\\'t use inbuild functions."
                    },
                    {
                        "username": "Kaltu",
                        "content": "because you are implemeting the power function, which logically means you are not allowed to use power function to do so unless you are cheating. and sure, cheating is always easy."
                    },
                    {
                        "username": "rahulramdasi44",
                        "content": "Decimals in the descriptions are confusing. In Javascript we don\\'t get a number like 1024.00000, it\\'ll always be 1024\\nI think description should be updated to have proper examples."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@rahulramdasi44](/rahulramdasi44) I don\\'t know what\\'s consufing you but it\\'s just a way to hint you the system is verifying floating point numbers to the precision of fifth decimal point, regardless of the language.\\nI don\\'t see how JavaScript is special anyway here. JavaScript does use IEEE754 just like others."
                    },
                    {
                        "username": "rahulramdasi44",
                        "content": "In Javascript we don't get a **number** like 1024.00000 because `.toFixed` will return a string and not a number. In description, the return type is number and its confusing because of examples where result is shown as 1024.00000"
                    },
                    {
                        "username": "Kaltu",
                        "content": "Why you don\\'t get a number like 1024.00000in JS? I can just `console.log(myPow(2, 10).toFixed(5))` and I does get `1024.00000`"
                    },
                    {
                        "username": "mohitgoel14",
                        "content": "I want to solve this problem using recursion but getting error of stack overflow error when INT_MAX = n."
                    },
                    {
                        "username": "Sacristaria",
                        "content": "You call a function INT_MAX times the stack is gonna overflow, you need to figure out a way to call it less times."
                    },
                    {
                        "username": "jmeena660",
                        "content": "why i am getting error in greater values its stack overflown on address \\ni just did it using simple recursion "
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Most likely overflowing when the exponent is 2^31-1, each recursion is gonna go to the stack and with that many it is bound to overflow. Might be something else, hard to tell without seeing any code."
                    },
                    {
                        "username": "willmccarten13",
                        "content": "even if this isnt the right way to solve it, i just want to know the answer to this question: why is the compiler saying that 2147483648 is too large to put into my long variable? shouldn\\'t the range for a long encompass that?"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "If you\\'re doing -n, it is putting the result in an int, which is too large for n == INT_MIN, try casting the variable first then negating it."
                    },
                    {
                        "username": "natitati",
                        "content": "The range for long is -2147483648 to 2147483647, therefore 2147483648 will overflow if put into a long variable."
                    }
                ]
            },
            {
                "id": 2039669,
                "content": [
                    {
                        "username": "Mr_Harshit_k",
                        "content": "i have an question why we are not using Math.pow(x,n) ?"
                    },
                    {
                        "username": "Kaltu",
                        "content": "Because the first two words of the problem statement explicitly ask you to implement it. It makes no sense to implement a function by calling itself."
                    },
                    {
                        "username": "aftabmk",
                        "content": "why pow even a question, since we have built in pow fn in cpp, and other modern language,maybe in the near future leetcode question might be like code Djikstra algorithm without using any coding language."
                    },
                    {
                        "username": "benjelplan",
                        "content": "why do any exercise on leetcode.com then since chatgpt can solve it in a few seconds? "
                    },
                    {
                        "username": "avi_gangurde7227",
                        "content": "bhadwa ques"
                    },
                    {
                        "username": "Hazzy_18",
                        "content": "this took so much time for the testcase (x=1.00000 and n=-2147483648) I still didnt get the \\ncode:\\npublic double myPow(double x, int n) {\\n        if(n<0){\\n            n=-n;\\n            return 1/(double)myPow(x,n);\\n        }\\n        if(n>0){\\n            if(n%2==0){\\n                return myPow(x*x,(n/2));\\n            }else{\\n                return x*myPow(x,n-1);\\n            }\\n        }\\n        return (double)1;\\n    }"
                    },
                    {
                        "username": "benjelplan",
                        "content": "Can somebody please explain to me how -2.00000 ^ 2 = 4.00000?\\nI think that -2^2 = -4 and that\\'s what happens in python as well if you enter -2**2\\n\\nthanks!"
                    },
                    {
                        "username": "benjelplan",
                        "content": "[@Kaltu](/Kaltu) Thanks for explaining! I thought that writing -2**2 meant the same thing as (-2)**2"
                    },
                    {
                        "username": "Kaltu",
                        "content": "`-2**2` in python means `-(2**2)` but we are passing `-2` a function `def pow(x, n): return x ** n` and called by `pow(-2, 2)` it means `(-2) ** 2`\nmore information, search for `operator precedence`"
                    },
                    {
                        "username": "ishan_01",
                        "content": "This question must be marked easy, Give a single reason for marking it as Medium ?"
                    },
                    {
                        "username": "ishan_01",
                        "content": "[@Kaltu](/Kaltu) let\\'s me clear this to you, I have not used any power function or inbuild function. Also if someone uses power function then too it\\'s not called \"cheating\" [@Yulin Liu](/Kaltu) You need to read problem statement, there no where mentioned that you can\\'t use inbuild functions."
                    },
                    {
                        "username": "Kaltu",
                        "content": "because you are implemeting the power function, which logically means you are not allowed to use power function to do so unless you are cheating. and sure, cheating is always easy."
                    },
                    {
                        "username": "rahulramdasi44",
                        "content": "Decimals in the descriptions are confusing. In Javascript we don\\'t get a number like 1024.00000, it\\'ll always be 1024\\nI think description should be updated to have proper examples."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@rahulramdasi44](/rahulramdasi44) I don\\'t know what\\'s consufing you but it\\'s just a way to hint you the system is verifying floating point numbers to the precision of fifth decimal point, regardless of the language.\\nI don\\'t see how JavaScript is special anyway here. JavaScript does use IEEE754 just like others."
                    },
                    {
                        "username": "rahulramdasi44",
                        "content": "In Javascript we don't get a **number** like 1024.00000 because `.toFixed` will return a string and not a number. In description, the return type is number and its confusing because of examples where result is shown as 1024.00000"
                    },
                    {
                        "username": "Kaltu",
                        "content": "Why you don\\'t get a number like 1024.00000in JS? I can just `console.log(myPow(2, 10).toFixed(5))` and I does get `1024.00000`"
                    },
                    {
                        "username": "mohitgoel14",
                        "content": "I want to solve this problem using recursion but getting error of stack overflow error when INT_MAX = n."
                    },
                    {
                        "username": "Sacristaria",
                        "content": "You call a function INT_MAX times the stack is gonna overflow, you need to figure out a way to call it less times."
                    },
                    {
                        "username": "jmeena660",
                        "content": "why i am getting error in greater values its stack overflown on address \\ni just did it using simple recursion "
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Most likely overflowing when the exponent is 2^31-1, each recursion is gonna go to the stack and with that many it is bound to overflow. Might be something else, hard to tell without seeing any code."
                    },
                    {
                        "username": "willmccarten13",
                        "content": "even if this isnt the right way to solve it, i just want to know the answer to this question: why is the compiler saying that 2147483648 is too large to put into my long variable? shouldn\\'t the range for a long encompass that?"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "If you\\'re doing -n, it is putting the result in an int, which is too large for n == INT_MIN, try casting the variable first then negating it."
                    },
                    {
                        "username": "natitati",
                        "content": "The range for long is -2147483648 to 2147483647, therefore 2147483648 will overflow if put into a long variable."
                    }
                ]
            },
            {
                "id": 2026598,
                "content": [
                    {
                        "username": "Mr_Harshit_k",
                        "content": "i have an question why we are not using Math.pow(x,n) ?"
                    },
                    {
                        "username": "Kaltu",
                        "content": "Because the first two words of the problem statement explicitly ask you to implement it. It makes no sense to implement a function by calling itself."
                    },
                    {
                        "username": "aftabmk",
                        "content": "why pow even a question, since we have built in pow fn in cpp, and other modern language,maybe in the near future leetcode question might be like code Djikstra algorithm without using any coding language."
                    },
                    {
                        "username": "benjelplan",
                        "content": "why do any exercise on leetcode.com then since chatgpt can solve it in a few seconds? "
                    },
                    {
                        "username": "avi_gangurde7227",
                        "content": "bhadwa ques"
                    },
                    {
                        "username": "Hazzy_18",
                        "content": "this took so much time for the testcase (x=1.00000 and n=-2147483648) I still didnt get the \\ncode:\\npublic double myPow(double x, int n) {\\n        if(n<0){\\n            n=-n;\\n            return 1/(double)myPow(x,n);\\n        }\\n        if(n>0){\\n            if(n%2==0){\\n                return myPow(x*x,(n/2));\\n            }else{\\n                return x*myPow(x,n-1);\\n            }\\n        }\\n        return (double)1;\\n    }"
                    },
                    {
                        "username": "benjelplan",
                        "content": "Can somebody please explain to me how -2.00000 ^ 2 = 4.00000?\\nI think that -2^2 = -4 and that\\'s what happens in python as well if you enter -2**2\\n\\nthanks!"
                    },
                    {
                        "username": "benjelplan",
                        "content": "[@Kaltu](/Kaltu) Thanks for explaining! I thought that writing -2**2 meant the same thing as (-2)**2"
                    },
                    {
                        "username": "Kaltu",
                        "content": "`-2**2` in python means `-(2**2)` but we are passing `-2` a function `def pow(x, n): return x ** n` and called by `pow(-2, 2)` it means `(-2) ** 2`\nmore information, search for `operator precedence`"
                    },
                    {
                        "username": "ishan_01",
                        "content": "This question must be marked easy, Give a single reason for marking it as Medium ?"
                    },
                    {
                        "username": "ishan_01",
                        "content": "[@Kaltu](/Kaltu) let\\'s me clear this to you, I have not used any power function or inbuild function. Also if someone uses power function then too it\\'s not called \"cheating\" [@Yulin Liu](/Kaltu) You need to read problem statement, there no where mentioned that you can\\'t use inbuild functions."
                    },
                    {
                        "username": "Kaltu",
                        "content": "because you are implemeting the power function, which logically means you are not allowed to use power function to do so unless you are cheating. and sure, cheating is always easy."
                    },
                    {
                        "username": "rahulramdasi44",
                        "content": "Decimals in the descriptions are confusing. In Javascript we don\\'t get a number like 1024.00000, it\\'ll always be 1024\\nI think description should be updated to have proper examples."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@rahulramdasi44](/rahulramdasi44) I don\\'t know what\\'s consufing you but it\\'s just a way to hint you the system is verifying floating point numbers to the precision of fifth decimal point, regardless of the language.\\nI don\\'t see how JavaScript is special anyway here. JavaScript does use IEEE754 just like others."
                    },
                    {
                        "username": "rahulramdasi44",
                        "content": "In Javascript we don't get a **number** like 1024.00000 because `.toFixed` will return a string and not a number. In description, the return type is number and its confusing because of examples where result is shown as 1024.00000"
                    },
                    {
                        "username": "Kaltu",
                        "content": "Why you don\\'t get a number like 1024.00000in JS? I can just `console.log(myPow(2, 10).toFixed(5))` and I does get `1024.00000`"
                    },
                    {
                        "username": "mohitgoel14",
                        "content": "I want to solve this problem using recursion but getting error of stack overflow error when INT_MAX = n."
                    },
                    {
                        "username": "Sacristaria",
                        "content": "You call a function INT_MAX times the stack is gonna overflow, you need to figure out a way to call it less times."
                    },
                    {
                        "username": "jmeena660",
                        "content": "why i am getting error in greater values its stack overflown on address \\ni just did it using simple recursion "
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Most likely overflowing when the exponent is 2^31-1, each recursion is gonna go to the stack and with that many it is bound to overflow. Might be something else, hard to tell without seeing any code."
                    },
                    {
                        "username": "willmccarten13",
                        "content": "even if this isnt the right way to solve it, i just want to know the answer to this question: why is the compiler saying that 2147483648 is too large to put into my long variable? shouldn\\'t the range for a long encompass that?"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "If you\\'re doing -n, it is putting the result in an int, which is too large for n == INT_MIN, try casting the variable first then negating it."
                    },
                    {
                        "username": "natitati",
                        "content": "The range for long is -2147483648 to 2147483647, therefore 2147483648 will overflow if put into a long variable."
                    }
                ]
            },
            {
                "id": 2024407,
                "content": [
                    {
                        "username": "Mr_Harshit_k",
                        "content": "i have an question why we are not using Math.pow(x,n) ?"
                    },
                    {
                        "username": "Kaltu",
                        "content": "Because the first two words of the problem statement explicitly ask you to implement it. It makes no sense to implement a function by calling itself."
                    },
                    {
                        "username": "aftabmk",
                        "content": "why pow even a question, since we have built in pow fn in cpp, and other modern language,maybe in the near future leetcode question might be like code Djikstra algorithm without using any coding language."
                    },
                    {
                        "username": "benjelplan",
                        "content": "why do any exercise on leetcode.com then since chatgpt can solve it in a few seconds? "
                    },
                    {
                        "username": "avi_gangurde7227",
                        "content": "bhadwa ques"
                    },
                    {
                        "username": "Hazzy_18",
                        "content": "this took so much time for the testcase (x=1.00000 and n=-2147483648) I still didnt get the \\ncode:\\npublic double myPow(double x, int n) {\\n        if(n<0){\\n            n=-n;\\n            return 1/(double)myPow(x,n);\\n        }\\n        if(n>0){\\n            if(n%2==0){\\n                return myPow(x*x,(n/2));\\n            }else{\\n                return x*myPow(x,n-1);\\n            }\\n        }\\n        return (double)1;\\n    }"
                    },
                    {
                        "username": "benjelplan",
                        "content": "Can somebody please explain to me how -2.00000 ^ 2 = 4.00000?\\nI think that -2^2 = -4 and that\\'s what happens in python as well if you enter -2**2\\n\\nthanks!"
                    },
                    {
                        "username": "benjelplan",
                        "content": "[@Kaltu](/Kaltu) Thanks for explaining! I thought that writing -2**2 meant the same thing as (-2)**2"
                    },
                    {
                        "username": "Kaltu",
                        "content": "`-2**2` in python means `-(2**2)` but we are passing `-2` a function `def pow(x, n): return x ** n` and called by `pow(-2, 2)` it means `(-2) ** 2`\nmore information, search for `operator precedence`"
                    },
                    {
                        "username": "ishan_01",
                        "content": "This question must be marked easy, Give a single reason for marking it as Medium ?"
                    },
                    {
                        "username": "ishan_01",
                        "content": "[@Kaltu](/Kaltu) let\\'s me clear this to you, I have not used any power function or inbuild function. Also if someone uses power function then too it\\'s not called \"cheating\" [@Yulin Liu](/Kaltu) You need to read problem statement, there no where mentioned that you can\\'t use inbuild functions."
                    },
                    {
                        "username": "Kaltu",
                        "content": "because you are implemeting the power function, which logically means you are not allowed to use power function to do so unless you are cheating. and sure, cheating is always easy."
                    },
                    {
                        "username": "rahulramdasi44",
                        "content": "Decimals in the descriptions are confusing. In Javascript we don\\'t get a number like 1024.00000, it\\'ll always be 1024\\nI think description should be updated to have proper examples."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@rahulramdasi44](/rahulramdasi44) I don\\'t know what\\'s consufing you but it\\'s just a way to hint you the system is verifying floating point numbers to the precision of fifth decimal point, regardless of the language.\\nI don\\'t see how JavaScript is special anyway here. JavaScript does use IEEE754 just like others."
                    },
                    {
                        "username": "rahulramdasi44",
                        "content": "In Javascript we don't get a **number** like 1024.00000 because `.toFixed` will return a string and not a number. In description, the return type is number and its confusing because of examples where result is shown as 1024.00000"
                    },
                    {
                        "username": "Kaltu",
                        "content": "Why you don\\'t get a number like 1024.00000in JS? I can just `console.log(myPow(2, 10).toFixed(5))` and I does get `1024.00000`"
                    },
                    {
                        "username": "mohitgoel14",
                        "content": "I want to solve this problem using recursion but getting error of stack overflow error when INT_MAX = n."
                    },
                    {
                        "username": "Sacristaria",
                        "content": "You call a function INT_MAX times the stack is gonna overflow, you need to figure out a way to call it less times."
                    },
                    {
                        "username": "jmeena660",
                        "content": "why i am getting error in greater values its stack overflown on address \\ni just did it using simple recursion "
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Most likely overflowing when the exponent is 2^31-1, each recursion is gonna go to the stack and with that many it is bound to overflow. Might be something else, hard to tell without seeing any code."
                    },
                    {
                        "username": "willmccarten13",
                        "content": "even if this isnt the right way to solve it, i just want to know the answer to this question: why is the compiler saying that 2147483648 is too large to put into my long variable? shouldn\\'t the range for a long encompass that?"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "If you\\'re doing -n, it is putting the result in an int, which is too large for n == INT_MIN, try casting the variable first then negating it."
                    },
                    {
                        "username": "natitati",
                        "content": "The range for long is -2147483648 to 2147483647, therefore 2147483648 will overflow if put into a long variable."
                    }
                ]
            },
            {
                "id": 2013126,
                "content": [
                    {
                        "username": "Mr_Harshit_k",
                        "content": "i have an question why we are not using Math.pow(x,n) ?"
                    },
                    {
                        "username": "Kaltu",
                        "content": "Because the first two words of the problem statement explicitly ask you to implement it. It makes no sense to implement a function by calling itself."
                    },
                    {
                        "username": "aftabmk",
                        "content": "why pow even a question, since we have built in pow fn in cpp, and other modern language,maybe in the near future leetcode question might be like code Djikstra algorithm without using any coding language."
                    },
                    {
                        "username": "benjelplan",
                        "content": "why do any exercise on leetcode.com then since chatgpt can solve it in a few seconds? "
                    },
                    {
                        "username": "avi_gangurde7227",
                        "content": "bhadwa ques"
                    },
                    {
                        "username": "Hazzy_18",
                        "content": "this took so much time for the testcase (x=1.00000 and n=-2147483648) I still didnt get the \\ncode:\\npublic double myPow(double x, int n) {\\n        if(n<0){\\n            n=-n;\\n            return 1/(double)myPow(x,n);\\n        }\\n        if(n>0){\\n            if(n%2==0){\\n                return myPow(x*x,(n/2));\\n            }else{\\n                return x*myPow(x,n-1);\\n            }\\n        }\\n        return (double)1;\\n    }"
                    },
                    {
                        "username": "benjelplan",
                        "content": "Can somebody please explain to me how -2.00000 ^ 2 = 4.00000?\\nI think that -2^2 = -4 and that\\'s what happens in python as well if you enter -2**2\\n\\nthanks!"
                    },
                    {
                        "username": "benjelplan",
                        "content": "[@Kaltu](/Kaltu) Thanks for explaining! I thought that writing -2**2 meant the same thing as (-2)**2"
                    },
                    {
                        "username": "Kaltu",
                        "content": "`-2**2` in python means `-(2**2)` but we are passing `-2` a function `def pow(x, n): return x ** n` and called by `pow(-2, 2)` it means `(-2) ** 2`\nmore information, search for `operator precedence`"
                    },
                    {
                        "username": "ishan_01",
                        "content": "This question must be marked easy, Give a single reason for marking it as Medium ?"
                    },
                    {
                        "username": "ishan_01",
                        "content": "[@Kaltu](/Kaltu) let\\'s me clear this to you, I have not used any power function or inbuild function. Also if someone uses power function then too it\\'s not called \"cheating\" [@Yulin Liu](/Kaltu) You need to read problem statement, there no where mentioned that you can\\'t use inbuild functions."
                    },
                    {
                        "username": "Kaltu",
                        "content": "because you are implemeting the power function, which logically means you are not allowed to use power function to do so unless you are cheating. and sure, cheating is always easy."
                    },
                    {
                        "username": "rahulramdasi44",
                        "content": "Decimals in the descriptions are confusing. In Javascript we don\\'t get a number like 1024.00000, it\\'ll always be 1024\\nI think description should be updated to have proper examples."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@rahulramdasi44](/rahulramdasi44) I don\\'t know what\\'s consufing you but it\\'s just a way to hint you the system is verifying floating point numbers to the precision of fifth decimal point, regardless of the language.\\nI don\\'t see how JavaScript is special anyway here. JavaScript does use IEEE754 just like others."
                    },
                    {
                        "username": "rahulramdasi44",
                        "content": "In Javascript we don't get a **number** like 1024.00000 because `.toFixed` will return a string and not a number. In description, the return type is number and its confusing because of examples where result is shown as 1024.00000"
                    },
                    {
                        "username": "Kaltu",
                        "content": "Why you don\\'t get a number like 1024.00000in JS? I can just `console.log(myPow(2, 10).toFixed(5))` and I does get `1024.00000`"
                    },
                    {
                        "username": "mohitgoel14",
                        "content": "I want to solve this problem using recursion but getting error of stack overflow error when INT_MAX = n."
                    },
                    {
                        "username": "Sacristaria",
                        "content": "You call a function INT_MAX times the stack is gonna overflow, you need to figure out a way to call it less times."
                    },
                    {
                        "username": "jmeena660",
                        "content": "why i am getting error in greater values its stack overflown on address \\ni just did it using simple recursion "
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Most likely overflowing when the exponent is 2^31-1, each recursion is gonna go to the stack and with that many it is bound to overflow. Might be something else, hard to tell without seeing any code."
                    },
                    {
                        "username": "willmccarten13",
                        "content": "even if this isnt the right way to solve it, i just want to know the answer to this question: why is the compiler saying that 2147483648 is too large to put into my long variable? shouldn\\'t the range for a long encompass that?"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "If you\\'re doing -n, it is putting the result in an int, which is too large for n == INT_MIN, try casting the variable first then negating it."
                    },
                    {
                        "username": "natitati",
                        "content": "The range for long is -2147483648 to 2147483647, therefore 2147483648 will overflow if put into a long variable."
                    }
                ]
            },
            {
                "id": 2008589,
                "content": [
                    {
                        "username": "Mr_Harshit_k",
                        "content": "i have an question why we are not using Math.pow(x,n) ?"
                    },
                    {
                        "username": "Kaltu",
                        "content": "Because the first two words of the problem statement explicitly ask you to implement it. It makes no sense to implement a function by calling itself."
                    },
                    {
                        "username": "aftabmk",
                        "content": "why pow even a question, since we have built in pow fn in cpp, and other modern language,maybe in the near future leetcode question might be like code Djikstra algorithm without using any coding language."
                    },
                    {
                        "username": "benjelplan",
                        "content": "why do any exercise on leetcode.com then since chatgpt can solve it in a few seconds? "
                    },
                    {
                        "username": "avi_gangurde7227",
                        "content": "bhadwa ques"
                    },
                    {
                        "username": "Hazzy_18",
                        "content": "this took so much time for the testcase (x=1.00000 and n=-2147483648) I still didnt get the \\ncode:\\npublic double myPow(double x, int n) {\\n        if(n<0){\\n            n=-n;\\n            return 1/(double)myPow(x,n);\\n        }\\n        if(n>0){\\n            if(n%2==0){\\n                return myPow(x*x,(n/2));\\n            }else{\\n                return x*myPow(x,n-1);\\n            }\\n        }\\n        return (double)1;\\n    }"
                    },
                    {
                        "username": "benjelplan",
                        "content": "Can somebody please explain to me how -2.00000 ^ 2 = 4.00000?\\nI think that -2^2 = -4 and that\\'s what happens in python as well if you enter -2**2\\n\\nthanks!"
                    },
                    {
                        "username": "benjelplan",
                        "content": "[@Kaltu](/Kaltu) Thanks for explaining! I thought that writing -2**2 meant the same thing as (-2)**2"
                    },
                    {
                        "username": "Kaltu",
                        "content": "`-2**2` in python means `-(2**2)` but we are passing `-2` a function `def pow(x, n): return x ** n` and called by `pow(-2, 2)` it means `(-2) ** 2`\nmore information, search for `operator precedence`"
                    },
                    {
                        "username": "ishan_01",
                        "content": "This question must be marked easy, Give a single reason for marking it as Medium ?"
                    },
                    {
                        "username": "ishan_01",
                        "content": "[@Kaltu](/Kaltu) let\\'s me clear this to you, I have not used any power function or inbuild function. Also if someone uses power function then too it\\'s not called \"cheating\" [@Yulin Liu](/Kaltu) You need to read problem statement, there no where mentioned that you can\\'t use inbuild functions."
                    },
                    {
                        "username": "Kaltu",
                        "content": "because you are implemeting the power function, which logically means you are not allowed to use power function to do so unless you are cheating. and sure, cheating is always easy."
                    },
                    {
                        "username": "rahulramdasi44",
                        "content": "Decimals in the descriptions are confusing. In Javascript we don\\'t get a number like 1024.00000, it\\'ll always be 1024\\nI think description should be updated to have proper examples."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@rahulramdasi44](/rahulramdasi44) I don\\'t know what\\'s consufing you but it\\'s just a way to hint you the system is verifying floating point numbers to the precision of fifth decimal point, regardless of the language.\\nI don\\'t see how JavaScript is special anyway here. JavaScript does use IEEE754 just like others."
                    },
                    {
                        "username": "rahulramdasi44",
                        "content": "In Javascript we don't get a **number** like 1024.00000 because `.toFixed` will return a string and not a number. In description, the return type is number and its confusing because of examples where result is shown as 1024.00000"
                    },
                    {
                        "username": "Kaltu",
                        "content": "Why you don\\'t get a number like 1024.00000in JS? I can just `console.log(myPow(2, 10).toFixed(5))` and I does get `1024.00000`"
                    },
                    {
                        "username": "mohitgoel14",
                        "content": "I want to solve this problem using recursion but getting error of stack overflow error when INT_MAX = n."
                    },
                    {
                        "username": "Sacristaria",
                        "content": "You call a function INT_MAX times the stack is gonna overflow, you need to figure out a way to call it less times."
                    },
                    {
                        "username": "jmeena660",
                        "content": "why i am getting error in greater values its stack overflown on address \\ni just did it using simple recursion "
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Most likely overflowing when the exponent is 2^31-1, each recursion is gonna go to the stack and with that many it is bound to overflow. Might be something else, hard to tell without seeing any code."
                    },
                    {
                        "username": "willmccarten13",
                        "content": "even if this isnt the right way to solve it, i just want to know the answer to this question: why is the compiler saying that 2147483648 is too large to put into my long variable? shouldn\\'t the range for a long encompass that?"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "If you\\'re doing -n, it is putting the result in an int, which is too large for n == INT_MIN, try casting the variable first then negating it."
                    },
                    {
                        "username": "natitati",
                        "content": "The range for long is -2147483648 to 2147483647, therefore 2147483648 will overflow if put into a long variable."
                    }
                ]
            },
            {
                "id": 2008285,
                "content": [
                    {
                        "username": "Mr_Harshit_k",
                        "content": "i have an question why we are not using Math.pow(x,n) ?"
                    },
                    {
                        "username": "Kaltu",
                        "content": "Because the first two words of the problem statement explicitly ask you to implement it. It makes no sense to implement a function by calling itself."
                    },
                    {
                        "username": "aftabmk",
                        "content": "why pow even a question, since we have built in pow fn in cpp, and other modern language,maybe in the near future leetcode question might be like code Djikstra algorithm without using any coding language."
                    },
                    {
                        "username": "benjelplan",
                        "content": "why do any exercise on leetcode.com then since chatgpt can solve it in a few seconds? "
                    },
                    {
                        "username": "avi_gangurde7227",
                        "content": "bhadwa ques"
                    },
                    {
                        "username": "Hazzy_18",
                        "content": "this took so much time for the testcase (x=1.00000 and n=-2147483648) I still didnt get the \\ncode:\\npublic double myPow(double x, int n) {\\n        if(n<0){\\n            n=-n;\\n            return 1/(double)myPow(x,n);\\n        }\\n        if(n>0){\\n            if(n%2==0){\\n                return myPow(x*x,(n/2));\\n            }else{\\n                return x*myPow(x,n-1);\\n            }\\n        }\\n        return (double)1;\\n    }"
                    },
                    {
                        "username": "benjelplan",
                        "content": "Can somebody please explain to me how -2.00000 ^ 2 = 4.00000?\\nI think that -2^2 = -4 and that\\'s what happens in python as well if you enter -2**2\\n\\nthanks!"
                    },
                    {
                        "username": "benjelplan",
                        "content": "[@Kaltu](/Kaltu) Thanks for explaining! I thought that writing -2**2 meant the same thing as (-2)**2"
                    },
                    {
                        "username": "Kaltu",
                        "content": "`-2**2` in python means `-(2**2)` but we are passing `-2` a function `def pow(x, n): return x ** n` and called by `pow(-2, 2)` it means `(-2) ** 2`\nmore information, search for `operator precedence`"
                    },
                    {
                        "username": "ishan_01",
                        "content": "This question must be marked easy, Give a single reason for marking it as Medium ?"
                    },
                    {
                        "username": "ishan_01",
                        "content": "[@Kaltu](/Kaltu) let\\'s me clear this to you, I have not used any power function or inbuild function. Also if someone uses power function then too it\\'s not called \"cheating\" [@Yulin Liu](/Kaltu) You need to read problem statement, there no where mentioned that you can\\'t use inbuild functions."
                    },
                    {
                        "username": "Kaltu",
                        "content": "because you are implemeting the power function, which logically means you are not allowed to use power function to do so unless you are cheating. and sure, cheating is always easy."
                    },
                    {
                        "username": "rahulramdasi44",
                        "content": "Decimals in the descriptions are confusing. In Javascript we don\\'t get a number like 1024.00000, it\\'ll always be 1024\\nI think description should be updated to have proper examples."
                    },
                    {
                        "username": "Kaltu",
                        "content": "[@rahulramdasi44](/rahulramdasi44) I don\\'t know what\\'s consufing you but it\\'s just a way to hint you the system is verifying floating point numbers to the precision of fifth decimal point, regardless of the language.\\nI don\\'t see how JavaScript is special anyway here. JavaScript does use IEEE754 just like others."
                    },
                    {
                        "username": "rahulramdasi44",
                        "content": "In Javascript we don't get a **number** like 1024.00000 because `.toFixed` will return a string and not a number. In description, the return type is number and its confusing because of examples where result is shown as 1024.00000"
                    },
                    {
                        "username": "Kaltu",
                        "content": "Why you don\\'t get a number like 1024.00000in JS? I can just `console.log(myPow(2, 10).toFixed(5))` and I does get `1024.00000`"
                    },
                    {
                        "username": "mohitgoel14",
                        "content": "I want to solve this problem using recursion but getting error of stack overflow error when INT_MAX = n."
                    },
                    {
                        "username": "Sacristaria",
                        "content": "You call a function INT_MAX times the stack is gonna overflow, you need to figure out a way to call it less times."
                    },
                    {
                        "username": "jmeena660",
                        "content": "why i am getting error in greater values its stack overflown on address \\ni just did it using simple recursion "
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Most likely overflowing when the exponent is 2^31-1, each recursion is gonna go to the stack and with that many it is bound to overflow. Might be something else, hard to tell without seeing any code."
                    },
                    {
                        "username": "willmccarten13",
                        "content": "even if this isnt the right way to solve it, i just want to know the answer to this question: why is the compiler saying that 2147483648 is too large to put into my long variable? shouldn\\'t the range for a long encompass that?"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "If you\\'re doing -n, it is putting the result in an int, which is too large for n == INT_MIN, try casting the variable first then negating it."
                    },
                    {
                        "username": "natitati",
                        "content": "The range for long is -2147483648 to 2147483647, therefore 2147483648 will overflow if put into a long variable."
                    }
                ]
            },
            {
                "id": 2006378,
                "content": [
                    {
                        "username": "QuasarZero",
                        "content": "要点\n* 运用二叉树将 O(N) 降为 O(logN)\n* 合理处理指数为奇数的情况\n* 合理处理底和指数为特殊值的情况（比如：1等）\n\nEssential\n* Reduce time complexity from O(N) to O(logN) with binary tree\n* Reasonably handle the case where the exponent (n) is odd\n* Reasonably handle the case where the base and exponent are special values (for example: 1, etc.)"
                    },
                    {
                        "username": "munnaluri",
                        "content": "I am getting error for test case where x = 1.0000000000001 , n = -2147483648\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        double result = x  ;\\n        int neg = 0 ; \\n        if (n == Integer.MAX_VALUE) \\n              return x;\\n        if ( n < 0 ){\\n            if ( n == Integer.MIN_VALUE){\\n                return  x == 1 || x == -1 ? 1 : 0 ;     \\n            }\\n            neg = n * -1 ; \\n        }else if ( n == 0 ){\\n            return 1 ; \\n        }else {\\n            neg = n ; \\n        }\\n\\n        for(int i = 1 ; i < neg ; i++){\\n            result = result * x ; \\n        }\\n\\n        if ( n < 0){\\n            result = 1/result ; \\n        }\\n\\n        return result;\\n    }\\n}"
                    },
                    {
                        "username": "tifv",
                        "content": "Sure, because this particular case is incorrectly hardcoded in your solution :)\\n```\\nif (n == Integer.MIN_VALUE) {\\n    return x == 1 || x == -1 ? 1 : 0 ;\\n}\\n```"
                    },
                    {
                        "username": "dhwyaan",
                        "content": "Someone forgot to put a \"Don\\'t use built in functions and operators\" line"
                    },
                    {
                        "username": "jincanchamber",
                        "content": "Input\\nx =\\n1.0000000000001\\nn =\\n-2147483648\\n\\nUse Testcase\\nOutput\\n0.00000\\nExpected\\n0.99979\\n\\n\\nwhat???? "
                    },
                    {
                        "username": "tifv",
                        "content": "Do you have any problems with that? :)"
                    },
                    {
                        "username": "HappyLoganLi",
                        "content": "x =\\n0.00001\\nn =\\n2147483647\\n\\nINTERESTING..."
                    },
                    {
                        "username": "RinatFattakhov",
                        "content": "Not the best problem to practice Kotlin..."
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "May be the objective of this problem is to learn binary exponentiation."
                    },
                    {
                        "username": "idnedvryaasnein",
                        "content": "After solving this, try looking into the official code for the pow function. It is mind boggling.\\nYou can easily check it your IDE."
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "\\uD83E\\uDD2F"
                    },
                    {
                        "username": "kxntrast",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double total = x;\\n        if (x == 1)\\n            return 1;\\n        if (x == -1)\\n            return n%2 == 0 ? -x : x;\\n        if (n > 0) {\\n            for (int i =1; i < n; i++) {\\n                total *= x; \\n            }\\n        }\\n        else if (n < 0) {\\n            for (int i = -1; i > n; i--) {\\n                total *= x; \\n            }\\n            total = 1 / total;\\n        }\\n\\n        return total;\\n    }\\n};\\nx = 2.00000\\nn = -2147483648\\ntime limit exceeted, tests 301/309. What should I do to fix it?"
                    },
                    {
                        "username": "tifv",
                        "content": "This solution has complexity $O(n)$. You have to find a solution with better (like logarithmic) complexity."
                    },
                    {
                        "username": "pankaj_navale24",
                        "content": "2147483647"
                    },
                    {
                        "username": "Braderbell",
                        "content": "Finally one that I actually know how to figure out before reading the editorial... Turns out that one time I learned to convert integers from decimal to binary by hand actually has a use"
                    }
                ]
            },
            {
                "id": 2003143,
                "content": [
                    {
                        "username": "QuasarZero",
                        "content": "要点\n* 运用二叉树将 O(N) 降为 O(logN)\n* 合理处理指数为奇数的情况\n* 合理处理底和指数为特殊值的情况（比如：1等）\n\nEssential\n* Reduce time complexity from O(N) to O(logN) with binary tree\n* Reasonably handle the case where the exponent (n) is odd\n* Reasonably handle the case where the base and exponent are special values (for example: 1, etc.)"
                    },
                    {
                        "username": "munnaluri",
                        "content": "I am getting error for test case where x = 1.0000000000001 , n = -2147483648\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        double result = x  ;\\n        int neg = 0 ; \\n        if (n == Integer.MAX_VALUE) \\n              return x;\\n        if ( n < 0 ){\\n            if ( n == Integer.MIN_VALUE){\\n                return  x == 1 || x == -1 ? 1 : 0 ;     \\n            }\\n            neg = n * -1 ; \\n        }else if ( n == 0 ){\\n            return 1 ; \\n        }else {\\n            neg = n ; \\n        }\\n\\n        for(int i = 1 ; i < neg ; i++){\\n            result = result * x ; \\n        }\\n\\n        if ( n < 0){\\n            result = 1/result ; \\n        }\\n\\n        return result;\\n    }\\n}"
                    },
                    {
                        "username": "tifv",
                        "content": "Sure, because this particular case is incorrectly hardcoded in your solution :)\\n```\\nif (n == Integer.MIN_VALUE) {\\n    return x == 1 || x == -1 ? 1 : 0 ;\\n}\\n```"
                    },
                    {
                        "username": "dhwyaan",
                        "content": "Someone forgot to put a \"Don\\'t use built in functions and operators\" line"
                    },
                    {
                        "username": "jincanchamber",
                        "content": "Input\\nx =\\n1.0000000000001\\nn =\\n-2147483648\\n\\nUse Testcase\\nOutput\\n0.00000\\nExpected\\n0.99979\\n\\n\\nwhat???? "
                    },
                    {
                        "username": "tifv",
                        "content": "Do you have any problems with that? :)"
                    },
                    {
                        "username": "HappyLoganLi",
                        "content": "x =\\n0.00001\\nn =\\n2147483647\\n\\nINTERESTING..."
                    },
                    {
                        "username": "RinatFattakhov",
                        "content": "Not the best problem to practice Kotlin..."
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "May be the objective of this problem is to learn binary exponentiation."
                    },
                    {
                        "username": "idnedvryaasnein",
                        "content": "After solving this, try looking into the official code for the pow function. It is mind boggling.\\nYou can easily check it your IDE."
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "\\uD83E\\uDD2F"
                    },
                    {
                        "username": "kxntrast",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double total = x;\\n        if (x == 1)\\n            return 1;\\n        if (x == -1)\\n            return n%2 == 0 ? -x : x;\\n        if (n > 0) {\\n            for (int i =1; i < n; i++) {\\n                total *= x; \\n            }\\n        }\\n        else if (n < 0) {\\n            for (int i = -1; i > n; i--) {\\n                total *= x; \\n            }\\n            total = 1 / total;\\n        }\\n\\n        return total;\\n    }\\n};\\nx = 2.00000\\nn = -2147483648\\ntime limit exceeted, tests 301/309. What should I do to fix it?"
                    },
                    {
                        "username": "tifv",
                        "content": "This solution has complexity $O(n)$. You have to find a solution with better (like logarithmic) complexity."
                    },
                    {
                        "username": "pankaj_navale24",
                        "content": "2147483647"
                    },
                    {
                        "username": "Braderbell",
                        "content": "Finally one that I actually know how to figure out before reading the editorial... Turns out that one time I learned to convert integers from decimal to binary by hand actually has a use"
                    }
                ]
            },
            {
                "id": 1996880,
                "content": [
                    {
                        "username": "QuasarZero",
                        "content": "要点\n* 运用二叉树将 O(N) 降为 O(logN)\n* 合理处理指数为奇数的情况\n* 合理处理底和指数为特殊值的情况（比如：1等）\n\nEssential\n* Reduce time complexity from O(N) to O(logN) with binary tree\n* Reasonably handle the case where the exponent (n) is odd\n* Reasonably handle the case where the base and exponent are special values (for example: 1, etc.)"
                    },
                    {
                        "username": "munnaluri",
                        "content": "I am getting error for test case where x = 1.0000000000001 , n = -2147483648\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        double result = x  ;\\n        int neg = 0 ; \\n        if (n == Integer.MAX_VALUE) \\n              return x;\\n        if ( n < 0 ){\\n            if ( n == Integer.MIN_VALUE){\\n                return  x == 1 || x == -1 ? 1 : 0 ;     \\n            }\\n            neg = n * -1 ; \\n        }else if ( n == 0 ){\\n            return 1 ; \\n        }else {\\n            neg = n ; \\n        }\\n\\n        for(int i = 1 ; i < neg ; i++){\\n            result = result * x ; \\n        }\\n\\n        if ( n < 0){\\n            result = 1/result ; \\n        }\\n\\n        return result;\\n    }\\n}"
                    },
                    {
                        "username": "tifv",
                        "content": "Sure, because this particular case is incorrectly hardcoded in your solution :)\\n```\\nif (n == Integer.MIN_VALUE) {\\n    return x == 1 || x == -1 ? 1 : 0 ;\\n}\\n```"
                    },
                    {
                        "username": "dhwyaan",
                        "content": "Someone forgot to put a \"Don\\'t use built in functions and operators\" line"
                    },
                    {
                        "username": "jincanchamber",
                        "content": "Input\\nx =\\n1.0000000000001\\nn =\\n-2147483648\\n\\nUse Testcase\\nOutput\\n0.00000\\nExpected\\n0.99979\\n\\n\\nwhat???? "
                    },
                    {
                        "username": "tifv",
                        "content": "Do you have any problems with that? :)"
                    },
                    {
                        "username": "HappyLoganLi",
                        "content": "x =\\n0.00001\\nn =\\n2147483647\\n\\nINTERESTING..."
                    },
                    {
                        "username": "RinatFattakhov",
                        "content": "Not the best problem to practice Kotlin..."
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "May be the objective of this problem is to learn binary exponentiation."
                    },
                    {
                        "username": "idnedvryaasnein",
                        "content": "After solving this, try looking into the official code for the pow function. It is mind boggling.\\nYou can easily check it your IDE."
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "\\uD83E\\uDD2F"
                    },
                    {
                        "username": "kxntrast",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double total = x;\\n        if (x == 1)\\n            return 1;\\n        if (x == -1)\\n            return n%2 == 0 ? -x : x;\\n        if (n > 0) {\\n            for (int i =1; i < n; i++) {\\n                total *= x; \\n            }\\n        }\\n        else if (n < 0) {\\n            for (int i = -1; i > n; i--) {\\n                total *= x; \\n            }\\n            total = 1 / total;\\n        }\\n\\n        return total;\\n    }\\n};\\nx = 2.00000\\nn = -2147483648\\ntime limit exceeted, tests 301/309. What should I do to fix it?"
                    },
                    {
                        "username": "tifv",
                        "content": "This solution has complexity $O(n)$. You have to find a solution with better (like logarithmic) complexity."
                    },
                    {
                        "username": "pankaj_navale24",
                        "content": "2147483647"
                    },
                    {
                        "username": "Braderbell",
                        "content": "Finally one that I actually know how to figure out before reading the editorial... Turns out that one time I learned to convert integers from decimal to binary by hand actually has a use"
                    }
                ]
            },
            {
                "id": 1995820,
                "content": [
                    {
                        "username": "QuasarZero",
                        "content": "要点\n* 运用二叉树将 O(N) 降为 O(logN)\n* 合理处理指数为奇数的情况\n* 合理处理底和指数为特殊值的情况（比如：1等）\n\nEssential\n* Reduce time complexity from O(N) to O(logN) with binary tree\n* Reasonably handle the case where the exponent (n) is odd\n* Reasonably handle the case where the base and exponent are special values (for example: 1, etc.)"
                    },
                    {
                        "username": "munnaluri",
                        "content": "I am getting error for test case where x = 1.0000000000001 , n = -2147483648\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        double result = x  ;\\n        int neg = 0 ; \\n        if (n == Integer.MAX_VALUE) \\n              return x;\\n        if ( n < 0 ){\\n            if ( n == Integer.MIN_VALUE){\\n                return  x == 1 || x == -1 ? 1 : 0 ;     \\n            }\\n            neg = n * -1 ; \\n        }else if ( n == 0 ){\\n            return 1 ; \\n        }else {\\n            neg = n ; \\n        }\\n\\n        for(int i = 1 ; i < neg ; i++){\\n            result = result * x ; \\n        }\\n\\n        if ( n < 0){\\n            result = 1/result ; \\n        }\\n\\n        return result;\\n    }\\n}"
                    },
                    {
                        "username": "tifv",
                        "content": "Sure, because this particular case is incorrectly hardcoded in your solution :)\\n```\\nif (n == Integer.MIN_VALUE) {\\n    return x == 1 || x == -1 ? 1 : 0 ;\\n}\\n```"
                    },
                    {
                        "username": "dhwyaan",
                        "content": "Someone forgot to put a \"Don\\'t use built in functions and operators\" line"
                    },
                    {
                        "username": "jincanchamber",
                        "content": "Input\\nx =\\n1.0000000000001\\nn =\\n-2147483648\\n\\nUse Testcase\\nOutput\\n0.00000\\nExpected\\n0.99979\\n\\n\\nwhat???? "
                    },
                    {
                        "username": "tifv",
                        "content": "Do you have any problems with that? :)"
                    },
                    {
                        "username": "HappyLoganLi",
                        "content": "x =\\n0.00001\\nn =\\n2147483647\\n\\nINTERESTING..."
                    },
                    {
                        "username": "RinatFattakhov",
                        "content": "Not the best problem to practice Kotlin..."
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "May be the objective of this problem is to learn binary exponentiation."
                    },
                    {
                        "username": "idnedvryaasnein",
                        "content": "After solving this, try looking into the official code for the pow function. It is mind boggling.\\nYou can easily check it your IDE."
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "\\uD83E\\uDD2F"
                    },
                    {
                        "username": "kxntrast",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double total = x;\\n        if (x == 1)\\n            return 1;\\n        if (x == -1)\\n            return n%2 == 0 ? -x : x;\\n        if (n > 0) {\\n            for (int i =1; i < n; i++) {\\n                total *= x; \\n            }\\n        }\\n        else if (n < 0) {\\n            for (int i = -1; i > n; i--) {\\n                total *= x; \\n            }\\n            total = 1 / total;\\n        }\\n\\n        return total;\\n    }\\n};\\nx = 2.00000\\nn = -2147483648\\ntime limit exceeted, tests 301/309. What should I do to fix it?"
                    },
                    {
                        "username": "tifv",
                        "content": "This solution has complexity $O(n)$. You have to find a solution with better (like logarithmic) complexity."
                    },
                    {
                        "username": "pankaj_navale24",
                        "content": "2147483647"
                    },
                    {
                        "username": "Braderbell",
                        "content": "Finally one that I actually know how to figure out before reading the editorial... Turns out that one time I learned to convert integers from decimal to binary by hand actually has a use"
                    }
                ]
            },
            {
                "id": 1991436,
                "content": [
                    {
                        "username": "QuasarZero",
                        "content": "要点\n* 运用二叉树将 O(N) 降为 O(logN)\n* 合理处理指数为奇数的情况\n* 合理处理底和指数为特殊值的情况（比如：1等）\n\nEssential\n* Reduce time complexity from O(N) to O(logN) with binary tree\n* Reasonably handle the case where the exponent (n) is odd\n* Reasonably handle the case where the base and exponent are special values (for example: 1, etc.)"
                    },
                    {
                        "username": "munnaluri",
                        "content": "I am getting error for test case where x = 1.0000000000001 , n = -2147483648\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        double result = x  ;\\n        int neg = 0 ; \\n        if (n == Integer.MAX_VALUE) \\n              return x;\\n        if ( n < 0 ){\\n            if ( n == Integer.MIN_VALUE){\\n                return  x == 1 || x == -1 ? 1 : 0 ;     \\n            }\\n            neg = n * -1 ; \\n        }else if ( n == 0 ){\\n            return 1 ; \\n        }else {\\n            neg = n ; \\n        }\\n\\n        for(int i = 1 ; i < neg ; i++){\\n            result = result * x ; \\n        }\\n\\n        if ( n < 0){\\n            result = 1/result ; \\n        }\\n\\n        return result;\\n    }\\n}"
                    },
                    {
                        "username": "tifv",
                        "content": "Sure, because this particular case is incorrectly hardcoded in your solution :)\\n```\\nif (n == Integer.MIN_VALUE) {\\n    return x == 1 || x == -1 ? 1 : 0 ;\\n}\\n```"
                    },
                    {
                        "username": "dhwyaan",
                        "content": "Someone forgot to put a \"Don\\'t use built in functions and operators\" line"
                    },
                    {
                        "username": "jincanchamber",
                        "content": "Input\\nx =\\n1.0000000000001\\nn =\\n-2147483648\\n\\nUse Testcase\\nOutput\\n0.00000\\nExpected\\n0.99979\\n\\n\\nwhat???? "
                    },
                    {
                        "username": "tifv",
                        "content": "Do you have any problems with that? :)"
                    },
                    {
                        "username": "HappyLoganLi",
                        "content": "x =\\n0.00001\\nn =\\n2147483647\\n\\nINTERESTING..."
                    },
                    {
                        "username": "RinatFattakhov",
                        "content": "Not the best problem to practice Kotlin..."
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "May be the objective of this problem is to learn binary exponentiation."
                    },
                    {
                        "username": "idnedvryaasnein",
                        "content": "After solving this, try looking into the official code for the pow function. It is mind boggling.\\nYou can easily check it your IDE."
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "\\uD83E\\uDD2F"
                    },
                    {
                        "username": "kxntrast",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double total = x;\\n        if (x == 1)\\n            return 1;\\n        if (x == -1)\\n            return n%2 == 0 ? -x : x;\\n        if (n > 0) {\\n            for (int i =1; i < n; i++) {\\n                total *= x; \\n            }\\n        }\\n        else if (n < 0) {\\n            for (int i = -1; i > n; i--) {\\n                total *= x; \\n            }\\n            total = 1 / total;\\n        }\\n\\n        return total;\\n    }\\n};\\nx = 2.00000\\nn = -2147483648\\ntime limit exceeted, tests 301/309. What should I do to fix it?"
                    },
                    {
                        "username": "tifv",
                        "content": "This solution has complexity $O(n)$. You have to find a solution with better (like logarithmic) complexity."
                    },
                    {
                        "username": "pankaj_navale24",
                        "content": "2147483647"
                    },
                    {
                        "username": "Braderbell",
                        "content": "Finally one that I actually know how to figure out before reading the editorial... Turns out that one time I learned to convert integers from decimal to binary by hand actually has a use"
                    }
                ]
            },
            {
                "id": 1987837,
                "content": [
                    {
                        "username": "QuasarZero",
                        "content": "要点\n* 运用二叉树将 O(N) 降为 O(logN)\n* 合理处理指数为奇数的情况\n* 合理处理底和指数为特殊值的情况（比如：1等）\n\nEssential\n* Reduce time complexity from O(N) to O(logN) with binary tree\n* Reasonably handle the case where the exponent (n) is odd\n* Reasonably handle the case where the base and exponent are special values (for example: 1, etc.)"
                    },
                    {
                        "username": "munnaluri",
                        "content": "I am getting error for test case where x = 1.0000000000001 , n = -2147483648\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        double result = x  ;\\n        int neg = 0 ; \\n        if (n == Integer.MAX_VALUE) \\n              return x;\\n        if ( n < 0 ){\\n            if ( n == Integer.MIN_VALUE){\\n                return  x == 1 || x == -1 ? 1 : 0 ;     \\n            }\\n            neg = n * -1 ; \\n        }else if ( n == 0 ){\\n            return 1 ; \\n        }else {\\n            neg = n ; \\n        }\\n\\n        for(int i = 1 ; i < neg ; i++){\\n            result = result * x ; \\n        }\\n\\n        if ( n < 0){\\n            result = 1/result ; \\n        }\\n\\n        return result;\\n    }\\n}"
                    },
                    {
                        "username": "tifv",
                        "content": "Sure, because this particular case is incorrectly hardcoded in your solution :)\\n```\\nif (n == Integer.MIN_VALUE) {\\n    return x == 1 || x == -1 ? 1 : 0 ;\\n}\\n```"
                    },
                    {
                        "username": "dhwyaan",
                        "content": "Someone forgot to put a \"Don\\'t use built in functions and operators\" line"
                    },
                    {
                        "username": "jincanchamber",
                        "content": "Input\\nx =\\n1.0000000000001\\nn =\\n-2147483648\\n\\nUse Testcase\\nOutput\\n0.00000\\nExpected\\n0.99979\\n\\n\\nwhat???? "
                    },
                    {
                        "username": "tifv",
                        "content": "Do you have any problems with that? :)"
                    },
                    {
                        "username": "HappyLoganLi",
                        "content": "x =\\n0.00001\\nn =\\n2147483647\\n\\nINTERESTING..."
                    },
                    {
                        "username": "RinatFattakhov",
                        "content": "Not the best problem to practice Kotlin..."
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "May be the objective of this problem is to learn binary exponentiation."
                    },
                    {
                        "username": "idnedvryaasnein",
                        "content": "After solving this, try looking into the official code for the pow function. It is mind boggling.\\nYou can easily check it your IDE."
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "\\uD83E\\uDD2F"
                    },
                    {
                        "username": "kxntrast",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double total = x;\\n        if (x == 1)\\n            return 1;\\n        if (x == -1)\\n            return n%2 == 0 ? -x : x;\\n        if (n > 0) {\\n            for (int i =1; i < n; i++) {\\n                total *= x; \\n            }\\n        }\\n        else if (n < 0) {\\n            for (int i = -1; i > n; i--) {\\n                total *= x; \\n            }\\n            total = 1 / total;\\n        }\\n\\n        return total;\\n    }\\n};\\nx = 2.00000\\nn = -2147483648\\ntime limit exceeted, tests 301/309. What should I do to fix it?"
                    },
                    {
                        "username": "tifv",
                        "content": "This solution has complexity $O(n)$. You have to find a solution with better (like logarithmic) complexity."
                    },
                    {
                        "username": "pankaj_navale24",
                        "content": "2147483647"
                    },
                    {
                        "username": "Braderbell",
                        "content": "Finally one that I actually know how to figure out before reading the editorial... Turns out that one time I learned to convert integers from decimal to binary by hand actually has a use"
                    }
                ]
            },
            {
                "id": 1986147,
                "content": [
                    {
                        "username": "QuasarZero",
                        "content": "要点\n* 运用二叉树将 O(N) 降为 O(logN)\n* 合理处理指数为奇数的情况\n* 合理处理底和指数为特殊值的情况（比如：1等）\n\nEssential\n* Reduce time complexity from O(N) to O(logN) with binary tree\n* Reasonably handle the case where the exponent (n) is odd\n* Reasonably handle the case where the base and exponent are special values (for example: 1, etc.)"
                    },
                    {
                        "username": "munnaluri",
                        "content": "I am getting error for test case where x = 1.0000000000001 , n = -2147483648\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        double result = x  ;\\n        int neg = 0 ; \\n        if (n == Integer.MAX_VALUE) \\n              return x;\\n        if ( n < 0 ){\\n            if ( n == Integer.MIN_VALUE){\\n                return  x == 1 || x == -1 ? 1 : 0 ;     \\n            }\\n            neg = n * -1 ; \\n        }else if ( n == 0 ){\\n            return 1 ; \\n        }else {\\n            neg = n ; \\n        }\\n\\n        for(int i = 1 ; i < neg ; i++){\\n            result = result * x ; \\n        }\\n\\n        if ( n < 0){\\n            result = 1/result ; \\n        }\\n\\n        return result;\\n    }\\n}"
                    },
                    {
                        "username": "tifv",
                        "content": "Sure, because this particular case is incorrectly hardcoded in your solution :)\\n```\\nif (n == Integer.MIN_VALUE) {\\n    return x == 1 || x == -1 ? 1 : 0 ;\\n}\\n```"
                    },
                    {
                        "username": "dhwyaan",
                        "content": "Someone forgot to put a \"Don\\'t use built in functions and operators\" line"
                    },
                    {
                        "username": "jincanchamber",
                        "content": "Input\\nx =\\n1.0000000000001\\nn =\\n-2147483648\\n\\nUse Testcase\\nOutput\\n0.00000\\nExpected\\n0.99979\\n\\n\\nwhat???? "
                    },
                    {
                        "username": "tifv",
                        "content": "Do you have any problems with that? :)"
                    },
                    {
                        "username": "HappyLoganLi",
                        "content": "x =\\n0.00001\\nn =\\n2147483647\\n\\nINTERESTING..."
                    },
                    {
                        "username": "RinatFattakhov",
                        "content": "Not the best problem to practice Kotlin..."
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "May be the objective of this problem is to learn binary exponentiation."
                    },
                    {
                        "username": "idnedvryaasnein",
                        "content": "After solving this, try looking into the official code for the pow function. It is mind boggling.\\nYou can easily check it your IDE."
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "\\uD83E\\uDD2F"
                    },
                    {
                        "username": "kxntrast",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double total = x;\\n        if (x == 1)\\n            return 1;\\n        if (x == -1)\\n            return n%2 == 0 ? -x : x;\\n        if (n > 0) {\\n            for (int i =1; i < n; i++) {\\n                total *= x; \\n            }\\n        }\\n        else if (n < 0) {\\n            for (int i = -1; i > n; i--) {\\n                total *= x; \\n            }\\n            total = 1 / total;\\n        }\\n\\n        return total;\\n    }\\n};\\nx = 2.00000\\nn = -2147483648\\ntime limit exceeted, tests 301/309. What should I do to fix it?"
                    },
                    {
                        "username": "tifv",
                        "content": "This solution has complexity $O(n)$. You have to find a solution with better (like logarithmic) complexity."
                    },
                    {
                        "username": "pankaj_navale24",
                        "content": "2147483647"
                    },
                    {
                        "username": "Braderbell",
                        "content": "Finally one that I actually know how to figure out before reading the editorial... Turns out that one time I learned to convert integers from decimal to binary by hand actually has a use"
                    }
                ]
            },
            {
                "id": 1984711,
                "content": [
                    {
                        "username": "QuasarZero",
                        "content": "要点\n* 运用二叉树将 O(N) 降为 O(logN)\n* 合理处理指数为奇数的情况\n* 合理处理底和指数为特殊值的情况（比如：1等）\n\nEssential\n* Reduce time complexity from O(N) to O(logN) with binary tree\n* Reasonably handle the case where the exponent (n) is odd\n* Reasonably handle the case where the base and exponent are special values (for example: 1, etc.)"
                    },
                    {
                        "username": "munnaluri",
                        "content": "I am getting error for test case where x = 1.0000000000001 , n = -2147483648\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        double result = x  ;\\n        int neg = 0 ; \\n        if (n == Integer.MAX_VALUE) \\n              return x;\\n        if ( n < 0 ){\\n            if ( n == Integer.MIN_VALUE){\\n                return  x == 1 || x == -1 ? 1 : 0 ;     \\n            }\\n            neg = n * -1 ; \\n        }else if ( n == 0 ){\\n            return 1 ; \\n        }else {\\n            neg = n ; \\n        }\\n\\n        for(int i = 1 ; i < neg ; i++){\\n            result = result * x ; \\n        }\\n\\n        if ( n < 0){\\n            result = 1/result ; \\n        }\\n\\n        return result;\\n    }\\n}"
                    },
                    {
                        "username": "tifv",
                        "content": "Sure, because this particular case is incorrectly hardcoded in your solution :)\\n```\\nif (n == Integer.MIN_VALUE) {\\n    return x == 1 || x == -1 ? 1 : 0 ;\\n}\\n```"
                    },
                    {
                        "username": "dhwyaan",
                        "content": "Someone forgot to put a \"Don\\'t use built in functions and operators\" line"
                    },
                    {
                        "username": "jincanchamber",
                        "content": "Input\\nx =\\n1.0000000000001\\nn =\\n-2147483648\\n\\nUse Testcase\\nOutput\\n0.00000\\nExpected\\n0.99979\\n\\n\\nwhat???? "
                    },
                    {
                        "username": "tifv",
                        "content": "Do you have any problems with that? :)"
                    },
                    {
                        "username": "HappyLoganLi",
                        "content": "x =\\n0.00001\\nn =\\n2147483647\\n\\nINTERESTING..."
                    },
                    {
                        "username": "RinatFattakhov",
                        "content": "Not the best problem to practice Kotlin..."
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "May be the objective of this problem is to learn binary exponentiation."
                    },
                    {
                        "username": "idnedvryaasnein",
                        "content": "After solving this, try looking into the official code for the pow function. It is mind boggling.\\nYou can easily check it your IDE."
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "\\uD83E\\uDD2F"
                    },
                    {
                        "username": "kxntrast",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double total = x;\\n        if (x == 1)\\n            return 1;\\n        if (x == -1)\\n            return n%2 == 0 ? -x : x;\\n        if (n > 0) {\\n            for (int i =1; i < n; i++) {\\n                total *= x; \\n            }\\n        }\\n        else if (n < 0) {\\n            for (int i = -1; i > n; i--) {\\n                total *= x; \\n            }\\n            total = 1 / total;\\n        }\\n\\n        return total;\\n    }\\n};\\nx = 2.00000\\nn = -2147483648\\ntime limit exceeted, tests 301/309. What should I do to fix it?"
                    },
                    {
                        "username": "tifv",
                        "content": "This solution has complexity $O(n)$. You have to find a solution with better (like logarithmic) complexity."
                    },
                    {
                        "username": "pankaj_navale24",
                        "content": "2147483647"
                    },
                    {
                        "username": "Braderbell",
                        "content": "Finally one that I actually know how to figure out before reading the editorial... Turns out that one time I learned to convert integers from decimal to binary by hand actually has a use"
                    }
                ]
            },
            {
                "id": 1984681,
                "content": [
                    {
                        "username": "QuasarZero",
                        "content": "要点\n* 运用二叉树将 O(N) 降为 O(logN)\n* 合理处理指数为奇数的情况\n* 合理处理底和指数为特殊值的情况（比如：1等）\n\nEssential\n* Reduce time complexity from O(N) to O(logN) with binary tree\n* Reasonably handle the case where the exponent (n) is odd\n* Reasonably handle the case where the base and exponent are special values (for example: 1, etc.)"
                    },
                    {
                        "username": "munnaluri",
                        "content": "I am getting error for test case where x = 1.0000000000001 , n = -2147483648\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        double result = x  ;\\n        int neg = 0 ; \\n        if (n == Integer.MAX_VALUE) \\n              return x;\\n        if ( n < 0 ){\\n            if ( n == Integer.MIN_VALUE){\\n                return  x == 1 || x == -1 ? 1 : 0 ;     \\n            }\\n            neg = n * -1 ; \\n        }else if ( n == 0 ){\\n            return 1 ; \\n        }else {\\n            neg = n ; \\n        }\\n\\n        for(int i = 1 ; i < neg ; i++){\\n            result = result * x ; \\n        }\\n\\n        if ( n < 0){\\n            result = 1/result ; \\n        }\\n\\n        return result;\\n    }\\n}"
                    },
                    {
                        "username": "tifv",
                        "content": "Sure, because this particular case is incorrectly hardcoded in your solution :)\\n```\\nif (n == Integer.MIN_VALUE) {\\n    return x == 1 || x == -1 ? 1 : 0 ;\\n}\\n```"
                    },
                    {
                        "username": "dhwyaan",
                        "content": "Someone forgot to put a \"Don\\'t use built in functions and operators\" line"
                    },
                    {
                        "username": "jincanchamber",
                        "content": "Input\\nx =\\n1.0000000000001\\nn =\\n-2147483648\\n\\nUse Testcase\\nOutput\\n0.00000\\nExpected\\n0.99979\\n\\n\\nwhat???? "
                    },
                    {
                        "username": "tifv",
                        "content": "Do you have any problems with that? :)"
                    },
                    {
                        "username": "HappyLoganLi",
                        "content": "x =\\n0.00001\\nn =\\n2147483647\\n\\nINTERESTING..."
                    },
                    {
                        "username": "RinatFattakhov",
                        "content": "Not the best problem to practice Kotlin..."
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "May be the objective of this problem is to learn binary exponentiation."
                    },
                    {
                        "username": "idnedvryaasnein",
                        "content": "After solving this, try looking into the official code for the pow function. It is mind boggling.\\nYou can easily check it your IDE."
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "\\uD83E\\uDD2F"
                    },
                    {
                        "username": "kxntrast",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double total = x;\\n        if (x == 1)\\n            return 1;\\n        if (x == -1)\\n            return n%2 == 0 ? -x : x;\\n        if (n > 0) {\\n            for (int i =1; i < n; i++) {\\n                total *= x; \\n            }\\n        }\\n        else if (n < 0) {\\n            for (int i = -1; i > n; i--) {\\n                total *= x; \\n            }\\n            total = 1 / total;\\n        }\\n\\n        return total;\\n    }\\n};\\nx = 2.00000\\nn = -2147483648\\ntime limit exceeted, tests 301/309. What should I do to fix it?"
                    },
                    {
                        "username": "tifv",
                        "content": "This solution has complexity $O(n)$. You have to find a solution with better (like logarithmic) complexity."
                    },
                    {
                        "username": "pankaj_navale24",
                        "content": "2147483647"
                    },
                    {
                        "username": "Braderbell",
                        "content": "Finally one that I actually know how to figure out before reading the editorial... Turns out that one time I learned to convert integers from decimal to binary by hand actually has a use"
                    }
                ]
            },
            {
                "id": 1984554,
                "content": [
                    {
                        "username": "QuasarZero",
                        "content": "要点\n* 运用二叉树将 O(N) 降为 O(logN)\n* 合理处理指数为奇数的情况\n* 合理处理底和指数为特殊值的情况（比如：1等）\n\nEssential\n* Reduce time complexity from O(N) to O(logN) with binary tree\n* Reasonably handle the case where the exponent (n) is odd\n* Reasonably handle the case where the base and exponent are special values (for example: 1, etc.)"
                    },
                    {
                        "username": "munnaluri",
                        "content": "I am getting error for test case where x = 1.0000000000001 , n = -2147483648\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        double result = x  ;\\n        int neg = 0 ; \\n        if (n == Integer.MAX_VALUE) \\n              return x;\\n        if ( n < 0 ){\\n            if ( n == Integer.MIN_VALUE){\\n                return  x == 1 || x == -1 ? 1 : 0 ;     \\n            }\\n            neg = n * -1 ; \\n        }else if ( n == 0 ){\\n            return 1 ; \\n        }else {\\n            neg = n ; \\n        }\\n\\n        for(int i = 1 ; i < neg ; i++){\\n            result = result * x ; \\n        }\\n\\n        if ( n < 0){\\n            result = 1/result ; \\n        }\\n\\n        return result;\\n    }\\n}"
                    },
                    {
                        "username": "tifv",
                        "content": "Sure, because this particular case is incorrectly hardcoded in your solution :)\\n```\\nif (n == Integer.MIN_VALUE) {\\n    return x == 1 || x == -1 ? 1 : 0 ;\\n}\\n```"
                    },
                    {
                        "username": "dhwyaan",
                        "content": "Someone forgot to put a \"Don\\'t use built in functions and operators\" line"
                    },
                    {
                        "username": "jincanchamber",
                        "content": "Input\\nx =\\n1.0000000000001\\nn =\\n-2147483648\\n\\nUse Testcase\\nOutput\\n0.00000\\nExpected\\n0.99979\\n\\n\\nwhat???? "
                    },
                    {
                        "username": "tifv",
                        "content": "Do you have any problems with that? :)"
                    },
                    {
                        "username": "HappyLoganLi",
                        "content": "x =\\n0.00001\\nn =\\n2147483647\\n\\nINTERESTING..."
                    },
                    {
                        "username": "RinatFattakhov",
                        "content": "Not the best problem to practice Kotlin..."
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "May be the objective of this problem is to learn binary exponentiation."
                    },
                    {
                        "username": "idnedvryaasnein",
                        "content": "After solving this, try looking into the official code for the pow function. It is mind boggling.\\nYou can easily check it your IDE."
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "\\uD83E\\uDD2F"
                    },
                    {
                        "username": "kxntrast",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double total = x;\\n        if (x == 1)\\n            return 1;\\n        if (x == -1)\\n            return n%2 == 0 ? -x : x;\\n        if (n > 0) {\\n            for (int i =1; i < n; i++) {\\n                total *= x; \\n            }\\n        }\\n        else if (n < 0) {\\n            for (int i = -1; i > n; i--) {\\n                total *= x; \\n            }\\n            total = 1 / total;\\n        }\\n\\n        return total;\\n    }\\n};\\nx = 2.00000\\nn = -2147483648\\ntime limit exceeted, tests 301/309. What should I do to fix it?"
                    },
                    {
                        "username": "tifv",
                        "content": "This solution has complexity $O(n)$. You have to find a solution with better (like logarithmic) complexity."
                    },
                    {
                        "username": "pankaj_navale24",
                        "content": "2147483647"
                    },
                    {
                        "username": "Braderbell",
                        "content": "Finally one that I actually know how to figure out before reading the editorial... Turns out that one time I learned to convert integers from decimal to binary by hand actually has a use"
                    }
                ]
            },
            {
                "id": 1984552,
                "content": [
                    {
                        "username": "SabihaKhan",
                        "content": "It accepted my answer using Math.pow method in java\\uD83D\\uDE15"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "cheating, cheating karta hai tu \\uD83D\\uDE1F"
                    },
                    {
                        "username": "khe1154",
                        "content": "not a good interview question but its nice to know how `Math.pow` is implemented"
                    },
                    {
                        "username": "breathermachine",
                        "content": "Close enough. Note that the true pow() function can accept a double exponent, not just an integer."
                    },
                    {
                        "username": "codingconcierge",
                        "content": "If you solve the problem as intended, as the editorial shows, you will gain a lot. Don\\'t skip this one."
                    },
                    {
                        "username": "aman2k1",
                        "content": "why everyone is just using pow function when question is stating implement it ?"
                    },
                    {
                        "username": "charonme",
                        "content": "testcase 305 / 306\nx = 1.0000000000001\nn = -2147483648\ndoesn't work in PHP because the x accepted by the function evaluates to int 1\n\nwhen I force the type as `function myPow(double $x, $n) {` it gives a runtime error \"Uncaught TypeError: Solution::myPow(): Argument #1 (\\$x) must be of type double, int given\".\n\nAnd `echo gettype($x);` says it's an integer"
                    },
                    {
                        "username": "sandeep0423",
                        "content": "For test case 305: x = 1.0000000000001 and n = -2147483648 I get output as 0.99979 but in leetcode my output is 1.00000. which is not matching expected output 0.99979. Why is this different? Can anyone tell me?"
                    },
                    {
                        "username": "sandeep0423",
                        "content": "[@tifv](/tifv) Yes, I am running the program on notepad++ first. Then I copy it on leetcode"
                    },
                    {
                        "username": "tifv",
                        "content": "It is hard to answer such question without seeing the code. Also, the question itself is not clear: what do \\u201CI get output\\u201D and \\u201Cin leetcode my output is\\u201D mean? Are you running your program somewhere outside of leetcode and getting different results?"
                    },
                    {
                        "username": "sasukesharma",
                        "content": "come on, this `return Math.pow(x, n); `should not be aacceptable"
                    },
                    {
                        "username": "IhorPryyma",
                        "content": "is it really Medium task?"
                    },
                    {
                        "username": "wangshuoyuan2",
                        "content": "Who the hxxx made the last test case"
                    },
                    {
                        "username": "abhinav_singh987",
                        "content": "Hey Guys, Just wanted to know that  I have implemented both recursive and iterative O(log n) solution but the recursive one beats  100% users while iterative solution beats only 16.69% users. Why so?\\n\\nI think most people implemented the recursive solution and there is some percentage system going on\\n\\nbut recursive solution took 0ms to complete while the iterative took 3ms to complete, why iterative took more time?\\n"
                    },
                    {
                        "username": "grovre",
                        "content": "Depends on how you implemented it which we can\\'t see"
                    }
                ]
            },
            {
                "id": 1984484,
                "content": [
                    {
                        "username": "SabihaKhan",
                        "content": "It accepted my answer using Math.pow method in java\\uD83D\\uDE15"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "cheating, cheating karta hai tu \\uD83D\\uDE1F"
                    },
                    {
                        "username": "khe1154",
                        "content": "not a good interview question but its nice to know how `Math.pow` is implemented"
                    },
                    {
                        "username": "breathermachine",
                        "content": "Close enough. Note that the true pow() function can accept a double exponent, not just an integer."
                    },
                    {
                        "username": "codingconcierge",
                        "content": "If you solve the problem as intended, as the editorial shows, you will gain a lot. Don\\'t skip this one."
                    },
                    {
                        "username": "aman2k1",
                        "content": "why everyone is just using pow function when question is stating implement it ?"
                    },
                    {
                        "username": "charonme",
                        "content": "testcase 305 / 306\nx = 1.0000000000001\nn = -2147483648\ndoesn't work in PHP because the x accepted by the function evaluates to int 1\n\nwhen I force the type as `function myPow(double $x, $n) {` it gives a runtime error \"Uncaught TypeError: Solution::myPow(): Argument #1 (\\$x) must be of type double, int given\".\n\nAnd `echo gettype($x);` says it's an integer"
                    },
                    {
                        "username": "sandeep0423",
                        "content": "For test case 305: x = 1.0000000000001 and n = -2147483648 I get output as 0.99979 but in leetcode my output is 1.00000. which is not matching expected output 0.99979. Why is this different? Can anyone tell me?"
                    },
                    {
                        "username": "sandeep0423",
                        "content": "[@tifv](/tifv) Yes, I am running the program on notepad++ first. Then I copy it on leetcode"
                    },
                    {
                        "username": "tifv",
                        "content": "It is hard to answer such question without seeing the code. Also, the question itself is not clear: what do \\u201CI get output\\u201D and \\u201Cin leetcode my output is\\u201D mean? Are you running your program somewhere outside of leetcode and getting different results?"
                    },
                    {
                        "username": "sasukesharma",
                        "content": "come on, this `return Math.pow(x, n); `should not be aacceptable"
                    },
                    {
                        "username": "IhorPryyma",
                        "content": "is it really Medium task?"
                    },
                    {
                        "username": "wangshuoyuan2",
                        "content": "Who the hxxx made the last test case"
                    },
                    {
                        "username": "abhinav_singh987",
                        "content": "Hey Guys, Just wanted to know that  I have implemented both recursive and iterative O(log n) solution but the recursive one beats  100% users while iterative solution beats only 16.69% users. Why so?\\n\\nI think most people implemented the recursive solution and there is some percentage system going on\\n\\nbut recursive solution took 0ms to complete while the iterative took 3ms to complete, why iterative took more time?\\n"
                    },
                    {
                        "username": "grovre",
                        "content": "Depends on how you implemented it which we can\\'t see"
                    }
                ]
            },
            {
                "id": 1984441,
                "content": [
                    {
                        "username": "SabihaKhan",
                        "content": "It accepted my answer using Math.pow method in java\\uD83D\\uDE15"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "cheating, cheating karta hai tu \\uD83D\\uDE1F"
                    },
                    {
                        "username": "khe1154",
                        "content": "not a good interview question but its nice to know how `Math.pow` is implemented"
                    },
                    {
                        "username": "breathermachine",
                        "content": "Close enough. Note that the true pow() function can accept a double exponent, not just an integer."
                    },
                    {
                        "username": "codingconcierge",
                        "content": "If you solve the problem as intended, as the editorial shows, you will gain a lot. Don\\'t skip this one."
                    },
                    {
                        "username": "aman2k1",
                        "content": "why everyone is just using pow function when question is stating implement it ?"
                    },
                    {
                        "username": "charonme",
                        "content": "testcase 305 / 306\nx = 1.0000000000001\nn = -2147483648\ndoesn't work in PHP because the x accepted by the function evaluates to int 1\n\nwhen I force the type as `function myPow(double $x, $n) {` it gives a runtime error \"Uncaught TypeError: Solution::myPow(): Argument #1 (\\$x) must be of type double, int given\".\n\nAnd `echo gettype($x);` says it's an integer"
                    },
                    {
                        "username": "sandeep0423",
                        "content": "For test case 305: x = 1.0000000000001 and n = -2147483648 I get output as 0.99979 but in leetcode my output is 1.00000. which is not matching expected output 0.99979. Why is this different? Can anyone tell me?"
                    },
                    {
                        "username": "sandeep0423",
                        "content": "[@tifv](/tifv) Yes, I am running the program on notepad++ first. Then I copy it on leetcode"
                    },
                    {
                        "username": "tifv",
                        "content": "It is hard to answer such question without seeing the code. Also, the question itself is not clear: what do \\u201CI get output\\u201D and \\u201Cin leetcode my output is\\u201D mean? Are you running your program somewhere outside of leetcode and getting different results?"
                    },
                    {
                        "username": "sasukesharma",
                        "content": "come on, this `return Math.pow(x, n); `should not be aacceptable"
                    },
                    {
                        "username": "IhorPryyma",
                        "content": "is it really Medium task?"
                    },
                    {
                        "username": "wangshuoyuan2",
                        "content": "Who the hxxx made the last test case"
                    },
                    {
                        "username": "abhinav_singh987",
                        "content": "Hey Guys, Just wanted to know that  I have implemented both recursive and iterative O(log n) solution but the recursive one beats  100% users while iterative solution beats only 16.69% users. Why so?\\n\\nI think most people implemented the recursive solution and there is some percentage system going on\\n\\nbut recursive solution took 0ms to complete while the iterative took 3ms to complete, why iterative took more time?\\n"
                    },
                    {
                        "username": "grovre",
                        "content": "Depends on how you implemented it which we can\\'t see"
                    }
                ]
            },
            {
                "id": 1984430,
                "content": [
                    {
                        "username": "SabihaKhan",
                        "content": "It accepted my answer using Math.pow method in java\\uD83D\\uDE15"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "cheating, cheating karta hai tu \\uD83D\\uDE1F"
                    },
                    {
                        "username": "khe1154",
                        "content": "not a good interview question but its nice to know how `Math.pow` is implemented"
                    },
                    {
                        "username": "breathermachine",
                        "content": "Close enough. Note that the true pow() function can accept a double exponent, not just an integer."
                    },
                    {
                        "username": "codingconcierge",
                        "content": "If you solve the problem as intended, as the editorial shows, you will gain a lot. Don\\'t skip this one."
                    },
                    {
                        "username": "aman2k1",
                        "content": "why everyone is just using pow function when question is stating implement it ?"
                    },
                    {
                        "username": "charonme",
                        "content": "testcase 305 / 306\nx = 1.0000000000001\nn = -2147483648\ndoesn't work in PHP because the x accepted by the function evaluates to int 1\n\nwhen I force the type as `function myPow(double $x, $n) {` it gives a runtime error \"Uncaught TypeError: Solution::myPow(): Argument #1 (\\$x) must be of type double, int given\".\n\nAnd `echo gettype($x);` says it's an integer"
                    },
                    {
                        "username": "sandeep0423",
                        "content": "For test case 305: x = 1.0000000000001 and n = -2147483648 I get output as 0.99979 but in leetcode my output is 1.00000. which is not matching expected output 0.99979. Why is this different? Can anyone tell me?"
                    },
                    {
                        "username": "sandeep0423",
                        "content": "[@tifv](/tifv) Yes, I am running the program on notepad++ first. Then I copy it on leetcode"
                    },
                    {
                        "username": "tifv",
                        "content": "It is hard to answer such question without seeing the code. Also, the question itself is not clear: what do \\u201CI get output\\u201D and \\u201Cin leetcode my output is\\u201D mean? Are you running your program somewhere outside of leetcode and getting different results?"
                    },
                    {
                        "username": "sasukesharma",
                        "content": "come on, this `return Math.pow(x, n); `should not be aacceptable"
                    },
                    {
                        "username": "IhorPryyma",
                        "content": "is it really Medium task?"
                    },
                    {
                        "username": "wangshuoyuan2",
                        "content": "Who the hxxx made the last test case"
                    },
                    {
                        "username": "abhinav_singh987",
                        "content": "Hey Guys, Just wanted to know that  I have implemented both recursive and iterative O(log n) solution but the recursive one beats  100% users while iterative solution beats only 16.69% users. Why so?\\n\\nI think most people implemented the recursive solution and there is some percentage system going on\\n\\nbut recursive solution took 0ms to complete while the iterative took 3ms to complete, why iterative took more time?\\n"
                    },
                    {
                        "username": "grovre",
                        "content": "Depends on how you implemented it which we can\\'t see"
                    }
                ]
            },
            {
                "id": 1984386,
                "content": [
                    {
                        "username": "SabihaKhan",
                        "content": "It accepted my answer using Math.pow method in java\\uD83D\\uDE15"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "cheating, cheating karta hai tu \\uD83D\\uDE1F"
                    },
                    {
                        "username": "khe1154",
                        "content": "not a good interview question but its nice to know how `Math.pow` is implemented"
                    },
                    {
                        "username": "breathermachine",
                        "content": "Close enough. Note that the true pow() function can accept a double exponent, not just an integer."
                    },
                    {
                        "username": "codingconcierge",
                        "content": "If you solve the problem as intended, as the editorial shows, you will gain a lot. Don\\'t skip this one."
                    },
                    {
                        "username": "aman2k1",
                        "content": "why everyone is just using pow function when question is stating implement it ?"
                    },
                    {
                        "username": "charonme",
                        "content": "testcase 305 / 306\nx = 1.0000000000001\nn = -2147483648\ndoesn't work in PHP because the x accepted by the function evaluates to int 1\n\nwhen I force the type as `function myPow(double $x, $n) {` it gives a runtime error \"Uncaught TypeError: Solution::myPow(): Argument #1 (\\$x) must be of type double, int given\".\n\nAnd `echo gettype($x);` says it's an integer"
                    },
                    {
                        "username": "sandeep0423",
                        "content": "For test case 305: x = 1.0000000000001 and n = -2147483648 I get output as 0.99979 but in leetcode my output is 1.00000. which is not matching expected output 0.99979. Why is this different? Can anyone tell me?"
                    },
                    {
                        "username": "sandeep0423",
                        "content": "[@tifv](/tifv) Yes, I am running the program on notepad++ first. Then I copy it on leetcode"
                    },
                    {
                        "username": "tifv",
                        "content": "It is hard to answer such question without seeing the code. Also, the question itself is not clear: what do \\u201CI get output\\u201D and \\u201Cin leetcode my output is\\u201D mean? Are you running your program somewhere outside of leetcode and getting different results?"
                    },
                    {
                        "username": "sasukesharma",
                        "content": "come on, this `return Math.pow(x, n); `should not be aacceptable"
                    },
                    {
                        "username": "IhorPryyma",
                        "content": "is it really Medium task?"
                    },
                    {
                        "username": "wangshuoyuan2",
                        "content": "Who the hxxx made the last test case"
                    },
                    {
                        "username": "abhinav_singh987",
                        "content": "Hey Guys, Just wanted to know that  I have implemented both recursive and iterative O(log n) solution but the recursive one beats  100% users while iterative solution beats only 16.69% users. Why so?\\n\\nI think most people implemented the recursive solution and there is some percentage system going on\\n\\nbut recursive solution took 0ms to complete while the iterative took 3ms to complete, why iterative took more time?\\n"
                    },
                    {
                        "username": "grovre",
                        "content": "Depends on how you implemented it which we can\\'t see"
                    }
                ]
            },
            {
                "id": 1984176,
                "content": [
                    {
                        "username": "SabihaKhan",
                        "content": "It accepted my answer using Math.pow method in java\\uD83D\\uDE15"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "cheating, cheating karta hai tu \\uD83D\\uDE1F"
                    },
                    {
                        "username": "khe1154",
                        "content": "not a good interview question but its nice to know how `Math.pow` is implemented"
                    },
                    {
                        "username": "breathermachine",
                        "content": "Close enough. Note that the true pow() function can accept a double exponent, not just an integer."
                    },
                    {
                        "username": "codingconcierge",
                        "content": "If you solve the problem as intended, as the editorial shows, you will gain a lot. Don\\'t skip this one."
                    },
                    {
                        "username": "aman2k1",
                        "content": "why everyone is just using pow function when question is stating implement it ?"
                    },
                    {
                        "username": "charonme",
                        "content": "testcase 305 / 306\nx = 1.0000000000001\nn = -2147483648\ndoesn't work in PHP because the x accepted by the function evaluates to int 1\n\nwhen I force the type as `function myPow(double $x, $n) {` it gives a runtime error \"Uncaught TypeError: Solution::myPow(): Argument #1 (\\$x) must be of type double, int given\".\n\nAnd `echo gettype($x);` says it's an integer"
                    },
                    {
                        "username": "sandeep0423",
                        "content": "For test case 305: x = 1.0000000000001 and n = -2147483648 I get output as 0.99979 but in leetcode my output is 1.00000. which is not matching expected output 0.99979. Why is this different? Can anyone tell me?"
                    },
                    {
                        "username": "sandeep0423",
                        "content": "[@tifv](/tifv) Yes, I am running the program on notepad++ first. Then I copy it on leetcode"
                    },
                    {
                        "username": "tifv",
                        "content": "It is hard to answer such question without seeing the code. Also, the question itself is not clear: what do \\u201CI get output\\u201D and \\u201Cin leetcode my output is\\u201D mean? Are you running your program somewhere outside of leetcode and getting different results?"
                    },
                    {
                        "username": "sasukesharma",
                        "content": "come on, this `return Math.pow(x, n); `should not be aacceptable"
                    },
                    {
                        "username": "IhorPryyma",
                        "content": "is it really Medium task?"
                    },
                    {
                        "username": "wangshuoyuan2",
                        "content": "Who the hxxx made the last test case"
                    },
                    {
                        "username": "abhinav_singh987",
                        "content": "Hey Guys, Just wanted to know that  I have implemented both recursive and iterative O(log n) solution but the recursive one beats  100% users while iterative solution beats only 16.69% users. Why so?\\n\\nI think most people implemented the recursive solution and there is some percentage system going on\\n\\nbut recursive solution took 0ms to complete while the iterative took 3ms to complete, why iterative took more time?\\n"
                    },
                    {
                        "username": "grovre",
                        "content": "Depends on how you implemented it which we can\\'t see"
                    }
                ]
            },
            {
                "id": 1984167,
                "content": [
                    {
                        "username": "SabihaKhan",
                        "content": "It accepted my answer using Math.pow method in java\\uD83D\\uDE15"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "cheating, cheating karta hai tu \\uD83D\\uDE1F"
                    },
                    {
                        "username": "khe1154",
                        "content": "not a good interview question but its nice to know how `Math.pow` is implemented"
                    },
                    {
                        "username": "breathermachine",
                        "content": "Close enough. Note that the true pow() function can accept a double exponent, not just an integer."
                    },
                    {
                        "username": "codingconcierge",
                        "content": "If you solve the problem as intended, as the editorial shows, you will gain a lot. Don\\'t skip this one."
                    },
                    {
                        "username": "aman2k1",
                        "content": "why everyone is just using pow function when question is stating implement it ?"
                    },
                    {
                        "username": "charonme",
                        "content": "testcase 305 / 306\nx = 1.0000000000001\nn = -2147483648\ndoesn't work in PHP because the x accepted by the function evaluates to int 1\n\nwhen I force the type as `function myPow(double $x, $n) {` it gives a runtime error \"Uncaught TypeError: Solution::myPow(): Argument #1 (\\$x) must be of type double, int given\".\n\nAnd `echo gettype($x);` says it's an integer"
                    },
                    {
                        "username": "sandeep0423",
                        "content": "For test case 305: x = 1.0000000000001 and n = -2147483648 I get output as 0.99979 but in leetcode my output is 1.00000. which is not matching expected output 0.99979. Why is this different? Can anyone tell me?"
                    },
                    {
                        "username": "sandeep0423",
                        "content": "[@tifv](/tifv) Yes, I am running the program on notepad++ first. Then I copy it on leetcode"
                    },
                    {
                        "username": "tifv",
                        "content": "It is hard to answer such question without seeing the code. Also, the question itself is not clear: what do \\u201CI get output\\u201D and \\u201Cin leetcode my output is\\u201D mean? Are you running your program somewhere outside of leetcode and getting different results?"
                    },
                    {
                        "username": "sasukesharma",
                        "content": "come on, this `return Math.pow(x, n); `should not be aacceptable"
                    },
                    {
                        "username": "IhorPryyma",
                        "content": "is it really Medium task?"
                    },
                    {
                        "username": "wangshuoyuan2",
                        "content": "Who the hxxx made the last test case"
                    },
                    {
                        "username": "abhinav_singh987",
                        "content": "Hey Guys, Just wanted to know that  I have implemented both recursive and iterative O(log n) solution but the recursive one beats  100% users while iterative solution beats only 16.69% users. Why so?\\n\\nI think most people implemented the recursive solution and there is some percentage system going on\\n\\nbut recursive solution took 0ms to complete while the iterative took 3ms to complete, why iterative took more time?\\n"
                    },
                    {
                        "username": "grovre",
                        "content": "Depends on how you implemented it which we can\\'t see"
                    }
                ]
            },
            {
                "id": 1984145,
                "content": [
                    {
                        "username": "SabihaKhan",
                        "content": "It accepted my answer using Math.pow method in java\\uD83D\\uDE15"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "cheating, cheating karta hai tu \\uD83D\\uDE1F"
                    },
                    {
                        "username": "khe1154",
                        "content": "not a good interview question but its nice to know how `Math.pow` is implemented"
                    },
                    {
                        "username": "breathermachine",
                        "content": "Close enough. Note that the true pow() function can accept a double exponent, not just an integer."
                    },
                    {
                        "username": "codingconcierge",
                        "content": "If you solve the problem as intended, as the editorial shows, you will gain a lot. Don\\'t skip this one."
                    },
                    {
                        "username": "aman2k1",
                        "content": "why everyone is just using pow function when question is stating implement it ?"
                    },
                    {
                        "username": "charonme",
                        "content": "testcase 305 / 306\nx = 1.0000000000001\nn = -2147483648\ndoesn't work in PHP because the x accepted by the function evaluates to int 1\n\nwhen I force the type as `function myPow(double $x, $n) {` it gives a runtime error \"Uncaught TypeError: Solution::myPow(): Argument #1 (\\$x) must be of type double, int given\".\n\nAnd `echo gettype($x);` says it's an integer"
                    },
                    {
                        "username": "sandeep0423",
                        "content": "For test case 305: x = 1.0000000000001 and n = -2147483648 I get output as 0.99979 but in leetcode my output is 1.00000. which is not matching expected output 0.99979. Why is this different? Can anyone tell me?"
                    },
                    {
                        "username": "sandeep0423",
                        "content": "[@tifv](/tifv) Yes, I am running the program on notepad++ first. Then I copy it on leetcode"
                    },
                    {
                        "username": "tifv",
                        "content": "It is hard to answer such question without seeing the code. Also, the question itself is not clear: what do \\u201CI get output\\u201D and \\u201Cin leetcode my output is\\u201D mean? Are you running your program somewhere outside of leetcode and getting different results?"
                    },
                    {
                        "username": "sasukesharma",
                        "content": "come on, this `return Math.pow(x, n); `should not be aacceptable"
                    },
                    {
                        "username": "IhorPryyma",
                        "content": "is it really Medium task?"
                    },
                    {
                        "username": "wangshuoyuan2",
                        "content": "Who the hxxx made the last test case"
                    },
                    {
                        "username": "abhinav_singh987",
                        "content": "Hey Guys, Just wanted to know that  I have implemented both recursive and iterative O(log n) solution but the recursive one beats  100% users while iterative solution beats only 16.69% users. Why so?\\n\\nI think most people implemented the recursive solution and there is some percentage system going on\\n\\nbut recursive solution took 0ms to complete while the iterative took 3ms to complete, why iterative took more time?\\n"
                    },
                    {
                        "username": "grovre",
                        "content": "Depends on how you implemented it which we can\\'t see"
                    }
                ]
            },
            {
                "id": 1984055,
                "content": [
                    {
                        "username": "SabihaKhan",
                        "content": "It accepted my answer using Math.pow method in java\\uD83D\\uDE15"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "cheating, cheating karta hai tu \\uD83D\\uDE1F"
                    },
                    {
                        "username": "khe1154",
                        "content": "not a good interview question but its nice to know how `Math.pow` is implemented"
                    },
                    {
                        "username": "breathermachine",
                        "content": "Close enough. Note that the true pow() function can accept a double exponent, not just an integer."
                    },
                    {
                        "username": "codingconcierge",
                        "content": "If you solve the problem as intended, as the editorial shows, you will gain a lot. Don\\'t skip this one."
                    },
                    {
                        "username": "aman2k1",
                        "content": "why everyone is just using pow function when question is stating implement it ?"
                    },
                    {
                        "username": "charonme",
                        "content": "testcase 305 / 306\nx = 1.0000000000001\nn = -2147483648\ndoesn't work in PHP because the x accepted by the function evaluates to int 1\n\nwhen I force the type as `function myPow(double $x, $n) {` it gives a runtime error \"Uncaught TypeError: Solution::myPow(): Argument #1 (\\$x) must be of type double, int given\".\n\nAnd `echo gettype($x);` says it's an integer"
                    },
                    {
                        "username": "sandeep0423",
                        "content": "For test case 305: x = 1.0000000000001 and n = -2147483648 I get output as 0.99979 but in leetcode my output is 1.00000. which is not matching expected output 0.99979. Why is this different? Can anyone tell me?"
                    },
                    {
                        "username": "sandeep0423",
                        "content": "[@tifv](/tifv) Yes, I am running the program on notepad++ first. Then I copy it on leetcode"
                    },
                    {
                        "username": "tifv",
                        "content": "It is hard to answer such question without seeing the code. Also, the question itself is not clear: what do \\u201CI get output\\u201D and \\u201Cin leetcode my output is\\u201D mean? Are you running your program somewhere outside of leetcode and getting different results?"
                    },
                    {
                        "username": "sasukesharma",
                        "content": "come on, this `return Math.pow(x, n); `should not be aacceptable"
                    },
                    {
                        "username": "IhorPryyma",
                        "content": "is it really Medium task?"
                    },
                    {
                        "username": "wangshuoyuan2",
                        "content": "Who the hxxx made the last test case"
                    },
                    {
                        "username": "abhinav_singh987",
                        "content": "Hey Guys, Just wanted to know that  I have implemented both recursive and iterative O(log n) solution but the recursive one beats  100% users while iterative solution beats only 16.69% users. Why so?\\n\\nI think most people implemented the recursive solution and there is some percentage system going on\\n\\nbut recursive solution took 0ms to complete while the iterative took 3ms to complete, why iterative took more time?\\n"
                    },
                    {
                        "username": "grovre",
                        "content": "Depends on how you implemented it which we can\\'t see"
                    }
                ]
            },
            {
                "id": 1984020,
                "content": [
                    {
                        "username": "SabihaKhan",
                        "content": "It accepted my answer using Math.pow method in java\\uD83D\\uDE15"
                    },
                    {
                        "username": "mudhapakamanohar",
                        "content": "cheating, cheating karta hai tu \\uD83D\\uDE1F"
                    },
                    {
                        "username": "khe1154",
                        "content": "not a good interview question but its nice to know how `Math.pow` is implemented"
                    },
                    {
                        "username": "breathermachine",
                        "content": "Close enough. Note that the true pow() function can accept a double exponent, not just an integer."
                    },
                    {
                        "username": "codingconcierge",
                        "content": "If you solve the problem as intended, as the editorial shows, you will gain a lot. Don\\'t skip this one."
                    },
                    {
                        "username": "aman2k1",
                        "content": "why everyone is just using pow function when question is stating implement it ?"
                    },
                    {
                        "username": "charonme",
                        "content": "testcase 305 / 306\nx = 1.0000000000001\nn = -2147483648\ndoesn't work in PHP because the x accepted by the function evaluates to int 1\n\nwhen I force the type as `function myPow(double $x, $n) {` it gives a runtime error \"Uncaught TypeError: Solution::myPow(): Argument #1 (\\$x) must be of type double, int given\".\n\nAnd `echo gettype($x);` says it's an integer"
                    },
                    {
                        "username": "sandeep0423",
                        "content": "For test case 305: x = 1.0000000000001 and n = -2147483648 I get output as 0.99979 but in leetcode my output is 1.00000. which is not matching expected output 0.99979. Why is this different? Can anyone tell me?"
                    },
                    {
                        "username": "sandeep0423",
                        "content": "[@tifv](/tifv) Yes, I am running the program on notepad++ first. Then I copy it on leetcode"
                    },
                    {
                        "username": "tifv",
                        "content": "It is hard to answer such question without seeing the code. Also, the question itself is not clear: what do \\u201CI get output\\u201D and \\u201Cin leetcode my output is\\u201D mean? Are you running your program somewhere outside of leetcode and getting different results?"
                    },
                    {
                        "username": "sasukesharma",
                        "content": "come on, this `return Math.pow(x, n); `should not be aacceptable"
                    },
                    {
                        "username": "IhorPryyma",
                        "content": "is it really Medium task?"
                    },
                    {
                        "username": "wangshuoyuan2",
                        "content": "Who the hxxx made the last test case"
                    },
                    {
                        "username": "abhinav_singh987",
                        "content": "Hey Guys, Just wanted to know that  I have implemented both recursive and iterative O(log n) solution but the recursive one beats  100% users while iterative solution beats only 16.69% users. Why so?\\n\\nI think most people implemented the recursive solution and there is some percentage system going on\\n\\nbut recursive solution took 0ms to complete while the iterative took 3ms to complete, why iterative took more time?\\n"
                    },
                    {
                        "username": "grovre",
                        "content": "Depends on how you implemented it which we can\\'t see"
                    }
                ]
            },
            {
                "id": 1983893,
                "content": [
                    {
                        "username": "khushiii07",
                        "content": "the solution lies in the question title ..."
                    },
                    {
                        "username": "AlexanderFSP",
                        "content": "Does somebody know why with this solution for the `x = 2; n = -2147483648` case I've got `Time Limit Exceeded`:\n```\nfunction myPow(x: number, n: number): number {\n    if (!n)  return 1;\n\n    let result = x;\n\n    for (let i = 2; i <= Math.abs(n); i++) {\n        result *= x;\n    }\n\n    return n > 0 ? result : 1 / result;\n};\n```\n\nBut if I add extra checks for `x = 1` and `x = -1` - everything is good for the same case where `x = 2; n = -2147483648`.\n```\nfunction myPow(x: number, n: number): number {\n   //region extra checks for `x = 1` and `x = -1`, to make case with `x = 2` works..\n    if (x === 1) {\n        return 1;\n    }\n\n    if (x === -1) { \n        return n % 2 === 0 ? -x : x;\n    }\n   //endregion\n\n    if (!n) {\n        return 1;\n    }\n    \n    let result = x;\n\n    for (let i = 2; i <= Math.abs(n); i++) {\n        result *= x;\n    }\n\n    return n > 0 ? result : 1 / result;\n};\n```"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "[@psionl0](/psionl0) 0.1^-2147483648 != 0."
                    },
                    {
                        "username": "psionl0",
                        "content": "2147483648 multiplications will take a long time. You need to converge on the answer more rapidly. You can take advantage of the fact that if n is an even number then x^n = (x * x)^(n / 2).\n\n(Note also that when n = -2147483648 you can just return 0)."
                    },
                    {
                        "username": "vetor",
                        "content": "one way is to directly use math module which i wont suggest for medium easy question "
                    },
                    {
                        "username": "jason3410",
                        "content": "Split n into sum of power of 2.\\nThen binary search may help."
                    },
                    {
                        "username": "sasukesharma",
                        "content": "will get stackoverflow for n=2147483647 ..., lol"
                    },
                    {
                        "username": "andrew99154",
                        "content": "Before solving this problem, you'd better understand exponentiation by squaring.\nhttps://en.wikipedia.org/wiki/Exponentiation_by_squaring"
                    },
                    {
                        "username": "JiayingGao",
                        "content": "Is that a foul to use long long?"
                    },
                    {
                        "username": "isaiahgr",
                        "content": "return pow(x,n);"
                    },
                    {
                        "username": "Tanisha_gupta20",
                        "content": "Line 21: Char 46: runtime error: negation of -2147483648 cannot be represented in type 'int'; cast to an unsigned type to negate this value to itself (solution.cpp)\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:30:46\n\ncode-\n//const unsigned int mod=1e9+7;\n    double myPow(double x, int n)\n    {\n     \n\n        if(n==0)\n            return 1;\n        else if(x==0)\n            return 0;\n        else \n            if(n>0)\n                return powerhelper(x,n);\n             else\n                return ( 1.0/  powerhelper(x,-n) );          //again runtime error \n    }\n\n    double powerhelper(double x, int n)\n    {\n        if(n==0)\n            return 1;\n        else\n        if( n%2 == 0)\n        {\n            double temp = powerhelper(x,n/2);\n            return temp*temp;\n        }    \n        else\n        {\n            double temp = powerhelper(x,(n-1)/2);\n            return x*temp*temp;\n        }\n    }\n\n\nplease help me with the solution to my error, I have tried so many times to solve this. Please somebody help how to solve this error "
                    },
                    {
                        "username": "tifv",
                        "content": "`-n` is not an always valid operation on `int`: it can overflow with the given constraints. Convert `n` to some other type first (I suppose in C++ it should be `long long`)."
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Easily solvable by passing unsigned int to powerHelper and casting -n."
                    },
                    {
                        "username": "Seviferr",
                        "content": "Is this an issue with the test cases?\\n\\nIn javascript Math.pow(-1, -214748364) = -1\\nBut test case number 305 the same input expects the output to be 1\\n\\nAm I missing something? Thanks!"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "(-1)^even = 1  \nJavascript Math.pow(-1,214748364) does output 1, but the whole point of this problem is to write Math.pow()."
                    }
                ]
            },
            {
                "id": 1983888,
                "content": [
                    {
                        "username": "khushiii07",
                        "content": "the solution lies in the question title ..."
                    },
                    {
                        "username": "AlexanderFSP",
                        "content": "Does somebody know why with this solution for the `x = 2; n = -2147483648` case I've got `Time Limit Exceeded`:\n```\nfunction myPow(x: number, n: number): number {\n    if (!n)  return 1;\n\n    let result = x;\n\n    for (let i = 2; i <= Math.abs(n); i++) {\n        result *= x;\n    }\n\n    return n > 0 ? result : 1 / result;\n};\n```\n\nBut if I add extra checks for `x = 1` and `x = -1` - everything is good for the same case where `x = 2; n = -2147483648`.\n```\nfunction myPow(x: number, n: number): number {\n   //region extra checks for `x = 1` and `x = -1`, to make case with `x = 2` works..\n    if (x === 1) {\n        return 1;\n    }\n\n    if (x === -1) { \n        return n % 2 === 0 ? -x : x;\n    }\n   //endregion\n\n    if (!n) {\n        return 1;\n    }\n    \n    let result = x;\n\n    for (let i = 2; i <= Math.abs(n); i++) {\n        result *= x;\n    }\n\n    return n > 0 ? result : 1 / result;\n};\n```"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "[@psionl0](/psionl0) 0.1^-2147483648 != 0."
                    },
                    {
                        "username": "psionl0",
                        "content": "2147483648 multiplications will take a long time. You need to converge on the answer more rapidly. You can take advantage of the fact that if n is an even number then x^n = (x * x)^(n / 2).\n\n(Note also that when n = -2147483648 you can just return 0)."
                    },
                    {
                        "username": "vetor",
                        "content": "one way is to directly use math module which i wont suggest for medium easy question "
                    },
                    {
                        "username": "jason3410",
                        "content": "Split n into sum of power of 2.\\nThen binary search may help."
                    },
                    {
                        "username": "sasukesharma",
                        "content": "will get stackoverflow for n=2147483647 ..., lol"
                    },
                    {
                        "username": "andrew99154",
                        "content": "Before solving this problem, you'd better understand exponentiation by squaring.\nhttps://en.wikipedia.org/wiki/Exponentiation_by_squaring"
                    },
                    {
                        "username": "JiayingGao",
                        "content": "Is that a foul to use long long?"
                    },
                    {
                        "username": "isaiahgr",
                        "content": "return pow(x,n);"
                    },
                    {
                        "username": "Tanisha_gupta20",
                        "content": "Line 21: Char 46: runtime error: negation of -2147483648 cannot be represented in type 'int'; cast to an unsigned type to negate this value to itself (solution.cpp)\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:30:46\n\ncode-\n//const unsigned int mod=1e9+7;\n    double myPow(double x, int n)\n    {\n     \n\n        if(n==0)\n            return 1;\n        else if(x==0)\n            return 0;\n        else \n            if(n>0)\n                return powerhelper(x,n);\n             else\n                return ( 1.0/  powerhelper(x,-n) );          //again runtime error \n    }\n\n    double powerhelper(double x, int n)\n    {\n        if(n==0)\n            return 1;\n        else\n        if( n%2 == 0)\n        {\n            double temp = powerhelper(x,n/2);\n            return temp*temp;\n        }    \n        else\n        {\n            double temp = powerhelper(x,(n-1)/2);\n            return x*temp*temp;\n        }\n    }\n\n\nplease help me with the solution to my error, I have tried so many times to solve this. Please somebody help how to solve this error "
                    },
                    {
                        "username": "tifv",
                        "content": "`-n` is not an always valid operation on `int`: it can overflow with the given constraints. Convert `n` to some other type first (I suppose in C++ it should be `long long`)."
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Easily solvable by passing unsigned int to powerHelper and casting -n."
                    },
                    {
                        "username": "Seviferr",
                        "content": "Is this an issue with the test cases?\\n\\nIn javascript Math.pow(-1, -214748364) = -1\\nBut test case number 305 the same input expects the output to be 1\\n\\nAm I missing something? Thanks!"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "(-1)^even = 1  \nJavascript Math.pow(-1,214748364) does output 1, but the whole point of this problem is to write Math.pow()."
                    }
                ]
            },
            {
                "id": 1983758,
                "content": [
                    {
                        "username": "khushiii07",
                        "content": "the solution lies in the question title ..."
                    },
                    {
                        "username": "AlexanderFSP",
                        "content": "Does somebody know why with this solution for the `x = 2; n = -2147483648` case I've got `Time Limit Exceeded`:\n```\nfunction myPow(x: number, n: number): number {\n    if (!n)  return 1;\n\n    let result = x;\n\n    for (let i = 2; i <= Math.abs(n); i++) {\n        result *= x;\n    }\n\n    return n > 0 ? result : 1 / result;\n};\n```\n\nBut if I add extra checks for `x = 1` and `x = -1` - everything is good for the same case where `x = 2; n = -2147483648`.\n```\nfunction myPow(x: number, n: number): number {\n   //region extra checks for `x = 1` and `x = -1`, to make case with `x = 2` works..\n    if (x === 1) {\n        return 1;\n    }\n\n    if (x === -1) { \n        return n % 2 === 0 ? -x : x;\n    }\n   //endregion\n\n    if (!n) {\n        return 1;\n    }\n    \n    let result = x;\n\n    for (let i = 2; i <= Math.abs(n); i++) {\n        result *= x;\n    }\n\n    return n > 0 ? result : 1 / result;\n};\n```"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "[@psionl0](/psionl0) 0.1^-2147483648 != 0."
                    },
                    {
                        "username": "psionl0",
                        "content": "2147483648 multiplications will take a long time. You need to converge on the answer more rapidly. You can take advantage of the fact that if n is an even number then x^n = (x * x)^(n / 2).\n\n(Note also that when n = -2147483648 you can just return 0)."
                    },
                    {
                        "username": "vetor",
                        "content": "one way is to directly use math module which i wont suggest for medium easy question "
                    },
                    {
                        "username": "jason3410",
                        "content": "Split n into sum of power of 2.\\nThen binary search may help."
                    },
                    {
                        "username": "sasukesharma",
                        "content": "will get stackoverflow for n=2147483647 ..., lol"
                    },
                    {
                        "username": "andrew99154",
                        "content": "Before solving this problem, you'd better understand exponentiation by squaring.\nhttps://en.wikipedia.org/wiki/Exponentiation_by_squaring"
                    },
                    {
                        "username": "JiayingGao",
                        "content": "Is that a foul to use long long?"
                    },
                    {
                        "username": "isaiahgr",
                        "content": "return pow(x,n);"
                    },
                    {
                        "username": "Tanisha_gupta20",
                        "content": "Line 21: Char 46: runtime error: negation of -2147483648 cannot be represented in type 'int'; cast to an unsigned type to negate this value to itself (solution.cpp)\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:30:46\n\ncode-\n//const unsigned int mod=1e9+7;\n    double myPow(double x, int n)\n    {\n     \n\n        if(n==0)\n            return 1;\n        else if(x==0)\n            return 0;\n        else \n            if(n>0)\n                return powerhelper(x,n);\n             else\n                return ( 1.0/  powerhelper(x,-n) );          //again runtime error \n    }\n\n    double powerhelper(double x, int n)\n    {\n        if(n==0)\n            return 1;\n        else\n        if( n%2 == 0)\n        {\n            double temp = powerhelper(x,n/2);\n            return temp*temp;\n        }    \n        else\n        {\n            double temp = powerhelper(x,(n-1)/2);\n            return x*temp*temp;\n        }\n    }\n\n\nplease help me with the solution to my error, I have tried so many times to solve this. Please somebody help how to solve this error "
                    },
                    {
                        "username": "tifv",
                        "content": "`-n` is not an always valid operation on `int`: it can overflow with the given constraints. Convert `n` to some other type first (I suppose in C++ it should be `long long`)."
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Easily solvable by passing unsigned int to powerHelper and casting -n."
                    },
                    {
                        "username": "Seviferr",
                        "content": "Is this an issue with the test cases?\\n\\nIn javascript Math.pow(-1, -214748364) = -1\\nBut test case number 305 the same input expects the output to be 1\\n\\nAm I missing something? Thanks!"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "(-1)^even = 1  \nJavascript Math.pow(-1,214748364) does output 1, but the whole point of this problem is to write Math.pow()."
                    }
                ]
            },
            {
                "id": 1983740,
                "content": [
                    {
                        "username": "khushiii07",
                        "content": "the solution lies in the question title ..."
                    },
                    {
                        "username": "AlexanderFSP",
                        "content": "Does somebody know why with this solution for the `x = 2; n = -2147483648` case I've got `Time Limit Exceeded`:\n```\nfunction myPow(x: number, n: number): number {\n    if (!n)  return 1;\n\n    let result = x;\n\n    for (let i = 2; i <= Math.abs(n); i++) {\n        result *= x;\n    }\n\n    return n > 0 ? result : 1 / result;\n};\n```\n\nBut if I add extra checks for `x = 1` and `x = -1` - everything is good for the same case where `x = 2; n = -2147483648`.\n```\nfunction myPow(x: number, n: number): number {\n   //region extra checks for `x = 1` and `x = -1`, to make case with `x = 2` works..\n    if (x === 1) {\n        return 1;\n    }\n\n    if (x === -1) { \n        return n % 2 === 0 ? -x : x;\n    }\n   //endregion\n\n    if (!n) {\n        return 1;\n    }\n    \n    let result = x;\n\n    for (let i = 2; i <= Math.abs(n); i++) {\n        result *= x;\n    }\n\n    return n > 0 ? result : 1 / result;\n};\n```"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "[@psionl0](/psionl0) 0.1^-2147483648 != 0."
                    },
                    {
                        "username": "psionl0",
                        "content": "2147483648 multiplications will take a long time. You need to converge on the answer more rapidly. You can take advantage of the fact that if n is an even number then x^n = (x * x)^(n / 2).\n\n(Note also that when n = -2147483648 you can just return 0)."
                    },
                    {
                        "username": "vetor",
                        "content": "one way is to directly use math module which i wont suggest for medium easy question "
                    },
                    {
                        "username": "jason3410",
                        "content": "Split n into sum of power of 2.\\nThen binary search may help."
                    },
                    {
                        "username": "sasukesharma",
                        "content": "will get stackoverflow for n=2147483647 ..., lol"
                    },
                    {
                        "username": "andrew99154",
                        "content": "Before solving this problem, you'd better understand exponentiation by squaring.\nhttps://en.wikipedia.org/wiki/Exponentiation_by_squaring"
                    },
                    {
                        "username": "JiayingGao",
                        "content": "Is that a foul to use long long?"
                    },
                    {
                        "username": "isaiahgr",
                        "content": "return pow(x,n);"
                    },
                    {
                        "username": "Tanisha_gupta20",
                        "content": "Line 21: Char 46: runtime error: negation of -2147483648 cannot be represented in type 'int'; cast to an unsigned type to negate this value to itself (solution.cpp)\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:30:46\n\ncode-\n//const unsigned int mod=1e9+7;\n    double myPow(double x, int n)\n    {\n     \n\n        if(n==0)\n            return 1;\n        else if(x==0)\n            return 0;\n        else \n            if(n>0)\n                return powerhelper(x,n);\n             else\n                return ( 1.0/  powerhelper(x,-n) );          //again runtime error \n    }\n\n    double powerhelper(double x, int n)\n    {\n        if(n==0)\n            return 1;\n        else\n        if( n%2 == 0)\n        {\n            double temp = powerhelper(x,n/2);\n            return temp*temp;\n        }    \n        else\n        {\n            double temp = powerhelper(x,(n-1)/2);\n            return x*temp*temp;\n        }\n    }\n\n\nplease help me with the solution to my error, I have tried so many times to solve this. Please somebody help how to solve this error "
                    },
                    {
                        "username": "tifv",
                        "content": "`-n` is not an always valid operation on `int`: it can overflow with the given constraints. Convert `n` to some other type first (I suppose in C++ it should be `long long`)."
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Easily solvable by passing unsigned int to powerHelper and casting -n."
                    },
                    {
                        "username": "Seviferr",
                        "content": "Is this an issue with the test cases?\\n\\nIn javascript Math.pow(-1, -214748364) = -1\\nBut test case number 305 the same input expects the output to be 1\\n\\nAm I missing something? Thanks!"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "(-1)^even = 1  \nJavascript Math.pow(-1,214748364) does output 1, but the whole point of this problem is to write Math.pow()."
                    }
                ]
            },
            {
                "id": 1983669,
                "content": [
                    {
                        "username": "khushiii07",
                        "content": "the solution lies in the question title ..."
                    },
                    {
                        "username": "AlexanderFSP",
                        "content": "Does somebody know why with this solution for the `x = 2; n = -2147483648` case I've got `Time Limit Exceeded`:\n```\nfunction myPow(x: number, n: number): number {\n    if (!n)  return 1;\n\n    let result = x;\n\n    for (let i = 2; i <= Math.abs(n); i++) {\n        result *= x;\n    }\n\n    return n > 0 ? result : 1 / result;\n};\n```\n\nBut if I add extra checks for `x = 1` and `x = -1` - everything is good for the same case where `x = 2; n = -2147483648`.\n```\nfunction myPow(x: number, n: number): number {\n   //region extra checks for `x = 1` and `x = -1`, to make case with `x = 2` works..\n    if (x === 1) {\n        return 1;\n    }\n\n    if (x === -1) { \n        return n % 2 === 0 ? -x : x;\n    }\n   //endregion\n\n    if (!n) {\n        return 1;\n    }\n    \n    let result = x;\n\n    for (let i = 2; i <= Math.abs(n); i++) {\n        result *= x;\n    }\n\n    return n > 0 ? result : 1 / result;\n};\n```"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "[@psionl0](/psionl0) 0.1^-2147483648 != 0."
                    },
                    {
                        "username": "psionl0",
                        "content": "2147483648 multiplications will take a long time. You need to converge on the answer more rapidly. You can take advantage of the fact that if n is an even number then x^n = (x * x)^(n / 2).\n\n(Note also that when n = -2147483648 you can just return 0)."
                    },
                    {
                        "username": "vetor",
                        "content": "one way is to directly use math module which i wont suggest for medium easy question "
                    },
                    {
                        "username": "jason3410",
                        "content": "Split n into sum of power of 2.\\nThen binary search may help."
                    },
                    {
                        "username": "sasukesharma",
                        "content": "will get stackoverflow for n=2147483647 ..., lol"
                    },
                    {
                        "username": "andrew99154",
                        "content": "Before solving this problem, you'd better understand exponentiation by squaring.\nhttps://en.wikipedia.org/wiki/Exponentiation_by_squaring"
                    },
                    {
                        "username": "JiayingGao",
                        "content": "Is that a foul to use long long?"
                    },
                    {
                        "username": "isaiahgr",
                        "content": "return pow(x,n);"
                    },
                    {
                        "username": "Tanisha_gupta20",
                        "content": "Line 21: Char 46: runtime error: negation of -2147483648 cannot be represented in type 'int'; cast to an unsigned type to negate this value to itself (solution.cpp)\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:30:46\n\ncode-\n//const unsigned int mod=1e9+7;\n    double myPow(double x, int n)\n    {\n     \n\n        if(n==0)\n            return 1;\n        else if(x==0)\n            return 0;\n        else \n            if(n>0)\n                return powerhelper(x,n);\n             else\n                return ( 1.0/  powerhelper(x,-n) );          //again runtime error \n    }\n\n    double powerhelper(double x, int n)\n    {\n        if(n==0)\n            return 1;\n        else\n        if( n%2 == 0)\n        {\n            double temp = powerhelper(x,n/2);\n            return temp*temp;\n        }    \n        else\n        {\n            double temp = powerhelper(x,(n-1)/2);\n            return x*temp*temp;\n        }\n    }\n\n\nplease help me with the solution to my error, I have tried so many times to solve this. Please somebody help how to solve this error "
                    },
                    {
                        "username": "tifv",
                        "content": "`-n` is not an always valid operation on `int`: it can overflow with the given constraints. Convert `n` to some other type first (I suppose in C++ it should be `long long`)."
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Easily solvable by passing unsigned int to powerHelper and casting -n."
                    },
                    {
                        "username": "Seviferr",
                        "content": "Is this an issue with the test cases?\\n\\nIn javascript Math.pow(-1, -214748364) = -1\\nBut test case number 305 the same input expects the output to be 1\\n\\nAm I missing something? Thanks!"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "(-1)^even = 1  \nJavascript Math.pow(-1,214748364) does output 1, but the whole point of this problem is to write Math.pow()."
                    }
                ]
            },
            {
                "id": 1983667,
                "content": [
                    {
                        "username": "khushiii07",
                        "content": "the solution lies in the question title ..."
                    },
                    {
                        "username": "AlexanderFSP",
                        "content": "Does somebody know why with this solution for the `x = 2; n = -2147483648` case I've got `Time Limit Exceeded`:\n```\nfunction myPow(x: number, n: number): number {\n    if (!n)  return 1;\n\n    let result = x;\n\n    for (let i = 2; i <= Math.abs(n); i++) {\n        result *= x;\n    }\n\n    return n > 0 ? result : 1 / result;\n};\n```\n\nBut if I add extra checks for `x = 1` and `x = -1` - everything is good for the same case where `x = 2; n = -2147483648`.\n```\nfunction myPow(x: number, n: number): number {\n   //region extra checks for `x = 1` and `x = -1`, to make case with `x = 2` works..\n    if (x === 1) {\n        return 1;\n    }\n\n    if (x === -1) { \n        return n % 2 === 0 ? -x : x;\n    }\n   //endregion\n\n    if (!n) {\n        return 1;\n    }\n    \n    let result = x;\n\n    for (let i = 2; i <= Math.abs(n); i++) {\n        result *= x;\n    }\n\n    return n > 0 ? result : 1 / result;\n};\n```"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "[@psionl0](/psionl0) 0.1^-2147483648 != 0."
                    },
                    {
                        "username": "psionl0",
                        "content": "2147483648 multiplications will take a long time. You need to converge on the answer more rapidly. You can take advantage of the fact that if n is an even number then x^n = (x * x)^(n / 2).\n\n(Note also that when n = -2147483648 you can just return 0)."
                    },
                    {
                        "username": "vetor",
                        "content": "one way is to directly use math module which i wont suggest for medium easy question "
                    },
                    {
                        "username": "jason3410",
                        "content": "Split n into sum of power of 2.\\nThen binary search may help."
                    },
                    {
                        "username": "sasukesharma",
                        "content": "will get stackoverflow for n=2147483647 ..., lol"
                    },
                    {
                        "username": "andrew99154",
                        "content": "Before solving this problem, you'd better understand exponentiation by squaring.\nhttps://en.wikipedia.org/wiki/Exponentiation_by_squaring"
                    },
                    {
                        "username": "JiayingGao",
                        "content": "Is that a foul to use long long?"
                    },
                    {
                        "username": "isaiahgr",
                        "content": "return pow(x,n);"
                    },
                    {
                        "username": "Tanisha_gupta20",
                        "content": "Line 21: Char 46: runtime error: negation of -2147483648 cannot be represented in type 'int'; cast to an unsigned type to negate this value to itself (solution.cpp)\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:30:46\n\ncode-\n//const unsigned int mod=1e9+7;\n    double myPow(double x, int n)\n    {\n     \n\n        if(n==0)\n            return 1;\n        else if(x==0)\n            return 0;\n        else \n            if(n>0)\n                return powerhelper(x,n);\n             else\n                return ( 1.0/  powerhelper(x,-n) );          //again runtime error \n    }\n\n    double powerhelper(double x, int n)\n    {\n        if(n==0)\n            return 1;\n        else\n        if( n%2 == 0)\n        {\n            double temp = powerhelper(x,n/2);\n            return temp*temp;\n        }    \n        else\n        {\n            double temp = powerhelper(x,(n-1)/2);\n            return x*temp*temp;\n        }\n    }\n\n\nplease help me with the solution to my error, I have tried so many times to solve this. Please somebody help how to solve this error "
                    },
                    {
                        "username": "tifv",
                        "content": "`-n` is not an always valid operation on `int`: it can overflow with the given constraints. Convert `n` to some other type first (I suppose in C++ it should be `long long`)."
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Easily solvable by passing unsigned int to powerHelper and casting -n."
                    },
                    {
                        "username": "Seviferr",
                        "content": "Is this an issue with the test cases?\\n\\nIn javascript Math.pow(-1, -214748364) = -1\\nBut test case number 305 the same input expects the output to be 1\\n\\nAm I missing something? Thanks!"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "(-1)^even = 1  \nJavascript Math.pow(-1,214748364) does output 1, but the whole point of this problem is to write Math.pow()."
                    }
                ]
            },
            {
                "id": 1983620,
                "content": [
                    {
                        "username": "khushiii07",
                        "content": "the solution lies in the question title ..."
                    },
                    {
                        "username": "AlexanderFSP",
                        "content": "Does somebody know why with this solution for the `x = 2; n = -2147483648` case I've got `Time Limit Exceeded`:\n```\nfunction myPow(x: number, n: number): number {\n    if (!n)  return 1;\n\n    let result = x;\n\n    for (let i = 2; i <= Math.abs(n); i++) {\n        result *= x;\n    }\n\n    return n > 0 ? result : 1 / result;\n};\n```\n\nBut if I add extra checks for `x = 1` and `x = -1` - everything is good for the same case where `x = 2; n = -2147483648`.\n```\nfunction myPow(x: number, n: number): number {\n   //region extra checks for `x = 1` and `x = -1`, to make case with `x = 2` works..\n    if (x === 1) {\n        return 1;\n    }\n\n    if (x === -1) { \n        return n % 2 === 0 ? -x : x;\n    }\n   //endregion\n\n    if (!n) {\n        return 1;\n    }\n    \n    let result = x;\n\n    for (let i = 2; i <= Math.abs(n); i++) {\n        result *= x;\n    }\n\n    return n > 0 ? result : 1 / result;\n};\n```"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "[@psionl0](/psionl0) 0.1^-2147483648 != 0."
                    },
                    {
                        "username": "psionl0",
                        "content": "2147483648 multiplications will take a long time. You need to converge on the answer more rapidly. You can take advantage of the fact that if n is an even number then x^n = (x * x)^(n / 2).\n\n(Note also that when n = -2147483648 you can just return 0)."
                    },
                    {
                        "username": "vetor",
                        "content": "one way is to directly use math module which i wont suggest for medium easy question "
                    },
                    {
                        "username": "jason3410",
                        "content": "Split n into sum of power of 2.\\nThen binary search may help."
                    },
                    {
                        "username": "sasukesharma",
                        "content": "will get stackoverflow for n=2147483647 ..., lol"
                    },
                    {
                        "username": "andrew99154",
                        "content": "Before solving this problem, you'd better understand exponentiation by squaring.\nhttps://en.wikipedia.org/wiki/Exponentiation_by_squaring"
                    },
                    {
                        "username": "JiayingGao",
                        "content": "Is that a foul to use long long?"
                    },
                    {
                        "username": "isaiahgr",
                        "content": "return pow(x,n);"
                    },
                    {
                        "username": "Tanisha_gupta20",
                        "content": "Line 21: Char 46: runtime error: negation of -2147483648 cannot be represented in type 'int'; cast to an unsigned type to negate this value to itself (solution.cpp)\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:30:46\n\ncode-\n//const unsigned int mod=1e9+7;\n    double myPow(double x, int n)\n    {\n     \n\n        if(n==0)\n            return 1;\n        else if(x==0)\n            return 0;\n        else \n            if(n>0)\n                return powerhelper(x,n);\n             else\n                return ( 1.0/  powerhelper(x,-n) );          //again runtime error \n    }\n\n    double powerhelper(double x, int n)\n    {\n        if(n==0)\n            return 1;\n        else\n        if( n%2 == 0)\n        {\n            double temp = powerhelper(x,n/2);\n            return temp*temp;\n        }    \n        else\n        {\n            double temp = powerhelper(x,(n-1)/2);\n            return x*temp*temp;\n        }\n    }\n\n\nplease help me with the solution to my error, I have tried so many times to solve this. Please somebody help how to solve this error "
                    },
                    {
                        "username": "tifv",
                        "content": "`-n` is not an always valid operation on `int`: it can overflow with the given constraints. Convert `n` to some other type first (I suppose in C++ it should be `long long`)."
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Easily solvable by passing unsigned int to powerHelper and casting -n."
                    },
                    {
                        "username": "Seviferr",
                        "content": "Is this an issue with the test cases?\\n\\nIn javascript Math.pow(-1, -214748364) = -1\\nBut test case number 305 the same input expects the output to be 1\\n\\nAm I missing something? Thanks!"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "(-1)^even = 1  \nJavascript Math.pow(-1,214748364) does output 1, but the whole point of this problem is to write Math.pow()."
                    }
                ]
            },
            {
                "id": 1983539,
                "content": [
                    {
                        "username": "khushiii07",
                        "content": "the solution lies in the question title ..."
                    },
                    {
                        "username": "AlexanderFSP",
                        "content": "Does somebody know why with this solution for the `x = 2; n = -2147483648` case I've got `Time Limit Exceeded`:\n```\nfunction myPow(x: number, n: number): number {\n    if (!n)  return 1;\n\n    let result = x;\n\n    for (let i = 2; i <= Math.abs(n); i++) {\n        result *= x;\n    }\n\n    return n > 0 ? result : 1 / result;\n};\n```\n\nBut if I add extra checks for `x = 1` and `x = -1` - everything is good for the same case where `x = 2; n = -2147483648`.\n```\nfunction myPow(x: number, n: number): number {\n   //region extra checks for `x = 1` and `x = -1`, to make case with `x = 2` works..\n    if (x === 1) {\n        return 1;\n    }\n\n    if (x === -1) { \n        return n % 2 === 0 ? -x : x;\n    }\n   //endregion\n\n    if (!n) {\n        return 1;\n    }\n    \n    let result = x;\n\n    for (let i = 2; i <= Math.abs(n); i++) {\n        result *= x;\n    }\n\n    return n > 0 ? result : 1 / result;\n};\n```"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "[@psionl0](/psionl0) 0.1^-2147483648 != 0."
                    },
                    {
                        "username": "psionl0",
                        "content": "2147483648 multiplications will take a long time. You need to converge on the answer more rapidly. You can take advantage of the fact that if n is an even number then x^n = (x * x)^(n / 2).\n\n(Note also that when n = -2147483648 you can just return 0)."
                    },
                    {
                        "username": "vetor",
                        "content": "one way is to directly use math module which i wont suggest for medium easy question "
                    },
                    {
                        "username": "jason3410",
                        "content": "Split n into sum of power of 2.\\nThen binary search may help."
                    },
                    {
                        "username": "sasukesharma",
                        "content": "will get stackoverflow for n=2147483647 ..., lol"
                    },
                    {
                        "username": "andrew99154",
                        "content": "Before solving this problem, you'd better understand exponentiation by squaring.\nhttps://en.wikipedia.org/wiki/Exponentiation_by_squaring"
                    },
                    {
                        "username": "JiayingGao",
                        "content": "Is that a foul to use long long?"
                    },
                    {
                        "username": "isaiahgr",
                        "content": "return pow(x,n);"
                    },
                    {
                        "username": "Tanisha_gupta20",
                        "content": "Line 21: Char 46: runtime error: negation of -2147483648 cannot be represented in type 'int'; cast to an unsigned type to negate this value to itself (solution.cpp)\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:30:46\n\ncode-\n//const unsigned int mod=1e9+7;\n    double myPow(double x, int n)\n    {\n     \n\n        if(n==0)\n            return 1;\n        else if(x==0)\n            return 0;\n        else \n            if(n>0)\n                return powerhelper(x,n);\n             else\n                return ( 1.0/  powerhelper(x,-n) );          //again runtime error \n    }\n\n    double powerhelper(double x, int n)\n    {\n        if(n==0)\n            return 1;\n        else\n        if( n%2 == 0)\n        {\n            double temp = powerhelper(x,n/2);\n            return temp*temp;\n        }    \n        else\n        {\n            double temp = powerhelper(x,(n-1)/2);\n            return x*temp*temp;\n        }\n    }\n\n\nplease help me with the solution to my error, I have tried so many times to solve this. Please somebody help how to solve this error "
                    },
                    {
                        "username": "tifv",
                        "content": "`-n` is not an always valid operation on `int`: it can overflow with the given constraints. Convert `n` to some other type first (I suppose in C++ it should be `long long`)."
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Easily solvable by passing unsigned int to powerHelper and casting -n."
                    },
                    {
                        "username": "Seviferr",
                        "content": "Is this an issue with the test cases?\\n\\nIn javascript Math.pow(-1, -214748364) = -1\\nBut test case number 305 the same input expects the output to be 1\\n\\nAm I missing something? Thanks!"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "(-1)^even = 1  \nJavascript Math.pow(-1,214748364) does output 1, but the whole point of this problem is to write Math.pow()."
                    }
                ]
            },
            {
                "id": 1983287,
                "content": [
                    {
                        "username": "khushiii07",
                        "content": "the solution lies in the question title ..."
                    },
                    {
                        "username": "AlexanderFSP",
                        "content": "Does somebody know why with this solution for the `x = 2; n = -2147483648` case I've got `Time Limit Exceeded`:\n```\nfunction myPow(x: number, n: number): number {\n    if (!n)  return 1;\n\n    let result = x;\n\n    for (let i = 2; i <= Math.abs(n); i++) {\n        result *= x;\n    }\n\n    return n > 0 ? result : 1 / result;\n};\n```\n\nBut if I add extra checks for `x = 1` and `x = -1` - everything is good for the same case where `x = 2; n = -2147483648`.\n```\nfunction myPow(x: number, n: number): number {\n   //region extra checks for `x = 1` and `x = -1`, to make case with `x = 2` works..\n    if (x === 1) {\n        return 1;\n    }\n\n    if (x === -1) { \n        return n % 2 === 0 ? -x : x;\n    }\n   //endregion\n\n    if (!n) {\n        return 1;\n    }\n    \n    let result = x;\n\n    for (let i = 2; i <= Math.abs(n); i++) {\n        result *= x;\n    }\n\n    return n > 0 ? result : 1 / result;\n};\n```"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "[@psionl0](/psionl0) 0.1^-2147483648 != 0."
                    },
                    {
                        "username": "psionl0",
                        "content": "2147483648 multiplications will take a long time. You need to converge on the answer more rapidly. You can take advantage of the fact that if n is an even number then x^n = (x * x)^(n / 2).\n\n(Note also that when n = -2147483648 you can just return 0)."
                    },
                    {
                        "username": "vetor",
                        "content": "one way is to directly use math module which i wont suggest for medium easy question "
                    },
                    {
                        "username": "jason3410",
                        "content": "Split n into sum of power of 2.\\nThen binary search may help."
                    },
                    {
                        "username": "sasukesharma",
                        "content": "will get stackoverflow for n=2147483647 ..., lol"
                    },
                    {
                        "username": "andrew99154",
                        "content": "Before solving this problem, you'd better understand exponentiation by squaring.\nhttps://en.wikipedia.org/wiki/Exponentiation_by_squaring"
                    },
                    {
                        "username": "JiayingGao",
                        "content": "Is that a foul to use long long?"
                    },
                    {
                        "username": "isaiahgr",
                        "content": "return pow(x,n);"
                    },
                    {
                        "username": "Tanisha_gupta20",
                        "content": "Line 21: Char 46: runtime error: negation of -2147483648 cannot be represented in type 'int'; cast to an unsigned type to negate this value to itself (solution.cpp)\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:30:46\n\ncode-\n//const unsigned int mod=1e9+7;\n    double myPow(double x, int n)\n    {\n     \n\n        if(n==0)\n            return 1;\n        else if(x==0)\n            return 0;\n        else \n            if(n>0)\n                return powerhelper(x,n);\n             else\n                return ( 1.0/  powerhelper(x,-n) );          //again runtime error \n    }\n\n    double powerhelper(double x, int n)\n    {\n        if(n==0)\n            return 1;\n        else\n        if( n%2 == 0)\n        {\n            double temp = powerhelper(x,n/2);\n            return temp*temp;\n        }    \n        else\n        {\n            double temp = powerhelper(x,(n-1)/2);\n            return x*temp*temp;\n        }\n    }\n\n\nplease help me with the solution to my error, I have tried so many times to solve this. Please somebody help how to solve this error "
                    },
                    {
                        "username": "tifv",
                        "content": "`-n` is not an always valid operation on `int`: it can overflow with the given constraints. Convert `n` to some other type first (I suppose in C++ it should be `long long`)."
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Easily solvable by passing unsigned int to powerHelper and casting -n."
                    },
                    {
                        "username": "Seviferr",
                        "content": "Is this an issue with the test cases?\\n\\nIn javascript Math.pow(-1, -214748364) = -1\\nBut test case number 305 the same input expects the output to be 1\\n\\nAm I missing something? Thanks!"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "(-1)^even = 1  \nJavascript Math.pow(-1,214748364) does output 1, but the whole point of this problem is to write Math.pow()."
                    }
                ]
            },
            {
                "id": 1979747,
                "content": [
                    {
                        "username": "khushiii07",
                        "content": "the solution lies in the question title ..."
                    },
                    {
                        "username": "AlexanderFSP",
                        "content": "Does somebody know why with this solution for the `x = 2; n = -2147483648` case I've got `Time Limit Exceeded`:\n```\nfunction myPow(x: number, n: number): number {\n    if (!n)  return 1;\n\n    let result = x;\n\n    for (let i = 2; i <= Math.abs(n); i++) {\n        result *= x;\n    }\n\n    return n > 0 ? result : 1 / result;\n};\n```\n\nBut if I add extra checks for `x = 1` and `x = -1` - everything is good for the same case where `x = 2; n = -2147483648`.\n```\nfunction myPow(x: number, n: number): number {\n   //region extra checks for `x = 1` and `x = -1`, to make case with `x = 2` works..\n    if (x === 1) {\n        return 1;\n    }\n\n    if (x === -1) { \n        return n % 2 === 0 ? -x : x;\n    }\n   //endregion\n\n    if (!n) {\n        return 1;\n    }\n    \n    let result = x;\n\n    for (let i = 2; i <= Math.abs(n); i++) {\n        result *= x;\n    }\n\n    return n > 0 ? result : 1 / result;\n};\n```"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "[@psionl0](/psionl0) 0.1^-2147483648 != 0."
                    },
                    {
                        "username": "psionl0",
                        "content": "2147483648 multiplications will take a long time. You need to converge on the answer more rapidly. You can take advantage of the fact that if n is an even number then x^n = (x * x)^(n / 2).\n\n(Note also that when n = -2147483648 you can just return 0)."
                    },
                    {
                        "username": "vetor",
                        "content": "one way is to directly use math module which i wont suggest for medium easy question "
                    },
                    {
                        "username": "jason3410",
                        "content": "Split n into sum of power of 2.\\nThen binary search may help."
                    },
                    {
                        "username": "sasukesharma",
                        "content": "will get stackoverflow for n=2147483647 ..., lol"
                    },
                    {
                        "username": "andrew99154",
                        "content": "Before solving this problem, you'd better understand exponentiation by squaring.\nhttps://en.wikipedia.org/wiki/Exponentiation_by_squaring"
                    },
                    {
                        "username": "JiayingGao",
                        "content": "Is that a foul to use long long?"
                    },
                    {
                        "username": "isaiahgr",
                        "content": "return pow(x,n);"
                    },
                    {
                        "username": "Tanisha_gupta20",
                        "content": "Line 21: Char 46: runtime error: negation of -2147483648 cannot be represented in type 'int'; cast to an unsigned type to negate this value to itself (solution.cpp)\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:30:46\n\ncode-\n//const unsigned int mod=1e9+7;\n    double myPow(double x, int n)\n    {\n     \n\n        if(n==0)\n            return 1;\n        else if(x==0)\n            return 0;\n        else \n            if(n>0)\n                return powerhelper(x,n);\n             else\n                return ( 1.0/  powerhelper(x,-n) );          //again runtime error \n    }\n\n    double powerhelper(double x, int n)\n    {\n        if(n==0)\n            return 1;\n        else\n        if( n%2 == 0)\n        {\n            double temp = powerhelper(x,n/2);\n            return temp*temp;\n        }    \n        else\n        {\n            double temp = powerhelper(x,(n-1)/2);\n            return x*temp*temp;\n        }\n    }\n\n\nplease help me with the solution to my error, I have tried so many times to solve this. Please somebody help how to solve this error "
                    },
                    {
                        "username": "tifv",
                        "content": "`-n` is not an always valid operation on `int`: it can overflow with the given constraints. Convert `n` to some other type first (I suppose in C++ it should be `long long`)."
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Easily solvable by passing unsigned int to powerHelper and casting -n."
                    },
                    {
                        "username": "Seviferr",
                        "content": "Is this an issue with the test cases?\\n\\nIn javascript Math.pow(-1, -214748364) = -1\\nBut test case number 305 the same input expects the output to be 1\\n\\nAm I missing something? Thanks!"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "(-1)^even = 1  \nJavascript Math.pow(-1,214748364) does output 1, but the whole point of this problem is to write Math.pow()."
                    }
                ]
            },
            {
                "id": 1977224,
                "content": [
                    {
                        "username": "Nisarg_1709",
                        "content": "This question trick to find when try to find the power of negative  number"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "really? is this medium? \n\nLeetcode keeps making me amazed. Some `easy` problems are hard as hell, some `medium` or `hard` problems are below `easy` and you solve them in some seconds. \n\nATTENTION SPOILER: \nI wrote x ** n and was sure the error will pop up, but it passed..."
                    },
                    {
                        "username": "milanthakor",
                        "content": "What would be the time complexity of the below algorithm? \\n\\nBelow approach is more intuitive to compare to the one in the Editorial. However, I am not able to figure out the time complexity of the algorithm. The time complexity is not exactly O(logn), but is not O(n) either, it somewhere lies in-between. \\n\\nCould anyone please help me to understand it? If possible, take x = 2 and n = 50 as an example. As per my understanding\\n1. When `i = 1` and `y = 50`, the value of `i` will be 1, 2, 4, 8, 16, 32. Then both will be reset to `i = 1` and `y = 50 - 32 = 18`.\\n2. When `i = 1` and `y = 18`, the value of `i` will be 1, 2, 4, 5, 16. Then again both will be reset to `i = 1` and `y = 18 - 16 = 2`.\\n3. When `i = 1` and `y = 2`, the value of `i` will be 1. Then again both will be reset to `i = 1` and `y = 2 - 1`. \\n4. When `i = 1` and `y = 1`, the value of `i` will be 1. Then again both will be reset to `i = 1` and `y = 1 - 1 = 0`. And the algorithm completes.\\n\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        int y = abs(n);\\n\\n        // Base Condition.\\n        if (x == 0) return x;\\n        if (n == 0) return 1;\\n\\n        long long i = 1;\\n        double ans = 1, temp = x;\\n        while (y != 0) {\\n            if (i + i >= y) {\\n                y = y - i;\\n                i = 1;\\n                ans *= temp;\\n                temp = x;\\n            } else {\\n                temp *= temp;\\n                i <<= 1;\\n            }\\n        }\\n\\n        return n < 0 ? (1 / ans) : ans;\\n    }\\n};\\n``"
                    },
                    {
                        "username": "Boltfire",
                        "content": "Use math.pow() and make your life easier."
                    },
                    {
                        "username": "Eckhart01",
                        "content": "lol I got it correct in one run"
                    },
                    {
                        "username": "psionl0",
                        "content": "Congratulations on anticipating the n = -2147483648 edge case."
                    },
                    {
                        "username": "user2387402",
                        "content": "bruh..."
                    },
                    {
                        "username": "singhsupriya711",
                        "content": "memory error:291/306 test cases passed but this input:\\nx =\\n0.00001\\nn =\\n2147483647\\ncode:\\nans=1\\n        if n>0:\\n            \\n            for i in range(1,n+1):\\n                ans=ans*x\\n        else:\\n            for i in range(1,-n+1):\\n                ans=ans*(1/x)\\n\\n        return ans\\ncan anyone say why??\\n"
                    },
                    {
                        "username": "singhsupriya711",
                        "content": "[@Sacristaria](/Sacristaria) thanks"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Range essentially creates a list, which given the range uses up all the memory. Use xrange instead. Though it will likely timeout due to the large value."
                    },
                    {
                        "username": "Raedrin",
                        "content": "this problem is incredibly dumb. The fact that some of the test cases are greater than an int32 max value implies that the person calling the function cant read argument types."
                    },
                    {
                        "username": "19bec1397",
                        "content": "class Solution {\n    public double myPow(double x, int n) {\n\n        if(n==0){\n            return 1 ;\n        }\n        if(n==Integer.MIN_VALUE){\n             n = n +1 ; \n              return (1/x)*myPow(x,n);\n        }\n        if(n<0){\n            n = -n ; \n            x= 1/x;\n        }\n        if(n%2==0){\n            return myPow(x*x,n/2);\n        }else{\n            return x*myPow(x,n-1);\n        }\n        \n    }\n}\njava solution passes all test cases"
                    },
                    {
                        "username": "ameypathak39",
                        "content": "we have to return x**n"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "You have to implement x**n."
                    }
                ]
            },
            {
                "id": 1967043,
                "content": [
                    {
                        "username": "Nisarg_1709",
                        "content": "This question trick to find when try to find the power of negative  number"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "really? is this medium? \n\nLeetcode keeps making me amazed. Some `easy` problems are hard as hell, some `medium` or `hard` problems are below `easy` and you solve them in some seconds. \n\nATTENTION SPOILER: \nI wrote x ** n and was sure the error will pop up, but it passed..."
                    },
                    {
                        "username": "milanthakor",
                        "content": "What would be the time complexity of the below algorithm? \\n\\nBelow approach is more intuitive to compare to the one in the Editorial. However, I am not able to figure out the time complexity of the algorithm. The time complexity is not exactly O(logn), but is not O(n) either, it somewhere lies in-between. \\n\\nCould anyone please help me to understand it? If possible, take x = 2 and n = 50 as an example. As per my understanding\\n1. When `i = 1` and `y = 50`, the value of `i` will be 1, 2, 4, 8, 16, 32. Then both will be reset to `i = 1` and `y = 50 - 32 = 18`.\\n2. When `i = 1` and `y = 18`, the value of `i` will be 1, 2, 4, 5, 16. Then again both will be reset to `i = 1` and `y = 18 - 16 = 2`.\\n3. When `i = 1` and `y = 2`, the value of `i` will be 1. Then again both will be reset to `i = 1` and `y = 2 - 1`. \\n4. When `i = 1` and `y = 1`, the value of `i` will be 1. Then again both will be reset to `i = 1` and `y = 1 - 1 = 0`. And the algorithm completes.\\n\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        int y = abs(n);\\n\\n        // Base Condition.\\n        if (x == 0) return x;\\n        if (n == 0) return 1;\\n\\n        long long i = 1;\\n        double ans = 1, temp = x;\\n        while (y != 0) {\\n            if (i + i >= y) {\\n                y = y - i;\\n                i = 1;\\n                ans *= temp;\\n                temp = x;\\n            } else {\\n                temp *= temp;\\n                i <<= 1;\\n            }\\n        }\\n\\n        return n < 0 ? (1 / ans) : ans;\\n    }\\n};\\n``"
                    },
                    {
                        "username": "Boltfire",
                        "content": "Use math.pow() and make your life easier."
                    },
                    {
                        "username": "Eckhart01",
                        "content": "lol I got it correct in one run"
                    },
                    {
                        "username": "psionl0",
                        "content": "Congratulations on anticipating the n = -2147483648 edge case."
                    },
                    {
                        "username": "user2387402",
                        "content": "bruh..."
                    },
                    {
                        "username": "singhsupriya711",
                        "content": "memory error:291/306 test cases passed but this input:\\nx =\\n0.00001\\nn =\\n2147483647\\ncode:\\nans=1\\n        if n>0:\\n            \\n            for i in range(1,n+1):\\n                ans=ans*x\\n        else:\\n            for i in range(1,-n+1):\\n                ans=ans*(1/x)\\n\\n        return ans\\ncan anyone say why??\\n"
                    },
                    {
                        "username": "singhsupriya711",
                        "content": "[@Sacristaria](/Sacristaria) thanks"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Range essentially creates a list, which given the range uses up all the memory. Use xrange instead. Though it will likely timeout due to the large value."
                    },
                    {
                        "username": "Raedrin",
                        "content": "this problem is incredibly dumb. The fact that some of the test cases are greater than an int32 max value implies that the person calling the function cant read argument types."
                    },
                    {
                        "username": "19bec1397",
                        "content": "class Solution {\n    public double myPow(double x, int n) {\n\n        if(n==0){\n            return 1 ;\n        }\n        if(n==Integer.MIN_VALUE){\n             n = n +1 ; \n              return (1/x)*myPow(x,n);\n        }\n        if(n<0){\n            n = -n ; \n            x= 1/x;\n        }\n        if(n%2==0){\n            return myPow(x*x,n/2);\n        }else{\n            return x*myPow(x,n-1);\n        }\n        \n    }\n}\njava solution passes all test cases"
                    },
                    {
                        "username": "ameypathak39",
                        "content": "we have to return x**n"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "You have to implement x**n."
                    }
                ]
            },
            {
                "id": 1966381,
                "content": [
                    {
                        "username": "Nisarg_1709",
                        "content": "This question trick to find when try to find the power of negative  number"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "really? is this medium? \n\nLeetcode keeps making me amazed. Some `easy` problems are hard as hell, some `medium` or `hard` problems are below `easy` and you solve them in some seconds. \n\nATTENTION SPOILER: \nI wrote x ** n and was sure the error will pop up, but it passed..."
                    },
                    {
                        "username": "milanthakor",
                        "content": "What would be the time complexity of the below algorithm? \\n\\nBelow approach is more intuitive to compare to the one in the Editorial. However, I am not able to figure out the time complexity of the algorithm. The time complexity is not exactly O(logn), but is not O(n) either, it somewhere lies in-between. \\n\\nCould anyone please help me to understand it? If possible, take x = 2 and n = 50 as an example. As per my understanding\\n1. When `i = 1` and `y = 50`, the value of `i` will be 1, 2, 4, 8, 16, 32. Then both will be reset to `i = 1` and `y = 50 - 32 = 18`.\\n2. When `i = 1` and `y = 18`, the value of `i` will be 1, 2, 4, 5, 16. Then again both will be reset to `i = 1` and `y = 18 - 16 = 2`.\\n3. When `i = 1` and `y = 2`, the value of `i` will be 1. Then again both will be reset to `i = 1` and `y = 2 - 1`. \\n4. When `i = 1` and `y = 1`, the value of `i` will be 1. Then again both will be reset to `i = 1` and `y = 1 - 1 = 0`. And the algorithm completes.\\n\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        int y = abs(n);\\n\\n        // Base Condition.\\n        if (x == 0) return x;\\n        if (n == 0) return 1;\\n\\n        long long i = 1;\\n        double ans = 1, temp = x;\\n        while (y != 0) {\\n            if (i + i >= y) {\\n                y = y - i;\\n                i = 1;\\n                ans *= temp;\\n                temp = x;\\n            } else {\\n                temp *= temp;\\n                i <<= 1;\\n            }\\n        }\\n\\n        return n < 0 ? (1 / ans) : ans;\\n    }\\n};\\n``"
                    },
                    {
                        "username": "Boltfire",
                        "content": "Use math.pow() and make your life easier."
                    },
                    {
                        "username": "Eckhart01",
                        "content": "lol I got it correct in one run"
                    },
                    {
                        "username": "psionl0",
                        "content": "Congratulations on anticipating the n = -2147483648 edge case."
                    },
                    {
                        "username": "user2387402",
                        "content": "bruh..."
                    },
                    {
                        "username": "singhsupriya711",
                        "content": "memory error:291/306 test cases passed but this input:\\nx =\\n0.00001\\nn =\\n2147483647\\ncode:\\nans=1\\n        if n>0:\\n            \\n            for i in range(1,n+1):\\n                ans=ans*x\\n        else:\\n            for i in range(1,-n+1):\\n                ans=ans*(1/x)\\n\\n        return ans\\ncan anyone say why??\\n"
                    },
                    {
                        "username": "singhsupriya711",
                        "content": "[@Sacristaria](/Sacristaria) thanks"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Range essentially creates a list, which given the range uses up all the memory. Use xrange instead. Though it will likely timeout due to the large value."
                    },
                    {
                        "username": "Raedrin",
                        "content": "this problem is incredibly dumb. The fact that some of the test cases are greater than an int32 max value implies that the person calling the function cant read argument types."
                    },
                    {
                        "username": "19bec1397",
                        "content": "class Solution {\n    public double myPow(double x, int n) {\n\n        if(n==0){\n            return 1 ;\n        }\n        if(n==Integer.MIN_VALUE){\n             n = n +1 ; \n              return (1/x)*myPow(x,n);\n        }\n        if(n<0){\n            n = -n ; \n            x= 1/x;\n        }\n        if(n%2==0){\n            return myPow(x*x,n/2);\n        }else{\n            return x*myPow(x,n-1);\n        }\n        \n    }\n}\njava solution passes all test cases"
                    },
                    {
                        "username": "ameypathak39",
                        "content": "we have to return x**n"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "You have to implement x**n."
                    }
                ]
            },
            {
                "id": 1966342,
                "content": [
                    {
                        "username": "Nisarg_1709",
                        "content": "This question trick to find when try to find the power of negative  number"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "really? is this medium? \n\nLeetcode keeps making me amazed. Some `easy` problems are hard as hell, some `medium` or `hard` problems are below `easy` and you solve them in some seconds. \n\nATTENTION SPOILER: \nI wrote x ** n and was sure the error will pop up, but it passed..."
                    },
                    {
                        "username": "milanthakor",
                        "content": "What would be the time complexity of the below algorithm? \\n\\nBelow approach is more intuitive to compare to the one in the Editorial. However, I am not able to figure out the time complexity of the algorithm. The time complexity is not exactly O(logn), but is not O(n) either, it somewhere lies in-between. \\n\\nCould anyone please help me to understand it? If possible, take x = 2 and n = 50 as an example. As per my understanding\\n1. When `i = 1` and `y = 50`, the value of `i` will be 1, 2, 4, 8, 16, 32. Then both will be reset to `i = 1` and `y = 50 - 32 = 18`.\\n2. When `i = 1` and `y = 18`, the value of `i` will be 1, 2, 4, 5, 16. Then again both will be reset to `i = 1` and `y = 18 - 16 = 2`.\\n3. When `i = 1` and `y = 2`, the value of `i` will be 1. Then again both will be reset to `i = 1` and `y = 2 - 1`. \\n4. When `i = 1` and `y = 1`, the value of `i` will be 1. Then again both will be reset to `i = 1` and `y = 1 - 1 = 0`. And the algorithm completes.\\n\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        int y = abs(n);\\n\\n        // Base Condition.\\n        if (x == 0) return x;\\n        if (n == 0) return 1;\\n\\n        long long i = 1;\\n        double ans = 1, temp = x;\\n        while (y != 0) {\\n            if (i + i >= y) {\\n                y = y - i;\\n                i = 1;\\n                ans *= temp;\\n                temp = x;\\n            } else {\\n                temp *= temp;\\n                i <<= 1;\\n            }\\n        }\\n\\n        return n < 0 ? (1 / ans) : ans;\\n    }\\n};\\n``"
                    },
                    {
                        "username": "Boltfire",
                        "content": "Use math.pow() and make your life easier."
                    },
                    {
                        "username": "Eckhart01",
                        "content": "lol I got it correct in one run"
                    },
                    {
                        "username": "psionl0",
                        "content": "Congratulations on anticipating the n = -2147483648 edge case."
                    },
                    {
                        "username": "user2387402",
                        "content": "bruh..."
                    },
                    {
                        "username": "singhsupriya711",
                        "content": "memory error:291/306 test cases passed but this input:\\nx =\\n0.00001\\nn =\\n2147483647\\ncode:\\nans=1\\n        if n>0:\\n            \\n            for i in range(1,n+1):\\n                ans=ans*x\\n        else:\\n            for i in range(1,-n+1):\\n                ans=ans*(1/x)\\n\\n        return ans\\ncan anyone say why??\\n"
                    },
                    {
                        "username": "singhsupriya711",
                        "content": "[@Sacristaria](/Sacristaria) thanks"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Range essentially creates a list, which given the range uses up all the memory. Use xrange instead. Though it will likely timeout due to the large value."
                    },
                    {
                        "username": "Raedrin",
                        "content": "this problem is incredibly dumb. The fact that some of the test cases are greater than an int32 max value implies that the person calling the function cant read argument types."
                    },
                    {
                        "username": "19bec1397",
                        "content": "class Solution {\n    public double myPow(double x, int n) {\n\n        if(n==0){\n            return 1 ;\n        }\n        if(n==Integer.MIN_VALUE){\n             n = n +1 ; \n              return (1/x)*myPow(x,n);\n        }\n        if(n<0){\n            n = -n ; \n            x= 1/x;\n        }\n        if(n%2==0){\n            return myPow(x*x,n/2);\n        }else{\n            return x*myPow(x,n-1);\n        }\n        \n    }\n}\njava solution passes all test cases"
                    },
                    {
                        "username": "ameypathak39",
                        "content": "we have to return x**n"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "You have to implement x**n."
                    }
                ]
            },
            {
                "id": 1965905,
                "content": [
                    {
                        "username": "Nisarg_1709",
                        "content": "This question trick to find when try to find the power of negative  number"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "really? is this medium? \n\nLeetcode keeps making me amazed. Some `easy` problems are hard as hell, some `medium` or `hard` problems are below `easy` and you solve them in some seconds. \n\nATTENTION SPOILER: \nI wrote x ** n and was sure the error will pop up, but it passed..."
                    },
                    {
                        "username": "milanthakor",
                        "content": "What would be the time complexity of the below algorithm? \\n\\nBelow approach is more intuitive to compare to the one in the Editorial. However, I am not able to figure out the time complexity of the algorithm. The time complexity is not exactly O(logn), but is not O(n) either, it somewhere lies in-between. \\n\\nCould anyone please help me to understand it? If possible, take x = 2 and n = 50 as an example. As per my understanding\\n1. When `i = 1` and `y = 50`, the value of `i` will be 1, 2, 4, 8, 16, 32. Then both will be reset to `i = 1` and `y = 50 - 32 = 18`.\\n2. When `i = 1` and `y = 18`, the value of `i` will be 1, 2, 4, 5, 16. Then again both will be reset to `i = 1` and `y = 18 - 16 = 2`.\\n3. When `i = 1` and `y = 2`, the value of `i` will be 1. Then again both will be reset to `i = 1` and `y = 2 - 1`. \\n4. When `i = 1` and `y = 1`, the value of `i` will be 1. Then again both will be reset to `i = 1` and `y = 1 - 1 = 0`. And the algorithm completes.\\n\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        int y = abs(n);\\n\\n        // Base Condition.\\n        if (x == 0) return x;\\n        if (n == 0) return 1;\\n\\n        long long i = 1;\\n        double ans = 1, temp = x;\\n        while (y != 0) {\\n            if (i + i >= y) {\\n                y = y - i;\\n                i = 1;\\n                ans *= temp;\\n                temp = x;\\n            } else {\\n                temp *= temp;\\n                i <<= 1;\\n            }\\n        }\\n\\n        return n < 0 ? (1 / ans) : ans;\\n    }\\n};\\n``"
                    },
                    {
                        "username": "Boltfire",
                        "content": "Use math.pow() and make your life easier."
                    },
                    {
                        "username": "Eckhart01",
                        "content": "lol I got it correct in one run"
                    },
                    {
                        "username": "psionl0",
                        "content": "Congratulations on anticipating the n = -2147483648 edge case."
                    },
                    {
                        "username": "user2387402",
                        "content": "bruh..."
                    },
                    {
                        "username": "singhsupriya711",
                        "content": "memory error:291/306 test cases passed but this input:\\nx =\\n0.00001\\nn =\\n2147483647\\ncode:\\nans=1\\n        if n>0:\\n            \\n            for i in range(1,n+1):\\n                ans=ans*x\\n        else:\\n            for i in range(1,-n+1):\\n                ans=ans*(1/x)\\n\\n        return ans\\ncan anyone say why??\\n"
                    },
                    {
                        "username": "singhsupriya711",
                        "content": "[@Sacristaria](/Sacristaria) thanks"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Range essentially creates a list, which given the range uses up all the memory. Use xrange instead. Though it will likely timeout due to the large value."
                    },
                    {
                        "username": "Raedrin",
                        "content": "this problem is incredibly dumb. The fact that some of the test cases are greater than an int32 max value implies that the person calling the function cant read argument types."
                    },
                    {
                        "username": "19bec1397",
                        "content": "class Solution {\n    public double myPow(double x, int n) {\n\n        if(n==0){\n            return 1 ;\n        }\n        if(n==Integer.MIN_VALUE){\n             n = n +1 ; \n              return (1/x)*myPow(x,n);\n        }\n        if(n<0){\n            n = -n ; \n            x= 1/x;\n        }\n        if(n%2==0){\n            return myPow(x*x,n/2);\n        }else{\n            return x*myPow(x,n-1);\n        }\n        \n    }\n}\njava solution passes all test cases"
                    },
                    {
                        "username": "ameypathak39",
                        "content": "we have to return x**n"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "You have to implement x**n."
                    }
                ]
            },
            {
                "id": 1964859,
                "content": [
                    {
                        "username": "Nisarg_1709",
                        "content": "This question trick to find when try to find the power of negative  number"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "really? is this medium? \n\nLeetcode keeps making me amazed. Some `easy` problems are hard as hell, some `medium` or `hard` problems are below `easy` and you solve them in some seconds. \n\nATTENTION SPOILER: \nI wrote x ** n and was sure the error will pop up, but it passed..."
                    },
                    {
                        "username": "milanthakor",
                        "content": "What would be the time complexity of the below algorithm? \\n\\nBelow approach is more intuitive to compare to the one in the Editorial. However, I am not able to figure out the time complexity of the algorithm. The time complexity is not exactly O(logn), but is not O(n) either, it somewhere lies in-between. \\n\\nCould anyone please help me to understand it? If possible, take x = 2 and n = 50 as an example. As per my understanding\\n1. When `i = 1` and `y = 50`, the value of `i` will be 1, 2, 4, 8, 16, 32. Then both will be reset to `i = 1` and `y = 50 - 32 = 18`.\\n2. When `i = 1` and `y = 18`, the value of `i` will be 1, 2, 4, 5, 16. Then again both will be reset to `i = 1` and `y = 18 - 16 = 2`.\\n3. When `i = 1` and `y = 2`, the value of `i` will be 1. Then again both will be reset to `i = 1` and `y = 2 - 1`. \\n4. When `i = 1` and `y = 1`, the value of `i` will be 1. Then again both will be reset to `i = 1` and `y = 1 - 1 = 0`. And the algorithm completes.\\n\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        int y = abs(n);\\n\\n        // Base Condition.\\n        if (x == 0) return x;\\n        if (n == 0) return 1;\\n\\n        long long i = 1;\\n        double ans = 1, temp = x;\\n        while (y != 0) {\\n            if (i + i >= y) {\\n                y = y - i;\\n                i = 1;\\n                ans *= temp;\\n                temp = x;\\n            } else {\\n                temp *= temp;\\n                i <<= 1;\\n            }\\n        }\\n\\n        return n < 0 ? (1 / ans) : ans;\\n    }\\n};\\n``"
                    },
                    {
                        "username": "Boltfire",
                        "content": "Use math.pow() and make your life easier."
                    },
                    {
                        "username": "Eckhart01",
                        "content": "lol I got it correct in one run"
                    },
                    {
                        "username": "psionl0",
                        "content": "Congratulations on anticipating the n = -2147483648 edge case."
                    },
                    {
                        "username": "user2387402",
                        "content": "bruh..."
                    },
                    {
                        "username": "singhsupriya711",
                        "content": "memory error:291/306 test cases passed but this input:\\nx =\\n0.00001\\nn =\\n2147483647\\ncode:\\nans=1\\n        if n>0:\\n            \\n            for i in range(1,n+1):\\n                ans=ans*x\\n        else:\\n            for i in range(1,-n+1):\\n                ans=ans*(1/x)\\n\\n        return ans\\ncan anyone say why??\\n"
                    },
                    {
                        "username": "singhsupriya711",
                        "content": "[@Sacristaria](/Sacristaria) thanks"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Range essentially creates a list, which given the range uses up all the memory. Use xrange instead. Though it will likely timeout due to the large value."
                    },
                    {
                        "username": "Raedrin",
                        "content": "this problem is incredibly dumb. The fact that some of the test cases are greater than an int32 max value implies that the person calling the function cant read argument types."
                    },
                    {
                        "username": "19bec1397",
                        "content": "class Solution {\n    public double myPow(double x, int n) {\n\n        if(n==0){\n            return 1 ;\n        }\n        if(n==Integer.MIN_VALUE){\n             n = n +1 ; \n              return (1/x)*myPow(x,n);\n        }\n        if(n<0){\n            n = -n ; \n            x= 1/x;\n        }\n        if(n%2==0){\n            return myPow(x*x,n/2);\n        }else{\n            return x*myPow(x,n-1);\n        }\n        \n    }\n}\njava solution passes all test cases"
                    },
                    {
                        "username": "ameypathak39",
                        "content": "we have to return x**n"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "You have to implement x**n."
                    }
                ]
            },
            {
                "id": 1957313,
                "content": [
                    {
                        "username": "Nisarg_1709",
                        "content": "This question trick to find when try to find the power of negative  number"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "really? is this medium? \n\nLeetcode keeps making me amazed. Some `easy` problems are hard as hell, some `medium` or `hard` problems are below `easy` and you solve them in some seconds. \n\nATTENTION SPOILER: \nI wrote x ** n and was sure the error will pop up, but it passed..."
                    },
                    {
                        "username": "milanthakor",
                        "content": "What would be the time complexity of the below algorithm? \\n\\nBelow approach is more intuitive to compare to the one in the Editorial. However, I am not able to figure out the time complexity of the algorithm. The time complexity is not exactly O(logn), but is not O(n) either, it somewhere lies in-between. \\n\\nCould anyone please help me to understand it? If possible, take x = 2 and n = 50 as an example. As per my understanding\\n1. When `i = 1` and `y = 50`, the value of `i` will be 1, 2, 4, 8, 16, 32. Then both will be reset to `i = 1` and `y = 50 - 32 = 18`.\\n2. When `i = 1` and `y = 18`, the value of `i` will be 1, 2, 4, 5, 16. Then again both will be reset to `i = 1` and `y = 18 - 16 = 2`.\\n3. When `i = 1` and `y = 2`, the value of `i` will be 1. Then again both will be reset to `i = 1` and `y = 2 - 1`. \\n4. When `i = 1` and `y = 1`, the value of `i` will be 1. Then again both will be reset to `i = 1` and `y = 1 - 1 = 0`. And the algorithm completes.\\n\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        int y = abs(n);\\n\\n        // Base Condition.\\n        if (x == 0) return x;\\n        if (n == 0) return 1;\\n\\n        long long i = 1;\\n        double ans = 1, temp = x;\\n        while (y != 0) {\\n            if (i + i >= y) {\\n                y = y - i;\\n                i = 1;\\n                ans *= temp;\\n                temp = x;\\n            } else {\\n                temp *= temp;\\n                i <<= 1;\\n            }\\n        }\\n\\n        return n < 0 ? (1 / ans) : ans;\\n    }\\n};\\n``"
                    },
                    {
                        "username": "Boltfire",
                        "content": "Use math.pow() and make your life easier."
                    },
                    {
                        "username": "Eckhart01",
                        "content": "lol I got it correct in one run"
                    },
                    {
                        "username": "psionl0",
                        "content": "Congratulations on anticipating the n = -2147483648 edge case."
                    },
                    {
                        "username": "user2387402",
                        "content": "bruh..."
                    },
                    {
                        "username": "singhsupriya711",
                        "content": "memory error:291/306 test cases passed but this input:\\nx =\\n0.00001\\nn =\\n2147483647\\ncode:\\nans=1\\n        if n>0:\\n            \\n            for i in range(1,n+1):\\n                ans=ans*x\\n        else:\\n            for i in range(1,-n+1):\\n                ans=ans*(1/x)\\n\\n        return ans\\ncan anyone say why??\\n"
                    },
                    {
                        "username": "singhsupriya711",
                        "content": "[@Sacristaria](/Sacristaria) thanks"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Range essentially creates a list, which given the range uses up all the memory. Use xrange instead. Though it will likely timeout due to the large value."
                    },
                    {
                        "username": "Raedrin",
                        "content": "this problem is incredibly dumb. The fact that some of the test cases are greater than an int32 max value implies that the person calling the function cant read argument types."
                    },
                    {
                        "username": "19bec1397",
                        "content": "class Solution {\n    public double myPow(double x, int n) {\n\n        if(n==0){\n            return 1 ;\n        }\n        if(n==Integer.MIN_VALUE){\n             n = n +1 ; \n              return (1/x)*myPow(x,n);\n        }\n        if(n<0){\n            n = -n ; \n            x= 1/x;\n        }\n        if(n%2==0){\n            return myPow(x*x,n/2);\n        }else{\n            return x*myPow(x,n-1);\n        }\n        \n    }\n}\njava solution passes all test cases"
                    },
                    {
                        "username": "ameypathak39",
                        "content": "we have to return x**n"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "You have to implement x**n."
                    }
                ]
            },
            {
                "id": 1951498,
                "content": [
                    {
                        "username": "Nisarg_1709",
                        "content": "This question trick to find when try to find the power of negative  number"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "really? is this medium? \n\nLeetcode keeps making me amazed. Some `easy` problems are hard as hell, some `medium` or `hard` problems are below `easy` and you solve them in some seconds. \n\nATTENTION SPOILER: \nI wrote x ** n and was sure the error will pop up, but it passed..."
                    },
                    {
                        "username": "milanthakor",
                        "content": "What would be the time complexity of the below algorithm? \\n\\nBelow approach is more intuitive to compare to the one in the Editorial. However, I am not able to figure out the time complexity of the algorithm. The time complexity is not exactly O(logn), but is not O(n) either, it somewhere lies in-between. \\n\\nCould anyone please help me to understand it? If possible, take x = 2 and n = 50 as an example. As per my understanding\\n1. When `i = 1` and `y = 50`, the value of `i` will be 1, 2, 4, 8, 16, 32. Then both will be reset to `i = 1` and `y = 50 - 32 = 18`.\\n2. When `i = 1` and `y = 18`, the value of `i` will be 1, 2, 4, 5, 16. Then again both will be reset to `i = 1` and `y = 18 - 16 = 2`.\\n3. When `i = 1` and `y = 2`, the value of `i` will be 1. Then again both will be reset to `i = 1` and `y = 2 - 1`. \\n4. When `i = 1` and `y = 1`, the value of `i` will be 1. Then again both will be reset to `i = 1` and `y = 1 - 1 = 0`. And the algorithm completes.\\n\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        int y = abs(n);\\n\\n        // Base Condition.\\n        if (x == 0) return x;\\n        if (n == 0) return 1;\\n\\n        long long i = 1;\\n        double ans = 1, temp = x;\\n        while (y != 0) {\\n            if (i + i >= y) {\\n                y = y - i;\\n                i = 1;\\n                ans *= temp;\\n                temp = x;\\n            } else {\\n                temp *= temp;\\n                i <<= 1;\\n            }\\n        }\\n\\n        return n < 0 ? (1 / ans) : ans;\\n    }\\n};\\n``"
                    },
                    {
                        "username": "Boltfire",
                        "content": "Use math.pow() and make your life easier."
                    },
                    {
                        "username": "Eckhart01",
                        "content": "lol I got it correct in one run"
                    },
                    {
                        "username": "psionl0",
                        "content": "Congratulations on anticipating the n = -2147483648 edge case."
                    },
                    {
                        "username": "user2387402",
                        "content": "bruh..."
                    },
                    {
                        "username": "singhsupriya711",
                        "content": "memory error:291/306 test cases passed but this input:\\nx =\\n0.00001\\nn =\\n2147483647\\ncode:\\nans=1\\n        if n>0:\\n            \\n            for i in range(1,n+1):\\n                ans=ans*x\\n        else:\\n            for i in range(1,-n+1):\\n                ans=ans*(1/x)\\n\\n        return ans\\ncan anyone say why??\\n"
                    },
                    {
                        "username": "singhsupriya711",
                        "content": "[@Sacristaria](/Sacristaria) thanks"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Range essentially creates a list, which given the range uses up all the memory. Use xrange instead. Though it will likely timeout due to the large value."
                    },
                    {
                        "username": "Raedrin",
                        "content": "this problem is incredibly dumb. The fact that some of the test cases are greater than an int32 max value implies that the person calling the function cant read argument types."
                    },
                    {
                        "username": "19bec1397",
                        "content": "class Solution {\n    public double myPow(double x, int n) {\n\n        if(n==0){\n            return 1 ;\n        }\n        if(n==Integer.MIN_VALUE){\n             n = n +1 ; \n              return (1/x)*myPow(x,n);\n        }\n        if(n<0){\n            n = -n ; \n            x= 1/x;\n        }\n        if(n%2==0){\n            return myPow(x*x,n/2);\n        }else{\n            return x*myPow(x,n-1);\n        }\n        \n    }\n}\njava solution passes all test cases"
                    },
                    {
                        "username": "ameypathak39",
                        "content": "we have to return x**n"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "You have to implement x**n."
                    }
                ]
            },
            {
                "id": 1951346,
                "content": [
                    {
                        "username": "Nisarg_1709",
                        "content": "This question trick to find when try to find the power of negative  number"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "really? is this medium? \n\nLeetcode keeps making me amazed. Some `easy` problems are hard as hell, some `medium` or `hard` problems are below `easy` and you solve them in some seconds. \n\nATTENTION SPOILER: \nI wrote x ** n and was sure the error will pop up, but it passed..."
                    },
                    {
                        "username": "milanthakor",
                        "content": "What would be the time complexity of the below algorithm? \\n\\nBelow approach is more intuitive to compare to the one in the Editorial. However, I am not able to figure out the time complexity of the algorithm. The time complexity is not exactly O(logn), but is not O(n) either, it somewhere lies in-between. \\n\\nCould anyone please help me to understand it? If possible, take x = 2 and n = 50 as an example. As per my understanding\\n1. When `i = 1` and `y = 50`, the value of `i` will be 1, 2, 4, 8, 16, 32. Then both will be reset to `i = 1` and `y = 50 - 32 = 18`.\\n2. When `i = 1` and `y = 18`, the value of `i` will be 1, 2, 4, 5, 16. Then again both will be reset to `i = 1` and `y = 18 - 16 = 2`.\\n3. When `i = 1` and `y = 2`, the value of `i` will be 1. Then again both will be reset to `i = 1` and `y = 2 - 1`. \\n4. When `i = 1` and `y = 1`, the value of `i` will be 1. Then again both will be reset to `i = 1` and `y = 1 - 1 = 0`. And the algorithm completes.\\n\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        int y = abs(n);\\n\\n        // Base Condition.\\n        if (x == 0) return x;\\n        if (n == 0) return 1;\\n\\n        long long i = 1;\\n        double ans = 1, temp = x;\\n        while (y != 0) {\\n            if (i + i >= y) {\\n                y = y - i;\\n                i = 1;\\n                ans *= temp;\\n                temp = x;\\n            } else {\\n                temp *= temp;\\n                i <<= 1;\\n            }\\n        }\\n\\n        return n < 0 ? (1 / ans) : ans;\\n    }\\n};\\n``"
                    },
                    {
                        "username": "Boltfire",
                        "content": "Use math.pow() and make your life easier."
                    },
                    {
                        "username": "Eckhart01",
                        "content": "lol I got it correct in one run"
                    },
                    {
                        "username": "psionl0",
                        "content": "Congratulations on anticipating the n = -2147483648 edge case."
                    },
                    {
                        "username": "user2387402",
                        "content": "bruh..."
                    },
                    {
                        "username": "singhsupriya711",
                        "content": "memory error:291/306 test cases passed but this input:\\nx =\\n0.00001\\nn =\\n2147483647\\ncode:\\nans=1\\n        if n>0:\\n            \\n            for i in range(1,n+1):\\n                ans=ans*x\\n        else:\\n            for i in range(1,-n+1):\\n                ans=ans*(1/x)\\n\\n        return ans\\ncan anyone say why??\\n"
                    },
                    {
                        "username": "singhsupriya711",
                        "content": "[@Sacristaria](/Sacristaria) thanks"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Range essentially creates a list, which given the range uses up all the memory. Use xrange instead. Though it will likely timeout due to the large value."
                    },
                    {
                        "username": "Raedrin",
                        "content": "this problem is incredibly dumb. The fact that some of the test cases are greater than an int32 max value implies that the person calling the function cant read argument types."
                    },
                    {
                        "username": "19bec1397",
                        "content": "class Solution {\n    public double myPow(double x, int n) {\n\n        if(n==0){\n            return 1 ;\n        }\n        if(n==Integer.MIN_VALUE){\n             n = n +1 ; \n              return (1/x)*myPow(x,n);\n        }\n        if(n<0){\n            n = -n ; \n            x= 1/x;\n        }\n        if(n%2==0){\n            return myPow(x*x,n/2);\n        }else{\n            return x*myPow(x,n-1);\n        }\n        \n    }\n}\njava solution passes all test cases"
                    },
                    {
                        "username": "ameypathak39",
                        "content": "we have to return x**n"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "You have to implement x**n."
                    }
                ]
            },
            {
                "id": 1951344,
                "content": [
                    {
                        "username": "Nisarg_1709",
                        "content": "This question trick to find when try to find the power of negative  number"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "really? is this medium? \n\nLeetcode keeps making me amazed. Some `easy` problems are hard as hell, some `medium` or `hard` problems are below `easy` and you solve them in some seconds. \n\nATTENTION SPOILER: \nI wrote x ** n and was sure the error will pop up, but it passed..."
                    },
                    {
                        "username": "milanthakor",
                        "content": "What would be the time complexity of the below algorithm? \\n\\nBelow approach is more intuitive to compare to the one in the Editorial. However, I am not able to figure out the time complexity of the algorithm. The time complexity is not exactly O(logn), but is not O(n) either, it somewhere lies in-between. \\n\\nCould anyone please help me to understand it? If possible, take x = 2 and n = 50 as an example. As per my understanding\\n1. When `i = 1` and `y = 50`, the value of `i` will be 1, 2, 4, 8, 16, 32. Then both will be reset to `i = 1` and `y = 50 - 32 = 18`.\\n2. When `i = 1` and `y = 18`, the value of `i` will be 1, 2, 4, 5, 16. Then again both will be reset to `i = 1` and `y = 18 - 16 = 2`.\\n3. When `i = 1` and `y = 2`, the value of `i` will be 1. Then again both will be reset to `i = 1` and `y = 2 - 1`. \\n4. When `i = 1` and `y = 1`, the value of `i` will be 1. Then again both will be reset to `i = 1` and `y = 1 - 1 = 0`. And the algorithm completes.\\n\\n```\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        int y = abs(n);\\n\\n        // Base Condition.\\n        if (x == 0) return x;\\n        if (n == 0) return 1;\\n\\n        long long i = 1;\\n        double ans = 1, temp = x;\\n        while (y != 0) {\\n            if (i + i >= y) {\\n                y = y - i;\\n                i = 1;\\n                ans *= temp;\\n                temp = x;\\n            } else {\\n                temp *= temp;\\n                i <<= 1;\\n            }\\n        }\\n\\n        return n < 0 ? (1 / ans) : ans;\\n    }\\n};\\n``"
                    },
                    {
                        "username": "Boltfire",
                        "content": "Use math.pow() and make your life easier."
                    },
                    {
                        "username": "Eckhart01",
                        "content": "lol I got it correct in one run"
                    },
                    {
                        "username": "psionl0",
                        "content": "Congratulations on anticipating the n = -2147483648 edge case."
                    },
                    {
                        "username": "user2387402",
                        "content": "bruh..."
                    },
                    {
                        "username": "singhsupriya711",
                        "content": "memory error:291/306 test cases passed but this input:\\nx =\\n0.00001\\nn =\\n2147483647\\ncode:\\nans=1\\n        if n>0:\\n            \\n            for i in range(1,n+1):\\n                ans=ans*x\\n        else:\\n            for i in range(1,-n+1):\\n                ans=ans*(1/x)\\n\\n        return ans\\ncan anyone say why??\\n"
                    },
                    {
                        "username": "singhsupriya711",
                        "content": "[@Sacristaria](/Sacristaria) thanks"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "Range essentially creates a list, which given the range uses up all the memory. Use xrange instead. Though it will likely timeout due to the large value."
                    },
                    {
                        "username": "Raedrin",
                        "content": "this problem is incredibly dumb. The fact that some of the test cases are greater than an int32 max value implies that the person calling the function cant read argument types."
                    },
                    {
                        "username": "19bec1397",
                        "content": "class Solution {\n    public double myPow(double x, int n) {\n\n        if(n==0){\n            return 1 ;\n        }\n        if(n==Integer.MIN_VALUE){\n             n = n +1 ; \n              return (1/x)*myPow(x,n);\n        }\n        if(n<0){\n            n = -n ; \n            x= 1/x;\n        }\n        if(n%2==0){\n            return myPow(x*x,n/2);\n        }else{\n            return x*myPow(x,n-1);\n        }\n        \n    }\n}\njava solution passes all test cases"
                    },
                    {
                        "username": "ameypathak39",
                        "content": "we have to return x**n"
                    },
                    {
                        "username": "Sacristaria",
                        "content": "You have to implement x**n."
                    }
                ]
            },
            {
                "id": 1950786,
                "content": [
                    {
                        "username": "abhash_18",
                        "content": "why this is question given Medium Status? Its just a one line code.\\nAm i doing something wrong please guide me"
                    },
                    {
                        "username": "bsumner2",
                        "content": "Imagine your language doesn\\'t have a pow function built in. The challenge of the question is making your own version of it, pretending like the provided one doesn\\'t exist. If you used the built in exponent function provided by the math library of your language, then you\\'re trivializing the challenge. Ofc you can just use pow. But imagine back in the early days of programming where you had to write a pow function from scratch. Hope that helps. Happy coding :) "
                    },
                    {
                        "username": "jungle_jim",
                        "content": "This is a math problem."
                    },
                    {
                        "username": "user5029SI",
                        "content": "Lol the test cases are literally trolling\\n"
                    },
                    {
                        "username": "romantimm25",
                        "content": "Good reads about this topic are:\\nhttps://en.wikipedia.org/wiki/Addition-chain_exponentiation\\nOptimal exponent calculations are not a simple task. So talking about this in the interview might add some value."
                    },
                    {
                        "username": "Yahan-Pranjhol-hai",
                        "content": "var myPow = function(x, n) {\\n  if (n === 0) {\\n    return 1;\\n  }\\n  \\n  if (n < 0) {\\n    return 1 / myPow(x, -n);\\n  }\\n  \\n  if (n % 2 === 0) {\\n    const y = myPow(x, n / 2);\\n    return y * y;\\n  }\\n  \\n  return x * myPow(x, n - 1);\\n};\\n// x**n"
                    },
                    {
                        "username": "juansymontano",
                        "content": "A lot of people are missing the problem. No wonder they can\\u2019t pass technical interviews. "
                    },
                    {
                        "username": "arithin",
                        "content": "Ive written a lot of code. Never have I ever needed to rewrite the POW function. And if I did you know what I\\'d do? Read up on a bunch of math before hand not memorize bs like this"
                    },
                    {
                        "username": "vanshjain499",
                        "content": "return Math.pow(x,n);"
                    },
                    {
                        "username": "juansymontano",
                        "content": "You\\u2019re supposed to implement your own. "
                    },
                    {
                        "username": "juleshwar",
                        "content": "## Testcases I tested my code with\n```\n2\n10\n2\n3\n2\n-2\n2\n13\n-2\n13\n2\n-13\n25\n1\n99\n0\n-99\n-99\n99\n-99\n99\n-2\n0\n10\n1\n25\n1\n0\n```"
                    },
                    {
                        "username": "vadapallichaitu",
                        "content": "something is wrong here, I keep on trying to uses recursive but it says \"name \\'myPow\\' is not defined\", I tried same logic in python playground , it works there"
                    },
                    {
                        "username": "ujwalb29",
                        "content": "x =\\n8.84372\\nn =\\n-5\\nOutput\\n0.00145\\nExpected\\n2e-05\\nWhat\\'s wrong??"
                    }
                ]
            },
            {
                "id": 1911248,
                "content": [
                    {
                        "username": "abhash_18",
                        "content": "why this is question given Medium Status? Its just a one line code.\\nAm i doing something wrong please guide me"
                    },
                    {
                        "username": "bsumner2",
                        "content": "Imagine your language doesn\\'t have a pow function built in. The challenge of the question is making your own version of it, pretending like the provided one doesn\\'t exist. If you used the built in exponent function provided by the math library of your language, then you\\'re trivializing the challenge. Ofc you can just use pow. But imagine back in the early days of programming where you had to write a pow function from scratch. Hope that helps. Happy coding :) "
                    },
                    {
                        "username": "jungle_jim",
                        "content": "This is a math problem."
                    },
                    {
                        "username": "user5029SI",
                        "content": "Lol the test cases are literally trolling\\n"
                    },
                    {
                        "username": "romantimm25",
                        "content": "Good reads about this topic are:\\nhttps://en.wikipedia.org/wiki/Addition-chain_exponentiation\\nOptimal exponent calculations are not a simple task. So talking about this in the interview might add some value."
                    },
                    {
                        "username": "Yahan-Pranjhol-hai",
                        "content": "var myPow = function(x, n) {\\n  if (n === 0) {\\n    return 1;\\n  }\\n  \\n  if (n < 0) {\\n    return 1 / myPow(x, -n);\\n  }\\n  \\n  if (n % 2 === 0) {\\n    const y = myPow(x, n / 2);\\n    return y * y;\\n  }\\n  \\n  return x * myPow(x, n - 1);\\n};\\n// x**n"
                    },
                    {
                        "username": "juansymontano",
                        "content": "A lot of people are missing the problem. No wonder they can\\u2019t pass technical interviews. "
                    },
                    {
                        "username": "arithin",
                        "content": "Ive written a lot of code. Never have I ever needed to rewrite the POW function. And if I did you know what I\\'d do? Read up on a bunch of math before hand not memorize bs like this"
                    },
                    {
                        "username": "vanshjain499",
                        "content": "return Math.pow(x,n);"
                    },
                    {
                        "username": "juansymontano",
                        "content": "You\\u2019re supposed to implement your own. "
                    },
                    {
                        "username": "juleshwar",
                        "content": "## Testcases I tested my code with\n```\n2\n10\n2\n3\n2\n-2\n2\n13\n-2\n13\n2\n-13\n25\n1\n99\n0\n-99\n-99\n99\n-99\n99\n-2\n0\n10\n1\n25\n1\n0\n```"
                    },
                    {
                        "username": "vadapallichaitu",
                        "content": "something is wrong here, I keep on trying to uses recursive but it says \"name \\'myPow\\' is not defined\", I tried same logic in python playground , it works there"
                    },
                    {
                        "username": "ujwalb29",
                        "content": "x =\\n8.84372\\nn =\\n-5\\nOutput\\n0.00145\\nExpected\\n2e-05\\nWhat\\'s wrong??"
                    }
                ]
            },
            {
                "id": 1907314,
                "content": [
                    {
                        "username": "abhash_18",
                        "content": "why this is question given Medium Status? Its just a one line code.\\nAm i doing something wrong please guide me"
                    },
                    {
                        "username": "bsumner2",
                        "content": "Imagine your language doesn\\'t have a pow function built in. The challenge of the question is making your own version of it, pretending like the provided one doesn\\'t exist. If you used the built in exponent function provided by the math library of your language, then you\\'re trivializing the challenge. Ofc you can just use pow. But imagine back in the early days of programming where you had to write a pow function from scratch. Hope that helps. Happy coding :) "
                    },
                    {
                        "username": "jungle_jim",
                        "content": "This is a math problem."
                    },
                    {
                        "username": "user5029SI",
                        "content": "Lol the test cases are literally trolling\\n"
                    },
                    {
                        "username": "romantimm25",
                        "content": "Good reads about this topic are:\\nhttps://en.wikipedia.org/wiki/Addition-chain_exponentiation\\nOptimal exponent calculations are not a simple task. So talking about this in the interview might add some value."
                    },
                    {
                        "username": "Yahan-Pranjhol-hai",
                        "content": "var myPow = function(x, n) {\\n  if (n === 0) {\\n    return 1;\\n  }\\n  \\n  if (n < 0) {\\n    return 1 / myPow(x, -n);\\n  }\\n  \\n  if (n % 2 === 0) {\\n    const y = myPow(x, n / 2);\\n    return y * y;\\n  }\\n  \\n  return x * myPow(x, n - 1);\\n};\\n// x**n"
                    },
                    {
                        "username": "juansymontano",
                        "content": "A lot of people are missing the problem. No wonder they can\\u2019t pass technical interviews. "
                    },
                    {
                        "username": "arithin",
                        "content": "Ive written a lot of code. Never have I ever needed to rewrite the POW function. And if I did you know what I\\'d do? Read up on a bunch of math before hand not memorize bs like this"
                    },
                    {
                        "username": "vanshjain499",
                        "content": "return Math.pow(x,n);"
                    },
                    {
                        "username": "juansymontano",
                        "content": "You\\u2019re supposed to implement your own. "
                    },
                    {
                        "username": "juleshwar",
                        "content": "## Testcases I tested my code with\n```\n2\n10\n2\n3\n2\n-2\n2\n13\n-2\n13\n2\n-13\n25\n1\n99\n0\n-99\n-99\n99\n-99\n99\n-2\n0\n10\n1\n25\n1\n0\n```"
                    },
                    {
                        "username": "vadapallichaitu",
                        "content": "something is wrong here, I keep on trying to uses recursive but it says \"name \\'myPow\\' is not defined\", I tried same logic in python playground , it works there"
                    },
                    {
                        "username": "ujwalb29",
                        "content": "x =\\n8.84372\\nn =\\n-5\\nOutput\\n0.00145\\nExpected\\n2e-05\\nWhat\\'s wrong??"
                    }
                ]
            },
            {
                "id": 1906520,
                "content": [
                    {
                        "username": "abhash_18",
                        "content": "why this is question given Medium Status? Its just a one line code.\\nAm i doing something wrong please guide me"
                    },
                    {
                        "username": "bsumner2",
                        "content": "Imagine your language doesn\\'t have a pow function built in. The challenge of the question is making your own version of it, pretending like the provided one doesn\\'t exist. If you used the built in exponent function provided by the math library of your language, then you\\'re trivializing the challenge. Ofc you can just use pow. But imagine back in the early days of programming where you had to write a pow function from scratch. Hope that helps. Happy coding :) "
                    },
                    {
                        "username": "jungle_jim",
                        "content": "This is a math problem."
                    },
                    {
                        "username": "user5029SI",
                        "content": "Lol the test cases are literally trolling\\n"
                    },
                    {
                        "username": "romantimm25",
                        "content": "Good reads about this topic are:\\nhttps://en.wikipedia.org/wiki/Addition-chain_exponentiation\\nOptimal exponent calculations are not a simple task. So talking about this in the interview might add some value."
                    },
                    {
                        "username": "Yahan-Pranjhol-hai",
                        "content": "var myPow = function(x, n) {\\n  if (n === 0) {\\n    return 1;\\n  }\\n  \\n  if (n < 0) {\\n    return 1 / myPow(x, -n);\\n  }\\n  \\n  if (n % 2 === 0) {\\n    const y = myPow(x, n / 2);\\n    return y * y;\\n  }\\n  \\n  return x * myPow(x, n - 1);\\n};\\n// x**n"
                    },
                    {
                        "username": "juansymontano",
                        "content": "A lot of people are missing the problem. No wonder they can\\u2019t pass technical interviews. "
                    },
                    {
                        "username": "arithin",
                        "content": "Ive written a lot of code. Never have I ever needed to rewrite the POW function. And if I did you know what I\\'d do? Read up on a bunch of math before hand not memorize bs like this"
                    },
                    {
                        "username": "vanshjain499",
                        "content": "return Math.pow(x,n);"
                    },
                    {
                        "username": "juansymontano",
                        "content": "You\\u2019re supposed to implement your own. "
                    },
                    {
                        "username": "juleshwar",
                        "content": "## Testcases I tested my code with\n```\n2\n10\n2\n3\n2\n-2\n2\n13\n-2\n13\n2\n-13\n25\n1\n99\n0\n-99\n-99\n99\n-99\n99\n-2\n0\n10\n1\n25\n1\n0\n```"
                    },
                    {
                        "username": "vadapallichaitu",
                        "content": "something is wrong here, I keep on trying to uses recursive but it says \"name \\'myPow\\' is not defined\", I tried same logic in python playground , it works there"
                    },
                    {
                        "username": "ujwalb29",
                        "content": "x =\\n8.84372\\nn =\\n-5\\nOutput\\n0.00145\\nExpected\\n2e-05\\nWhat\\'s wrong??"
                    }
                ]
            },
            {
                "id": 1901989,
                "content": [
                    {
                        "username": "abhash_18",
                        "content": "why this is question given Medium Status? Its just a one line code.\\nAm i doing something wrong please guide me"
                    },
                    {
                        "username": "bsumner2",
                        "content": "Imagine your language doesn\\'t have a pow function built in. The challenge of the question is making your own version of it, pretending like the provided one doesn\\'t exist. If you used the built in exponent function provided by the math library of your language, then you\\'re trivializing the challenge. Ofc you can just use pow. But imagine back in the early days of programming where you had to write a pow function from scratch. Hope that helps. Happy coding :) "
                    },
                    {
                        "username": "jungle_jim",
                        "content": "This is a math problem."
                    },
                    {
                        "username": "user5029SI",
                        "content": "Lol the test cases are literally trolling\\n"
                    },
                    {
                        "username": "romantimm25",
                        "content": "Good reads about this topic are:\\nhttps://en.wikipedia.org/wiki/Addition-chain_exponentiation\\nOptimal exponent calculations are not a simple task. So talking about this in the interview might add some value."
                    },
                    {
                        "username": "Yahan-Pranjhol-hai",
                        "content": "var myPow = function(x, n) {\\n  if (n === 0) {\\n    return 1;\\n  }\\n  \\n  if (n < 0) {\\n    return 1 / myPow(x, -n);\\n  }\\n  \\n  if (n % 2 === 0) {\\n    const y = myPow(x, n / 2);\\n    return y * y;\\n  }\\n  \\n  return x * myPow(x, n - 1);\\n};\\n// x**n"
                    },
                    {
                        "username": "juansymontano",
                        "content": "A lot of people are missing the problem. No wonder they can\\u2019t pass technical interviews. "
                    },
                    {
                        "username": "arithin",
                        "content": "Ive written a lot of code. Never have I ever needed to rewrite the POW function. And if I did you know what I\\'d do? Read up on a bunch of math before hand not memorize bs like this"
                    },
                    {
                        "username": "vanshjain499",
                        "content": "return Math.pow(x,n);"
                    },
                    {
                        "username": "juansymontano",
                        "content": "You\\u2019re supposed to implement your own. "
                    },
                    {
                        "username": "juleshwar",
                        "content": "## Testcases I tested my code with\n```\n2\n10\n2\n3\n2\n-2\n2\n13\n-2\n13\n2\n-13\n25\n1\n99\n0\n-99\n-99\n99\n-99\n99\n-2\n0\n10\n1\n25\n1\n0\n```"
                    },
                    {
                        "username": "vadapallichaitu",
                        "content": "something is wrong here, I keep on trying to uses recursive but it says \"name \\'myPow\\' is not defined\", I tried same logic in python playground , it works there"
                    },
                    {
                        "username": "ujwalb29",
                        "content": "x =\\n8.84372\\nn =\\n-5\\nOutput\\n0.00145\\nExpected\\n2e-05\\nWhat\\'s wrong??"
                    }
                ]
            },
            {
                "id": 1898841,
                "content": [
                    {
                        "username": "abhash_18",
                        "content": "why this is question given Medium Status? Its just a one line code.\\nAm i doing something wrong please guide me"
                    },
                    {
                        "username": "bsumner2",
                        "content": "Imagine your language doesn\\'t have a pow function built in. The challenge of the question is making your own version of it, pretending like the provided one doesn\\'t exist. If you used the built in exponent function provided by the math library of your language, then you\\'re trivializing the challenge. Ofc you can just use pow. But imagine back in the early days of programming where you had to write a pow function from scratch. Hope that helps. Happy coding :) "
                    },
                    {
                        "username": "jungle_jim",
                        "content": "This is a math problem."
                    },
                    {
                        "username": "user5029SI",
                        "content": "Lol the test cases are literally trolling\\n"
                    },
                    {
                        "username": "romantimm25",
                        "content": "Good reads about this topic are:\\nhttps://en.wikipedia.org/wiki/Addition-chain_exponentiation\\nOptimal exponent calculations are not a simple task. So talking about this in the interview might add some value."
                    },
                    {
                        "username": "Yahan-Pranjhol-hai",
                        "content": "var myPow = function(x, n) {\\n  if (n === 0) {\\n    return 1;\\n  }\\n  \\n  if (n < 0) {\\n    return 1 / myPow(x, -n);\\n  }\\n  \\n  if (n % 2 === 0) {\\n    const y = myPow(x, n / 2);\\n    return y * y;\\n  }\\n  \\n  return x * myPow(x, n - 1);\\n};\\n// x**n"
                    },
                    {
                        "username": "juansymontano",
                        "content": "A lot of people are missing the problem. No wonder they can\\u2019t pass technical interviews. "
                    },
                    {
                        "username": "arithin",
                        "content": "Ive written a lot of code. Never have I ever needed to rewrite the POW function. And if I did you know what I\\'d do? Read up on a bunch of math before hand not memorize bs like this"
                    },
                    {
                        "username": "vanshjain499",
                        "content": "return Math.pow(x,n);"
                    },
                    {
                        "username": "juansymontano",
                        "content": "You\\u2019re supposed to implement your own. "
                    },
                    {
                        "username": "juleshwar",
                        "content": "## Testcases I tested my code with\n```\n2\n10\n2\n3\n2\n-2\n2\n13\n-2\n13\n2\n-13\n25\n1\n99\n0\n-99\n-99\n99\n-99\n99\n-2\n0\n10\n1\n25\n1\n0\n```"
                    },
                    {
                        "username": "vadapallichaitu",
                        "content": "something is wrong here, I keep on trying to uses recursive but it says \"name \\'myPow\\' is not defined\", I tried same logic in python playground , it works there"
                    },
                    {
                        "username": "ujwalb29",
                        "content": "x =\\n8.84372\\nn =\\n-5\\nOutput\\n0.00145\\nExpected\\n2e-05\\nWhat\\'s wrong??"
                    }
                ]
            },
            {
                "id": 1898827,
                "content": [
                    {
                        "username": "abhash_18",
                        "content": "why this is question given Medium Status? Its just a one line code.\\nAm i doing something wrong please guide me"
                    },
                    {
                        "username": "bsumner2",
                        "content": "Imagine your language doesn\\'t have a pow function built in. The challenge of the question is making your own version of it, pretending like the provided one doesn\\'t exist. If you used the built in exponent function provided by the math library of your language, then you\\'re trivializing the challenge. Ofc you can just use pow. But imagine back in the early days of programming where you had to write a pow function from scratch. Hope that helps. Happy coding :) "
                    },
                    {
                        "username": "jungle_jim",
                        "content": "This is a math problem."
                    },
                    {
                        "username": "user5029SI",
                        "content": "Lol the test cases are literally trolling\\n"
                    },
                    {
                        "username": "romantimm25",
                        "content": "Good reads about this topic are:\\nhttps://en.wikipedia.org/wiki/Addition-chain_exponentiation\\nOptimal exponent calculations are not a simple task. So talking about this in the interview might add some value."
                    },
                    {
                        "username": "Yahan-Pranjhol-hai",
                        "content": "var myPow = function(x, n) {\\n  if (n === 0) {\\n    return 1;\\n  }\\n  \\n  if (n < 0) {\\n    return 1 / myPow(x, -n);\\n  }\\n  \\n  if (n % 2 === 0) {\\n    const y = myPow(x, n / 2);\\n    return y * y;\\n  }\\n  \\n  return x * myPow(x, n - 1);\\n};\\n// x**n"
                    },
                    {
                        "username": "juansymontano",
                        "content": "A lot of people are missing the problem. No wonder they can\\u2019t pass technical interviews. "
                    },
                    {
                        "username": "arithin",
                        "content": "Ive written a lot of code. Never have I ever needed to rewrite the POW function. And if I did you know what I\\'d do? Read up on a bunch of math before hand not memorize bs like this"
                    },
                    {
                        "username": "vanshjain499",
                        "content": "return Math.pow(x,n);"
                    },
                    {
                        "username": "juansymontano",
                        "content": "You\\u2019re supposed to implement your own. "
                    },
                    {
                        "username": "juleshwar",
                        "content": "## Testcases I tested my code with\n```\n2\n10\n2\n3\n2\n-2\n2\n13\n-2\n13\n2\n-13\n25\n1\n99\n0\n-99\n-99\n99\n-99\n99\n-2\n0\n10\n1\n25\n1\n0\n```"
                    },
                    {
                        "username": "vadapallichaitu",
                        "content": "something is wrong here, I keep on trying to uses recursive but it says \"name \\'myPow\\' is not defined\", I tried same logic in python playground , it works there"
                    },
                    {
                        "username": "ujwalb29",
                        "content": "x =\\n8.84372\\nn =\\n-5\\nOutput\\n0.00145\\nExpected\\n2e-05\\nWhat\\'s wrong??"
                    }
                ]
            },
            {
                "id": 1895127,
                "content": [
                    {
                        "username": "abhash_18",
                        "content": "why this is question given Medium Status? Its just a one line code.\\nAm i doing something wrong please guide me"
                    },
                    {
                        "username": "bsumner2",
                        "content": "Imagine your language doesn\\'t have a pow function built in. The challenge of the question is making your own version of it, pretending like the provided one doesn\\'t exist. If you used the built in exponent function provided by the math library of your language, then you\\'re trivializing the challenge. Ofc you can just use pow. But imagine back in the early days of programming where you had to write a pow function from scratch. Hope that helps. Happy coding :) "
                    },
                    {
                        "username": "jungle_jim",
                        "content": "This is a math problem."
                    },
                    {
                        "username": "user5029SI",
                        "content": "Lol the test cases are literally trolling\\n"
                    },
                    {
                        "username": "romantimm25",
                        "content": "Good reads about this topic are:\\nhttps://en.wikipedia.org/wiki/Addition-chain_exponentiation\\nOptimal exponent calculations are not a simple task. So talking about this in the interview might add some value."
                    },
                    {
                        "username": "Yahan-Pranjhol-hai",
                        "content": "var myPow = function(x, n) {\\n  if (n === 0) {\\n    return 1;\\n  }\\n  \\n  if (n < 0) {\\n    return 1 / myPow(x, -n);\\n  }\\n  \\n  if (n % 2 === 0) {\\n    const y = myPow(x, n / 2);\\n    return y * y;\\n  }\\n  \\n  return x * myPow(x, n - 1);\\n};\\n// x**n"
                    },
                    {
                        "username": "juansymontano",
                        "content": "A lot of people are missing the problem. No wonder they can\\u2019t pass technical interviews. "
                    },
                    {
                        "username": "arithin",
                        "content": "Ive written a lot of code. Never have I ever needed to rewrite the POW function. And if I did you know what I\\'d do? Read up on a bunch of math before hand not memorize bs like this"
                    },
                    {
                        "username": "vanshjain499",
                        "content": "return Math.pow(x,n);"
                    },
                    {
                        "username": "juansymontano",
                        "content": "You\\u2019re supposed to implement your own. "
                    },
                    {
                        "username": "juleshwar",
                        "content": "## Testcases I tested my code with\n```\n2\n10\n2\n3\n2\n-2\n2\n13\n-2\n13\n2\n-13\n25\n1\n99\n0\n-99\n-99\n99\n-99\n99\n-2\n0\n10\n1\n25\n1\n0\n```"
                    },
                    {
                        "username": "vadapallichaitu",
                        "content": "something is wrong here, I keep on trying to uses recursive but it says \"name \\'myPow\\' is not defined\", I tried same logic in python playground , it works there"
                    },
                    {
                        "username": "ujwalb29",
                        "content": "x =\\n8.84372\\nn =\\n-5\\nOutput\\n0.00145\\nExpected\\n2e-05\\nWhat\\'s wrong??"
                    }
                ]
            },
            {
                "id": 1893532,
                "content": [
                    {
                        "username": "abhash_18",
                        "content": "why this is question given Medium Status? Its just a one line code.\\nAm i doing something wrong please guide me"
                    },
                    {
                        "username": "bsumner2",
                        "content": "Imagine your language doesn\\'t have a pow function built in. The challenge of the question is making your own version of it, pretending like the provided one doesn\\'t exist. If you used the built in exponent function provided by the math library of your language, then you\\'re trivializing the challenge. Ofc you can just use pow. But imagine back in the early days of programming where you had to write a pow function from scratch. Hope that helps. Happy coding :) "
                    },
                    {
                        "username": "jungle_jim",
                        "content": "This is a math problem."
                    },
                    {
                        "username": "user5029SI",
                        "content": "Lol the test cases are literally trolling\\n"
                    },
                    {
                        "username": "romantimm25",
                        "content": "Good reads about this topic are:\\nhttps://en.wikipedia.org/wiki/Addition-chain_exponentiation\\nOptimal exponent calculations are not a simple task. So talking about this in the interview might add some value."
                    },
                    {
                        "username": "Yahan-Pranjhol-hai",
                        "content": "var myPow = function(x, n) {\\n  if (n === 0) {\\n    return 1;\\n  }\\n  \\n  if (n < 0) {\\n    return 1 / myPow(x, -n);\\n  }\\n  \\n  if (n % 2 === 0) {\\n    const y = myPow(x, n / 2);\\n    return y * y;\\n  }\\n  \\n  return x * myPow(x, n - 1);\\n};\\n// x**n"
                    },
                    {
                        "username": "juansymontano",
                        "content": "A lot of people are missing the problem. No wonder they can\\u2019t pass technical interviews. "
                    },
                    {
                        "username": "arithin",
                        "content": "Ive written a lot of code. Never have I ever needed to rewrite the POW function. And if I did you know what I\\'d do? Read up on a bunch of math before hand not memorize bs like this"
                    },
                    {
                        "username": "vanshjain499",
                        "content": "return Math.pow(x,n);"
                    },
                    {
                        "username": "juansymontano",
                        "content": "You\\u2019re supposed to implement your own. "
                    },
                    {
                        "username": "juleshwar",
                        "content": "## Testcases I tested my code with\n```\n2\n10\n2\n3\n2\n-2\n2\n13\n-2\n13\n2\n-13\n25\n1\n99\n0\n-99\n-99\n99\n-99\n99\n-2\n0\n10\n1\n25\n1\n0\n```"
                    },
                    {
                        "username": "vadapallichaitu",
                        "content": "something is wrong here, I keep on trying to uses recursive but it says \"name \\'myPow\\' is not defined\", I tried same logic in python playground , it works there"
                    },
                    {
                        "username": "ujwalb29",
                        "content": "x =\\n8.84372\\nn =\\n-5\\nOutput\\n0.00145\\nExpected\\n2e-05\\nWhat\\'s wrong??"
                    }
                ]
            },
            {
                "id": 1885744,
                "content": [
                    {
                        "username": "abhash_18",
                        "content": "why this is question given Medium Status? Its just a one line code.\\nAm i doing something wrong please guide me"
                    },
                    {
                        "username": "bsumner2",
                        "content": "Imagine your language doesn\\'t have a pow function built in. The challenge of the question is making your own version of it, pretending like the provided one doesn\\'t exist. If you used the built in exponent function provided by the math library of your language, then you\\'re trivializing the challenge. Ofc you can just use pow. But imagine back in the early days of programming where you had to write a pow function from scratch. Hope that helps. Happy coding :) "
                    },
                    {
                        "username": "jungle_jim",
                        "content": "This is a math problem."
                    },
                    {
                        "username": "user5029SI",
                        "content": "Lol the test cases are literally trolling\\n"
                    },
                    {
                        "username": "romantimm25",
                        "content": "Good reads about this topic are:\\nhttps://en.wikipedia.org/wiki/Addition-chain_exponentiation\\nOptimal exponent calculations are not a simple task. So talking about this in the interview might add some value."
                    },
                    {
                        "username": "Yahan-Pranjhol-hai",
                        "content": "var myPow = function(x, n) {\\n  if (n === 0) {\\n    return 1;\\n  }\\n  \\n  if (n < 0) {\\n    return 1 / myPow(x, -n);\\n  }\\n  \\n  if (n % 2 === 0) {\\n    const y = myPow(x, n / 2);\\n    return y * y;\\n  }\\n  \\n  return x * myPow(x, n - 1);\\n};\\n// x**n"
                    },
                    {
                        "username": "juansymontano",
                        "content": "A lot of people are missing the problem. No wonder they can\\u2019t pass technical interviews. "
                    },
                    {
                        "username": "arithin",
                        "content": "Ive written a lot of code. Never have I ever needed to rewrite the POW function. And if I did you know what I\\'d do? Read up on a bunch of math before hand not memorize bs like this"
                    },
                    {
                        "username": "vanshjain499",
                        "content": "return Math.pow(x,n);"
                    },
                    {
                        "username": "juansymontano",
                        "content": "You\\u2019re supposed to implement your own. "
                    },
                    {
                        "username": "juleshwar",
                        "content": "## Testcases I tested my code with\n```\n2\n10\n2\n3\n2\n-2\n2\n13\n-2\n13\n2\n-13\n25\n1\n99\n0\n-99\n-99\n99\n-99\n99\n-2\n0\n10\n1\n25\n1\n0\n```"
                    },
                    {
                        "username": "vadapallichaitu",
                        "content": "something is wrong here, I keep on trying to uses recursive but it says \"name \\'myPow\\' is not defined\", I tried same logic in python playground , it works there"
                    },
                    {
                        "username": "ujwalb29",
                        "content": "x =\\n8.84372\\nn =\\n-5\\nOutput\\n0.00145\\nExpected\\n2e-05\\nWhat\\'s wrong??"
                    }
                ]
            },
            {
                "id": 1874231,
                "content": [
                    {
                        "username": "mr_president",
                        "content": "why is this a medium? too easy."
                    },
                    {
                        "username": "kartikey_wariyal",
                        "content": "ya we have to use directly function written there \\n"
                    },
                    {
                        "username": "ashmgln",
                        "content": "I'm trying to find all the prime factors of n and then recursively trying to find the final multiplication. I'm getting 301/305 test cases passed for this approach, and the test case is timing out for \nx = 2.0000\nn = -2147483648\nHere's my multiplication logic\n\n `List<Integer> primeF = primeFactors(n);\n            if (primeF.size() == 1) {\n                return x * (multiply(x, n - 1));\n            } else {\n                double result = x;\n                for (Integer factor : primeF) {\n                    result = multiply(result, factor); \n                }\n                return result;\n            }`\n\n\nI'm finding prime factors with the following function \n `public List<Integer> primeFactors(int num) {\n        List<Integer> primeF = new ArrayList<>();\n        while(num != 1) {\n            for (int i = 2; i <= num; i++) {\n                if (num % i == 0){\n                    primeF.add(i);\n                    num = num/i;\n                    break;\n                }\n            }\n        }\n        return primeF;\n    }`"
                    },
                    {
                        "username": "yashcr7",
                        "content": "```\\npublic double myPow(double x, int n) {\\n        if(n==0) return 1;\\n        if(n==1) return x;\\n        double res = x*x;\\n        int pow = 2;\\n        while(pow*pow<n){\\n            res *= res;\\n            pow *= pow;\\n        }\\n        System.out.println(x+\" \"+n+\" \"+pow);\\n        return res*myPow(x, n-pow);\\n    }\\n```\\nStd out on run:\\n```\\n2.0 10 4\\n2.0 6 4\\n2.0 2 2\\n2.1 3 2          <----- second test case\\n2.0 -2 2\\n2.0 -4 2\\n2.0 -6 2\\n2.0 -8 2.\\n```\\nWhen I debug I get the right answer. Does anyone know whats going on here? I am not sure why I have second test case called into a single test run?"
                    },
                    {
                        "username": "juansymontano",
                        "content": "The \"edge cases\" for this is just the 1, -1, and 0, and some insanely large number to trigger overflow.\\nIt\\'s dumb because then any x and any n sufficiently large enough will trigger it and no one can pass given constraints.\\n\\nPoorly done. Needs an update."
                    },
                    {
                        "username": "trafalgar_d_law",
                        "content": "For the people experiencing stackOverFlow exception when n = Integer.MAX_VALUE, what I found out was that apparently, stackOverFlow exception occurs even when your number of recursive calls are finite, but of a large number, and there are chances that you are using a call like  `return x*myPow(x,n-1)`. Such type of code makes O(N) recursive calls, which is the cause of the exception when n is very high.\nTo avoid this, we can use O(n/2) calls and multiply the answer twice in our final answer.\nthe code is as follows:\n\n       if(n == 0) return 1;\n\n        if(n == 1)return x;\n\n        if(n == -1) return 1/x;\n\n        double half = myPow(x, n/2);\n\n        double rest = myPow(x, n%2);\n\n        return half*half*rest;\n\nsuch type of a code reduces the number of recursive calls to n/2 instead of n, and we are multiplying the returned value (here, `half`), twice to make up for making half of the required number of calls."
                    },
                    {
                        "username": "JigarRajput",
                        "content": "leetcode walo apne stack ka size badhao \nwith the help of -Xss4m"
                    },
                    {
                        "username": "Shivam_Sikotra",
                        "content": "Just an implementation of Fast Exponential Algorithm!!\nDon't feel bad if you can't solve by own and be happy that by help of this question you get to learn new Algorithm. "
                    },
                    {
                        "username": "Wa1kingR3d",
                        "content": "man that was hard to return one line of code im going to figure out how to make it faster"
                    },
                    {
                        "username": "kapilchn7",
                        "content": "I guess there is an issue, with this question. The test case didn\\'t pass for INT_MIN, but when I created a custom one with n ==INT_MIN-1 it got passes, I guess the range of n which is INT_MIN must be exclusive but they gave it wrongly."
                    },
                    {
                        "username": "wagadregagan",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n        \\n        if(n < 0){\\n            n = -n;\\n            x = 1 / x;\\n        }\\n        \\n        double pow = 1;\\n        \\n        while(n != 0){\\n            if((n & 1) != 0){\\n                pow *= x;\\n            } \\n                \\n            x *= x;\\n            n >>>= 1;\\n            \\n        }\\n        \\n        return pow;\\n    }\\n}"
                    }
                ]
            },
            {
                "id": 1873059,
                "content": [
                    {
                        "username": "mr_president",
                        "content": "why is this a medium? too easy."
                    },
                    {
                        "username": "kartikey_wariyal",
                        "content": "ya we have to use directly function written there \\n"
                    },
                    {
                        "username": "ashmgln",
                        "content": "I'm trying to find all the prime factors of n and then recursively trying to find the final multiplication. I'm getting 301/305 test cases passed for this approach, and the test case is timing out for \nx = 2.0000\nn = -2147483648\nHere's my multiplication logic\n\n `List<Integer> primeF = primeFactors(n);\n            if (primeF.size() == 1) {\n                return x * (multiply(x, n - 1));\n            } else {\n                double result = x;\n                for (Integer factor : primeF) {\n                    result = multiply(result, factor); \n                }\n                return result;\n            }`\n\n\nI'm finding prime factors with the following function \n `public List<Integer> primeFactors(int num) {\n        List<Integer> primeF = new ArrayList<>();\n        while(num != 1) {\n            for (int i = 2; i <= num; i++) {\n                if (num % i == 0){\n                    primeF.add(i);\n                    num = num/i;\n                    break;\n                }\n            }\n        }\n        return primeF;\n    }`"
                    },
                    {
                        "username": "yashcr7",
                        "content": "```\\npublic double myPow(double x, int n) {\\n        if(n==0) return 1;\\n        if(n==1) return x;\\n        double res = x*x;\\n        int pow = 2;\\n        while(pow*pow<n){\\n            res *= res;\\n            pow *= pow;\\n        }\\n        System.out.println(x+\" \"+n+\" \"+pow);\\n        return res*myPow(x, n-pow);\\n    }\\n```\\nStd out on run:\\n```\\n2.0 10 4\\n2.0 6 4\\n2.0 2 2\\n2.1 3 2          <----- second test case\\n2.0 -2 2\\n2.0 -4 2\\n2.0 -6 2\\n2.0 -8 2.\\n```\\nWhen I debug I get the right answer. Does anyone know whats going on here? I am not sure why I have second test case called into a single test run?"
                    },
                    {
                        "username": "juansymontano",
                        "content": "The \"edge cases\" for this is just the 1, -1, and 0, and some insanely large number to trigger overflow.\\nIt\\'s dumb because then any x and any n sufficiently large enough will trigger it and no one can pass given constraints.\\n\\nPoorly done. Needs an update."
                    },
                    {
                        "username": "trafalgar_d_law",
                        "content": "For the people experiencing stackOverFlow exception when n = Integer.MAX_VALUE, what I found out was that apparently, stackOverFlow exception occurs even when your number of recursive calls are finite, but of a large number, and there are chances that you are using a call like  `return x*myPow(x,n-1)`. Such type of code makes O(N) recursive calls, which is the cause of the exception when n is very high.\nTo avoid this, we can use O(n/2) calls and multiply the answer twice in our final answer.\nthe code is as follows:\n\n       if(n == 0) return 1;\n\n        if(n == 1)return x;\n\n        if(n == -1) return 1/x;\n\n        double half = myPow(x, n/2);\n\n        double rest = myPow(x, n%2);\n\n        return half*half*rest;\n\nsuch type of a code reduces the number of recursive calls to n/2 instead of n, and we are multiplying the returned value (here, `half`), twice to make up for making half of the required number of calls."
                    },
                    {
                        "username": "JigarRajput",
                        "content": "leetcode walo apne stack ka size badhao \nwith the help of -Xss4m"
                    },
                    {
                        "username": "Shivam_Sikotra",
                        "content": "Just an implementation of Fast Exponential Algorithm!!\nDon't feel bad if you can't solve by own and be happy that by help of this question you get to learn new Algorithm. "
                    },
                    {
                        "username": "Wa1kingR3d",
                        "content": "man that was hard to return one line of code im going to figure out how to make it faster"
                    },
                    {
                        "username": "kapilchn7",
                        "content": "I guess there is an issue, with this question. The test case didn\\'t pass for INT_MIN, but when I created a custom one with n ==INT_MIN-1 it got passes, I guess the range of n which is INT_MIN must be exclusive but they gave it wrongly."
                    },
                    {
                        "username": "wagadregagan",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n        \\n        if(n < 0){\\n            n = -n;\\n            x = 1 / x;\\n        }\\n        \\n        double pow = 1;\\n        \\n        while(n != 0){\\n            if((n & 1) != 0){\\n                pow *= x;\\n            } \\n                \\n            x *= x;\\n            n >>>= 1;\\n            \\n        }\\n        \\n        return pow;\\n    }\\n}"
                    }
                ]
            },
            {
                "id": 1872714,
                "content": [
                    {
                        "username": "mr_president",
                        "content": "why is this a medium? too easy."
                    },
                    {
                        "username": "kartikey_wariyal",
                        "content": "ya we have to use directly function written there \\n"
                    },
                    {
                        "username": "ashmgln",
                        "content": "I'm trying to find all the prime factors of n and then recursively trying to find the final multiplication. I'm getting 301/305 test cases passed for this approach, and the test case is timing out for \nx = 2.0000\nn = -2147483648\nHere's my multiplication logic\n\n `List<Integer> primeF = primeFactors(n);\n            if (primeF.size() == 1) {\n                return x * (multiply(x, n - 1));\n            } else {\n                double result = x;\n                for (Integer factor : primeF) {\n                    result = multiply(result, factor); \n                }\n                return result;\n            }`\n\n\nI'm finding prime factors with the following function \n `public List<Integer> primeFactors(int num) {\n        List<Integer> primeF = new ArrayList<>();\n        while(num != 1) {\n            for (int i = 2; i <= num; i++) {\n                if (num % i == 0){\n                    primeF.add(i);\n                    num = num/i;\n                    break;\n                }\n            }\n        }\n        return primeF;\n    }`"
                    },
                    {
                        "username": "yashcr7",
                        "content": "```\\npublic double myPow(double x, int n) {\\n        if(n==0) return 1;\\n        if(n==1) return x;\\n        double res = x*x;\\n        int pow = 2;\\n        while(pow*pow<n){\\n            res *= res;\\n            pow *= pow;\\n        }\\n        System.out.println(x+\" \"+n+\" \"+pow);\\n        return res*myPow(x, n-pow);\\n    }\\n```\\nStd out on run:\\n```\\n2.0 10 4\\n2.0 6 4\\n2.0 2 2\\n2.1 3 2          <----- second test case\\n2.0 -2 2\\n2.0 -4 2\\n2.0 -6 2\\n2.0 -8 2.\\n```\\nWhen I debug I get the right answer. Does anyone know whats going on here? I am not sure why I have second test case called into a single test run?"
                    },
                    {
                        "username": "juansymontano",
                        "content": "The \"edge cases\" for this is just the 1, -1, and 0, and some insanely large number to trigger overflow.\\nIt\\'s dumb because then any x and any n sufficiently large enough will trigger it and no one can pass given constraints.\\n\\nPoorly done. Needs an update."
                    },
                    {
                        "username": "trafalgar_d_law",
                        "content": "For the people experiencing stackOverFlow exception when n = Integer.MAX_VALUE, what I found out was that apparently, stackOverFlow exception occurs even when your number of recursive calls are finite, but of a large number, and there are chances that you are using a call like  `return x*myPow(x,n-1)`. Such type of code makes O(N) recursive calls, which is the cause of the exception when n is very high.\nTo avoid this, we can use O(n/2) calls and multiply the answer twice in our final answer.\nthe code is as follows:\n\n       if(n == 0) return 1;\n\n        if(n == 1)return x;\n\n        if(n == -1) return 1/x;\n\n        double half = myPow(x, n/2);\n\n        double rest = myPow(x, n%2);\n\n        return half*half*rest;\n\nsuch type of a code reduces the number of recursive calls to n/2 instead of n, and we are multiplying the returned value (here, `half`), twice to make up for making half of the required number of calls."
                    },
                    {
                        "username": "JigarRajput",
                        "content": "leetcode walo apne stack ka size badhao \nwith the help of -Xss4m"
                    },
                    {
                        "username": "Shivam_Sikotra",
                        "content": "Just an implementation of Fast Exponential Algorithm!!\nDon't feel bad if you can't solve by own and be happy that by help of this question you get to learn new Algorithm. "
                    },
                    {
                        "username": "Wa1kingR3d",
                        "content": "man that was hard to return one line of code im going to figure out how to make it faster"
                    },
                    {
                        "username": "kapilchn7",
                        "content": "I guess there is an issue, with this question. The test case didn\\'t pass for INT_MIN, but when I created a custom one with n ==INT_MIN-1 it got passes, I guess the range of n which is INT_MIN must be exclusive but they gave it wrongly."
                    },
                    {
                        "username": "wagadregagan",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n        \\n        if(n < 0){\\n            n = -n;\\n            x = 1 / x;\\n        }\\n        \\n        double pow = 1;\\n        \\n        while(n != 0){\\n            if((n & 1) != 0){\\n                pow *= x;\\n            } \\n                \\n            x *= x;\\n            n >>>= 1;\\n            \\n        }\\n        \\n        return pow;\\n    }\\n}"
                    }
                ]
            },
            {
                "id": 1868269,
                "content": [
                    {
                        "username": "mr_president",
                        "content": "why is this a medium? too easy."
                    },
                    {
                        "username": "kartikey_wariyal",
                        "content": "ya we have to use directly function written there \\n"
                    },
                    {
                        "username": "ashmgln",
                        "content": "I'm trying to find all the prime factors of n and then recursively trying to find the final multiplication. I'm getting 301/305 test cases passed for this approach, and the test case is timing out for \nx = 2.0000\nn = -2147483648\nHere's my multiplication logic\n\n `List<Integer> primeF = primeFactors(n);\n            if (primeF.size() == 1) {\n                return x * (multiply(x, n - 1));\n            } else {\n                double result = x;\n                for (Integer factor : primeF) {\n                    result = multiply(result, factor); \n                }\n                return result;\n            }`\n\n\nI'm finding prime factors with the following function \n `public List<Integer> primeFactors(int num) {\n        List<Integer> primeF = new ArrayList<>();\n        while(num != 1) {\n            for (int i = 2; i <= num; i++) {\n                if (num % i == 0){\n                    primeF.add(i);\n                    num = num/i;\n                    break;\n                }\n            }\n        }\n        return primeF;\n    }`"
                    },
                    {
                        "username": "yashcr7",
                        "content": "```\\npublic double myPow(double x, int n) {\\n        if(n==0) return 1;\\n        if(n==1) return x;\\n        double res = x*x;\\n        int pow = 2;\\n        while(pow*pow<n){\\n            res *= res;\\n            pow *= pow;\\n        }\\n        System.out.println(x+\" \"+n+\" \"+pow);\\n        return res*myPow(x, n-pow);\\n    }\\n```\\nStd out on run:\\n```\\n2.0 10 4\\n2.0 6 4\\n2.0 2 2\\n2.1 3 2          <----- second test case\\n2.0 -2 2\\n2.0 -4 2\\n2.0 -6 2\\n2.0 -8 2.\\n```\\nWhen I debug I get the right answer. Does anyone know whats going on here? I am not sure why I have second test case called into a single test run?"
                    },
                    {
                        "username": "juansymontano",
                        "content": "The \"edge cases\" for this is just the 1, -1, and 0, and some insanely large number to trigger overflow.\\nIt\\'s dumb because then any x and any n sufficiently large enough will trigger it and no one can pass given constraints.\\n\\nPoorly done. Needs an update."
                    },
                    {
                        "username": "trafalgar_d_law",
                        "content": "For the people experiencing stackOverFlow exception when n = Integer.MAX_VALUE, what I found out was that apparently, stackOverFlow exception occurs even when your number of recursive calls are finite, but of a large number, and there are chances that you are using a call like  `return x*myPow(x,n-1)`. Such type of code makes O(N) recursive calls, which is the cause of the exception when n is very high.\nTo avoid this, we can use O(n/2) calls and multiply the answer twice in our final answer.\nthe code is as follows:\n\n       if(n == 0) return 1;\n\n        if(n == 1)return x;\n\n        if(n == -1) return 1/x;\n\n        double half = myPow(x, n/2);\n\n        double rest = myPow(x, n%2);\n\n        return half*half*rest;\n\nsuch type of a code reduces the number of recursive calls to n/2 instead of n, and we are multiplying the returned value (here, `half`), twice to make up for making half of the required number of calls."
                    },
                    {
                        "username": "JigarRajput",
                        "content": "leetcode walo apne stack ka size badhao \nwith the help of -Xss4m"
                    },
                    {
                        "username": "Shivam_Sikotra",
                        "content": "Just an implementation of Fast Exponential Algorithm!!\nDon't feel bad if you can't solve by own and be happy that by help of this question you get to learn new Algorithm. "
                    },
                    {
                        "username": "Wa1kingR3d",
                        "content": "man that was hard to return one line of code im going to figure out how to make it faster"
                    },
                    {
                        "username": "kapilchn7",
                        "content": "I guess there is an issue, with this question. The test case didn\\'t pass for INT_MIN, but when I created a custom one with n ==INT_MIN-1 it got passes, I guess the range of n which is INT_MIN must be exclusive but they gave it wrongly."
                    },
                    {
                        "username": "wagadregagan",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n        \\n        if(n < 0){\\n            n = -n;\\n            x = 1 / x;\\n        }\\n        \\n        double pow = 1;\\n        \\n        while(n != 0){\\n            if((n & 1) != 0){\\n                pow *= x;\\n            } \\n                \\n            x *= x;\\n            n >>>= 1;\\n            \\n        }\\n        \\n        return pow;\\n    }\\n}"
                    }
                ]
            },
            {
                "id": 1868176,
                "content": [
                    {
                        "username": "mr_president",
                        "content": "why is this a medium? too easy."
                    },
                    {
                        "username": "kartikey_wariyal",
                        "content": "ya we have to use directly function written there \\n"
                    },
                    {
                        "username": "ashmgln",
                        "content": "I'm trying to find all the prime factors of n and then recursively trying to find the final multiplication. I'm getting 301/305 test cases passed for this approach, and the test case is timing out for \nx = 2.0000\nn = -2147483648\nHere's my multiplication logic\n\n `List<Integer> primeF = primeFactors(n);\n            if (primeF.size() == 1) {\n                return x * (multiply(x, n - 1));\n            } else {\n                double result = x;\n                for (Integer factor : primeF) {\n                    result = multiply(result, factor); \n                }\n                return result;\n            }`\n\n\nI'm finding prime factors with the following function \n `public List<Integer> primeFactors(int num) {\n        List<Integer> primeF = new ArrayList<>();\n        while(num != 1) {\n            for (int i = 2; i <= num; i++) {\n                if (num % i == 0){\n                    primeF.add(i);\n                    num = num/i;\n                    break;\n                }\n            }\n        }\n        return primeF;\n    }`"
                    },
                    {
                        "username": "yashcr7",
                        "content": "```\\npublic double myPow(double x, int n) {\\n        if(n==0) return 1;\\n        if(n==1) return x;\\n        double res = x*x;\\n        int pow = 2;\\n        while(pow*pow<n){\\n            res *= res;\\n            pow *= pow;\\n        }\\n        System.out.println(x+\" \"+n+\" \"+pow);\\n        return res*myPow(x, n-pow);\\n    }\\n```\\nStd out on run:\\n```\\n2.0 10 4\\n2.0 6 4\\n2.0 2 2\\n2.1 3 2          <----- second test case\\n2.0 -2 2\\n2.0 -4 2\\n2.0 -6 2\\n2.0 -8 2.\\n```\\nWhen I debug I get the right answer. Does anyone know whats going on here? I am not sure why I have second test case called into a single test run?"
                    },
                    {
                        "username": "juansymontano",
                        "content": "The \"edge cases\" for this is just the 1, -1, and 0, and some insanely large number to trigger overflow.\\nIt\\'s dumb because then any x and any n sufficiently large enough will trigger it and no one can pass given constraints.\\n\\nPoorly done. Needs an update."
                    },
                    {
                        "username": "trafalgar_d_law",
                        "content": "For the people experiencing stackOverFlow exception when n = Integer.MAX_VALUE, what I found out was that apparently, stackOverFlow exception occurs even when your number of recursive calls are finite, but of a large number, and there are chances that you are using a call like  `return x*myPow(x,n-1)`. Such type of code makes O(N) recursive calls, which is the cause of the exception when n is very high.\nTo avoid this, we can use O(n/2) calls and multiply the answer twice in our final answer.\nthe code is as follows:\n\n       if(n == 0) return 1;\n\n        if(n == 1)return x;\n\n        if(n == -1) return 1/x;\n\n        double half = myPow(x, n/2);\n\n        double rest = myPow(x, n%2);\n\n        return half*half*rest;\n\nsuch type of a code reduces the number of recursive calls to n/2 instead of n, and we are multiplying the returned value (here, `half`), twice to make up for making half of the required number of calls."
                    },
                    {
                        "username": "JigarRajput",
                        "content": "leetcode walo apne stack ka size badhao \nwith the help of -Xss4m"
                    },
                    {
                        "username": "Shivam_Sikotra",
                        "content": "Just an implementation of Fast Exponential Algorithm!!\nDon't feel bad if you can't solve by own and be happy that by help of this question you get to learn new Algorithm. "
                    },
                    {
                        "username": "Wa1kingR3d",
                        "content": "man that was hard to return one line of code im going to figure out how to make it faster"
                    },
                    {
                        "username": "kapilchn7",
                        "content": "I guess there is an issue, with this question. The test case didn\\'t pass for INT_MIN, but when I created a custom one with n ==INT_MIN-1 it got passes, I guess the range of n which is INT_MIN must be exclusive but they gave it wrongly."
                    },
                    {
                        "username": "wagadregagan",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n        \\n        if(n < 0){\\n            n = -n;\\n            x = 1 / x;\\n        }\\n        \\n        double pow = 1;\\n        \\n        while(n != 0){\\n            if((n & 1) != 0){\\n                pow *= x;\\n            } \\n                \\n            x *= x;\\n            n >>>= 1;\\n            \\n        }\\n        \\n        return pow;\\n    }\\n}"
                    }
                ]
            },
            {
                "id": 1857421,
                "content": [
                    {
                        "username": "mr_president",
                        "content": "why is this a medium? too easy."
                    },
                    {
                        "username": "kartikey_wariyal",
                        "content": "ya we have to use directly function written there \\n"
                    },
                    {
                        "username": "ashmgln",
                        "content": "I'm trying to find all the prime factors of n and then recursively trying to find the final multiplication. I'm getting 301/305 test cases passed for this approach, and the test case is timing out for \nx = 2.0000\nn = -2147483648\nHere's my multiplication logic\n\n `List<Integer> primeF = primeFactors(n);\n            if (primeF.size() == 1) {\n                return x * (multiply(x, n - 1));\n            } else {\n                double result = x;\n                for (Integer factor : primeF) {\n                    result = multiply(result, factor); \n                }\n                return result;\n            }`\n\n\nI'm finding prime factors with the following function \n `public List<Integer> primeFactors(int num) {\n        List<Integer> primeF = new ArrayList<>();\n        while(num != 1) {\n            for (int i = 2; i <= num; i++) {\n                if (num % i == 0){\n                    primeF.add(i);\n                    num = num/i;\n                    break;\n                }\n            }\n        }\n        return primeF;\n    }`"
                    },
                    {
                        "username": "yashcr7",
                        "content": "```\\npublic double myPow(double x, int n) {\\n        if(n==0) return 1;\\n        if(n==1) return x;\\n        double res = x*x;\\n        int pow = 2;\\n        while(pow*pow<n){\\n            res *= res;\\n            pow *= pow;\\n        }\\n        System.out.println(x+\" \"+n+\" \"+pow);\\n        return res*myPow(x, n-pow);\\n    }\\n```\\nStd out on run:\\n```\\n2.0 10 4\\n2.0 6 4\\n2.0 2 2\\n2.1 3 2          <----- second test case\\n2.0 -2 2\\n2.0 -4 2\\n2.0 -6 2\\n2.0 -8 2.\\n```\\nWhen I debug I get the right answer. Does anyone know whats going on here? I am not sure why I have second test case called into a single test run?"
                    },
                    {
                        "username": "juansymontano",
                        "content": "The \"edge cases\" for this is just the 1, -1, and 0, and some insanely large number to trigger overflow.\\nIt\\'s dumb because then any x and any n sufficiently large enough will trigger it and no one can pass given constraints.\\n\\nPoorly done. Needs an update."
                    },
                    {
                        "username": "trafalgar_d_law",
                        "content": "For the people experiencing stackOverFlow exception when n = Integer.MAX_VALUE, what I found out was that apparently, stackOverFlow exception occurs even when your number of recursive calls are finite, but of a large number, and there are chances that you are using a call like  `return x*myPow(x,n-1)`. Such type of code makes O(N) recursive calls, which is the cause of the exception when n is very high.\nTo avoid this, we can use O(n/2) calls and multiply the answer twice in our final answer.\nthe code is as follows:\n\n       if(n == 0) return 1;\n\n        if(n == 1)return x;\n\n        if(n == -1) return 1/x;\n\n        double half = myPow(x, n/2);\n\n        double rest = myPow(x, n%2);\n\n        return half*half*rest;\n\nsuch type of a code reduces the number of recursive calls to n/2 instead of n, and we are multiplying the returned value (here, `half`), twice to make up for making half of the required number of calls."
                    },
                    {
                        "username": "JigarRajput",
                        "content": "leetcode walo apne stack ka size badhao \nwith the help of -Xss4m"
                    },
                    {
                        "username": "Shivam_Sikotra",
                        "content": "Just an implementation of Fast Exponential Algorithm!!\nDon't feel bad if you can't solve by own and be happy that by help of this question you get to learn new Algorithm. "
                    },
                    {
                        "username": "Wa1kingR3d",
                        "content": "man that was hard to return one line of code im going to figure out how to make it faster"
                    },
                    {
                        "username": "kapilchn7",
                        "content": "I guess there is an issue, with this question. The test case didn\\'t pass for INT_MIN, but when I created a custom one with n ==INT_MIN-1 it got passes, I guess the range of n which is INT_MIN must be exclusive but they gave it wrongly."
                    },
                    {
                        "username": "wagadregagan",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n        \\n        if(n < 0){\\n            n = -n;\\n            x = 1 / x;\\n        }\\n        \\n        double pow = 1;\\n        \\n        while(n != 0){\\n            if((n & 1) != 0){\\n                pow *= x;\\n            } \\n                \\n            x *= x;\\n            n >>>= 1;\\n            \\n        }\\n        \\n        return pow;\\n    }\\n}"
                    }
                ]
            },
            {
                "id": 1852306,
                "content": [
                    {
                        "username": "mr_president",
                        "content": "why is this a medium? too easy."
                    },
                    {
                        "username": "kartikey_wariyal",
                        "content": "ya we have to use directly function written there \\n"
                    },
                    {
                        "username": "ashmgln",
                        "content": "I'm trying to find all the prime factors of n and then recursively trying to find the final multiplication. I'm getting 301/305 test cases passed for this approach, and the test case is timing out for \nx = 2.0000\nn = -2147483648\nHere's my multiplication logic\n\n `List<Integer> primeF = primeFactors(n);\n            if (primeF.size() == 1) {\n                return x * (multiply(x, n - 1));\n            } else {\n                double result = x;\n                for (Integer factor : primeF) {\n                    result = multiply(result, factor); \n                }\n                return result;\n            }`\n\n\nI'm finding prime factors with the following function \n `public List<Integer> primeFactors(int num) {\n        List<Integer> primeF = new ArrayList<>();\n        while(num != 1) {\n            for (int i = 2; i <= num; i++) {\n                if (num % i == 0){\n                    primeF.add(i);\n                    num = num/i;\n                    break;\n                }\n            }\n        }\n        return primeF;\n    }`"
                    },
                    {
                        "username": "yashcr7",
                        "content": "```\\npublic double myPow(double x, int n) {\\n        if(n==0) return 1;\\n        if(n==1) return x;\\n        double res = x*x;\\n        int pow = 2;\\n        while(pow*pow<n){\\n            res *= res;\\n            pow *= pow;\\n        }\\n        System.out.println(x+\" \"+n+\" \"+pow);\\n        return res*myPow(x, n-pow);\\n    }\\n```\\nStd out on run:\\n```\\n2.0 10 4\\n2.0 6 4\\n2.0 2 2\\n2.1 3 2          <----- second test case\\n2.0 -2 2\\n2.0 -4 2\\n2.0 -6 2\\n2.0 -8 2.\\n```\\nWhen I debug I get the right answer. Does anyone know whats going on here? I am not sure why I have second test case called into a single test run?"
                    },
                    {
                        "username": "juansymontano",
                        "content": "The \"edge cases\" for this is just the 1, -1, and 0, and some insanely large number to trigger overflow.\\nIt\\'s dumb because then any x and any n sufficiently large enough will trigger it and no one can pass given constraints.\\n\\nPoorly done. Needs an update."
                    },
                    {
                        "username": "trafalgar_d_law",
                        "content": "For the people experiencing stackOverFlow exception when n = Integer.MAX_VALUE, what I found out was that apparently, stackOverFlow exception occurs even when your number of recursive calls are finite, but of a large number, and there are chances that you are using a call like  `return x*myPow(x,n-1)`. Such type of code makes O(N) recursive calls, which is the cause of the exception when n is very high.\nTo avoid this, we can use O(n/2) calls and multiply the answer twice in our final answer.\nthe code is as follows:\n\n       if(n == 0) return 1;\n\n        if(n == 1)return x;\n\n        if(n == -1) return 1/x;\n\n        double half = myPow(x, n/2);\n\n        double rest = myPow(x, n%2);\n\n        return half*half*rest;\n\nsuch type of a code reduces the number of recursive calls to n/2 instead of n, and we are multiplying the returned value (here, `half`), twice to make up for making half of the required number of calls."
                    },
                    {
                        "username": "JigarRajput",
                        "content": "leetcode walo apne stack ka size badhao \nwith the help of -Xss4m"
                    },
                    {
                        "username": "Shivam_Sikotra",
                        "content": "Just an implementation of Fast Exponential Algorithm!!\nDon't feel bad if you can't solve by own and be happy that by help of this question you get to learn new Algorithm. "
                    },
                    {
                        "username": "Wa1kingR3d",
                        "content": "man that was hard to return one line of code im going to figure out how to make it faster"
                    },
                    {
                        "username": "kapilchn7",
                        "content": "I guess there is an issue, with this question. The test case didn\\'t pass for INT_MIN, but when I created a custom one with n ==INT_MIN-1 it got passes, I guess the range of n which is INT_MIN must be exclusive but they gave it wrongly."
                    },
                    {
                        "username": "wagadregagan",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n        \\n        if(n < 0){\\n            n = -n;\\n            x = 1 / x;\\n        }\\n        \\n        double pow = 1;\\n        \\n        while(n != 0){\\n            if((n & 1) != 0){\\n                pow *= x;\\n            } \\n                \\n            x *= x;\\n            n >>>= 1;\\n            \\n        }\\n        \\n        return pow;\\n    }\\n}"
                    }
                ]
            },
            {
                "id": 1847026,
                "content": [
                    {
                        "username": "mr_president",
                        "content": "why is this a medium? too easy."
                    },
                    {
                        "username": "kartikey_wariyal",
                        "content": "ya we have to use directly function written there \\n"
                    },
                    {
                        "username": "ashmgln",
                        "content": "I'm trying to find all the prime factors of n and then recursively trying to find the final multiplication. I'm getting 301/305 test cases passed for this approach, and the test case is timing out for \nx = 2.0000\nn = -2147483648\nHere's my multiplication logic\n\n `List<Integer> primeF = primeFactors(n);\n            if (primeF.size() == 1) {\n                return x * (multiply(x, n - 1));\n            } else {\n                double result = x;\n                for (Integer factor : primeF) {\n                    result = multiply(result, factor); \n                }\n                return result;\n            }`\n\n\nI'm finding prime factors with the following function \n `public List<Integer> primeFactors(int num) {\n        List<Integer> primeF = new ArrayList<>();\n        while(num != 1) {\n            for (int i = 2; i <= num; i++) {\n                if (num % i == 0){\n                    primeF.add(i);\n                    num = num/i;\n                    break;\n                }\n            }\n        }\n        return primeF;\n    }`"
                    },
                    {
                        "username": "yashcr7",
                        "content": "```\\npublic double myPow(double x, int n) {\\n        if(n==0) return 1;\\n        if(n==1) return x;\\n        double res = x*x;\\n        int pow = 2;\\n        while(pow*pow<n){\\n            res *= res;\\n            pow *= pow;\\n        }\\n        System.out.println(x+\" \"+n+\" \"+pow);\\n        return res*myPow(x, n-pow);\\n    }\\n```\\nStd out on run:\\n```\\n2.0 10 4\\n2.0 6 4\\n2.0 2 2\\n2.1 3 2          <----- second test case\\n2.0 -2 2\\n2.0 -4 2\\n2.0 -6 2\\n2.0 -8 2.\\n```\\nWhen I debug I get the right answer. Does anyone know whats going on here? I am not sure why I have second test case called into a single test run?"
                    },
                    {
                        "username": "juansymontano",
                        "content": "The \"edge cases\" for this is just the 1, -1, and 0, and some insanely large number to trigger overflow.\\nIt\\'s dumb because then any x and any n sufficiently large enough will trigger it and no one can pass given constraints.\\n\\nPoorly done. Needs an update."
                    },
                    {
                        "username": "trafalgar_d_law",
                        "content": "For the people experiencing stackOverFlow exception when n = Integer.MAX_VALUE, what I found out was that apparently, stackOverFlow exception occurs even when your number of recursive calls are finite, but of a large number, and there are chances that you are using a call like  `return x*myPow(x,n-1)`. Such type of code makes O(N) recursive calls, which is the cause of the exception when n is very high.\nTo avoid this, we can use O(n/2) calls and multiply the answer twice in our final answer.\nthe code is as follows:\n\n       if(n == 0) return 1;\n\n        if(n == 1)return x;\n\n        if(n == -1) return 1/x;\n\n        double half = myPow(x, n/2);\n\n        double rest = myPow(x, n%2);\n\n        return half*half*rest;\n\nsuch type of a code reduces the number of recursive calls to n/2 instead of n, and we are multiplying the returned value (here, `half`), twice to make up for making half of the required number of calls."
                    },
                    {
                        "username": "JigarRajput",
                        "content": "leetcode walo apne stack ka size badhao \nwith the help of -Xss4m"
                    },
                    {
                        "username": "Shivam_Sikotra",
                        "content": "Just an implementation of Fast Exponential Algorithm!!\nDon't feel bad if you can't solve by own and be happy that by help of this question you get to learn new Algorithm. "
                    },
                    {
                        "username": "Wa1kingR3d",
                        "content": "man that was hard to return one line of code im going to figure out how to make it faster"
                    },
                    {
                        "username": "kapilchn7",
                        "content": "I guess there is an issue, with this question. The test case didn\\'t pass for INT_MIN, but when I created a custom one with n ==INT_MIN-1 it got passes, I guess the range of n which is INT_MIN must be exclusive but they gave it wrongly."
                    },
                    {
                        "username": "wagadregagan",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n        \\n        if(n < 0){\\n            n = -n;\\n            x = 1 / x;\\n        }\\n        \\n        double pow = 1;\\n        \\n        while(n != 0){\\n            if((n & 1) != 0){\\n                pow *= x;\\n            } \\n                \\n            x *= x;\\n            n >>>= 1;\\n            \\n        }\\n        \\n        return pow;\\n    }\\n}"
                    }
                ]
            },
            {
                "id": 1837901,
                "content": [
                    {
                        "username": "mr_president",
                        "content": "why is this a medium? too easy."
                    },
                    {
                        "username": "kartikey_wariyal",
                        "content": "ya we have to use directly function written there \\n"
                    },
                    {
                        "username": "ashmgln",
                        "content": "I'm trying to find all the prime factors of n and then recursively trying to find the final multiplication. I'm getting 301/305 test cases passed for this approach, and the test case is timing out for \nx = 2.0000\nn = -2147483648\nHere's my multiplication logic\n\n `List<Integer> primeF = primeFactors(n);\n            if (primeF.size() == 1) {\n                return x * (multiply(x, n - 1));\n            } else {\n                double result = x;\n                for (Integer factor : primeF) {\n                    result = multiply(result, factor); \n                }\n                return result;\n            }`\n\n\nI'm finding prime factors with the following function \n `public List<Integer> primeFactors(int num) {\n        List<Integer> primeF = new ArrayList<>();\n        while(num != 1) {\n            for (int i = 2; i <= num; i++) {\n                if (num % i == 0){\n                    primeF.add(i);\n                    num = num/i;\n                    break;\n                }\n            }\n        }\n        return primeF;\n    }`"
                    },
                    {
                        "username": "yashcr7",
                        "content": "```\\npublic double myPow(double x, int n) {\\n        if(n==0) return 1;\\n        if(n==1) return x;\\n        double res = x*x;\\n        int pow = 2;\\n        while(pow*pow<n){\\n            res *= res;\\n            pow *= pow;\\n        }\\n        System.out.println(x+\" \"+n+\" \"+pow);\\n        return res*myPow(x, n-pow);\\n    }\\n```\\nStd out on run:\\n```\\n2.0 10 4\\n2.0 6 4\\n2.0 2 2\\n2.1 3 2          <----- second test case\\n2.0 -2 2\\n2.0 -4 2\\n2.0 -6 2\\n2.0 -8 2.\\n```\\nWhen I debug I get the right answer. Does anyone know whats going on here? I am not sure why I have second test case called into a single test run?"
                    },
                    {
                        "username": "juansymontano",
                        "content": "The \"edge cases\" for this is just the 1, -1, and 0, and some insanely large number to trigger overflow.\\nIt\\'s dumb because then any x and any n sufficiently large enough will trigger it and no one can pass given constraints.\\n\\nPoorly done. Needs an update."
                    },
                    {
                        "username": "trafalgar_d_law",
                        "content": "For the people experiencing stackOverFlow exception when n = Integer.MAX_VALUE, what I found out was that apparently, stackOverFlow exception occurs even when your number of recursive calls are finite, but of a large number, and there are chances that you are using a call like  `return x*myPow(x,n-1)`. Such type of code makes O(N) recursive calls, which is the cause of the exception when n is very high.\nTo avoid this, we can use O(n/2) calls and multiply the answer twice in our final answer.\nthe code is as follows:\n\n       if(n == 0) return 1;\n\n        if(n == 1)return x;\n\n        if(n == -1) return 1/x;\n\n        double half = myPow(x, n/2);\n\n        double rest = myPow(x, n%2);\n\n        return half*half*rest;\n\nsuch type of a code reduces the number of recursive calls to n/2 instead of n, and we are multiplying the returned value (here, `half`), twice to make up for making half of the required number of calls."
                    },
                    {
                        "username": "JigarRajput",
                        "content": "leetcode walo apne stack ka size badhao \nwith the help of -Xss4m"
                    },
                    {
                        "username": "Shivam_Sikotra",
                        "content": "Just an implementation of Fast Exponential Algorithm!!\nDon't feel bad if you can't solve by own and be happy that by help of this question you get to learn new Algorithm. "
                    },
                    {
                        "username": "Wa1kingR3d",
                        "content": "man that was hard to return one line of code im going to figure out how to make it faster"
                    },
                    {
                        "username": "kapilchn7",
                        "content": "I guess there is an issue, with this question. The test case didn\\'t pass for INT_MIN, but when I created a custom one with n ==INT_MIN-1 it got passes, I guess the range of n which is INT_MIN must be exclusive but they gave it wrongly."
                    },
                    {
                        "username": "wagadregagan",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n        \\n        if(n < 0){\\n            n = -n;\\n            x = 1 / x;\\n        }\\n        \\n        double pow = 1;\\n        \\n        while(n != 0){\\n            if((n & 1) != 0){\\n                pow *= x;\\n            } \\n                \\n            x *= x;\\n            n >>>= 1;\\n            \\n        }\\n        \\n        return pow;\\n    }\\n}"
                    }
                ]
            },
            {
                "id": 1824241,
                "content": [
                    {
                        "username": "mr_president",
                        "content": "why is this a medium? too easy."
                    },
                    {
                        "username": "kartikey_wariyal",
                        "content": "ya we have to use directly function written there \\n"
                    },
                    {
                        "username": "ashmgln",
                        "content": "I'm trying to find all the prime factors of n and then recursively trying to find the final multiplication. I'm getting 301/305 test cases passed for this approach, and the test case is timing out for \nx = 2.0000\nn = -2147483648\nHere's my multiplication logic\n\n `List<Integer> primeF = primeFactors(n);\n            if (primeF.size() == 1) {\n                return x * (multiply(x, n - 1));\n            } else {\n                double result = x;\n                for (Integer factor : primeF) {\n                    result = multiply(result, factor); \n                }\n                return result;\n            }`\n\n\nI'm finding prime factors with the following function \n `public List<Integer> primeFactors(int num) {\n        List<Integer> primeF = new ArrayList<>();\n        while(num != 1) {\n            for (int i = 2; i <= num; i++) {\n                if (num % i == 0){\n                    primeF.add(i);\n                    num = num/i;\n                    break;\n                }\n            }\n        }\n        return primeF;\n    }`"
                    },
                    {
                        "username": "yashcr7",
                        "content": "```\\npublic double myPow(double x, int n) {\\n        if(n==0) return 1;\\n        if(n==1) return x;\\n        double res = x*x;\\n        int pow = 2;\\n        while(pow*pow<n){\\n            res *= res;\\n            pow *= pow;\\n        }\\n        System.out.println(x+\" \"+n+\" \"+pow);\\n        return res*myPow(x, n-pow);\\n    }\\n```\\nStd out on run:\\n```\\n2.0 10 4\\n2.0 6 4\\n2.0 2 2\\n2.1 3 2          <----- second test case\\n2.0 -2 2\\n2.0 -4 2\\n2.0 -6 2\\n2.0 -8 2.\\n```\\nWhen I debug I get the right answer. Does anyone know whats going on here? I am not sure why I have second test case called into a single test run?"
                    },
                    {
                        "username": "juansymontano",
                        "content": "The \"edge cases\" for this is just the 1, -1, and 0, and some insanely large number to trigger overflow.\\nIt\\'s dumb because then any x and any n sufficiently large enough will trigger it and no one can pass given constraints.\\n\\nPoorly done. Needs an update."
                    },
                    {
                        "username": "trafalgar_d_law",
                        "content": "For the people experiencing stackOverFlow exception when n = Integer.MAX_VALUE, what I found out was that apparently, stackOverFlow exception occurs even when your number of recursive calls are finite, but of a large number, and there are chances that you are using a call like  `return x*myPow(x,n-1)`. Such type of code makes O(N) recursive calls, which is the cause of the exception when n is very high.\nTo avoid this, we can use O(n/2) calls and multiply the answer twice in our final answer.\nthe code is as follows:\n\n       if(n == 0) return 1;\n\n        if(n == 1)return x;\n\n        if(n == -1) return 1/x;\n\n        double half = myPow(x, n/2);\n\n        double rest = myPow(x, n%2);\n\n        return half*half*rest;\n\nsuch type of a code reduces the number of recursive calls to n/2 instead of n, and we are multiplying the returned value (here, `half`), twice to make up for making half of the required number of calls."
                    },
                    {
                        "username": "JigarRajput",
                        "content": "leetcode walo apne stack ka size badhao \nwith the help of -Xss4m"
                    },
                    {
                        "username": "Shivam_Sikotra",
                        "content": "Just an implementation of Fast Exponential Algorithm!!\nDon't feel bad if you can't solve by own and be happy that by help of this question you get to learn new Algorithm. "
                    },
                    {
                        "username": "Wa1kingR3d",
                        "content": "man that was hard to return one line of code im going to figure out how to make it faster"
                    },
                    {
                        "username": "kapilchn7",
                        "content": "I guess there is an issue, with this question. The test case didn\\'t pass for INT_MIN, but when I created a custom one with n ==INT_MIN-1 it got passes, I guess the range of n which is INT_MIN must be exclusive but they gave it wrongly."
                    },
                    {
                        "username": "wagadregagan",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n        \\n        if(n < 0){\\n            n = -n;\\n            x = 1 / x;\\n        }\\n        \\n        double pow = 1;\\n        \\n        while(n != 0){\\n            if((n & 1) != 0){\\n                pow *= x;\\n            } \\n                \\n            x *= x;\\n            n >>>= 1;\\n            \\n        }\\n        \\n        return pow;\\n    }\\n}"
                    }
                ]
            },
            {
                "id": 1810594,
                "content": [
                    {
                        "username": "bishal_722",
                        "content": "Can you solve it in constant time O(1) ? \\nVisit my solution to understand a different approach to this problem.\\n\\nhttps://leetcode.com/problems/powx-n/solutions/3217521/o1-c-solution-explained-with-images/"
                    },
                    {
                        "username": "psionl0",
                        "content": "I\\'m not convinced that behind the hood, log and exp both have O(1) run times."
                    },
                    {
                        "username": "Nitinkushwaha",
                        "content": "code is passing few test cases but on submitting giving runtime error can anyone help me with code\n\n\nclass Solution {\n    public double myPow(double x, int n)\n     {\n    double a;\n     if(n>=0)\n        {\n        if(n==0)\n            return 1;\n         a=x*myPow(x,n-1);\n        \n         }\n         else\n         {\n             if(n==0)\n               return 1;\n              a=(1/x)*(1/(myPow(x,-(n+1))));\n         }\n        \n        return a;\n    }\n    \n}"
                    },
                    {
                        "username": "titanaro_1410",
                        "content": "I don\\'t know why the tag is binary search, but the tags are now updated to Math and Recursion"
                    },
                    {
                        "username": "shweta_raj",
                        "content": "simple recursion and divide and conquer:\nclass Solution(object):\n    def myPow(self, x, n):\n        \"\"\"\n        :type x: float\n        :type n: int\n        :rtype: float\n        \"\"\"\n if n < 0:\n            n = -n\n            x = 1/x\n        if n==1 or n==0:\n            return x**n\n        if n%2:\n            return self.myPow(x, n/2) * self.myPow(x, n/2) * x\n\n        return self.myPow(x, n/2) * self.myPow(x, n/2)\n"
                    },
                    {
                        "username": "ankush920",
                        "content": "100 % fast and easy recurrsive solution :-\\nclass Solution {\\npublic:\\n\\n  double positive( double x ,int n )\\n  {\\n      if( n==0 )\\n      {\\n          return 1.00000;\\n      }\\n\\n      double temp = positive(x ,n/2);\\n\\nif( n%2!=0)\\n{\\n    return temp *temp *x;\\n     \\n}\\n\\nreturn temp*temp ;\\n      \\n  }\\n\\n\\n\\n    double negative( double x ,int n )\\n  {\\n      if( n==0 )\\n      {\\n          return 1.00000;\\n      }\\n\\n      double temp = negative (x ,n/2);\\n\\nif( n%2!=0)\\n{\\n    return (temp *temp *(1/x));\\n     \\n}\\n\\nreturn (temp*temp) ;\\n\\n  }\\n\\n    double myPow(double x, int n) {\\n        \\n        if(n==0)\\n        {\\n             return 1.00000;\\n        }\\n\\n        if(n>0)\\n        {\\n           return positive(x,n);  \\n        }\\n\\nreturn negative( x,n);\\n        \\n    }\\n};\\nConsole\\n"
                    },
                    {
                        "username": "abumdmiran2001",
                        "content": "Test case 301 is out of constraint ,How can I solve that. "
                    },
                    {
                        "username": "c8763yee",
                        "content": "i was wondering why i keep get TLE when (x, n)=(0.00001, 2147483647)\nhere is my code:\n```python\nclass Solution:\n    def myPow(self, x: float, n: int) -> float:\n        if n < 0:\n            n = -n\n            x = 1/x\n\n        if n == 0 or n == 1:\n            return x**n\n        \n        if n%2:\n            return self.myPow(x, n//2) * self.myPow(x, n//2) * x\n\n        return self.myPow(x, n//2) * self.myPow(x, n//2)\n```\nthanks for any advise"
                    },
                    {
                        "username": "Aman9262",
                        "content": "```\\nclass Solution {\\n    map<int,double> dp;\\n    double util(double x, int n) {\\n        if(n==0){\\n            return dp[n]=1;\\n        }\\n        if(dp.find(n)!=dp.end()) {\\n                return dp[n];\\n        }\\n        if(n<0){\\n          if(n%2)\\n           return dp[n]=(1.0/x)*util(x, n/2)*util(x, n/2);\\n         return dp[n]=util(x, n/2)*util(x, n/2);\\n        }\\n        if(n%2)\\n           return dp[n]=x*util(x, n/2)*util(x, n/2);\\n        return dp[n] = util(x, n/2)*util(x, n/2);\\n    }\\npublic:\\n    double myPow(double x, int n) {\\n        return util(x,n);\\n    }\\n};\\n```"
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "Having weird issue in C++. for the test case where n = -2147483648 and x = 2, for whatever reason when I run the compiler here, I get 1, but when I run it in VSCode, I get the correct output."
                    },
                    {
                        "username": "khrome",
                        "content": "Why is this too slow? Shouldn\\'t the second recursive call immediately get the answer from memo, making the whole thing O(logn)? It works fine if instead of doing 2 recursive calls I just square the first one like in the comment. But Im curious why the 2 recursive calls make it slow.\\n\\n\\n    def myPow(self, x: float, n: int) -> float:\\n        memo = {0:1}\\n        def dp(n):\\n            nonlocal memo\\n            if memo.get(n):\\n                return memo[n]\\n            odd = n % 2\\n            answer = dp(n//2) * dp(n//2)\\n            # answer *= answer\\n            if odd:\\n                answer *= x\\n            memo[n] = answer\\n            return answer\\n        dp(abs(n))\\n        if n < 0:\\n            return 1 / float(memo[abs(n)])\\n        return memo[n]"
                    },
                    {
                        "username": "mickeyvn",
                        "content": "You can do in O(1)"
                    }
                ]
            },
            {
                "id": 1808648,
                "content": [
                    {
                        "username": "bishal_722",
                        "content": "Can you solve it in constant time O(1) ? \\nVisit my solution to understand a different approach to this problem.\\n\\nhttps://leetcode.com/problems/powx-n/solutions/3217521/o1-c-solution-explained-with-images/"
                    },
                    {
                        "username": "psionl0",
                        "content": "I\\'m not convinced that behind the hood, log and exp both have O(1) run times."
                    },
                    {
                        "username": "Nitinkushwaha",
                        "content": "code is passing few test cases but on submitting giving runtime error can anyone help me with code\n\n\nclass Solution {\n    public double myPow(double x, int n)\n     {\n    double a;\n     if(n>=0)\n        {\n        if(n==0)\n            return 1;\n         a=x*myPow(x,n-1);\n        \n         }\n         else\n         {\n             if(n==0)\n               return 1;\n              a=(1/x)*(1/(myPow(x,-(n+1))));\n         }\n        \n        return a;\n    }\n    \n}"
                    },
                    {
                        "username": "titanaro_1410",
                        "content": "I don\\'t know why the tag is binary search, but the tags are now updated to Math and Recursion"
                    },
                    {
                        "username": "shweta_raj",
                        "content": "simple recursion and divide and conquer:\nclass Solution(object):\n    def myPow(self, x, n):\n        \"\"\"\n        :type x: float\n        :type n: int\n        :rtype: float\n        \"\"\"\n if n < 0:\n            n = -n\n            x = 1/x\n        if n==1 or n==0:\n            return x**n\n        if n%2:\n            return self.myPow(x, n/2) * self.myPow(x, n/2) * x\n\n        return self.myPow(x, n/2) * self.myPow(x, n/2)\n"
                    },
                    {
                        "username": "ankush920",
                        "content": "100 % fast and easy recurrsive solution :-\\nclass Solution {\\npublic:\\n\\n  double positive( double x ,int n )\\n  {\\n      if( n==0 )\\n      {\\n          return 1.00000;\\n      }\\n\\n      double temp = positive(x ,n/2);\\n\\nif( n%2!=0)\\n{\\n    return temp *temp *x;\\n     \\n}\\n\\nreturn temp*temp ;\\n      \\n  }\\n\\n\\n\\n    double negative( double x ,int n )\\n  {\\n      if( n==0 )\\n      {\\n          return 1.00000;\\n      }\\n\\n      double temp = negative (x ,n/2);\\n\\nif( n%2!=0)\\n{\\n    return (temp *temp *(1/x));\\n     \\n}\\n\\nreturn (temp*temp) ;\\n\\n  }\\n\\n    double myPow(double x, int n) {\\n        \\n        if(n==0)\\n        {\\n             return 1.00000;\\n        }\\n\\n        if(n>0)\\n        {\\n           return positive(x,n);  \\n        }\\n\\nreturn negative( x,n);\\n        \\n    }\\n};\\nConsole\\n"
                    },
                    {
                        "username": "abumdmiran2001",
                        "content": "Test case 301 is out of constraint ,How can I solve that. "
                    },
                    {
                        "username": "c8763yee",
                        "content": "i was wondering why i keep get TLE when (x, n)=(0.00001, 2147483647)\nhere is my code:\n```python\nclass Solution:\n    def myPow(self, x: float, n: int) -> float:\n        if n < 0:\n            n = -n\n            x = 1/x\n\n        if n == 0 or n == 1:\n            return x**n\n        \n        if n%2:\n            return self.myPow(x, n//2) * self.myPow(x, n//2) * x\n\n        return self.myPow(x, n//2) * self.myPow(x, n//2)\n```\nthanks for any advise"
                    },
                    {
                        "username": "Aman9262",
                        "content": "```\\nclass Solution {\\n    map<int,double> dp;\\n    double util(double x, int n) {\\n        if(n==0){\\n            return dp[n]=1;\\n        }\\n        if(dp.find(n)!=dp.end()) {\\n                return dp[n];\\n        }\\n        if(n<0){\\n          if(n%2)\\n           return dp[n]=(1.0/x)*util(x, n/2)*util(x, n/2);\\n         return dp[n]=util(x, n/2)*util(x, n/2);\\n        }\\n        if(n%2)\\n           return dp[n]=x*util(x, n/2)*util(x, n/2);\\n        return dp[n] = util(x, n/2)*util(x, n/2);\\n    }\\npublic:\\n    double myPow(double x, int n) {\\n        return util(x,n);\\n    }\\n};\\n```"
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "Having weird issue in C++. for the test case where n = -2147483648 and x = 2, for whatever reason when I run the compiler here, I get 1, but when I run it in VSCode, I get the correct output."
                    },
                    {
                        "username": "khrome",
                        "content": "Why is this too slow? Shouldn\\'t the second recursive call immediately get the answer from memo, making the whole thing O(logn)? It works fine if instead of doing 2 recursive calls I just square the first one like in the comment. But Im curious why the 2 recursive calls make it slow.\\n\\n\\n    def myPow(self, x: float, n: int) -> float:\\n        memo = {0:1}\\n        def dp(n):\\n            nonlocal memo\\n            if memo.get(n):\\n                return memo[n]\\n            odd = n % 2\\n            answer = dp(n//2) * dp(n//2)\\n            # answer *= answer\\n            if odd:\\n                answer *= x\\n            memo[n] = answer\\n            return answer\\n        dp(abs(n))\\n        if n < 0:\\n            return 1 / float(memo[abs(n)])\\n        return memo[n]"
                    },
                    {
                        "username": "mickeyvn",
                        "content": "You can do in O(1)"
                    }
                ]
            },
            {
                "id": 1807072,
                "content": [
                    {
                        "username": "bishal_722",
                        "content": "Can you solve it in constant time O(1) ? \\nVisit my solution to understand a different approach to this problem.\\n\\nhttps://leetcode.com/problems/powx-n/solutions/3217521/o1-c-solution-explained-with-images/"
                    },
                    {
                        "username": "psionl0",
                        "content": "I\\'m not convinced that behind the hood, log and exp both have O(1) run times."
                    },
                    {
                        "username": "Nitinkushwaha",
                        "content": "code is passing few test cases but on submitting giving runtime error can anyone help me with code\n\n\nclass Solution {\n    public double myPow(double x, int n)\n     {\n    double a;\n     if(n>=0)\n        {\n        if(n==0)\n            return 1;\n         a=x*myPow(x,n-1);\n        \n         }\n         else\n         {\n             if(n==0)\n               return 1;\n              a=(1/x)*(1/(myPow(x,-(n+1))));\n         }\n        \n        return a;\n    }\n    \n}"
                    },
                    {
                        "username": "titanaro_1410",
                        "content": "I don\\'t know why the tag is binary search, but the tags are now updated to Math and Recursion"
                    },
                    {
                        "username": "shweta_raj",
                        "content": "simple recursion and divide and conquer:\nclass Solution(object):\n    def myPow(self, x, n):\n        \"\"\"\n        :type x: float\n        :type n: int\n        :rtype: float\n        \"\"\"\n if n < 0:\n            n = -n\n            x = 1/x\n        if n==1 or n==0:\n            return x**n\n        if n%2:\n            return self.myPow(x, n/2) * self.myPow(x, n/2) * x\n\n        return self.myPow(x, n/2) * self.myPow(x, n/2)\n"
                    },
                    {
                        "username": "ankush920",
                        "content": "100 % fast and easy recurrsive solution :-\\nclass Solution {\\npublic:\\n\\n  double positive( double x ,int n )\\n  {\\n      if( n==0 )\\n      {\\n          return 1.00000;\\n      }\\n\\n      double temp = positive(x ,n/2);\\n\\nif( n%2!=0)\\n{\\n    return temp *temp *x;\\n     \\n}\\n\\nreturn temp*temp ;\\n      \\n  }\\n\\n\\n\\n    double negative( double x ,int n )\\n  {\\n      if( n==0 )\\n      {\\n          return 1.00000;\\n      }\\n\\n      double temp = negative (x ,n/2);\\n\\nif( n%2!=0)\\n{\\n    return (temp *temp *(1/x));\\n     \\n}\\n\\nreturn (temp*temp) ;\\n\\n  }\\n\\n    double myPow(double x, int n) {\\n        \\n        if(n==0)\\n        {\\n             return 1.00000;\\n        }\\n\\n        if(n>0)\\n        {\\n           return positive(x,n);  \\n        }\\n\\nreturn negative( x,n);\\n        \\n    }\\n};\\nConsole\\n"
                    },
                    {
                        "username": "abumdmiran2001",
                        "content": "Test case 301 is out of constraint ,How can I solve that. "
                    },
                    {
                        "username": "c8763yee",
                        "content": "i was wondering why i keep get TLE when (x, n)=(0.00001, 2147483647)\nhere is my code:\n```python\nclass Solution:\n    def myPow(self, x: float, n: int) -> float:\n        if n < 0:\n            n = -n\n            x = 1/x\n\n        if n == 0 or n == 1:\n            return x**n\n        \n        if n%2:\n            return self.myPow(x, n//2) * self.myPow(x, n//2) * x\n\n        return self.myPow(x, n//2) * self.myPow(x, n//2)\n```\nthanks for any advise"
                    },
                    {
                        "username": "Aman9262",
                        "content": "```\\nclass Solution {\\n    map<int,double> dp;\\n    double util(double x, int n) {\\n        if(n==0){\\n            return dp[n]=1;\\n        }\\n        if(dp.find(n)!=dp.end()) {\\n                return dp[n];\\n        }\\n        if(n<0){\\n          if(n%2)\\n           return dp[n]=(1.0/x)*util(x, n/2)*util(x, n/2);\\n         return dp[n]=util(x, n/2)*util(x, n/2);\\n        }\\n        if(n%2)\\n           return dp[n]=x*util(x, n/2)*util(x, n/2);\\n        return dp[n] = util(x, n/2)*util(x, n/2);\\n    }\\npublic:\\n    double myPow(double x, int n) {\\n        return util(x,n);\\n    }\\n};\\n```"
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "Having weird issue in C++. for the test case where n = -2147483648 and x = 2, for whatever reason when I run the compiler here, I get 1, but when I run it in VSCode, I get the correct output."
                    },
                    {
                        "username": "khrome",
                        "content": "Why is this too slow? Shouldn\\'t the second recursive call immediately get the answer from memo, making the whole thing O(logn)? It works fine if instead of doing 2 recursive calls I just square the first one like in the comment. But Im curious why the 2 recursive calls make it slow.\\n\\n\\n    def myPow(self, x: float, n: int) -> float:\\n        memo = {0:1}\\n        def dp(n):\\n            nonlocal memo\\n            if memo.get(n):\\n                return memo[n]\\n            odd = n % 2\\n            answer = dp(n//2) * dp(n//2)\\n            # answer *= answer\\n            if odd:\\n                answer *= x\\n            memo[n] = answer\\n            return answer\\n        dp(abs(n))\\n        if n < 0:\\n            return 1 / float(memo[abs(n)])\\n        return memo[n]"
                    },
                    {
                        "username": "mickeyvn",
                        "content": "You can do in O(1)"
                    }
                ]
            },
            {
                "id": 1805438,
                "content": [
                    {
                        "username": "bishal_722",
                        "content": "Can you solve it in constant time O(1) ? \\nVisit my solution to understand a different approach to this problem.\\n\\nhttps://leetcode.com/problems/powx-n/solutions/3217521/o1-c-solution-explained-with-images/"
                    },
                    {
                        "username": "psionl0",
                        "content": "I\\'m not convinced that behind the hood, log and exp both have O(1) run times."
                    },
                    {
                        "username": "Nitinkushwaha",
                        "content": "code is passing few test cases but on submitting giving runtime error can anyone help me with code\n\n\nclass Solution {\n    public double myPow(double x, int n)\n     {\n    double a;\n     if(n>=0)\n        {\n        if(n==0)\n            return 1;\n         a=x*myPow(x,n-1);\n        \n         }\n         else\n         {\n             if(n==0)\n               return 1;\n              a=(1/x)*(1/(myPow(x,-(n+1))));\n         }\n        \n        return a;\n    }\n    \n}"
                    },
                    {
                        "username": "titanaro_1410",
                        "content": "I don\\'t know why the tag is binary search, but the tags are now updated to Math and Recursion"
                    },
                    {
                        "username": "shweta_raj",
                        "content": "simple recursion and divide and conquer:\nclass Solution(object):\n    def myPow(self, x, n):\n        \"\"\"\n        :type x: float\n        :type n: int\n        :rtype: float\n        \"\"\"\n if n < 0:\n            n = -n\n            x = 1/x\n        if n==1 or n==0:\n            return x**n\n        if n%2:\n            return self.myPow(x, n/2) * self.myPow(x, n/2) * x\n\n        return self.myPow(x, n/2) * self.myPow(x, n/2)\n"
                    },
                    {
                        "username": "ankush920",
                        "content": "100 % fast and easy recurrsive solution :-\\nclass Solution {\\npublic:\\n\\n  double positive( double x ,int n )\\n  {\\n      if( n==0 )\\n      {\\n          return 1.00000;\\n      }\\n\\n      double temp = positive(x ,n/2);\\n\\nif( n%2!=0)\\n{\\n    return temp *temp *x;\\n     \\n}\\n\\nreturn temp*temp ;\\n      \\n  }\\n\\n\\n\\n    double negative( double x ,int n )\\n  {\\n      if( n==0 )\\n      {\\n          return 1.00000;\\n      }\\n\\n      double temp = negative (x ,n/2);\\n\\nif( n%2!=0)\\n{\\n    return (temp *temp *(1/x));\\n     \\n}\\n\\nreturn (temp*temp) ;\\n\\n  }\\n\\n    double myPow(double x, int n) {\\n        \\n        if(n==0)\\n        {\\n             return 1.00000;\\n        }\\n\\n        if(n>0)\\n        {\\n           return positive(x,n);  \\n        }\\n\\nreturn negative( x,n);\\n        \\n    }\\n};\\nConsole\\n"
                    },
                    {
                        "username": "abumdmiran2001",
                        "content": "Test case 301 is out of constraint ,How can I solve that. "
                    },
                    {
                        "username": "c8763yee",
                        "content": "i was wondering why i keep get TLE when (x, n)=(0.00001, 2147483647)\nhere is my code:\n```python\nclass Solution:\n    def myPow(self, x: float, n: int) -> float:\n        if n < 0:\n            n = -n\n            x = 1/x\n\n        if n == 0 or n == 1:\n            return x**n\n        \n        if n%2:\n            return self.myPow(x, n//2) * self.myPow(x, n//2) * x\n\n        return self.myPow(x, n//2) * self.myPow(x, n//2)\n```\nthanks for any advise"
                    },
                    {
                        "username": "Aman9262",
                        "content": "```\\nclass Solution {\\n    map<int,double> dp;\\n    double util(double x, int n) {\\n        if(n==0){\\n            return dp[n]=1;\\n        }\\n        if(dp.find(n)!=dp.end()) {\\n                return dp[n];\\n        }\\n        if(n<0){\\n          if(n%2)\\n           return dp[n]=(1.0/x)*util(x, n/2)*util(x, n/2);\\n         return dp[n]=util(x, n/2)*util(x, n/2);\\n        }\\n        if(n%2)\\n           return dp[n]=x*util(x, n/2)*util(x, n/2);\\n        return dp[n] = util(x, n/2)*util(x, n/2);\\n    }\\npublic:\\n    double myPow(double x, int n) {\\n        return util(x,n);\\n    }\\n};\\n```"
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "Having weird issue in C++. for the test case where n = -2147483648 and x = 2, for whatever reason when I run the compiler here, I get 1, but when I run it in VSCode, I get the correct output."
                    },
                    {
                        "username": "khrome",
                        "content": "Why is this too slow? Shouldn\\'t the second recursive call immediately get the answer from memo, making the whole thing O(logn)? It works fine if instead of doing 2 recursive calls I just square the first one like in the comment. But Im curious why the 2 recursive calls make it slow.\\n\\n\\n    def myPow(self, x: float, n: int) -> float:\\n        memo = {0:1}\\n        def dp(n):\\n            nonlocal memo\\n            if memo.get(n):\\n                return memo[n]\\n            odd = n % 2\\n            answer = dp(n//2) * dp(n//2)\\n            # answer *= answer\\n            if odd:\\n                answer *= x\\n            memo[n] = answer\\n            return answer\\n        dp(abs(n))\\n        if n < 0:\\n            return 1 / float(memo[abs(n)])\\n        return memo[n]"
                    },
                    {
                        "username": "mickeyvn",
                        "content": "You can do in O(1)"
                    }
                ]
            },
            {
                "id": 1803019,
                "content": [
                    {
                        "username": "bishal_722",
                        "content": "Can you solve it in constant time O(1) ? \\nVisit my solution to understand a different approach to this problem.\\n\\nhttps://leetcode.com/problems/powx-n/solutions/3217521/o1-c-solution-explained-with-images/"
                    },
                    {
                        "username": "psionl0",
                        "content": "I\\'m not convinced that behind the hood, log and exp both have O(1) run times."
                    },
                    {
                        "username": "Nitinkushwaha",
                        "content": "code is passing few test cases but on submitting giving runtime error can anyone help me with code\n\n\nclass Solution {\n    public double myPow(double x, int n)\n     {\n    double a;\n     if(n>=0)\n        {\n        if(n==0)\n            return 1;\n         a=x*myPow(x,n-1);\n        \n         }\n         else\n         {\n             if(n==0)\n               return 1;\n              a=(1/x)*(1/(myPow(x,-(n+1))));\n         }\n        \n        return a;\n    }\n    \n}"
                    },
                    {
                        "username": "titanaro_1410",
                        "content": "I don\\'t know why the tag is binary search, but the tags are now updated to Math and Recursion"
                    },
                    {
                        "username": "shweta_raj",
                        "content": "simple recursion and divide and conquer:\nclass Solution(object):\n    def myPow(self, x, n):\n        \"\"\"\n        :type x: float\n        :type n: int\n        :rtype: float\n        \"\"\"\n if n < 0:\n            n = -n\n            x = 1/x\n        if n==1 or n==0:\n            return x**n\n        if n%2:\n            return self.myPow(x, n/2) * self.myPow(x, n/2) * x\n\n        return self.myPow(x, n/2) * self.myPow(x, n/2)\n"
                    },
                    {
                        "username": "ankush920",
                        "content": "100 % fast and easy recurrsive solution :-\\nclass Solution {\\npublic:\\n\\n  double positive( double x ,int n )\\n  {\\n      if( n==0 )\\n      {\\n          return 1.00000;\\n      }\\n\\n      double temp = positive(x ,n/2);\\n\\nif( n%2!=0)\\n{\\n    return temp *temp *x;\\n     \\n}\\n\\nreturn temp*temp ;\\n      \\n  }\\n\\n\\n\\n    double negative( double x ,int n )\\n  {\\n      if( n==0 )\\n      {\\n          return 1.00000;\\n      }\\n\\n      double temp = negative (x ,n/2);\\n\\nif( n%2!=0)\\n{\\n    return (temp *temp *(1/x));\\n     \\n}\\n\\nreturn (temp*temp) ;\\n\\n  }\\n\\n    double myPow(double x, int n) {\\n        \\n        if(n==0)\\n        {\\n             return 1.00000;\\n        }\\n\\n        if(n>0)\\n        {\\n           return positive(x,n);  \\n        }\\n\\nreturn negative( x,n);\\n        \\n    }\\n};\\nConsole\\n"
                    },
                    {
                        "username": "abumdmiran2001",
                        "content": "Test case 301 is out of constraint ,How can I solve that. "
                    },
                    {
                        "username": "c8763yee",
                        "content": "i was wondering why i keep get TLE when (x, n)=(0.00001, 2147483647)\nhere is my code:\n```python\nclass Solution:\n    def myPow(self, x: float, n: int) -> float:\n        if n < 0:\n            n = -n\n            x = 1/x\n\n        if n == 0 or n == 1:\n            return x**n\n        \n        if n%2:\n            return self.myPow(x, n//2) * self.myPow(x, n//2) * x\n\n        return self.myPow(x, n//2) * self.myPow(x, n//2)\n```\nthanks for any advise"
                    },
                    {
                        "username": "Aman9262",
                        "content": "```\\nclass Solution {\\n    map<int,double> dp;\\n    double util(double x, int n) {\\n        if(n==0){\\n            return dp[n]=1;\\n        }\\n        if(dp.find(n)!=dp.end()) {\\n                return dp[n];\\n        }\\n        if(n<0){\\n          if(n%2)\\n           return dp[n]=(1.0/x)*util(x, n/2)*util(x, n/2);\\n         return dp[n]=util(x, n/2)*util(x, n/2);\\n        }\\n        if(n%2)\\n           return dp[n]=x*util(x, n/2)*util(x, n/2);\\n        return dp[n] = util(x, n/2)*util(x, n/2);\\n    }\\npublic:\\n    double myPow(double x, int n) {\\n        return util(x,n);\\n    }\\n};\\n```"
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "Having weird issue in C++. for the test case where n = -2147483648 and x = 2, for whatever reason when I run the compiler here, I get 1, but when I run it in VSCode, I get the correct output."
                    },
                    {
                        "username": "khrome",
                        "content": "Why is this too slow? Shouldn\\'t the second recursive call immediately get the answer from memo, making the whole thing O(logn)? It works fine if instead of doing 2 recursive calls I just square the first one like in the comment. But Im curious why the 2 recursive calls make it slow.\\n\\n\\n    def myPow(self, x: float, n: int) -> float:\\n        memo = {0:1}\\n        def dp(n):\\n            nonlocal memo\\n            if memo.get(n):\\n                return memo[n]\\n            odd = n % 2\\n            answer = dp(n//2) * dp(n//2)\\n            # answer *= answer\\n            if odd:\\n                answer *= x\\n            memo[n] = answer\\n            return answer\\n        dp(abs(n))\\n        if n < 0:\\n            return 1 / float(memo[abs(n)])\\n        return memo[n]"
                    },
                    {
                        "username": "mickeyvn",
                        "content": "You can do in O(1)"
                    }
                ]
            },
            {
                "id": 1800886,
                "content": [
                    {
                        "username": "bishal_722",
                        "content": "Can you solve it in constant time O(1) ? \\nVisit my solution to understand a different approach to this problem.\\n\\nhttps://leetcode.com/problems/powx-n/solutions/3217521/o1-c-solution-explained-with-images/"
                    },
                    {
                        "username": "psionl0",
                        "content": "I\\'m not convinced that behind the hood, log and exp both have O(1) run times."
                    },
                    {
                        "username": "Nitinkushwaha",
                        "content": "code is passing few test cases but on submitting giving runtime error can anyone help me with code\n\n\nclass Solution {\n    public double myPow(double x, int n)\n     {\n    double a;\n     if(n>=0)\n        {\n        if(n==0)\n            return 1;\n         a=x*myPow(x,n-1);\n        \n         }\n         else\n         {\n             if(n==0)\n               return 1;\n              a=(1/x)*(1/(myPow(x,-(n+1))));\n         }\n        \n        return a;\n    }\n    \n}"
                    },
                    {
                        "username": "titanaro_1410",
                        "content": "I don\\'t know why the tag is binary search, but the tags are now updated to Math and Recursion"
                    },
                    {
                        "username": "shweta_raj",
                        "content": "simple recursion and divide and conquer:\nclass Solution(object):\n    def myPow(self, x, n):\n        \"\"\"\n        :type x: float\n        :type n: int\n        :rtype: float\n        \"\"\"\n if n < 0:\n            n = -n\n            x = 1/x\n        if n==1 or n==0:\n            return x**n\n        if n%2:\n            return self.myPow(x, n/2) * self.myPow(x, n/2) * x\n\n        return self.myPow(x, n/2) * self.myPow(x, n/2)\n"
                    },
                    {
                        "username": "ankush920",
                        "content": "100 % fast and easy recurrsive solution :-\\nclass Solution {\\npublic:\\n\\n  double positive( double x ,int n )\\n  {\\n      if( n==0 )\\n      {\\n          return 1.00000;\\n      }\\n\\n      double temp = positive(x ,n/2);\\n\\nif( n%2!=0)\\n{\\n    return temp *temp *x;\\n     \\n}\\n\\nreturn temp*temp ;\\n      \\n  }\\n\\n\\n\\n    double negative( double x ,int n )\\n  {\\n      if( n==0 )\\n      {\\n          return 1.00000;\\n      }\\n\\n      double temp = negative (x ,n/2);\\n\\nif( n%2!=0)\\n{\\n    return (temp *temp *(1/x));\\n     \\n}\\n\\nreturn (temp*temp) ;\\n\\n  }\\n\\n    double myPow(double x, int n) {\\n        \\n        if(n==0)\\n        {\\n             return 1.00000;\\n        }\\n\\n        if(n>0)\\n        {\\n           return positive(x,n);  \\n        }\\n\\nreturn negative( x,n);\\n        \\n    }\\n};\\nConsole\\n"
                    },
                    {
                        "username": "abumdmiran2001",
                        "content": "Test case 301 is out of constraint ,How can I solve that. "
                    },
                    {
                        "username": "c8763yee",
                        "content": "i was wondering why i keep get TLE when (x, n)=(0.00001, 2147483647)\nhere is my code:\n```python\nclass Solution:\n    def myPow(self, x: float, n: int) -> float:\n        if n < 0:\n            n = -n\n            x = 1/x\n\n        if n == 0 or n == 1:\n            return x**n\n        \n        if n%2:\n            return self.myPow(x, n//2) * self.myPow(x, n//2) * x\n\n        return self.myPow(x, n//2) * self.myPow(x, n//2)\n```\nthanks for any advise"
                    },
                    {
                        "username": "Aman9262",
                        "content": "```\\nclass Solution {\\n    map<int,double> dp;\\n    double util(double x, int n) {\\n        if(n==0){\\n            return dp[n]=1;\\n        }\\n        if(dp.find(n)!=dp.end()) {\\n                return dp[n];\\n        }\\n        if(n<0){\\n          if(n%2)\\n           return dp[n]=(1.0/x)*util(x, n/2)*util(x, n/2);\\n         return dp[n]=util(x, n/2)*util(x, n/2);\\n        }\\n        if(n%2)\\n           return dp[n]=x*util(x, n/2)*util(x, n/2);\\n        return dp[n] = util(x, n/2)*util(x, n/2);\\n    }\\npublic:\\n    double myPow(double x, int n) {\\n        return util(x,n);\\n    }\\n};\\n```"
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "Having weird issue in C++. for the test case where n = -2147483648 and x = 2, for whatever reason when I run the compiler here, I get 1, but when I run it in VSCode, I get the correct output."
                    },
                    {
                        "username": "khrome",
                        "content": "Why is this too slow? Shouldn\\'t the second recursive call immediately get the answer from memo, making the whole thing O(logn)? It works fine if instead of doing 2 recursive calls I just square the first one like in the comment. But Im curious why the 2 recursive calls make it slow.\\n\\n\\n    def myPow(self, x: float, n: int) -> float:\\n        memo = {0:1}\\n        def dp(n):\\n            nonlocal memo\\n            if memo.get(n):\\n                return memo[n]\\n            odd = n % 2\\n            answer = dp(n//2) * dp(n//2)\\n            # answer *= answer\\n            if odd:\\n                answer *= x\\n            memo[n] = answer\\n            return answer\\n        dp(abs(n))\\n        if n < 0:\\n            return 1 / float(memo[abs(n)])\\n        return memo[n]"
                    },
                    {
                        "username": "mickeyvn",
                        "content": "You can do in O(1)"
                    }
                ]
            },
            {
                "id": 1795060,
                "content": [
                    {
                        "username": "bishal_722",
                        "content": "Can you solve it in constant time O(1) ? \\nVisit my solution to understand a different approach to this problem.\\n\\nhttps://leetcode.com/problems/powx-n/solutions/3217521/o1-c-solution-explained-with-images/"
                    },
                    {
                        "username": "psionl0",
                        "content": "I\\'m not convinced that behind the hood, log and exp both have O(1) run times."
                    },
                    {
                        "username": "Nitinkushwaha",
                        "content": "code is passing few test cases but on submitting giving runtime error can anyone help me with code\n\n\nclass Solution {\n    public double myPow(double x, int n)\n     {\n    double a;\n     if(n>=0)\n        {\n        if(n==0)\n            return 1;\n         a=x*myPow(x,n-1);\n        \n         }\n         else\n         {\n             if(n==0)\n               return 1;\n              a=(1/x)*(1/(myPow(x,-(n+1))));\n         }\n        \n        return a;\n    }\n    \n}"
                    },
                    {
                        "username": "titanaro_1410",
                        "content": "I don\\'t know why the tag is binary search, but the tags are now updated to Math and Recursion"
                    },
                    {
                        "username": "shweta_raj",
                        "content": "simple recursion and divide and conquer:\nclass Solution(object):\n    def myPow(self, x, n):\n        \"\"\"\n        :type x: float\n        :type n: int\n        :rtype: float\n        \"\"\"\n if n < 0:\n            n = -n\n            x = 1/x\n        if n==1 or n==0:\n            return x**n\n        if n%2:\n            return self.myPow(x, n/2) * self.myPow(x, n/2) * x\n\n        return self.myPow(x, n/2) * self.myPow(x, n/2)\n"
                    },
                    {
                        "username": "ankush920",
                        "content": "100 % fast and easy recurrsive solution :-\\nclass Solution {\\npublic:\\n\\n  double positive( double x ,int n )\\n  {\\n      if( n==0 )\\n      {\\n          return 1.00000;\\n      }\\n\\n      double temp = positive(x ,n/2);\\n\\nif( n%2!=0)\\n{\\n    return temp *temp *x;\\n     \\n}\\n\\nreturn temp*temp ;\\n      \\n  }\\n\\n\\n\\n    double negative( double x ,int n )\\n  {\\n      if( n==0 )\\n      {\\n          return 1.00000;\\n      }\\n\\n      double temp = negative (x ,n/2);\\n\\nif( n%2!=0)\\n{\\n    return (temp *temp *(1/x));\\n     \\n}\\n\\nreturn (temp*temp) ;\\n\\n  }\\n\\n    double myPow(double x, int n) {\\n        \\n        if(n==0)\\n        {\\n             return 1.00000;\\n        }\\n\\n        if(n>0)\\n        {\\n           return positive(x,n);  \\n        }\\n\\nreturn negative( x,n);\\n        \\n    }\\n};\\nConsole\\n"
                    },
                    {
                        "username": "abumdmiran2001",
                        "content": "Test case 301 is out of constraint ,How can I solve that. "
                    },
                    {
                        "username": "c8763yee",
                        "content": "i was wondering why i keep get TLE when (x, n)=(0.00001, 2147483647)\nhere is my code:\n```python\nclass Solution:\n    def myPow(self, x: float, n: int) -> float:\n        if n < 0:\n            n = -n\n            x = 1/x\n\n        if n == 0 or n == 1:\n            return x**n\n        \n        if n%2:\n            return self.myPow(x, n//2) * self.myPow(x, n//2) * x\n\n        return self.myPow(x, n//2) * self.myPow(x, n//2)\n```\nthanks for any advise"
                    },
                    {
                        "username": "Aman9262",
                        "content": "```\\nclass Solution {\\n    map<int,double> dp;\\n    double util(double x, int n) {\\n        if(n==0){\\n            return dp[n]=1;\\n        }\\n        if(dp.find(n)!=dp.end()) {\\n                return dp[n];\\n        }\\n        if(n<0){\\n          if(n%2)\\n           return dp[n]=(1.0/x)*util(x, n/2)*util(x, n/2);\\n         return dp[n]=util(x, n/2)*util(x, n/2);\\n        }\\n        if(n%2)\\n           return dp[n]=x*util(x, n/2)*util(x, n/2);\\n        return dp[n] = util(x, n/2)*util(x, n/2);\\n    }\\npublic:\\n    double myPow(double x, int n) {\\n        return util(x,n);\\n    }\\n};\\n```"
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "Having weird issue in C++. for the test case where n = -2147483648 and x = 2, for whatever reason when I run the compiler here, I get 1, but when I run it in VSCode, I get the correct output."
                    },
                    {
                        "username": "khrome",
                        "content": "Why is this too slow? Shouldn\\'t the second recursive call immediately get the answer from memo, making the whole thing O(logn)? It works fine if instead of doing 2 recursive calls I just square the first one like in the comment. But Im curious why the 2 recursive calls make it slow.\\n\\n\\n    def myPow(self, x: float, n: int) -> float:\\n        memo = {0:1}\\n        def dp(n):\\n            nonlocal memo\\n            if memo.get(n):\\n                return memo[n]\\n            odd = n % 2\\n            answer = dp(n//2) * dp(n//2)\\n            # answer *= answer\\n            if odd:\\n                answer *= x\\n            memo[n] = answer\\n            return answer\\n        dp(abs(n))\\n        if n < 0:\\n            return 1 / float(memo[abs(n)])\\n        return memo[n]"
                    },
                    {
                        "username": "mickeyvn",
                        "content": "You can do in O(1)"
                    }
                ]
            },
            {
                "id": 1792055,
                "content": [
                    {
                        "username": "bishal_722",
                        "content": "Can you solve it in constant time O(1) ? \\nVisit my solution to understand a different approach to this problem.\\n\\nhttps://leetcode.com/problems/powx-n/solutions/3217521/o1-c-solution-explained-with-images/"
                    },
                    {
                        "username": "psionl0",
                        "content": "I\\'m not convinced that behind the hood, log and exp both have O(1) run times."
                    },
                    {
                        "username": "Nitinkushwaha",
                        "content": "code is passing few test cases but on submitting giving runtime error can anyone help me with code\n\n\nclass Solution {\n    public double myPow(double x, int n)\n     {\n    double a;\n     if(n>=0)\n        {\n        if(n==0)\n            return 1;\n         a=x*myPow(x,n-1);\n        \n         }\n         else\n         {\n             if(n==0)\n               return 1;\n              a=(1/x)*(1/(myPow(x,-(n+1))));\n         }\n        \n        return a;\n    }\n    \n}"
                    },
                    {
                        "username": "titanaro_1410",
                        "content": "I don\\'t know why the tag is binary search, but the tags are now updated to Math and Recursion"
                    },
                    {
                        "username": "shweta_raj",
                        "content": "simple recursion and divide and conquer:\nclass Solution(object):\n    def myPow(self, x, n):\n        \"\"\"\n        :type x: float\n        :type n: int\n        :rtype: float\n        \"\"\"\n if n < 0:\n            n = -n\n            x = 1/x\n        if n==1 or n==0:\n            return x**n\n        if n%2:\n            return self.myPow(x, n/2) * self.myPow(x, n/2) * x\n\n        return self.myPow(x, n/2) * self.myPow(x, n/2)\n"
                    },
                    {
                        "username": "ankush920",
                        "content": "100 % fast and easy recurrsive solution :-\\nclass Solution {\\npublic:\\n\\n  double positive( double x ,int n )\\n  {\\n      if( n==0 )\\n      {\\n          return 1.00000;\\n      }\\n\\n      double temp = positive(x ,n/2);\\n\\nif( n%2!=0)\\n{\\n    return temp *temp *x;\\n     \\n}\\n\\nreturn temp*temp ;\\n      \\n  }\\n\\n\\n\\n    double negative( double x ,int n )\\n  {\\n      if( n==0 )\\n      {\\n          return 1.00000;\\n      }\\n\\n      double temp = negative (x ,n/2);\\n\\nif( n%2!=0)\\n{\\n    return (temp *temp *(1/x));\\n     \\n}\\n\\nreturn (temp*temp) ;\\n\\n  }\\n\\n    double myPow(double x, int n) {\\n        \\n        if(n==0)\\n        {\\n             return 1.00000;\\n        }\\n\\n        if(n>0)\\n        {\\n           return positive(x,n);  \\n        }\\n\\nreturn negative( x,n);\\n        \\n    }\\n};\\nConsole\\n"
                    },
                    {
                        "username": "abumdmiran2001",
                        "content": "Test case 301 is out of constraint ,How can I solve that. "
                    },
                    {
                        "username": "c8763yee",
                        "content": "i was wondering why i keep get TLE when (x, n)=(0.00001, 2147483647)\nhere is my code:\n```python\nclass Solution:\n    def myPow(self, x: float, n: int) -> float:\n        if n < 0:\n            n = -n\n            x = 1/x\n\n        if n == 0 or n == 1:\n            return x**n\n        \n        if n%2:\n            return self.myPow(x, n//2) * self.myPow(x, n//2) * x\n\n        return self.myPow(x, n//2) * self.myPow(x, n//2)\n```\nthanks for any advise"
                    },
                    {
                        "username": "Aman9262",
                        "content": "```\\nclass Solution {\\n    map<int,double> dp;\\n    double util(double x, int n) {\\n        if(n==0){\\n            return dp[n]=1;\\n        }\\n        if(dp.find(n)!=dp.end()) {\\n                return dp[n];\\n        }\\n        if(n<0){\\n          if(n%2)\\n           return dp[n]=(1.0/x)*util(x, n/2)*util(x, n/2);\\n         return dp[n]=util(x, n/2)*util(x, n/2);\\n        }\\n        if(n%2)\\n           return dp[n]=x*util(x, n/2)*util(x, n/2);\\n        return dp[n] = util(x, n/2)*util(x, n/2);\\n    }\\npublic:\\n    double myPow(double x, int n) {\\n        return util(x,n);\\n    }\\n};\\n```"
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "Having weird issue in C++. for the test case where n = -2147483648 and x = 2, for whatever reason when I run the compiler here, I get 1, but when I run it in VSCode, I get the correct output."
                    },
                    {
                        "username": "khrome",
                        "content": "Why is this too slow? Shouldn\\'t the second recursive call immediately get the answer from memo, making the whole thing O(logn)? It works fine if instead of doing 2 recursive calls I just square the first one like in the comment. But Im curious why the 2 recursive calls make it slow.\\n\\n\\n    def myPow(self, x: float, n: int) -> float:\\n        memo = {0:1}\\n        def dp(n):\\n            nonlocal memo\\n            if memo.get(n):\\n                return memo[n]\\n            odd = n % 2\\n            answer = dp(n//2) * dp(n//2)\\n            # answer *= answer\\n            if odd:\\n                answer *= x\\n            memo[n] = answer\\n            return answer\\n        dp(abs(n))\\n        if n < 0:\\n            return 1 / float(memo[abs(n)])\\n        return memo[n]"
                    },
                    {
                        "username": "mickeyvn",
                        "content": "You can do in O(1)"
                    }
                ]
            },
            {
                "id": 1783926,
                "content": [
                    {
                        "username": "bishal_722",
                        "content": "Can you solve it in constant time O(1) ? \\nVisit my solution to understand a different approach to this problem.\\n\\nhttps://leetcode.com/problems/powx-n/solutions/3217521/o1-c-solution-explained-with-images/"
                    },
                    {
                        "username": "psionl0",
                        "content": "I\\'m not convinced that behind the hood, log and exp both have O(1) run times."
                    },
                    {
                        "username": "Nitinkushwaha",
                        "content": "code is passing few test cases but on submitting giving runtime error can anyone help me with code\n\n\nclass Solution {\n    public double myPow(double x, int n)\n     {\n    double a;\n     if(n>=0)\n        {\n        if(n==0)\n            return 1;\n         a=x*myPow(x,n-1);\n        \n         }\n         else\n         {\n             if(n==0)\n               return 1;\n              a=(1/x)*(1/(myPow(x,-(n+1))));\n         }\n        \n        return a;\n    }\n    \n}"
                    },
                    {
                        "username": "titanaro_1410",
                        "content": "I don\\'t know why the tag is binary search, but the tags are now updated to Math and Recursion"
                    },
                    {
                        "username": "shweta_raj",
                        "content": "simple recursion and divide and conquer:\nclass Solution(object):\n    def myPow(self, x, n):\n        \"\"\"\n        :type x: float\n        :type n: int\n        :rtype: float\n        \"\"\"\n if n < 0:\n            n = -n\n            x = 1/x\n        if n==1 or n==0:\n            return x**n\n        if n%2:\n            return self.myPow(x, n/2) * self.myPow(x, n/2) * x\n\n        return self.myPow(x, n/2) * self.myPow(x, n/2)\n"
                    },
                    {
                        "username": "ankush920",
                        "content": "100 % fast and easy recurrsive solution :-\\nclass Solution {\\npublic:\\n\\n  double positive( double x ,int n )\\n  {\\n      if( n==0 )\\n      {\\n          return 1.00000;\\n      }\\n\\n      double temp = positive(x ,n/2);\\n\\nif( n%2!=0)\\n{\\n    return temp *temp *x;\\n     \\n}\\n\\nreturn temp*temp ;\\n      \\n  }\\n\\n\\n\\n    double negative( double x ,int n )\\n  {\\n      if( n==0 )\\n      {\\n          return 1.00000;\\n      }\\n\\n      double temp = negative (x ,n/2);\\n\\nif( n%2!=0)\\n{\\n    return (temp *temp *(1/x));\\n     \\n}\\n\\nreturn (temp*temp) ;\\n\\n  }\\n\\n    double myPow(double x, int n) {\\n        \\n        if(n==0)\\n        {\\n             return 1.00000;\\n        }\\n\\n        if(n>0)\\n        {\\n           return positive(x,n);  \\n        }\\n\\nreturn negative( x,n);\\n        \\n    }\\n};\\nConsole\\n"
                    },
                    {
                        "username": "abumdmiran2001",
                        "content": "Test case 301 is out of constraint ,How can I solve that. "
                    },
                    {
                        "username": "c8763yee",
                        "content": "i was wondering why i keep get TLE when (x, n)=(0.00001, 2147483647)\nhere is my code:\n```python\nclass Solution:\n    def myPow(self, x: float, n: int) -> float:\n        if n < 0:\n            n = -n\n            x = 1/x\n\n        if n == 0 or n == 1:\n            return x**n\n        \n        if n%2:\n            return self.myPow(x, n//2) * self.myPow(x, n//2) * x\n\n        return self.myPow(x, n//2) * self.myPow(x, n//2)\n```\nthanks for any advise"
                    },
                    {
                        "username": "Aman9262",
                        "content": "```\\nclass Solution {\\n    map<int,double> dp;\\n    double util(double x, int n) {\\n        if(n==0){\\n            return dp[n]=1;\\n        }\\n        if(dp.find(n)!=dp.end()) {\\n                return dp[n];\\n        }\\n        if(n<0){\\n          if(n%2)\\n           return dp[n]=(1.0/x)*util(x, n/2)*util(x, n/2);\\n         return dp[n]=util(x, n/2)*util(x, n/2);\\n        }\\n        if(n%2)\\n           return dp[n]=x*util(x, n/2)*util(x, n/2);\\n        return dp[n] = util(x, n/2)*util(x, n/2);\\n    }\\npublic:\\n    double myPow(double x, int n) {\\n        return util(x,n);\\n    }\\n};\\n```"
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "Having weird issue in C++. for the test case where n = -2147483648 and x = 2, for whatever reason when I run the compiler here, I get 1, but when I run it in VSCode, I get the correct output."
                    },
                    {
                        "username": "khrome",
                        "content": "Why is this too slow? Shouldn\\'t the second recursive call immediately get the answer from memo, making the whole thing O(logn)? It works fine if instead of doing 2 recursive calls I just square the first one like in the comment. But Im curious why the 2 recursive calls make it slow.\\n\\n\\n    def myPow(self, x: float, n: int) -> float:\\n        memo = {0:1}\\n        def dp(n):\\n            nonlocal memo\\n            if memo.get(n):\\n                return memo[n]\\n            odd = n % 2\\n            answer = dp(n//2) * dp(n//2)\\n            # answer *= answer\\n            if odd:\\n                answer *= x\\n            memo[n] = answer\\n            return answer\\n        dp(abs(n))\\n        if n < 0:\\n            return 1 / float(memo[abs(n)])\\n        return memo[n]"
                    },
                    {
                        "username": "mickeyvn",
                        "content": "You can do in O(1)"
                    }
                ]
            },
            {
                "id": 1782336,
                "content": [
                    {
                        "username": "bishal_722",
                        "content": "Can you solve it in constant time O(1) ? \\nVisit my solution to understand a different approach to this problem.\\n\\nhttps://leetcode.com/problems/powx-n/solutions/3217521/o1-c-solution-explained-with-images/"
                    },
                    {
                        "username": "psionl0",
                        "content": "I\\'m not convinced that behind the hood, log and exp both have O(1) run times."
                    },
                    {
                        "username": "Nitinkushwaha",
                        "content": "code is passing few test cases but on submitting giving runtime error can anyone help me with code\n\n\nclass Solution {\n    public double myPow(double x, int n)\n     {\n    double a;\n     if(n>=0)\n        {\n        if(n==0)\n            return 1;\n         a=x*myPow(x,n-1);\n        \n         }\n         else\n         {\n             if(n==0)\n               return 1;\n              a=(1/x)*(1/(myPow(x,-(n+1))));\n         }\n        \n        return a;\n    }\n    \n}"
                    },
                    {
                        "username": "titanaro_1410",
                        "content": "I don\\'t know why the tag is binary search, but the tags are now updated to Math and Recursion"
                    },
                    {
                        "username": "shweta_raj",
                        "content": "simple recursion and divide and conquer:\nclass Solution(object):\n    def myPow(self, x, n):\n        \"\"\"\n        :type x: float\n        :type n: int\n        :rtype: float\n        \"\"\"\n if n < 0:\n            n = -n\n            x = 1/x\n        if n==1 or n==0:\n            return x**n\n        if n%2:\n            return self.myPow(x, n/2) * self.myPow(x, n/2) * x\n\n        return self.myPow(x, n/2) * self.myPow(x, n/2)\n"
                    },
                    {
                        "username": "ankush920",
                        "content": "100 % fast and easy recurrsive solution :-\\nclass Solution {\\npublic:\\n\\n  double positive( double x ,int n )\\n  {\\n      if( n==0 )\\n      {\\n          return 1.00000;\\n      }\\n\\n      double temp = positive(x ,n/2);\\n\\nif( n%2!=0)\\n{\\n    return temp *temp *x;\\n     \\n}\\n\\nreturn temp*temp ;\\n      \\n  }\\n\\n\\n\\n    double negative( double x ,int n )\\n  {\\n      if( n==0 )\\n      {\\n          return 1.00000;\\n      }\\n\\n      double temp = negative (x ,n/2);\\n\\nif( n%2!=0)\\n{\\n    return (temp *temp *(1/x));\\n     \\n}\\n\\nreturn (temp*temp) ;\\n\\n  }\\n\\n    double myPow(double x, int n) {\\n        \\n        if(n==0)\\n        {\\n             return 1.00000;\\n        }\\n\\n        if(n>0)\\n        {\\n           return positive(x,n);  \\n        }\\n\\nreturn negative( x,n);\\n        \\n    }\\n};\\nConsole\\n"
                    },
                    {
                        "username": "abumdmiran2001",
                        "content": "Test case 301 is out of constraint ,How can I solve that. "
                    },
                    {
                        "username": "c8763yee",
                        "content": "i was wondering why i keep get TLE when (x, n)=(0.00001, 2147483647)\nhere is my code:\n```python\nclass Solution:\n    def myPow(self, x: float, n: int) -> float:\n        if n < 0:\n            n = -n\n            x = 1/x\n\n        if n == 0 or n == 1:\n            return x**n\n        \n        if n%2:\n            return self.myPow(x, n//2) * self.myPow(x, n//2) * x\n\n        return self.myPow(x, n//2) * self.myPow(x, n//2)\n```\nthanks for any advise"
                    },
                    {
                        "username": "Aman9262",
                        "content": "```\\nclass Solution {\\n    map<int,double> dp;\\n    double util(double x, int n) {\\n        if(n==0){\\n            return dp[n]=1;\\n        }\\n        if(dp.find(n)!=dp.end()) {\\n                return dp[n];\\n        }\\n        if(n<0){\\n          if(n%2)\\n           return dp[n]=(1.0/x)*util(x, n/2)*util(x, n/2);\\n         return dp[n]=util(x, n/2)*util(x, n/2);\\n        }\\n        if(n%2)\\n           return dp[n]=x*util(x, n/2)*util(x, n/2);\\n        return dp[n] = util(x, n/2)*util(x, n/2);\\n    }\\npublic:\\n    double myPow(double x, int n) {\\n        return util(x,n);\\n    }\\n};\\n```"
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "Having weird issue in C++. for the test case where n = -2147483648 and x = 2, for whatever reason when I run the compiler here, I get 1, but when I run it in VSCode, I get the correct output."
                    },
                    {
                        "username": "khrome",
                        "content": "Why is this too slow? Shouldn\\'t the second recursive call immediately get the answer from memo, making the whole thing O(logn)? It works fine if instead of doing 2 recursive calls I just square the first one like in the comment. But Im curious why the 2 recursive calls make it slow.\\n\\n\\n    def myPow(self, x: float, n: int) -> float:\\n        memo = {0:1}\\n        def dp(n):\\n            nonlocal memo\\n            if memo.get(n):\\n                return memo[n]\\n            odd = n % 2\\n            answer = dp(n//2) * dp(n//2)\\n            # answer *= answer\\n            if odd:\\n                answer *= x\\n            memo[n] = answer\\n            return answer\\n        dp(abs(n))\\n        if n < 0:\\n            return 1 / float(memo[abs(n)])\\n        return memo[n]"
                    },
                    {
                        "username": "mickeyvn",
                        "content": "You can do in O(1)"
                    }
                ]
            },
            {
                "id": 1780655,
                "content": [
                    {
                        "username": "vanshikasharma4102",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n    if(n==0)\\n        return 1;\\n    if(n==1)\\n        return 1;\\n    double ans = pow(x, n/2);\\n    ans = (ans*ans);\\n    if(n%2!=0)\\n        ans = (ans*x);\\n    return ans;\\n    }\\n};\\nMy code fails for x = 34.00515,n=-3. Could someone please help me out\\n\\n"
                    },
                    {
                        "username": "prathmesh_24",
                        "content": "Somebody tell me why its wrong answer for following testcase even if the logic and code is correct.\\nx = 2.00000\\nn = -2147483648\\n\\nOutput\\n1.00000\\n\\nExpected\\n0.00000\\n\\n `class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double ans = 1.0;\\n        typedef long double ld;\\n        int nn = n;\\n\\n        if(n < 0){\\n            nn = abs(nn);\\n        }\\n\\n        while(nn > 0){\\n            if(nn%2 == 0){\\n                x = (ld)x*x;\\n                nn /= 2;\\n            }\\n            else{\\n                ans = (ld)ans*x;\\n                nn = nn-1;\\n            }\\n        }   \\n\\n        if(n < 0){\\n            ans = (ld)1/ans;\\n        }\\n\\n        return ans;     \\n    }\\n};`"
                    },
                    {
                        "username": "ammu678",
                        "content": "I am guessing your code is in c++, so I am not sure of int data type size but it is 2 or 4 bytes in c++ , its most probably because of overflow error, the n value in the given testcase is the minimum limit of int size 4 bytes when you convert to positive ,the max positive value is 2147483647 , so because of overflow its getting reset"
                    },
                    {
                        "username": "vaibhav_0911",
                        "content": "if (n==Integer.MAX_VALUE)\\nreturn x;\\nelse if(n==Integer.MIN_VALUE)\\nreturn (x==1 || x==-1) ? 1:0;"
                    },
                    {
                        "username": "saahilhameed",
                        "content": "This question has so many corner cases, no wonder it has more downvotes than upvotes"
                    },
                    {
                        "username": "kiam_uditya",
                        "content": "solving with bit manipulation takes logn time but even then it gives TLE\\nwhere I am wrong pls figure out.\\n\\n\\n `your inline code...your inline code...`\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n     double ans=1;\\n    while(n)\\n    {\\n        if(n&1)\\n        {\\n            ans=ans*x;\\n\\n        }\\n        x=x*x;\\n        n>>=1;\\n    }\\n\\n    return ans;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "RushikaK",
                        "content": "` class Solution {\\n    public double myPow(double x, int n) {\\n        int val = Math.abs(n);\\n        double result = getvalue(x, val);\\n        return n < 0 ? 1/result: result;\\n    }\\n\\n    private double getvalue(double x, int n) {\\n        if( n == 0)\\n            return 1;\\n        double val = getvalue(x, n/2);\\n        if( n %2 == 0) {\\n            return (val * val);\\n        } else {\\n            return (x * val * val);\\n        }\\n    }\\n}`\\n"
                    },
                    {
                        "username": "niteshtiwari17",
                        "content": "Out of 305 this 301th code gives wrong answer  please any one can give hint\n\n2.00000\n-2147483648"
                    },
                    {
                        "username": "shivangi_02",
                        "content": "This is below the condition given -2^31-1 <=n"
                    },
                    {
                        "username": "niteshtiwari17",
                        "content": "how to handle Time Limit Exceeded as a beginner?\nI followed this approach : \nstep 1 : n  isNegative if yes the take absolute value of n \nstep 2 : simply calculating x raised to power using for loop.\nstep 3 : if(n == 0 ) return 1 ;\nstep 4  if n is negative then return 1/res else return res\n\nHow to overcome Time Limit exceeded? \n"
                    },
                    {
                        "username": "ruf99",
                        "content": "Shouldn\\'t we prefer the iterative version here? Must we absolutely insert recursion into a problem that doesn\\'t need it?? This is a simple one line answer, why complicate it unnecessarily? smh"
                    },
                    {
                        "username": "nothingjustacoder",
                        "content": "double result=1;\\n       if(n>0){\\n       for(int i=0;i<n;i++){\\n           result*=x;\\n           }\\n           \\n       }\\n       if(n<0){\\n           n=n*-1;\\n            for(int i=0;i<n;i++){\\n           result*=x;\\n            }\\n            result=1/result;\\n           \\n       }\\n             return result;\\n299/305 litterally got stucked\\nReason for Error=TIme Limit Exceeded"
                    }
                ]
            },
            {
                "id": 1779207,
                "content": [
                    {
                        "username": "vanshikasharma4102",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n    if(n==0)\\n        return 1;\\n    if(n==1)\\n        return 1;\\n    double ans = pow(x, n/2);\\n    ans = (ans*ans);\\n    if(n%2!=0)\\n        ans = (ans*x);\\n    return ans;\\n    }\\n};\\nMy code fails for x = 34.00515,n=-3. Could someone please help me out\\n\\n"
                    },
                    {
                        "username": "prathmesh_24",
                        "content": "Somebody tell me why its wrong answer for following testcase even if the logic and code is correct.\\nx = 2.00000\\nn = -2147483648\\n\\nOutput\\n1.00000\\n\\nExpected\\n0.00000\\n\\n `class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double ans = 1.0;\\n        typedef long double ld;\\n        int nn = n;\\n\\n        if(n < 0){\\n            nn = abs(nn);\\n        }\\n\\n        while(nn > 0){\\n            if(nn%2 == 0){\\n                x = (ld)x*x;\\n                nn /= 2;\\n            }\\n            else{\\n                ans = (ld)ans*x;\\n                nn = nn-1;\\n            }\\n        }   \\n\\n        if(n < 0){\\n            ans = (ld)1/ans;\\n        }\\n\\n        return ans;     \\n    }\\n};`"
                    },
                    {
                        "username": "ammu678",
                        "content": "I am guessing your code is in c++, so I am not sure of int data type size but it is 2 or 4 bytes in c++ , its most probably because of overflow error, the n value in the given testcase is the minimum limit of int size 4 bytes when you convert to positive ,the max positive value is 2147483647 , so because of overflow its getting reset"
                    },
                    {
                        "username": "vaibhav_0911",
                        "content": "if (n==Integer.MAX_VALUE)\\nreturn x;\\nelse if(n==Integer.MIN_VALUE)\\nreturn (x==1 || x==-1) ? 1:0;"
                    },
                    {
                        "username": "saahilhameed",
                        "content": "This question has so many corner cases, no wonder it has more downvotes than upvotes"
                    },
                    {
                        "username": "kiam_uditya",
                        "content": "solving with bit manipulation takes logn time but even then it gives TLE\\nwhere I am wrong pls figure out.\\n\\n\\n `your inline code...your inline code...`\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n     double ans=1;\\n    while(n)\\n    {\\n        if(n&1)\\n        {\\n            ans=ans*x;\\n\\n        }\\n        x=x*x;\\n        n>>=1;\\n    }\\n\\n    return ans;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "RushikaK",
                        "content": "` class Solution {\\n    public double myPow(double x, int n) {\\n        int val = Math.abs(n);\\n        double result = getvalue(x, val);\\n        return n < 0 ? 1/result: result;\\n    }\\n\\n    private double getvalue(double x, int n) {\\n        if( n == 0)\\n            return 1;\\n        double val = getvalue(x, n/2);\\n        if( n %2 == 0) {\\n            return (val * val);\\n        } else {\\n            return (x * val * val);\\n        }\\n    }\\n}`\\n"
                    },
                    {
                        "username": "niteshtiwari17",
                        "content": "Out of 305 this 301th code gives wrong answer  please any one can give hint\n\n2.00000\n-2147483648"
                    },
                    {
                        "username": "shivangi_02",
                        "content": "This is below the condition given -2^31-1 <=n"
                    },
                    {
                        "username": "niteshtiwari17",
                        "content": "how to handle Time Limit Exceeded as a beginner?\nI followed this approach : \nstep 1 : n  isNegative if yes the take absolute value of n \nstep 2 : simply calculating x raised to power using for loop.\nstep 3 : if(n == 0 ) return 1 ;\nstep 4  if n is negative then return 1/res else return res\n\nHow to overcome Time Limit exceeded? \n"
                    },
                    {
                        "username": "ruf99",
                        "content": "Shouldn\\'t we prefer the iterative version here? Must we absolutely insert recursion into a problem that doesn\\'t need it?? This is a simple one line answer, why complicate it unnecessarily? smh"
                    },
                    {
                        "username": "nothingjustacoder",
                        "content": "double result=1;\\n       if(n>0){\\n       for(int i=0;i<n;i++){\\n           result*=x;\\n           }\\n           \\n       }\\n       if(n<0){\\n           n=n*-1;\\n            for(int i=0;i<n;i++){\\n           result*=x;\\n            }\\n            result=1/result;\\n           \\n       }\\n             return result;\\n299/305 litterally got stucked\\nReason for Error=TIme Limit Exceeded"
                    }
                ]
            },
            {
                "id": 1777072,
                "content": [
                    {
                        "username": "vanshikasharma4102",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n    if(n==0)\\n        return 1;\\n    if(n==1)\\n        return 1;\\n    double ans = pow(x, n/2);\\n    ans = (ans*ans);\\n    if(n%2!=0)\\n        ans = (ans*x);\\n    return ans;\\n    }\\n};\\nMy code fails for x = 34.00515,n=-3. Could someone please help me out\\n\\n"
                    },
                    {
                        "username": "prathmesh_24",
                        "content": "Somebody tell me why its wrong answer for following testcase even if the logic and code is correct.\\nx = 2.00000\\nn = -2147483648\\n\\nOutput\\n1.00000\\n\\nExpected\\n0.00000\\n\\n `class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double ans = 1.0;\\n        typedef long double ld;\\n        int nn = n;\\n\\n        if(n < 0){\\n            nn = abs(nn);\\n        }\\n\\n        while(nn > 0){\\n            if(nn%2 == 0){\\n                x = (ld)x*x;\\n                nn /= 2;\\n            }\\n            else{\\n                ans = (ld)ans*x;\\n                nn = nn-1;\\n            }\\n        }   \\n\\n        if(n < 0){\\n            ans = (ld)1/ans;\\n        }\\n\\n        return ans;     \\n    }\\n};`"
                    },
                    {
                        "username": "ammu678",
                        "content": "I am guessing your code is in c++, so I am not sure of int data type size but it is 2 or 4 bytes in c++ , its most probably because of overflow error, the n value in the given testcase is the minimum limit of int size 4 bytes when you convert to positive ,the max positive value is 2147483647 , so because of overflow its getting reset"
                    },
                    {
                        "username": "vaibhav_0911",
                        "content": "if (n==Integer.MAX_VALUE)\\nreturn x;\\nelse if(n==Integer.MIN_VALUE)\\nreturn (x==1 || x==-1) ? 1:0;"
                    },
                    {
                        "username": "saahilhameed",
                        "content": "This question has so many corner cases, no wonder it has more downvotes than upvotes"
                    },
                    {
                        "username": "kiam_uditya",
                        "content": "solving with bit manipulation takes logn time but even then it gives TLE\\nwhere I am wrong pls figure out.\\n\\n\\n `your inline code...your inline code...`\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n     double ans=1;\\n    while(n)\\n    {\\n        if(n&1)\\n        {\\n            ans=ans*x;\\n\\n        }\\n        x=x*x;\\n        n>>=1;\\n    }\\n\\n    return ans;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "RushikaK",
                        "content": "` class Solution {\\n    public double myPow(double x, int n) {\\n        int val = Math.abs(n);\\n        double result = getvalue(x, val);\\n        return n < 0 ? 1/result: result;\\n    }\\n\\n    private double getvalue(double x, int n) {\\n        if( n == 0)\\n            return 1;\\n        double val = getvalue(x, n/2);\\n        if( n %2 == 0) {\\n            return (val * val);\\n        } else {\\n            return (x * val * val);\\n        }\\n    }\\n}`\\n"
                    },
                    {
                        "username": "niteshtiwari17",
                        "content": "Out of 305 this 301th code gives wrong answer  please any one can give hint\n\n2.00000\n-2147483648"
                    },
                    {
                        "username": "shivangi_02",
                        "content": "This is below the condition given -2^31-1 <=n"
                    },
                    {
                        "username": "niteshtiwari17",
                        "content": "how to handle Time Limit Exceeded as a beginner?\nI followed this approach : \nstep 1 : n  isNegative if yes the take absolute value of n \nstep 2 : simply calculating x raised to power using for loop.\nstep 3 : if(n == 0 ) return 1 ;\nstep 4  if n is negative then return 1/res else return res\n\nHow to overcome Time Limit exceeded? \n"
                    },
                    {
                        "username": "ruf99",
                        "content": "Shouldn\\'t we prefer the iterative version here? Must we absolutely insert recursion into a problem that doesn\\'t need it?? This is a simple one line answer, why complicate it unnecessarily? smh"
                    },
                    {
                        "username": "nothingjustacoder",
                        "content": "double result=1;\\n       if(n>0){\\n       for(int i=0;i<n;i++){\\n           result*=x;\\n           }\\n           \\n       }\\n       if(n<0){\\n           n=n*-1;\\n            for(int i=0;i<n;i++){\\n           result*=x;\\n            }\\n            result=1/result;\\n           \\n       }\\n             return result;\\n299/305 litterally got stucked\\nReason for Error=TIme Limit Exceeded"
                    }
                ]
            },
            {
                "id": 1767726,
                "content": [
                    {
                        "username": "vanshikasharma4102",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n    if(n==0)\\n        return 1;\\n    if(n==1)\\n        return 1;\\n    double ans = pow(x, n/2);\\n    ans = (ans*ans);\\n    if(n%2!=0)\\n        ans = (ans*x);\\n    return ans;\\n    }\\n};\\nMy code fails for x = 34.00515,n=-3. Could someone please help me out\\n\\n"
                    },
                    {
                        "username": "prathmesh_24",
                        "content": "Somebody tell me why its wrong answer for following testcase even if the logic and code is correct.\\nx = 2.00000\\nn = -2147483648\\n\\nOutput\\n1.00000\\n\\nExpected\\n0.00000\\n\\n `class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double ans = 1.0;\\n        typedef long double ld;\\n        int nn = n;\\n\\n        if(n < 0){\\n            nn = abs(nn);\\n        }\\n\\n        while(nn > 0){\\n            if(nn%2 == 0){\\n                x = (ld)x*x;\\n                nn /= 2;\\n            }\\n            else{\\n                ans = (ld)ans*x;\\n                nn = nn-1;\\n            }\\n        }   \\n\\n        if(n < 0){\\n            ans = (ld)1/ans;\\n        }\\n\\n        return ans;     \\n    }\\n};`"
                    },
                    {
                        "username": "ammu678",
                        "content": "I am guessing your code is in c++, so I am not sure of int data type size but it is 2 or 4 bytes in c++ , its most probably because of overflow error, the n value in the given testcase is the minimum limit of int size 4 bytes when you convert to positive ,the max positive value is 2147483647 , so because of overflow its getting reset"
                    },
                    {
                        "username": "vaibhav_0911",
                        "content": "if (n==Integer.MAX_VALUE)\\nreturn x;\\nelse if(n==Integer.MIN_VALUE)\\nreturn (x==1 || x==-1) ? 1:0;"
                    },
                    {
                        "username": "saahilhameed",
                        "content": "This question has so many corner cases, no wonder it has more downvotes than upvotes"
                    },
                    {
                        "username": "kiam_uditya",
                        "content": "solving with bit manipulation takes logn time but even then it gives TLE\\nwhere I am wrong pls figure out.\\n\\n\\n `your inline code...your inline code...`\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n     double ans=1;\\n    while(n)\\n    {\\n        if(n&1)\\n        {\\n            ans=ans*x;\\n\\n        }\\n        x=x*x;\\n        n>>=1;\\n    }\\n\\n    return ans;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "RushikaK",
                        "content": "` class Solution {\\n    public double myPow(double x, int n) {\\n        int val = Math.abs(n);\\n        double result = getvalue(x, val);\\n        return n < 0 ? 1/result: result;\\n    }\\n\\n    private double getvalue(double x, int n) {\\n        if( n == 0)\\n            return 1;\\n        double val = getvalue(x, n/2);\\n        if( n %2 == 0) {\\n            return (val * val);\\n        } else {\\n            return (x * val * val);\\n        }\\n    }\\n}`\\n"
                    },
                    {
                        "username": "niteshtiwari17",
                        "content": "Out of 305 this 301th code gives wrong answer  please any one can give hint\n\n2.00000\n-2147483648"
                    },
                    {
                        "username": "shivangi_02",
                        "content": "This is below the condition given -2^31-1 <=n"
                    },
                    {
                        "username": "niteshtiwari17",
                        "content": "how to handle Time Limit Exceeded as a beginner?\nI followed this approach : \nstep 1 : n  isNegative if yes the take absolute value of n \nstep 2 : simply calculating x raised to power using for loop.\nstep 3 : if(n == 0 ) return 1 ;\nstep 4  if n is negative then return 1/res else return res\n\nHow to overcome Time Limit exceeded? \n"
                    },
                    {
                        "username": "ruf99",
                        "content": "Shouldn\\'t we prefer the iterative version here? Must we absolutely insert recursion into a problem that doesn\\'t need it?? This is a simple one line answer, why complicate it unnecessarily? smh"
                    },
                    {
                        "username": "nothingjustacoder",
                        "content": "double result=1;\\n       if(n>0){\\n       for(int i=0;i<n;i++){\\n           result*=x;\\n           }\\n           \\n       }\\n       if(n<0){\\n           n=n*-1;\\n            for(int i=0;i<n;i++){\\n           result*=x;\\n            }\\n            result=1/result;\\n           \\n       }\\n             return result;\\n299/305 litterally got stucked\\nReason for Error=TIme Limit Exceeded"
                    }
                ]
            },
            {
                "id": 1767089,
                "content": [
                    {
                        "username": "vanshikasharma4102",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n    if(n==0)\\n        return 1;\\n    if(n==1)\\n        return 1;\\n    double ans = pow(x, n/2);\\n    ans = (ans*ans);\\n    if(n%2!=0)\\n        ans = (ans*x);\\n    return ans;\\n    }\\n};\\nMy code fails for x = 34.00515,n=-3. Could someone please help me out\\n\\n"
                    },
                    {
                        "username": "prathmesh_24",
                        "content": "Somebody tell me why its wrong answer for following testcase even if the logic and code is correct.\\nx = 2.00000\\nn = -2147483648\\n\\nOutput\\n1.00000\\n\\nExpected\\n0.00000\\n\\n `class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double ans = 1.0;\\n        typedef long double ld;\\n        int nn = n;\\n\\n        if(n < 0){\\n            nn = abs(nn);\\n        }\\n\\n        while(nn > 0){\\n            if(nn%2 == 0){\\n                x = (ld)x*x;\\n                nn /= 2;\\n            }\\n            else{\\n                ans = (ld)ans*x;\\n                nn = nn-1;\\n            }\\n        }   \\n\\n        if(n < 0){\\n            ans = (ld)1/ans;\\n        }\\n\\n        return ans;     \\n    }\\n};`"
                    },
                    {
                        "username": "ammu678",
                        "content": "I am guessing your code is in c++, so I am not sure of int data type size but it is 2 or 4 bytes in c++ , its most probably because of overflow error, the n value in the given testcase is the minimum limit of int size 4 bytes when you convert to positive ,the max positive value is 2147483647 , so because of overflow its getting reset"
                    },
                    {
                        "username": "vaibhav_0911",
                        "content": "if (n==Integer.MAX_VALUE)\\nreturn x;\\nelse if(n==Integer.MIN_VALUE)\\nreturn (x==1 || x==-1) ? 1:0;"
                    },
                    {
                        "username": "saahilhameed",
                        "content": "This question has so many corner cases, no wonder it has more downvotes than upvotes"
                    },
                    {
                        "username": "kiam_uditya",
                        "content": "solving with bit manipulation takes logn time but even then it gives TLE\\nwhere I am wrong pls figure out.\\n\\n\\n `your inline code...your inline code...`\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n     double ans=1;\\n    while(n)\\n    {\\n        if(n&1)\\n        {\\n            ans=ans*x;\\n\\n        }\\n        x=x*x;\\n        n>>=1;\\n    }\\n\\n    return ans;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "RushikaK",
                        "content": "` class Solution {\\n    public double myPow(double x, int n) {\\n        int val = Math.abs(n);\\n        double result = getvalue(x, val);\\n        return n < 0 ? 1/result: result;\\n    }\\n\\n    private double getvalue(double x, int n) {\\n        if( n == 0)\\n            return 1;\\n        double val = getvalue(x, n/2);\\n        if( n %2 == 0) {\\n            return (val * val);\\n        } else {\\n            return (x * val * val);\\n        }\\n    }\\n}`\\n"
                    },
                    {
                        "username": "niteshtiwari17",
                        "content": "Out of 305 this 301th code gives wrong answer  please any one can give hint\n\n2.00000\n-2147483648"
                    },
                    {
                        "username": "shivangi_02",
                        "content": "This is below the condition given -2^31-1 <=n"
                    },
                    {
                        "username": "niteshtiwari17",
                        "content": "how to handle Time Limit Exceeded as a beginner?\nI followed this approach : \nstep 1 : n  isNegative if yes the take absolute value of n \nstep 2 : simply calculating x raised to power using for loop.\nstep 3 : if(n == 0 ) return 1 ;\nstep 4  if n is negative then return 1/res else return res\n\nHow to overcome Time Limit exceeded? \n"
                    },
                    {
                        "username": "ruf99",
                        "content": "Shouldn\\'t we prefer the iterative version here? Must we absolutely insert recursion into a problem that doesn\\'t need it?? This is a simple one line answer, why complicate it unnecessarily? smh"
                    },
                    {
                        "username": "nothingjustacoder",
                        "content": "double result=1;\\n       if(n>0){\\n       for(int i=0;i<n;i++){\\n           result*=x;\\n           }\\n           \\n       }\\n       if(n<0){\\n           n=n*-1;\\n            for(int i=0;i<n;i++){\\n           result*=x;\\n            }\\n            result=1/result;\\n           \\n       }\\n             return result;\\n299/305 litterally got stucked\\nReason for Error=TIme Limit Exceeded"
                    }
                ]
            },
            {
                "id": 1763605,
                "content": [
                    {
                        "username": "vanshikasharma4102",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n    if(n==0)\\n        return 1;\\n    if(n==1)\\n        return 1;\\n    double ans = pow(x, n/2);\\n    ans = (ans*ans);\\n    if(n%2!=0)\\n        ans = (ans*x);\\n    return ans;\\n    }\\n};\\nMy code fails for x = 34.00515,n=-3. Could someone please help me out\\n\\n"
                    },
                    {
                        "username": "prathmesh_24",
                        "content": "Somebody tell me why its wrong answer for following testcase even if the logic and code is correct.\\nx = 2.00000\\nn = -2147483648\\n\\nOutput\\n1.00000\\n\\nExpected\\n0.00000\\n\\n `class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double ans = 1.0;\\n        typedef long double ld;\\n        int nn = n;\\n\\n        if(n < 0){\\n            nn = abs(nn);\\n        }\\n\\n        while(nn > 0){\\n            if(nn%2 == 0){\\n                x = (ld)x*x;\\n                nn /= 2;\\n            }\\n            else{\\n                ans = (ld)ans*x;\\n                nn = nn-1;\\n            }\\n        }   \\n\\n        if(n < 0){\\n            ans = (ld)1/ans;\\n        }\\n\\n        return ans;     \\n    }\\n};`"
                    },
                    {
                        "username": "ammu678",
                        "content": "I am guessing your code is in c++, so I am not sure of int data type size but it is 2 or 4 bytes in c++ , its most probably because of overflow error, the n value in the given testcase is the minimum limit of int size 4 bytes when you convert to positive ,the max positive value is 2147483647 , so because of overflow its getting reset"
                    },
                    {
                        "username": "vaibhav_0911",
                        "content": "if (n==Integer.MAX_VALUE)\\nreturn x;\\nelse if(n==Integer.MIN_VALUE)\\nreturn (x==1 || x==-1) ? 1:0;"
                    },
                    {
                        "username": "saahilhameed",
                        "content": "This question has so many corner cases, no wonder it has more downvotes than upvotes"
                    },
                    {
                        "username": "kiam_uditya",
                        "content": "solving with bit manipulation takes logn time but even then it gives TLE\\nwhere I am wrong pls figure out.\\n\\n\\n `your inline code...your inline code...`\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n     double ans=1;\\n    while(n)\\n    {\\n        if(n&1)\\n        {\\n            ans=ans*x;\\n\\n        }\\n        x=x*x;\\n        n>>=1;\\n    }\\n\\n    return ans;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "RushikaK",
                        "content": "` class Solution {\\n    public double myPow(double x, int n) {\\n        int val = Math.abs(n);\\n        double result = getvalue(x, val);\\n        return n < 0 ? 1/result: result;\\n    }\\n\\n    private double getvalue(double x, int n) {\\n        if( n == 0)\\n            return 1;\\n        double val = getvalue(x, n/2);\\n        if( n %2 == 0) {\\n            return (val * val);\\n        } else {\\n            return (x * val * val);\\n        }\\n    }\\n}`\\n"
                    },
                    {
                        "username": "niteshtiwari17",
                        "content": "Out of 305 this 301th code gives wrong answer  please any one can give hint\n\n2.00000\n-2147483648"
                    },
                    {
                        "username": "shivangi_02",
                        "content": "This is below the condition given -2^31-1 <=n"
                    },
                    {
                        "username": "niteshtiwari17",
                        "content": "how to handle Time Limit Exceeded as a beginner?\nI followed this approach : \nstep 1 : n  isNegative if yes the take absolute value of n \nstep 2 : simply calculating x raised to power using for loop.\nstep 3 : if(n == 0 ) return 1 ;\nstep 4  if n is negative then return 1/res else return res\n\nHow to overcome Time Limit exceeded? \n"
                    },
                    {
                        "username": "ruf99",
                        "content": "Shouldn\\'t we prefer the iterative version here? Must we absolutely insert recursion into a problem that doesn\\'t need it?? This is a simple one line answer, why complicate it unnecessarily? smh"
                    },
                    {
                        "username": "nothingjustacoder",
                        "content": "double result=1;\\n       if(n>0){\\n       for(int i=0;i<n;i++){\\n           result*=x;\\n           }\\n           \\n       }\\n       if(n<0){\\n           n=n*-1;\\n            for(int i=0;i<n;i++){\\n           result*=x;\\n            }\\n            result=1/result;\\n           \\n       }\\n             return result;\\n299/305 litterally got stucked\\nReason for Error=TIme Limit Exceeded"
                    }
                ]
            },
            {
                "id": 1762022,
                "content": [
                    {
                        "username": "vanshikasharma4102",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n    if(n==0)\\n        return 1;\\n    if(n==1)\\n        return 1;\\n    double ans = pow(x, n/2);\\n    ans = (ans*ans);\\n    if(n%2!=0)\\n        ans = (ans*x);\\n    return ans;\\n    }\\n};\\nMy code fails for x = 34.00515,n=-3. Could someone please help me out\\n\\n"
                    },
                    {
                        "username": "prathmesh_24",
                        "content": "Somebody tell me why its wrong answer for following testcase even if the logic and code is correct.\\nx = 2.00000\\nn = -2147483648\\n\\nOutput\\n1.00000\\n\\nExpected\\n0.00000\\n\\n `class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double ans = 1.0;\\n        typedef long double ld;\\n        int nn = n;\\n\\n        if(n < 0){\\n            nn = abs(nn);\\n        }\\n\\n        while(nn > 0){\\n            if(nn%2 == 0){\\n                x = (ld)x*x;\\n                nn /= 2;\\n            }\\n            else{\\n                ans = (ld)ans*x;\\n                nn = nn-1;\\n            }\\n        }   \\n\\n        if(n < 0){\\n            ans = (ld)1/ans;\\n        }\\n\\n        return ans;     \\n    }\\n};`"
                    },
                    {
                        "username": "ammu678",
                        "content": "I am guessing your code is in c++, so I am not sure of int data type size but it is 2 or 4 bytes in c++ , its most probably because of overflow error, the n value in the given testcase is the minimum limit of int size 4 bytes when you convert to positive ,the max positive value is 2147483647 , so because of overflow its getting reset"
                    },
                    {
                        "username": "vaibhav_0911",
                        "content": "if (n==Integer.MAX_VALUE)\\nreturn x;\\nelse if(n==Integer.MIN_VALUE)\\nreturn (x==1 || x==-1) ? 1:0;"
                    },
                    {
                        "username": "saahilhameed",
                        "content": "This question has so many corner cases, no wonder it has more downvotes than upvotes"
                    },
                    {
                        "username": "kiam_uditya",
                        "content": "solving with bit manipulation takes logn time but even then it gives TLE\\nwhere I am wrong pls figure out.\\n\\n\\n `your inline code...your inline code...`\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n     double ans=1;\\n    while(n)\\n    {\\n        if(n&1)\\n        {\\n            ans=ans*x;\\n\\n        }\\n        x=x*x;\\n        n>>=1;\\n    }\\n\\n    return ans;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "RushikaK",
                        "content": "` class Solution {\\n    public double myPow(double x, int n) {\\n        int val = Math.abs(n);\\n        double result = getvalue(x, val);\\n        return n < 0 ? 1/result: result;\\n    }\\n\\n    private double getvalue(double x, int n) {\\n        if( n == 0)\\n            return 1;\\n        double val = getvalue(x, n/2);\\n        if( n %2 == 0) {\\n            return (val * val);\\n        } else {\\n            return (x * val * val);\\n        }\\n    }\\n}`\\n"
                    },
                    {
                        "username": "niteshtiwari17",
                        "content": "Out of 305 this 301th code gives wrong answer  please any one can give hint\n\n2.00000\n-2147483648"
                    },
                    {
                        "username": "shivangi_02",
                        "content": "This is below the condition given -2^31-1 <=n"
                    },
                    {
                        "username": "niteshtiwari17",
                        "content": "how to handle Time Limit Exceeded as a beginner?\nI followed this approach : \nstep 1 : n  isNegative if yes the take absolute value of n \nstep 2 : simply calculating x raised to power using for loop.\nstep 3 : if(n == 0 ) return 1 ;\nstep 4  if n is negative then return 1/res else return res\n\nHow to overcome Time Limit exceeded? \n"
                    },
                    {
                        "username": "ruf99",
                        "content": "Shouldn\\'t we prefer the iterative version here? Must we absolutely insert recursion into a problem that doesn\\'t need it?? This is a simple one line answer, why complicate it unnecessarily? smh"
                    },
                    {
                        "username": "nothingjustacoder",
                        "content": "double result=1;\\n       if(n>0){\\n       for(int i=0;i<n;i++){\\n           result*=x;\\n           }\\n           \\n       }\\n       if(n<0){\\n           n=n*-1;\\n            for(int i=0;i<n;i++){\\n           result*=x;\\n            }\\n            result=1/result;\\n           \\n       }\\n             return result;\\n299/305 litterally got stucked\\nReason for Error=TIme Limit Exceeded"
                    }
                ]
            },
            {
                "id": 1761993,
                "content": [
                    {
                        "username": "vanshikasharma4102",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n    if(n==0)\\n        return 1;\\n    if(n==1)\\n        return 1;\\n    double ans = pow(x, n/2);\\n    ans = (ans*ans);\\n    if(n%2!=0)\\n        ans = (ans*x);\\n    return ans;\\n    }\\n};\\nMy code fails for x = 34.00515,n=-3. Could someone please help me out\\n\\n"
                    },
                    {
                        "username": "prathmesh_24",
                        "content": "Somebody tell me why its wrong answer for following testcase even if the logic and code is correct.\\nx = 2.00000\\nn = -2147483648\\n\\nOutput\\n1.00000\\n\\nExpected\\n0.00000\\n\\n `class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double ans = 1.0;\\n        typedef long double ld;\\n        int nn = n;\\n\\n        if(n < 0){\\n            nn = abs(nn);\\n        }\\n\\n        while(nn > 0){\\n            if(nn%2 == 0){\\n                x = (ld)x*x;\\n                nn /= 2;\\n            }\\n            else{\\n                ans = (ld)ans*x;\\n                nn = nn-1;\\n            }\\n        }   \\n\\n        if(n < 0){\\n            ans = (ld)1/ans;\\n        }\\n\\n        return ans;     \\n    }\\n};`"
                    },
                    {
                        "username": "ammu678",
                        "content": "I am guessing your code is in c++, so I am not sure of int data type size but it is 2 or 4 bytes in c++ , its most probably because of overflow error, the n value in the given testcase is the minimum limit of int size 4 bytes when you convert to positive ,the max positive value is 2147483647 , so because of overflow its getting reset"
                    },
                    {
                        "username": "vaibhav_0911",
                        "content": "if (n==Integer.MAX_VALUE)\\nreturn x;\\nelse if(n==Integer.MIN_VALUE)\\nreturn (x==1 || x==-1) ? 1:0;"
                    },
                    {
                        "username": "saahilhameed",
                        "content": "This question has so many corner cases, no wonder it has more downvotes than upvotes"
                    },
                    {
                        "username": "kiam_uditya",
                        "content": "solving with bit manipulation takes logn time but even then it gives TLE\\nwhere I am wrong pls figure out.\\n\\n\\n `your inline code...your inline code...`\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n     double ans=1;\\n    while(n)\\n    {\\n        if(n&1)\\n        {\\n            ans=ans*x;\\n\\n        }\\n        x=x*x;\\n        n>>=1;\\n    }\\n\\n    return ans;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "RushikaK",
                        "content": "` class Solution {\\n    public double myPow(double x, int n) {\\n        int val = Math.abs(n);\\n        double result = getvalue(x, val);\\n        return n < 0 ? 1/result: result;\\n    }\\n\\n    private double getvalue(double x, int n) {\\n        if( n == 0)\\n            return 1;\\n        double val = getvalue(x, n/2);\\n        if( n %2 == 0) {\\n            return (val * val);\\n        } else {\\n            return (x * val * val);\\n        }\\n    }\\n}`\\n"
                    },
                    {
                        "username": "niteshtiwari17",
                        "content": "Out of 305 this 301th code gives wrong answer  please any one can give hint\n\n2.00000\n-2147483648"
                    },
                    {
                        "username": "shivangi_02",
                        "content": "This is below the condition given -2^31-1 <=n"
                    },
                    {
                        "username": "niteshtiwari17",
                        "content": "how to handle Time Limit Exceeded as a beginner?\nI followed this approach : \nstep 1 : n  isNegative if yes the take absolute value of n \nstep 2 : simply calculating x raised to power using for loop.\nstep 3 : if(n == 0 ) return 1 ;\nstep 4  if n is negative then return 1/res else return res\n\nHow to overcome Time Limit exceeded? \n"
                    },
                    {
                        "username": "ruf99",
                        "content": "Shouldn\\'t we prefer the iterative version here? Must we absolutely insert recursion into a problem that doesn\\'t need it?? This is a simple one line answer, why complicate it unnecessarily? smh"
                    },
                    {
                        "username": "nothingjustacoder",
                        "content": "double result=1;\\n       if(n>0){\\n       for(int i=0;i<n;i++){\\n           result*=x;\\n           }\\n           \\n       }\\n       if(n<0){\\n           n=n*-1;\\n            for(int i=0;i<n;i++){\\n           result*=x;\\n            }\\n            result=1/result;\\n           \\n       }\\n             return result;\\n299/305 litterally got stucked\\nReason for Error=TIme Limit Exceeded"
                    }
                ]
            },
            {
                "id": 1761164,
                "content": [
                    {
                        "username": "vanshikasharma4102",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n    if(n==0)\\n        return 1;\\n    if(n==1)\\n        return 1;\\n    double ans = pow(x, n/2);\\n    ans = (ans*ans);\\n    if(n%2!=0)\\n        ans = (ans*x);\\n    return ans;\\n    }\\n};\\nMy code fails for x = 34.00515,n=-3. Could someone please help me out\\n\\n"
                    },
                    {
                        "username": "prathmesh_24",
                        "content": "Somebody tell me why its wrong answer for following testcase even if the logic and code is correct.\\nx = 2.00000\\nn = -2147483648\\n\\nOutput\\n1.00000\\n\\nExpected\\n0.00000\\n\\n `class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double ans = 1.0;\\n        typedef long double ld;\\n        int nn = n;\\n\\n        if(n < 0){\\n            nn = abs(nn);\\n        }\\n\\n        while(nn > 0){\\n            if(nn%2 == 0){\\n                x = (ld)x*x;\\n                nn /= 2;\\n            }\\n            else{\\n                ans = (ld)ans*x;\\n                nn = nn-1;\\n            }\\n        }   \\n\\n        if(n < 0){\\n            ans = (ld)1/ans;\\n        }\\n\\n        return ans;     \\n    }\\n};`"
                    },
                    {
                        "username": "ammu678",
                        "content": "I am guessing your code is in c++, so I am not sure of int data type size but it is 2 or 4 bytes in c++ , its most probably because of overflow error, the n value in the given testcase is the minimum limit of int size 4 bytes when you convert to positive ,the max positive value is 2147483647 , so because of overflow its getting reset"
                    },
                    {
                        "username": "vaibhav_0911",
                        "content": "if (n==Integer.MAX_VALUE)\\nreturn x;\\nelse if(n==Integer.MIN_VALUE)\\nreturn (x==1 || x==-1) ? 1:0;"
                    },
                    {
                        "username": "saahilhameed",
                        "content": "This question has so many corner cases, no wonder it has more downvotes than upvotes"
                    },
                    {
                        "username": "kiam_uditya",
                        "content": "solving with bit manipulation takes logn time but even then it gives TLE\\nwhere I am wrong pls figure out.\\n\\n\\n `your inline code...your inline code...`\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n     double ans=1;\\n    while(n)\\n    {\\n        if(n&1)\\n        {\\n            ans=ans*x;\\n\\n        }\\n        x=x*x;\\n        n>>=1;\\n    }\\n\\n    return ans;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "RushikaK",
                        "content": "` class Solution {\\n    public double myPow(double x, int n) {\\n        int val = Math.abs(n);\\n        double result = getvalue(x, val);\\n        return n < 0 ? 1/result: result;\\n    }\\n\\n    private double getvalue(double x, int n) {\\n        if( n == 0)\\n            return 1;\\n        double val = getvalue(x, n/2);\\n        if( n %2 == 0) {\\n            return (val * val);\\n        } else {\\n            return (x * val * val);\\n        }\\n    }\\n}`\\n"
                    },
                    {
                        "username": "niteshtiwari17",
                        "content": "Out of 305 this 301th code gives wrong answer  please any one can give hint\n\n2.00000\n-2147483648"
                    },
                    {
                        "username": "shivangi_02",
                        "content": "This is below the condition given -2^31-1 <=n"
                    },
                    {
                        "username": "niteshtiwari17",
                        "content": "how to handle Time Limit Exceeded as a beginner?\nI followed this approach : \nstep 1 : n  isNegative if yes the take absolute value of n \nstep 2 : simply calculating x raised to power using for loop.\nstep 3 : if(n == 0 ) return 1 ;\nstep 4  if n is negative then return 1/res else return res\n\nHow to overcome Time Limit exceeded? \n"
                    },
                    {
                        "username": "ruf99",
                        "content": "Shouldn\\'t we prefer the iterative version here? Must we absolutely insert recursion into a problem that doesn\\'t need it?? This is a simple one line answer, why complicate it unnecessarily? smh"
                    },
                    {
                        "username": "nothingjustacoder",
                        "content": "double result=1;\\n       if(n>0){\\n       for(int i=0;i<n;i++){\\n           result*=x;\\n           }\\n           \\n       }\\n       if(n<0){\\n           n=n*-1;\\n            for(int i=0;i<n;i++){\\n           result*=x;\\n            }\\n            result=1/result;\\n           \\n       }\\n             return result;\\n299/305 litterally got stucked\\nReason for Error=TIme Limit Exceeded"
                    }
                ]
            },
            {
                "id": 1760395,
                "content": [
                    {
                        "username": "vanshikasharma4102",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n    if(n==0)\\n        return 1;\\n    if(n==1)\\n        return 1;\\n    double ans = pow(x, n/2);\\n    ans = (ans*ans);\\n    if(n%2!=0)\\n        ans = (ans*x);\\n    return ans;\\n    }\\n};\\nMy code fails for x = 34.00515,n=-3. Could someone please help me out\\n\\n"
                    },
                    {
                        "username": "prathmesh_24",
                        "content": "Somebody tell me why its wrong answer for following testcase even if the logic and code is correct.\\nx = 2.00000\\nn = -2147483648\\n\\nOutput\\n1.00000\\n\\nExpected\\n0.00000\\n\\n `class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double ans = 1.0;\\n        typedef long double ld;\\n        int nn = n;\\n\\n        if(n < 0){\\n            nn = abs(nn);\\n        }\\n\\n        while(nn > 0){\\n            if(nn%2 == 0){\\n                x = (ld)x*x;\\n                nn /= 2;\\n            }\\n            else{\\n                ans = (ld)ans*x;\\n                nn = nn-1;\\n            }\\n        }   \\n\\n        if(n < 0){\\n            ans = (ld)1/ans;\\n        }\\n\\n        return ans;     \\n    }\\n};`"
                    },
                    {
                        "username": "ammu678",
                        "content": "I am guessing your code is in c++, so I am not sure of int data type size but it is 2 or 4 bytes in c++ , its most probably because of overflow error, the n value in the given testcase is the minimum limit of int size 4 bytes when you convert to positive ,the max positive value is 2147483647 , so because of overflow its getting reset"
                    },
                    {
                        "username": "vaibhav_0911",
                        "content": "if (n==Integer.MAX_VALUE)\\nreturn x;\\nelse if(n==Integer.MIN_VALUE)\\nreturn (x==1 || x==-1) ? 1:0;"
                    },
                    {
                        "username": "saahilhameed",
                        "content": "This question has so many corner cases, no wonder it has more downvotes than upvotes"
                    },
                    {
                        "username": "kiam_uditya",
                        "content": "solving with bit manipulation takes logn time but even then it gives TLE\\nwhere I am wrong pls figure out.\\n\\n\\n `your inline code...your inline code...`\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n     double ans=1;\\n    while(n)\\n    {\\n        if(n&1)\\n        {\\n            ans=ans*x;\\n\\n        }\\n        x=x*x;\\n        n>>=1;\\n    }\\n\\n    return ans;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "RushikaK",
                        "content": "` class Solution {\\n    public double myPow(double x, int n) {\\n        int val = Math.abs(n);\\n        double result = getvalue(x, val);\\n        return n < 0 ? 1/result: result;\\n    }\\n\\n    private double getvalue(double x, int n) {\\n        if( n == 0)\\n            return 1;\\n        double val = getvalue(x, n/2);\\n        if( n %2 == 0) {\\n            return (val * val);\\n        } else {\\n            return (x * val * val);\\n        }\\n    }\\n}`\\n"
                    },
                    {
                        "username": "niteshtiwari17",
                        "content": "Out of 305 this 301th code gives wrong answer  please any one can give hint\n\n2.00000\n-2147483648"
                    },
                    {
                        "username": "shivangi_02",
                        "content": "This is below the condition given -2^31-1 <=n"
                    },
                    {
                        "username": "niteshtiwari17",
                        "content": "how to handle Time Limit Exceeded as a beginner?\nI followed this approach : \nstep 1 : n  isNegative if yes the take absolute value of n \nstep 2 : simply calculating x raised to power using for loop.\nstep 3 : if(n == 0 ) return 1 ;\nstep 4  if n is negative then return 1/res else return res\n\nHow to overcome Time Limit exceeded? \n"
                    },
                    {
                        "username": "ruf99",
                        "content": "Shouldn\\'t we prefer the iterative version here? Must we absolutely insert recursion into a problem that doesn\\'t need it?? This is a simple one line answer, why complicate it unnecessarily? smh"
                    },
                    {
                        "username": "nothingjustacoder",
                        "content": "double result=1;\\n       if(n>0){\\n       for(int i=0;i<n;i++){\\n           result*=x;\\n           }\\n           \\n       }\\n       if(n<0){\\n           n=n*-1;\\n            for(int i=0;i<n;i++){\\n           result*=x;\\n            }\\n            result=1/result;\\n           \\n       }\\n             return result;\\n299/305 litterally got stucked\\nReason for Error=TIme Limit Exceeded"
                    }
                ]
            },
            {
                "id": 1758854,
                "content": [
                    {
                        "username": "umanggcoder",
                        "content": "Time Limit Exceeded\\nLast Executed Input\\n299 / 305 testcases passed\\nx =\\n1.00000\\nn =\\n2147483647\\ncan anyone please tell me why i am getting tle ?"
                    },
                    {
                        "username": "ritesh1224",
                        "content": "double ans = Math.pow(x,n);\\n             return ans;"
                    },
                    {
                        "username": "levi_kapil",
                        "content": "So firstly i code my code run 301 case out 305 i made condition after running test case so finally this one is my final code of C++ \\n\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double t = x; \\n    if(x==1)\\n    {\\n        return 1; \\n    }\\n    if(x==0 )\\n    {\\n        return 0 ; \\n    }\\n\\n   if (x>1.0 && n<-2147483647) \\n   {return 0;\\n   }\\n    if(x==-1)\\n    {\\n        if(n%2==0)\\n        {\\n        return 1; }\\n        else\\n        {\\n            return -1; \\n        }\\n\\n    }\\n\\n        if(n>0){\\n        for(int i=1; i<n; i++)\\n        {\\n            x= x*t; \\n        }\\n        }\\n        else if(n==0)\\n    \\n    {\\n        return 1; \\n    }\\n        else\\n        {\\n            for (int i = 1; i>n; i--)\\n            {  x = x/t; \\n            } \\n        } \\n        return x; \\n    }\\n};\\n\\n"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This happens to me in almost every medium/hard difficulty question that I attempt. In this one, I am able to get 299/305 testcases correctly, but there are some corner cases which I cannot figure out any solution for."
                    },
                    {
                        "username": "YaJohny",
                        "content": "Who knows how to fix 291 testcase\nTime Limit Exceed\nx = 0.00001\nn = 10 digit number"
                    },
                    {
                        "username": "homesomerset",
                        "content": "just got passed with a solution in java that use pretty interesting bit operations. one hint..., every n is represented in binary mode on a computer. let\\'s say n= 10, it\\'s actually 1010 in binary. it basically means 2^3 + 2^1 = 10. 2^1 means x*x, 2^3 means ret = x*x, and ret = ret*ret, then again re= ret*ret. it\\'s basically worst case 496 multiplies. best case 1 or 2 multiplies. it\\'s O(1) with no risk of stack overflow, and corner case free. "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "Here is my Easy Brute force solution But its last 6 TC are failing\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double res=0;\\n        if(n==0) return 1;\\n        if(n>0)\\n        {\\n            double temp = x;\\n            for(int i=1;i<n;i++)\\n            {\\n                temp=temp*x;\\n            }\\n            res = temp;\\n        }\\n        if(n<0)\\n        {\\n            double temp = x;\\n            for(int i=1;i<abs(n);i++)\\n            {\\n                temp=temp*x;\\n            }\\n            res = 1/temp;\\n        }\\n        return res;\\n    }\\n};\\n\\nCould anyone correct this brute force so It can be accepted? \\n\\nUpvote Please"
                    },
                    {
                        "username": "noorpinger",
                        "content": "says 305/305 cases passed but won\\'t let me submit because it says time limit exceeded \\uD83E\\uDD37\\u200D\\u2642\\uFE0F"
                    },
                    {
                        "username": "Sushant_012003",
                        "content": "Its pretty easy \\nreturn pow(x, n) and done as simple as that\\ntime Complexity O(1)"
                    },
                    {
                        "username": "sijils",
                        "content": "Please help me in understanding why for my below code i am getting \"maximum recursion depth exceeded\" for x=0.00001 and n=2147483647\\n```\\n    def myPow(self, x: float, n: int) -> float:\\n        if n==0:\\n            return 1\\n        return x*self.myPow(x,n-1) if n>0 else self.myPow(x,n+1)/x\\n```\\nBut the below code seems to work fine\\n```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:      \\n\\n        if n==0:\\n            return 1\\n\\n        if n < 0:\\n            x = 1/x\\n            n = -n\\n\\n        return x*pow(x,n-1)\\n```\\n\\nLogically both are almost kind of same but then why the difference in execution"
                    }
                ]
            },
            {
                "id": 1758030,
                "content": [
                    {
                        "username": "umanggcoder",
                        "content": "Time Limit Exceeded\\nLast Executed Input\\n299 / 305 testcases passed\\nx =\\n1.00000\\nn =\\n2147483647\\ncan anyone please tell me why i am getting tle ?"
                    },
                    {
                        "username": "ritesh1224",
                        "content": "double ans = Math.pow(x,n);\\n             return ans;"
                    },
                    {
                        "username": "levi_kapil",
                        "content": "So firstly i code my code run 301 case out 305 i made condition after running test case so finally this one is my final code of C++ \\n\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double t = x; \\n    if(x==1)\\n    {\\n        return 1; \\n    }\\n    if(x==0 )\\n    {\\n        return 0 ; \\n    }\\n\\n   if (x>1.0 && n<-2147483647) \\n   {return 0;\\n   }\\n    if(x==-1)\\n    {\\n        if(n%2==0)\\n        {\\n        return 1; }\\n        else\\n        {\\n            return -1; \\n        }\\n\\n    }\\n\\n        if(n>0){\\n        for(int i=1; i<n; i++)\\n        {\\n            x= x*t; \\n        }\\n        }\\n        else if(n==0)\\n    \\n    {\\n        return 1; \\n    }\\n        else\\n        {\\n            for (int i = 1; i>n; i--)\\n            {  x = x/t; \\n            } \\n        } \\n        return x; \\n    }\\n};\\n\\n"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This happens to me in almost every medium/hard difficulty question that I attempt. In this one, I am able to get 299/305 testcases correctly, but there are some corner cases which I cannot figure out any solution for."
                    },
                    {
                        "username": "YaJohny",
                        "content": "Who knows how to fix 291 testcase\nTime Limit Exceed\nx = 0.00001\nn = 10 digit number"
                    },
                    {
                        "username": "homesomerset",
                        "content": "just got passed with a solution in java that use pretty interesting bit operations. one hint..., every n is represented in binary mode on a computer. let\\'s say n= 10, it\\'s actually 1010 in binary. it basically means 2^3 + 2^1 = 10. 2^1 means x*x, 2^3 means ret = x*x, and ret = ret*ret, then again re= ret*ret. it\\'s basically worst case 496 multiplies. best case 1 or 2 multiplies. it\\'s O(1) with no risk of stack overflow, and corner case free. "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "Here is my Easy Brute force solution But its last 6 TC are failing\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double res=0;\\n        if(n==0) return 1;\\n        if(n>0)\\n        {\\n            double temp = x;\\n            for(int i=1;i<n;i++)\\n            {\\n                temp=temp*x;\\n            }\\n            res = temp;\\n        }\\n        if(n<0)\\n        {\\n            double temp = x;\\n            for(int i=1;i<abs(n);i++)\\n            {\\n                temp=temp*x;\\n            }\\n            res = 1/temp;\\n        }\\n        return res;\\n    }\\n};\\n\\nCould anyone correct this brute force so It can be accepted? \\n\\nUpvote Please"
                    },
                    {
                        "username": "noorpinger",
                        "content": "says 305/305 cases passed but won\\'t let me submit because it says time limit exceeded \\uD83E\\uDD37\\u200D\\u2642\\uFE0F"
                    },
                    {
                        "username": "Sushant_012003",
                        "content": "Its pretty easy \\nreturn pow(x, n) and done as simple as that\\ntime Complexity O(1)"
                    },
                    {
                        "username": "sijils",
                        "content": "Please help me in understanding why for my below code i am getting \"maximum recursion depth exceeded\" for x=0.00001 and n=2147483647\\n```\\n    def myPow(self, x: float, n: int) -> float:\\n        if n==0:\\n            return 1\\n        return x*self.myPow(x,n-1) if n>0 else self.myPow(x,n+1)/x\\n```\\nBut the below code seems to work fine\\n```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:      \\n\\n        if n==0:\\n            return 1\\n\\n        if n < 0:\\n            x = 1/x\\n            n = -n\\n\\n        return x*pow(x,n-1)\\n```\\n\\nLogically both are almost kind of same but then why the difference in execution"
                    }
                ]
            },
            {
                "id": 1754570,
                "content": [
                    {
                        "username": "umanggcoder",
                        "content": "Time Limit Exceeded\\nLast Executed Input\\n299 / 305 testcases passed\\nx =\\n1.00000\\nn =\\n2147483647\\ncan anyone please tell me why i am getting tle ?"
                    },
                    {
                        "username": "ritesh1224",
                        "content": "double ans = Math.pow(x,n);\\n             return ans;"
                    },
                    {
                        "username": "levi_kapil",
                        "content": "So firstly i code my code run 301 case out 305 i made condition after running test case so finally this one is my final code of C++ \\n\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double t = x; \\n    if(x==1)\\n    {\\n        return 1; \\n    }\\n    if(x==0 )\\n    {\\n        return 0 ; \\n    }\\n\\n   if (x>1.0 && n<-2147483647) \\n   {return 0;\\n   }\\n    if(x==-1)\\n    {\\n        if(n%2==0)\\n        {\\n        return 1; }\\n        else\\n        {\\n            return -1; \\n        }\\n\\n    }\\n\\n        if(n>0){\\n        for(int i=1; i<n; i++)\\n        {\\n            x= x*t; \\n        }\\n        }\\n        else if(n==0)\\n    \\n    {\\n        return 1; \\n    }\\n        else\\n        {\\n            for (int i = 1; i>n; i--)\\n            {  x = x/t; \\n            } \\n        } \\n        return x; \\n    }\\n};\\n\\n"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This happens to me in almost every medium/hard difficulty question that I attempt. In this one, I am able to get 299/305 testcases correctly, but there are some corner cases which I cannot figure out any solution for."
                    },
                    {
                        "username": "YaJohny",
                        "content": "Who knows how to fix 291 testcase\nTime Limit Exceed\nx = 0.00001\nn = 10 digit number"
                    },
                    {
                        "username": "homesomerset",
                        "content": "just got passed with a solution in java that use pretty interesting bit operations. one hint..., every n is represented in binary mode on a computer. let\\'s say n= 10, it\\'s actually 1010 in binary. it basically means 2^3 + 2^1 = 10. 2^1 means x*x, 2^3 means ret = x*x, and ret = ret*ret, then again re= ret*ret. it\\'s basically worst case 496 multiplies. best case 1 or 2 multiplies. it\\'s O(1) with no risk of stack overflow, and corner case free. "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "Here is my Easy Brute force solution But its last 6 TC are failing\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double res=0;\\n        if(n==0) return 1;\\n        if(n>0)\\n        {\\n            double temp = x;\\n            for(int i=1;i<n;i++)\\n            {\\n                temp=temp*x;\\n            }\\n            res = temp;\\n        }\\n        if(n<0)\\n        {\\n            double temp = x;\\n            for(int i=1;i<abs(n);i++)\\n            {\\n                temp=temp*x;\\n            }\\n            res = 1/temp;\\n        }\\n        return res;\\n    }\\n};\\n\\nCould anyone correct this brute force so It can be accepted? \\n\\nUpvote Please"
                    },
                    {
                        "username": "noorpinger",
                        "content": "says 305/305 cases passed but won\\'t let me submit because it says time limit exceeded \\uD83E\\uDD37\\u200D\\u2642\\uFE0F"
                    },
                    {
                        "username": "Sushant_012003",
                        "content": "Its pretty easy \\nreturn pow(x, n) and done as simple as that\\ntime Complexity O(1)"
                    },
                    {
                        "username": "sijils",
                        "content": "Please help me in understanding why for my below code i am getting \"maximum recursion depth exceeded\" for x=0.00001 and n=2147483647\\n```\\n    def myPow(self, x: float, n: int) -> float:\\n        if n==0:\\n            return 1\\n        return x*self.myPow(x,n-1) if n>0 else self.myPow(x,n+1)/x\\n```\\nBut the below code seems to work fine\\n```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:      \\n\\n        if n==0:\\n            return 1\\n\\n        if n < 0:\\n            x = 1/x\\n            n = -n\\n\\n        return x*pow(x,n-1)\\n```\\n\\nLogically both are almost kind of same but then why the difference in execution"
                    }
                ]
            },
            {
                "id": 1753795,
                "content": [
                    {
                        "username": "umanggcoder",
                        "content": "Time Limit Exceeded\\nLast Executed Input\\n299 / 305 testcases passed\\nx =\\n1.00000\\nn =\\n2147483647\\ncan anyone please tell me why i am getting tle ?"
                    },
                    {
                        "username": "ritesh1224",
                        "content": "double ans = Math.pow(x,n);\\n             return ans;"
                    },
                    {
                        "username": "levi_kapil",
                        "content": "So firstly i code my code run 301 case out 305 i made condition after running test case so finally this one is my final code of C++ \\n\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double t = x; \\n    if(x==1)\\n    {\\n        return 1; \\n    }\\n    if(x==0 )\\n    {\\n        return 0 ; \\n    }\\n\\n   if (x>1.0 && n<-2147483647) \\n   {return 0;\\n   }\\n    if(x==-1)\\n    {\\n        if(n%2==0)\\n        {\\n        return 1; }\\n        else\\n        {\\n            return -1; \\n        }\\n\\n    }\\n\\n        if(n>0){\\n        for(int i=1; i<n; i++)\\n        {\\n            x= x*t; \\n        }\\n        }\\n        else if(n==0)\\n    \\n    {\\n        return 1; \\n    }\\n        else\\n        {\\n            for (int i = 1; i>n; i--)\\n            {  x = x/t; \\n            } \\n        } \\n        return x; \\n    }\\n};\\n\\n"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This happens to me in almost every medium/hard difficulty question that I attempt. In this one, I am able to get 299/305 testcases correctly, but there are some corner cases which I cannot figure out any solution for."
                    },
                    {
                        "username": "YaJohny",
                        "content": "Who knows how to fix 291 testcase\nTime Limit Exceed\nx = 0.00001\nn = 10 digit number"
                    },
                    {
                        "username": "homesomerset",
                        "content": "just got passed with a solution in java that use pretty interesting bit operations. one hint..., every n is represented in binary mode on a computer. let\\'s say n= 10, it\\'s actually 1010 in binary. it basically means 2^3 + 2^1 = 10. 2^1 means x*x, 2^3 means ret = x*x, and ret = ret*ret, then again re= ret*ret. it\\'s basically worst case 496 multiplies. best case 1 or 2 multiplies. it\\'s O(1) with no risk of stack overflow, and corner case free. "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "Here is my Easy Brute force solution But its last 6 TC are failing\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double res=0;\\n        if(n==0) return 1;\\n        if(n>0)\\n        {\\n            double temp = x;\\n            for(int i=1;i<n;i++)\\n            {\\n                temp=temp*x;\\n            }\\n            res = temp;\\n        }\\n        if(n<0)\\n        {\\n            double temp = x;\\n            for(int i=1;i<abs(n);i++)\\n            {\\n                temp=temp*x;\\n            }\\n            res = 1/temp;\\n        }\\n        return res;\\n    }\\n};\\n\\nCould anyone correct this brute force so It can be accepted? \\n\\nUpvote Please"
                    },
                    {
                        "username": "noorpinger",
                        "content": "says 305/305 cases passed but won\\'t let me submit because it says time limit exceeded \\uD83E\\uDD37\\u200D\\u2642\\uFE0F"
                    },
                    {
                        "username": "Sushant_012003",
                        "content": "Its pretty easy \\nreturn pow(x, n) and done as simple as that\\ntime Complexity O(1)"
                    },
                    {
                        "username": "sijils",
                        "content": "Please help me in understanding why for my below code i am getting \"maximum recursion depth exceeded\" for x=0.00001 and n=2147483647\\n```\\n    def myPow(self, x: float, n: int) -> float:\\n        if n==0:\\n            return 1\\n        return x*self.myPow(x,n-1) if n>0 else self.myPow(x,n+1)/x\\n```\\nBut the below code seems to work fine\\n```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:      \\n\\n        if n==0:\\n            return 1\\n\\n        if n < 0:\\n            x = 1/x\\n            n = -n\\n\\n        return x*pow(x,n-1)\\n```\\n\\nLogically both are almost kind of same but then why the difference in execution"
                    }
                ]
            },
            {
                "id": 1752307,
                "content": [
                    {
                        "username": "umanggcoder",
                        "content": "Time Limit Exceeded\\nLast Executed Input\\n299 / 305 testcases passed\\nx =\\n1.00000\\nn =\\n2147483647\\ncan anyone please tell me why i am getting tle ?"
                    },
                    {
                        "username": "ritesh1224",
                        "content": "double ans = Math.pow(x,n);\\n             return ans;"
                    },
                    {
                        "username": "levi_kapil",
                        "content": "So firstly i code my code run 301 case out 305 i made condition after running test case so finally this one is my final code of C++ \\n\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double t = x; \\n    if(x==1)\\n    {\\n        return 1; \\n    }\\n    if(x==0 )\\n    {\\n        return 0 ; \\n    }\\n\\n   if (x>1.0 && n<-2147483647) \\n   {return 0;\\n   }\\n    if(x==-1)\\n    {\\n        if(n%2==0)\\n        {\\n        return 1; }\\n        else\\n        {\\n            return -1; \\n        }\\n\\n    }\\n\\n        if(n>0){\\n        for(int i=1; i<n; i++)\\n        {\\n            x= x*t; \\n        }\\n        }\\n        else if(n==0)\\n    \\n    {\\n        return 1; \\n    }\\n        else\\n        {\\n            for (int i = 1; i>n; i--)\\n            {  x = x/t; \\n            } \\n        } \\n        return x; \\n    }\\n};\\n\\n"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This happens to me in almost every medium/hard difficulty question that I attempt. In this one, I am able to get 299/305 testcases correctly, but there are some corner cases which I cannot figure out any solution for."
                    },
                    {
                        "username": "YaJohny",
                        "content": "Who knows how to fix 291 testcase\nTime Limit Exceed\nx = 0.00001\nn = 10 digit number"
                    },
                    {
                        "username": "homesomerset",
                        "content": "just got passed with a solution in java that use pretty interesting bit operations. one hint..., every n is represented in binary mode on a computer. let\\'s say n= 10, it\\'s actually 1010 in binary. it basically means 2^3 + 2^1 = 10. 2^1 means x*x, 2^3 means ret = x*x, and ret = ret*ret, then again re= ret*ret. it\\'s basically worst case 496 multiplies. best case 1 or 2 multiplies. it\\'s O(1) with no risk of stack overflow, and corner case free. "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "Here is my Easy Brute force solution But its last 6 TC are failing\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double res=0;\\n        if(n==0) return 1;\\n        if(n>0)\\n        {\\n            double temp = x;\\n            for(int i=1;i<n;i++)\\n            {\\n                temp=temp*x;\\n            }\\n            res = temp;\\n        }\\n        if(n<0)\\n        {\\n            double temp = x;\\n            for(int i=1;i<abs(n);i++)\\n            {\\n                temp=temp*x;\\n            }\\n            res = 1/temp;\\n        }\\n        return res;\\n    }\\n};\\n\\nCould anyone correct this brute force so It can be accepted? \\n\\nUpvote Please"
                    },
                    {
                        "username": "noorpinger",
                        "content": "says 305/305 cases passed but won\\'t let me submit because it says time limit exceeded \\uD83E\\uDD37\\u200D\\u2642\\uFE0F"
                    },
                    {
                        "username": "Sushant_012003",
                        "content": "Its pretty easy \\nreturn pow(x, n) and done as simple as that\\ntime Complexity O(1)"
                    },
                    {
                        "username": "sijils",
                        "content": "Please help me in understanding why for my below code i am getting \"maximum recursion depth exceeded\" for x=0.00001 and n=2147483647\\n```\\n    def myPow(self, x: float, n: int) -> float:\\n        if n==0:\\n            return 1\\n        return x*self.myPow(x,n-1) if n>0 else self.myPow(x,n+1)/x\\n```\\nBut the below code seems to work fine\\n```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:      \\n\\n        if n==0:\\n            return 1\\n\\n        if n < 0:\\n            x = 1/x\\n            n = -n\\n\\n        return x*pow(x,n-1)\\n```\\n\\nLogically both are almost kind of same but then why the difference in execution"
                    }
                ]
            },
            {
                "id": 1752129,
                "content": [
                    {
                        "username": "umanggcoder",
                        "content": "Time Limit Exceeded\\nLast Executed Input\\n299 / 305 testcases passed\\nx =\\n1.00000\\nn =\\n2147483647\\ncan anyone please tell me why i am getting tle ?"
                    },
                    {
                        "username": "ritesh1224",
                        "content": "double ans = Math.pow(x,n);\\n             return ans;"
                    },
                    {
                        "username": "levi_kapil",
                        "content": "So firstly i code my code run 301 case out 305 i made condition after running test case so finally this one is my final code of C++ \\n\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double t = x; \\n    if(x==1)\\n    {\\n        return 1; \\n    }\\n    if(x==0 )\\n    {\\n        return 0 ; \\n    }\\n\\n   if (x>1.0 && n<-2147483647) \\n   {return 0;\\n   }\\n    if(x==-1)\\n    {\\n        if(n%2==0)\\n        {\\n        return 1; }\\n        else\\n        {\\n            return -1; \\n        }\\n\\n    }\\n\\n        if(n>0){\\n        for(int i=1; i<n; i++)\\n        {\\n            x= x*t; \\n        }\\n        }\\n        else if(n==0)\\n    \\n    {\\n        return 1; \\n    }\\n        else\\n        {\\n            for (int i = 1; i>n; i--)\\n            {  x = x/t; \\n            } \\n        } \\n        return x; \\n    }\\n};\\n\\n"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This happens to me in almost every medium/hard difficulty question that I attempt. In this one, I am able to get 299/305 testcases correctly, but there are some corner cases which I cannot figure out any solution for."
                    },
                    {
                        "username": "YaJohny",
                        "content": "Who knows how to fix 291 testcase\nTime Limit Exceed\nx = 0.00001\nn = 10 digit number"
                    },
                    {
                        "username": "homesomerset",
                        "content": "just got passed with a solution in java that use pretty interesting bit operations. one hint..., every n is represented in binary mode on a computer. let\\'s say n= 10, it\\'s actually 1010 in binary. it basically means 2^3 + 2^1 = 10. 2^1 means x*x, 2^3 means ret = x*x, and ret = ret*ret, then again re= ret*ret. it\\'s basically worst case 496 multiplies. best case 1 or 2 multiplies. it\\'s O(1) with no risk of stack overflow, and corner case free. "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "Here is my Easy Brute force solution But its last 6 TC are failing\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double res=0;\\n        if(n==0) return 1;\\n        if(n>0)\\n        {\\n            double temp = x;\\n            for(int i=1;i<n;i++)\\n            {\\n                temp=temp*x;\\n            }\\n            res = temp;\\n        }\\n        if(n<0)\\n        {\\n            double temp = x;\\n            for(int i=1;i<abs(n);i++)\\n            {\\n                temp=temp*x;\\n            }\\n            res = 1/temp;\\n        }\\n        return res;\\n    }\\n};\\n\\nCould anyone correct this brute force so It can be accepted? \\n\\nUpvote Please"
                    },
                    {
                        "username": "noorpinger",
                        "content": "says 305/305 cases passed but won\\'t let me submit because it says time limit exceeded \\uD83E\\uDD37\\u200D\\u2642\\uFE0F"
                    },
                    {
                        "username": "Sushant_012003",
                        "content": "Its pretty easy \\nreturn pow(x, n) and done as simple as that\\ntime Complexity O(1)"
                    },
                    {
                        "username": "sijils",
                        "content": "Please help me in understanding why for my below code i am getting \"maximum recursion depth exceeded\" for x=0.00001 and n=2147483647\\n```\\n    def myPow(self, x: float, n: int) -> float:\\n        if n==0:\\n            return 1\\n        return x*self.myPow(x,n-1) if n>0 else self.myPow(x,n+1)/x\\n```\\nBut the below code seems to work fine\\n```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:      \\n\\n        if n==0:\\n            return 1\\n\\n        if n < 0:\\n            x = 1/x\\n            n = -n\\n\\n        return x*pow(x,n-1)\\n```\\n\\nLogically both are almost kind of same but then why the difference in execution"
                    }
                ]
            },
            {
                "id": 1749364,
                "content": [
                    {
                        "username": "umanggcoder",
                        "content": "Time Limit Exceeded\\nLast Executed Input\\n299 / 305 testcases passed\\nx =\\n1.00000\\nn =\\n2147483647\\ncan anyone please tell me why i am getting tle ?"
                    },
                    {
                        "username": "ritesh1224",
                        "content": "double ans = Math.pow(x,n);\\n             return ans;"
                    },
                    {
                        "username": "levi_kapil",
                        "content": "So firstly i code my code run 301 case out 305 i made condition after running test case so finally this one is my final code of C++ \\n\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double t = x; \\n    if(x==1)\\n    {\\n        return 1; \\n    }\\n    if(x==0 )\\n    {\\n        return 0 ; \\n    }\\n\\n   if (x>1.0 && n<-2147483647) \\n   {return 0;\\n   }\\n    if(x==-1)\\n    {\\n        if(n%2==0)\\n        {\\n        return 1; }\\n        else\\n        {\\n            return -1; \\n        }\\n\\n    }\\n\\n        if(n>0){\\n        for(int i=1; i<n; i++)\\n        {\\n            x= x*t; \\n        }\\n        }\\n        else if(n==0)\\n    \\n    {\\n        return 1; \\n    }\\n        else\\n        {\\n            for (int i = 1; i>n; i--)\\n            {  x = x/t; \\n            } \\n        } \\n        return x; \\n    }\\n};\\n\\n"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This happens to me in almost every medium/hard difficulty question that I attempt. In this one, I am able to get 299/305 testcases correctly, but there are some corner cases which I cannot figure out any solution for."
                    },
                    {
                        "username": "YaJohny",
                        "content": "Who knows how to fix 291 testcase\nTime Limit Exceed\nx = 0.00001\nn = 10 digit number"
                    },
                    {
                        "username": "homesomerset",
                        "content": "just got passed with a solution in java that use pretty interesting bit operations. one hint..., every n is represented in binary mode on a computer. let\\'s say n= 10, it\\'s actually 1010 in binary. it basically means 2^3 + 2^1 = 10. 2^1 means x*x, 2^3 means ret = x*x, and ret = ret*ret, then again re= ret*ret. it\\'s basically worst case 496 multiplies. best case 1 or 2 multiplies. it\\'s O(1) with no risk of stack overflow, and corner case free. "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "Here is my Easy Brute force solution But its last 6 TC are failing\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double res=0;\\n        if(n==0) return 1;\\n        if(n>0)\\n        {\\n            double temp = x;\\n            for(int i=1;i<n;i++)\\n            {\\n                temp=temp*x;\\n            }\\n            res = temp;\\n        }\\n        if(n<0)\\n        {\\n            double temp = x;\\n            for(int i=1;i<abs(n);i++)\\n            {\\n                temp=temp*x;\\n            }\\n            res = 1/temp;\\n        }\\n        return res;\\n    }\\n};\\n\\nCould anyone correct this brute force so It can be accepted? \\n\\nUpvote Please"
                    },
                    {
                        "username": "noorpinger",
                        "content": "says 305/305 cases passed but won\\'t let me submit because it says time limit exceeded \\uD83E\\uDD37\\u200D\\u2642\\uFE0F"
                    },
                    {
                        "username": "Sushant_012003",
                        "content": "Its pretty easy \\nreturn pow(x, n) and done as simple as that\\ntime Complexity O(1)"
                    },
                    {
                        "username": "sijils",
                        "content": "Please help me in understanding why for my below code i am getting \"maximum recursion depth exceeded\" for x=0.00001 and n=2147483647\\n```\\n    def myPow(self, x: float, n: int) -> float:\\n        if n==0:\\n            return 1\\n        return x*self.myPow(x,n-1) if n>0 else self.myPow(x,n+1)/x\\n```\\nBut the below code seems to work fine\\n```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:      \\n\\n        if n==0:\\n            return 1\\n\\n        if n < 0:\\n            x = 1/x\\n            n = -n\\n\\n        return x*pow(x,n-1)\\n```\\n\\nLogically both are almost kind of same but then why the difference in execution"
                    }
                ]
            },
            {
                "id": 1745478,
                "content": [
                    {
                        "username": "umanggcoder",
                        "content": "Time Limit Exceeded\\nLast Executed Input\\n299 / 305 testcases passed\\nx =\\n1.00000\\nn =\\n2147483647\\ncan anyone please tell me why i am getting tle ?"
                    },
                    {
                        "username": "ritesh1224",
                        "content": "double ans = Math.pow(x,n);\\n             return ans;"
                    },
                    {
                        "username": "levi_kapil",
                        "content": "So firstly i code my code run 301 case out 305 i made condition after running test case so finally this one is my final code of C++ \\n\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double t = x; \\n    if(x==1)\\n    {\\n        return 1; \\n    }\\n    if(x==0 )\\n    {\\n        return 0 ; \\n    }\\n\\n   if (x>1.0 && n<-2147483647) \\n   {return 0;\\n   }\\n    if(x==-1)\\n    {\\n        if(n%2==0)\\n        {\\n        return 1; }\\n        else\\n        {\\n            return -1; \\n        }\\n\\n    }\\n\\n        if(n>0){\\n        for(int i=1; i<n; i++)\\n        {\\n            x= x*t; \\n        }\\n        }\\n        else if(n==0)\\n    \\n    {\\n        return 1; \\n    }\\n        else\\n        {\\n            for (int i = 1; i>n; i--)\\n            {  x = x/t; \\n            } \\n        } \\n        return x; \\n    }\\n};\\n\\n"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This happens to me in almost every medium/hard difficulty question that I attempt. In this one, I am able to get 299/305 testcases correctly, but there are some corner cases which I cannot figure out any solution for."
                    },
                    {
                        "username": "YaJohny",
                        "content": "Who knows how to fix 291 testcase\nTime Limit Exceed\nx = 0.00001\nn = 10 digit number"
                    },
                    {
                        "username": "homesomerset",
                        "content": "just got passed with a solution in java that use pretty interesting bit operations. one hint..., every n is represented in binary mode on a computer. let\\'s say n= 10, it\\'s actually 1010 in binary. it basically means 2^3 + 2^1 = 10. 2^1 means x*x, 2^3 means ret = x*x, and ret = ret*ret, then again re= ret*ret. it\\'s basically worst case 496 multiplies. best case 1 or 2 multiplies. it\\'s O(1) with no risk of stack overflow, and corner case free. "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "Here is my Easy Brute force solution But its last 6 TC are failing\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double res=0;\\n        if(n==0) return 1;\\n        if(n>0)\\n        {\\n            double temp = x;\\n            for(int i=1;i<n;i++)\\n            {\\n                temp=temp*x;\\n            }\\n            res = temp;\\n        }\\n        if(n<0)\\n        {\\n            double temp = x;\\n            for(int i=1;i<abs(n);i++)\\n            {\\n                temp=temp*x;\\n            }\\n            res = 1/temp;\\n        }\\n        return res;\\n    }\\n};\\n\\nCould anyone correct this brute force so It can be accepted? \\n\\nUpvote Please"
                    },
                    {
                        "username": "noorpinger",
                        "content": "says 305/305 cases passed but won\\'t let me submit because it says time limit exceeded \\uD83E\\uDD37\\u200D\\u2642\\uFE0F"
                    },
                    {
                        "username": "Sushant_012003",
                        "content": "Its pretty easy \\nreturn pow(x, n) and done as simple as that\\ntime Complexity O(1)"
                    },
                    {
                        "username": "sijils",
                        "content": "Please help me in understanding why for my below code i am getting \"maximum recursion depth exceeded\" for x=0.00001 and n=2147483647\\n```\\n    def myPow(self, x: float, n: int) -> float:\\n        if n==0:\\n            return 1\\n        return x*self.myPow(x,n-1) if n>0 else self.myPow(x,n+1)/x\\n```\\nBut the below code seems to work fine\\n```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:      \\n\\n        if n==0:\\n            return 1\\n\\n        if n < 0:\\n            x = 1/x\\n            n = -n\\n\\n        return x*pow(x,n-1)\\n```\\n\\nLogically both are almost kind of same but then why the difference in execution"
                    }
                ]
            },
            {
                "id": 1745101,
                "content": [
                    {
                        "username": "umanggcoder",
                        "content": "Time Limit Exceeded\\nLast Executed Input\\n299 / 305 testcases passed\\nx =\\n1.00000\\nn =\\n2147483647\\ncan anyone please tell me why i am getting tle ?"
                    },
                    {
                        "username": "ritesh1224",
                        "content": "double ans = Math.pow(x,n);\\n             return ans;"
                    },
                    {
                        "username": "levi_kapil",
                        "content": "So firstly i code my code run 301 case out 305 i made condition after running test case so finally this one is my final code of C++ \\n\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double t = x; \\n    if(x==1)\\n    {\\n        return 1; \\n    }\\n    if(x==0 )\\n    {\\n        return 0 ; \\n    }\\n\\n   if (x>1.0 && n<-2147483647) \\n   {return 0;\\n   }\\n    if(x==-1)\\n    {\\n        if(n%2==0)\\n        {\\n        return 1; }\\n        else\\n        {\\n            return -1; \\n        }\\n\\n    }\\n\\n        if(n>0){\\n        for(int i=1; i<n; i++)\\n        {\\n            x= x*t; \\n        }\\n        }\\n        else if(n==0)\\n    \\n    {\\n        return 1; \\n    }\\n        else\\n        {\\n            for (int i = 1; i>n; i--)\\n            {  x = x/t; \\n            } \\n        } \\n        return x; \\n    }\\n};\\n\\n"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This happens to me in almost every medium/hard difficulty question that I attempt. In this one, I am able to get 299/305 testcases correctly, but there are some corner cases which I cannot figure out any solution for."
                    },
                    {
                        "username": "YaJohny",
                        "content": "Who knows how to fix 291 testcase\nTime Limit Exceed\nx = 0.00001\nn = 10 digit number"
                    },
                    {
                        "username": "homesomerset",
                        "content": "just got passed with a solution in java that use pretty interesting bit operations. one hint..., every n is represented in binary mode on a computer. let\\'s say n= 10, it\\'s actually 1010 in binary. it basically means 2^3 + 2^1 = 10. 2^1 means x*x, 2^3 means ret = x*x, and ret = ret*ret, then again re= ret*ret. it\\'s basically worst case 496 multiplies. best case 1 or 2 multiplies. it\\'s O(1) with no risk of stack overflow, and corner case free. "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "Here is my Easy Brute force solution But its last 6 TC are failing\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double res=0;\\n        if(n==0) return 1;\\n        if(n>0)\\n        {\\n            double temp = x;\\n            for(int i=1;i<n;i++)\\n            {\\n                temp=temp*x;\\n            }\\n            res = temp;\\n        }\\n        if(n<0)\\n        {\\n            double temp = x;\\n            for(int i=1;i<abs(n);i++)\\n            {\\n                temp=temp*x;\\n            }\\n            res = 1/temp;\\n        }\\n        return res;\\n    }\\n};\\n\\nCould anyone correct this brute force so It can be accepted? \\n\\nUpvote Please"
                    },
                    {
                        "username": "noorpinger",
                        "content": "says 305/305 cases passed but won\\'t let me submit because it says time limit exceeded \\uD83E\\uDD37\\u200D\\u2642\\uFE0F"
                    },
                    {
                        "username": "Sushant_012003",
                        "content": "Its pretty easy \\nreturn pow(x, n) and done as simple as that\\ntime Complexity O(1)"
                    },
                    {
                        "username": "sijils",
                        "content": "Please help me in understanding why for my below code i am getting \"maximum recursion depth exceeded\" for x=0.00001 and n=2147483647\\n```\\n    def myPow(self, x: float, n: int) -> float:\\n        if n==0:\\n            return 1\\n        return x*self.myPow(x,n-1) if n>0 else self.myPow(x,n+1)/x\\n```\\nBut the below code seems to work fine\\n```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:      \\n\\n        if n==0:\\n            return 1\\n\\n        if n < 0:\\n            x = 1/x\\n            n = -n\\n\\n        return x*pow(x,n-1)\\n```\\n\\nLogically both are almost kind of same but then why the difference in execution"
                    }
                ]
            },
            {
                "id": 1743090,
                "content": [
                    {
                        "username": "umanggcoder",
                        "content": "Time Limit Exceeded\\nLast Executed Input\\n299 / 305 testcases passed\\nx =\\n1.00000\\nn =\\n2147483647\\ncan anyone please tell me why i am getting tle ?"
                    },
                    {
                        "username": "ritesh1224",
                        "content": "double ans = Math.pow(x,n);\\n             return ans;"
                    },
                    {
                        "username": "levi_kapil",
                        "content": "So firstly i code my code run 301 case out 305 i made condition after running test case so finally this one is my final code of C++ \\n\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double t = x; \\n    if(x==1)\\n    {\\n        return 1; \\n    }\\n    if(x==0 )\\n    {\\n        return 0 ; \\n    }\\n\\n   if (x>1.0 && n<-2147483647) \\n   {return 0;\\n   }\\n    if(x==-1)\\n    {\\n        if(n%2==0)\\n        {\\n        return 1; }\\n        else\\n        {\\n            return -1; \\n        }\\n\\n    }\\n\\n        if(n>0){\\n        for(int i=1; i<n; i++)\\n        {\\n            x= x*t; \\n        }\\n        }\\n        else if(n==0)\\n    \\n    {\\n        return 1; \\n    }\\n        else\\n        {\\n            for (int i = 1; i>n; i--)\\n            {  x = x/t; \\n            } \\n        } \\n        return x; \\n    }\\n};\\n\\n"
                    },
                    {
                        "username": "satyam_rai15",
                        "content": "This happens to me in almost every medium/hard difficulty question that I attempt. In this one, I am able to get 299/305 testcases correctly, but there are some corner cases which I cannot figure out any solution for."
                    },
                    {
                        "username": "YaJohny",
                        "content": "Who knows how to fix 291 testcase\nTime Limit Exceed\nx = 0.00001\nn = 10 digit number"
                    },
                    {
                        "username": "homesomerset",
                        "content": "just got passed with a solution in java that use pretty interesting bit operations. one hint..., every n is represented in binary mode on a computer. let\\'s say n= 10, it\\'s actually 1010 in binary. it basically means 2^3 + 2^1 = 10. 2^1 means x*x, 2^3 means ret = x*x, and ret = ret*ret, then again re= ret*ret. it\\'s basically worst case 496 multiplies. best case 1 or 2 multiplies. it\\'s O(1) with no risk of stack overflow, and corner case free. "
                    },
                    {
                        "username": "Amarjeet2909",
                        "content": "Here is my Easy Brute force solution But its last 6 TC are failing\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double res=0;\\n        if(n==0) return 1;\\n        if(n>0)\\n        {\\n            double temp = x;\\n            for(int i=1;i<n;i++)\\n            {\\n                temp=temp*x;\\n            }\\n            res = temp;\\n        }\\n        if(n<0)\\n        {\\n            double temp = x;\\n            for(int i=1;i<abs(n);i++)\\n            {\\n                temp=temp*x;\\n            }\\n            res = 1/temp;\\n        }\\n        return res;\\n    }\\n};\\n\\nCould anyone correct this brute force so It can be accepted? \\n\\nUpvote Please"
                    },
                    {
                        "username": "noorpinger",
                        "content": "says 305/305 cases passed but won\\'t let me submit because it says time limit exceeded \\uD83E\\uDD37\\u200D\\u2642\\uFE0F"
                    },
                    {
                        "username": "Sushant_012003",
                        "content": "Its pretty easy \\nreturn pow(x, n) and done as simple as that\\ntime Complexity O(1)"
                    },
                    {
                        "username": "sijils",
                        "content": "Please help me in understanding why for my below code i am getting \"maximum recursion depth exceeded\" for x=0.00001 and n=2147483647\\n```\\n    def myPow(self, x: float, n: int) -> float:\\n        if n==0:\\n            return 1\\n        return x*self.myPow(x,n-1) if n>0 else self.myPow(x,n+1)/x\\n```\\nBut the below code seems to work fine\\n```\\nclass Solution:\\n    def myPow(self, x: float, n: int) -> float:      \\n\\n        if n==0:\\n            return 1\\n\\n        if n < 0:\\n            x = 1/x\\n            n = -n\\n\\n        return x*pow(x,n-1)\\n```\\n\\nLogically both are almost kind of same but then why the difference in execution"
                    }
                ]
            },
            {
                "id": 1734773,
                "content": [
                    {
                        "username": "tarikin",
                        "content": "Time Limit Exceeded n  = -2147483648, do we really need to check if n is -2147483648 and return fixed 0 value"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "if n is negative \\n    return 1/pow(x,n)"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "Easiest Approach\\nHint : Recursive approach\\n\\ndouble pow(double x, int n){\\n//base case(think)\\nif n is even : pow(x,n) = pow(x,n/2) * pow(x,n/2);\\nif n is odd : pow(x,n) = x * pow(x,n/2) * pow(x,n/2);\\n}\\n\\nmain(){\\nif(n is positive)\\n    return pow(x,n);\\nif(n is negative) \\n    return 1 / pow(x,n);\\n"
                    },
                    {
                        "username": "bhushannalawade318",
                        "content": "why my code isn\\'t working: \\n \\ndouble myPow(double x, int n) {\\n        double ans = 1.00000;\\n        long long nn = n;\\n        if(nn<0) nn = -1 * nn;\\n        while(nn){\\n            if(nn%2){\\n                ans = ans * x;\\n                nn = nn-1;\\n            }\\n            else{\\n                ans = x*x;\\n                nn=nn/2;\\n            }\\n        }\\n        if(n<0) ans=(double)(1.0)/(double)(ans);\\n        return ans; \\n    }"
                    },
                    {
                        "username": "jainnamya1306",
                        "content": "Please tell the mistake in this c++ code as it is giving Runtime error with deadly signal\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        long long nn=n;\\n\\n        if(nn<0.0) nn=-1*nn;\\n        //base condition\\n        if(nn==0.0) return 1.0;\\n        \\n        if(nn>0.0) return ((double)(x*myPow(x,n-1)));\\n\\n        return ((double)(1.0)/(double)(x*myPow(x,n-1)));\\n    }\\n};"
                    },
                    {
                        "username": "matthewjiao",
                        "content": "Help! I wrote a solution which I believe to run in`O(log(n)`time and`O(1)`space, but when I submit, it says it's in the bottom 5% of solutions. I'm unsure why? Thanks in advanced. Apologies for the formatting.\n\nconst pow = (x, n) => {\n   if (n === 0) return 1;\n\n   if (n < 0) {\n       n = -n;\n       x = 1/x;\n   }\n\n   let val = x;\n   for (let i = 1; i < n; ++i) {\n       if (i * 2 <= n) {\n        val *= val;\n        i *= 2;\n        i--;\n       } else {\n        val *= x;\n       }\n   } \n\n   return val;  \n}"
                    },
                    {
                        "username": "Shashank_Jangir17",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double ans=0;\\n        ans=pow(x,n);\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "Arnabiswas99",
                        "content": "Why this code got time limit exceed for input (INT_MAX)^(0.00001)?\\nclass Solution {\\npublic:\\ndouble helper(double x, int n)\\n{\\n        if(n==0) return 1;\\n        if(n==1) return x;\\n        if(n%2==0) return myPow(x,n/2)*myPow(x,n/2);\\n        else return x*myPow(x,n/2)*myPow(x,n/2);\\n}\\n    double myPow(double x, int n) {\\n        if(n>=0) return helper(x,n);\\n        else\\n        {\\n            double ans;\\n            ans=helper(x,(-1)*n);\\n            ans=1/ans;\\n            return ans;\\n        }\\n    }\\n};\\nThank You."
                    },
                    {
                        "username": "khetaj22",
                        "content": "WHY STACKOVERFLOW...\n\nclass Solution \n{\n    public double myPow(double x, int n) \n    {\n        if(n == 0)\n        {\n            return 1;\n        }\n            return x * myPow(x, n - 1);\n    }\n} "
                    },
                    {
                        "username": "anavale",
                        "content": "Why is this failing? It says I passed all the testcases however it says that I reached the time limit when \"x=\" with no value assigned to it.\\n \\n double myPow(double x, int n){\\n    double sum = 1;\\n\\n    if(isnan(x) != 0){\\n        sum = 0;\\n    } else if (x == 1){\\n        sum = 1;\\n    }else if(x == -1){\\n        if(n%2 == 1){ //If n is odd\\n            sum = -1;\\n        }else{\\n            sum = 1;\\n        }\\n    }else if(n < -100000){\\n        sum = 0;\\n    }else if(n>0){\\n        for(int i = 0; i < n; i++){\\n            sum = sum * x;\\n        }\\n    }else if(n == 0){\\n        sum = 1;\\n    }else if(n<0){\\n        for(int j = 0; j < abs(n); j++){\\n            sum = sum * x;\\n        }\\n        sum = 1/sum;\\n    }\\n    \\n    return sum;\\n}"
                    },
                    {
                        "username": "shivang_tripathi",
                        "content": "here is the my solution for this question, this solution is showing time limit exceeded, can anyone tell me how can optmize it more efficiently so the time limit is not exceeded\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n    double pow = x; \\n    if(n == 0){\\n      return (double)1;\\n    } \\n    if (n < 0){\\n       n = n*(-1);\\n       pow = (1/x);\\n    for(int i =1; i < n; i++){\\n       pow = pow*(1/x);\\n       }\\n     }else{\\n     for(int i =1; i < n; i++){\\n         pow = pow*x;\\n    }\\n    }\\n    return pow;\\n  }\\n    }"
                    }
                ]
            },
            {
                "id": 1734090,
                "content": [
                    {
                        "username": "tarikin",
                        "content": "Time Limit Exceeded n  = -2147483648, do we really need to check if n is -2147483648 and return fixed 0 value"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "if n is negative \\n    return 1/pow(x,n)"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "Easiest Approach\\nHint : Recursive approach\\n\\ndouble pow(double x, int n){\\n//base case(think)\\nif n is even : pow(x,n) = pow(x,n/2) * pow(x,n/2);\\nif n is odd : pow(x,n) = x * pow(x,n/2) * pow(x,n/2);\\n}\\n\\nmain(){\\nif(n is positive)\\n    return pow(x,n);\\nif(n is negative) \\n    return 1 / pow(x,n);\\n"
                    },
                    {
                        "username": "bhushannalawade318",
                        "content": "why my code isn\\'t working: \\n \\ndouble myPow(double x, int n) {\\n        double ans = 1.00000;\\n        long long nn = n;\\n        if(nn<0) nn = -1 * nn;\\n        while(nn){\\n            if(nn%2){\\n                ans = ans * x;\\n                nn = nn-1;\\n            }\\n            else{\\n                ans = x*x;\\n                nn=nn/2;\\n            }\\n        }\\n        if(n<0) ans=(double)(1.0)/(double)(ans);\\n        return ans; \\n    }"
                    },
                    {
                        "username": "jainnamya1306",
                        "content": "Please tell the mistake in this c++ code as it is giving Runtime error with deadly signal\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        long long nn=n;\\n\\n        if(nn<0.0) nn=-1*nn;\\n        //base condition\\n        if(nn==0.0) return 1.0;\\n        \\n        if(nn>0.0) return ((double)(x*myPow(x,n-1)));\\n\\n        return ((double)(1.0)/(double)(x*myPow(x,n-1)));\\n    }\\n};"
                    },
                    {
                        "username": "matthewjiao",
                        "content": "Help! I wrote a solution which I believe to run in`O(log(n)`time and`O(1)`space, but when I submit, it says it's in the bottom 5% of solutions. I'm unsure why? Thanks in advanced. Apologies for the formatting.\n\nconst pow = (x, n) => {\n   if (n === 0) return 1;\n\n   if (n < 0) {\n       n = -n;\n       x = 1/x;\n   }\n\n   let val = x;\n   for (let i = 1; i < n; ++i) {\n       if (i * 2 <= n) {\n        val *= val;\n        i *= 2;\n        i--;\n       } else {\n        val *= x;\n       }\n   } \n\n   return val;  \n}"
                    },
                    {
                        "username": "Shashank_Jangir17",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double ans=0;\\n        ans=pow(x,n);\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "Arnabiswas99",
                        "content": "Why this code got time limit exceed for input (INT_MAX)^(0.00001)?\\nclass Solution {\\npublic:\\ndouble helper(double x, int n)\\n{\\n        if(n==0) return 1;\\n        if(n==1) return x;\\n        if(n%2==0) return myPow(x,n/2)*myPow(x,n/2);\\n        else return x*myPow(x,n/2)*myPow(x,n/2);\\n}\\n    double myPow(double x, int n) {\\n        if(n>=0) return helper(x,n);\\n        else\\n        {\\n            double ans;\\n            ans=helper(x,(-1)*n);\\n            ans=1/ans;\\n            return ans;\\n        }\\n    }\\n};\\nThank You."
                    },
                    {
                        "username": "khetaj22",
                        "content": "WHY STACKOVERFLOW...\n\nclass Solution \n{\n    public double myPow(double x, int n) \n    {\n        if(n == 0)\n        {\n            return 1;\n        }\n            return x * myPow(x, n - 1);\n    }\n} "
                    },
                    {
                        "username": "anavale",
                        "content": "Why is this failing? It says I passed all the testcases however it says that I reached the time limit when \"x=\" with no value assigned to it.\\n \\n double myPow(double x, int n){\\n    double sum = 1;\\n\\n    if(isnan(x) != 0){\\n        sum = 0;\\n    } else if (x == 1){\\n        sum = 1;\\n    }else if(x == -1){\\n        if(n%2 == 1){ //If n is odd\\n            sum = -1;\\n        }else{\\n            sum = 1;\\n        }\\n    }else if(n < -100000){\\n        sum = 0;\\n    }else if(n>0){\\n        for(int i = 0; i < n; i++){\\n            sum = sum * x;\\n        }\\n    }else if(n == 0){\\n        sum = 1;\\n    }else if(n<0){\\n        for(int j = 0; j < abs(n); j++){\\n            sum = sum * x;\\n        }\\n        sum = 1/sum;\\n    }\\n    \\n    return sum;\\n}"
                    },
                    {
                        "username": "shivang_tripathi",
                        "content": "here is the my solution for this question, this solution is showing time limit exceeded, can anyone tell me how can optmize it more efficiently so the time limit is not exceeded\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n    double pow = x; \\n    if(n == 0){\\n      return (double)1;\\n    } \\n    if (n < 0){\\n       n = n*(-1);\\n       pow = (1/x);\\n    for(int i =1; i < n; i++){\\n       pow = pow*(1/x);\\n       }\\n     }else{\\n     for(int i =1; i < n; i++){\\n         pow = pow*x;\\n    }\\n    }\\n    return pow;\\n  }\\n    }"
                    }
                ]
            },
            {
                "id": 1733976,
                "content": [
                    {
                        "username": "tarikin",
                        "content": "Time Limit Exceeded n  = -2147483648, do we really need to check if n is -2147483648 and return fixed 0 value"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "if n is negative \\n    return 1/pow(x,n)"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "Easiest Approach\\nHint : Recursive approach\\n\\ndouble pow(double x, int n){\\n//base case(think)\\nif n is even : pow(x,n) = pow(x,n/2) * pow(x,n/2);\\nif n is odd : pow(x,n) = x * pow(x,n/2) * pow(x,n/2);\\n}\\n\\nmain(){\\nif(n is positive)\\n    return pow(x,n);\\nif(n is negative) \\n    return 1 / pow(x,n);\\n"
                    },
                    {
                        "username": "bhushannalawade318",
                        "content": "why my code isn\\'t working: \\n \\ndouble myPow(double x, int n) {\\n        double ans = 1.00000;\\n        long long nn = n;\\n        if(nn<0) nn = -1 * nn;\\n        while(nn){\\n            if(nn%2){\\n                ans = ans * x;\\n                nn = nn-1;\\n            }\\n            else{\\n                ans = x*x;\\n                nn=nn/2;\\n            }\\n        }\\n        if(n<0) ans=(double)(1.0)/(double)(ans);\\n        return ans; \\n    }"
                    },
                    {
                        "username": "jainnamya1306",
                        "content": "Please tell the mistake in this c++ code as it is giving Runtime error with deadly signal\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        long long nn=n;\\n\\n        if(nn<0.0) nn=-1*nn;\\n        //base condition\\n        if(nn==0.0) return 1.0;\\n        \\n        if(nn>0.0) return ((double)(x*myPow(x,n-1)));\\n\\n        return ((double)(1.0)/(double)(x*myPow(x,n-1)));\\n    }\\n};"
                    },
                    {
                        "username": "matthewjiao",
                        "content": "Help! I wrote a solution which I believe to run in`O(log(n)`time and`O(1)`space, but when I submit, it says it's in the bottom 5% of solutions. I'm unsure why? Thanks in advanced. Apologies for the formatting.\n\nconst pow = (x, n) => {\n   if (n === 0) return 1;\n\n   if (n < 0) {\n       n = -n;\n       x = 1/x;\n   }\n\n   let val = x;\n   for (let i = 1; i < n; ++i) {\n       if (i * 2 <= n) {\n        val *= val;\n        i *= 2;\n        i--;\n       } else {\n        val *= x;\n       }\n   } \n\n   return val;  \n}"
                    },
                    {
                        "username": "Shashank_Jangir17",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double ans=0;\\n        ans=pow(x,n);\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "Arnabiswas99",
                        "content": "Why this code got time limit exceed for input (INT_MAX)^(0.00001)?\\nclass Solution {\\npublic:\\ndouble helper(double x, int n)\\n{\\n        if(n==0) return 1;\\n        if(n==1) return x;\\n        if(n%2==0) return myPow(x,n/2)*myPow(x,n/2);\\n        else return x*myPow(x,n/2)*myPow(x,n/2);\\n}\\n    double myPow(double x, int n) {\\n        if(n>=0) return helper(x,n);\\n        else\\n        {\\n            double ans;\\n            ans=helper(x,(-1)*n);\\n            ans=1/ans;\\n            return ans;\\n        }\\n    }\\n};\\nThank You."
                    },
                    {
                        "username": "khetaj22",
                        "content": "WHY STACKOVERFLOW...\n\nclass Solution \n{\n    public double myPow(double x, int n) \n    {\n        if(n == 0)\n        {\n            return 1;\n        }\n            return x * myPow(x, n - 1);\n    }\n} "
                    },
                    {
                        "username": "anavale",
                        "content": "Why is this failing? It says I passed all the testcases however it says that I reached the time limit when \"x=\" with no value assigned to it.\\n \\n double myPow(double x, int n){\\n    double sum = 1;\\n\\n    if(isnan(x) != 0){\\n        sum = 0;\\n    } else if (x == 1){\\n        sum = 1;\\n    }else if(x == -1){\\n        if(n%2 == 1){ //If n is odd\\n            sum = -1;\\n        }else{\\n            sum = 1;\\n        }\\n    }else if(n < -100000){\\n        sum = 0;\\n    }else if(n>0){\\n        for(int i = 0; i < n; i++){\\n            sum = sum * x;\\n        }\\n    }else if(n == 0){\\n        sum = 1;\\n    }else if(n<0){\\n        for(int j = 0; j < abs(n); j++){\\n            sum = sum * x;\\n        }\\n        sum = 1/sum;\\n    }\\n    \\n    return sum;\\n}"
                    },
                    {
                        "username": "shivang_tripathi",
                        "content": "here is the my solution for this question, this solution is showing time limit exceeded, can anyone tell me how can optmize it more efficiently so the time limit is not exceeded\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n    double pow = x; \\n    if(n == 0){\\n      return (double)1;\\n    } \\n    if (n < 0){\\n       n = n*(-1);\\n       pow = (1/x);\\n    for(int i =1; i < n; i++){\\n       pow = pow*(1/x);\\n       }\\n     }else{\\n     for(int i =1; i < n; i++){\\n         pow = pow*x;\\n    }\\n    }\\n    return pow;\\n  }\\n    }"
                    }
                ]
            },
            {
                "id": 1732929,
                "content": [
                    {
                        "username": "tarikin",
                        "content": "Time Limit Exceeded n  = -2147483648, do we really need to check if n is -2147483648 and return fixed 0 value"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "if n is negative \\n    return 1/pow(x,n)"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "Easiest Approach\\nHint : Recursive approach\\n\\ndouble pow(double x, int n){\\n//base case(think)\\nif n is even : pow(x,n) = pow(x,n/2) * pow(x,n/2);\\nif n is odd : pow(x,n) = x * pow(x,n/2) * pow(x,n/2);\\n}\\n\\nmain(){\\nif(n is positive)\\n    return pow(x,n);\\nif(n is negative) \\n    return 1 / pow(x,n);\\n"
                    },
                    {
                        "username": "bhushannalawade318",
                        "content": "why my code isn\\'t working: \\n \\ndouble myPow(double x, int n) {\\n        double ans = 1.00000;\\n        long long nn = n;\\n        if(nn<0) nn = -1 * nn;\\n        while(nn){\\n            if(nn%2){\\n                ans = ans * x;\\n                nn = nn-1;\\n            }\\n            else{\\n                ans = x*x;\\n                nn=nn/2;\\n            }\\n        }\\n        if(n<0) ans=(double)(1.0)/(double)(ans);\\n        return ans; \\n    }"
                    },
                    {
                        "username": "jainnamya1306",
                        "content": "Please tell the mistake in this c++ code as it is giving Runtime error with deadly signal\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        long long nn=n;\\n\\n        if(nn<0.0) nn=-1*nn;\\n        //base condition\\n        if(nn==0.0) return 1.0;\\n        \\n        if(nn>0.0) return ((double)(x*myPow(x,n-1)));\\n\\n        return ((double)(1.0)/(double)(x*myPow(x,n-1)));\\n    }\\n};"
                    },
                    {
                        "username": "matthewjiao",
                        "content": "Help! I wrote a solution which I believe to run in`O(log(n)`time and`O(1)`space, but when I submit, it says it's in the bottom 5% of solutions. I'm unsure why? Thanks in advanced. Apologies for the formatting.\n\nconst pow = (x, n) => {\n   if (n === 0) return 1;\n\n   if (n < 0) {\n       n = -n;\n       x = 1/x;\n   }\n\n   let val = x;\n   for (let i = 1; i < n; ++i) {\n       if (i * 2 <= n) {\n        val *= val;\n        i *= 2;\n        i--;\n       } else {\n        val *= x;\n       }\n   } \n\n   return val;  \n}"
                    },
                    {
                        "username": "Shashank_Jangir17",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double ans=0;\\n        ans=pow(x,n);\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "Arnabiswas99",
                        "content": "Why this code got time limit exceed for input (INT_MAX)^(0.00001)?\\nclass Solution {\\npublic:\\ndouble helper(double x, int n)\\n{\\n        if(n==0) return 1;\\n        if(n==1) return x;\\n        if(n%2==0) return myPow(x,n/2)*myPow(x,n/2);\\n        else return x*myPow(x,n/2)*myPow(x,n/2);\\n}\\n    double myPow(double x, int n) {\\n        if(n>=0) return helper(x,n);\\n        else\\n        {\\n            double ans;\\n            ans=helper(x,(-1)*n);\\n            ans=1/ans;\\n            return ans;\\n        }\\n    }\\n};\\nThank You."
                    },
                    {
                        "username": "khetaj22",
                        "content": "WHY STACKOVERFLOW...\n\nclass Solution \n{\n    public double myPow(double x, int n) \n    {\n        if(n == 0)\n        {\n            return 1;\n        }\n            return x * myPow(x, n - 1);\n    }\n} "
                    },
                    {
                        "username": "anavale",
                        "content": "Why is this failing? It says I passed all the testcases however it says that I reached the time limit when \"x=\" with no value assigned to it.\\n \\n double myPow(double x, int n){\\n    double sum = 1;\\n\\n    if(isnan(x) != 0){\\n        sum = 0;\\n    } else if (x == 1){\\n        sum = 1;\\n    }else if(x == -1){\\n        if(n%2 == 1){ //If n is odd\\n            sum = -1;\\n        }else{\\n            sum = 1;\\n        }\\n    }else if(n < -100000){\\n        sum = 0;\\n    }else if(n>0){\\n        for(int i = 0; i < n; i++){\\n            sum = sum * x;\\n        }\\n    }else if(n == 0){\\n        sum = 1;\\n    }else if(n<0){\\n        for(int j = 0; j < abs(n); j++){\\n            sum = sum * x;\\n        }\\n        sum = 1/sum;\\n    }\\n    \\n    return sum;\\n}"
                    },
                    {
                        "username": "shivang_tripathi",
                        "content": "here is the my solution for this question, this solution is showing time limit exceeded, can anyone tell me how can optmize it more efficiently so the time limit is not exceeded\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n    double pow = x; \\n    if(n == 0){\\n      return (double)1;\\n    } \\n    if (n < 0){\\n       n = n*(-1);\\n       pow = (1/x);\\n    for(int i =1; i < n; i++){\\n       pow = pow*(1/x);\\n       }\\n     }else{\\n     for(int i =1; i < n; i++){\\n         pow = pow*x;\\n    }\\n    }\\n    return pow;\\n  }\\n    }"
                    }
                ]
            },
            {
                "id": 1732468,
                "content": [
                    {
                        "username": "tarikin",
                        "content": "Time Limit Exceeded n  = -2147483648, do we really need to check if n is -2147483648 and return fixed 0 value"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "if n is negative \\n    return 1/pow(x,n)"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "Easiest Approach\\nHint : Recursive approach\\n\\ndouble pow(double x, int n){\\n//base case(think)\\nif n is even : pow(x,n) = pow(x,n/2) * pow(x,n/2);\\nif n is odd : pow(x,n) = x * pow(x,n/2) * pow(x,n/2);\\n}\\n\\nmain(){\\nif(n is positive)\\n    return pow(x,n);\\nif(n is negative) \\n    return 1 / pow(x,n);\\n"
                    },
                    {
                        "username": "bhushannalawade318",
                        "content": "why my code isn\\'t working: \\n \\ndouble myPow(double x, int n) {\\n        double ans = 1.00000;\\n        long long nn = n;\\n        if(nn<0) nn = -1 * nn;\\n        while(nn){\\n            if(nn%2){\\n                ans = ans * x;\\n                nn = nn-1;\\n            }\\n            else{\\n                ans = x*x;\\n                nn=nn/2;\\n            }\\n        }\\n        if(n<0) ans=(double)(1.0)/(double)(ans);\\n        return ans; \\n    }"
                    },
                    {
                        "username": "jainnamya1306",
                        "content": "Please tell the mistake in this c++ code as it is giving Runtime error with deadly signal\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        long long nn=n;\\n\\n        if(nn<0.0) nn=-1*nn;\\n        //base condition\\n        if(nn==0.0) return 1.0;\\n        \\n        if(nn>0.0) return ((double)(x*myPow(x,n-1)));\\n\\n        return ((double)(1.0)/(double)(x*myPow(x,n-1)));\\n    }\\n};"
                    },
                    {
                        "username": "matthewjiao",
                        "content": "Help! I wrote a solution which I believe to run in`O(log(n)`time and`O(1)`space, but when I submit, it says it's in the bottom 5% of solutions. I'm unsure why? Thanks in advanced. Apologies for the formatting.\n\nconst pow = (x, n) => {\n   if (n === 0) return 1;\n\n   if (n < 0) {\n       n = -n;\n       x = 1/x;\n   }\n\n   let val = x;\n   for (let i = 1; i < n; ++i) {\n       if (i * 2 <= n) {\n        val *= val;\n        i *= 2;\n        i--;\n       } else {\n        val *= x;\n       }\n   } \n\n   return val;  \n}"
                    },
                    {
                        "username": "Shashank_Jangir17",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double ans=0;\\n        ans=pow(x,n);\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "Arnabiswas99",
                        "content": "Why this code got time limit exceed for input (INT_MAX)^(0.00001)?\\nclass Solution {\\npublic:\\ndouble helper(double x, int n)\\n{\\n        if(n==0) return 1;\\n        if(n==1) return x;\\n        if(n%2==0) return myPow(x,n/2)*myPow(x,n/2);\\n        else return x*myPow(x,n/2)*myPow(x,n/2);\\n}\\n    double myPow(double x, int n) {\\n        if(n>=0) return helper(x,n);\\n        else\\n        {\\n            double ans;\\n            ans=helper(x,(-1)*n);\\n            ans=1/ans;\\n            return ans;\\n        }\\n    }\\n};\\nThank You."
                    },
                    {
                        "username": "khetaj22",
                        "content": "WHY STACKOVERFLOW...\n\nclass Solution \n{\n    public double myPow(double x, int n) \n    {\n        if(n == 0)\n        {\n            return 1;\n        }\n            return x * myPow(x, n - 1);\n    }\n} "
                    },
                    {
                        "username": "anavale",
                        "content": "Why is this failing? It says I passed all the testcases however it says that I reached the time limit when \"x=\" with no value assigned to it.\\n \\n double myPow(double x, int n){\\n    double sum = 1;\\n\\n    if(isnan(x) != 0){\\n        sum = 0;\\n    } else if (x == 1){\\n        sum = 1;\\n    }else if(x == -1){\\n        if(n%2 == 1){ //If n is odd\\n            sum = -1;\\n        }else{\\n            sum = 1;\\n        }\\n    }else if(n < -100000){\\n        sum = 0;\\n    }else if(n>0){\\n        for(int i = 0; i < n; i++){\\n            sum = sum * x;\\n        }\\n    }else if(n == 0){\\n        sum = 1;\\n    }else if(n<0){\\n        for(int j = 0; j < abs(n); j++){\\n            sum = sum * x;\\n        }\\n        sum = 1/sum;\\n    }\\n    \\n    return sum;\\n}"
                    },
                    {
                        "username": "shivang_tripathi",
                        "content": "here is the my solution for this question, this solution is showing time limit exceeded, can anyone tell me how can optmize it more efficiently so the time limit is not exceeded\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n    double pow = x; \\n    if(n == 0){\\n      return (double)1;\\n    } \\n    if (n < 0){\\n       n = n*(-1);\\n       pow = (1/x);\\n    for(int i =1; i < n; i++){\\n       pow = pow*(1/x);\\n       }\\n     }else{\\n     for(int i =1; i < n; i++){\\n         pow = pow*x;\\n    }\\n    }\\n    return pow;\\n  }\\n    }"
                    }
                ]
            },
            {
                "id": 1731713,
                "content": [
                    {
                        "username": "tarikin",
                        "content": "Time Limit Exceeded n  = -2147483648, do we really need to check if n is -2147483648 and return fixed 0 value"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "if n is negative \\n    return 1/pow(x,n)"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "Easiest Approach\\nHint : Recursive approach\\n\\ndouble pow(double x, int n){\\n//base case(think)\\nif n is even : pow(x,n) = pow(x,n/2) * pow(x,n/2);\\nif n is odd : pow(x,n) = x * pow(x,n/2) * pow(x,n/2);\\n}\\n\\nmain(){\\nif(n is positive)\\n    return pow(x,n);\\nif(n is negative) \\n    return 1 / pow(x,n);\\n"
                    },
                    {
                        "username": "bhushannalawade318",
                        "content": "why my code isn\\'t working: \\n \\ndouble myPow(double x, int n) {\\n        double ans = 1.00000;\\n        long long nn = n;\\n        if(nn<0) nn = -1 * nn;\\n        while(nn){\\n            if(nn%2){\\n                ans = ans * x;\\n                nn = nn-1;\\n            }\\n            else{\\n                ans = x*x;\\n                nn=nn/2;\\n            }\\n        }\\n        if(n<0) ans=(double)(1.0)/(double)(ans);\\n        return ans; \\n    }"
                    },
                    {
                        "username": "jainnamya1306",
                        "content": "Please tell the mistake in this c++ code as it is giving Runtime error with deadly signal\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        long long nn=n;\\n\\n        if(nn<0.0) nn=-1*nn;\\n        //base condition\\n        if(nn==0.0) return 1.0;\\n        \\n        if(nn>0.0) return ((double)(x*myPow(x,n-1)));\\n\\n        return ((double)(1.0)/(double)(x*myPow(x,n-1)));\\n    }\\n};"
                    },
                    {
                        "username": "matthewjiao",
                        "content": "Help! I wrote a solution which I believe to run in`O(log(n)`time and`O(1)`space, but when I submit, it says it's in the bottom 5% of solutions. I'm unsure why? Thanks in advanced. Apologies for the formatting.\n\nconst pow = (x, n) => {\n   if (n === 0) return 1;\n\n   if (n < 0) {\n       n = -n;\n       x = 1/x;\n   }\n\n   let val = x;\n   for (let i = 1; i < n; ++i) {\n       if (i * 2 <= n) {\n        val *= val;\n        i *= 2;\n        i--;\n       } else {\n        val *= x;\n       }\n   } \n\n   return val;  \n}"
                    },
                    {
                        "username": "Shashank_Jangir17",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double ans=0;\\n        ans=pow(x,n);\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "Arnabiswas99",
                        "content": "Why this code got time limit exceed for input (INT_MAX)^(0.00001)?\\nclass Solution {\\npublic:\\ndouble helper(double x, int n)\\n{\\n        if(n==0) return 1;\\n        if(n==1) return x;\\n        if(n%2==0) return myPow(x,n/2)*myPow(x,n/2);\\n        else return x*myPow(x,n/2)*myPow(x,n/2);\\n}\\n    double myPow(double x, int n) {\\n        if(n>=0) return helper(x,n);\\n        else\\n        {\\n            double ans;\\n            ans=helper(x,(-1)*n);\\n            ans=1/ans;\\n            return ans;\\n        }\\n    }\\n};\\nThank You."
                    },
                    {
                        "username": "khetaj22",
                        "content": "WHY STACKOVERFLOW...\n\nclass Solution \n{\n    public double myPow(double x, int n) \n    {\n        if(n == 0)\n        {\n            return 1;\n        }\n            return x * myPow(x, n - 1);\n    }\n} "
                    },
                    {
                        "username": "anavale",
                        "content": "Why is this failing? It says I passed all the testcases however it says that I reached the time limit when \"x=\" with no value assigned to it.\\n \\n double myPow(double x, int n){\\n    double sum = 1;\\n\\n    if(isnan(x) != 0){\\n        sum = 0;\\n    } else if (x == 1){\\n        sum = 1;\\n    }else if(x == -1){\\n        if(n%2 == 1){ //If n is odd\\n            sum = -1;\\n        }else{\\n            sum = 1;\\n        }\\n    }else if(n < -100000){\\n        sum = 0;\\n    }else if(n>0){\\n        for(int i = 0; i < n; i++){\\n            sum = sum * x;\\n        }\\n    }else if(n == 0){\\n        sum = 1;\\n    }else if(n<0){\\n        for(int j = 0; j < abs(n); j++){\\n            sum = sum * x;\\n        }\\n        sum = 1/sum;\\n    }\\n    \\n    return sum;\\n}"
                    },
                    {
                        "username": "shivang_tripathi",
                        "content": "here is the my solution for this question, this solution is showing time limit exceeded, can anyone tell me how can optmize it more efficiently so the time limit is not exceeded\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n    double pow = x; \\n    if(n == 0){\\n      return (double)1;\\n    } \\n    if (n < 0){\\n       n = n*(-1);\\n       pow = (1/x);\\n    for(int i =1; i < n; i++){\\n       pow = pow*(1/x);\\n       }\\n     }else{\\n     for(int i =1; i < n; i++){\\n         pow = pow*x;\\n    }\\n    }\\n    return pow;\\n  }\\n    }"
                    }
                ]
            },
            {
                "id": 1723516,
                "content": [
                    {
                        "username": "tarikin",
                        "content": "Time Limit Exceeded n  = -2147483648, do we really need to check if n is -2147483648 and return fixed 0 value"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "if n is negative \\n    return 1/pow(x,n)"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "Easiest Approach\\nHint : Recursive approach\\n\\ndouble pow(double x, int n){\\n//base case(think)\\nif n is even : pow(x,n) = pow(x,n/2) * pow(x,n/2);\\nif n is odd : pow(x,n) = x * pow(x,n/2) * pow(x,n/2);\\n}\\n\\nmain(){\\nif(n is positive)\\n    return pow(x,n);\\nif(n is negative) \\n    return 1 / pow(x,n);\\n"
                    },
                    {
                        "username": "bhushannalawade318",
                        "content": "why my code isn\\'t working: \\n \\ndouble myPow(double x, int n) {\\n        double ans = 1.00000;\\n        long long nn = n;\\n        if(nn<0) nn = -1 * nn;\\n        while(nn){\\n            if(nn%2){\\n                ans = ans * x;\\n                nn = nn-1;\\n            }\\n            else{\\n                ans = x*x;\\n                nn=nn/2;\\n            }\\n        }\\n        if(n<0) ans=(double)(1.0)/(double)(ans);\\n        return ans; \\n    }"
                    },
                    {
                        "username": "jainnamya1306",
                        "content": "Please tell the mistake in this c++ code as it is giving Runtime error with deadly signal\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        long long nn=n;\\n\\n        if(nn<0.0) nn=-1*nn;\\n        //base condition\\n        if(nn==0.0) return 1.0;\\n        \\n        if(nn>0.0) return ((double)(x*myPow(x,n-1)));\\n\\n        return ((double)(1.0)/(double)(x*myPow(x,n-1)));\\n    }\\n};"
                    },
                    {
                        "username": "matthewjiao",
                        "content": "Help! I wrote a solution which I believe to run in`O(log(n)`time and`O(1)`space, but when I submit, it says it's in the bottom 5% of solutions. I'm unsure why? Thanks in advanced. Apologies for the formatting.\n\nconst pow = (x, n) => {\n   if (n === 0) return 1;\n\n   if (n < 0) {\n       n = -n;\n       x = 1/x;\n   }\n\n   let val = x;\n   for (let i = 1; i < n; ++i) {\n       if (i * 2 <= n) {\n        val *= val;\n        i *= 2;\n        i--;\n       } else {\n        val *= x;\n       }\n   } \n\n   return val;  \n}"
                    },
                    {
                        "username": "Shashank_Jangir17",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double ans=0;\\n        ans=pow(x,n);\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "Arnabiswas99",
                        "content": "Why this code got time limit exceed for input (INT_MAX)^(0.00001)?\\nclass Solution {\\npublic:\\ndouble helper(double x, int n)\\n{\\n        if(n==0) return 1;\\n        if(n==1) return x;\\n        if(n%2==0) return myPow(x,n/2)*myPow(x,n/2);\\n        else return x*myPow(x,n/2)*myPow(x,n/2);\\n}\\n    double myPow(double x, int n) {\\n        if(n>=0) return helper(x,n);\\n        else\\n        {\\n            double ans;\\n            ans=helper(x,(-1)*n);\\n            ans=1/ans;\\n            return ans;\\n        }\\n    }\\n};\\nThank You."
                    },
                    {
                        "username": "khetaj22",
                        "content": "WHY STACKOVERFLOW...\n\nclass Solution \n{\n    public double myPow(double x, int n) \n    {\n        if(n == 0)\n        {\n            return 1;\n        }\n            return x * myPow(x, n - 1);\n    }\n} "
                    },
                    {
                        "username": "anavale",
                        "content": "Why is this failing? It says I passed all the testcases however it says that I reached the time limit when \"x=\" with no value assigned to it.\\n \\n double myPow(double x, int n){\\n    double sum = 1;\\n\\n    if(isnan(x) != 0){\\n        sum = 0;\\n    } else if (x == 1){\\n        sum = 1;\\n    }else if(x == -1){\\n        if(n%2 == 1){ //If n is odd\\n            sum = -1;\\n        }else{\\n            sum = 1;\\n        }\\n    }else if(n < -100000){\\n        sum = 0;\\n    }else if(n>0){\\n        for(int i = 0; i < n; i++){\\n            sum = sum * x;\\n        }\\n    }else if(n == 0){\\n        sum = 1;\\n    }else if(n<0){\\n        for(int j = 0; j < abs(n); j++){\\n            sum = sum * x;\\n        }\\n        sum = 1/sum;\\n    }\\n    \\n    return sum;\\n}"
                    },
                    {
                        "username": "shivang_tripathi",
                        "content": "here is the my solution for this question, this solution is showing time limit exceeded, can anyone tell me how can optmize it more efficiently so the time limit is not exceeded\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n    double pow = x; \\n    if(n == 0){\\n      return (double)1;\\n    } \\n    if (n < 0){\\n       n = n*(-1);\\n       pow = (1/x);\\n    for(int i =1; i < n; i++){\\n       pow = pow*(1/x);\\n       }\\n     }else{\\n     for(int i =1; i < n; i++){\\n         pow = pow*x;\\n    }\\n    }\\n    return pow;\\n  }\\n    }"
                    }
                ]
            },
            {
                "id": 1722568,
                "content": [
                    {
                        "username": "tarikin",
                        "content": "Time Limit Exceeded n  = -2147483648, do we really need to check if n is -2147483648 and return fixed 0 value"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "if n is negative \\n    return 1/pow(x,n)"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "Easiest Approach\\nHint : Recursive approach\\n\\ndouble pow(double x, int n){\\n//base case(think)\\nif n is even : pow(x,n) = pow(x,n/2) * pow(x,n/2);\\nif n is odd : pow(x,n) = x * pow(x,n/2) * pow(x,n/2);\\n}\\n\\nmain(){\\nif(n is positive)\\n    return pow(x,n);\\nif(n is negative) \\n    return 1 / pow(x,n);\\n"
                    },
                    {
                        "username": "bhushannalawade318",
                        "content": "why my code isn\\'t working: \\n \\ndouble myPow(double x, int n) {\\n        double ans = 1.00000;\\n        long long nn = n;\\n        if(nn<0) nn = -1 * nn;\\n        while(nn){\\n            if(nn%2){\\n                ans = ans * x;\\n                nn = nn-1;\\n            }\\n            else{\\n                ans = x*x;\\n                nn=nn/2;\\n            }\\n        }\\n        if(n<0) ans=(double)(1.0)/(double)(ans);\\n        return ans; \\n    }"
                    },
                    {
                        "username": "jainnamya1306",
                        "content": "Please tell the mistake in this c++ code as it is giving Runtime error with deadly signal\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        long long nn=n;\\n\\n        if(nn<0.0) nn=-1*nn;\\n        //base condition\\n        if(nn==0.0) return 1.0;\\n        \\n        if(nn>0.0) return ((double)(x*myPow(x,n-1)));\\n\\n        return ((double)(1.0)/(double)(x*myPow(x,n-1)));\\n    }\\n};"
                    },
                    {
                        "username": "matthewjiao",
                        "content": "Help! I wrote a solution which I believe to run in`O(log(n)`time and`O(1)`space, but when I submit, it says it's in the bottom 5% of solutions. I'm unsure why? Thanks in advanced. Apologies for the formatting.\n\nconst pow = (x, n) => {\n   if (n === 0) return 1;\n\n   if (n < 0) {\n       n = -n;\n       x = 1/x;\n   }\n\n   let val = x;\n   for (let i = 1; i < n; ++i) {\n       if (i * 2 <= n) {\n        val *= val;\n        i *= 2;\n        i--;\n       } else {\n        val *= x;\n       }\n   } \n\n   return val;  \n}"
                    },
                    {
                        "username": "Shashank_Jangir17",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double ans=0;\\n        ans=pow(x,n);\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "Arnabiswas99",
                        "content": "Why this code got time limit exceed for input (INT_MAX)^(0.00001)?\\nclass Solution {\\npublic:\\ndouble helper(double x, int n)\\n{\\n        if(n==0) return 1;\\n        if(n==1) return x;\\n        if(n%2==0) return myPow(x,n/2)*myPow(x,n/2);\\n        else return x*myPow(x,n/2)*myPow(x,n/2);\\n}\\n    double myPow(double x, int n) {\\n        if(n>=0) return helper(x,n);\\n        else\\n        {\\n            double ans;\\n            ans=helper(x,(-1)*n);\\n            ans=1/ans;\\n            return ans;\\n        }\\n    }\\n};\\nThank You."
                    },
                    {
                        "username": "khetaj22",
                        "content": "WHY STACKOVERFLOW...\n\nclass Solution \n{\n    public double myPow(double x, int n) \n    {\n        if(n == 0)\n        {\n            return 1;\n        }\n            return x * myPow(x, n - 1);\n    }\n} "
                    },
                    {
                        "username": "anavale",
                        "content": "Why is this failing? It says I passed all the testcases however it says that I reached the time limit when \"x=\" with no value assigned to it.\\n \\n double myPow(double x, int n){\\n    double sum = 1;\\n\\n    if(isnan(x) != 0){\\n        sum = 0;\\n    } else if (x == 1){\\n        sum = 1;\\n    }else if(x == -1){\\n        if(n%2 == 1){ //If n is odd\\n            sum = -1;\\n        }else{\\n            sum = 1;\\n        }\\n    }else if(n < -100000){\\n        sum = 0;\\n    }else if(n>0){\\n        for(int i = 0; i < n; i++){\\n            sum = sum * x;\\n        }\\n    }else if(n == 0){\\n        sum = 1;\\n    }else if(n<0){\\n        for(int j = 0; j < abs(n); j++){\\n            sum = sum * x;\\n        }\\n        sum = 1/sum;\\n    }\\n    \\n    return sum;\\n}"
                    },
                    {
                        "username": "shivang_tripathi",
                        "content": "here is the my solution for this question, this solution is showing time limit exceeded, can anyone tell me how can optmize it more efficiently so the time limit is not exceeded\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n    double pow = x; \\n    if(n == 0){\\n      return (double)1;\\n    } \\n    if (n < 0){\\n       n = n*(-1);\\n       pow = (1/x);\\n    for(int i =1; i < n; i++){\\n       pow = pow*(1/x);\\n       }\\n     }else{\\n     for(int i =1; i < n; i++){\\n         pow = pow*x;\\n    }\\n    }\\n    return pow;\\n  }\\n    }"
                    }
                ]
            },
            {
                "id": 1722052,
                "content": [
                    {
                        "username": "tarikin",
                        "content": "Time Limit Exceeded n  = -2147483648, do we really need to check if n is -2147483648 and return fixed 0 value"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "if n is negative \\n    return 1/pow(x,n)"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "Easiest Approach\\nHint : Recursive approach\\n\\ndouble pow(double x, int n){\\n//base case(think)\\nif n is even : pow(x,n) = pow(x,n/2) * pow(x,n/2);\\nif n is odd : pow(x,n) = x * pow(x,n/2) * pow(x,n/2);\\n}\\n\\nmain(){\\nif(n is positive)\\n    return pow(x,n);\\nif(n is negative) \\n    return 1 / pow(x,n);\\n"
                    },
                    {
                        "username": "bhushannalawade318",
                        "content": "why my code isn\\'t working: \\n \\ndouble myPow(double x, int n) {\\n        double ans = 1.00000;\\n        long long nn = n;\\n        if(nn<0) nn = -1 * nn;\\n        while(nn){\\n            if(nn%2){\\n                ans = ans * x;\\n                nn = nn-1;\\n            }\\n            else{\\n                ans = x*x;\\n                nn=nn/2;\\n            }\\n        }\\n        if(n<0) ans=(double)(1.0)/(double)(ans);\\n        return ans; \\n    }"
                    },
                    {
                        "username": "jainnamya1306",
                        "content": "Please tell the mistake in this c++ code as it is giving Runtime error with deadly signal\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        long long nn=n;\\n\\n        if(nn<0.0) nn=-1*nn;\\n        //base condition\\n        if(nn==0.0) return 1.0;\\n        \\n        if(nn>0.0) return ((double)(x*myPow(x,n-1)));\\n\\n        return ((double)(1.0)/(double)(x*myPow(x,n-1)));\\n    }\\n};"
                    },
                    {
                        "username": "matthewjiao",
                        "content": "Help! I wrote a solution which I believe to run in`O(log(n)`time and`O(1)`space, but when I submit, it says it's in the bottom 5% of solutions. I'm unsure why? Thanks in advanced. Apologies for the formatting.\n\nconst pow = (x, n) => {\n   if (n === 0) return 1;\n\n   if (n < 0) {\n       n = -n;\n       x = 1/x;\n   }\n\n   let val = x;\n   for (let i = 1; i < n; ++i) {\n       if (i * 2 <= n) {\n        val *= val;\n        i *= 2;\n        i--;\n       } else {\n        val *= x;\n       }\n   } \n\n   return val;  \n}"
                    },
                    {
                        "username": "Shashank_Jangir17",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double ans=0;\\n        ans=pow(x,n);\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "Arnabiswas99",
                        "content": "Why this code got time limit exceed for input (INT_MAX)^(0.00001)?\\nclass Solution {\\npublic:\\ndouble helper(double x, int n)\\n{\\n        if(n==0) return 1;\\n        if(n==1) return x;\\n        if(n%2==0) return myPow(x,n/2)*myPow(x,n/2);\\n        else return x*myPow(x,n/2)*myPow(x,n/2);\\n}\\n    double myPow(double x, int n) {\\n        if(n>=0) return helper(x,n);\\n        else\\n        {\\n            double ans;\\n            ans=helper(x,(-1)*n);\\n            ans=1/ans;\\n            return ans;\\n        }\\n    }\\n};\\nThank You."
                    },
                    {
                        "username": "khetaj22",
                        "content": "WHY STACKOVERFLOW...\n\nclass Solution \n{\n    public double myPow(double x, int n) \n    {\n        if(n == 0)\n        {\n            return 1;\n        }\n            return x * myPow(x, n - 1);\n    }\n} "
                    },
                    {
                        "username": "anavale",
                        "content": "Why is this failing? It says I passed all the testcases however it says that I reached the time limit when \"x=\" with no value assigned to it.\\n \\n double myPow(double x, int n){\\n    double sum = 1;\\n\\n    if(isnan(x) != 0){\\n        sum = 0;\\n    } else if (x == 1){\\n        sum = 1;\\n    }else if(x == -1){\\n        if(n%2 == 1){ //If n is odd\\n            sum = -1;\\n        }else{\\n            sum = 1;\\n        }\\n    }else if(n < -100000){\\n        sum = 0;\\n    }else if(n>0){\\n        for(int i = 0; i < n; i++){\\n            sum = sum * x;\\n        }\\n    }else if(n == 0){\\n        sum = 1;\\n    }else if(n<0){\\n        for(int j = 0; j < abs(n); j++){\\n            sum = sum * x;\\n        }\\n        sum = 1/sum;\\n    }\\n    \\n    return sum;\\n}"
                    },
                    {
                        "username": "shivang_tripathi",
                        "content": "here is the my solution for this question, this solution is showing time limit exceeded, can anyone tell me how can optmize it more efficiently so the time limit is not exceeded\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n    double pow = x; \\n    if(n == 0){\\n      return (double)1;\\n    } \\n    if (n < 0){\\n       n = n*(-1);\\n       pow = (1/x);\\n    for(int i =1; i < n; i++){\\n       pow = pow*(1/x);\\n       }\\n     }else{\\n     for(int i =1; i < n; i++){\\n         pow = pow*x;\\n    }\\n    }\\n    return pow;\\n  }\\n    }"
                    }
                ]
            },
            {
                "id": 1715241,
                "content": [
                    {
                        "username": "tarikin",
                        "content": "Time Limit Exceeded n  = -2147483648, do we really need to check if n is -2147483648 and return fixed 0 value"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "if n is negative \\n    return 1/pow(x,n)"
                    },
                    {
                        "username": "itsSankalp",
                        "content": "Easiest Approach\\nHint : Recursive approach\\n\\ndouble pow(double x, int n){\\n//base case(think)\\nif n is even : pow(x,n) = pow(x,n/2) * pow(x,n/2);\\nif n is odd : pow(x,n) = x * pow(x,n/2) * pow(x,n/2);\\n}\\n\\nmain(){\\nif(n is positive)\\n    return pow(x,n);\\nif(n is negative) \\n    return 1 / pow(x,n);\\n"
                    },
                    {
                        "username": "bhushannalawade318",
                        "content": "why my code isn\\'t working: \\n \\ndouble myPow(double x, int n) {\\n        double ans = 1.00000;\\n        long long nn = n;\\n        if(nn<0) nn = -1 * nn;\\n        while(nn){\\n            if(nn%2){\\n                ans = ans * x;\\n                nn = nn-1;\\n            }\\n            else{\\n                ans = x*x;\\n                nn=nn/2;\\n            }\\n        }\\n        if(n<0) ans=(double)(1.0)/(double)(ans);\\n        return ans; \\n    }"
                    },
                    {
                        "username": "jainnamya1306",
                        "content": "Please tell the mistake in this c++ code as it is giving Runtime error with deadly signal\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        long long nn=n;\\n\\n        if(nn<0.0) nn=-1*nn;\\n        //base condition\\n        if(nn==0.0) return 1.0;\\n        \\n        if(nn>0.0) return ((double)(x*myPow(x,n-1)));\\n\\n        return ((double)(1.0)/(double)(x*myPow(x,n-1)));\\n    }\\n};"
                    },
                    {
                        "username": "matthewjiao",
                        "content": "Help! I wrote a solution which I believe to run in`O(log(n)`time and`O(1)`space, but when I submit, it says it's in the bottom 5% of solutions. I'm unsure why? Thanks in advanced. Apologies for the formatting.\n\nconst pow = (x, n) => {\n   if (n === 0) return 1;\n\n   if (n < 0) {\n       n = -n;\n       x = 1/x;\n   }\n\n   let val = x;\n   for (let i = 1; i < n; ++i) {\n       if (i * 2 <= n) {\n        val *= val;\n        i *= 2;\n        i--;\n       } else {\n        val *= x;\n       }\n   } \n\n   return val;  \n}"
                    },
                    {
                        "username": "Shashank_Jangir17",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double ans=0;\\n        ans=pow(x,n);\\n        return ans;\\n    }\\n};"
                    },
                    {
                        "username": "Arnabiswas99",
                        "content": "Why this code got time limit exceed for input (INT_MAX)^(0.00001)?\\nclass Solution {\\npublic:\\ndouble helper(double x, int n)\\n{\\n        if(n==0) return 1;\\n        if(n==1) return x;\\n        if(n%2==0) return myPow(x,n/2)*myPow(x,n/2);\\n        else return x*myPow(x,n/2)*myPow(x,n/2);\\n}\\n    double myPow(double x, int n) {\\n        if(n>=0) return helper(x,n);\\n        else\\n        {\\n            double ans;\\n            ans=helper(x,(-1)*n);\\n            ans=1/ans;\\n            return ans;\\n        }\\n    }\\n};\\nThank You."
                    },
                    {
                        "username": "khetaj22",
                        "content": "WHY STACKOVERFLOW...\n\nclass Solution \n{\n    public double myPow(double x, int n) \n    {\n        if(n == 0)\n        {\n            return 1;\n        }\n            return x * myPow(x, n - 1);\n    }\n} "
                    },
                    {
                        "username": "anavale",
                        "content": "Why is this failing? It says I passed all the testcases however it says that I reached the time limit when \"x=\" with no value assigned to it.\\n \\n double myPow(double x, int n){\\n    double sum = 1;\\n\\n    if(isnan(x) != 0){\\n        sum = 0;\\n    } else if (x == 1){\\n        sum = 1;\\n    }else if(x == -1){\\n        if(n%2 == 1){ //If n is odd\\n            sum = -1;\\n        }else{\\n            sum = 1;\\n        }\\n    }else if(n < -100000){\\n        sum = 0;\\n    }else if(n>0){\\n        for(int i = 0; i < n; i++){\\n            sum = sum * x;\\n        }\\n    }else if(n == 0){\\n        sum = 1;\\n    }else if(n<0){\\n        for(int j = 0; j < abs(n); j++){\\n            sum = sum * x;\\n        }\\n        sum = 1/sum;\\n    }\\n    \\n    return sum;\\n}"
                    },
                    {
                        "username": "shivang_tripathi",
                        "content": "here is the my solution for this question, this solution is showing time limit exceeded, can anyone tell me how can optmize it more efficiently so the time limit is not exceeded\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n    double pow = x; \\n    if(n == 0){\\n      return (double)1;\\n    } \\n    if (n < 0){\\n       n = n*(-1);\\n       pow = (1/x);\\n    for(int i =1; i < n; i++){\\n       pow = pow*(1/x);\\n       }\\n     }else{\\n     for(int i =1; i < n; i++){\\n         pow = pow*x;\\n    }\\n    }\\n    return pow;\\n  }\\n    }"
                    }
                ]
            },
            {
                "id": 1714599,
                "content": [
                    {
                        "username": "nikhilgargdrb",
                        "content": "I solve this question using \\n\\nhttps://leetcode.com/problems/powx-n/submissions/858720192/\\n\\nHow solution can be more optimised ?"
                    },
                    {
                        "username": "groote",
                        "content": "\\n\\n```\\n public double myPow(double x, int n) {\\n        if(n==0)\\n        {\\n            return 1; \\n        }\\n        if(n==1)\\n        {\\n            return x;\\n        }\\n        if(n==-1)\\n        {\\n            return 1/x;\\n        }\\n\\n           double ans=myPow(x,n/2);\\n            if(n%2==0)\\n            {\\n                return ans*ans;\\n            }\\n\\n            return ans*ans*x;\\n        \\n    }\\n```\\n\\nWhy above code is not working for the below test case\\nx=34.00515\\nn=-3"
                    },
                    {
                        "username": "abhicodeshukla",
                        "content": "i think you have not written the code when n is negative.\\n"
                    },
                    {
                        "username": "Mayuri24",
                        "content": "Time Limit Exceeded issue.\\nCan someone help me?\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        \\n        double ans=1.0;\\n        if(n<0){\\n            n = -n;\\n            x = 1/x;\\n        }\\n        for(int i=1; i<= n; i++)\\n        {\\n            ans= ans*x;\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "vansh_agarwal31",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double result = pow(x,n);\\n        return result;\\n    }\\n};\\n\\none line code in c++"
                    },
                    {
                        "username": "Akshaygithubsd",
                        "content": "-----------------------------------------ERROR----------------------------------------\\nLine 9: Char 27: runtime error: signed integer overflow: 2147483647 + 1 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:18:27\\n-------------------------------------------------------------------------------------------------------\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double a=1.0;\\n        if(n==0)\\n        return 1;\\n        else if(n>0){\\n        double y=n;\\n        for(int i=1;i<=y;i++)\\n        {\\n             a=a*x;\\n        }\\n        return a;\\n        }\\n        else{\\n            for(int i=-1;i>=n;i--){\\n                a=a/x;\\n            }\\n            return a;\\n        }\\n        \\n    }\\n};"
                    },
                    {
                        "username": "Gopal_dixit",
                        "content": "// HELP ME TO FIND MISTAKE ,IT GIVES RUN TIME ERROR\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n   double anspow=1;\\n    if(n<0){\\n        long long int m=n;\\n    m=-n;\\n    x=1/x;\\n    double ans=myPow(x,m/2);\\n    if(m&1){\\n        return x*ans*ans;\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n       \\n    }\\n    if(n==0){\\n            return 1;\\n    }\\n    if(n==1){\\n        return x;\\n    }\\n    double ans=myPow(x,n/2);\\n    if(n&1){\\n        return x*ans*ans;\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n    }\\n};"
                    },
                    {
                        "username": "IlyaMoskva",
                        "content": " if((n & 1) == 1) will be boolean"
                    },
                    {
                        "username": "Pintu236",
                        "content": "In recursive approach we need to cut the power to lowest possible subproblem. \nso let's say at leaf node we will have n if 1 then just return the x in case of negative 1/x.\nCheckout tree so you can get better understanding.\n[Tree for  2^6](https://drive.google.com/file/d/1hhmP7md8PpSyaMGCiCnr7_q7cvwPrTzz/view?usp=sharing)\n\n `if (n == 1) {\n            return x;\n        } else if (n == -1) {\n            return 1 / x;\n        }`\n"
                    },
                    {
                        "username": "kakashi11",
                        "content": "i got TLE for       n= INT_MAX   (2147483647)     and x= 1.00000\\nbut while i run it, it gives accepted correct ans, why so? \\n\\nthis is my code\\n long long temp=n;\\n        double ans=1.0;\\n        bool cnt=false;\\n\\n        if(n<0) \\n        {temp=(-1)*temp; cnt=true;}\\n            \\n        for(long long i=1; i<=temp; i++)\\n        {\\n            ans= ans*x;\\n        }\\n        if(cnt==true)\\n        return 1/ans;\\n\\n        else return ans;"
                    },
                    {
                        "username": "p1656531",
                        "content": "  public double myPow(double x, int n) {\\n        if (n == 0) return 1.0;\\n        if (n == 1) return x;\\n        if (n == -1) return 1 / x;\\n        double sqrt = myPow(x, n / 2);\\n        return sqrt * sqrt * myPow(x, n % 2);\\n    }"
                    },
                    {
                        "username": "skillcap",
                        "content": "Interesting, the answer is also the name of the problem..."
                    }
                ]
            },
            {
                "id": 1714177,
                "content": [
                    {
                        "username": "nikhilgargdrb",
                        "content": "I solve this question using \\n\\nhttps://leetcode.com/problems/powx-n/submissions/858720192/\\n\\nHow solution can be more optimised ?"
                    },
                    {
                        "username": "groote",
                        "content": "\\n\\n```\\n public double myPow(double x, int n) {\\n        if(n==0)\\n        {\\n            return 1; \\n        }\\n        if(n==1)\\n        {\\n            return x;\\n        }\\n        if(n==-1)\\n        {\\n            return 1/x;\\n        }\\n\\n           double ans=myPow(x,n/2);\\n            if(n%2==0)\\n            {\\n                return ans*ans;\\n            }\\n\\n            return ans*ans*x;\\n        \\n    }\\n```\\n\\nWhy above code is not working for the below test case\\nx=34.00515\\nn=-3"
                    },
                    {
                        "username": "abhicodeshukla",
                        "content": "i think you have not written the code when n is negative.\\n"
                    },
                    {
                        "username": "Mayuri24",
                        "content": "Time Limit Exceeded issue.\\nCan someone help me?\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        \\n        double ans=1.0;\\n        if(n<0){\\n            n = -n;\\n            x = 1/x;\\n        }\\n        for(int i=1; i<= n; i++)\\n        {\\n            ans= ans*x;\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "vansh_agarwal31",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double result = pow(x,n);\\n        return result;\\n    }\\n};\\n\\none line code in c++"
                    },
                    {
                        "username": "Akshaygithubsd",
                        "content": "-----------------------------------------ERROR----------------------------------------\\nLine 9: Char 27: runtime error: signed integer overflow: 2147483647 + 1 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:18:27\\n-------------------------------------------------------------------------------------------------------\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double a=1.0;\\n        if(n==0)\\n        return 1;\\n        else if(n>0){\\n        double y=n;\\n        for(int i=1;i<=y;i++)\\n        {\\n             a=a*x;\\n        }\\n        return a;\\n        }\\n        else{\\n            for(int i=-1;i>=n;i--){\\n                a=a/x;\\n            }\\n            return a;\\n        }\\n        \\n    }\\n};"
                    },
                    {
                        "username": "Gopal_dixit",
                        "content": "// HELP ME TO FIND MISTAKE ,IT GIVES RUN TIME ERROR\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n   double anspow=1;\\n    if(n<0){\\n        long long int m=n;\\n    m=-n;\\n    x=1/x;\\n    double ans=myPow(x,m/2);\\n    if(m&1){\\n        return x*ans*ans;\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n       \\n    }\\n    if(n==0){\\n            return 1;\\n    }\\n    if(n==1){\\n        return x;\\n    }\\n    double ans=myPow(x,n/2);\\n    if(n&1){\\n        return x*ans*ans;\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n    }\\n};"
                    },
                    {
                        "username": "IlyaMoskva",
                        "content": " if((n & 1) == 1) will be boolean"
                    },
                    {
                        "username": "Pintu236",
                        "content": "In recursive approach we need to cut the power to lowest possible subproblem. \nso let's say at leaf node we will have n if 1 then just return the x in case of negative 1/x.\nCheckout tree so you can get better understanding.\n[Tree for  2^6](https://drive.google.com/file/d/1hhmP7md8PpSyaMGCiCnr7_q7cvwPrTzz/view?usp=sharing)\n\n `if (n == 1) {\n            return x;\n        } else if (n == -1) {\n            return 1 / x;\n        }`\n"
                    },
                    {
                        "username": "kakashi11",
                        "content": "i got TLE for       n= INT_MAX   (2147483647)     and x= 1.00000\\nbut while i run it, it gives accepted correct ans, why so? \\n\\nthis is my code\\n long long temp=n;\\n        double ans=1.0;\\n        bool cnt=false;\\n\\n        if(n<0) \\n        {temp=(-1)*temp; cnt=true;}\\n            \\n        for(long long i=1; i<=temp; i++)\\n        {\\n            ans= ans*x;\\n        }\\n        if(cnt==true)\\n        return 1/ans;\\n\\n        else return ans;"
                    },
                    {
                        "username": "p1656531",
                        "content": "  public double myPow(double x, int n) {\\n        if (n == 0) return 1.0;\\n        if (n == 1) return x;\\n        if (n == -1) return 1 / x;\\n        double sqrt = myPow(x, n / 2);\\n        return sqrt * sqrt * myPow(x, n % 2);\\n    }"
                    },
                    {
                        "username": "skillcap",
                        "content": "Interesting, the answer is also the name of the problem..."
                    }
                ]
            },
            {
                "id": 1712349,
                "content": [
                    {
                        "username": "nikhilgargdrb",
                        "content": "I solve this question using \\n\\nhttps://leetcode.com/problems/powx-n/submissions/858720192/\\n\\nHow solution can be more optimised ?"
                    },
                    {
                        "username": "groote",
                        "content": "\\n\\n```\\n public double myPow(double x, int n) {\\n        if(n==0)\\n        {\\n            return 1; \\n        }\\n        if(n==1)\\n        {\\n            return x;\\n        }\\n        if(n==-1)\\n        {\\n            return 1/x;\\n        }\\n\\n           double ans=myPow(x,n/2);\\n            if(n%2==0)\\n            {\\n                return ans*ans;\\n            }\\n\\n            return ans*ans*x;\\n        \\n    }\\n```\\n\\nWhy above code is not working for the below test case\\nx=34.00515\\nn=-3"
                    },
                    {
                        "username": "abhicodeshukla",
                        "content": "i think you have not written the code when n is negative.\\n"
                    },
                    {
                        "username": "Mayuri24",
                        "content": "Time Limit Exceeded issue.\\nCan someone help me?\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        \\n        double ans=1.0;\\n        if(n<0){\\n            n = -n;\\n            x = 1/x;\\n        }\\n        for(int i=1; i<= n; i++)\\n        {\\n            ans= ans*x;\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "vansh_agarwal31",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double result = pow(x,n);\\n        return result;\\n    }\\n};\\n\\none line code in c++"
                    },
                    {
                        "username": "Akshaygithubsd",
                        "content": "-----------------------------------------ERROR----------------------------------------\\nLine 9: Char 27: runtime error: signed integer overflow: 2147483647 + 1 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:18:27\\n-------------------------------------------------------------------------------------------------------\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double a=1.0;\\n        if(n==0)\\n        return 1;\\n        else if(n>0){\\n        double y=n;\\n        for(int i=1;i<=y;i++)\\n        {\\n             a=a*x;\\n        }\\n        return a;\\n        }\\n        else{\\n            for(int i=-1;i>=n;i--){\\n                a=a/x;\\n            }\\n            return a;\\n        }\\n        \\n    }\\n};"
                    },
                    {
                        "username": "Gopal_dixit",
                        "content": "// HELP ME TO FIND MISTAKE ,IT GIVES RUN TIME ERROR\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n   double anspow=1;\\n    if(n<0){\\n        long long int m=n;\\n    m=-n;\\n    x=1/x;\\n    double ans=myPow(x,m/2);\\n    if(m&1){\\n        return x*ans*ans;\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n       \\n    }\\n    if(n==0){\\n            return 1;\\n    }\\n    if(n==1){\\n        return x;\\n    }\\n    double ans=myPow(x,n/2);\\n    if(n&1){\\n        return x*ans*ans;\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n    }\\n};"
                    },
                    {
                        "username": "IlyaMoskva",
                        "content": " if((n & 1) == 1) will be boolean"
                    },
                    {
                        "username": "Pintu236",
                        "content": "In recursive approach we need to cut the power to lowest possible subproblem. \nso let's say at leaf node we will have n if 1 then just return the x in case of negative 1/x.\nCheckout tree so you can get better understanding.\n[Tree for  2^6](https://drive.google.com/file/d/1hhmP7md8PpSyaMGCiCnr7_q7cvwPrTzz/view?usp=sharing)\n\n `if (n == 1) {\n            return x;\n        } else if (n == -1) {\n            return 1 / x;\n        }`\n"
                    },
                    {
                        "username": "kakashi11",
                        "content": "i got TLE for       n= INT_MAX   (2147483647)     and x= 1.00000\\nbut while i run it, it gives accepted correct ans, why so? \\n\\nthis is my code\\n long long temp=n;\\n        double ans=1.0;\\n        bool cnt=false;\\n\\n        if(n<0) \\n        {temp=(-1)*temp; cnt=true;}\\n            \\n        for(long long i=1; i<=temp; i++)\\n        {\\n            ans= ans*x;\\n        }\\n        if(cnt==true)\\n        return 1/ans;\\n\\n        else return ans;"
                    },
                    {
                        "username": "p1656531",
                        "content": "  public double myPow(double x, int n) {\\n        if (n == 0) return 1.0;\\n        if (n == 1) return x;\\n        if (n == -1) return 1 / x;\\n        double sqrt = myPow(x, n / 2);\\n        return sqrt * sqrt * myPow(x, n % 2);\\n    }"
                    },
                    {
                        "username": "skillcap",
                        "content": "Interesting, the answer is also the name of the problem..."
                    }
                ]
            },
            {
                "id": 1711902,
                "content": [
                    {
                        "username": "nikhilgargdrb",
                        "content": "I solve this question using \\n\\nhttps://leetcode.com/problems/powx-n/submissions/858720192/\\n\\nHow solution can be more optimised ?"
                    },
                    {
                        "username": "groote",
                        "content": "\\n\\n```\\n public double myPow(double x, int n) {\\n        if(n==0)\\n        {\\n            return 1; \\n        }\\n        if(n==1)\\n        {\\n            return x;\\n        }\\n        if(n==-1)\\n        {\\n            return 1/x;\\n        }\\n\\n           double ans=myPow(x,n/2);\\n            if(n%2==0)\\n            {\\n                return ans*ans;\\n            }\\n\\n            return ans*ans*x;\\n        \\n    }\\n```\\n\\nWhy above code is not working for the below test case\\nx=34.00515\\nn=-3"
                    },
                    {
                        "username": "abhicodeshukla",
                        "content": "i think you have not written the code when n is negative.\\n"
                    },
                    {
                        "username": "Mayuri24",
                        "content": "Time Limit Exceeded issue.\\nCan someone help me?\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        \\n        double ans=1.0;\\n        if(n<0){\\n            n = -n;\\n            x = 1/x;\\n        }\\n        for(int i=1; i<= n; i++)\\n        {\\n            ans= ans*x;\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "vansh_agarwal31",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double result = pow(x,n);\\n        return result;\\n    }\\n};\\n\\none line code in c++"
                    },
                    {
                        "username": "Akshaygithubsd",
                        "content": "-----------------------------------------ERROR----------------------------------------\\nLine 9: Char 27: runtime error: signed integer overflow: 2147483647 + 1 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:18:27\\n-------------------------------------------------------------------------------------------------------\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double a=1.0;\\n        if(n==0)\\n        return 1;\\n        else if(n>0){\\n        double y=n;\\n        for(int i=1;i<=y;i++)\\n        {\\n             a=a*x;\\n        }\\n        return a;\\n        }\\n        else{\\n            for(int i=-1;i>=n;i--){\\n                a=a/x;\\n            }\\n            return a;\\n        }\\n        \\n    }\\n};"
                    },
                    {
                        "username": "Gopal_dixit",
                        "content": "// HELP ME TO FIND MISTAKE ,IT GIVES RUN TIME ERROR\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n   double anspow=1;\\n    if(n<0){\\n        long long int m=n;\\n    m=-n;\\n    x=1/x;\\n    double ans=myPow(x,m/2);\\n    if(m&1){\\n        return x*ans*ans;\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n       \\n    }\\n    if(n==0){\\n            return 1;\\n    }\\n    if(n==1){\\n        return x;\\n    }\\n    double ans=myPow(x,n/2);\\n    if(n&1){\\n        return x*ans*ans;\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n    }\\n};"
                    },
                    {
                        "username": "IlyaMoskva",
                        "content": " if((n & 1) == 1) will be boolean"
                    },
                    {
                        "username": "Pintu236",
                        "content": "In recursive approach we need to cut the power to lowest possible subproblem. \nso let's say at leaf node we will have n if 1 then just return the x in case of negative 1/x.\nCheckout tree so you can get better understanding.\n[Tree for  2^6](https://drive.google.com/file/d/1hhmP7md8PpSyaMGCiCnr7_q7cvwPrTzz/view?usp=sharing)\n\n `if (n == 1) {\n            return x;\n        } else if (n == -1) {\n            return 1 / x;\n        }`\n"
                    },
                    {
                        "username": "kakashi11",
                        "content": "i got TLE for       n= INT_MAX   (2147483647)     and x= 1.00000\\nbut while i run it, it gives accepted correct ans, why so? \\n\\nthis is my code\\n long long temp=n;\\n        double ans=1.0;\\n        bool cnt=false;\\n\\n        if(n<0) \\n        {temp=(-1)*temp; cnt=true;}\\n            \\n        for(long long i=1; i<=temp; i++)\\n        {\\n            ans= ans*x;\\n        }\\n        if(cnt==true)\\n        return 1/ans;\\n\\n        else return ans;"
                    },
                    {
                        "username": "p1656531",
                        "content": "  public double myPow(double x, int n) {\\n        if (n == 0) return 1.0;\\n        if (n == 1) return x;\\n        if (n == -1) return 1 / x;\\n        double sqrt = myPow(x, n / 2);\\n        return sqrt * sqrt * myPow(x, n % 2);\\n    }"
                    },
                    {
                        "username": "skillcap",
                        "content": "Interesting, the answer is also the name of the problem..."
                    }
                ]
            },
            {
                "id": 1711744,
                "content": [
                    {
                        "username": "nikhilgargdrb",
                        "content": "I solve this question using \\n\\nhttps://leetcode.com/problems/powx-n/submissions/858720192/\\n\\nHow solution can be more optimised ?"
                    },
                    {
                        "username": "groote",
                        "content": "\\n\\n```\\n public double myPow(double x, int n) {\\n        if(n==0)\\n        {\\n            return 1; \\n        }\\n        if(n==1)\\n        {\\n            return x;\\n        }\\n        if(n==-1)\\n        {\\n            return 1/x;\\n        }\\n\\n           double ans=myPow(x,n/2);\\n            if(n%2==0)\\n            {\\n                return ans*ans;\\n            }\\n\\n            return ans*ans*x;\\n        \\n    }\\n```\\n\\nWhy above code is not working for the below test case\\nx=34.00515\\nn=-3"
                    },
                    {
                        "username": "abhicodeshukla",
                        "content": "i think you have not written the code when n is negative.\\n"
                    },
                    {
                        "username": "Mayuri24",
                        "content": "Time Limit Exceeded issue.\\nCan someone help me?\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        \\n        double ans=1.0;\\n        if(n<0){\\n            n = -n;\\n            x = 1/x;\\n        }\\n        for(int i=1; i<= n; i++)\\n        {\\n            ans= ans*x;\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "vansh_agarwal31",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double result = pow(x,n);\\n        return result;\\n    }\\n};\\n\\none line code in c++"
                    },
                    {
                        "username": "Akshaygithubsd",
                        "content": "-----------------------------------------ERROR----------------------------------------\\nLine 9: Char 27: runtime error: signed integer overflow: 2147483647 + 1 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:18:27\\n-------------------------------------------------------------------------------------------------------\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double a=1.0;\\n        if(n==0)\\n        return 1;\\n        else if(n>0){\\n        double y=n;\\n        for(int i=1;i<=y;i++)\\n        {\\n             a=a*x;\\n        }\\n        return a;\\n        }\\n        else{\\n            for(int i=-1;i>=n;i--){\\n                a=a/x;\\n            }\\n            return a;\\n        }\\n        \\n    }\\n};"
                    },
                    {
                        "username": "Gopal_dixit",
                        "content": "// HELP ME TO FIND MISTAKE ,IT GIVES RUN TIME ERROR\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n   double anspow=1;\\n    if(n<0){\\n        long long int m=n;\\n    m=-n;\\n    x=1/x;\\n    double ans=myPow(x,m/2);\\n    if(m&1){\\n        return x*ans*ans;\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n       \\n    }\\n    if(n==0){\\n            return 1;\\n    }\\n    if(n==1){\\n        return x;\\n    }\\n    double ans=myPow(x,n/2);\\n    if(n&1){\\n        return x*ans*ans;\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n    }\\n};"
                    },
                    {
                        "username": "IlyaMoskva",
                        "content": " if((n & 1) == 1) will be boolean"
                    },
                    {
                        "username": "Pintu236",
                        "content": "In recursive approach we need to cut the power to lowest possible subproblem. \nso let's say at leaf node we will have n if 1 then just return the x in case of negative 1/x.\nCheckout tree so you can get better understanding.\n[Tree for  2^6](https://drive.google.com/file/d/1hhmP7md8PpSyaMGCiCnr7_q7cvwPrTzz/view?usp=sharing)\n\n `if (n == 1) {\n            return x;\n        } else if (n == -1) {\n            return 1 / x;\n        }`\n"
                    },
                    {
                        "username": "kakashi11",
                        "content": "i got TLE for       n= INT_MAX   (2147483647)     and x= 1.00000\\nbut while i run it, it gives accepted correct ans, why so? \\n\\nthis is my code\\n long long temp=n;\\n        double ans=1.0;\\n        bool cnt=false;\\n\\n        if(n<0) \\n        {temp=(-1)*temp; cnt=true;}\\n            \\n        for(long long i=1; i<=temp; i++)\\n        {\\n            ans= ans*x;\\n        }\\n        if(cnt==true)\\n        return 1/ans;\\n\\n        else return ans;"
                    },
                    {
                        "username": "p1656531",
                        "content": "  public double myPow(double x, int n) {\\n        if (n == 0) return 1.0;\\n        if (n == 1) return x;\\n        if (n == -1) return 1 / x;\\n        double sqrt = myPow(x, n / 2);\\n        return sqrt * sqrt * myPow(x, n % 2);\\n    }"
                    },
                    {
                        "username": "skillcap",
                        "content": "Interesting, the answer is also the name of the problem..."
                    }
                ]
            },
            {
                "id": 1711170,
                "content": [
                    {
                        "username": "nikhilgargdrb",
                        "content": "I solve this question using \\n\\nhttps://leetcode.com/problems/powx-n/submissions/858720192/\\n\\nHow solution can be more optimised ?"
                    },
                    {
                        "username": "groote",
                        "content": "\\n\\n```\\n public double myPow(double x, int n) {\\n        if(n==0)\\n        {\\n            return 1; \\n        }\\n        if(n==1)\\n        {\\n            return x;\\n        }\\n        if(n==-1)\\n        {\\n            return 1/x;\\n        }\\n\\n           double ans=myPow(x,n/2);\\n            if(n%2==0)\\n            {\\n                return ans*ans;\\n            }\\n\\n            return ans*ans*x;\\n        \\n    }\\n```\\n\\nWhy above code is not working for the below test case\\nx=34.00515\\nn=-3"
                    },
                    {
                        "username": "abhicodeshukla",
                        "content": "i think you have not written the code when n is negative.\\n"
                    },
                    {
                        "username": "Mayuri24",
                        "content": "Time Limit Exceeded issue.\\nCan someone help me?\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        \\n        double ans=1.0;\\n        if(n<0){\\n            n = -n;\\n            x = 1/x;\\n        }\\n        for(int i=1; i<= n; i++)\\n        {\\n            ans= ans*x;\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "vansh_agarwal31",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double result = pow(x,n);\\n        return result;\\n    }\\n};\\n\\none line code in c++"
                    },
                    {
                        "username": "Akshaygithubsd",
                        "content": "-----------------------------------------ERROR----------------------------------------\\nLine 9: Char 27: runtime error: signed integer overflow: 2147483647 + 1 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:18:27\\n-------------------------------------------------------------------------------------------------------\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double a=1.0;\\n        if(n==0)\\n        return 1;\\n        else if(n>0){\\n        double y=n;\\n        for(int i=1;i<=y;i++)\\n        {\\n             a=a*x;\\n        }\\n        return a;\\n        }\\n        else{\\n            for(int i=-1;i>=n;i--){\\n                a=a/x;\\n            }\\n            return a;\\n        }\\n        \\n    }\\n};"
                    },
                    {
                        "username": "Gopal_dixit",
                        "content": "// HELP ME TO FIND MISTAKE ,IT GIVES RUN TIME ERROR\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n   double anspow=1;\\n    if(n<0){\\n        long long int m=n;\\n    m=-n;\\n    x=1/x;\\n    double ans=myPow(x,m/2);\\n    if(m&1){\\n        return x*ans*ans;\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n       \\n    }\\n    if(n==0){\\n            return 1;\\n    }\\n    if(n==1){\\n        return x;\\n    }\\n    double ans=myPow(x,n/2);\\n    if(n&1){\\n        return x*ans*ans;\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n    }\\n};"
                    },
                    {
                        "username": "IlyaMoskva",
                        "content": " if((n & 1) == 1) will be boolean"
                    },
                    {
                        "username": "Pintu236",
                        "content": "In recursive approach we need to cut the power to lowest possible subproblem. \nso let's say at leaf node we will have n if 1 then just return the x in case of negative 1/x.\nCheckout tree so you can get better understanding.\n[Tree for  2^6](https://drive.google.com/file/d/1hhmP7md8PpSyaMGCiCnr7_q7cvwPrTzz/view?usp=sharing)\n\n `if (n == 1) {\n            return x;\n        } else if (n == -1) {\n            return 1 / x;\n        }`\n"
                    },
                    {
                        "username": "kakashi11",
                        "content": "i got TLE for       n= INT_MAX   (2147483647)     and x= 1.00000\\nbut while i run it, it gives accepted correct ans, why so? \\n\\nthis is my code\\n long long temp=n;\\n        double ans=1.0;\\n        bool cnt=false;\\n\\n        if(n<0) \\n        {temp=(-1)*temp; cnt=true;}\\n            \\n        for(long long i=1; i<=temp; i++)\\n        {\\n            ans= ans*x;\\n        }\\n        if(cnt==true)\\n        return 1/ans;\\n\\n        else return ans;"
                    },
                    {
                        "username": "p1656531",
                        "content": "  public double myPow(double x, int n) {\\n        if (n == 0) return 1.0;\\n        if (n == 1) return x;\\n        if (n == -1) return 1 / x;\\n        double sqrt = myPow(x, n / 2);\\n        return sqrt * sqrt * myPow(x, n % 2);\\n    }"
                    },
                    {
                        "username": "skillcap",
                        "content": "Interesting, the answer is also the name of the problem..."
                    }
                ]
            },
            {
                "id": 1711095,
                "content": [
                    {
                        "username": "nikhilgargdrb",
                        "content": "I solve this question using \\n\\nhttps://leetcode.com/problems/powx-n/submissions/858720192/\\n\\nHow solution can be more optimised ?"
                    },
                    {
                        "username": "groote",
                        "content": "\\n\\n```\\n public double myPow(double x, int n) {\\n        if(n==0)\\n        {\\n            return 1; \\n        }\\n        if(n==1)\\n        {\\n            return x;\\n        }\\n        if(n==-1)\\n        {\\n            return 1/x;\\n        }\\n\\n           double ans=myPow(x,n/2);\\n            if(n%2==0)\\n            {\\n                return ans*ans;\\n            }\\n\\n            return ans*ans*x;\\n        \\n    }\\n```\\n\\nWhy above code is not working for the below test case\\nx=34.00515\\nn=-3"
                    },
                    {
                        "username": "abhicodeshukla",
                        "content": "i think you have not written the code when n is negative.\\n"
                    },
                    {
                        "username": "Mayuri24",
                        "content": "Time Limit Exceeded issue.\\nCan someone help me?\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        \\n        double ans=1.0;\\n        if(n<0){\\n            n = -n;\\n            x = 1/x;\\n        }\\n        for(int i=1; i<= n; i++)\\n        {\\n            ans= ans*x;\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "vansh_agarwal31",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double result = pow(x,n);\\n        return result;\\n    }\\n};\\n\\none line code in c++"
                    },
                    {
                        "username": "Akshaygithubsd",
                        "content": "-----------------------------------------ERROR----------------------------------------\\nLine 9: Char 27: runtime error: signed integer overflow: 2147483647 + 1 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:18:27\\n-------------------------------------------------------------------------------------------------------\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double a=1.0;\\n        if(n==0)\\n        return 1;\\n        else if(n>0){\\n        double y=n;\\n        for(int i=1;i<=y;i++)\\n        {\\n             a=a*x;\\n        }\\n        return a;\\n        }\\n        else{\\n            for(int i=-1;i>=n;i--){\\n                a=a/x;\\n            }\\n            return a;\\n        }\\n        \\n    }\\n};"
                    },
                    {
                        "username": "Gopal_dixit",
                        "content": "// HELP ME TO FIND MISTAKE ,IT GIVES RUN TIME ERROR\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n   double anspow=1;\\n    if(n<0){\\n        long long int m=n;\\n    m=-n;\\n    x=1/x;\\n    double ans=myPow(x,m/2);\\n    if(m&1){\\n        return x*ans*ans;\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n       \\n    }\\n    if(n==0){\\n            return 1;\\n    }\\n    if(n==1){\\n        return x;\\n    }\\n    double ans=myPow(x,n/2);\\n    if(n&1){\\n        return x*ans*ans;\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n    }\\n};"
                    },
                    {
                        "username": "IlyaMoskva",
                        "content": " if((n & 1) == 1) will be boolean"
                    },
                    {
                        "username": "Pintu236",
                        "content": "In recursive approach we need to cut the power to lowest possible subproblem. \nso let's say at leaf node we will have n if 1 then just return the x in case of negative 1/x.\nCheckout tree so you can get better understanding.\n[Tree for  2^6](https://drive.google.com/file/d/1hhmP7md8PpSyaMGCiCnr7_q7cvwPrTzz/view?usp=sharing)\n\n `if (n == 1) {\n            return x;\n        } else if (n == -1) {\n            return 1 / x;\n        }`\n"
                    },
                    {
                        "username": "kakashi11",
                        "content": "i got TLE for       n= INT_MAX   (2147483647)     and x= 1.00000\\nbut while i run it, it gives accepted correct ans, why so? \\n\\nthis is my code\\n long long temp=n;\\n        double ans=1.0;\\n        bool cnt=false;\\n\\n        if(n<0) \\n        {temp=(-1)*temp; cnt=true;}\\n            \\n        for(long long i=1; i<=temp; i++)\\n        {\\n            ans= ans*x;\\n        }\\n        if(cnt==true)\\n        return 1/ans;\\n\\n        else return ans;"
                    },
                    {
                        "username": "p1656531",
                        "content": "  public double myPow(double x, int n) {\\n        if (n == 0) return 1.0;\\n        if (n == 1) return x;\\n        if (n == -1) return 1 / x;\\n        double sqrt = myPow(x, n / 2);\\n        return sqrt * sqrt * myPow(x, n % 2);\\n    }"
                    },
                    {
                        "username": "skillcap",
                        "content": "Interesting, the answer is also the name of the problem..."
                    }
                ]
            },
            {
                "id": 1702724,
                "content": [
                    {
                        "username": "nikhilgargdrb",
                        "content": "I solve this question using \\n\\nhttps://leetcode.com/problems/powx-n/submissions/858720192/\\n\\nHow solution can be more optimised ?"
                    },
                    {
                        "username": "groote",
                        "content": "\\n\\n```\\n public double myPow(double x, int n) {\\n        if(n==0)\\n        {\\n            return 1; \\n        }\\n        if(n==1)\\n        {\\n            return x;\\n        }\\n        if(n==-1)\\n        {\\n            return 1/x;\\n        }\\n\\n           double ans=myPow(x,n/2);\\n            if(n%2==0)\\n            {\\n                return ans*ans;\\n            }\\n\\n            return ans*ans*x;\\n        \\n    }\\n```\\n\\nWhy above code is not working for the below test case\\nx=34.00515\\nn=-3"
                    },
                    {
                        "username": "abhicodeshukla",
                        "content": "i think you have not written the code when n is negative.\\n"
                    },
                    {
                        "username": "Mayuri24",
                        "content": "Time Limit Exceeded issue.\\nCan someone help me?\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        \\n        double ans=1.0;\\n        if(n<0){\\n            n = -n;\\n            x = 1/x;\\n        }\\n        for(int i=1; i<= n; i++)\\n        {\\n            ans= ans*x;\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "vansh_agarwal31",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double result = pow(x,n);\\n        return result;\\n    }\\n};\\n\\none line code in c++"
                    },
                    {
                        "username": "Akshaygithubsd",
                        "content": "-----------------------------------------ERROR----------------------------------------\\nLine 9: Char 27: runtime error: signed integer overflow: 2147483647 + 1 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:18:27\\n-------------------------------------------------------------------------------------------------------\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double a=1.0;\\n        if(n==0)\\n        return 1;\\n        else if(n>0){\\n        double y=n;\\n        for(int i=1;i<=y;i++)\\n        {\\n             a=a*x;\\n        }\\n        return a;\\n        }\\n        else{\\n            for(int i=-1;i>=n;i--){\\n                a=a/x;\\n            }\\n            return a;\\n        }\\n        \\n    }\\n};"
                    },
                    {
                        "username": "Gopal_dixit",
                        "content": "// HELP ME TO FIND MISTAKE ,IT GIVES RUN TIME ERROR\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n   double anspow=1;\\n    if(n<0){\\n        long long int m=n;\\n    m=-n;\\n    x=1/x;\\n    double ans=myPow(x,m/2);\\n    if(m&1){\\n        return x*ans*ans;\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n       \\n    }\\n    if(n==0){\\n            return 1;\\n    }\\n    if(n==1){\\n        return x;\\n    }\\n    double ans=myPow(x,n/2);\\n    if(n&1){\\n        return x*ans*ans;\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n    }\\n};"
                    },
                    {
                        "username": "IlyaMoskva",
                        "content": " if((n & 1) == 1) will be boolean"
                    },
                    {
                        "username": "Pintu236",
                        "content": "In recursive approach we need to cut the power to lowest possible subproblem. \nso let's say at leaf node we will have n if 1 then just return the x in case of negative 1/x.\nCheckout tree so you can get better understanding.\n[Tree for  2^6](https://drive.google.com/file/d/1hhmP7md8PpSyaMGCiCnr7_q7cvwPrTzz/view?usp=sharing)\n\n `if (n == 1) {\n            return x;\n        } else if (n == -1) {\n            return 1 / x;\n        }`\n"
                    },
                    {
                        "username": "kakashi11",
                        "content": "i got TLE for       n= INT_MAX   (2147483647)     and x= 1.00000\\nbut while i run it, it gives accepted correct ans, why so? \\n\\nthis is my code\\n long long temp=n;\\n        double ans=1.0;\\n        bool cnt=false;\\n\\n        if(n<0) \\n        {temp=(-1)*temp; cnt=true;}\\n            \\n        for(long long i=1; i<=temp; i++)\\n        {\\n            ans= ans*x;\\n        }\\n        if(cnt==true)\\n        return 1/ans;\\n\\n        else return ans;"
                    },
                    {
                        "username": "p1656531",
                        "content": "  public double myPow(double x, int n) {\\n        if (n == 0) return 1.0;\\n        if (n == 1) return x;\\n        if (n == -1) return 1 / x;\\n        double sqrt = myPow(x, n / 2);\\n        return sqrt * sqrt * myPow(x, n % 2);\\n    }"
                    },
                    {
                        "username": "skillcap",
                        "content": "Interesting, the answer is also the name of the problem..."
                    }
                ]
            },
            {
                "id": 1702558,
                "content": [
                    {
                        "username": "nikhilgargdrb",
                        "content": "I solve this question using \\n\\nhttps://leetcode.com/problems/powx-n/submissions/858720192/\\n\\nHow solution can be more optimised ?"
                    },
                    {
                        "username": "groote",
                        "content": "\\n\\n```\\n public double myPow(double x, int n) {\\n        if(n==0)\\n        {\\n            return 1; \\n        }\\n        if(n==1)\\n        {\\n            return x;\\n        }\\n        if(n==-1)\\n        {\\n            return 1/x;\\n        }\\n\\n           double ans=myPow(x,n/2);\\n            if(n%2==0)\\n            {\\n                return ans*ans;\\n            }\\n\\n            return ans*ans*x;\\n        \\n    }\\n```\\n\\nWhy above code is not working for the below test case\\nx=34.00515\\nn=-3"
                    },
                    {
                        "username": "abhicodeshukla",
                        "content": "i think you have not written the code when n is negative.\\n"
                    },
                    {
                        "username": "Mayuri24",
                        "content": "Time Limit Exceeded issue.\\nCan someone help me?\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        \\n        double ans=1.0;\\n        if(n<0){\\n            n = -n;\\n            x = 1/x;\\n        }\\n        for(int i=1; i<= n; i++)\\n        {\\n            ans= ans*x;\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "vansh_agarwal31",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double result = pow(x,n);\\n        return result;\\n    }\\n};\\n\\none line code in c++"
                    },
                    {
                        "username": "Akshaygithubsd",
                        "content": "-----------------------------------------ERROR----------------------------------------\\nLine 9: Char 27: runtime error: signed integer overflow: 2147483647 + 1 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:18:27\\n-------------------------------------------------------------------------------------------------------\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double a=1.0;\\n        if(n==0)\\n        return 1;\\n        else if(n>0){\\n        double y=n;\\n        for(int i=1;i<=y;i++)\\n        {\\n             a=a*x;\\n        }\\n        return a;\\n        }\\n        else{\\n            for(int i=-1;i>=n;i--){\\n                a=a/x;\\n            }\\n            return a;\\n        }\\n        \\n    }\\n};"
                    },
                    {
                        "username": "Gopal_dixit",
                        "content": "// HELP ME TO FIND MISTAKE ,IT GIVES RUN TIME ERROR\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n   double anspow=1;\\n    if(n<0){\\n        long long int m=n;\\n    m=-n;\\n    x=1/x;\\n    double ans=myPow(x,m/2);\\n    if(m&1){\\n        return x*ans*ans;\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n       \\n    }\\n    if(n==0){\\n            return 1;\\n    }\\n    if(n==1){\\n        return x;\\n    }\\n    double ans=myPow(x,n/2);\\n    if(n&1){\\n        return x*ans*ans;\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n    }\\n};"
                    },
                    {
                        "username": "IlyaMoskva",
                        "content": " if((n & 1) == 1) will be boolean"
                    },
                    {
                        "username": "Pintu236",
                        "content": "In recursive approach we need to cut the power to lowest possible subproblem. \nso let's say at leaf node we will have n if 1 then just return the x in case of negative 1/x.\nCheckout tree so you can get better understanding.\n[Tree for  2^6](https://drive.google.com/file/d/1hhmP7md8PpSyaMGCiCnr7_q7cvwPrTzz/view?usp=sharing)\n\n `if (n == 1) {\n            return x;\n        } else if (n == -1) {\n            return 1 / x;\n        }`\n"
                    },
                    {
                        "username": "kakashi11",
                        "content": "i got TLE for       n= INT_MAX   (2147483647)     and x= 1.00000\\nbut while i run it, it gives accepted correct ans, why so? \\n\\nthis is my code\\n long long temp=n;\\n        double ans=1.0;\\n        bool cnt=false;\\n\\n        if(n<0) \\n        {temp=(-1)*temp; cnt=true;}\\n            \\n        for(long long i=1; i<=temp; i++)\\n        {\\n            ans= ans*x;\\n        }\\n        if(cnt==true)\\n        return 1/ans;\\n\\n        else return ans;"
                    },
                    {
                        "username": "p1656531",
                        "content": "  public double myPow(double x, int n) {\\n        if (n == 0) return 1.0;\\n        if (n == 1) return x;\\n        if (n == -1) return 1 / x;\\n        double sqrt = myPow(x, n / 2);\\n        return sqrt * sqrt * myPow(x, n % 2);\\n    }"
                    },
                    {
                        "username": "skillcap",
                        "content": "Interesting, the answer is also the name of the problem..."
                    }
                ]
            },
            {
                "id": 1683338,
                "content": [
                    {
                        "username": "nikhilgargdrb",
                        "content": "I solve this question using \\n\\nhttps://leetcode.com/problems/powx-n/submissions/858720192/\\n\\nHow solution can be more optimised ?"
                    },
                    {
                        "username": "groote",
                        "content": "\\n\\n```\\n public double myPow(double x, int n) {\\n        if(n==0)\\n        {\\n            return 1; \\n        }\\n        if(n==1)\\n        {\\n            return x;\\n        }\\n        if(n==-1)\\n        {\\n            return 1/x;\\n        }\\n\\n           double ans=myPow(x,n/2);\\n            if(n%2==0)\\n            {\\n                return ans*ans;\\n            }\\n\\n            return ans*ans*x;\\n        \\n    }\\n```\\n\\nWhy above code is not working for the below test case\\nx=34.00515\\nn=-3"
                    },
                    {
                        "username": "abhicodeshukla",
                        "content": "i think you have not written the code when n is negative.\\n"
                    },
                    {
                        "username": "Mayuri24",
                        "content": "Time Limit Exceeded issue.\\nCan someone help me?\\n\\nclass Solution {\\n    public double myPow(double x, int n) {\\n        \\n        double ans=1.0;\\n        if(n<0){\\n            n = -n;\\n            x = 1/x;\\n        }\\n        for(int i=1; i<= n; i++)\\n        {\\n            ans= ans*x;\\n        }\\n        return ans;\\n    }\\n}"
                    },
                    {
                        "username": "vansh_agarwal31",
                        "content": "class Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double result = pow(x,n);\\n        return result;\\n    }\\n};\\n\\none line code in c++"
                    },
                    {
                        "username": "Akshaygithubsd",
                        "content": "-----------------------------------------ERROR----------------------------------------\\nLine 9: Char 27: runtime error: signed integer overflow: 2147483647 + 1 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:18:27\\n-------------------------------------------------------------------------------------------------------\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n        double a=1.0;\\n        if(n==0)\\n        return 1;\\n        else if(n>0){\\n        double y=n;\\n        for(int i=1;i<=y;i++)\\n        {\\n             a=a*x;\\n        }\\n        return a;\\n        }\\n        else{\\n            for(int i=-1;i>=n;i--){\\n                a=a/x;\\n            }\\n            return a;\\n        }\\n        \\n    }\\n};"
                    },
                    {
                        "username": "Gopal_dixit",
                        "content": "// HELP ME TO FIND MISTAKE ,IT GIVES RUN TIME ERROR\\n\\nclass Solution {\\npublic:\\n    double myPow(double x, int n) {\\n   double anspow=1;\\n    if(n<0){\\n        long long int m=n;\\n    m=-n;\\n    x=1/x;\\n    double ans=myPow(x,m/2);\\n    if(m&1){\\n        return x*ans*ans;\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n       \\n    }\\n    if(n==0){\\n            return 1;\\n    }\\n    if(n==1){\\n        return x;\\n    }\\n    double ans=myPow(x,n/2);\\n    if(n&1){\\n        return x*ans*ans;\\n    }\\n    else{\\n        return ans*ans;\\n    }\\n    }\\n};"
                    },
                    {
                        "username": "IlyaMoskva",
                        "content": " if((n & 1) == 1) will be boolean"
                    },
                    {
                        "username": "Pintu236",
                        "content": "In recursive approach we need to cut the power to lowest possible subproblem. \nso let's say at leaf node we will have n if 1 then just return the x in case of negative 1/x.\nCheckout tree so you can get better understanding.\n[Tree for  2^6](https://drive.google.com/file/d/1hhmP7md8PpSyaMGCiCnr7_q7cvwPrTzz/view?usp=sharing)\n\n `if (n == 1) {\n            return x;\n        } else if (n == -1) {\n            return 1 / x;\n        }`\n"
                    },
                    {
                        "username": "kakashi11",
                        "content": "i got TLE for       n= INT_MAX   (2147483647)     and x= 1.00000\\nbut while i run it, it gives accepted correct ans, why so? \\n\\nthis is my code\\n long long temp=n;\\n        double ans=1.0;\\n        bool cnt=false;\\n\\n        if(n<0) \\n        {temp=(-1)*temp; cnt=true;}\\n            \\n        for(long long i=1; i<=temp; i++)\\n        {\\n            ans= ans*x;\\n        }\\n        if(cnt==true)\\n        return 1/ans;\\n\\n        else return ans;"
                    },
                    {
                        "username": "p1656531",
                        "content": "  public double myPow(double x, int n) {\\n        if (n == 0) return 1.0;\\n        if (n == 1) return x;\\n        if (n == -1) return 1 / x;\\n        double sqrt = myPow(x, n / 2);\\n        return sqrt * sqrt * myPow(x, n % 2);\\n    }"
                    },
                    {
                        "username": "skillcap",
                        "content": "Interesting, the answer is also the name of the problem..."
                    }
                ]
            },
            {
                "id": 1678945,
                "content": [
                    {
                        "username": "zhangyueming",
                        "content": "n/=2 Time Limit Exceed\\nn>>>1 Beat 100%"
                    },
                    {
                        "username": "araiz01",
                        "content": "I\\'m getting java.lang.StackOverflowError on line 6 which is as follows: \\n`\\n    public double myPow(double x, int n) {\\n        if(n>0){\\n            if(n == 1)\\n                return x;\\n            return x * myPow(x, n-1);\\n        }`"
                    },
                    {
                        "username": "mishra_anurag",
                        "content": "ghatiya sawaal"
                    },
                    {
                        "username": "barstow123",
                        "content": "Heads up. This question is math heavy. \\n\\nIf you are below senior or principle level, you won\\'t see this problem in your interviews. Focus on Dynamic Programming, String, Array, and Search problems instead.\\n\\nEven for senior level, this style of problem is rare to see."
                    },
                    {
                        "username": "rustammollaa",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n        long n1=Math.abs((long)n);\\n        double ans=1.0;\\n        if(n==0) return 1;\\n        if(n<0) x=1/x;\\n        while(n1!=0){\\n            if(n1%2==1){\\n                ans*=x;\\n                n1-=1;\\n            }\\n            else{\\n                x*=x;\\n                n1/=2;\\n            }\\n        } \\n        \\n\\n        return ans ;\\n    }\\n}"
                    },
                    {
                        "username": "arnavjain",
                        "content": "Runtime: 16 ms, faster than 99.42%  Memory Usage: 12.8 MB, less than 100.00% \\nTHIS IS THE EASIEST PROGRAM ON LEETCODE. HOW IS THE DIFFICULTY MEDIUM?!!!!!"
                    },
                    {
                        "username": "imsamarth",
                        "content": "![image](https://assets.leetcode.com/users/images/ccce55dc-cff6-4faa-9c5f-5becef40f6f1_1642494038.274861.png)\\n\\n![image](https://assets.leetcode.com/users/images/cb074c0a-f5d9-4308-9092-834e8b9462a4_1642493916.8664188.png)\\n\\n\\n\\n// Built-in C++ function faster than 100% solutions,\\nreturn pow(x,n);"
                    },
                    {
                        "username": "Samiudeen",
                        "content": "return Math.pow(x,n);"
                    },
                    {
                        "username": "dhruv4023",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n     return Math.pow(x,n);   \\n    }\\n} \\n\\nuse inbuild math function"
                    },
                    {
                        "username": "Kaltu",
                        "content": "The first two words state you are to implement this exact function, implementing a function by calling itself is illogical"
                    },
                    {
                        "username": "Prathamesh66",
                        "content": "see editorial for optimal approach"
                    }
                ]
            },
            {
                "id": 1674471,
                "content": [
                    {
                        "username": "zhangyueming",
                        "content": "n/=2 Time Limit Exceed\\nn>>>1 Beat 100%"
                    },
                    {
                        "username": "araiz01",
                        "content": "I\\'m getting java.lang.StackOverflowError on line 6 which is as follows: \\n`\\n    public double myPow(double x, int n) {\\n        if(n>0){\\n            if(n == 1)\\n                return x;\\n            return x * myPow(x, n-1);\\n        }`"
                    },
                    {
                        "username": "mishra_anurag",
                        "content": "ghatiya sawaal"
                    },
                    {
                        "username": "barstow123",
                        "content": "Heads up. This question is math heavy. \\n\\nIf you are below senior or principle level, you won\\'t see this problem in your interviews. Focus on Dynamic Programming, String, Array, and Search problems instead.\\n\\nEven for senior level, this style of problem is rare to see."
                    },
                    {
                        "username": "rustammollaa",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n        long n1=Math.abs((long)n);\\n        double ans=1.0;\\n        if(n==0) return 1;\\n        if(n<0) x=1/x;\\n        while(n1!=0){\\n            if(n1%2==1){\\n                ans*=x;\\n                n1-=1;\\n            }\\n            else{\\n                x*=x;\\n                n1/=2;\\n            }\\n        } \\n        \\n\\n        return ans ;\\n    }\\n}"
                    },
                    {
                        "username": "arnavjain",
                        "content": "Runtime: 16 ms, faster than 99.42%  Memory Usage: 12.8 MB, less than 100.00% \\nTHIS IS THE EASIEST PROGRAM ON LEETCODE. HOW IS THE DIFFICULTY MEDIUM?!!!!!"
                    },
                    {
                        "username": "imsamarth",
                        "content": "![image](https://assets.leetcode.com/users/images/ccce55dc-cff6-4faa-9c5f-5becef40f6f1_1642494038.274861.png)\\n\\n![image](https://assets.leetcode.com/users/images/cb074c0a-f5d9-4308-9092-834e8b9462a4_1642493916.8664188.png)\\n\\n\\n\\n// Built-in C++ function faster than 100% solutions,\\nreturn pow(x,n);"
                    },
                    {
                        "username": "Samiudeen",
                        "content": "return Math.pow(x,n);"
                    },
                    {
                        "username": "dhruv4023",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n     return Math.pow(x,n);   \\n    }\\n} \\n\\nuse inbuild math function"
                    },
                    {
                        "username": "Kaltu",
                        "content": "The first two words state you are to implement this exact function, implementing a function by calling itself is illogical"
                    },
                    {
                        "username": "Prathamesh66",
                        "content": "see editorial for optimal approach"
                    }
                ]
            },
            {
                "id": 1666758,
                "content": [
                    {
                        "username": "zhangyueming",
                        "content": "n/=2 Time Limit Exceed\\nn>>>1 Beat 100%"
                    },
                    {
                        "username": "araiz01",
                        "content": "I\\'m getting java.lang.StackOverflowError on line 6 which is as follows: \\n`\\n    public double myPow(double x, int n) {\\n        if(n>0){\\n            if(n == 1)\\n                return x;\\n            return x * myPow(x, n-1);\\n        }`"
                    },
                    {
                        "username": "mishra_anurag",
                        "content": "ghatiya sawaal"
                    },
                    {
                        "username": "barstow123",
                        "content": "Heads up. This question is math heavy. \\n\\nIf you are below senior or principle level, you won\\'t see this problem in your interviews. Focus on Dynamic Programming, String, Array, and Search problems instead.\\n\\nEven for senior level, this style of problem is rare to see."
                    },
                    {
                        "username": "rustammollaa",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n        long n1=Math.abs((long)n);\\n        double ans=1.0;\\n        if(n==0) return 1;\\n        if(n<0) x=1/x;\\n        while(n1!=0){\\n            if(n1%2==1){\\n                ans*=x;\\n                n1-=1;\\n            }\\n            else{\\n                x*=x;\\n                n1/=2;\\n            }\\n        } \\n        \\n\\n        return ans ;\\n    }\\n}"
                    },
                    {
                        "username": "arnavjain",
                        "content": "Runtime: 16 ms, faster than 99.42%  Memory Usage: 12.8 MB, less than 100.00% \\nTHIS IS THE EASIEST PROGRAM ON LEETCODE. HOW IS THE DIFFICULTY MEDIUM?!!!!!"
                    },
                    {
                        "username": "imsamarth",
                        "content": "![image](https://assets.leetcode.com/users/images/ccce55dc-cff6-4faa-9c5f-5becef40f6f1_1642494038.274861.png)\\n\\n![image](https://assets.leetcode.com/users/images/cb074c0a-f5d9-4308-9092-834e8b9462a4_1642493916.8664188.png)\\n\\n\\n\\n// Built-in C++ function faster than 100% solutions,\\nreturn pow(x,n);"
                    },
                    {
                        "username": "Samiudeen",
                        "content": "return Math.pow(x,n);"
                    },
                    {
                        "username": "dhruv4023",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n     return Math.pow(x,n);   \\n    }\\n} \\n\\nuse inbuild math function"
                    },
                    {
                        "username": "Kaltu",
                        "content": "The first two words state you are to implement this exact function, implementing a function by calling itself is illogical"
                    },
                    {
                        "username": "Prathamesh66",
                        "content": "see editorial for optimal approach"
                    }
                ]
            },
            {
                "id": 1641260,
                "content": [
                    {
                        "username": "zhangyueming",
                        "content": "n/=2 Time Limit Exceed\\nn>>>1 Beat 100%"
                    },
                    {
                        "username": "araiz01",
                        "content": "I\\'m getting java.lang.StackOverflowError on line 6 which is as follows: \\n`\\n    public double myPow(double x, int n) {\\n        if(n>0){\\n            if(n == 1)\\n                return x;\\n            return x * myPow(x, n-1);\\n        }`"
                    },
                    {
                        "username": "mishra_anurag",
                        "content": "ghatiya sawaal"
                    },
                    {
                        "username": "barstow123",
                        "content": "Heads up. This question is math heavy. \\n\\nIf you are below senior or principle level, you won\\'t see this problem in your interviews. Focus on Dynamic Programming, String, Array, and Search problems instead.\\n\\nEven for senior level, this style of problem is rare to see."
                    },
                    {
                        "username": "rustammollaa",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n        long n1=Math.abs((long)n);\\n        double ans=1.0;\\n        if(n==0) return 1;\\n        if(n<0) x=1/x;\\n        while(n1!=0){\\n            if(n1%2==1){\\n                ans*=x;\\n                n1-=1;\\n            }\\n            else{\\n                x*=x;\\n                n1/=2;\\n            }\\n        } \\n        \\n\\n        return ans ;\\n    }\\n}"
                    },
                    {
                        "username": "arnavjain",
                        "content": "Runtime: 16 ms, faster than 99.42%  Memory Usage: 12.8 MB, less than 100.00% \\nTHIS IS THE EASIEST PROGRAM ON LEETCODE. HOW IS THE DIFFICULTY MEDIUM?!!!!!"
                    },
                    {
                        "username": "imsamarth",
                        "content": "![image](https://assets.leetcode.com/users/images/ccce55dc-cff6-4faa-9c5f-5becef40f6f1_1642494038.274861.png)\\n\\n![image](https://assets.leetcode.com/users/images/cb074c0a-f5d9-4308-9092-834e8b9462a4_1642493916.8664188.png)\\n\\n\\n\\n// Built-in C++ function faster than 100% solutions,\\nreturn pow(x,n);"
                    },
                    {
                        "username": "Samiudeen",
                        "content": "return Math.pow(x,n);"
                    },
                    {
                        "username": "dhruv4023",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n     return Math.pow(x,n);   \\n    }\\n} \\n\\nuse inbuild math function"
                    },
                    {
                        "username": "Kaltu",
                        "content": "The first two words state you are to implement this exact function, implementing a function by calling itself is illogical"
                    },
                    {
                        "username": "Prathamesh66",
                        "content": "see editorial for optimal approach"
                    }
                ]
            },
            {
                "id": 1623669,
                "content": [
                    {
                        "username": "zhangyueming",
                        "content": "n/=2 Time Limit Exceed\\nn>>>1 Beat 100%"
                    },
                    {
                        "username": "araiz01",
                        "content": "I\\'m getting java.lang.StackOverflowError on line 6 which is as follows: \\n`\\n    public double myPow(double x, int n) {\\n        if(n>0){\\n            if(n == 1)\\n                return x;\\n            return x * myPow(x, n-1);\\n        }`"
                    },
                    {
                        "username": "mishra_anurag",
                        "content": "ghatiya sawaal"
                    },
                    {
                        "username": "barstow123",
                        "content": "Heads up. This question is math heavy. \\n\\nIf you are below senior or principle level, you won\\'t see this problem in your interviews. Focus on Dynamic Programming, String, Array, and Search problems instead.\\n\\nEven for senior level, this style of problem is rare to see."
                    },
                    {
                        "username": "rustammollaa",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n        long n1=Math.abs((long)n);\\n        double ans=1.0;\\n        if(n==0) return 1;\\n        if(n<0) x=1/x;\\n        while(n1!=0){\\n            if(n1%2==1){\\n                ans*=x;\\n                n1-=1;\\n            }\\n            else{\\n                x*=x;\\n                n1/=2;\\n            }\\n        } \\n        \\n\\n        return ans ;\\n    }\\n}"
                    },
                    {
                        "username": "arnavjain",
                        "content": "Runtime: 16 ms, faster than 99.42%  Memory Usage: 12.8 MB, less than 100.00% \\nTHIS IS THE EASIEST PROGRAM ON LEETCODE. HOW IS THE DIFFICULTY MEDIUM?!!!!!"
                    },
                    {
                        "username": "imsamarth",
                        "content": "![image](https://assets.leetcode.com/users/images/ccce55dc-cff6-4faa-9c5f-5becef40f6f1_1642494038.274861.png)\\n\\n![image](https://assets.leetcode.com/users/images/cb074c0a-f5d9-4308-9092-834e8b9462a4_1642493916.8664188.png)\\n\\n\\n\\n// Built-in C++ function faster than 100% solutions,\\nreturn pow(x,n);"
                    },
                    {
                        "username": "Samiudeen",
                        "content": "return Math.pow(x,n);"
                    },
                    {
                        "username": "dhruv4023",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n     return Math.pow(x,n);   \\n    }\\n} \\n\\nuse inbuild math function"
                    },
                    {
                        "username": "Kaltu",
                        "content": "The first two words state you are to implement this exact function, implementing a function by calling itself is illogical"
                    },
                    {
                        "username": "Prathamesh66",
                        "content": "see editorial for optimal approach"
                    }
                ]
            },
            {
                "id": 1569808,
                "content": [
                    {
                        "username": "zhangyueming",
                        "content": "n/=2 Time Limit Exceed\\nn>>>1 Beat 100%"
                    },
                    {
                        "username": "araiz01",
                        "content": "I\\'m getting java.lang.StackOverflowError on line 6 which is as follows: \\n`\\n    public double myPow(double x, int n) {\\n        if(n>0){\\n            if(n == 1)\\n                return x;\\n            return x * myPow(x, n-1);\\n        }`"
                    },
                    {
                        "username": "mishra_anurag",
                        "content": "ghatiya sawaal"
                    },
                    {
                        "username": "barstow123",
                        "content": "Heads up. This question is math heavy. \\n\\nIf you are below senior or principle level, you won\\'t see this problem in your interviews. Focus on Dynamic Programming, String, Array, and Search problems instead.\\n\\nEven for senior level, this style of problem is rare to see."
                    },
                    {
                        "username": "rustammollaa",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n        long n1=Math.abs((long)n);\\n        double ans=1.0;\\n        if(n==0) return 1;\\n        if(n<0) x=1/x;\\n        while(n1!=0){\\n            if(n1%2==1){\\n                ans*=x;\\n                n1-=1;\\n            }\\n            else{\\n                x*=x;\\n                n1/=2;\\n            }\\n        } \\n        \\n\\n        return ans ;\\n    }\\n}"
                    },
                    {
                        "username": "arnavjain",
                        "content": "Runtime: 16 ms, faster than 99.42%  Memory Usage: 12.8 MB, less than 100.00% \\nTHIS IS THE EASIEST PROGRAM ON LEETCODE. HOW IS THE DIFFICULTY MEDIUM?!!!!!"
                    },
                    {
                        "username": "imsamarth",
                        "content": "![image](https://assets.leetcode.com/users/images/ccce55dc-cff6-4faa-9c5f-5becef40f6f1_1642494038.274861.png)\\n\\n![image](https://assets.leetcode.com/users/images/cb074c0a-f5d9-4308-9092-834e8b9462a4_1642493916.8664188.png)\\n\\n\\n\\n// Built-in C++ function faster than 100% solutions,\\nreturn pow(x,n);"
                    },
                    {
                        "username": "Samiudeen",
                        "content": "return Math.pow(x,n);"
                    },
                    {
                        "username": "dhruv4023",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n     return Math.pow(x,n);   \\n    }\\n} \\n\\nuse inbuild math function"
                    },
                    {
                        "username": "Kaltu",
                        "content": "The first two words state you are to implement this exact function, implementing a function by calling itself is illogical"
                    },
                    {
                        "username": "Prathamesh66",
                        "content": "see editorial for optimal approach"
                    }
                ]
            },
            {
                "id": 1576256,
                "content": [
                    {
                        "username": "zhangyueming",
                        "content": "n/=2 Time Limit Exceed\\nn>>>1 Beat 100%"
                    },
                    {
                        "username": "araiz01",
                        "content": "I\\'m getting java.lang.StackOverflowError on line 6 which is as follows: \\n`\\n    public double myPow(double x, int n) {\\n        if(n>0){\\n            if(n == 1)\\n                return x;\\n            return x * myPow(x, n-1);\\n        }`"
                    },
                    {
                        "username": "mishra_anurag",
                        "content": "ghatiya sawaal"
                    },
                    {
                        "username": "barstow123",
                        "content": "Heads up. This question is math heavy. \\n\\nIf you are below senior or principle level, you won\\'t see this problem in your interviews. Focus on Dynamic Programming, String, Array, and Search problems instead.\\n\\nEven for senior level, this style of problem is rare to see."
                    },
                    {
                        "username": "rustammollaa",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n        long n1=Math.abs((long)n);\\n        double ans=1.0;\\n        if(n==0) return 1;\\n        if(n<0) x=1/x;\\n        while(n1!=0){\\n            if(n1%2==1){\\n                ans*=x;\\n                n1-=1;\\n            }\\n            else{\\n                x*=x;\\n                n1/=2;\\n            }\\n        } \\n        \\n\\n        return ans ;\\n    }\\n}"
                    },
                    {
                        "username": "arnavjain",
                        "content": "Runtime: 16 ms, faster than 99.42%  Memory Usage: 12.8 MB, less than 100.00% \\nTHIS IS THE EASIEST PROGRAM ON LEETCODE. HOW IS THE DIFFICULTY MEDIUM?!!!!!"
                    },
                    {
                        "username": "imsamarth",
                        "content": "![image](https://assets.leetcode.com/users/images/ccce55dc-cff6-4faa-9c5f-5becef40f6f1_1642494038.274861.png)\\n\\n![image](https://assets.leetcode.com/users/images/cb074c0a-f5d9-4308-9092-834e8b9462a4_1642493916.8664188.png)\\n\\n\\n\\n// Built-in C++ function faster than 100% solutions,\\nreturn pow(x,n);"
                    },
                    {
                        "username": "Samiudeen",
                        "content": "return Math.pow(x,n);"
                    },
                    {
                        "username": "dhruv4023",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n     return Math.pow(x,n);   \\n    }\\n} \\n\\nuse inbuild math function"
                    },
                    {
                        "username": "Kaltu",
                        "content": "The first two words state you are to implement this exact function, implementing a function by calling itself is illogical"
                    },
                    {
                        "username": "Prathamesh66",
                        "content": "see editorial for optimal approach"
                    }
                ]
            },
            {
                "id": 1575301,
                "content": [
                    {
                        "username": "zhangyueming",
                        "content": "n/=2 Time Limit Exceed\\nn>>>1 Beat 100%"
                    },
                    {
                        "username": "araiz01",
                        "content": "I\\'m getting java.lang.StackOverflowError on line 6 which is as follows: \\n`\\n    public double myPow(double x, int n) {\\n        if(n>0){\\n            if(n == 1)\\n                return x;\\n            return x * myPow(x, n-1);\\n        }`"
                    },
                    {
                        "username": "mishra_anurag",
                        "content": "ghatiya sawaal"
                    },
                    {
                        "username": "barstow123",
                        "content": "Heads up. This question is math heavy. \\n\\nIf you are below senior or principle level, you won\\'t see this problem in your interviews. Focus on Dynamic Programming, String, Array, and Search problems instead.\\n\\nEven for senior level, this style of problem is rare to see."
                    },
                    {
                        "username": "rustammollaa",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n        long n1=Math.abs((long)n);\\n        double ans=1.0;\\n        if(n==0) return 1;\\n        if(n<0) x=1/x;\\n        while(n1!=0){\\n            if(n1%2==1){\\n                ans*=x;\\n                n1-=1;\\n            }\\n            else{\\n                x*=x;\\n                n1/=2;\\n            }\\n        } \\n        \\n\\n        return ans ;\\n    }\\n}"
                    },
                    {
                        "username": "arnavjain",
                        "content": "Runtime: 16 ms, faster than 99.42%  Memory Usage: 12.8 MB, less than 100.00% \\nTHIS IS THE EASIEST PROGRAM ON LEETCODE. HOW IS THE DIFFICULTY MEDIUM?!!!!!"
                    },
                    {
                        "username": "imsamarth",
                        "content": "![image](https://assets.leetcode.com/users/images/ccce55dc-cff6-4faa-9c5f-5becef40f6f1_1642494038.274861.png)\\n\\n![image](https://assets.leetcode.com/users/images/cb074c0a-f5d9-4308-9092-834e8b9462a4_1642493916.8664188.png)\\n\\n\\n\\n// Built-in C++ function faster than 100% solutions,\\nreturn pow(x,n);"
                    },
                    {
                        "username": "Samiudeen",
                        "content": "return Math.pow(x,n);"
                    },
                    {
                        "username": "dhruv4023",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n     return Math.pow(x,n);   \\n    }\\n} \\n\\nuse inbuild math function"
                    },
                    {
                        "username": "Kaltu",
                        "content": "The first two words state you are to implement this exact function, implementing a function by calling itself is illogical"
                    },
                    {
                        "username": "Prathamesh66",
                        "content": "see editorial for optimal approach"
                    }
                ]
            },
            {
                "id": 2016503,
                "content": [
                    {
                        "username": "zhangyueming",
                        "content": "n/=2 Time Limit Exceed\\nn>>>1 Beat 100%"
                    },
                    {
                        "username": "araiz01",
                        "content": "I\\'m getting java.lang.StackOverflowError on line 6 which is as follows: \\n`\\n    public double myPow(double x, int n) {\\n        if(n>0){\\n            if(n == 1)\\n                return x;\\n            return x * myPow(x, n-1);\\n        }`"
                    },
                    {
                        "username": "mishra_anurag",
                        "content": "ghatiya sawaal"
                    },
                    {
                        "username": "barstow123",
                        "content": "Heads up. This question is math heavy. \\n\\nIf you are below senior or principle level, you won\\'t see this problem in your interviews. Focus on Dynamic Programming, String, Array, and Search problems instead.\\n\\nEven for senior level, this style of problem is rare to see."
                    },
                    {
                        "username": "rustammollaa",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n        long n1=Math.abs((long)n);\\n        double ans=1.0;\\n        if(n==0) return 1;\\n        if(n<0) x=1/x;\\n        while(n1!=0){\\n            if(n1%2==1){\\n                ans*=x;\\n                n1-=1;\\n            }\\n            else{\\n                x*=x;\\n                n1/=2;\\n            }\\n        } \\n        \\n\\n        return ans ;\\n    }\\n}"
                    },
                    {
                        "username": "arnavjain",
                        "content": "Runtime: 16 ms, faster than 99.42%  Memory Usage: 12.8 MB, less than 100.00% \\nTHIS IS THE EASIEST PROGRAM ON LEETCODE. HOW IS THE DIFFICULTY MEDIUM?!!!!!"
                    },
                    {
                        "username": "imsamarth",
                        "content": "![image](https://assets.leetcode.com/users/images/ccce55dc-cff6-4faa-9c5f-5becef40f6f1_1642494038.274861.png)\\n\\n![image](https://assets.leetcode.com/users/images/cb074c0a-f5d9-4308-9092-834e8b9462a4_1642493916.8664188.png)\\n\\n\\n\\n// Built-in C++ function faster than 100% solutions,\\nreturn pow(x,n);"
                    },
                    {
                        "username": "Samiudeen",
                        "content": "return Math.pow(x,n);"
                    },
                    {
                        "username": "dhruv4023",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n     return Math.pow(x,n);   \\n    }\\n} \\n\\nuse inbuild math function"
                    },
                    {
                        "username": "Kaltu",
                        "content": "The first two words state you are to implement this exact function, implementing a function by calling itself is illogical"
                    },
                    {
                        "username": "Prathamesh66",
                        "content": "see editorial for optimal approach"
                    }
                ]
            },
            {
                "id": 2005381,
                "content": [
                    {
                        "username": "zhangyueming",
                        "content": "n/=2 Time Limit Exceed\\nn>>>1 Beat 100%"
                    },
                    {
                        "username": "araiz01",
                        "content": "I\\'m getting java.lang.StackOverflowError on line 6 which is as follows: \\n`\\n    public double myPow(double x, int n) {\\n        if(n>0){\\n            if(n == 1)\\n                return x;\\n            return x * myPow(x, n-1);\\n        }`"
                    },
                    {
                        "username": "mishra_anurag",
                        "content": "ghatiya sawaal"
                    },
                    {
                        "username": "barstow123",
                        "content": "Heads up. This question is math heavy. \\n\\nIf you are below senior or principle level, you won\\'t see this problem in your interviews. Focus on Dynamic Programming, String, Array, and Search problems instead.\\n\\nEven for senior level, this style of problem is rare to see."
                    },
                    {
                        "username": "rustammollaa",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n        long n1=Math.abs((long)n);\\n        double ans=1.0;\\n        if(n==0) return 1;\\n        if(n<0) x=1/x;\\n        while(n1!=0){\\n            if(n1%2==1){\\n                ans*=x;\\n                n1-=1;\\n            }\\n            else{\\n                x*=x;\\n                n1/=2;\\n            }\\n        } \\n        \\n\\n        return ans ;\\n    }\\n}"
                    },
                    {
                        "username": "arnavjain",
                        "content": "Runtime: 16 ms, faster than 99.42%  Memory Usage: 12.8 MB, less than 100.00% \\nTHIS IS THE EASIEST PROGRAM ON LEETCODE. HOW IS THE DIFFICULTY MEDIUM?!!!!!"
                    },
                    {
                        "username": "imsamarth",
                        "content": "![image](https://assets.leetcode.com/users/images/ccce55dc-cff6-4faa-9c5f-5becef40f6f1_1642494038.274861.png)\\n\\n![image](https://assets.leetcode.com/users/images/cb074c0a-f5d9-4308-9092-834e8b9462a4_1642493916.8664188.png)\\n\\n\\n\\n// Built-in C++ function faster than 100% solutions,\\nreturn pow(x,n);"
                    },
                    {
                        "username": "Samiudeen",
                        "content": "return Math.pow(x,n);"
                    },
                    {
                        "username": "dhruv4023",
                        "content": "class Solution {\\n    public double myPow(double x, int n) {\\n     return Math.pow(x,n);   \\n    }\\n} \\n\\nuse inbuild math function"
                    },
                    {
                        "username": "Kaltu",
                        "content": "The first two words state you are to implement this exact function, implementing a function by calling itself is illogical"
                    },
                    {
                        "username": "Prathamesh66",
                        "content": "see editorial for optimal approach"
                    }
                ]
            }
        ]
    },
    {
        "title": "Evaluate Reverse Polish Notation",
        "question_content": "<p>You are given an array of strings <code>tokens</code> that represents an arithmetic expression in a <a href=\"http://en.wikipedia.org/wiki/Reverse_Polish_notation\" target=\"_blank\">Reverse Polish Notation</a>.</p>\n\n<p>Evaluate the expression. Return <em>an integer that represents the value of the expression</em>.</p>\n\n<p><strong>Note</strong> that:</p>\n\n<ul>\n\t<li>The valid operators are <code>&#39;+&#39;</code>, <code>&#39;-&#39;</code>, <code>&#39;*&#39;</code>, and <code>&#39;/&#39;</code>.</li>\n\t<li>Each operand may be an integer or another expression.</li>\n\t<li>The division between two integers always <strong>truncates toward zero</strong>.</li>\n\t<li>There will not be any division by zero.</li>\n\t<li>The input represents a valid arithmetic expression in a reverse polish notation.</li>\n\t<li>The answer and all the intermediate calculations can be represented in a <strong>32-bit</strong> integer.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> tokens = [&quot;2&quot;,&quot;1&quot;,&quot;+&quot;,&quot;3&quot;,&quot;*&quot;]\n<strong>Output:</strong> 9\n<strong>Explanation:</strong> ((2 + 1) * 3) = 9\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> tokens = [&quot;4&quot;,&quot;13&quot;,&quot;5&quot;,&quot;/&quot;,&quot;+&quot;]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> (4 + (13 / 5)) = 6\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> tokens = [&quot;10&quot;,&quot;6&quot;,&quot;9&quot;,&quot;3&quot;,&quot;+&quot;,&quot;-11&quot;,&quot;*&quot;,&quot;/&quot;,&quot;*&quot;,&quot;17&quot;,&quot;+&quot;,&quot;5&quot;,&quot;+&quot;]\n<strong>Output:</strong> 22\n<strong>Explanation:</strong> ((10 * (6 / ((9 + 3) * -11))) + 17) + 5\n= ((10 * (6 / (12 * -11))) + 17) + 5\n= ((10 * (6 / -132)) + 17) + 5\n= ((10 * 0) + 17) + 5\n= (0 + 17) + 5\n= 17 + 5\n= 22\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= tokens.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>tokens[i]</code> is either an operator: <code>&quot;+&quot;</code>, <code>&quot;-&quot;</code>, <code>&quot;*&quot;</code>, or <code>&quot;/&quot;</code>, or an integer in the range <code>[-200, 200]</code>.</li>\n</ul>\n",
        "solutions": [
            {
                "id": 47514,
                "title": "fancy-c-lambda-expression-solution",
                "content": "    class Solution {\\n    public:\\n        int evalRPN(vector<string>& tokens) {\\n            unordered_map<string, function<int (int, int) > > map = {\\n                { \"+\" , [] (int a, int b) { return a + b; } },\\n                { \"-\" , [] (int a, int b) { return a - b; } },\\n                { \"*\" , [] (int a, int b) { return a * b; } },\\n                { \"/\" , [] (int a, int b) { return a / b; } }\\n            };\\n            std::stack<int> stack;\\n            for (string& s : tokens) {\\n                if (!map.count(s)) {\\n                    stack.push(stoi(s));\\n                } else {\\n                    int op1 = stack.top();\\n                    stack.pop();\\n                    int op2 = stack.top();\\n                    stack.pop();\\n                    stack.push(map[s](op2, op1));\\n                }\\n            }\\n            return stack.top();\\n        }\\n    };",
                "solutionTags": [
                    "C++"
                ],
                "code": "class Solution {\\n    public:\\n        int evalRPN(vector<string>& tokens) {\\n            unordered_map<string, function<int (int, int) > > map = {\\n                { \"+\" , [] (int a, int b) { return a + b; }",
                "codeTag": "Java"
            },
            {
                "id": 47430,
                "title": "java-accepted-code-stack-implementation",
                "content": "Hi everyone.  \\nThe Reverse Polish Notation is a stack of operations, thus, I decided to use java.util.Stack to solve this problem. As you can see, I add every token as an integer in the stack, unless it's an operation. In that case, I pop two elements from the stack and then save the result back to it. After all operations are done through, the remaining element in the stack will be the result.  \\nAny comments or improvements are welcome.\\n\\nCheers.\\n\\n    import java.util.Stack;\\n    \\n    public class Solution {\\n        public int evalRPN(String[] tokens) {\\n            int a,b;\\n    \\t\\tStack<Integer> S = new Stack<Integer>();\\n    \\t\\tfor (String s : tokens) {\\n    \\t\\t\\tif(s.equals(\"+\")) {\\n    \\t\\t\\t\\tS.add(S.pop()+S.pop());\\n    \\t\\t\\t}\\n    \\t\\t\\telse if(s.equals(\"/\")) {\\n    \\t\\t\\t\\tb = S.pop();\\n    \\t\\t\\t\\ta = S.pop();\\n    \\t\\t\\t\\tS.add(a / b);\\n    \\t\\t\\t}\\n    \\t\\t\\telse if(s.equals(\"*\")) {\\n    \\t\\t\\t\\tS.add(S.pop() * S.pop());\\n    \\t\\t\\t}\\n    \\t\\t\\telse if(s.equals(\"-\")) {\\n    \\t\\t\\t\\tb = S.pop();\\n    \\t\\t\\t\\ta = S.pop();\\n    \\t\\t\\t\\tS.add(a - b);\\n    \\t\\t\\t}\\n    \\t\\t\\telse {\\n    \\t\\t\\t\\tS.add(Integer.parseInt(s));\\n    \\t\\t\\t}\\n    \\t\\t}\\t\\n    \\t\\treturn S.pop();\\n    \\t}\\n    }",
                "solutionTags": [
                    "Java",
                    "Stack"
                ],
                "code": "class Solution {\\n        public int evalRPN(String[] tokens) {\\n            int a,b;\\n    \\t\\tStack<Integer> S = new Stack<Integer>();\\n    \\t\\tfor (String s : tokens) {\\n    \\t\\t\\tif(s.equals(\"+\")) {\\n    \\t\\t\\t\\tS.add(S.pop()+S.pop());\\n    \\t\\t\\t}",
                "codeTag": "Java"
            },
            {
                "id": 47444,
                "title": "python-easy-to-understand-solution",
                "content": "```\\nclass Solution(object):\\n    def evalRPN(self, tokens):\\n        stack = []\\n        for t in tokens:\\n            if t not in \"+-*/\":\\n                stack.append(int(t))\\n            else:\\n                r, l = stack.pop(), stack.pop()\\n                if t == \"+\":\\n                    stack.append(l+r)\\n                elif t == \"-\":\\n                    stack.append(l-r)\\n                elif t == \"*\":\\n                    stack.append(l*r)\\n                else:\\n                    stack.append(int(float(l)/r))\\n        return stack.pop()\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def evalRPN(self, tokens):\\n        stack = []\\n        for t in tokens:\\n            if t not in \"+-*/\":\\n                stack.append(int(t))\\n            else:\\n                r, l = stack.pop(), stack.pop()\\n                if t == \"+\":\\n                    stack.append(l+r)\\n                elif t == \"-\":\\n                    stack.append(l-r)\\n                elif t == \"*\":\\n                    stack.append(l*r)\\n                else:\\n                    stack.append(int(float(l)/r))\\n        return stack.pop()\\n```",
                "codeTag": "Java"
            },
            {
                "id": 47446,
                "title": "accepted-clean-java-solution",
                "content": "    public int evalRPN(String[] a) {\\n      Stack<Integer> stack = new Stack<Integer>();\\n      \\n      for (int i = 0; i < a.length; i++) {\\n        switch (a[i]) {\\n          case \"+\":\\n            stack.push(stack.pop() + stack.pop());\\n            break;\\n              \\n          case \"-\":\\n            stack.push(-stack.pop() + stack.pop());\\n            break;\\n              \\n          case \"*\":\\n            stack.push(stack.pop() * stack.pop());\\n            break;\\n\\n          case \"/\":\\n            int n1 = stack.pop(), n2 = stack.pop();\\n            stack.push(n2 / n1);\\n            break;\\n              \\n          default:\\n            stack.push(Integer.parseInt(a[i]));\\n        }\\n      }\\n      \\n      return stack.pop();\\n    }",
                "solutionTags": [
                    "Java",
                    "Stack"
                ],
                "code": "    public int evalRPN(String[] a) {\\n      Stack<Integer> stack = new Stack<Integer>();\\n      \\n      for (int i = 0; i < a.length; i++) {\\n        switch (a[i]) {\\n          case \"+\":\\n            stack.push(stack.pop() + stack.pop());\\n            break;\\n              \\n          case \"-\":\\n            stack.push(-stack.pop() + stack.pop());\\n            break;\\n              \\n          case \"*\":\\n            stack.push(stack.pop() * stack.pop());\\n            break;\\n\\n          case \"/\":\\n            int n1 = stack.pop(), n2 = stack.pop();\\n            stack.push(n2 / n1);\\n            break;\\n              \\n          default:\\n            stack.push(Integer.parseInt(a[i]));\\n        }\\n      }\\n      \\n      return stack.pop();\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 1229370,
                "title": "short-simple-solution-w-explanation-o-n-o-1-space-solutions",
                "content": "\\u2714\\uFE0F ***Solution - I (Using Explicit Stack)***\\n\\nThe reverse polish is a mathematical notation in which operators follow their operands. So, we will get the operands first and then the operators. \\n\\nSo, we need to store all the previous operands in order that we receive. If we get a operator at anytime, we know that it must be operated on the previous two operands. The result that we get will act as operand for future operations and so it must be stored as well. We can use a stack to store all the operands. The algorithm can be summarized as -\\n1. If the current token is a ***operand*** (number), push it into the stack\\n2. If the token is a ***operator***, pop the top two operands from the stack. Find the result of the operation using the operator and two operands and push the result back into stack\\n3. Finally, the stack will contain the result of evaluated reverse polish expression.\\n\\n```\\nint evalRPN(vector<string>& tokens) {\\n\\tstack<int> s;\\n\\tfor(auto& t : tokens) \\n\\t\\tif(t == \"+\" || t == \"-\" || t == \"*\" || t == \"/\") {\\n\\t\\t\\tint op1 = s.top(); s.pop();\\n\\t\\t\\tint op2 = s.top(); s.pop();\\n\\t\\t\\tif(t == \"+\") op1 = op2 + op1;\\n\\t\\t\\tif(t == \"-\") op1 = op2 - op1;\\n\\t\\t\\tif(t == \"/\") op1 = op2 / op1;\\n\\t\\t\\tif(t == \"*\") op1 = op2 * op1;   \\n\\t\\t\\ts.push(op1);\\n\\t\\t}\\n\\t\\telse s.push(stoi(t));    // stoi - converts from string to int     \\n\\treturn s.top(); \\n}\\n```\\n\\n***Time Complexity :*** **`O(N)`**, where *`N`* is the number of tokens\\n***Space Complexity :*** **`O(N)`**, for maintaining the stack\\n\\n---\\n\\n\\u2714\\uFE0F ***Solution - II (Using Implicit Stack - Recursion)***\\n\\nThe same solution as above, just using recursion instead of explicit stack. Here, we need to start from the end. The idea remains the same. If the current token is an operator, find the operands for it by recursing for the previous indices. If the current token is integer, just return it.\\n\\n```\\nint evalRPN(vector<string>& tokens) {\\n\\tint n = size(tokens) - 1;\\n\\treturn solve(tokens, n);\\n}\\nint solve(vector<string>& t, int &i) {\\n\\tif(t[i] == \"+\" || t[i] == \"-\" || t[i] == \"*\" || t[i] == \"/\") {\\n\\t\\tchar Operator = t[i][0];\\n\\t\\tint op1 = solve(t, --i), op2 = solve(t, --i);            \\n\\t\\tif(Operator == \\'+\\') return op2 + op1;\\n\\t\\tif(Operator == \\'-\\') return op2 - op1;\\n\\t\\tif(Operator == \\'/\\') return op2 / op1;\\n\\t\\tif(Operator == \\'*\\') return op2 * op1;\\n\\t}\\n\\treturn stoi(t[i]);        \\n}\\n```\\n\\n***Time Complexity :*** **`O(N)`**, where *`N`* is the number of tokens\\n***Space Complexity :*** **`O(N)`**, for the recursive stack\\n\\n---\\n\\n\\u2714\\uFE0F ***Solution - III (Using input vector as stack)***\\n\\nIf we are allowed to modify the input vector, we can optimize the space usage by using the input vector itself as a stack rather than an explicit stack.\\n\\nHere, we will maintain a pointer *`top`* which will point to the top index of *`tokens`* (our implicit stack). Everytime we receive a integer token, we will push it at the index pointed by *`top`*. Similarly, when we receive an operator, we can pop the top two operands and after computing the result on them, push it back into  *`tokens`*.\\n\\nThe only important thing here is properly maintaining the *`top`* pointer, so that we correctly access the elements the operands.\\n\\n```\\nint evalRPN(vector<string>& tokens) {\\n\\tint top = 0;\\n\\tfor(auto& t : tokens) \\n\\t\\tif(t == \"+\" || t == \"-\" || t == \"*\" || t == \"/\") {\\n\\t\\t\\tint op1 = stoi(tokens[--top]); \\n\\t\\t\\tint op2 = stoi(tokens[--top]); \\n\\t\\t\\tif(t == \"+\") op1 = op2 + op1;\\n\\t\\t\\tif(t == \"-\") op1 = op2 - op1;\\n\\t\\t\\tif(t == \"/\") op1 = op2 / op1;\\n\\t\\t\\tif(t == \"*\") op1 = op2 * op1;   \\n\\t\\t\\ttokens[top++] = to_string(op1);\\n\\t\\t}\\n\\t\\telse tokens[top++] = t;\\n\\treturn stoi(tokens[0]);\\n}\\n```\\n\\n***Time Complexity :*** **`O(N)`**\\n***Space Complexity :*** **`O(1)`**\\n\\n---\\n---\\n\\n\\uD83D\\uDCBB\\uD83D\\uDC31\\u200D\\uD83D\\uDCBBIf there are any suggestions / questions / mistakes in my post, please do comment below \\uD83D\\uDC47 \\n\\n---\\n---",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint evalRPN(vector<string>& tokens) {\\n\\tstack<int> s;\\n\\tfor(auto& t : tokens) \\n\\t\\tif(t == \"+\" || t == \"-\" || t == \"*\" || t == \"/\") {\\n\\t\\t\\tint op1 = s.top(); s.pop();\\n\\t\\t\\tint op2 = s.top(); s.pop();\\n\\t\\t\\tif(t == \"+\") op1 = op2 + op1;\\n\\t\\t\\tif(t == \"-\") op1 = op2 - op1;\\n\\t\\t\\tif(t == \"/\") op1 = op2 / op1;\\n\\t\\t\\tif(t == \"*\") op1 = op2 * op1;   \\n\\t\\t\\ts.push(op1);\\n\\t\\t}\\n\\t\\telse s.push(stoi(t));    // stoi - converts from string to int     \\n\\treturn s.top(); \\n}\\n```\n```\\nint evalRPN(vector<string>& tokens) {\\n\\tint n = size(tokens) - 1;\\n\\treturn solve(tokens, n);\\n}\\nint solve(vector<string>& t, int &i) {\\n\\tif(t[i] == \"+\" || t[i] == \"-\" || t[i] == \"*\" || t[i] == \"/\") {\\n\\t\\tchar Operator = t[i][0];\\n\\t\\tint op1 = solve(t, --i), op2 = solve(t, --i);            \\n\\t\\tif(Operator == \\'+\\') return op2 + op1;\\n\\t\\tif(Operator == \\'-\\') return op2 - op1;\\n\\t\\tif(Operator == \\'/\\') return op2 / op1;\\n\\t\\tif(Operator == \\'*\\') return op2 * op1;\\n\\t}\\n\\treturn stoi(t[i]);        \\n}\\n```\n```\\nint evalRPN(vector<string>& tokens) {\\n\\tint top = 0;\\n\\tfor(auto& t : tokens) \\n\\t\\tif(t == \"+\" || t == \"-\" || t == \"*\" || t == \"/\") {\\n\\t\\t\\tint op1 = stoi(tokens[--top]); \\n\\t\\t\\tint op2 = stoi(tokens[--top]); \\n\\t\\t\\tif(t == \"+\") op1 = op2 + op1;\\n\\t\\t\\tif(t == \"-\") op1 = op2 - op1;\\n\\t\\t\\tif(t == \"/\") op1 = op2 / op1;\\n\\t\\t\\tif(t == \"*\") op1 = op2 * op1;   \\n\\t\\t\\ttokens[top++] = to_string(op1);\\n\\t\\t}\\n\\t\\telse tokens[top++] = t;\\n\\treturn stoi(tokens[0]);\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 47544,
                "title": "challenge-me-neat-c-solution-could-be-simpler",
                "content": "    int evalRPN(vector<string>& tokens) {\\n        stack<int> stn;\\n        for(auto s:tokens) {\\n            if(s.size()>1 || isdigit(s[0])) stn.push(stoi(s));\\n            else {\\n                auto x2=stn.top(); stn.pop();\\n                auto x1=stn.top(); stn.pop();\\n                switch(s[0]) {\\n                    case '+': x1+=x2; break;\\n                    case '-': x1-=x2; break;\\n                    case '*': x1*=x2; break;\\n                    case '/': x1/=x2; break;\\n                }\\n                stn.push(x1);\\n            }\\n        }\\n        return stn.top();\\n    }",
                "solutionTags": [],
                "code": "    int evalRPN(vector<string>& tokens) {\\n        stack<int> stn;\\n        for(auto s:tokens) {\\n            if(s.size()>1 || isdigit(s[0])) stn.push(stoi(s));\\n            else {\\n                auto x2=stn.top(); stn.pop();\\n                auto x1=stn.top(); stn.pop();\\n                switch(s[0]) {\\n                    case '+': x1+=x2; break;\\n                    case '-': x1-=x2; break;\\n                    case '*': x1*=x2; break;\\n                    case '/': x1/=x2; break;\\n                }\\n                stn.push(x1);\\n            }\\n        }\\n        return stn.top();\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 47481,
                "title": "a-simple-python-solution-o-n-72ms",
                "content": "    class Solution:\\n        # @param {string[]} tokens\\n        # @return {integer}\\n        def __init__(self):\\n            self.operators = {\\n                '+': lambda y, x: x + y,\\n                '-': lambda y, x: x - y,\\n                '*': lambda y, x: x * y,\\n                '/': lambda y, x: int(operator.truediv(x, y))\\n            }\\n    \\n        def evalRPN(self, tokens):\\n            if not tokens:\\n                return 0\\n    \\n            stack = []\\n    \\n            for token in tokens:\\n                if token in self.operators:\\n                    stack.append(self.operators[token](stack.pop(), stack.pop()))\\n                else:\\n                    stack.append(int(token))\\n    \\n            return stack[0]",
                "solutionTags": [
                    "Python"
                ],
                "code": "class Solution:\\n        # @param {string[]}",
                "codeTag": "Java"
            },
            {
                "id": 486566,
                "title": "javascript-stack-solution",
                "content": "```\\nfunction evalRPN(tokens) {\\n  let stack = [];\\n  let ops = {\\n    \\'+\\': (a, b) => a + b,\\n    \\'-\\': (a, b) => a - b,\\n    \\'*\\': (a, b) => a * b,\\n    \\'/\\': (a, b) => a / b >= 0 ? Math.floor(a / b) : Math.ceil(a / b),\\n  };\\n  for (let t of tokens) {\\n    if (ops[t]) {\\n      let top = stack.pop();\\n      let second = stack.pop();\\n      stack.push(ops[t](second, top));\\n    } else {\\n      stack.push(Number(t));\\n    }\\n  }\\n  return stack.pop();\\n};\\n```",
                "solutionTags": [
                    "JavaScript",
                    "Stack"
                ],
                "code": "```\\nfunction evalRPN(tokens) {\\n  let stack = [];\\n  let ops = {\\n    \\'+\\': (a, b) => a + b,\\n    \\'-\\': (a, b) => a - b,\\n    \\'*\\': (a, b) => a * b,\\n    \\'/\\': (a, b) => a / b >= 0 ? Math.floor(a / b) : Math.ceil(a / b),\\n  };\\n  for (let t of tokens) {\\n    if (ops[t]) {\\n      let top = stack.pop();\\n      let second = stack.pop();\\n      stack.push(ops[t](second, top));\\n    } else {\\n      stack.push(Number(t));\\n    }\\n  }\\n  return stack.pop();\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 47440,
                "title": "accepted-c-recursive-solution-56-ms-with-explanation-simplest-possible",
                "content": "Algorithm:\\n1) pop string from the end of the vector\\n2) if it's number, just return it\\n3) if it's operation, call function recursively for 2nd operand and 1st \\n\\n    int evalRPN(vector<string> &n) {\\n        string s = n.back(); n.pop_back();\\n        if ( s== \"*\" || s==\"/\" || s==\"+\" || s == \"-\" ){\\n            int r2 = evalRPN(n);\\n            int r1 = evalRPN(n);\\n            if ( s==\"*\") return r1*r2;\\n            if ( s==\"/\") return r1/r2;\\n            if ( s==\"+\") return r1+r2;\\n            if ( s==\"-\") return r1-r2;\\n        }\\n        else\\n            return atoi(s.c_str());\\n    }",
                "solutionTags": [],
                "code": "Algorithm:\\n1) pop string from the end of the vector\\n2) if it's number, just return it\\n3) if it's operation, call function recursively for 2nd operand and 1st \\n\\n    int evalRPN(vector<string> &n) {\\n        string s = n.back(); n.pop_back();\\n        if ( s== \"*\" || s==\"/\" || s==\"+\" || s == \"-\" ){\\n            int r2 = evalRPN(n);\\n            int r1 = evalRPN(n);\\n            if ( s==\"*\") return r1*r2;\\n            if ( s==\"/\") return r1/r2;\\n            if ( s==\"+\") return r1+r2;\\n            if ( s==\"-\") return r1-r2;\\n        }\\n        else\\n            return atoi(s.c_str());\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 47477,
                "title": "java-6ms-beats-99-64",
                "content": " \\n6MS---JAVA\\n \\n    public int evalRPN(String[] tokens) {\\n     int[] ls = new int[tokens.length/2+1];\\n        int index = 0;\\n        for (String token : tokens) {\\n            switch (token) {\\n                case \"+\":\\n                    ls[index - 2] = ls[index - 2] + ls[index - 1];\\n                    index--;\\n                    break;\\n                case \"-\":\\n                    ls[index - 2] = ls[index - 2] - ls[index - 1];\\n                    index--;\\n                    break;\\n                case \"*\":\\n                    ls[index - 2] = ls[index - 2] * ls[index - 1];\\n                    index--;\\n                    break;\\n                case \"/\":\\n                    ls[index - 2] = ls[index - 2] / ls[index - 1];\\n                    index--;\\n                    break;\\n                default:\\n                    ls[index++] = Integer.parseInt(token);\\n                    break;\\n            }\\n        }\\n        return ls[0];\\n    }",
                "solutionTags": [
                    "Java"
                ],
                "code": " \\n6MS---JAVA\\n \\n    public int evalRPN(String[] tokens) {\\n     int[] ls = new int[tokens.length/2+1];\\n        int index = 0;\\n        for (String token : tokens) {\\n            switch (token) {\\n                case \"+\":\\n                    ls[index - 2] = ls[index - 2] + ls[index - 1];\\n                    index--;\\n                    break;\\n                case \"-\":\\n                    ls[index - 2] = ls[index - 2] - ls[index - 1];\\n                    index--;\\n                    break;\\n                case \"*\":\\n                    ls[index - 2] = ls[index - 2] * ls[index - 1];\\n                    index--;\\n                    break;\\n                case \"/\":\\n                    ls[index - 2] = ls[index - 2] / ls[index - 1];\\n                    index--;\\n                    break;\\n                default:\\n                    ls[index++] = Integer.parseInt(token);\\n                    break;\\n            }\\n        }\\n        return ls[0];\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 47421,
                "title": "c-clean-recursive-solution",
                "content": "You should run a recursion from top to down. The first thing you want to do is the last call you reach.\\n```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        string t = tokens.back();\\n        tokens.pop_back();\\n        if(t != \"+\" && t != \"-\" && t != \"*\" && t != \"/\") return stoi(t);\\n        else{\\n            int b = evalRPN(tokens);\\n            int a = evalRPN(tokens);\\n            if(t == \"+\") return a + b;\\n            else if(t == \"-\") return a - b;\\n            else if(t == \"*\") return a * b;\\n            else return a / b;\\n        }\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        string t = tokens.back();\\n        tokens.pop_back();\\n        if(t != \"+\" && t != \"-\" && t != \"*\" && t != \"/\") return stoi(t);\\n        else{\\n            int b = evalRPN(tokens);\\n            int a = evalRPN(tokens);\\n            if(t == \"+\") return a + b;\\n            else if(t == \"-\") return a - b;\\n            else if(t == \"*\") return a * b;\\n            else return a / b;\\n        }\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1229359,
                "title": "python-short-stack-solution-explained",
                "content": "This problem is ideal for recursion or stack. All we need to do is to understand logic: if we see new number, put it into stack, if we see operation, extract the last two numbers and apply this operation. Also be careful with shrinking towards zero: I spent some time before realized that it is just `int(b/a)` meant here.\\n\\n#### Complexity\\nTime and space complexity is just `O(n)`, because we can put an remove each element from stack only once. Potentially we can have upty `n//2` elements in our stack.\\n\\n#### Code\\n```python\\nclass Solution:\\n    def evalRPN(self, tokens):\\n        stack = []\\n        def f(a, b, c):\\n            if c == \"+\": return a+b\\n            if c == \"-\": return b-a\\n            if c == \"*\": return a*b\\n            if c == \"/\": return int(b/a)\\n            \\n        for token in tokens:\\n            if token in \"*/+-\":\\n                stack.append(f(stack.pop(), stack.pop(), token))\\n            else:\\n                stack.append(int(token))\\n        return stack[-1]\\n```\\n\\nIf you have any questions, feel free to ask. If you like solution and explanations, please **Upvote!**",
                "solutionTags": [
                    "Stack"
                ],
                "code": "```python\\nclass Solution:\\n    def evalRPN(self, tokens):\\n        stack = []\\n        def f(a, b, c):\\n            if c == \"+\": return a+b\\n            if c == \"-\": return b-a\\n            if c == \"*\": return a*b\\n            if c == \"/\": return int(b/a)\\n            \\n        for token in tokens:\\n            if token in \"*/+-\":\\n                stack.append(f(stack.pop(), stack.pop(), token))\\n            else:\\n                stack.append(int(token))\\n        return stack[-1]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1229403,
                "title": "js-python-java-c-easy-stack-solution-w-explanation",
                "content": "*(Note: This is part of a series of Leetcode solution explanations. If you like this solution or find it useful,* ***please upvote*** *this post.)*\\n\\n---\\n\\n#### ***Idea:***\\n\\n**Reverse Polish Notation** was designed specifically to make computing easier with the more efficient use of a **stack**. So we can use a **stack** here to store numbers until they\\'re used, and then each operand will use the top two values of the **stack**.\\n\\nSince the order of the numbers is still important for subtraction and division, we\\'ll have to make sure that the two numbers are processed in their original order, which is the opposite order of the **stack**.\\n\\nAfter each successful operation, the result should be pushed back onto the **stack** until it\\'s used. After iteration is complete, the remaining value in the **stack** will be our answer, so we should **return stack[0]**.\\n\\n - _**Time Complexity: O(N)** where **N** is the length of **tokens**_\\n - _**Space Complexity: O(N)** for the length of the **stack**, up to **N / 2 + 1** values_\\n\\n---\\n\\n#### ***Implementation:***\\n\\nJavascript object values can be functions, so we can store the operations directly in an evaluate object as **lambda** functions.\\n\\n---\\n\\n#### ***Javascript Code:***\\n\\nThe best result for the code below is **68ms / 40.2MB** (beats 100% / 95%).\\n```javascript\\nlet a, b\\nconst evaluate = {\"+\": ()=>a+b, \"-\": ()=>a-b, \"*\": ()=>a*b, \"/\": ()=>~~(a/b)}\\n\\nvar evalRPN = function(tokens) {\\n    let stack = []\\n    for (let t of tokens) {\\n        if (evaluate[t]) {\\n            b = stack.pop(), a = stack.pop()\\n            stack.push(evaluate[t]())\\n        } else stack.push(~~t)\\n    }\\n    return stack[0]\\n};\\n```\\n\\n---\\n\\n#### ***Python Code:***\\n\\nThe best result for the code below is **56ms / 14.4MB** (beats 98% / 96%).\\n```python\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        stack = []\\n        for t in tokens:\\n            if t not in {\"+\", \"-\", \"*\", \"/\"}:\\n                stack.append(int(t))\\n            else:\\n                b, a = stack.pop(), stack.pop()\\n                if t == \"+\": stack.append(a + b)\\n                elif t == \"-\": stack.append(a - b)\\n                elif t == \"*\": stack.append(a * b)\\n                else: stack.append(trunc(a / b))\\n        return stack[0]\\n```\\n\\n---\\n\\n#### ***Java Code:***\\n\\nThe best result for the code below is **ms / MB** (beats 91% / 91%).\\n```java\\nclass Solution {\\n    private Set<String> ops = new HashSet<>(Arrays.asList(\"+\", \"-\", \"*\", \"/\"));\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> stack = new Stack<>();\\n        for (String t : tokens) {\\n            if (!ops.contains(t)) stack.push(Integer.parseInt(t));\\n            else {\\n                int b = stack.pop(), a = stack.pop();\\n                if (t.equals(\"+\")) stack.push(a + b);\\n                else if (t.equals(\"-\")) stack.push(a - b);\\n                else if (t.equals(\"*\")) stack.push(a * b);\\n                else stack.push(a / b);\\n            }\\n        }\\n        return stack.pop();\\n    }\\n}\\n```\\n\\n---\\n\\n#### ***C++ Code:***\\n\\nThe best result for the code below is **4ms / 11.9MB** (beats 99% / 57%).\\n```c++\\nstatic unordered_set<string> ops({\"+\", \"-\", \"*\", \"/\"});\\n\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> stack;\\n        for (auto t : tokens) {\\n            if (ops.find(t) == ops.end()) stack.push(stoi(t));\\n            else {\\n                int b = stack.top(); stack.pop();\\n                int a = stack.top(); stack.pop();\\n                if (t == \"+\") stack.push(a + b);\\n                else if (t == \"-\") stack.push(a - b);\\n                else if (t == \"*\") stack.push(a * b);\\n                else stack.push(a / b);\\n            }\\n        }\\n        return stack.top();\\n    }\\n};\\n```",
                "solutionTags": [
                    "Java",
                    "Python",
                    "C",
                    "JavaScript"
                ],
                "code": "```javascript\\nlet a, b\\nconst evaluate = {\"+\": ()=>a+b, \"-\": ()=>a-b, \"*\": ()=>a*b, \"/\": ()=>~~(a/b)}\\n\\nvar evalRPN = function(tokens) {\\n    let stack = []\\n    for (let t of tokens) {\\n        if (evaluate[t]) {\\n            b = stack.pop(), a = stack.pop()\\n            stack.push(evaluate[t]())\\n        } else stack.push(~~t)\\n    }\\n    return stack[0]\\n};\\n```\n```python\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        stack = []\\n        for t in tokens:\\n            if t not in {\"+\", \"-\", \"*\", \"/\"}:\\n                stack.append(int(t))\\n            else:\\n                b, a = stack.pop(), stack.pop()\\n                if t == \"+\": stack.append(a + b)\\n                elif t == \"-\": stack.append(a - b)\\n                elif t == \"*\": stack.append(a * b)\\n                else: stack.append(trunc(a / b))\\n        return stack[0]\\n```\n```java\\nclass Solution {\\n    private Set<String> ops = new HashSet<>(Arrays.asList(\"+\", \"-\", \"*\", \"/\"));\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> stack = new Stack<>();\\n        for (String t : tokens) {\\n            if (!ops.contains(t)) stack.push(Integer.parseInt(t));\\n            else {\\n                int b = stack.pop(), a = stack.pop();\\n                if (t.equals(\"+\")) stack.push(a + b);\\n                else if (t.equals(\"-\")) stack.push(a - b);\\n                else if (t.equals(\"*\")) stack.push(a * b);\\n                else stack.push(a / b);\\n            }\\n        }\\n        return stack.pop();\\n    }\\n}\\n```\n```c++\\nstatic unordered_set<string> ops({\"+\", \"-\", \"*\", \"/\"});\\n\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> stack;\\n        for (auto t : tokens) {\\n            if (ops.find(t) == ops.end()) stack.push(stoi(t));\\n            else {\\n                int b = stack.top(); stack.pop();\\n                int a = stack.top(); stack.pop();\\n                if (t == \"+\") stack.push(a + b);\\n                else if (t == \"-\") stack.push(a - b);\\n                else if (t == \"*\") stack.push(a * b);\\n                else stack.push(a / b);\\n            }\\n        }\\n        return stack.top();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2934845,
                "title": "simple-java-sol-using-stack",
                "content": "```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> st = new Stack<>();\\n        for(String t : tokens){\\n            if(\"+-*/\".contains(t))\\n              st.push(eval(st.pop(), st.pop(), t));\\n            else\\n              st.push(Integer.parseInt(t));\\n        }\\n\\n       \\n        return st.pop();\\n\\n    }\\n     private int eval(int b, int a, String op){\\n            if(\"+\".equals(op))\\n            return a+b;\\n            else if(\"-\".equals(op))\\n            return a-b;\\n            else if(\"*\".equals(op))\\n            return a*b;\\n            else\\n            return a/b;\\n        }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> st = new Stack<>();\\n        for(String t : tokens){\\n            if(\"+-*/\".contains(t))\\n              st.push(eval(st.pop(), st.pop(), t));\\n            else\\n              st.push(Integer.parseInt(t));\\n        }\\n\\n       \\n        return st.pop();\\n\\n    }\\n     private int eval(int b, int a, String op){\\n            if(\"+\".equals(op))\\n            return a+b;\\n            else if(\"-\".equals(op))\\n            return a-b;\\n            else if(\"*\".equals(op))\\n            return a*b;\\n            else\\n            return a/b;\\n        }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 152170,
                "title": "javascript-stack-solution",
                "content": "```js\\nfunction evalRPN(tokens) {\\n  const stack = [];\\n  \\n  for (let token of tokens) {\\n    if (token === \\'+\\') {\\n      stack.push(stack.pop()+stack.pop());\\n    } else if (token === \\'-\\') {\\n      stack.push(-stack.pop()+stack.pop());\\n    } else if (token === \\'*\\') {\\n      stack.push(stack.pop()*stack.pop());\\n    } else if (token === \\'/\\') {\\n      stack.push(Math.trunc(1/stack.pop()*stack.pop()));\\n    } else {\\n      stack.push(parseInt(token));\\n    }\\n  }\\n  \\n  return stack[0];\\n}\\n```",
                "solutionTags": [],
                "code": "```js\\nfunction evalRPN(tokens) {\\n  const stack = [];\\n  \\n  for (let token of tokens) {\\n    if (token === \\'+\\') {\\n      stack.push(stack.pop()+stack.pop());\\n    } else if (token === \\'-\\') {\\n      stack.push(-stack.pop()+stack.pop());\\n    } else if (token === \\'*\\') {\\n      stack.push(stack.pop()*stack.pop());\\n    } else if (token === \\'/\\') {\\n      stack.push(Math.trunc(1/stack.pop()*stack.pop()));\\n    } else {\\n      stack.push(parseInt(token));\\n    }\\n  }\\n  \\n  return stack[0];\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1368372,
                "title": "c-stack",
                "content": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& t) {\\n        stack<int>s;\\n        for(int i=0;i<t.size();i++){\\n            if(t[i]==\"+\" or t[i]==\"-\" or t[i]==\"*\" or t[i]==\"/\"){\\n                int op2=s.top();\\n                s.pop();\\n                int op1=s.top();\\n                s.pop();\\n                switch(t[i][0]){\\n                    case \\'+\\':\\n                        s.push(op1+op2);\\n                        break;\\n                    case \\'-\\':\\n                        s.push(op1-op2);\\n                        break;\\n                    case \\'*\\':\\n                        s.push(op1*op2);\\n                        break;\\n                    case \\'/\\':\\n                        s.push(op1/op2);\\n                        break;\\n                }\\n            }\\n            else{\\n                s.push(stoi(t[i]));\\n            }\\n        }\\n        return s.top();\\n    }\\n};\\n```\\nif you like the solution upvote it and encourage me.",
                "solutionTags": [
                    "C++",
                    "C",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& t) {\\n        stack<int>s;\\n        for(int i=0;i<t.size();i++){\\n            if(t[i]==\"+\" or t[i]==\"-\" or t[i]==\"*\" or t[i]==\"/\"){\\n                int op2=s.top();\\n                s.pop();\\n                int op1=s.top();\\n                s.pop();\\n                switch(t[i][0]){\\n                    case \\'+\\':\\n                        s.push(op1+op2);\\n                        break;\\n                    case \\'-\\':\\n                        s.push(op1-op2);\\n                        break;\\n                    case \\'*\\':\\n                        s.push(op1*op2);\\n                        break;\\n                    case \\'/\\':\\n                        s.push(op1/op2);\\n                        break;\\n                }\\n            }\\n            else{\\n                s.push(stoi(t[i]));\\n            }\\n        }\\n        return s.top();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 277848,
                "title": "standard-python-solution-easy-fix-for-neg-division-bug",
                "content": "The obvious way to handle integer division might be:\\n```\\nnum = (dividend)//(divisor)\\n```\\nBut this does **not** work with (positiveNum)//(negativeNum) in python, which evaluates to **-1** instead of the expected **0**.\\nTherefore the easiest way to handle this is to do:\\n```\\nnum = int(float(dividend)/divisor)\\n```\\nThis would evaluate to **0** as required.\\n\\nFull code below, nothing special but it get\\'s the job done.:\\n```\\ndef evalRPN(self, tokens: List[str]) -> int:\\n        stack = []\\n        while len(tokens) > 0:\\n            toke = tokens.pop(0)\\n            if toke == \"+\":\\n                first = stack.pop()\\n                second = stack.pop()\\n                stack.append(second+first)\\n            elif toke == \"-\":\\n                first = stack.pop()\\n                second = stack.pop()\\n                stack.append(second-first) # The order of numbers is important\\n            elif toke == \"*\":\\n                first = stack.pop()\\n                second = stack.pop()\\n                stack.append(second*first)\\n            elif toke == \"/\":\\n                first = stack.pop()\\n                second = stack.pop()\\n                stack.append(int(float(second)/first)) # evaluates to a 0 with the 6/-132 scenario (as required).\\n            else:\\n                stack.append(int(toke))\\n        return stack.pop()\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nnum = (dividend)//(divisor)\\n```\n```\\nnum = int(float(dividend)/divisor)\\n```\n```\\ndef evalRPN(self, tokens: List[str]) -> int:\\n        stack = []\\n        while len(tokens) > 0:\\n            toke = tokens.pop(0)\\n            if toke == \"+\":\\n                first = stack.pop()\\n                second = stack.pop()\\n                stack.append(second+first)\\n            elif toke == \"-\":\\n                first = stack.pop()\\n                second = stack.pop()\\n                stack.append(second-first) # The order of numbers is important\\n            elif toke == \"*\":\\n                first = stack.pop()\\n                second = stack.pop()\\n                stack.append(second*first)\\n            elif toke == \"/\":\\n                first = stack.pop()\\n                second = stack.pop()\\n                stack.append(int(float(second)/first)) # evaluates to a 0 with the 6/-132 scenario (as required).\\n            else:\\n                stack.append(int(toke))\\n        return stack.pop()\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 47420,
                "title": "10-line-java-clean-code-using-stack",
                "content": "Assuming the input is alway valid.\\n```\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> stack = new Stack<>();\\n        for (String s : tokens) {\\n            if (\"+\".equals(s)) stack.push(stack.pop() + stack.pop());\\n            else if (\"-\".equals(s)) stack.push(-stack.pop() + stack.pop());\\n            else if (\"/\".equals(s)) stack.push((int)(1D / stack.pop() * stack.pop()));\\n            else if (\"*\".equals(s)) stack.push(stack.pop() * stack.pop());\\n            else stack.push(Integer.valueOf(s));\\n        }\\n\\n        return stack.pop();\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> stack = new Stack<>();\\n        for (String s : tokens) {\\n            if (\"+\".equals(s)) stack.push(stack.pop() + stack.pop());\\n            else if (\"-\".equals(s)) stack.push(-stack.pop() + stack.pop());\\n            else if (\"/\".equals(s)) stack.push((int)(1D / stack.pop() * stack.pop()));\\n            else if (\"*\".equals(s)) stack.push(stack.pop() * stack.pop());\\n            else stack.push(Integer.valueOf(s));\\n        }\\n\\n        return stack.pop();\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1941862,
                "title": "100-fastest-swift-solution-time-o-n-space-o-n",
                "content": "```\\nclass Solution {\\n    // - Complexity:\\n    //   - time: O(n), where n is the length of the tokens.\\n    //   - space: O(n), where n is the length of the tokens.\\n    \\n    func evalRPN(_ tokens: [String]) -> Int {\\n        var stack = [Int]()\\n\\n        for token in tokens {\\n            if let num = Int(token) { stack.append(num); continue }\\n\\n            guard stack.count >= 2 else { fatalError(\"RPN expression isn\\'t valid.\") }\\n\\n            let sec = stack.removeLast()\\n            let fir = stack.removeLast()\\n\\n            switch token {\\n            case \"+\": stack.append(fir + sec)\\n            case \"-\": stack.append(fir - sec)\\n            case \"*\": stack.append(fir * sec)\\n            case \"/\": stack.append(fir / sec)\\n            default:\\n                fatalError(\"RPN expression isn\\'t valid.\")\\n            }\\n        }\\n\\n        guard stack.count == 1 else { fatalError(\"RPN expression isn\\'t valid.\") }\\n        return stack[0]\\n    }\\n\\n}\\n```\\n\\nLet me know in comments if you have any doubts. I will be happy to answer.\\n\\nPlease upvote if you found the solution useful.",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\nclass Solution {\\n    // - Complexity:\\n    //   - time: O(n), where n is the length of the tokens.\\n    //   - space: O(n), where n is the length of the tokens.\\n    \\n    func evalRPN(_ tokens: [String]) -> Int {\\n        var stack = [Int]()\\n\\n        for token in tokens {\\n            if let num = Int(token) { stack.append(num); continue }\\n\\n            guard stack.count >= 2 else { fatalError(\"RPN expression isn\\'t valid.\") }\\n\\n            let sec = stack.removeLast()\\n            let fir = stack.removeLast()\\n\\n            switch token {\\n            case \"+\": stack.append(fir + sec)\\n            case \"-\": stack.append(fir - sec)\\n            case \"*\": stack.append(fir * sec)\\n            case \"/\": stack.append(fir / sec)\\n            default:\\n                fatalError(\"RPN expression isn\\'t valid.\")\\n            }\\n        }\\n\\n        guard stack.count == 1 else { fatalError(\"RPN expression isn\\'t valid.\") }\\n        return stack[0]\\n    }\\n\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 47422,
                "title": "python-clean-code-using-stack-and-lambdas",
                "content": "```\\nclass Solution(object):\\n    def evalRPN(self, tokens):\\n        \"\"\"\\n        :type tokens: List[str]\\n        :rtype: int\\n        \"\"\"\\n        operations = {\\n            \"*\": lambda x,y: x*y,\\n            \"+\": lambda x,y: x+y,\\n            \"-\": lambda x,y: x-y,\\n            \"/\": lambda x,y: float(x)/y\\n        }\\n\\n        stack = []\\n        for token in tokens:\\n            if token not in operations:\\n                stack.append(int(token))\\n            else:\\n                right = stack.pop()\\n                left = stack.pop()\\n                result = operations[token](left, right)\\n                stack.append(int(result))\\n        return stack.pop()\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution(object):\\n    def evalRPN(self, tokens):\\n        \"\"\"\\n        :type tokens: List[str]\\n        :rtype: int\\n        \"\"\"\\n        operations = {\\n            \"*\": lambda x,y: x*y,\\n            \"+\": lambda x,y: x+y,\\n            \"-\": lambda x,y: x-y,\\n            \"/\": lambda x,y: float(x)/y\\n        }\\n\\n        stack = []\\n        for token in tokens:\\n            if token not in operations:\\n                stack.append(int(token))\\n            else:\\n                right = stack.pop()\\n                left = stack.pop()\\n                result = operations[token](left, right)\\n                stack.append(int(result))\\n        return stack.pop()\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2920598,
                "title": "easy-solution-w-explanation-c-java-python-no-runtime-error",
                "content": "# \\u2714\\uFE0F Solution - I (Using Explicit Stack)\\n<!-- Describe your approach to solving the problem. -->\\nThe reverse polish is a mathematical notation in which operators follow their operands. So, we will get the operands first and then the operators.\\n\\n- We store all the operands in the order we receive it in.\\n- If we get an operator, we operate it on the previous two operands. \\n- We store the resultant operand as it will be used for future operations. \\n- We use a stack to store all the operands. \\n\\nSo the algorithm is:\\n- If the character is a number (operand), push it into the stack\\n- If the character is an operator, \\n    - Pop the top two operands (numbers) from the stack. \\n    - Find the result of the operation using the operator \\n    - Push the result back in the stack\\n- After traversal, the top of the stack will be the result of evaluated reverse polish expression.\\n# Complexity\\n- Time complexity: `O(N)`, where `N` is the number of tokens\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n- Space complexity: `O(N)`, for maintaining the stack\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code in C++\\n```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long int> s ;\\n        for(auto &i:tokens)\\n        { \\n            if(i == \"+\" || i == \"-\" || i == \"*\" || i == \"/\") // operators \\n            {\\n                long long int op1 = s.top() ; \\n                s.pop() ;\\n                long long int op2 = s.top() ; \\n                s.pop() ;\\n                if(i == \"+\") \\n                    op1 = op2 + op1 ;\\n                if(i == \"-\") \\n                    op1 = op2 - op1 ;\\n                if(i == \"*\") \\n                    op1 = op2*op1 ; \\n                if(i == \"/\") \\n                    op1 = op2/op1 ;  \\n                s.push(op1) ;\\n            }\\n            else \\n                s.push(stoll(i)) ; // number -> need to convert from str to int\\n        }    \\n        return s.top() ; \\n\\n    }\\n};\\n```\\n\\n# Code in Python\\n```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        stack = []\\n        for i in tokens:\\n            if i not in {\"+\", \"-\", \"*\", \"/\"}:\\n                stack.append(int(i))\\n            else: #operand\\n                b, a = stack.pop(), stack.pop()\\n                if i == \"+\": \\n                    stack.append(a + b)\\n                elif i == \"-\": \\n                    stack.append(a - b)\\n                elif i == \"*\": \\n                    stack.append(a*b)\\n                else: \\n                    stack.append(trunc(a/b))\\n        return stack[0]\\n```\\n\\n# Code in JAVA\\n```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> stack = new Stack<>() ;\\n        Set<String> o = new HashSet<>(Arrays.asList(\"+\", \"-\", \"*\", \"/\")) ;\\n        for (String i:tokens) \\n        {\\n            if(!o.contains(i)) \\n                stack.push(Integer.valueOf(i));\\n            else \\n            {\\n                int a = stack.pop(), b = stack.pop();\\n                if(i.equals(\"+\")) \\n                    stack.push(a + b);\\n                else if(i.equals(\"-\")) \\n                    stack.push(b - a);\\n                else if(i.equals(\"*\")) \\n                    stack.push(a*b);\\n                else \\n                    stack.push(b/a);\\n            }\\n        }\\n        return stack.peek() ;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long int> s ;\\n        for(auto &i:tokens)\\n        { \\n            if(i == \"+\" || i == \"-\" || i == \"*\" || i == \"/\") // operators \\n            {\\n                long long int op1 = s.top() ; \\n                s.pop() ;\\n                long long int op2 = s.top() ; \\n                s.pop() ;\\n                if(i == \"+\") \\n                    op1 = op2 + op1 ;\\n                if(i == \"-\") \\n                    op1 = op2 - op1 ;\\n                if(i == \"*\") \\n                    op1 = op2*op1 ; \\n                if(i == \"/\") \\n                    op1 = op2/op1 ;  \\n                s.push(op1) ;\\n            }\\n            else \\n                s.push(stoll(i)) ; // number -> need to convert from str to int\\n        }    \\n        return s.top() ; \\n\\n    }\\n};\\n```\n```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        stack = []\\n        for i in tokens:\\n            if i not in {\"+\", \"-\", \"*\", \"/\"}:\\n                stack.append(int(i))\\n            else: #operand\\n                b, a = stack.pop(), stack.pop()\\n                if i == \"+\": \\n                    stack.append(a + b)\\n                elif i == \"-\": \\n                    stack.append(a - b)\\n                elif i == \"*\": \\n                    stack.append(a*b)\\n                else: \\n                    stack.append(trunc(a/b))\\n        return stack[0]\\n```\n```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> stack = new Stack<>() ;\\n        Set<String> o = new HashSet<>(Arrays.asList(\"+\", \"-\", \"*\", \"/\")) ;\\n        for (String i:tokens) \\n        {\\n            if(!o.contains(i)) \\n                stack.push(Integer.valueOf(i));\\n            else \\n            {\\n                int a = stack.pop(), b = stack.pop();\\n                if(i.equals(\"+\")) \\n                    stack.push(a + b);\\n                else if(i.equals(\"-\")) \\n                    stack.push(b - a);\\n                else if(i.equals(\"*\")) \\n                    stack.push(a*b);\\n                else \\n                    stack.push(b/a);\\n            }\\n        }\\n        return stack.peek() ;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2919743,
                "title": "python-3-11-lines-w-example-t-m-95-97",
                "content": "```\\nclass Solution:\\n    def evalRPN(self, tokens: list[str]) -> int:                #  Ex:  tokens = [\"4\",\"13\",\"5\",\"/\",\"+\"]\\n        stack = []\\n                                                                #      t     operation    stack\\n        for t in tokens:                                        #    \\u2013\\u2013\\u2013\\u2013\\u2013   \\u2013\\u2013\\u2013\\u2013\\u2013\\u2013\\u2013\\u2013\\u2013    \\u2013\\u2013\\u2013\\u2013\\u2013\\u2013\\u2013\\u2013\\u2013 \\n            if t not in \\'/+-*\\':                                 #      4                    [4]\\n                stack.append(int(t))                            #     13                    [4,13]\\n                                                                #      5                    [4,13,5]\\n            else:                                               #      /     13 / 5 = 2     [4,2]\\n                num = stack.pop()                               #      +      4 + 2 = 6     [6]\\n                if   t == \\'+\\': stack[-1]+=  num\\n                elif t == \\'-\\': stack[-1]-=  num\\n                elif t == \\'*\\': stack[-1]*=  num\\n                else         : stack[-1]= int(stack[-1]/num)    \\n\\n        return stack[0]\\n\\n```\\n[https://leetcode.com/problems/evaluate-reverse-polish-notation/submissions/860874774/](http://)\\n\\n\\n\\nI could be wrong, but I think that time is *O*(*N*) and space is *O*(*N*).",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def evalRPN(self, tokens: list[str]) -> int:                #  Ex:  tokens = [\"4\",\"13\",\"5\",\"/\",\"+\"]\\n        stack = []\\n                                                                #      t     operation    stack\\n        for t in tokens:                                        #    \\u2013\\u2013\\u2013\\u2013\\u2013   \\u2013\\u2013\\u2013\\u2013\\u2013\\u2013\\u2013\\u2013\\u2013    \\u2013\\u2013\\u2013\\u2013\\u2013\\u2013\\u2013\\u2013\\u2013 \\n            if t not in \\'/+-*\\':                                 #      4                    [4]\\n                stack.append(int(t))                            #     13                    [4,13]\\n                                                                #      5                    [4,13,5]\\n            else:                                               #      /     13 / 5 = 2     [4,2]\\n                num = stack.pop()                               #      +      4 + 2 = 6     [6]\\n                if   t == \\'+\\': stack[-1]+=  num\\n                elif t == \\'-\\': stack[-1]-=  num\\n                elif t == \\'*\\': stack[-1]*=  num\\n                else         : stack[-1]= int(stack[-1]/num)    \\n\\n        return stack[0]\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2919624,
                "title": "python-two-stack-solutions-explained-bonus-no-additional-stack",
                "content": "**\\u2705 IF YOU LIKE THIS SOLUTION, PLEASE UPVOTE.**\\n****\\nThis solution employs a *stack* to keep track of tokens. Time complexity is linear: **O(N)**. Space complexity is linear: **O(N)**. \\n****\\n\\n**Comment.** The key property of the *Reverse Polish Notation* is that when there are two adjacent numerical tokens and the next one specifies a binary operation, we replace all of them with the result of applying this operation to the corresponding numbers. The resulting array of tokens will also adhere to the *Reverse Polish Notation*. Thus, our task consists in detecting triples of such tokens that can be done using two natural orderings when performing linear scan.\\n\\n**Python #1.** Scan tokens in original order and detect an operation token on the right.\\n```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n\\n        ops = {\"+\" : add, \"-\" : sub, \"*\" : mul, \"/\" : truediv}\\n        stack = []\\n\\n        for t in tokens:\\n            if t in ops:\\n                b, a = stack.pop(), stack.pop()\\n                t = ops[t](a,b)\\n            stack.append(int(t))\\n\\n        return stack[-1]\\n```\\n\\n**Python #2.** Scan tokens in reverse order and detect two consecutive numerical tokens on the left.\\n```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        \\n        ops = {\"+\" : add, \"-\" : sub, \"*\" : mul, \"/\" : truediv}\\n        s = []\\n\\n        while tokens:\\n            s.append(t if (t:=tokens.pop()) in ops else int(t))\\n            while len(s) > 2 and isinstance(s[-1], int) and isinstance(s[-2], int):\\n                a, b, t = s.pop(), s.pop(), s.pop()\\n                s.append(int(ops[t](int(a), int(b))))\\n        \\n        return s[-1]\\n```\\n\\n\\n**\\u2705 YOU MADE IT TILL THE BONUS SECTION... YOUR GREAT EFFORT DESERVES UPVOTING THIS POST!**\\n\\n**Python.** We can use the original list of tokens as a stack.\\n```\\nclass Solution:\\n    def evalRPN(self, s: List[str]) -> int:\\n\\n        ops = {\"+\" : add, \"-\" : sub, \"*\" : mul, \"/\" : truediv}\\n        for t in s[:] : s.append(int(ops[t](s.pop(-2),s.pop(-1)) if t in ops else t))\\n        return s[-1]\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n\\n        ops = {\"+\" : add, \"-\" : sub, \"*\" : mul, \"/\" : truediv}\\n        stack = []\\n\\n        for t in tokens:\\n            if t in ops:\\n                b, a = stack.pop(), stack.pop()\\n                t = ops[t](a,b)\\n            stack.append(int(t))\\n\\n        return stack[-1]\\n```\n```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        \\n        ops = {\"+\" : add, \"-\" : sub, \"*\" : mul, \"/\" : truediv}\\n        s = []\\n\\n        while tokens:\\n            s.append(t if (t:=tokens.pop()) in ops else int(t))\\n            while len(s) > 2 and isinstance(s[-1], int) and isinstance(s[-2], int):\\n                a, b, t = s.pop(), s.pop(), s.pop()\\n                s.append(int(ops[t](int(a), int(b))))\\n        \\n        return s[-1]\\n```\n```\\nclass Solution:\\n    def evalRPN(self, s: List[str]) -> int:\\n\\n        ops = {\"+\" : add, \"-\" : sub, \"*\" : mul, \"/\" : truediv}\\n        for t in s[:] : s.append(int(ops[t](s.pop(-2),s.pop(-1)) if t in ops else t))\\n        return s[-1]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1229388,
                "title": "evaluate-reverse-polish-notation-simple-solution-w-explanation-o-1-space",
                "content": "\\u2714\\uFE0F ***Solution - I (Using Explicit Stack)***\\n\\nThe reverse polish is a mathematical notation in which operators follow their operands. So, we will get the operands first and then the operators. \\n\\nSo, we need to store all the previous operands in order that we receive. If we get a operator at anytime, we know that it must be operated on the previous two operands. The result that we get will act as operand for future operations and so it must be stored as well. We can use a stack to store all the operands. The algorithm can be summarized as -\\n1. If the current token is a ***operand*** (number), push it into the stack\\n2. If the token is a ***operator***, pop the top two operands from the stack. Find the result of the operation using the operator and two operands and push the result back into stack\\n3. Finally, the stack will contain the result of evaluated reverse polish expression.\\n\\n```\\nint evalRPN(vector<string>& tokens) {\\n\\tstack<int> s;\\n\\tfor(auto& t : tokens) \\n\\t\\tif(t == \"+\" || t == \"-\" || t == \"*\" || t == \"/\") {\\n\\t\\t\\tint op1 = s.top(); s.pop();\\n\\t\\t\\tint op2 = s.top(); s.pop();\\n\\t\\t\\tif(t == \"+\") op1 = op2 + op1;\\n\\t\\t\\tif(t == \"-\") op1 = op2 - op1;\\n\\t\\t\\tif(t == \"/\") op1 = op2 / op1;\\n\\t\\t\\tif(t == \"*\") op1 = op2 * op1;   \\n\\t\\t\\ts.push(op1);\\n\\t\\t}\\n\\t\\telse s.push(stoi(t));    // stoi - converts from string to int     \\n\\treturn s.top(); \\n}\\n```\\n\\n***Time Complexity :*** **`O(N)`**, where *`N`* is the number of tokens\\n***Space Complexity :*** **`O(N)`**, for maintaining the stack\\n\\n---\\n\\n\\u2714\\uFE0F ***Solution - II (Using Implicit Stack - Recursion)***\\n\\nThe same solution as above, just using recursion instead of explicit stack. Here, we need to start from the end. The idea remains the same. If the current token is an operator, find the operands for it by recursing for the previous indices. If the current token is integer, just return it.\\n\\n```\\nint evalRPN(vector<string>& tokens) {\\n\\tint n = size(tokens) - 1;\\n\\treturn solve(tokens, n);\\n}\\nint solve(vector<string>& t, int &i) {\\n\\tif(t[i] == \"+\" || t[i] == \"-\" || t[i] == \"*\" || t[i] == \"/\") {\\n\\t\\tchar Operator = t[i][0];\\n\\t\\tint op1 = solve(t, --i), op2 = solve(t, --i);            \\n\\t\\tif(Operator == \\'+\\') return op2 + op1;\\n\\t\\tif(Operator == \\'-\\') return op2 - op1;\\n\\t\\tif(Operator == \\'/\\') return op2 / op1;\\n\\t\\tif(Operator == \\'*\\') return op2 * op1;\\n\\t}\\n\\treturn stoi(t[i]);        \\n}\\n```\\n\\n***Time Complexity :*** **`O(N)`**, where *`N`* is the number of tokens\\n***Space Complexity :*** **`O(N)`**, for the recursive stack\\n\\n---\\n\\n\\u2714\\uFE0F ***Solution - III (Using input vector as stack)***\\n\\nIf we are allowed to modify the input vector, we can optimize the space usage by using the input vector itself as a stack rather than an explicit stack.\\n\\nHere, we will maintain a pointer *`top`* which will point to the top index of *`tokens`* (our implicit stack). Everytime we receive a integer token, we will push it at the index pointed by *`top`*. Similarly, when we receive an operator, we can pop the top two operands and after computing the result on them, push it back into  *`tokens`*.\\n\\nThe only important thing here is properly maintaining the *`top`* pointer, so that we correctly access the elements the operands.\\n\\n```\\nint evalRPN(vector<string>& tokens) {\\n\\tint top = 0;\\n\\tfor(auto& t : tokens) \\n\\t\\tif(t == \"+\" || t == \"-\" || t == \"*\" || t == \"/\") {\\n\\t\\t\\tint op1 = stoi(tokens[--top]); \\n\\t\\t\\tint op2 = stoi(tokens[--top]); \\n\\t\\t\\tif(t == \"+\") op1 = op2 + op1;\\n\\t\\t\\tif(t == \"-\") op1 = op2 - op1;\\n\\t\\t\\tif(t == \"/\") op1 = op2 / op1;\\n\\t\\t\\tif(t == \"*\") op1 = op2 * op1;   \\n\\t\\t\\ttokens[top++] = to_string(op1);\\n\\t\\t}\\n\\t\\telse tokens[top++] = t;\\n\\treturn stoi(tokens[0]);\\n}\\n```\\n\\n***Time Complexity :*** **`O(N)`**\\n***Space Complexity :*** **`O(1)`**\\n\\n---\\n---\\n\\n\\uD83D\\uDCBB\\uD83D\\uDC31\\u200D\\uD83D\\uDCBBIf there are any suggestions / questions / mistakes in my post, please do comment below \\uD83D\\uDC47 \\n\\n---\\n---",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint evalRPN(vector<string>& tokens) {\\n\\tstack<int> s;\\n\\tfor(auto& t : tokens) \\n\\t\\tif(t == \"+\" || t == \"-\" || t == \"*\" || t == \"/\") {\\n\\t\\t\\tint op1 = s.top(); s.pop();\\n\\t\\t\\tint op2 = s.top(); s.pop();\\n\\t\\t\\tif(t == \"+\") op1 = op2 + op1;\\n\\t\\t\\tif(t == \"-\") op1 = op2 - op1;\\n\\t\\t\\tif(t == \"/\") op1 = op2 / op1;\\n\\t\\t\\tif(t == \"*\") op1 = op2 * op1;   \\n\\t\\t\\ts.push(op1);\\n\\t\\t}\\n\\t\\telse s.push(stoi(t));    // stoi - converts from string to int     \\n\\treturn s.top(); \\n}\\n```\n```\\nint evalRPN(vector<string>& tokens) {\\n\\tint n = size(tokens) - 1;\\n\\treturn solve(tokens, n);\\n}\\nint solve(vector<string>& t, int &i) {\\n\\tif(t[i] == \"+\" || t[i] == \"-\" || t[i] == \"*\" || t[i] == \"/\") {\\n\\t\\tchar Operator = t[i][0];\\n\\t\\tint op1 = solve(t, --i), op2 = solve(t, --i);            \\n\\t\\tif(Operator == \\'+\\') return op2 + op1;\\n\\t\\tif(Operator == \\'-\\') return op2 - op1;\\n\\t\\tif(Operator == \\'/\\') return op2 / op1;\\n\\t\\tif(Operator == \\'*\\') return op2 * op1;\\n\\t}\\n\\treturn stoi(t[i]);        \\n}\\n```\n```\\nint evalRPN(vector<string>& tokens) {\\n\\tint top = 0;\\n\\tfor(auto& t : tokens) \\n\\t\\tif(t == \"+\" || t == \"-\" || t == \"*\" || t == \"/\") {\\n\\t\\t\\tint op1 = stoi(tokens[--top]); \\n\\t\\t\\tint op2 = stoi(tokens[--top]); \\n\\t\\t\\tif(t == \"+\") op1 = op2 + op1;\\n\\t\\t\\tif(t == \"-\") op1 = op2 - op1;\\n\\t\\t\\tif(t == \"/\") op1 = op2 / op1;\\n\\t\\t\\tif(t == \"*\") op1 = op2 * op1;   \\n\\t\\t\\ttokens[top++] = to_string(op1);\\n\\t\\t}\\n\\t\\telse tokens[top++] = t;\\n\\treturn stoi(tokens[0]);\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2920020,
                "title": "c-clean-code-easy-stack-solution-self-explanatory-tc-o-n",
                "content": "**Upvote If It Helps**\\n*Ask me in comments if you have any doubts \\uD83D\\uDE09*\\n\\n```\\nclass Solution {\\npublic:\\n    \\n    int evalRPN(vector<string>& tokens) {\\n        stack<int>st;\\n        for(auto &t: tokens){\\n            if(t==\"+\" || t==\"-\" || t==\"*\" || t==\"/\"){\\n                long long operator1= st.top(); st.pop();\\n                long long operator2= st.top(); st.pop();\\n                if(t==\"+\") operator1= operator2+operator1;\\n                if(t==\"-\") operator1= operator2-operator1;\\n                if(t==\"*\") operator1= operator2*operator1;\\n                if(t==\"/\") operator1= operator2/operator1;\\n                st.push(operator1);\\n            }\\n            else st.push(stoi(t));\\n        }\\n        return st.top();\\n    }\\n};\\n```\\n\\n*TIME COMPLEXITY = O(N)\\nSPACE COMPLEXITY = O(N)*",
                "solutionTags": [
                    "C++",
                    "C",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    \\n    int evalRPN(vector<string>& tokens) {\\n        stack<int>st;\\n        for(auto &t: tokens){\\n            if(t==\"+\" || t==\"-\" || t==\"*\" || t==\"/\"){\\n                long long operator1= st.top(); st.pop();\\n                long long operator2= st.top(); st.pop();\\n                if(t==\"+\") operator1= operator2+operator1;\\n                if(t==\"-\") operator1= operator2-operator1;\\n                if(t==\"*\") operator1= operator2*operator1;\\n                if(t==\"/\") operator1= operator2/operator1;\\n                st.push(operator1);\\n            }\\n            else st.push(stoi(t));\\n        }\\n        return st.top();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 47664,
                "title": "java-accepted-code-using-stack-and-factory-pattern",
                "content": "\\nAny comment is welcome.\\n\\n    import java.util.Stack;\\n    public class L2_EvaluateReversePolishNotation {\\n        public int evalRPN(String[] tokens) {\\n            Stack<Integer> stack = new Stack<>();\\n            for(String str: tokens){\\n                if(str.matches(\"-?\\\\\\\\d+\")){\\n                    stack.push(Integer.parseInt(str));\\n                }\\n                else {\\n                    Integer secondOperand = stack.pop();\\n                    Integer firstOperand = stack.pop();\\n                    Integer result = OperatorFactory.getInstance(str).op(firstOperand,secondOperand);\\n                    stack.push(result);\\n                }\\n            }\\n            return stack.pop();\\n        }\\n    \\n        public static void main(String[] args) {\\n            L2_EvaluateReversePolishNotation instance = new L2_EvaluateReversePolishNotation();\\n            String[] s = {\"18\"};\\n            int result = instance.evalRPN(s);\\n            System.out.println(result);\\n        }\\n    }\\n    \\n    \\n    interface Operator{\\n        int op(int x, int y);\\n    }\\n    \\n    \\n    class Add implements Operator{\\n        public int op(int x, int y) {\\n            return x+y;\\n        }\\n    }\\n    \\n    class Minus implements Operator{\\n        @Override\\n        public int op(int x, int y) {\\n            return x-y;\\n        }\\n    }\\n    \\n    class Mutiply implements Operator{\\n        @Override\\n        public int op(int x, int y){\\n            return x*y;\\n        }\\n    }\\n    \\n    class Divide implements Operator{\\n        @Override\\n        public int op(int x, int y) {\\n            return x/y;\\n        }\\n    }\\n    \\n    class OperatorFactory{\\n        public static Operator getInstance(String op) {\\n            switch (op){\\n                case \"+\": return new Add();\\n                case \"-\": return new Minus();\\n                case \"*\": return new Mutiply();\\n                case \"/\": return new Divide();\\n                default: throw new RuntimeException(\"this operator \"+op+\" is not supported.\");\\n            }\\n        }\\n    }",
                "solutionTags": [
                    "Java",
                    "Stack"
                ],
                "code": "\\nAny comment is welcome.\\n\\n    import java.util.Stack;\\n    public class L2_EvaluateReversePolishNotation {\\n        public int evalRPN(String[] tokens) {\\n            Stack<Integer> stack = new Stack<>();\\n            for(String str: tokens){\\n                if(str.matches(\"-?\\\\\\\\d+\")){\\n                    stack.push(Integer.parseInt(str));\\n                }\\n                else {\\n                    Integer secondOperand = stack.pop();\\n                    Integer firstOperand = stack.pop();\\n                    Integer result = OperatorFactory.getInstance(str).op(firstOperand,secondOperand);\\n                    stack.push(result);\\n                }\\n            }\\n            return stack.pop();\\n        }\\n    \\n        public static void main(String[] args) {\\n            L2_EvaluateReversePolishNotation instance = new L2_EvaluateReversePolishNotation();\\n            String[] s = {\"18\"};\\n            int result = instance.evalRPN(s);\\n            System.out.println(result);\\n        }\\n    }\\n    \\n    \\n    interface Operator{\\n        int op(int x, int y);\\n    }\\n    \\n    \\n    class Add implements Operator{\\n        public int op(int x, int y) {\\n            return x+y;\\n        }\\n    }\\n    \\n    class Minus implements Operator{\\n        @Override\\n        public int op(int x, int y) {\\n            return x-y;\\n        }\\n    }\\n    \\n    class Mutiply implements Operator{\\n        @Override\\n        public int op(int x, int y){\\n            return x*y;\\n        }\\n    }\\n    \\n    class Divide implements Operator{\\n        @Override\\n        public int op(int x, int y) {\\n            return x/y;\\n        }\\n    }\\n    \\n    class OperatorFactory{\\n        public static Operator getInstance(String op) {\\n            switch (op){\\n                case \"+\": return new Add();\\n                case \"-\": return new Minus();\\n                case \"*\": return new Mutiply();\\n                case \"/\": return new Divide();\\n                default: throw new RuntimeException(\"this operator \"+op+\" is not supported.\");\\n            }\\n        }\\n    }",
                "codeTag": "Java"
            },
            {
                "id": 623297,
                "title": "c-clean-solution",
                "content": "```\\n    public int EvalRPN(string[] tokens) {\\n        var nums = new Stack<int>();\\n        var operators = new Dictionary<string, Func<int, int, int>> {\\n            {\"+\", (x, y) => y + x},\\n            {\"-\", (x, y) => y - x},\\n            {\"*\", (x, y) => y * x},\\n            {\"/\", (x, y) => y / x}\\n        };\\n\\n        foreach (var token in tokens)\\n            nums.Push(operators.TryGetValue(token, out var func)\\n                      ? func(nums.Pop(), nums.Pop())\\n                      : int.Parse(token));\\n\\n        return nums.Pop();\\n    }\\n```",
                "solutionTags": [
                    "Stack"
                ],
                "code": "```\\n    public int EvalRPN(string[] tokens) {\\n        var nums = new Stack<int>();\\n        var operators = new Dictionary<string, Func<int, int, int>> {\\n            {\"+\", (x, y) => y + x},\\n            {\"-\", (x, y) => y - x},\\n            {\"*\", (x, y) => y * x},\\n            {\"/\", (x, y) => y / x}\\n        };\\n\\n        foreach (var token in tokens)\\n            nums.Push(operators.TryGetValue(token, out var func)\\n                      ? func(nums.Pop(), nums.Pop())\\n                      : int.Parse(token));\\n\\n        return nums.Pop();\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 47549,
                "title": "a-python-solution-with-8-lines",
                "content": "        def evalRPN(tokens):\\n            stack = []\\n            ops = {'+':lambda x, y: x+y, '-':lambda x, y: x-y, '*':lambda x, y: x*y, '/':lambda x, y: x/y}\\n            for s in tokens:\\n                try:\\n                    stack.append( float( s ) )\\n                except:\\n                    stack.append( int( ops[s]( stack.pop(-2), stack.pop(-1) ) ) )\\n            return int( stack[-1] )",
                "solutionTags": [],
                "code": "        def evalRPN(tokens):\\n            stack = []\\n            ops = {'+':lambda x, y: x+y, '-':lambda x, y: x-y, '*':lambda x, y: x*y, '/':lambda x, y: x/y}\\n            for s in tokens:\\n                try:\\n                    stack.append( float( s ) )\\n                except:\\n                    stack.append( int( ops[s]( stack.pop(-2), stack.pop(-1) ) ) )\\n            return int( stack[-1] )",
                "codeTag": "Python3"
            },
            {
                "id": 3646707,
                "title": "explained-simple-and-clear-python3-code",
                "content": "The provided solution evaluates arithmetic expressions in Reverse Polish Notation (RPN) using a stack. It iterates through the tokens of the expression, performing the corresponding arithmetic operations when encountering operators. The solution pops operands from the stack, applies the operations, and pushes the results back to the stack. If a token is an operand, it is directly added to the stack. Finally, the remaining value on the stack is retrieved as the evaluated result of the RPN expression. The solution handles operators and operands correctly, ensuring proper conversion and adherence to integer division rules.\\n\\n\\n\\n\\n\\n# Code\\n```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        stack = []\\n        op = [\\'+\\', \\'-\\', \\'*\\', \\'/\\']\\n        for t in tokens:\\n            if t in op:\\n                x, y = int(stack.pop()), int(stack.pop())\\n                stack.append(x + y if t == \\'+\\' else y - x if t == \\'-\\' else x * y if t == \\'*\\' else int(y / x))\\n            else:\\n                stack.append(t)\\n        return int(stack[-1])\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        stack = []\\n        op = [\\'+\\', \\'-\\', \\'*\\', \\'/\\']\\n        for t in tokens:\\n            if t in op:\\n                x, y = int(stack.pop()), int(stack.pop())\\n                stack.append(x + y if t == \\'+\\' else y - x if t == \\'-\\' else x * y if t == \\'*\\' else int(y / x))\\n            else:\\n                stack.append(t)\\n        return int(stack[-1])\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2919656,
                "title": "python-simple-easy-to-understand-code",
                "content": "\\n```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        op = {\\n                \\'+\\' : lambda x, y : x + y,\\n                \\'-\\' : lambda x, y : x - y,\\n                \\'*\\' : lambda x, y : x * y,\\n                \\'/\\' : lambda x, y : int(x / y)\\n             }\\n\\n        stack = []\\n        for i in tokens:\\n            if i in \"+-*/\":\\n                b = stack.pop()\\n                a = stack.pop()\\n                stack.append(op[i](a, b))\\n            else:\\n                stack.append(int(i))\\n                \\n        return stack.pop()\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        op = {\\n                \\'+\\' : lambda x, y : x + y,\\n                \\'-\\' : lambda x, y : x - y,\\n                \\'*\\' : lambda x, y : x * y,\\n                \\'/\\' : lambda x, y : int(x / y)\\n             }\\n\\n        stack = []\\n        for i in tokens:\\n            if i in \"+-*/\":\\n                b = stack.pop()\\n                a = stack.pop()\\n                stack.append(op[i](a, b))\\n            else:\\n                stack.append(int(i))\\n                \\n        return stack.pop()\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2919606,
                "title": "c-dictionary-for-operations",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nHere we have a standard stack machine: on `int` value we push it to the stack, on operation we pop arguments from stack, perform operation and pop the result to the stack \\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nLet\\'s extract model (supported functions) into a dictionary. All the rest is a simple loop and stack for arguments\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n$$O(n)$$\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n$$O(n)$$\\n\\n# Code\\n```\\npublic class Solution {\\n    private static Dictionary<string, Func<int, int, int>> s_Funcs = new () {\\n      { \"+\", (a, b) => a + b },\\n      { \"-\", (a, b) => b - a },\\n      { \"*\", (a, b) => a * b },\\n      { \"/\", (a, b) => b / a },   \\n    };\\n\\n    public int EvalRPN(string[] tokens) {\\n      Stack<int> data = new ();\\n        \\n      foreach (string token in tokens) \\n        if (int.TryParse(token, out int value))\\n          data.Push(value);\\n        else   \\n          data.Push(s_Funcs[token](data.Pop(), data.Pop()));\\n        \\n      return data.Pop();\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    private static Dictionary<string, Func<int, int, int>> s_Funcs = new () {\\n      { \"+\", (a, b) => a + b },\\n      { \"-\", (a, b) => b - a },\\n      { \"*\", (a, b) => a * b },\\n      { \"/\", (a, b) => b / a },   \\n    };\\n\\n    public int EvalRPN(string[] tokens) {\\n      Stack<int> data = new ();\\n        \\n      foreach (string token in tokens) \\n        if (int.TryParse(token, out int value))\\n          data.Push(value);\\n        else   \\n          data.Push(s_Funcs[token](data.Pop(), data.Pop()));\\n        \\n      return data.Pop();\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2920122,
                "title": "c-stack-application-easy-code",
                "content": "stack type should be \" **long** \" ,  because for one test case it shows \"**Runtime Error .**\" (i.e. it goes out of boundary of **int**)\\nTest_CAse - [\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"]\\n\\n\\n# Complexity\\n- Time complexity: O(N)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(N)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long> st;\\n        for(auto s:tokens)\\n        {\\n            if(s==\"+\" || s==\"-\"|| s==\"/\"|| s==\"*\")\\n            {\\n                long x=st.top();\\n                st.pop();\\n                long y=st.top();\\n                st.pop();\\n                if(s == \"+\")\\n                {\\n                    st.push(y+x);\\n                }\\n                else if(s == \"-\")\\n                {\\n                    st.push(y-x);\\n                }\\n                else if(s == \"*\")\\n                {\\n                    st.push(y*x);\\n                }\\n                else\\n                {\\n                    st.push(y/x);\\n                }\\n            }\\n            else\\n            {\\n                int n=stoi(s);\\n                st.push(n);\\n            }\\n        }\\n        return st.top();\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long> st;\\n        for(auto s:tokens)\\n        {\\n            if(s==\"+\" || s==\"-\"|| s==\"/\"|| s==\"*\")\\n            {\\n                long x=st.top();\\n                st.pop();\\n                long y=st.top();\\n                st.pop();\\n                if(s == \"+\")\\n                {\\n                    st.push(y+x);\\n                }\\n                else if(s == \"-\")\\n                {\\n                    st.push(y-x);\\n                }\\n                else if(s == \"*\")\\n                {\\n                    st.push(y*x);\\n                }\\n                else\\n                {\\n                    st.push(y/x);\\n                }\\n            }\\n            else\\n            {\\n                int n=stoi(s);\\n                st.push(n);\\n            }\\n        }\\n        return st.top();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1732651,
                "title": "super-simple-python-stack-solution",
                "content": "```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        \\n        def update(sign):\\n            n2,n1=stack.pop(),stack.pop()\\n            if sign==\"+\": return n1+n2\\n            if sign==\"-\": return n1-n2\\n            if sign==\"*\": return n1*n2\\n            if sign==\"/\": return int(n1/n2)\\n\\t\\t\\t\\n        stack=[]\\n        \\n        for n in tokens:\\n            if n.isdigit() or len(n)>1:\\n                stack.append(int(n))\\n            else:\\n                stack.append(update(n))\\n        return stack.pop()\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Stack"
                ],
                "code": "```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        \\n        def update(sign):\\n            n2,n1=stack.pop(),stack.pop()\\n            if sign==\"+\": return n1+n2\\n            if sign==\"-\": return n1-n2\\n            if sign==\"*\": return n1*n2\\n            if sign==\"/\": return int(n1/n2)\\n\\t\\t\\t\\n        stack=[]\\n        \\n        for n in tokens:\\n            if n.isdigit() or len(n)>1:\\n                stack.append(int(n))\\n            else:\\n                stack.append(update(n))\\n        return stack.pop()\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1502143,
                "title": "typescript-clean-solution",
                "content": "*Faster than 100% typescript submissions\\nLess space than 90.24% typescript submissions*\\n```\\ninterface IOperatorSets {\\n    [key: string] : (a: number, b: number) => number;\\n}\\n\\nfunction evalRPN(tokens: string[]): number {\\n    const operatorSets: IOperatorSets = {\\n        \\'+\\': (a: number, b: number) => a + b,\\n        \\'-\\': (a: number, b: number) => a - b,\\n        \\'*\\': (a: number, b: number) => a * b,\\n        \\'/\\': (a: number, b: number) => a / b | 0, // truncate toward zero\\n    };\\n    const stack: number[]= [];\\n    tokens.forEach(r => {\\n        if (operatorSets[r] != null) {\\n            const b = stack.pop();\\n            const a = stack.pop();\\n            stack.push(operatorSets[r](a, b));\\n        } else {\\n            stack.push(Number(r));\\n        }\\n    });\\n    return stack.pop();\\n};\\n```",
                "solutionTags": [
                    "TypeScript",
                    "Stack"
                ],
                "code": "```\\ninterface IOperatorSets {\\n    [key: string] : (a: number, b: number) => number;\\n}\\n\\nfunction evalRPN(tokens: string[]): number {\\n    const operatorSets: IOperatorSets = {\\n        \\'+\\': (a: number, b: number) => a + b,\\n        \\'-\\': (a: number, b: number) => a - b,\\n        \\'*\\': (a: number, b: number) => a * b,\\n        \\'/\\': (a: number, b: number) => a / b | 0, // truncate toward zero\\n    };\\n    const stack: number[]= [];\\n    tokens.forEach(r => {\\n        if (operatorSets[r] != null) {\\n            const b = stack.pop();\\n            const a = stack.pop();\\n            stack.push(operatorSets[r](a, b));\\n        } else {\\n            stack.push(Number(r));\\n        }\\n    });\\n    return stack.pop();\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1230563,
                "title": "python3-idiomatic-usage-of-operators-built-in-library",
                "content": "Right from Jeff Knupp\\'s book (Idiomatic Python)!\\n\\n```\\nfrom operator import (add, mul, sub, truediv)\\n\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        operators = {\"+\":add, \"*\":mul, \"-\":sub, \"/\":truediv}\\n        stack = []\\n        for token in tokens:\\n            if token in operators:\\n                num2 = stack.pop()\\n                num1 = stack.pop()\\n                stack.append(int(operators[token](num1, num2)))            \\n            else:\\n                stack.append(int(token))\\n        return stack[-1]\\n```",
                "solutionTags": [],
                "code": "```\\nfrom operator import (add, mul, sub, truediv)\\n\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        operators = {\"+\":add, \"*\":mul, \"-\":sub, \"/\":truediv}\\n        stack = []\\n        for token in tokens:\\n            if token in operators:\\n                num2 = stack.pop()\\n                num1 = stack.pop()\\n                stack.append(int(operators[token](num1, num2)))            \\n            else:\\n                stack.append(int(token))\\n        return stack[-1]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 375881,
                "title": "javascript-beats-98-easy-understand-with-short-comments",
                "content": "```js\\nconst evalRPN = function ( tokens ) {\\n  const stack = [];\\n  \\n  // If the token is an operator, the operands will be\\n  // the last two items on the stack.\\n  // Evaluate the expression then add the value back on to the stack,\\n  // as it will be the operand for the next expression.\\n  // Otherwise, its an operand (digit). Cast to number and add to stack.\\n  tokens.forEach(( token ) => {\\n    if ( /^[+\\\\-*/]$/.test( token ) ) {\\n      const [y, x] = [stack.pop(), stack.pop()];\\n      stack.push( evaluate( x, y, token ) );\\n    } else {\\n      stack.push( +token );  // Number(token)\\n    }\\n  });\\n \\n  // The last evaluated expression is the answer\\n  return stack.pop();\\n};\\n\\nconst evaluate = ( x, y, op ) => {\\n  switch ( op ) {\\n    case \\'+\\': return x + y;\\n    case \\'-\\': return x - y;\\n    case \\'*\\': return x * y;\\n    case \\'/\\': return x / y | 0;  // Math.trunc()\\n  }\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```js\\nconst evalRPN = function ( tokens ) {\\n  const stack = [];\\n  \\n  // If the token is an operator, the operands will be\\n  // the last two items on the stack.\\n  // Evaluate the expression then add the value back on to the stack,\\n  // as it will be the operand for the next expression.\\n  // Otherwise, its an operand (digit). Cast to number and add to stack.\\n  tokens.forEach(( token ) => {\\n    if ( /^[+\\\\-*/]$/.test( token ) ) {\\n      const [y, x] = [stack.pop(), stack.pop()];\\n      stack.push( evaluate( x, y, token ) );\\n    } else {\\n      stack.push( +token );  // Number(token)\\n    }\\n  });\\n \\n  // The last evaluated expression is the answer\\n  return stack.pop();\\n};\\n\\nconst evaluate = ( x, y, op ) => {\\n  switch ( op ) {\\n    case \\'+\\': return x + y;\\n    case \\'-\\': return x - y;\\n    case \\'*\\': return x * y;\\n    case \\'/\\': return x / y | 0;  // Math.trunc()\\n  }\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 47537,
                "title": "6-7-lines-in-python",
                "content": "**Solution 1: *Recursive***\\n\\n    def evalRPN(self, tokens):\\n        t = tokens.pop()\\n        if t in '+-*/':\\n            b = `self.evalRPN(tokens)`\\n            a = `self.evalRPN(tokens)`\\n            t = eval(a+t+b+'.')\\n        return int(t)\\n\\n**Solution 2: *Iterative***\\n\\n    def evalRPN(self, tokens):\\n        stack = []\\n        for t in tokens:\\n            if t in '+-*/':\\n                b, a = stack.pop(), stack.pop()\\n                t = `int(eval(a+t+b+'.'))`\\n            stack += t,\\n        return int(stack[0])",
                "solutionTags": [
                    "Python"
                ],
                "code": "**Solution 1: *Recursive***\\n\\n    def evalRPN(self, tokens):\\n        t = tokens.pop()\\n        if t in '+-*/':\\n            b = `self.evalRPN(tokens)`\\n            a = `self.evalRPN(tokens)`\\n            t = eval(a+t+b+'.')\\n        return int(t)\\n\\n**Solution 2: *Iterative***\\n\\n    def evalRPN(self, tokens):\\n        stack = []\\n        for t in tokens:\\n            if t in '+-*/':\\n                b, a = stack.pop(), stack.pop()\\n                t = `int(eval(a+t+b+'.'))`\\n            stack += t,\\n        return int(stack[0])",
                "codeTag": "Python3"
            },
            {
                "id": 47558,
                "title": "accepted-solution-in-c",
                "content": "    class Solution {\\n    public:\\n        int evalRPN(vector<string> &tokens) {\\n            stack<int> st;\\n            int s1,s2;\\n            s1=s2=0;\\n            int res=0;\\n            for(vector<string>::iterator iter=tokens.begin();iter!=tokens.end();iter++)\\n            {\\n                    if (*iter == \"+\")\\n                    {\\n                        s1=st.top();\\n                        st.pop();\\n                        s2=st.top();\\n                        st.pop();\\n                       res=s1+s2;\\n                       st.push(res);\\n                    }\\n                       \\n                    else if (*iter == \"-\")\\n                    {\\n                        s1=st.top();\\n                        st.pop();\\n                        s2=st.top();\\n                        st.pop();\\n                       res=s2-s1;\\n                       st.push(res);\\n                    }\\n                    else if (*iter == \"*\")\\n                    {\\n                        s1=st.top();\\n                        st.pop();\\n                        s2=st.top();\\n                        st.pop();\\n                       res=s1*s2;\\n                       st.push(res);\\n                    }\\n                    else if (*iter== \"/\")\\n                    {\\n                        s1=st.top();\\n                        st.pop();\\n                        s2=st.top();\\n                        st.pop();\\n                        res=s2/s1;\\n                        st.push(res);\\n                    }\\n                    else \\n                    {\\n                        st.push(atoi((*iter).c_str()));\\n                    }\\n                }\\n                return st.top();\\n    \\n                \\n            }\\n            \\n    };",
                "solutionTags": [],
                "code": "class Solution {\\n    public:\\n        int evalRPN(vector<string> &tokens) {\\n            stack<int> st;\\n            int s1,s2;\\n            s1=s2=0;\\n            int res=0;\\n            for(vector<string>::iterator iter=tokens.begin();iter!=tokens.end();iter++)\\n            {\\n                    if (*iter == \"+\")\\n                    {\\n                        s1=st.top();\\n                        st.pop();\\n                        s2=st.top();\\n                        st.pop();\\n                       res=s1+s2;\\n                       st.push(res);\\n                    }",
                "codeTag": "Java"
            },
            {
                "id": 47640,
                "title": "accepted-code-in-python",
                "content": "    class Solution:\\n    # @param tokens, a list of string\\n    # @return an integer\\n    def evalRPN(self, tokens):\\n    \\top = {\\n    \\t'+': lambda x: lambda y: int(float(x)+float(y)),\\n    \\t'-': lambda x: lambda y: int(float(x)-float(y)),\\n    \\t'*': lambda x: lambda y: int(float(x)*float(y)),\\n    \\t'/': lambda x: lambda y: int(float(x)/float(y))\\n    \\t}\\n    \\ts = []\\n    \\tfor i in tokens:\\n    \\t\\tif i in ['+','-','*','/']:\\n    \\t\\t\\t[n1, n2] = s[-2:]\\n    \\t\\t\\ts[-2:] = [op[i](n1)(n2)]\\n    \\t\\telse:\\n    \\t\\t\\ts.append(int(i))\\n    \\treturn s[0]",
                "solutionTags": [],
                "code": "class Solution:\\n    # @param tokens, a list of string\\n    # @return an integer\\n    def evalRPN(self, tokens):\\n    \\top = {\\n    \\t'+': lambda x: lambda y: int(float(x)+float(y)),\\n    \\t'-': lambda x: lambda y: int(float(x)-float(y)),\\n    \\t'*': lambda x: lambda y: int(float(x)*float(y)),\\n    \\t'/': lambda x: lambda y: int(float(x)/float(y))\\n    \\t}",
                "codeTag": "Java"
            },
            {
                "id": 2920539,
                "title": "c-stack-o-n-99-faster",
                "content": "\\n# Complexity\\n- Time complexity: O(n) where n = number of tokens\\n- Space complexity: O(n) stack space \\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool isNum( string s, long long &currInt ){\\n        currInt = 0;\\n        \\n        // If we find out any operator return false \\n        if( ((s[0] == \\'/\\' || s[0] == \\'+\\' || s[0] == \\'-\\' ||\\n             s[0] == \\'*\\') && s.size() ==1 )) return false;\\n        \\n        // handle the negative values\\n        bool neg = false;\\n        int i=0;\\n        \\n        if( s[0] == \\'-\\' ){\\n            neg = true ;\\n            i=1;\\n        }\\n        \\n        // calculate the integers \\n        while( i<s.size() ){\\n            currInt = currInt*10 + s[i++]-\\'0\\' ;\\n        }\\n        \\n        if( neg ) currInt = 0 - currInt;\\n        return true;\\n    }\\n\\n    int evalRPN(vector<string>& tokens) {\\n\\n        stack<long long> st;\\n        long long currInt = 0;\\n\\n        for( int i=0 ; i<tokens.size() ; i++ ){\\n            \\n            // if it is an integer, push it inside ur stack \\n            if( isNum(tokens[i], currInt) == true ){\\n                st.push( currInt );\\n            }\\n            // else compute the result and push result into stack \\n            else{\\n                long long first = st.top(); st.pop();\\n                long long second = st.top(); st.pop();\\n                \\n                // Convert the operator into char, so that u can compare \\n                string s = tokens[i];\\n                char currOpe = s[0];\\n                \\n                if( currOpe == \\'+\\' ){\\n                    long long tmp = first + second;\\n                    st.push( tmp );\\n                } else \\n                if( currOpe == \\'-\\' ){\\n                    long long tmp = second - first;\\n                    st.push( tmp );\\n                }else \\n                if( currOpe == \\'*\\' ){\\n                    long long tmp = first * second;\\n                    st.push( tmp );\\n                }else \\n                if( currOpe == \\'/\\' ){\\n                    long long tmp = second / first;\\n                    st.push( tmp );\\n                }\\n            }\\n        }\\n\\n        int ans = 0 ;\\n        ans = st.top();\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool isNum( string s, long long &currInt ){\\n        currInt = 0;\\n        \\n        // If we find out any operator return false \\n        if( ((s[0] == \\'/\\' || s[0] == \\'+\\' || s[0] == \\'-\\' ||\\n             s[0] == \\'*\\') && s.size() ==1 )) return false;\\n        \\n        // handle the negative values\\n        bool neg = false;\\n        int i=0;\\n        \\n        if( s[0] == \\'-\\' ){\\n            neg = true ;\\n            i=1;\\n        }\\n        \\n        // calculate the integers \\n        while( i<s.size() ){\\n            currInt = currInt*10 + s[i++]-\\'0\\' ;\\n        }\\n        \\n        if( neg ) currInt = 0 - currInt;\\n        return true;\\n    }\\n\\n    int evalRPN(vector<string>& tokens) {\\n\\n        stack<long long> st;\\n        long long currInt = 0;\\n\\n        for( int i=0 ; i<tokens.size() ; i++ ){\\n            \\n            // if it is an integer, push it inside ur stack \\n            if( isNum(tokens[i], currInt) == true ){\\n                st.push( currInt );\\n            }\\n            // else compute the result and push result into stack \\n            else{\\n                long long first = st.top(); st.pop();\\n                long long second = st.top(); st.pop();\\n                \\n                // Convert the operator into char, so that u can compare \\n                string s = tokens[i];\\n                char currOpe = s[0];\\n                \\n                if( currOpe == \\'+\\' ){\\n                    long long tmp = first + second;\\n                    st.push( tmp );\\n                } else \\n                if( currOpe == \\'-\\' ){\\n                    long long tmp = second - first;\\n                    st.push( tmp );\\n                }else \\n                if( currOpe == \\'*\\' ){\\n                    long long tmp = first * second;\\n                    st.push( tmp );\\n                }else \\n                if( currOpe == \\'/\\' ){\\n                    long long tmp = second / first;\\n                    st.push( tmp );\\n                }\\n            }\\n        }\\n\\n        int ans = 0 ;\\n        ans = st.top();\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2919858,
                "title": "c-stack-beats-99-easy-understand",
                "content": "***Please give an upvote if you like the solution***\\n\\n![image.png](https://assets.leetcode.com/users/images/a2072b82-23ab-4ea4-a7cc-5a3bc7947f2d_1671246118.2937725.png)\\n\\n# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n    O(n) (for iterating string array)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n    O(n) (for Stack)\\n\\n# Code\\n```\\nclass Solution {\\n\\n    long resolves(int a, int b, char Operator){\\n        if(Operator == \\'+\\') return a + b;\\n        else if(Operator == \\'-\\') return a - b;\\n        else if(Operator == \\'*\\') return (long)a*b;\\n        return a/b;\\n    }\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long> Stack;\\n        int n = tokens.size();\\n        for(int i = 0; i < n; i++){\\n            // check if element is an operator\\n            if(tokens[i].size() == 1 and tokens[i][0] < 48){\\n                long integer2 = Stack.top();\\n                Stack.pop();\\n                long integer1 = Stack.top();\\n                Stack.pop();\\n                \\n                string Operator = tokens[i];\\n                long resolvedAns = resolves(integer1, integer2 , Operator[0]);\\n                Stack.push(resolvedAns);\\n            }else \\n                Stack.push(stol(tokens[i]));\\n        }\\n        return Stack.top();\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\n\\n    long resolves(int a, int b, char Operator){\\n        if(Operator == \\'+\\') return a + b;\\n        else if(Operator == \\'-\\') return a - b;\\n        else if(Operator == \\'*\\') return (long)a*b;\\n        return a/b;\\n    }\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long> Stack;\\n        int n = tokens.size();\\n        for(int i = 0; i < n; i++){\\n            // check if element is an operator\\n            if(tokens[i].size() == 1 and tokens[i][0] < 48){\\n                long integer2 = Stack.top();\\n                Stack.pop();\\n                long integer1 = Stack.top();\\n                Stack.pop();\\n                \\n                string Operator = tokens[i];\\n                long resolvedAns = resolves(integer1, integer2 , Operator[0]);\\n                Stack.push(resolvedAns);\\n            }else \\n                Stack.push(stol(tokens[i]));\\n        }\\n        return Stack.top();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2209182,
                "title": "rust-stack-using-ops",
                "content": "\\n```\\nuse std::ops::{Add,Sub,Mul,Div};\\n\\nimpl Solution {\\n    pub fn eval_rpn(tokens: Vec<String>) -> i32 {\\n        let mut stack = Vec::new();\\n        \\n        for i in 0..tokens.len() {            \\n            match &*tokens[i] {\\n                \"+\" | \"-\" | \"*\" | \"/\" => {\\n                    let second: i32 = stack.pop().unwrap();\\n                    let first: i32 = stack.pop().unwrap();\\n                    \\n                    let op = match &*tokens[i] {\\n                        \"+\" => i32::add,\\n                        \"-\" => i32::sub,\\n                        \"*\" => i32::mul,\\n                        \"/\" => i32::div,\\n                        _ => i32::add,\\n                    };\\n                    stack.push(op(first, second));\\n                }\\n                num_string => {\\n                    stack.push(num_string.parse::<i32>().unwrap());\\n                }\\n            }\\n        }\\n        stack.pop().unwrap()\\n    }\\n}\\n```",
                "solutionTags": [
                    "Rust",
                    "Stack"
                ],
                "code": "```\\nuse std::ops::{Add,Sub,Mul,Div};\\n\\nimpl Solution {\\n    pub fn eval_rpn(tokens: Vec<String>) -> i32 {\\n        let mut stack = Vec::new();\\n        \\n        for i in 0..tokens.len() {            \\n            match &*tokens[i] {\\n                \"+\" | \"-\" | \"*\" | \"/\" => {\\n                    let second: i32 = stack.pop().unwrap();\\n                    let first: i32 = stack.pop().unwrap();\\n                    \\n                    let op = match &*tokens[i] {\\n                        \"+\" => i32::add,\\n                        \"-\" => i32::sub,\\n                        \"*\" => i32::mul,\\n                        \"/\" => i32::div,\\n                        _ => i32::add,\\n                    };\\n                    stack.push(op(first, second));\\n                }\\n                num_string => {\\n                    stack.push(num_string.parse::<i32>().unwrap());\\n                }\\n            }\\n        }\\n        stack.pop().unwrap()\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1597076,
                "title": "c-using-stack",
                "content": "Passes the new test cases !\\n```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n       stack<int> s;\\n        for(int i=0;i<tokens.size();i++){\\n            if(tokens[i]==\"+\" || tokens[i]==\"-\" || tokens[i]==\"*\" || tokens[i]==\"/\"){\\n                long long int a = s.top();\\n                s.pop();\\n                long long int b = s.top();\\n                s.pop();\\n                int res;\\n                if(tokens[i] == \"+\"){\\n                    long long int res = a+b;\\n                    s.push(res);\\n                }\\n                else if(tokens[i] == \"-\"){\\n                    long long int res = b-a;\\n                    s.push(res);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    long long int res = a*b;\\n                    s.push(res);\\n                }\\n                else if(tokens[i] == \"/\"){\\n                    long long int res = b/a;\\n                    s.push(res);\\n                }\\n            }\\n            else\\n                s.push(stoi(tokens[i]));\\n        }\\n        return s.top();\\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n       stack<int> s;\\n        for(int i=0;i<tokens.size();i++){\\n            if(tokens[i]==\"+\" || tokens[i]==\"-\" || tokens[i]==\"*\" || tokens[i]==\"/\"){\\n                long long int a = s.top();\\n                s.pop();\\n                long long int b = s.top();\\n                s.pop();\\n                int res;\\n                if(tokens[i] == \"+\"){\\n                    long long int res = a+b;\\n                    s.push(res);\\n                }\\n                else if(tokens[i] == \"-\"){\\n                    long long int res = b-a;\\n                    s.push(res);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    long long int res = a*b;\\n                    s.push(res);\\n                }\\n                else if(tokens[i] == \"/\"){\\n                    long long int res = b/a;\\n                    s.push(res);\\n                }\\n            }\\n            else\\n                s.push(stoi(tokens[i]));\\n        }\\n        return s.top();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 490442,
                "title": "rust-simple-solution",
                "content": "```rust\\nimpl Solution {\\n    pub fn eval_rpn(tokens: Vec<String>) -> i32 {\\n        let mut stack: Vec<i32> = Vec::new();\\n        for token in tokens.iter() {\\n            if let Ok(n) = token.parse() {\\n                stack.push(n);\\n            } else {\\n                let rhs = stack.pop().unwrap();\\n                let lhs = stack.pop().unwrap();\\n                match token.as_str() {\\n                    \"+\" => stack.push(lhs + rhs),\\n                    \"-\" => stack.push(lhs - rhs),\\n                    \"*\" => stack.push(lhs * rhs),\\n                    \"/\" => stack.push(lhs / rhs),\\n                    _ => {}\\n                }\\n            }\\n        }\\n        stack[0]\\n    }\\n}\\n```\\n\\nmore shortly:\\n\\n```rust\\nimpl Solution {\\n    pub fn eval_rpn(tokens: Vec<String>) -> i32 {\\n        tokens.iter().fold(Vec::new(), |mut stack, x| {\\n            if let Ok(x) = x.parse() {\\n                stack.push(x);\\n            } else if let (Some(rhs), Some(lhs)) = (stack.pop(), stack.pop()) {\\n                stack.push(match x.as_str() {\\n                    \"+\" => lhs + rhs,\\n                    \"-\" => lhs - rhs,\\n                    \"*\" => lhs * rhs,\\n                    \"/\" => lhs / rhs,\\n                    _ => unreachable!(),\\n                })\\n            }\\n            stack\\n        })[0]\\n    }\\n}\\n```",
                "solutionTags": [
                    "Rust",
                    "Stack"
                ],
                "code": "```rust\\nimpl Solution {\\n    pub fn eval_rpn(tokens: Vec<String>) -> i32 {\\n        let mut stack: Vec<i32> = Vec::new();\\n        for token in tokens.iter() {\\n            if let Ok(n) = token.parse() {\\n                stack.push(n);\\n            } else {\\n                let rhs = stack.pop().unwrap();\\n                let lhs = stack.pop().unwrap();\\n                match token.as_str() {\\n                    \"+\" => stack.push(lhs + rhs),\\n                    \"-\" => stack.push(lhs - rhs),\\n                    \"*\" => stack.push(lhs * rhs),\\n                    \"/\" => stack.push(lhs / rhs),\\n                    _ => {}\\n                }\\n            }\\n        }\\n        stack[0]\\n    }\\n}\\n```\n```rust\\nimpl Solution {\\n    pub fn eval_rpn(tokens: Vec<String>) -> i32 {\\n        tokens.iter().fold(Vec::new(), |mut stack, x| {\\n            if let Ok(x) = x.parse() {\\n                stack.push(x);\\n            } else if let (Some(rhs), Some(lhs)) = (stack.pop(), stack.pop()) {\\n                stack.push(match x.as_str() {\\n                    \"+\" => lhs + rhs,\\n                    \"-\" => lhs - rhs,\\n                    \"*\" => lhs * rhs,\\n                    \"/\" => lhs / rhs,\\n                    _ => unreachable!(),\\n                })\\n            }\\n            stack\\n        })[0]\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 328823,
                "title": "c-99-beat-o-n-linear-complexity-ultimate-weapon-cool-story-bro",
                "content": "I have a cool story. The very first time I flew to San Fransisco (SFO), this was the problem that I solved on a phone / CPU screen. I had never heard of leet code, and I had never considered practicing coding problems. I was unaware that people did this type of thing competatively. I was comfortable in my job and happy with my salary. When this problem came up, I was interviewing for an iPhone position, but I chose to solve it using C++. I did not use any stack, I just did it all with very basic C operations. I extracted the numbers out of the string manually. I made a fixed size (1024 length) buffer to store ints in. The very first time I tried to run it on coder pad, it successfully passed all of their test cases. They invited me onsite. I came on-site, and I passed the interview. However, after seeing the building, I decided that it was in too dangerous of a part of town (I had noticed homeless \"gangsters\" and \"bums\" nearby, and the buildings were too run-down). So, I didn\\'t take the job. Anyway, this eventually set fire to an interest that I had in problem solving. Now I live in silicon valley. So, yeah, this was the buggy that brought me to NorCal and LeetCode.\\n\\n\\n```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        \\n        int aResult = 0, aRHS = 0, aLHS = 0;\\n        stack<int> aOperandStack;\\n        for (auto aWord : tokens) {\\n            if (aWord == \"-\" || aWord == \"+\" || aWord == \"*\" || aWord == \"/\") {\\n                \\n                aRHS = aOperandStack.top(); aOperandStack.pop();\\n                aLHS = aOperandStack.top(); aOperandStack.pop();\\n                \\n                if (aWord == \"-\") {\\n                    aOperandStack.push(aLHS - aRHS);\\n                } else if (aWord == \"+\") {\\n                    aOperandStack.push(aLHS + aRHS);\\n                } else if (aWord == \"*\") {\\n                    aOperandStack.push(aLHS * aRHS);\\n                } else if (aWord == \"/\") {\\n                    aOperandStack.push(aLHS / aRHS);\\n                }\\n                \\n            } else {\\n                aOperandStack.push(atoi(aWord.c_str()));\\n            }   \\n        }\\n        \\n        aResult = aOperandStack.top();\\n        \\n        return aResult;\\n    }\\n};\\n```\\n",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        \\n        int aResult = 0, aRHS = 0, aLHS = 0;\\n        stack<int> aOperandStack;\\n        for (auto aWord : tokens) {\\n            if (aWord == \"-\" || aWord == \"+\" || aWord == \"*\" || aWord == \"/\") {\\n                \\n                aRHS = aOperandStack.top(); aOperandStack.pop();\\n                aLHS = aOperandStack.top(); aOperandStack.pop();\\n                \\n                if (aWord == \"-\") {\\n                    aOperandStack.push(aLHS - aRHS);\\n                } else if (aWord == \"+\") {\\n                    aOperandStack.push(aLHS + aRHS);\\n                } else if (aWord == \"*\") {\\n                    aOperandStack.push(aLHS * aRHS);\\n                } else if (aWord == \"/\") {\\n                    aOperandStack.push(aLHS / aRHS);\\n                }\\n                \\n            } else {\\n                aOperandStack.push(atoi(aWord.c_str()));\\n            }   \\n        }\\n        \\n        aResult = aOperandStack.top();\\n        \\n        return aResult;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 287679,
                "title": "o-n-time-o-n-space-concise-js-stack-solution",
                "content": "```\\nconst operators = {\\n    \\'+\\': (a, b) => b + a,\\n    \\'-\\': (a, b) => b - a,\\n    \\'*\\': (a, b) => b * a,\\n    \\'/\\': (a, b) => parseInt(b / a)\\n};\\n\\n/**\\n * @param {string[]} tokens\\n * @return {number}\\n */\\nconst evalRPN = tokens => {\\n    const x = tokens.pop();\\n    \\n    return operators[x] ? operators[x](evalRPN(tokens), evalRPN(tokens)) : parseInt(x);\\n}\\n```\\n",
                "solutionTags": [
                    "JavaScript",
                    "Stack"
                ],
                "code": "```\\nconst operators = {\\n    \\'+\\': (a, b) => b + a,\\n    \\'-\\': (a, b) => b - a,\\n    \\'*\\': (a, b) => b * a,\\n    \\'/\\': (a, b) => parseInt(b / a)\\n};\\n\\n/**\\n * @param {string[]} tokens\\n * @return {number}\\n */\\nconst evalRPN = tokens => {\\n    const x = tokens.pop();\\n    \\n    return operators[x] ? operators[x](evalRPN(tokens), evalRPN(tokens)) : parseInt(x);\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 47452,
                "title": "golang-straight-forward-solution-using-stack",
                "content": "It looks we can assume a given tokens list is always valid.\\nSo we can just store all num to a queue and once an operator appears, we pop two elements, calculate, then store the result back to the stack.\\n\\n```\\nfunc evalRPN(tokens []string) int {\\n    var s []int\\n    for i := 0; i < len(tokens); i++ {\\n        switch ch := tokens[i]; ch {\\n        case \"+\", \"-\", \"*\", \"/\":\\n            int1, int2 := s[len(s)-2], s[len(s)-1]\\n            s = s[:len(s)-2]\\n            \\n            var res int\\n            if ch == \"+\" {\\n                res = int1 + int2\\n            } else if ch == \"-\" {\\n                res = int1 - int2\\n            } else if ch == \"*\" {\\n                res = int1 * int2\\n            } else {\\n                res = int1 / int2\\n            }\\n            s = append(s, res)\\n        default:\\n            i, _ := strconv.Atoi(ch)\\n            s = append(s, i)\\n        }\\n    }\\n    \\n    return s[0] // should be only one element left as long as the input is valid\\n}\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```\\nfunc evalRPN(tokens []string) int {\\n    var s []int\\n    for i := 0; i < len(tokens); i++ {\\n        switch ch := tokens[i]; ch {\\n        case \"+\", \"-\", \"*\", \"/\":\\n            int1, int2 := s[len(s)-2], s[len(s)-1]\\n            s = s[:len(s)-2]\\n            \\n            var res int\\n            if ch == \"+\" {\\n                res = int1 + int2\\n            } else if ch == \"-\" {\\n                res = int1 - int2\\n            } else if ch == \"*\" {\\n                res = int1 * int2\\n            } else {\\n                res = int1 / int2\\n            }\\n            s = append(s, res)\\n        default:\\n            i, _ := strconv.Atoi(ch)\\n            s = append(s, i)\\n        }\\n    }\\n    \\n    return s[0] // should be only one element left as long as the input is valid\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2919768,
                "title": "simple-switch",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nwhile we are iterating over the tokens we have to do operation, so when a operator comes we can do a operation.\\nto do a operation we need 2 operands so we need previous elements and we will add the result operand after the operation , so we can simply use a list but as we need only 2 recent operands we can use a stack which gives recent elements.\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n- iterate and when operator comes perform the operation overr last two operands in the stack.\\n- push the result operand into the stack.\\n- if operand comes then simply push into the stack.\\n# Complexity\\n- Time complexity:$$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:$$O(n)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> st= new Stack<>();\\n        for(String s : tokens){\\n            switch(s){\\n                case \"+\":\\n                st.push(st.pop()+st.pop());\\n                break;\\n                case \"-\":\\n                st.push(-st.pop()+st.pop());\\n                break;\\n                case \"*\":\\n                st.push(st.pop()*st.pop());\\n                break;\\n                case \"/\":\\n                int val2 = st.pop();\\n                st.push(st.pop()/val2);\\n                break;\\n                default :\\n                st.push(Integer.parseInt(s));\\n            }\\n        }\\n        return st.pop();\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> st= new Stack<>();\\n        for(String s : tokens){\\n            switch(s){\\n                case \"+\":\\n                st.push(st.pop()+st.pop());\\n                break;\\n                case \"-\":\\n                st.push(-st.pop()+st.pop());\\n                break;\\n                case \"*\":\\n                st.push(st.pop()*st.pop());\\n                break;\\n                case \"/\":\\n                int val2 = st.pop();\\n                st.push(st.pop()/val2);\\n                break;\\n                default :\\n                st.push(Integer.parseInt(s));\\n            }\\n        }\\n        return st.pop();\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2844618,
                "title": "go-solution-using-hashmap-and-lambda",
                "content": "Replacing switch case with hashmap and anonymous functions for more readability:\\n```go\\nfunc evalRPN(tokens []string) int {\\n\\tstack := []int{}\\n\\toperators := map[string]func(int, int) int{\\n\\t\\t\"+\": func(a, b int) int { return a + b },\\n\\t\\t\"-\": func(a, b int) int { return a - b },\\n\\t\\t\"*\": func(a, b int) int { return a * b },\\n\\t\\t\"/\": func(a, b int) int { return a / b },\\n\\t}\\n\\tfor _, token := range tokens {\\n\\t\\tif calculate, exist := operators[token]; exist {\\n\\t\\t\\ta, b := stack[len(stack)-2], stack[len(stack)-1]\\n\\t\\t\\tstack = append(stack[:len(stack)-2], calculate(a, b))\\n\\t\\t} else {\\n\\t\\t\\tnum, _ := strconv.Atoi(token)\\n\\t\\t\\tstack = append(stack, num)\\n\\t\\t}\\n\\t}\\n\\treturn stack[0]\\n}\\n```\\nRuntime: 0 ms, faster than 100.00%\\nMemory Usage: 4.0 MB, less than 91.43%",
                "solutionTags": [
                    "Go",
                    "Stack"
                ],
                "code": "```go\\nfunc evalRPN(tokens []string) int {\\n\\tstack := []int{}\\n\\toperators := map[string]func(int, int) int{\\n\\t\\t\"+\": func(a, b int) int { return a + b },\\n\\t\\t\"-\": func(a, b int) int { return a - b },\\n\\t\\t\"*\": func(a, b int) int { return a * b },\\n\\t\\t\"/\": func(a, b int) int { return a / b },\\n\\t}\\n\\tfor _, token := range tokens {\\n\\t\\tif calculate, exist := operators[token]; exist {\\n\\t\\t\\ta, b := stack[len(stack)-2], stack[len(stack)-1]\\n\\t\\t\\tstack = append(stack[:len(stack)-2], calculate(a, b))\\n\\t\\t} else {\\n\\t\\t\\tnum, _ := strconv.Atoi(token)\\n\\t\\t\\tstack = append(stack, num)\\n\\t\\t}\\n\\t}\\n\\treturn stack[0]\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2014453,
                "title": "c-easy-and-clean-code-with-stack",
                "content": "```\\nusing System;\\nusing System.Collections.Generic;\\n\\npublic class Solution\\n{\\n    public int EvalRPN(string[] tokens)\\n    {\\n        Stack<int> stack = new();\\n\\n        foreach (string token in tokens)\\n        {\\n            if (token is \"+\" or \"-\" or \"*\" or \"/\")\\n            {\\n                int right = stack.Pop();\\n                int left = stack.Pop();\\n                int result = token switch\\n                {\\n                    \"+\" => left + right,\\n                    \"-\" => left - right,\\n                    \"*\" => left * right,\\n                    \"/\" => left / right,\\n                    _ => throw new ArgumentOutOfRangeException(nameof(token))\\n                };\\n                stack.Push(result);\\n            }\\n            else\\n            {\\n                stack.Push(int.Parse(token));\\n            }\\n        }\\n\\n        return stack.Pop();\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#",
                    "Stack"
                ],
                "code": "```\\nusing System;\\nusing System.Collections.Generic;\\n\\npublic class Solution\\n{\\n    public int EvalRPN(string[] tokens)\\n    {\\n        Stack<int> stack = new();\\n\\n        foreach (string token in tokens)\\n        {\\n            if (token is \"+\" or \"-\" or \"*\" or \"/\")\\n            {\\n                int right = stack.Pop();\\n                int left = stack.Pop();\\n                int result = token switch\\n                {\\n                    \"+\" => left + right,\\n                    \"-\" => left - right,\\n                    \"*\" => left * right,\\n                    \"/\" => left / right,\\n                    _ => throw new ArgumentOutOfRangeException(nameof(token))\\n                };\\n                stack.Push(result);\\n            }\\n            else\\n            {\\n                stack.Push(int.Parse(token));\\n            }\\n        }\\n\\n        return stack.Pop();\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 134672,
                "title": "clean-javascript-solution",
                "content": "```js\\nfunction evalRPN(tokens) {\\n  const ops = {\\n    \\'+\\': (a, b) => a + b,\\n    \\'-\\': (a, b) => a - b,\\n    \\'*\\': (a, b) => a * b,\\n    \\'/\\': (a, b) => ~~(a / b)\\n  };\\n\\n  const stack = [];\\n\\n  for (let n of tokens) {\\n    if (ops[n] != null) {\\n      const b = stack.pop();\\n      const a = stack.pop();\\n      stack.push(ops[n](a, b));\\n    } else {\\n      stack.push(Number(n));\\n    }\\n  }\\n\\n  return stack[0];\\n}\\n```\\n\\n",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```js\\nfunction evalRPN(tokens) {\\n  const ops = {\\n    \\'+\\': (a, b) => a + b,\\n    \\'-\\': (a, b) => a - b,\\n    \\'*\\': (a, b) => a * b,\\n    \\'/\\': (a, b) => ~~(a / b)\\n  };\\n\\n  const stack = [];\\n\\n  for (let n of tokens) {\\n    if (ops[n] != null) {\\n      const b = stack.pop();\\n      const a = stack.pop();\\n      stack.push(ops[n](a, b));\\n    } else {\\n      stack.push(Number(n));\\n    }\\n  }\\n\\n  return stack[0];\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 47512,
                "title": "straightforward-c-solution-using-stack",
                "content": "    class Solution {\\n    public:\\n        int evalRPN(vector<string>& tokens) {\\n            stack<int> s;\\n            for (auto a : tokens) {\\n                if (a.size() == 1 && !isdigit(a[0])) {  // check if an operator\\n                    int num2 = s.top();\\n                    s.pop();\\n                    int num1 = s.top();\\n                    s.pop();\\n                    switch (a[0]) {  // note switch use char or integer\\n                        case '+':\\n                            s.push(num1 + num2);\\n                            break;\\n                        case '-':\\n                            s.push(num1 - num2);\\n                            break;\\n                        case '*':\\n                            s.push(num1 * num2);\\n                            break;\\n                        case '/':\\n                            s.push(num1 / num2);\\n                            break;\\n                    }\\n                } else {  // if an number push to stack\\n                    s.push(atoi(a.c_str()));\\n                }\\n            }\\n            return s.top();\\n        }\\n    };",
                "solutionTags": [
                    "C++"
                ],
                "code": "class Solution {\\n    public:\\n        int evalRPN(vector<string>& tokens) {\\n            stack<int> s;\\n            for (auto a : tokens) {\\n                if (a.size() == 1 && !isdigit(a[0])) {  // check if an operator\\n                    int num2 = s.top();\\n                    s.pop();\\n                    int num1 = s.top();\\n                    s.pop();\\n                    switch (a[0]) {  // note switch use char or integer\\n                        case '+':\\n                            s.push(num1 + num2);\\n                            break;\\n                        case '-':\\n                            s.push(num1 - num2);\\n                            break;\\n                        case '*':\\n                            s.push(num1 * num2);\\n                            break;\\n                        case '/':\\n                            s.push(num1 / num2);\\n                            break;\\n                    }",
                "codeTag": "Java"
            },
            {
                "id": 47642,
                "title": "a-recursive-solution-in-cpp",
                "content": " \\nThe following subroutine evaluates the complete expression ending with tokens[r].\\nIt returns the value of this expression and also return the left boundary of it (exclusive).\\n  \\nIf tokens[r] is a operator, it goes backwards and call itself twice to evaluate the two operands.\\nIf tokens[r] is number, just returns the value of this number.\\n\\n    int eval_expression(vector<string>& tokens, int r, int& l)\\n    {\\n        string s = tokens[r];\\n        \\n        if(s == \"+\" || s == \"-\" || s == \"*\" || s== \"/\") // tokens[r] is an operator\\n        {\\n            int v2 = eval_expression(tokens, r-1, l);\\n            int v1 = eval_expression(tokens, l,   l);\\n            if(s == \"+\")\\n                return v1 + v2;\\n            else if(s == \"-\")\\n                return v1 - v2;\\n            else if(s == \"*\")\\n                return v1 * v2;\\n            else \\n                return v1 / v2;\\n        }\\n        else // tokens[r] is a number\\n        {\\n            l = r-1;\\n            return atoi(s.c_str());\\n        }\\n    }\\n    \\n    int evalRPN(vector<string> &tokens) {\\n        int l; \\n        return eval_expression(tokens, tokens.size()-1, l);\\n    }",
                "solutionTags": [],
                "code": " \\nThe following subroutine evaluates the complete expression ending with tokens[r].\\nIt returns the value of this expression and also return the left boundary of it (exclusive).\\n  \\nIf tokens[r] is a operator, it goes backwards and call itself twice to evaluate the two operands.\\nIf tokens[r] is number, just returns the value of this number.\\n\\n    int eval_expression(vector<string>& tokens, int r, int& l)\\n    {\\n        string s = tokens[r];\\n        \\n        if(s == \"+\" || s == \"-\" || s == \"*\" || s== \"/\") // tokens[r] is an operator\\n        {\\n            int v2 = eval_expression(tokens, r-1, l);\\n            int v1 = eval_expression(tokens, l,   l);\\n            if(s == \"+\")\\n                return v1 + v2;\\n            else if(s == \"-\")\\n                return v1 - v2;\\n            else if(s == \"*\")\\n                return v1 * v2;\\n            else \\n                return v1 / v2;\\n        }\\n        else // tokens[r] is a number\\n        {\\n            l = r-1;\\n            return atoi(s.c_str());\\n        }\\n    }\\n    \\n    int evalRPN(vector<string> &tokens) {\\n        int l; \\n        return eval_expression(tokens, tokens.size()-1, l);\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 3483907,
                "title": "java-solution-easy-to-understand-beginner-friendly",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        int [] s=new int [tokens.length];\\n        int p=0,t=0;\\n        for(int i=0;i<tokens.length;i++){\\n            try{\\n                int n=Integer.parseInt(tokens[i]);\\n                s[p]=n;\\n                p++;\\n            }\\n            catch(Exception e){\\n                int v=0;\\n                switch(tokens[i]){\\n                    case \"+\":\\n                       v=s[p-2]+s[p-1];\\n                       break;\\n                    case \"-\":\\n                     v=s[p-2]-s[p-1];\\n                       break;\\n                    case \"*\":\\n                     v=s[p-2]*s[p-1];\\n                       break;\\n                    case \"/\":\\n                     v=s[p-2]/s[p-1];\\n                       break;\\n                }\\n                s[p-2]=v;\\n                p-=1;\\n            }\\n        }\\n        return s[0];\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        int [] s=new int [tokens.length];\\n        int p=0,t=0;\\n        for(int i=0;i<tokens.length;i++){\\n            try{\\n                int n=Integer.parseInt(tokens[i]);\\n                s[p]=n;\\n                p++;\\n            }\\n            catch(Exception e){\\n                int v=0;\\n                switch(tokens[i]){\\n                    case \"+\":\\n                       v=s[p-2]+s[p-1];\\n                       break;\\n                    case \"-\":\\n                     v=s[p-2]-s[p-1];\\n                       break;\\n                    case \"*\":\\n                     v=s[p-2]*s[p-1];\\n                       break;\\n                    case \"/\":\\n                     v=s[p-2]/s[p-1];\\n                       break;\\n                }\\n                s[p-2]=v;\\n                p-=1;\\n            }\\n        }\\n        return s[0];\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2920499,
                "title": "java-0ms-easy-to-understand-stack-solution",
                "content": "# Intuition\\nUse Stack to store the ans.\\n\\n# Approach\\n1) Run a loop over string array tokens.\\n2) if string equals (*, -, +, /)  perform the claculations popping last two items from the stack and push the ans to the stack.\\n3) Keep doing until the end of String array.\\n4) At the end, When the loop is finished, return the top of stack as the ans;\\n\\n\\n# Code\\n```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        int n = tokens.length;\\n        Stack<Integer> st = new Stack<>();\\n\\n        for(String s : tokens) {\\n            if(s.equals(\"+\")) {\\n                st.push(st.pop() + st.pop());\\n            }\\n            else if (s.equals(\"-\")) {\\n                st.push(-st.pop() + st.pop());\\n            }\\n            else if(s.equals(\"*\")) {\\n                st.push( st.pop() * st.pop());\\n            }\\n            else if(s.equals(\"/\")) {\\n                st.push(( (int)(1D/st.pop() * st.pop())));\\n            }\\n            else {\\n                int num = Integer.valueOf(s);\\n                st.push(num);\\n            }\\n        }\\n        return st.pop();\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        int n = tokens.length;\\n        Stack<Integer> st = new Stack<>();\\n\\n        for(String s : tokens) {\\n            if(s.equals(\"+\")) {\\n                st.push(st.pop() + st.pop());\\n            }\\n            else if (s.equals(\"-\")) {\\n                st.push(-st.pop() + st.pop());\\n            }\\n            else if(s.equals(\"*\")) {\\n                st.push( st.pop() * st.pop());\\n            }\\n            else if(s.equals(\"/\")) {\\n                st.push(( (int)(1D/st.pop() * st.pop())));\\n            }\\n            else {\\n                int num = Integer.valueOf(s);\\n                st.push(num);\\n            }\\n        }\\n        return st.pop();\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2920309,
                "title": "c-stack-0ms-93-63-memory-basic",
                "content": "\\n\\n# Code\\n```\\n#include<string>\\nclass Solution {\\npublic:\\n    int evaluate(int a, int b,string y){\\n        if(y==\"+\") return b+a;\\n        if(y==\"-\") return b-a;\\n        if(y==\"*\") return long(a)*b;\\n        return b/a;\\n    }\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> st;\\n        for(auto&x:tokens){\\n            if(x==\"+\"||x==\"-\"||x==\"*\"||x==\"/\"){\\n                int a = st.top();\\n                st.pop();\\n                int b = st.top();\\n                st.pop();\\n                st.push(evaluate(a,b,x));\\n            }\\n            else{\\n                st.push(stoi(x));\\n            }\\n        }\\n        return st.top();\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Stack"
                ],
                "code": "```\\n#include<string>\\nclass Solution {\\npublic:\\n    int evaluate(int a, int b,string y){\\n        if(y==\"+\") return b+a;\\n        if(y==\"-\") return b-a;\\n        if(y==\"*\") return long(a)*b;\\n        return b/a;\\n    }\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> st;\\n        for(auto&x:tokens){\\n            if(x==\"+\"||x==\"-\"||x==\"*\"||x==\"/\"){\\n                int a = st.top();\\n                st.pop();\\n                int b = st.top();\\n                st.pop();\\n                st.push(evaluate(a,b,x));\\n            }\\n            else{\\n                st.push(stoi(x));\\n            }\\n        }\\n        return st.top();\\n    }\\n};\\n```",
                "codeTag": "C++"
            },
            {
                "id": 2920189,
                "title": "using-stack-in-linear-time-commented-and-well-explained",
                "content": "# Approach\\npush the values until we find any operator then pop two items from the stack and do the required operation and again push the calculated value.\\n    Point here to note is when we do first pop the element popped at first is second number of the required operation and the second popped element is first number of the required operation.\\n\\n# Complexity\\n- Time complexity:\\n$$O(n)$$\\n\\n\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long>st;\\n        int i=0;\\n        \\n        while(i<tokens.size()){\\n            if(tokens[i]==\"+\" || tokens[i]==\"*\" || tokens[i]==\"-\" || tokens[i]==\"/\"){\\n                long long a= st.top();\\n                st.pop();\\n                long long b= st.top();\\n                st.pop();\\n                if(tokens[i]==\"+\")st.push(a+b);\\n                else if(tokens[i]==\"-\")st.push(b-a);//here b is first element of operation\\n                else if(tokens[i]==\"*\")st.push(a*b);\\n                else st.push(b/a);// similarly b is first element of our operation.\\n            }else{\\n                st.push(stoi(tokens[i]));\\n            }\\n            i++;\\n        }\\n        \\n        return (int)st.top();\\n        \\n    }\\n};\\n```\\n# upvote if helpful.",
                "solutionTags": [
                    "C++",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long>st;\\n        int i=0;\\n        \\n        while(i<tokens.size()){\\n            if(tokens[i]==\"+\" || tokens[i]==\"*\" || tokens[i]==\"-\" || tokens[i]==\"/\"){\\n                long long a= st.top();\\n                st.pop();\\n                long long b= st.top();\\n                st.pop();\\n                if(tokens[i]==\"+\")st.push(a+b);\\n                else if(tokens[i]==\"-\")st.push(b-a);//here b is first element of operation\\n                else if(tokens[i]==\"*\")st.push(a*b);\\n                else st.push(b/a);// similarly b is first element of our operation.\\n            }else{\\n                st.push(stoi(tokens[i]));\\n            }\\n            i++;\\n        }\\n        \\n        return (int)st.top();\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2919617,
                "title": "96-32-javascript-very-easy-to-understand-solution",
                "content": "Visit my youtube! Thank you!\\nhttps://www.youtube.com/channel/UCkhEaNAOO8tig5NHqqxXIeg\\n\\n# Code\\n```\\n/**\\n * @param {string[]} tokens\\n * @return {number}\\n */\\nvar evalRPN = function(tokens) {\\n    let arr =[]\\n    for(let i =0; i<tokens.length;i++){\\n        if(tokens[i] == \"+\"){\\n            let sec = +arr.pop()\\n            let fir = +arr.pop()\\n            arr.push(sec + fir)\\n        }\\n        else if(tokens[i] == \"-\"){\\n            let sec = +arr.pop()\\n            let fir = +arr.pop()\\n            arr.push(fir - sec)\\n        }\\n        else if(tokens[i] == \"*\"){\\n            let sec = +arr.pop()\\n            let fir = +arr.pop()\\n            arr.push(sec * fir)\\n        }\\n        else if(tokens[i] == \"/\"){\\n            let sec = +arr.pop()\\n            let fir = +arr.pop()\\n            arr.push(Math.trunc(fir/sec))\\n        }\\n        else arr.push(tokens[i])\\n    }\\n    return arr[0]\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {string[]} tokens\\n * @return {number}\\n */\\nvar evalRPN = function(tokens) {\\n    let arr =[]\\n    for(let i =0; i<tokens.length;i++){\\n        if(tokens[i] == \"+\"){\\n            let sec = +arr.pop()\\n            let fir = +arr.pop()\\n            arr.push(sec + fir)\\n        }\\n        else if(tokens[i] == \"-\"){\\n            let sec = +arr.pop()\\n            let fir = +arr.pop()\\n            arr.push(fir - sec)\\n        }\\n        else if(tokens[i] == \"*\"){\\n            let sec = +arr.pop()\\n            let fir = +arr.pop()\\n            arr.push(sec * fir)\\n        }\\n        else if(tokens[i] == \"/\"){\\n            let sec = +arr.pop()\\n            let fir = +arr.pop()\\n            arr.push(Math.trunc(fir/sec))\\n        }\\n        else arr.push(tokens[i])\\n    }\\n    return arr[0]\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1229774,
                "title": "python-straightforward-simple-solution",
                "content": "```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        stack=[]\\n        for i in tokens:\\n            if i not in \"+-*/\":\\n                stack.append(int(i))\\n            else:\\n                if i == \"+\":\\n                    stack.append(stack[-1] + stack[-2])\\n                elif i == \"-\":\\n                    stack.append(stack[-2] - stack[-1])\\n\\n                elif i == \"*\":\\n                    stack.append(stack[-1] * stack[-2])\\n\\n                else:\\n                    stack.append(int(stack[-2] / stack[-1]))\\n                stack.pop(-2)\\n                stack.pop(-2)\\n        return stack[-1]\\n```\\nIf found helpful **PLEASE UPVOTE**.",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        stack=[]\\n        for i in tokens:\\n            if i not in \"+-*/\":\\n                stack.append(int(i))\\n            else:\\n                if i == \"+\":\\n                    stack.append(stack[-1] + stack[-2])\\n                elif i == \"-\":\\n                    stack.append(stack[-2] - stack[-1])\\n\\n                elif i == \"*\":\\n                    stack.append(stack[-1] * stack[-2])\\n\\n                else:\\n                    stack.append(int(stack[-2] / stack[-1]))\\n                stack.pop(-2)\\n                stack.pop(-2)\\n        return stack[-1]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1229404,
                "title": "evaluate-reverse-polish-notation-js-python-java-c-easy-stack-solution-w-explanation",
                "content": "*(Note: This is part of a series of Leetcode solution explanations. If you like this solution or find it useful,* ***please upvote*** *this post.)*\\n\\n---\\n\\n#### ***Idea:***\\n\\n**Reverse Polish Notation** was designed specifically to make computing easier with the more efficient use of a **stack**. So we can use a **stack** here to store numbers until they\\'re used, and then each operand will use the top two values of the **stack**.\\n\\nSince the order of the numbers is still important for subtraction and division, we\\'ll have to make sure that the two numbers are processed in their original order, which is the opposite order of the **stack**.\\n\\nAfter each successful operation, the result should be pushed back onto the **stack** until it\\'s used. After iteration is complete, the remaining value in the **stack** will be our answer, so we should **return stack[0]**.\\n\\n - _**Time Complexity: O(N)** where **N** is the length of **tokens**_\\n - _**Space Complexity: O(N)** for the length of the **stack**, up to **N / 2 + 1** values_\\n\\n---\\n\\n#### ***Implementation:***\\n\\nJavascript object values can be functions, so we can store the operations directly in an evaluate object as **lambda** functions.\\n\\n---\\n\\n#### ***Javascript Code:***\\n\\nThe best result for the code below is **68ms / 40.2MB** (beats 100% / 95%).\\n```javascript\\nlet a, b\\nconst evaluate = {\"+\": ()=>a+b, \"-\": ()=>a-b, \"*\": ()=>a*b, \"/\": ()=>~~(a/b)}\\n\\nvar evalRPN = function(tokens) {\\n    let stack = []\\n    for (let t of tokens) {\\n        if (evaluate[t]) {\\n            b = stack.pop(), a = stack.pop()\\n            stack.push(evaluate[t]())\\n        } else stack.push(~~t)\\n    }\\n    return stack[0]\\n};\\n```\\n\\n---\\n\\n#### ***Python Code:***\\n\\nThe best result for the code below is **56ms / 14.4MB** (beats 98% / 96%).\\n```python\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        stack = []\\n        for t in tokens:\\n            if t not in {\"+\", \"-\", \"*\", \"/\"}:\\n                stack.append(int(t))\\n            else:\\n                b, a = stack.pop(), stack.pop()\\n                if t == \"+\": stack.append(a + b)\\n                elif t == \"-\": stack.append(a - b)\\n                elif t == \"*\": stack.append(a * b)\\n                else: stack.append(trunc(a / b))\\n        return stack[0]\\n```\\n\\n---\\n\\n#### ***Java Code:***\\n\\nThe best result for the code below is **ms / MB** (beats 91% / 91%).\\n```java\\nclass Solution {\\n    private Set<String> ops = new HashSet<>(Arrays.asList(\"+\", \"-\", \"*\", \"/\"));\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> stack = new Stack<>();\\n        for (String t : tokens) {\\n            if (!ops.contains(t)) stack.push(Integer.parseInt(t));\\n            else {\\n                int b = stack.pop(), a = stack.pop();\\n                if (t.equals(\"+\")) stack.push(a + b);\\n                else if (t.equals(\"-\")) stack.push(a - b);\\n                else if (t.equals(\"*\")) stack.push(a * b);\\n                else stack.push(a / b);\\n            }\\n        }\\n        return stack.pop();\\n    }\\n}\\n```\\n\\n---\\n\\n#### ***C++ Code:***\\n\\nThe best result for the code below is **4ms / 11.9MB** (beats 99% / 57%).\\n```c++\\nstatic unordered_set<string> ops({\"+\", \"-\", \"*\", \"/\"});\\n\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> stack;\\n        for (auto t : tokens) {\\n            if (ops.find(t) == ops.end()) stack.push(stoi(t));\\n            else {\\n                int b = stack.top(); stack.pop();\\n                int a = stack.top(); stack.pop();\\n                if (t == \"+\") stack.push(a + b);\\n                else if (t == \"-\") stack.push(a - b);\\n                else if (t == \"*\") stack.push(a * b);\\n                else stack.push(a / b);\\n            }\\n        }\\n        return stack.top();\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```javascript\\nlet a, b\\nconst evaluate = {\"+\": ()=>a+b, \"-\": ()=>a-b, \"*\": ()=>a*b, \"/\": ()=>~~(a/b)}\\n\\nvar evalRPN = function(tokens) {\\n    let stack = []\\n    for (let t of tokens) {\\n        if (evaluate[t]) {\\n            b = stack.pop(), a = stack.pop()\\n            stack.push(evaluate[t]())\\n        } else stack.push(~~t)\\n    }\\n    return stack[0]\\n};\\n```\n```python\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        stack = []\\n        for t in tokens:\\n            if t not in {\"+\", \"-\", \"*\", \"/\"}:\\n                stack.append(int(t))\\n            else:\\n                b, a = stack.pop(), stack.pop()\\n                if t == \"+\": stack.append(a + b)\\n                elif t == \"-\": stack.append(a - b)\\n                elif t == \"*\": stack.append(a * b)\\n                else: stack.append(trunc(a / b))\\n        return stack[0]\\n```\n```java\\nclass Solution {\\n    private Set<String> ops = new HashSet<>(Arrays.asList(\"+\", \"-\", \"*\", \"/\"));\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> stack = new Stack<>();\\n        for (String t : tokens) {\\n            if (!ops.contains(t)) stack.push(Integer.parseInt(t));\\n            else {\\n                int b = stack.pop(), a = stack.pop();\\n                if (t.equals(\"+\")) stack.push(a + b);\\n                else if (t.equals(\"-\")) stack.push(a - b);\\n                else if (t.equals(\"*\")) stack.push(a * b);\\n                else stack.push(a / b);\\n            }\\n        }\\n        return stack.pop();\\n    }\\n}\\n```\n```c++\\nstatic unordered_set<string> ops({\"+\", \"-\", \"*\", \"/\"});\\n\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> stack;\\n        for (auto t : tokens) {\\n            if (ops.find(t) == ops.end()) stack.push(stoi(t));\\n            else {\\n                int b = stack.top(); stack.pop();\\n                int a = stack.top(); stack.pop();\\n                if (t == \"+\") stack.push(a + b);\\n                else if (t == \"-\") stack.push(a - b);\\n                else if (t == \"*\") stack.push(a * b);\\n                else stack.push(a / b);\\n            }\\n        }\\n        return stack.top();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 341310,
                "title": "c-4-lines",
                "content": "```\\nint evalRPN(vector<string>& tokens) {\\n  auto t = tokens.back(); tokens.pop_back();\\n  if (isdigit(t.back())) return stoi(t);\\n  int n2 = evalRPN(tokens), n1 = evalRPN(tokens);\\n  return t[0] == \\'+\\' ? n1 + n2 : t[0] == \\'-\\' ? n1 - n2 : t[0] == \\'*\\' ? n1 * n2 : n1 / n2;\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nint evalRPN(vector<string>& tokens) {\\n  auto t = tokens.back(); tokens.pop_back();\\n  if (isdigit(t.back())) return stoi(t);\\n  int n2 = evalRPN(tokens), n1 = evalRPN(tokens);\\n  return t[0] == \\'+\\' ? n1 + n2 : t[0] == \\'-\\' ? n1 - n2 : t[0] == \\'*\\' ? n1 * n2 : n1 / n2;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3894817,
                "title": "the-easiest-solution-using-stack-lambdas",
                "content": "# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        operators = {\\n            \\'+\\': (lambda x, y: operator.add(x, y)),\\n            \\'*\\': (lambda x, y: operator.mul(x, y)),\\n            \\'/\\': (lambda x, y: int(x / y)),\\n            \\'-\\': (lambda x, y: operator.sub(x, y)),\\n        }\\n        stack = [] # Space: O(n) \\n        for token in tokens: # Time: O(n)\\n            if token not in operators:\\n                stack.append(int(token))\\n            else:\\n                x = stack.pop(-2)\\n                y = stack.pop()\\n                stack.append(operators[token](x, y))\\n        return stack[-1]\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        operators = {\\n            \\'+\\': (lambda x, y: operator.add(x, y)),\\n            \\'*\\': (lambda x, y: operator.mul(x, y)),\\n            \\'/\\': (lambda x, y: int(x / y)),\\n            \\'-\\': (lambda x, y: operator.sub(x, y)),\\n        }\\n        stack = [] # Space: O(n) \\n        for token in tokens: # Time: O(n)\\n            if token not in operators:\\n                stack.append(int(token))\\n            else:\\n                x = stack.pop(-2)\\n                y = stack.pop()\\n                stack.append(operators[token](x, y))\\n        return stack[-1]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3782786,
                "title": "simple-solution-using-stack-easy-to-understand-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    bool isOp(string c){\\n        return c == \"+\" || c == \"-\" || c == \"*\" || c == \"/\";\\n    }\\n    \\n    int calc(int a, string c, int b){\\n        if(c == \"+\") return a + b;\\n        if(c == \"-\") return a - b;\\n        if(c == \"*\") return a * b;\\n        if(c == \"/\") return a / b;\\n        return 0; \\n    }  \\n    \\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<string> op;\\n        stack<int> num;\\n        \\n        for(auto i : tokens){\\n            if(isOp(i)){\\n                int n1 = num.top();\\n                num.pop();\\n                int n2 = num.top();\\n                num.pop();\\n                num.push(calc(n2, i, n1));\\n            }\\n            else{\\n                num.push(stoi(i));\\n            }\\n        }\\n        \\n        return num.top();\\n    }\\n};\\n\\n```",
                "solutionTags": [
                    "C++",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\n    bool isOp(string c){\\n        return c == \"+\" || c == \"-\" || c == \"*\" || c == \"/\";\\n    }\\n    \\n    int calc(int a, string c, int b){\\n        if(c == \"+\") return a + b;\\n        if(c == \"-\") return a - b;\\n        if(c == \"*\") return a * b;\\n        if(c == \"/\") return a / b;\\n        return 0; \\n    }  \\n    \\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<string> op;\\n        stack<int> num;\\n        \\n        for(auto i : tokens){\\n            if(isOp(i)){\\n                int n1 = num.top();\\n                num.pop();\\n                int n2 = num.top();\\n                num.pop();\\n                num.push(calc(n2, i, n1));\\n            }\\n            else{\\n                num.push(stoi(i));\\n            }\\n        }\\n        \\n        return num.top();\\n    }\\n};\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3504144,
                "title": "java-stack-easy-to-understand",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThe code implements a solution for evaluating a reverse Polish notation (RPN) expression. It uses a stack data structure to keep track of the operands and perform the required calculations based on the operators encountered.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nThe code iterates through the input tokens array and processes each token based on its type. If the token is an operand, it is pushed onto the stack. If the token is an operator, the code pops the top two operands from the stack, performs the required operation, and pushes the result back onto the stack.\\n\\nThe switch statement is used to handle each operator separately, and the default case is used for operands. The final result is the value left on the stack after all the tokens have been processed.\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack < Integer > stack = new Stack < > ();\\n        int a, b;\\n        for (String str: tokens) {\\n            switch (str) {\\n                case \"+\":\\n                    a = stack.pop();\\n                    b = stack.pop();\\n                    stack.push(b + a);\\n                    break;\\n                case \"-\":\\n                    a = stack.pop();\\n                    b = stack.pop();\\n                    stack.push(b - a);\\n                    break;\\n                case \"*\":\\n                    a = stack.pop();\\n                    b = stack.pop();\\n                    stack.push(b * a);\\n                    break;\\n                case \"/\":\\n                    a = stack.pop();\\n                    b = stack.pop();\\n                    stack.push(b / a);\\n                    break;\\n                default:\\n                    stack.push(Integer.parseInt(str));\\n            }\\n        }\\n        System.out.print(stack);\\n        return stack.pop();\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack < Integer > stack = new Stack < > ();\\n        int a, b;\\n        for (String str: tokens) {\\n            switch (str) {\\n                case \"+\":\\n                    a = stack.pop();\\n                    b = stack.pop();\\n                    stack.push(b + a);\\n                    break;\\n                case \"-\":\\n                    a = stack.pop();\\n                    b = stack.pop();\\n                    stack.push(b - a);\\n                    break;\\n                case \"*\":\\n                    a = stack.pop();\\n                    b = stack.pop();\\n                    stack.push(b * a);\\n                    break;\\n                case \"/\":\\n                    a = stack.pop();\\n                    b = stack.pop();\\n                    stack.push(b / a);\\n                    break;\\n                default:\\n                    stack.push(Integer.parseInt(str));\\n            }\\n        }\\n        System.out.print(stack);\\n        return stack.pop();\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3206849,
                "title": "150-solution-with-step-by-step-explanation",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nThis solution uses a stack to keep track of operands as they are encountered in the input array. When an operator is encountered, the top two operands are popped off the stack, the operation is performed, and the result is pushed back onto the stack. When the loop completes, the final result is the only item left on the stack, so it is returned. The function signature includes type hints to make it easier to understand the inputs and outputs. The code also follows PEP 8 style guidelines for naming conventions and formatting.\\n\\n# Complexity\\n- Time complexity:\\nBeats\\n93.14%\\n\\n- Space complexity:\\nBeats\\n94.2%\\n\\n# Code\\n```\\nfrom typing import List\\n\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        stack = []\\n        operators = set([\"+\", \"-\", \"*\", \"/\"])\\n        for token in tokens:\\n            if token in operators:\\n                right_operand = stack.pop()\\n                left_operand = stack.pop()\\n                if token == \"+\":\\n                    result = left_operand + right_operand\\n                elif token == \"-\":\\n                    result = left_operand - right_operand\\n                elif token == \"*\":\\n                    result = left_operand * right_operand\\n                else:\\n                    result = int(left_operand / right_operand)\\n                stack.append(result)\\n            else:\\n                stack.append(int(token))\\n        return stack[-1]\\n\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Array",
                    "Math",
                    "Stack"
                ],
                "code": "```\\nfrom typing import List\\n\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        stack = []\\n        operators = set([\"+\", \"-\", \"*\", \"/\"])\\n        for token in tokens:\\n            if token in operators:\\n                right_operand = stack.pop()\\n                left_operand = stack.pop()\\n                if token == \"+\":\\n                    result = left_operand + right_operand\\n                elif token == \"-\":\\n                    result = left_operand - right_operand\\n                elif token == \"*\":\\n                    result = left_operand * right_operand\\n                else:\\n                    result = int(left_operand / right_operand)\\n                stack.append(result)\\n            else:\\n                stack.append(int(token))\\n        return stack[-1]\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2921274,
                "title": "python3-solution-beats-100-easy-to-understand",
                "content": "# Code\\n```\\nclass Solution:\\n    def evalRPN(self, t: List[str]) -> int:\\n        a = [\\'+\\', \\'-\\', \\'*\\', \\'/\\']\\n        s = []\\n        for i in t:\\n            if i not in a:\\n                s.append(int(i))\\n            else:\\n                d, h = s.pop(), s.pop()\\n                if i == \\'+\\':\\n                    s.append(h + d)\\n                elif i == \\'-\\':\\n                    s.append(h - d)\\n                elif i == \\'*\\':\\n                    s.append(h * d)\\n                else:\\n                    s.append(int(h / d))\\n        return s[0]\\n\\n```\\nproof for a dummy in comments\\n![\\u0421\\u043D\\u0438\\u043C\\u043E\\u043A \\u044D\\u043A\\u0440\\u0430\\u043D\\u0430 2023-06-29 \\u0432 13.32.25.png](https://assets.leetcode.com/users/images/6275bf56-0142-4a9f-a38d-c71fdb682a6d_1688034806.015996.png)\\n",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Stack"
                ],
                "code": "```\\nclass Solution:\\n    def evalRPN(self, t: List[str]) -> int:\\n        a = [\\'+\\', \\'-\\', \\'*\\', \\'/\\']\\n        s = []\\n        for i in t:\\n            if i not in a:\\n                s.append(int(i))\\n            else:\\n                d, h = s.pop(), s.pop()\\n                if i == \\'+\\':\\n                    s.append(h + d)\\n                elif i == \\'-\\':\\n                    s.append(h - d)\\n                elif i == \\'*\\':\\n                    s.append(h * d)\\n                else:\\n                    s.append(int(h / d))\\n        return s[0]\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2919899,
                "title": "easy-c-solution-using-1-stack",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\nHere, whenever we encounter a number in ```t``` we push it into the stack ```s```  and when we encounter a operator then we pop 2 elements from the stack ```s``` and perform that operation on those 2 operands and push the answer into the stack again for further operations!\\n# Complexity\\n- Time complexity: O(```n```) [```n``` -> Size of ```t```]\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(```n```) [```n``` -> Number of operands]\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n#define ll long long\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& t) {\\n        stack<string> s;\\n        for(int i = 0; i < t.size(); ++i){\\n            if(t[i] == \"+\"){\\n                ll x = stol(s.top()); s.pop();\\n                ll y = stol(s.top()); s.pop();\\n                s.push(to_string(y + x));\\n            }else\\n            if(t[i] == \"-\"){\\n                ll x = stol(s.top()); s.pop();\\n                ll y = stol(s.top()); s.pop();\\n                s.push(to_string(y - x));\\n            }else\\n            if(t[i] == \"*\"){\\n                ll x = stol(s.top()); s.pop();\\n                ll y = stol(s.top()); s.pop();\\n                s.push(to_string(y * x));\\n            }else\\n            if(t[i] == \"/\"){\\n                ll x = stol(s.top()); s.pop();\\n                ll y = stol(s.top()); s.pop();\\n                s.push(to_string(y / x));\\n            }else\\n                s.push(t[i]);\\n        }\\n\\n        return stol(s.top());\\n    }\\n};\\n```\\n\\n*Thankyou for reading! Happy Coding!!!*",
                "solutionTags": [
                    "C++",
                    "Array",
                    "Math",
                    "Stack"
                ],
                "code": "```t```\n```s```\n```s```\n```n```\n```n```\n```t```\n```n```\n```n```\n```\\n#define ll long long\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& t) {\\n        stack<string> s;\\n        for(int i = 0; i < t.size(); ++i){\\n            if(t[i] == \"+\"){\\n                ll x = stol(s.top()); s.pop();\\n                ll y = stol(s.top()); s.pop();\\n                s.push(to_string(y + x));\\n            }else\\n            if(t[i] == \"-\"){\\n                ll x = stol(s.top()); s.pop();\\n                ll y = stol(s.top()); s.pop();\\n                s.push(to_string(y - x));\\n            }else\\n            if(t[i] == \"*\"){\\n                ll x = stol(s.top()); s.pop();\\n                ll y = stol(s.top()); s.pop();\\n                s.push(to_string(y * x));\\n            }else\\n            if(t[i] == \"/\"){\\n                ll x = stol(s.top()); s.pop();\\n                ll y = stol(s.top()); s.pop();\\n                s.push(to_string(y / x));\\n            }else\\n                s.push(t[i]);\\n        }\\n\\n        return stol(s.top());\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2919872,
                "title": "c-very-simple-approach-stack-o-n-tc-and-o-n-sc-approach",
                "content": "# Intuition\\nWithin the tokens vector, we can clearly see that if an operator appears, we must perform that operation on the last two indexes and place the result in place of those two indexes.\\n\\n# Approach\\nAs can be seen, a stack can be utilised. If we don\\'t find an operator, we will push that token to the top of the stack.\\n- If we find an operator, we will invoke a helper function (named eval) that will accept \\'a stack\\' and a \\'operator string\\' as input.\\n- And in that function, I extracted both the no. at the last two indexes, performed the operation on those indexes, and pushed the result back into the stack.\\n\\n# Complexity\\n- Time complexity: All the process is done in only one iteration, so it will use O(n) time.\\n\\n\\n- Space complexity: We are storing an stack of strings, so will use a O(n) space.\\n\\n# Code\\n```\\nclass Solution {\\n    void eval(stack<string> &st, string op){\\n        long long int b = stoll(st.top());\\n        st.pop();\\n        long long int a = stoll(st.top());\\n        st.pop();\\n        string res;\\n        if(op == \"+\"){\\n            res = to_string(a+b);\\n        }\\n        else if(op == \"-\") {\\n            res = to_string(a-b);\\n        }\\n        else if(op == \"*\"){\\n            res = to_string(a*b);\\n        }else if(op == \"/\"){\\n            res = to_string(a/b);\\n        }\\n        st.push(res);\\n\\n    }\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        int n = tokens.size();\\n        stack<string> st;\\n        for(int i =0;i<n;i++){\\n            if(tokens[i]==\"+\" || tokens[i] == \"-\" || tokens[i] == \"/\" || tokens[i] == \"*\"){\\n                eval(st,tokens[i]);\\n            }\\n            else{\\n                st.push(tokens[i]);\\n            }\\n        }\\n        long long int res = stoll(st.top());\\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "String",
                    "Stack",
                    "Monotonic Stack"
                ],
                "code": "```\\nclass Solution {\\n    void eval(stack<string> &st, string op){\\n        long long int b = stoll(st.top());\\n        st.pop();\\n        long long int a = stoll(st.top());\\n        st.pop();\\n        string res;\\n        if(op == \"+\"){\\n            res = to_string(a+b);\\n        }\\n        else if(op == \"-\") {\\n            res = to_string(a-b);\\n        }\\n        else if(op == \"*\"){\\n            res = to_string(a*b);\\n        }else if(op == \"/\"){\\n            res = to_string(a/b);\\n        }\\n        st.push(res);\\n\\n    }\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        int n = tokens.size();\\n        stack<string> st;\\n        for(int i =0;i<n;i++){\\n            if(tokens[i]==\"+\" || tokens[i] == \"-\" || tokens[i] == \"/\" || tokens[i] == \"*\"){\\n                eval(st,tokens[i]);\\n            }\\n            else{\\n                st.push(tokens[i]);\\n            }\\n        }\\n        long long int res = stoll(st.top());\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2919722,
                "title": "easy-to-understand-and-optimised-solution",
                "content": "** UPVOTE IF U FOUND IT HELPFUL :-)**\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> stk;\\n        for(int i=0;i<tokens.size();i++)\\n        {\\n    if(tokens[i]!=\"+\" && tokens[i]!=\"-\" && tokens[i]!=\"/\" && tokens[i]!=\"*\")\\n    {\\n        stk.push(stoi(tokens[i]));\\n        continue;\\n    }\\n    else\\n    {\\n        long long ftop=stk.top();\\n        stk.pop();\\n        long long stop=stk.top();\\n        stk.pop();\\n        if(tokens[i]==\"+\")\\n        {\\n            stk.push(stop+ftop);\\n        }\\n        else if(tokens[i]==\"-\")\\n        {\\n            stk.push(stop-ftop);\\n        }\\n        else if(tokens[i]==\"*\")\\n        {\\n            stk.push(stop*ftop);\\n        }\\n        else\\n        {\\n            stk.push(stop/ftop);\\n        }\\n\\n\\n    }\\n        }\\n        return stk.top();\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> stk;\\n        for(int i=0;i<tokens.size();i++)\\n        {\\n    if(tokens[i]!=\"+\" && tokens[i]!=\"-\" && tokens[i]!=\"/\" && tokens[i]!=\"*\")\\n    {\\n        stk.push(stoi(tokens[i]));\\n        continue;\\n    }\\n    else\\n    {\\n        long long ftop=stk.top();\\n        stk.pop();\\n        long long stop=stk.top();\\n        stk.pop();\\n        if(tokens[i]==\"+\")\\n        {\\n            stk.push(stop+ftop);\\n        }\\n        else if(tokens[i]==\"-\")\\n        {\\n            stk.push(stop-ftop);\\n        }\\n        else if(tokens[i]==\"*\")\\n        {\\n            stk.push(stop*ftop);\\n        }\\n        else\\n        {\\n            stk.push(stop/ftop);\\n        }\\n\\n\\n    }\\n        }\\n        return stk.top();\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2919588,
                "title": "daily-leetcoding-challenge-december-day-17",
                "content": "This problem is the Daily LeetCoding Challenge for December, Day 17.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **📌 Do you want to learn the problem thoroughly?**\n  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/evaluate-reverse-polish-notation/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 2 approaches in the official solution</summary>\n\n  \n**Approach 1:** Reducing the List In-place\n\n  \n**Approach 2:** Evaluate with Stack\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>",
                "solutionTags": [],
                "code": "  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/evaluate-reverse-polish-notation/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />",
                "codeTag": "Unknown"
            },
            {
                "id": 1658649,
                "title": "naive-to-efficient-2-approaches-o-1-space-simple-easy-c",
                "content": "Implementation\\n\\n**Naive Approach\\nUsing stack\\nTime Complexity = O(N), Space Complexity = O(N)**\\n```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> st;\\n        \\n        for(auto a : tokens){\\n            if(a != \"+\" && a != \"-\" && a != \"*\" && a != \"/\"){\\n                st.push(stoi(a));\\n            }\\n            else{\\n                int num2 = st.top(); st.pop();\\n                int num1 = st.top(); st.pop();\\n\\t\\t\\t\\t\\n                if(a == \"+\") st.push(num1 + num2);\\n                else if(a == \"-\") st.push(num1 - num2);\\n                else if(a == \"*\") st.push(num1 * num2);\\n                else st.push(num1 / num2);             \\n            }\\n        }\\n        return st.top();\\n    }\\n};\\n```\\n\\n**Efficient Approach\\nTime Complexity = O(N), Space Complexity = O(1)**\\n```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        // will be using the tokens vector as a stack\\n        \\n        int top = 0;\\n        for(auto a : tokens){\\n            if(a != \"+\" && a != \"-\" && a != \"*\" && a != \"/\"){\\n                tokens[top++] = a;\\n            }\\n            else{\\n                int num1 = stoi(tokens[--top]);\\n                int num2 = stoi(tokens[--top]);\\n                \\n                if(a == \"+\") num2 += num1;\\n                else if(a == \"-\") num2 -= num1;\\n                else if(a == \"*\") num2 *= num1;\\n                else num2 /= num1;\\n                \\n                tokens[top++] = to_string(num2);\\n            }\\n        }\\n        return stoi(tokens[0]);\\n    }\\n};\\n```\\nIf you find any issue in understanding the solution then comment below, will try to help you.\\nIf you found my solution useful.\\nSo **please do upvote and encourage me** to document all leetcode problems\\uD83D\\uDE03\\nHappy Coding :)",
                "solutionTags": [
                    "C",
                    "String",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> st;\\n        \\n        for(auto a : tokens){\\n            if(a != \"+\" && a != \"-\" && a != \"*\" && a != \"/\"){\\n                st.push(stoi(a));\\n            }\\n            else{\\n                int num2 = st.top(); st.pop();\\n                int num1 = st.top(); st.pop();\\n\\t\\t\\t\\t\\n                if(a == \"+\") st.push(num1 + num2);\\n                else if(a == \"-\") st.push(num1 - num2);\\n                else if(a == \"*\") st.push(num1 * num2);\\n                else st.push(num1 / num2);             \\n            }\\n        }\\n        return st.top();\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        // will be using the tokens vector as a stack\\n        \\n        int top = 0;\\n        for(auto a : tokens){\\n            if(a != \"+\" && a != \"-\" && a != \"*\" && a != \"/\"){\\n                tokens[top++] = a;\\n            }\\n            else{\\n                int num1 = stoi(tokens[--top]);\\n                int num2 = stoi(tokens[--top]);\\n                \\n                if(a == \"+\") num2 += num1;\\n                else if(a == \"-\") num2 -= num1;\\n                else if(a == \"*\") num2 *= num1;\\n                else num2 /= num1;\\n                \\n                tokens[top++] = to_string(num2);\\n            }\\n        }\\n        return stoi(tokens[0]);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1068648,
                "title": "java-clean-code-using-stack",
                "content": "Idea: Traverse until you find operation, then pop last two elements\\n\\n```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        \\n        //idea\\n        //traverse until you find operation, then pop last two elements\\n        \\n        Stack <Integer> stack = new Stack<>();\\n        \\n        for(int i=0; i<tokens.length; i++){\\n            if(tokens[i].equals(\"+\")){\\n                stack.push(stack.pop() + stack.pop());\\n            }\\n            else if(tokens[i].equals(\"-\")){\\n                stack.push(-stack.pop() + stack.pop());   // subtraction considering order of pop\\n            }\\n            else if(tokens[i].equals(\"*\")){\\n                stack.push(stack.pop()*stack.pop());\\n            }\\n            else if(tokens[i].equals(\"/\")){\\n                int a= stack.pop();\\n                stack.push(stack.pop()/a);\\n                //System.out.println(a);\\n            }\\n            else\\n                stack.push(Integer.parseInt(tokens[i]));\\n        }\\n    \\n        return stack.pop();\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        \\n        //idea\\n        //traverse until you find operation, then pop last two elements\\n        \\n        Stack <Integer> stack = new Stack<>();\\n        \\n        for(int i=0; i<tokens.length; i++){\\n            if(tokens[i].equals(\"+\")){\\n                stack.push(stack.pop() + stack.pop());\\n            }\\n            else if(tokens[i].equals(\"-\")){\\n                stack.push(-stack.pop() + stack.pop());   // subtraction considering order of pop\\n            }\\n            else if(tokens[i].equals(\"*\")){\\n                stack.push(stack.pop()*stack.pop());\\n            }\\n            else if(tokens[i].equals(\"/\")){\\n                int a= stack.pop();\\n                stack.push(stack.pop()/a);\\n                //System.out.println(a);\\n            }\\n            else\\n                stack.push(Integer.parseInt(tokens[i]));\\n        }\\n    \\n        return stack.pop();\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1050899,
                "title": "java-stack-100-o-n-single-pass",
                "content": "```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> stack = new Stack<>();\\n       for(String str : tokens){\\n           switch (str){ // 2  1  +  3  * = 9\\n               case \"+\":{\\n                   int value = stack.pop();\\n                   stack.push(stack.pop() + value);\\n                   break;\\n               }\\n               case \"-\":{\\n                   int value = stack.pop();\\n                   stack.push(stack.pop() - value);\\n                   break;\\n               }\\n               case \"*\":{\\n                   int value = stack.pop();\\n                   stack.push(stack.pop() * value);\\n                   break;\\n               }\\n               case \"/\":{\\n                   int value = stack.pop();\\n                   stack.push(stack.pop() / value);\\n                   break;\\n               }\\n               default:{\\n                   stack.push(Integer.parseInt(str));\\n                   break;\\n               }\\n           }\\n       }\\n       return stack.pop();\\n    }\\n}",
                "solutionTags": [
                    "Java",
                    "Stack"
                ],
                "code": "class Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> stack = new Stack<>();\\n       for(String str : tokens){\\n           switch (str){ // 2  1  +  3  * = 9\\n               case \"+\":{\\n                   int value = stack.pop();\\n                   stack.push(stack.pop() + value);\\n                   break;\\n               }",
                "codeTag": "Java"
            },
            {
                "id": 47433,
                "title": "clean-c-can-be-easily-modified-to-support-other-operators",
                "content": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;\\n        unordered_map<string, function<int(int,int)>> ops{\\n            {\"+\", plus<int>()},\\n            {\"-\", minus<int>()},\\n            {\"*\", multiplies<int>()},\\n            {\"/\", divides<int>()},\\n        };\\n        \\n        for (auto token : tokens) {\\n            auto it = ops.find(token);\\n            if (it != ops.end()) {\\n                auto o2 = s.top(); s.pop();\\n                auto o1 = s.top(); s.pop();\\n                s.push(it->second(o1, o2));\\n            } else {\\n                s.push(stoi(token));\\n            }\\n        }\\n        \\n        return s.top();\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;\\n        unordered_map<string, function<int(int,int)>> ops{\\n            {\"+\", plus<int>()},\\n            {\"-\", minus<int>()},\\n            {\"*\", multiplies<int>()},\\n            {\"/\", divides<int>()},\\n        };\\n        \\n        for (auto token : tokens) {\\n            auto it = ops.find(token);\\n            if (it != ops.end()) {\\n                auto o2 = s.top(); s.pop();\\n                auto o1 = s.top(); s.pop();\\n                s.push(it->second(o1, o2));\\n            } else {\\n                s.push(stoi(token));\\n            }\\n        }\\n        \\n        return s.top();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3322718,
                "title": "150-evaluate-reverse-polish-notation-easy-to-understand-faster-than-90",
                "content": "```\\n        s=[]                     #assign a empty stack s\\n        for i in tokens:\\n            if i not in \\'-+/*\\':\\n                s+=[int(i)]              #you can also use s.append()\\n            else:\\n                a=int(s.pop())         \\n                b=int(s.pop())\\n                if i==\\'+\\':\\n                    s+=[b+a]\\n                elif i==\\'*\\':\\n                    s+=[b*a]\\n                elif i==\\'-\\':\\n                    s+=[(b-a)]\\n                else:\\n                    s+=[b/a]\\n        return int(s[-1])          #data type int is used for float value\\n```\\n\\n\\n\\n![image](https://assets.leetcode.com/users/images/76e83f2f-eb17-4d12-a2b8-d62cc00f0e9d_1679374110.5451596.png)\\n",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Stack"
                ],
                "code": "```\\n        s=[]                     #assign a empty stack s\\n        for i in tokens:\\n            if i not in \\'-+/*\\':\\n                s+=[int(i)]              #you can also use s.append()\\n            else:\\n                a=int(s.pop())         \\n                b=int(s.pop())\\n                if i==\\'+\\':\\n                    s+=[b+a]\\n                elif i==\\'*\\':\\n                    s+=[b*a]\\n                elif i==\\'-\\':\\n                    s+=[(b-a)]\\n                else:\\n                    s+=[b/a]\\n        return int(s[-1])          #data type int is used for float value\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3320931,
                "title": "c-iterative-solution-using-stack-beats-94",
                "content": "# Intuition\\nAnalyzing test cases - we can observe a Last In First Out pattern between operands and operators. \\n\\n**TEST CASE - 1** \\n\\n`[\"2\",\"1\",\"+\",\"3\",\"*\"]`\\n`((2 + 1) * 3) = 9`\\n\\n*Iterate the string : -*\\n- **\\'2\\'** -> PUSH\\n- **\\'1\\'** -> PUSH\\n- **\\'+\\'** -> POP top 2 elements *(1 and 2)* perform + operation and push the result into the stack\\n- **\\'3\\'** -> PUSH\\n- **\\'*\\'** -> POP top 2 elements *(3 and result of 2+1)* perform \\'*\\' operation and push result into the stack \\n\\n**TEST CASE - 2**\\n\\n`[\"4\",\"13\",\"5\",\"/\",\"+\"]`\\n`(4 + (13 / 5)) = 6`\\n\\n*Iterate the string - :*\\n- **\\'4\\'** -> PUSH\\n- **\\'13\\'** -> PUSH\\n- **\\'5\\'** -> PUSH\\n- **\\'/\\'** -> POP top 2 elements of the stack *(\\'5 & 13\\')* and perform \\'/\\' operation on them and push their result into the stack \\n- **\\'+\\'** -> POP top 2 elements of stack *(result of 13/5 and 4)* and perform \\'+\\' operation on them and push their result into the stack\\n\\nIn the end after the entire array has been traversed, the only element in the stack is the result. So, `return stack.top()`\\n\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n1. Create a stack \\n2. Iterate through the given array nums.\\n\\n> We know, there are only 4 operands \\'+\\' \\'-\\' \\'/\\' \\'*\\'\\nApart from these operands we only have operands.\\n\\n3. So, inside the for loop we make **if statements** for operations to be performed **if nums[i] is one of these operators** \\n4. **ELSE**, if nums[i] is not any of these operator means **it is a number so we push it into the stack** as a number by using string to integer (stoi) function.\\n\\n5. In the end, after the entire loop has been traversed the **top element of the stack is the result so we return it** \\n\\n# Complexity\\n- Time complexity:$$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:$$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```C++ []\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>&nums) \\n    {\\n        stack<int> s ;\\n        for(int i = 0 ; i < nums.size() ; i ++)\\n        {      \\n            // we know there are only 4 valid operators + - * /\\n\\n            // if \\'+\\' , add top two elements of stack\\n            if(nums[i] == \"+\")\\n            {\\n                int x = s.top(); \\n                s.pop();\\n                int y = s.top(); \\n                s.pop();\\n\\n                s.push(x + y) ;\\n            }\\n\\n            // if \\'-\\' , subtract top two elements of stack\\n            else if(nums[i] == \"-\")\\n            {\\n                int x = s.top() ; \\n                s.pop();\\n                int y = s.top() ; \\n                s.pop();\\n\\n                s.push(y - x) ;\\n            }\\n\\n            // if \\'*\\' , multiply top two elements of stack\\n            else if(nums[i] == \"*\")\\n            {\\n                int x = s.top() ; \\n                s.pop() ;\\n                int y = s.top() ; \\n                s.pop() ;\\n\\n                s.push(y * x) ;\\n            }\\n\\n            // if \\'/\\' , divide top two elements of stack\\n            else if(nums[i] == \"/\")\\n            {\\n                int x = s.top() ; \\n                s.pop() ;\\n                int y = s.top() ; \\n                s.pop() ;\\n\\n                s.push(y / x) ;\\n            }\\n            \\n            // if nums[i] is a character push into the stack \\n            else\\n            {\\n                s.push(stoi(nums[i])) ;\\n            }\\n        }\\n        return s.top() ;\\n    }\\n};\\n```\\n![815a317f-9cdf-46e2-a397-af8869dafa2e_1673498197.3721023.png](https://assets.leetcode.com/users/images/f1af30a5-a05d-4a16-8336-426c80b4e3fa_1679331993.4378426.png)\\n",
                "solutionTags": [
                    "C++",
                    "Array",
                    "Math",
                    "Stack"
                ],
                "code": "```C++ []\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>&nums) \\n    {\\n        stack<int> s ;\\n        for(int i = 0 ; i < nums.size() ; i ++)\\n        {      \\n            // we know there are only 4 valid operators + - * /\\n\\n            // if \\'+\\' , add top two elements of stack\\n            if(nums[i] == \"+\")\\n            {\\n                int x = s.top(); \\n                s.pop();\\n                int y = s.top(); \\n                s.pop();\\n\\n                s.push(x + y) ;\\n            }\\n\\n            // if \\'-\\' , subtract top two elements of stack\\n            else if(nums[i] == \"-\")\\n            {\\n                int x = s.top() ; \\n                s.pop();\\n                int y = s.top() ; \\n                s.pop();\\n\\n                s.push(y - x) ;\\n            }\\n\\n            // if \\'*\\' , multiply top two elements of stack\\n            else if(nums[i] == \"*\")\\n            {\\n                int x = s.top() ; \\n                s.pop() ;\\n                int y = s.top() ; \\n                s.pop() ;\\n\\n                s.push(y * x) ;\\n            }\\n\\n            // if \\'/\\' , divide top two elements of stack\\n            else if(nums[i] == \"/\")\\n            {\\n                int x = s.top() ; \\n                s.pop() ;\\n                int y = s.top() ; \\n                s.pop() ;\\n\\n                s.push(y / x) ;\\n            }\\n            \\n            // if nums[i] is a character push into the stack \\n            else\\n            {\\n                s.push(stoi(nums[i])) ;\\n            }\\n        }\\n        return s.top() ;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2921804,
                "title": "efficient-cpp-solution-with-o-n-time-complexity",
                "content": "-> Simply Store if the scanned element is not an Operator and Pop the First 2 elements from the stack if Operator is detected,\\n\\n-> Push the value we obtained after performing the operation(using the scanned operator),\\n\\n-> Atlast, Return the top of the stack\\n\\n# Complexity\\n- Time complexity: O(n),13ms 83% better than Online Cpp Submissions\\n\\n- Space complexity: O(n), 22.3% better than Online Cpp Submissions\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& t) {\\n        stack<long long int>st;\\n        \\n        for(int i=0;i<t.size();i++)\\n        {\\n            if(t[i]==\"+\" || t[i]==\"-\" || t[i]==\"*\" || t[i]==\"/\")\\n            {   long long int d;\\n                long long int j=st.top();\\n                st.pop();\\n                long long int k=st.top();\\n                st.pop();\\n                if(t[i]==\"+\")\\n                 d=(j+k);\\n                else if(t[i]==\"-\")\\n                 d=(k-j);\\n                else if(t[i]==\"*\")\\n                 d=(j*k);\\n                else\\n                 d=(k/j);\\n                st.push(d);\\n            }\\n            else\\n            {\\n              long long int y=stoi(t[i]);\\n              st.push(y);\\n            } \\n        }\\n   return st.top();\\n    }\\n};\\n```\\n```\\n          Please Upvote If you liked the Solution \\uD83D\\uDE01\\uD83D\\uDE01\\uD83D\\uDE0A\\uD83D\\uDE0A\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Array",
                    "Math",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& t) {\\n        stack<long long int>st;\\n        \\n        for(int i=0;i<t.size();i++)\\n        {\\n            if(t[i]==\"+\" || t[i]==\"-\" || t[i]==\"*\" || t[i]==\"/\")\\n            {   long long int d;\\n                long long int j=st.top();\\n                st.pop();\\n                long long int k=st.top();\\n                st.pop();\\n                if(t[i]==\"+\")\\n                 d=(j+k);\\n                else if(t[i]==\"-\")\\n                 d=(k-j);\\n                else if(t[i]==\"*\")\\n                 d=(j*k);\\n                else\\n                 d=(k/j);\\n                st.push(d);\\n            }\\n            else\\n            {\\n              long long int y=stoi(t[i]);\\n              st.push(y);\\n            } \\n        }\\n   return st.top();\\n    }\\n};\\n```\n```\\n          Please Upvote If you liked the Solution \\uD83D\\uDE01\\uD83D\\uDE01\\uD83D\\uDE0A\\uD83D\\uDE0A\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2766705,
                "title": "5-ms-faster-than-97-40-java",
                "content": "If you like it pls upvote\\n```\\n\\n    public int evalRPN(String[] tokens) {\\n        int a, b;\\n        Stack<Integer> stack = new Stack<>();\\n        for (String token : tokens) {\\n            switch (token) {\\n                case \"+\":\\n                    stack.add(stack.pop() + stack.pop());\\n                    break;\\n                case \"*\":\\n                    stack.add(stack.pop() * stack.pop());\\n                    break;\\n                case \"/\":\\n                    a = stack.pop();\\n                    b = stack.pop();\\n                    stack.add(b / a);\\n                    break;\\n                case \"-\":\\n                    a = stack.pop();\\n                    b = stack.pop();\\n                    stack.add(b - a);\\n                    break;\\n                default:\\n                    stack.add(Integer.parseInt(token));\\n                    break;\\n            }\\n        }\\n        return stack.pop();\\n    }\\n\\n```",
                "solutionTags": [
                    "Java",
                    "Stack"
                ],
                "code": "```\\n\\n    public int evalRPN(String[] tokens) {\\n        int a, b;\\n        Stack<Integer> stack = new Stack<>();\\n        for (String token : tokens) {\\n            switch (token) {\\n                case \"+\":\\n                    stack.add(stack.pop() + stack.pop());\\n                    break;\\n                case \"*\":\\n                    stack.add(stack.pop() * stack.pop());\\n                    break;\\n                case \"/\":\\n                    a = stack.pop();\\n                    b = stack.pop();\\n                    stack.add(b / a);\\n                    break;\\n                case \"-\":\\n                    a = stack.pop();\\n                    b = stack.pop();\\n                    stack.add(b - a);\\n                    break;\\n                default:\\n                    stack.add(Integer.parseInt(token));\\n                    break;\\n            }\\n        }\\n        return stack.pop();\\n    }\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2631875,
                "title": "rust-stack",
                "content": "```\\nuse std::ops::{Add, Sub, Mul, Div};\\n\\nimpl Solution {\\n    pub fn eval_rpn(tokens: Vec<String>) -> i32 {\\n        let mut stack = vec![];\\n\\n        let binary_op = |f: fn(_, _) -> _, stack: &mut Vec<_>| {\\n            let (o2, o1) = (stack.pop().unwrap(), stack.pop().unwrap());\\n            stack.push(f(o1, o2))\\n        };\\n\\n        for token in tokens {\\n            match token.as_str() {\\n                \"+\" => binary_op(i32::add, &mut stack),\\n                \"-\" => binary_op(i32::sub, &mut stack),\\n                \"*\" => binary_op(i32::mul, &mut stack),\\n                \"/\" => binary_op(i32::div, &mut stack),\\n                number => stack.push(number.parse().unwrap()),\\n            }\\n        }\\n        stack.pop().unwrap()\\n    }\\n}\\n```",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```\\nuse std::ops::{Add, Sub, Mul, Div};\\n\\nimpl Solution {\\n    pub fn eval_rpn(tokens: Vec<String>) -> i32 {\\n        let mut stack = vec![];\\n\\n        let binary_op = |f: fn(_, _) -> _, stack: &mut Vec<_>| {\\n            let (o2, o1) = (stack.pop().unwrap(), stack.pop().unwrap());\\n            stack.push(f(o1, o2))\\n        };\\n\\n        for token in tokens {\\n            match token.as_str() {\\n                \"+\" => binary_op(i32::add, &mut stack),\\n                \"-\" => binary_op(i32::sub, &mut stack),\\n                \"*\" => binary_op(i32::mul, &mut stack),\\n                \"/\" => binary_op(i32::div, &mut stack),\\n                number => stack.push(number.parse().unwrap()),\\n            }\\n        }\\n        stack.pop().unwrap()\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2510806,
                "title": "python-c-java-beginner-level-as-simple-as-u-think-simple-short-solution",
                "content": "***Please upvote to motivate me in my quest of documenting all leetcode solutions. HAPPY CODING:)\\nAny suggestions and improvements are always welcome*.**\\n___________________\\n_________________\\n***Q150. Evaluate Reverse Polish Notation***\\nEvaluate the value of an arithmetic expression in *Reverse Polish Notation*.\\n\\nValid operators are `+, -, *`, and `/`. Each operand may be an integer or another expression.\\n\\n**Note** that division between two integers should truncate toward zero.\\n\\nIt is guaranteed that the given RPN expression is always valid. That means the expression would always evaluate to a result, and there will not be any division by zero operation.\\n____________________________________________________________________________________________________________________\\n____________________________________________________________________________________________________________________\\n\\u2705 **Python  Code** :\\n```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        s=[]\\n        for i in tokens:\\n            if i not in {\"+\",\"-\",\"/\",\"*\"}:\\n                s.append(int(i))\\n            else:\\n                b,a=s.pop(),s.pop()\\n                if i==\"+\":s.append(a+b)\\n                elif i==\"-\":s.append(a-b)\\n                elif i==\"*\":s.append(a*b)\\n                else: s.append(trunc(a/b))\\n        return s[0]\\n        \\n```\\n**Runtime:**  151 ms\\t\\n**Memory Usage:**  13.9 MB\\n____________________________________________________________________________________________________________________\\n____________________________________________________________________________________________________________________\\n\\n\\u2705 **Java Code** :\\n```\\nimport java.util.Stack;\\n\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        int a,b;\\n        Stack<Integer> S =new Stack<Integer>();\\n        for(String s:tokens)\\n        {\\n           if(s.equals(\"+\"))\\n\\t\\t\\t\\tS.add(S.pop()+S.pop());\\n\\t\\t  else if(s.equals(\"/\")) {\\n\\t\\t\\t\\tb = S.pop();\\n\\t\\t\\t\\ta = S.pop();\\n\\t\\t\\t\\tS.add(a / b);\\n\\t\\t\\t}\\n\\t\\t\\telse if(s.equals(\"*\")) {\\n\\t\\t\\t\\tS.add(S.pop() * S.pop());\\n\\t\\t\\t}\\n\\t\\t\\telse if(s.equals(\"-\")) {\\n\\t\\t\\t\\tb = S.pop();\\n\\t\\t\\t\\ta = S.pop();\\n\\t\\t\\t\\tS.add(a - b);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tS.add(Integer.parseInt(s));\\n\\t\\t\\t}\\n\\t\\t}\\t\\n\\t\\treturn S.pop(); \\n        }\\n    }\\n```\\n**Runtime:**  8 ms\\t\\t\\n**Memory Usage:**  43..8 MB\\t\\n____________________________________________________________________________________________________________________\\n____________________________________________________________________________________________________________________\\n\\u2705 **C++  Code** :\\n```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;\\n        for(auto& i:tokens)\\n            if (i==\"+\"||i==\"-\"||i==\"*\"||i==\"/\")\\n            {\\n                long int e1=s.top();s.pop();\\n                long int e2=s.top();s.pop();\\n                   if(i==\"+\")   e1=e2+e1;\\n                    if(i==\"-\")  e1=e2-e1;\\n                    if(i==\"*\")  e1=e2*e1;\\n                    if(i==\"/\")  e1=e2/e1;\\n                s.push(e1);\\n            }\\n            else s.push(stoi(i));         \\n        return s.top();\\n    }\\n};\\n```\\n**Runtime:** 11 ms\\t\\n**Memory Usage:**  12.3 MB\\t\\t\\n____________________________________________________________________________________________________________________\\n____________________________________________________________________________________________________________________\\nIf you like the solution, please upvote \\uD83D\\uDD3C\\nFor any questions, or discussions, comment below. \\uD83D\\uDC47\\uFE0F\\n",
                "solutionTags": [
                    "Java",
                    "Python",
                    "C",
                    "Stack"
                ],
                "code": "```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        s=[]\\n        for i in tokens:\\n            if i not in {\"+\",\"-\",\"/\",\"*\"}:\\n                s.append(int(i))\\n            else:\\n                b,a=s.pop(),s.pop()\\n                if i==\"+\":s.append(a+b)\\n                elif i==\"-\":s.append(a-b)\\n                elif i==\"*\":s.append(a*b)\\n                else: s.append(trunc(a/b))\\n        return s[0]\\n        \\n```\n```\\nimport java.util.Stack;\\n\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        int a,b;\\n        Stack<Integer> S =new Stack<Integer>();\\n        for(String s:tokens)\\n        {\\n           if(s.equals(\"+\"))\\n\\t\\t\\t\\tS.add(S.pop()+S.pop());\\n\\t\\t  else if(s.equals(\"/\")) {\\n\\t\\t\\t\\tb = S.pop();\\n\\t\\t\\t\\ta = S.pop();\\n\\t\\t\\t\\tS.add(a / b);\\n\\t\\t\\t}\\n\\t\\t\\telse if(s.equals(\"*\")) {\\n\\t\\t\\t\\tS.add(S.pop() * S.pop());\\n\\t\\t\\t}\\n\\t\\t\\telse if(s.equals(\"-\")) {\\n\\t\\t\\t\\tb = S.pop();\\n\\t\\t\\t\\ta = S.pop();\\n\\t\\t\\t\\tS.add(a - b);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tS.add(Integer.parseInt(s));\\n\\t\\t\\t}\\n\\t\\t}\\t\\n\\t\\treturn S.pop(); \\n        }\\n    }\\n```\n```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;\\n        for(auto& i:tokens)\\n            if (i==\"+\"||i==\"-\"||i==\"*\"||i==\"/\")\\n            {\\n                long int e1=s.top();s.pop();\\n                long int e2=s.top();s.pop();\\n                   if(i==\"+\")   e1=e2+e1;\\n                    if(i==\"-\")  e1=e2-e1;\\n                    if(i==\"*\")  e1=e2*e1;\\n                    if(i==\"/\")  e1=e2/e1;\\n                s.push(e1);\\n            }\\n            else s.push(stoi(i));         \\n        return s.top();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2376999,
                "title": "c-solution-stacks-with-without-functions-easy",
                "content": "Without function\\n```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        int n=tokens.size();\\n        stack<int> st;\\n        for(auto a:tokens){\\n            if(a!=\"+\" && a!=\"-\" && a!=\"*\" && a!=\"/\") st.push(stoi(a));\\n            else{\\n                int top1=st.top();\\n                st.pop();\\n                int top2=st.top();\\n                st.pop();\\n                if(a==\"+\") st.push(top1+top2);\\n                else if(a==\"-\") st.push(top2-top1);\\n                else if(a==\"*\") st.push(top2*top1);\\n                else st.push(top2/top1);\\n            }\\n        }\\n        return st.top();\\n    }\\n};\\n```\\nWith function(this was faster)\\n```    \\nclass Solution {\\npublic:\\n\\tbool isOp(string c){\\n        return (c==\"+\" || c==\"-\" || c==\"*\" || c==\"/\");\\n    }\\n\\t\\n    stack<int> st;\\n    int solve(int a, int b, string s){\\n        if(s==\"+\")  return a+b;\\n        else if(s==\"-\") return a-b;\\n        else if(s==\"*\") return a*b;\\n        else    return a/b;\\n    }\\n    \\n    int evalRPN(vector<string>& tokens) {\\n        for(auto s: tokens){\\n            if(isOp(s)){\\n                int b = (st.top());   st.pop();\\n                int a = (st.top());    st.pop();\\n                st.push(solve(a,b,s));\\n            }\\n            else    st.push(stoi(s));\\n        }\\n        return st.top();\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        int n=tokens.size();\\n        stack<int> st;\\n        for(auto a:tokens){\\n            if(a!=\"+\" && a!=\"-\" && a!=\"*\" && a!=\"/\") st.push(stoi(a));\\n            else{\\n                int top1=st.top();\\n                st.pop();\\n                int top2=st.top();\\n                st.pop();\\n                if(a==\"+\") st.push(top1+top2);\\n                else if(a==\"-\") st.push(top2-top1);\\n                else if(a==\"*\") st.push(top2*top1);\\n                else st.push(top2/top1);\\n            }\\n        }\\n        return st.top();\\n    }\\n};\\n```\n```    \\nclass Solution {\\npublic:\\n\\tbool isOp(string c){\\n        return (c==\"+\" || c==\"-\" || c==\"*\" || c==\"/\");\\n    }\\n\\t\\n    stack<int> st;\\n    int solve(int a, int b, string s){\\n        if(s==\"+\")  return a+b;\\n        else if(s==\"-\") return a-b;\\n        else if(s==\"*\") return a*b;\\n        else    return a/b;\\n    }\\n    \\n    int evalRPN(vector<string>& tokens) {\\n        for(auto s: tokens){\\n            if(isOp(s)){\\n                int b = (st.top());   st.pop();\\n                int a = (st.top());    st.pop();\\n                st.push(solve(a,b,s));\\n            }\\n            else    st.push(stoi(s));\\n        }\\n        return st.top();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2154107,
                "title": "kotlin-linkedlist-one-pass-o-n-solution",
                "content": "# The intuition\\nLet\\'s look on this poblem on the next example:\\n```\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n```\\nWe can see that we should evaluate only when we have two numbers and an operator in a row, such as:\\n```\\n\"9\",\"3\",\"+\"\\n```\\nAfter the evaluation, we should replace these strings with the result. So the original array:\\n```\\n[\"10\",\"6\",       \"9\",\"3\",\"+\"       ,\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n```\\nshould become:\\n```\\n[\"10\",\"6\",       \"12\",       \"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n```\\nAnd so on. \\nHow to implement such behavior?\\nUsing stack!\\n\\n**Let\\'s look on the stack realisation.**\\nWe should add all the numbers into the stack until we find any operator.\\n```\\n#Pointer:\\n  |\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n#Stack \\n[]\\n```\\n**Check if a string at current index is a number and add it to the list if so.**\\nAdding to the stack and moving next:\\n```\\n#Pointer:\\n       |\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n#Stack \\n[10]\\n```\\nAdding to the stack and moving next:\\n```\\n#Pointer:\\n           |\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n#Stack \\n[10, 6]\\n```\\nAdding to the stack and moving next:\\n```\\n#Pointer:\\n               |\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n#Stack \\n[10, 6, 9]\\n```\\nAdding to the stack and moving next:\\n```\\n#Pointer:\\n                   |\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n#Stack \\n[10, 6, 9, 3]\\n```\\n**Finally we found the operator.**  \\nWe can poll **THE LAST** two numbers from the stack and apply this operator to them. In our case it\\'s \\n```\\n9 + 3 = 12\\n```\\n**And add it to the stack:**\\n```\\n#Pointer:\\n                   |\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n#Stack \\n[10, 6, 12]\\n```\\nMoving next with the same algorithm:\\n```\\n#Pointer:\\n                        |\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n#Stack \\n[10, 6, 12]\\n```\\n-11 it\\'s a number, so we will add it to the stack.\\n```\\n#Pointer:\\n                             |\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n#Stack \\n[10, 6, 12, -11]\\n```\\nWe **found the operator again**, so we should apply it to the last two numbers from the stack. \\n```\\n12 * (-11) = -132\\n```\\nAnd the stack becomes:\\n```\\n[10, 6, -132]\\n```\\nAnd so on, until we will reach the end of the array. \\nIf the input is correct, in the end, we will have only one number in the stack, and this will be the answer.\\n# The solution\\n```\\nclass Solution {\\n    fun evalRPN(tokens: Array<String>): Int {\\n        var numbers = LinkedList<Int>()\\n        for (i in 0 until tokens.size) {\\n            if (isOperator(tokens[i])) {\\n                val num2 = numbers.pollLast()\\n                val num1 = numbers.pollLast()\\n                numbers.add(eval(num1, num2, tokens[i]))\\n            } else {\\n                val number = Integer.parseInt(tokens[i])\\n                numbers.add(number)\\n            }\\n        }\\n        return numbers[0]\\n    }\\n    \\n    inline fun isOperator(s: String): Boolean {\\n        return s == \"*\" || s == \"/\" \\n                || s == \"-\" || s == \"+\"\\n    }\\n    \\n    inline fun eval(num1: Int, num2: Int, operator: String): Int {\\n        when (operator) {\\n           \"+\" -> return num1 + num2\\n           \"-\" -> return num1 - num2\\n           \"*\" -> return num1 * num2\\n           \"/\" -> return num1 / num2\\n            else -> return 0\\n        } \\n    }\\n}\\n```",
                "solutionTags": [
                    "Linked List",
                    "Stack"
                ],
                "code": "```\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n```\n```\\n\"9\",\"3\",\"+\"\\n```\n```\\n[\"10\",\"6\",       \"9\",\"3\",\"+\"       ,\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n```\n```\\n[\"10\",\"6\",       \"12\",       \"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n```\n```\\n#Pointer:\\n  |\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n#Stack \\n[]\\n```\n```\\n#Pointer:\\n       |\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n#Stack \\n[10]\\n```\n```\\n#Pointer:\\n           |\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n#Stack \\n[10, 6]\\n```\n```\\n#Pointer:\\n               |\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n#Stack \\n[10, 6, 9]\\n```\n```\\n#Pointer:\\n                   |\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n#Stack \\n[10, 6, 9, 3]\\n```\n```\\n9 + 3 = 12\\n```\n```\\n#Pointer:\\n                   |\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n#Stack \\n[10, 6, 12]\\n```\n```\\n#Pointer:\\n                        |\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n#Stack \\n[10, 6, 12]\\n```\n```\\n#Pointer:\\n                             |\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n#Stack \\n[10, 6, 12, -11]\\n```\n```\\n12 * (-11) = -132\\n```\n```\\n[10, 6, -132]\\n```\n```\\nclass Solution {\\n    fun evalRPN(tokens: Array<String>): Int {\\n        var numbers = LinkedList<Int>()\\n        for (i in 0 until tokens.size) {\\n            if (isOperator(tokens[i])) {\\n                val num2 = numbers.pollLast()\\n                val num1 = numbers.pollLast()\\n                numbers.add(eval(num1, num2, tokens[i]))\\n            } else {\\n                val number = Integer.parseInt(tokens[i])\\n                numbers.add(number)\\n            }\\n        }\\n        return numbers[0]\\n    }\\n    \\n    inline fun isOperator(s: String): Boolean {\\n        return s == \"*\" || s == \"/\" \\n                || s == \"-\" || s == \"+\"\\n    }\\n    \\n    inline fun eval(num1: Int, num2: Int, operator: String): Int {\\n        when (operator) {\\n           \"+\" -> return num1 + num2\\n           \"-\" -> return num1 - num2\\n           \"*\" -> return num1 * num2\\n           \"/\" -> return num1 / num2\\n            else -> return 0\\n        } \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1301320,
                "title": "python-easy-solution-stack",
                "content": "```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        \\n        \\n        stack =[]\\n        \\n        \\n        for i in tokens:\\n            if  i not in \\'+-/*\\':\\n                stack.append(i)\\n            else:\\n                a=int(stack.pop())\\n                b=int(stack.pop())\\n                if i==\\'+\\':    \\n                    stack.append(a+b)\\n                elif i==\\'*\\':\\n                    stack.append(a*b)\\n                elif i==\\'-\\':\\n                    stack.append(b-a)\\n                else:\\n                    stack.append(b/a)\\n        \\n        return int(stack[-1])\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Stack"
                ],
                "code": "```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        \\n        \\n        stack =[]\\n        \\n        \\n        for i in tokens:\\n            if  i not in \\'+-/*\\':\\n                stack.append(i)\\n            else:\\n                a=int(stack.pop())\\n                b=int(stack.pop())\\n                if i==\\'+\\':    \\n                    stack.append(a+b)\\n                elif i==\\'*\\':\\n                    stack.append(a*b)\\n                elif i==\\'-\\':\\n                    stack.append(b-a)\\n                else:\\n                    stack.append(b/a)\\n        \\n        return int(stack[-1])\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1231456,
                "title": "c-solution",
                "content": "**Complexity**\\n- Time: O(n)\\n- Space: O(n)\\n\\n**Implementation**\\n```\\npublic class Solution {\\n    public int EvalRPN(string[] tokens) {\\n        \\n        if(tokens == null || tokens.Length == 0)\\n            throw new ArgumentException(\"Invalid Input.\");\\n        \\n        Stack<int> stack = new Stack<int>();\\n        foreach(var c in tokens)\\n        {\\n            int num = 0;\\n            if(int.TryParse(c, out num))\\n                stack.Push(num);\\n            else\\n            {\\n                int operand2 = stack.Pop();\\n                int operand1 = stack.Pop();\\n                \\n                if(c == \"+\")\\n                    stack.Push(operand1 + operand2);\\n                else if(c == \"-\")\\n                    stack.Push(operand1 - operand2);\\n                else if(c == \"*\")\\n                    stack.Push(operand1 * operand2);\\n                else if(c == \"/\")\\n                    stack.Push(operand1 / operand2);\\n            }\\n        }\\n        \\n        return stack.Peek();\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic class Solution {\\n    public int EvalRPN(string[] tokens) {\\n        \\n        if(tokens == null || tokens.Length == 0)\\n            throw new ArgumentException(\"Invalid Input.\");\\n        \\n        Stack<int> stack = new Stack<int>();\\n        foreach(var c in tokens)\\n        {\\n            int num = 0;\\n            if(int.TryParse(c, out num))\\n                stack.Push(num);\\n            else\\n            {\\n                int operand2 = stack.Pop();\\n                int operand1 = stack.Pop();\\n                \\n                if(c == \"+\")\\n                    stack.Push(operand1 + operand2);\\n                else if(c == \"-\")\\n                    stack.Push(operand1 - operand2);\\n                else if(c == \"*\")\\n                    stack.Push(operand1 * operand2);\\n                else if(c == \"/\")\\n                    stack.Push(operand1 / operand2);\\n            }\\n        }\\n        \\n        return stack.Peek();\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 729484,
                "title": "ooad-solution-with-abstract-factory-design-pattern-c",
                "content": "This question seems to be Object Oriented Design question, Interviewer might ask follow-up question like how do you enhance it for more operands?\\n\\n```\\n//Abstract base class\\nclass Operation{\\n   public:\\n    virtual int doOperation(int num1, int num2) = 0;\\n};\\n\\n//Derived class to handle Add Operation\\nclass Add : public Operation{\\n     public:\\n    int doOperation(int num1, int num2){\\n        return num1 + num2;\\n    }\\n};\\n\\n//Derived class to handle Substract Operation\\nclass Substract: public Operation{\\n     public:\\n    int doOperation(int num1, int num2){\\n        return num1 - num2;\\n    }\\n};\\n\\n//Derived class to handle Multiply Operation\\nclass Multiply: public Operation{\\n     public:\\n    int doOperation(int num1, int num2){\\n        return num1 * num2;\\n    }\\n};\\n\\n//Derived class to handle Divide Operation\\nclass Divide: public Operation{\\n     public:\\n    int doOperation(int num1, int num2){\\n        return num1 / num2;\\n    } \\n};\\n\\n//Factory constrcuts and return the type of object interested by client\\nclass OperationFactory{\\n    public:\\n    Operation* getOperation(char ch){\\n        switch(ch)\\n        {\\n            case \\'+\\':\\n                return new Add();\\n            case \\'-\\':\\n                return new Substract(); \\n            case \\'*\\':\\n                 return new Multiply();\\n            case \\'/\\':\\n                  return new Divide();\\n        }\\n       return nullptr;\\n    }\\n};\\n\\nclass Solution {\\npublic:\\n    bool isOperand(char ch)\\n    {\\n        switch(ch)\\n        {\\n            case \\'+\\':\\n            case \\'-\\':\\n            case \\'*\\':\\n            case \\'/\\':\\n                return true;\\n        }\\n        return false;\\n    }\\n    \\n    int stringToNum(string str)\\n    {\\n        int num =0;\\n        int i = 0;\\n        int sign = 1;\\n        \\n        if(str[0] == \\'-\\')\\n        {\\n            sign = -sign;\\n            i++;\\n        }\\n\\n       while(i < str.length())\\n       {\\n           num = num * 10 + str[i]-\\'0\\';\\n           i++;\\n       }\\n        return sign * num;\\n    }\\n    \\n    int evalRPN(vector<string>& tokens) {\\n     \\n        stack<string> tokenStack;\\n        OperationFactory opf;\\n        for(auto& token : tokens)\\n        {\\n            if(token.length()==1 && isOperand(token[0]))\\n            {\\n                int num2 = stringToNum(tokenStack.top());\\n                tokenStack.pop();\\n                int num1 = stringToNum(tokenStack.top());\\n                tokenStack.pop();\\n                int res = opf.getOperation(token[0])->doOperation(num1, num2);\\n                tokenStack.push(to_string(res));                        \\n            }else{\\n                tokenStack.push(token);\\n            }\\n        }\\n        return stringToNum(tokenStack.top());\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\n//Abstract base class\\nclass Operation{\\n   public:\\n    virtual int doOperation(int num1, int num2) = 0;\\n};\\n\\n//Derived class to handle Add Operation\\nclass Add : public Operation{\\n     public:\\n    int doOperation(int num1, int num2){\\n        return num1 + num2;\\n    }\\n};\\n\\n//Derived class to handle Substract Operation\\nclass Substract: public Operation{\\n     public:\\n    int doOperation(int num1, int num2){\\n        return num1 - num2;\\n    }\\n};\\n\\n//Derived class to handle Multiply Operation\\nclass Multiply: public Operation{\\n     public:\\n    int doOperation(int num1, int num2){\\n        return num1 * num2;\\n    }\\n};\\n\\n//Derived class to handle Divide Operation\\nclass Divide: public Operation{\\n     public:\\n    int doOperation(int num1, int num2){\\n        return num1 / num2;\\n    } \\n};\\n\\n//Factory constrcuts and return the type of object interested by client\\nclass OperationFactory{\\n    public:\\n    Operation* getOperation(char ch){\\n        switch(ch)\\n        {\\n            case \\'+\\':\\n                return new Add();\\n            case \\'-\\':\\n                return new Substract(); \\n            case \\'*\\':\\n                 return new Multiply();\\n            case \\'/\\':\\n                  return new Divide();\\n        }\\n       return nullptr;\\n    }\\n};\\n\\nclass Solution {\\npublic:\\n    bool isOperand(char ch)\\n    {\\n        switch(ch)\\n        {\\n            case \\'+\\':\\n            case \\'-\\':\\n            case \\'*\\':\\n            case \\'/\\':\\n                return true;\\n        }\\n        return false;\\n    }\\n    \\n    int stringToNum(string str)\\n    {\\n        int num =0;\\n        int i = 0;\\n        int sign = 1;\\n        \\n        if(str[0] == \\'-\\')\\n        {\\n            sign = -sign;\\n            i++;\\n        }\\n\\n       while(i < str.length())\\n       {\\n           num = num * 10 + str[i]-\\'0\\';\\n           i++;\\n       }\\n        return sign * num;\\n    }\\n    \\n    int evalRPN(vector<string>& tokens) {\\n     \\n        stack<string> tokenStack;\\n        OperationFactory opf;\\n        for(auto& token : tokens)\\n        {\\n            if(token.length()==1 && isOperand(token[0]))\\n            {\\n                int num2 = stringToNum(tokenStack.top());\\n                tokenStack.pop();\\n                int num1 = stringToNum(tokenStack.top());\\n                tokenStack.pop();\\n                int res = opf.getOperation(token[0])->doOperation(num1, num2);\\n                tokenStack.push(to_string(res));                        \\n            }else{\\n                tokenStack.push(token);\\n            }\\n        }\\n        return stringToNum(tokenStack.top());\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 702204,
                "title": "ruby-solution-w-stack-faster-than-75-explanation-of-truncation-towards-0",
                "content": "```\\n# @param {String[]} tokens\\n# @return {Integer}\\nrequire \\'set\\'\\n\\ndef eval_rpn(tokens)\\n    if tokens.length == 1\\n        return tokens[0].to_i\\n    elsif tokens.length == 0\\n        return 0 \\n    end\\n    \\n    stack = []\\n    i = 0\\n    operators = Set.new([\"+\", \"-\", \"/\", \"*\"])\\n    while i < tokens.length\\n        if operators.include?(tokens[i])\\n            tmp2 = stack.pop.to_i\\n            tmp1 = stack.pop.to_i\\n            case tokens[i]\\n                when \"+\"\\n                    partial = tmp1 + tmp2\\n                when \"-\"\\n                    partial = tmp1 - tmp2\\n                when \"*\"\\n                    partial = tmp1 * tmp2\\n                when \"/\"\\n                # truncation towards 0 issue \\n                    if tmp1 < 0 && tmp2 > 0\\n                        partial = (tmp1.to_f / tmp2).ceil\\n                    elsif tmp1 > 0 && tmp2 < 0\\n                        partial = (tmp1.to_f / tmp2).ceil\\n                    else\\n                        partial = tmp1 / tmp2\\n                    end\\n            end\\n            stack << partial\\n        else\\n            stack << tokens[i]\\n        end\\n        i += 1\\n    end\\n    stack[-1]\\nend\\n```\\n\\nDiscussion of truncation towards 0:\\nUnlike C/C++/Java, for int division with a negative result, Ruby (and Python) round towards negative infinity. This behavior was surprising to me, as other languages round towards 0 (aka \"truncation towards 0\").\\n\\nSo the way I dealt with this was adding conditional logic s/t if only one of the operands was less than 0, I would cast the first operator to a float and then take the ceiling of the float division to truncate towards 0. Hope this helps others who were as confused as I was! Happy coding.",
                "solutionTags": [],
                "code": "```\\n# @param {String[]} tokens\\n# @return {Integer}\\nrequire \\'set\\'\\n\\ndef eval_rpn(tokens)\\n    if tokens.length == 1\\n        return tokens[0].to_i\\n    elsif tokens.length == 0\\n        return 0 \\n    end\\n    \\n    stack = []\\n    i = 0\\n    operators = Set.new([\"+\", \"-\", \"/\", \"*\"])\\n    while i < tokens.length\\n        if operators.include?(tokens[i])\\n            tmp2 = stack.pop.to_i\\n            tmp1 = stack.pop.to_i\\n            case tokens[i]\\n                when \"+\"\\n                    partial = tmp1 + tmp2\\n                when \"-\"\\n                    partial = tmp1 - tmp2\\n                when \"*\"\\n                    partial = tmp1 * tmp2\\n                when \"/\"\\n                # truncation towards 0 issue \\n                    if tmp1 < 0 && tmp2 > 0\\n                        partial = (tmp1.to_f / tmp2).ceil\\n                    elsif tmp1 > 0 && tmp2 < 0\\n                        partial = (tmp1.to_f / tmp2).ceil\\n                    else\\n                        partial = tmp1 / tmp2\\n                    end\\n            end\\n            stack << partial\\n        else\\n            stack << tokens[i]\\n        end\\n        i += 1\\n    end\\n    stack[-1]\\nend\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 482359,
                "title": "swift-stack-solution",
                "content": "```\\nclass Solution {\\n    func evalRPN(_ tokens: [String]) -> Int {\\n        var stack:[Int] = []\\n        for item in tokens{\\n            if let digit = Int(item){\\n                stack.append(digit)\\n            }else{\\n                let second = stack.popLast()!\\n                let first = stack.popLast()!\\n                var total = 0\\n                if item == \"/\" {\\n                    total = first/second\\n                }else if item == \"*\" {\\n                    total = second*first\\n                }else if item == \"+\" {\\n                    total = second+first\\n                }else if item == \"-\" {\\n                    total = first-second\\n                }\\n                stack.append(total)\\n            }\\n        }\\n        return stack.last!\\n    }\\n}\\n```",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\nclass Solution {\\n    func evalRPN(_ tokens: [String]) -> Int {\\n        var stack:[Int] = []\\n        for item in tokens{\\n            if let digit = Int(item){\\n                stack.append(digit)\\n            }else{\\n                let second = stack.popLast()!\\n                let first = stack.popLast()!\\n                var total = 0\\n                if item == \"/\" {\\n                    total = first/second\\n                }else if item == \"*\" {\\n                    total = second*first\\n                }else if item == \"+\" {\\n                    total = second+first\\n                }else if item == \"-\" {\\n                    total = first-second\\n                }\\n                stack.append(total)\\n            }\\n        }\\n        return stack.last!\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 451877,
                "title": "python-with-operator-map",
                "content": "```\\n    def evalRPN(self, tokens) -> int:\\n        opmap = {\\'+\\': operator.add, \\'-\\': operator.sub, \\'*\\': operator.mul, \\'/\\': operator.itruediv}\\n        stack = []\\n        for t in tokens:\\n            if t.isdigit() or t[1:].isdigit():\\n                stack.append(int(t))\\n            else:\\n                a, b = stack.pop(), stack.pop()\\n                # for case 1/-22, in python it returns -1, here use itruediv to get a float then apply int() to get 0\\n                stack.append(int(opmap[t](b, a)))\\n        return stack[0]\\n```",
                "solutionTags": [],
                "code": "```\\n    def evalRPN(self, tokens) -> int:\\n        opmap = {\\'+\\': operator.add, \\'-\\': operator.sub, \\'*\\': operator.mul, \\'/\\': operator.itruediv}\\n        stack = []\\n        for t in tokens:\\n            if t.isdigit() or t[1:].isdigit():\\n                stack.append(int(t))\\n            else:\\n                a, b = stack.pop(), stack.pop()\\n                # for case 1/-22, in python it returns -1, here use itruediv to get a float then apply int() to get 0\\n                stack.append(int(opmap[t](b, a)))\\n        return stack[0]\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 193135,
                "title": "javascript-96-short-stack-based-solution",
                "content": "```\\n/**\\n * @param {string[]} tokens\\n * @return {number}\\n */\\nvar evalRPN = function(tokens) {\\n    const stack = [];\\n    tokens.forEach((token) => {\\n        switch (token) {\\n            case \\'+\\':\\n                stack.push(stack.pop() + stack.pop());\\n                break;\\n            case \\'-\\':\\n                stack.push(-stack.pop() +stack.pop());\\n                break;\\n            case \\'*\\':\\n                stack.push(stack.pop() * stack.pop());\\n                break;\\n            case \\'/\\':\\n                stack.push(Math.trunc(1 / stack.pop() * stack.pop()));\\n                break;\\n            default:\\n                stack.push(Number(token));\\n                break;\\n        }\\n    });\\n    return stack[0] || 0;\\n};\\n```",
                "solutionTags": [],
                "code": "```\\n/**\\n * @param {string[]} tokens\\n * @return {number}\\n */\\nvar evalRPN = function(tokens) {\\n    const stack = [];\\n    tokens.forEach((token) => {\\n        switch (token) {\\n            case \\'+\\':\\n                stack.push(stack.pop() + stack.pop());\\n                break;\\n            case \\'-\\':\\n                stack.push(-stack.pop() +stack.pop());\\n                break;\\n            case \\'*\\':\\n                stack.push(stack.pop() * stack.pop());\\n                break;\\n            case \\'/\\':\\n                stack.push(Math.trunc(1 / stack.pop() * stack.pop()));\\n                break;\\n            default:\\n                stack.push(Number(token));\\n                break;\\n        }\\n    });\\n    return stack[0] || 0;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 137855,
                "title": "golang-ac",
                "content": "```\\nfunc evalRPN(tokens []string) int {\\n    var s []int\\n    for _, v := range tokens {\\n        n := len(s)\\n        switch v {\\n        case \"+\":\\n            s = append(s[:n-2], s[n-2] + s[n-1])\\n        case \"*\":\\n            s = append(s[:n-2], s[n-2] * s[n-1])\\n        case \"/\":\\n            s = append(s[:n-2], s[n-2] / s[n-1])\\n        case \"-\":\\n            s = append(s[:n-2], s[n-2] - s[n-1])\\n        default:\\n            val, _ := strconv.Atoi(v)\\n            s = append(s, val)\\n        }\\n    }\\n    return s[0]\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nfunc evalRPN(tokens []string) int {\\n    var s []int\\n    for _, v := range tokens {\\n        n := len(s)\\n        switch v {\\n        case \"+\":\\n            s = append(s[:n-2], s[n-2] + s[n-1])\\n        case \"*\":\\n            s = append(s[:n-2], s[n-2] * s[n-1])\\n        case \"/\":\\n            s = append(s[:n-2], s[n-2] / s[n-1])\\n        case \"-\":\\n            s = append(s[:n-2], s[n-2] - s[n-1])\\n        default:\\n            val, _ := strconv.Atoi(v)\\n            s = append(s, val)\\n        }\\n    }\\n    return s[0]\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 47423,
                "title": "java-clean-solution-with-stack-and-exception",
                "content": "\\n```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        int a, b;\\n        Stack<Integer> s = new Stack<>();\\n        for (String token : tokens) {\\n            try {\\n                s.add(Integer.parseInt(token));\\n            } catch (Throwable e) {\\n                a = s.pop();\\n                b = s.pop();\\n                switch (token) {\\n                    case \"+\": s.add(b + a); break;\\n                    case \"-\": s.add(b - a); break;\\n                    case \"*\": s.add(b * a); break;\\n                    case \"/\": s.add(b / a); break;\\n                }\\n            }\\n        }\\n        return s.pop();\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        int a, b;\\n        Stack<Integer> s = new Stack<>();\\n        for (String token : tokens) {\\n            try {\\n                s.add(Integer.parseInt(token));\\n            } catch (Throwable e) {\\n                a = s.pop();\\n                b = s.pop();\\n                switch (token) {\\n                    case \"+\": s.add(b + a); break;\\n                    case \"-\": s.add(b - a); break;\\n                    case \"*\": s.add(b * a); break;\\n                    case \"/\": s.add(b / a); break;\\n                }\\n            }\\n        }\\n        return s.pop();\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 47561,
                "title": "incorrect-answer-with-my-python-code-right-one-if-executed-on-my-computer",
                "content": "    class Solution:\\n        # @param tokens, a list of string\\n        # @return an integer\\n        def evalRPN(self, tokens):\\n            operators=['+','-','*','/']\\n            stack=[]\\n            for key in tokens:\\n                if key in operators:\\n                    try:\\n                        right = stack.pop()\\n                        left = stack.pop()\\n                    except IndexError:\\n                        return\\n                    else: # perform corresponding operation and push the result into the stack\\n                        if key == '+':\\n                            stack.append(left+right)\\n                        elif key == '-':\\n                            stack.append(left-right)\\n                        elif key == '*':\\n                            stack.append(left*right)\\n                        else:\\n                            stack.append(int(left/right))\\n                else:\\n                    try:\\n                        stack.append(int(key)) # push the number into the stack\\n                    except ValueError:\\n                        return \\n            res=stack.pop()\\n            if not stack: # if stack is not empty, the RPN is not valid\\n                return res\\n           \\n\\ntest result:\\n\\n    Input:\\t[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n    Output:\\t12\\n    Expected:\\t22\\n\\nHowever, when I run the code on my computer, the answer is 22. Really confused with that error. Any comments?",
                "solutionTags": [],
                "code": "    class Solution:\\n        # @param tokens, a list of string\\n        # @return an integer\\n        def evalRPN(self, tokens):\\n            operators=['+','-','*','/']\\n            stack=[]\\n            for key in tokens:\\n                if key in operators:\\n                    try:\\n                        right = stack.pop()\\n                        left = stack.pop()\\n                    except IndexError:\\n                        return\\n                    else: # perform corresponding operation and push the result into the stack\\n                        if key == '+':\\n                            stack.append(left+right)\\n                        elif key == '-':\\n                            stack.append(left-right)\\n                        elif key == '*':\\n                            stack.append(left*right)\\n                        else:\\n                            stack.append(int(left/right))\\n                else:\\n                    try:\\n                        stack.append(int(key)) # push the number into the stack\\n                    except ValueError:\\n                        return \\n            res=stack.pop()\\n            if not stack: # if stack is not empty, the RPN is not valid\\n                return res\\n           \\n\\ntest result:\\n\\n    Input:\\t[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n    Output:\\t12\\n    Expected:\\t22\\n\\nHowever, when I run the code on my computer, the answer is 22. Really confused with that error. Any comments?",
                "codeTag": "Java"
            },
            {
                "id": 3987535,
                "title": "c-7ms",
                "content": "# \\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: \\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<string> rpn;\\n        int result;\\n\\n            if(tokens.size()==1){\\n                return stoi(tokens[0]);\\n            }\\n\\n        for(int i=0;i<tokens.size();i++){\\n\\n\\n            if(tokens[i]==\"+\"){\\n                int k=stoi(rpn.top());\\n                rpn.pop();\\n                result = stoi(rpn.top()) + k;\\n                rpn.pop();\\n                rpn.push(to_string(result));\\n                \\n            }\\n            else if(tokens[i]==\"-\"){\\n                int k=stoi(rpn.top());\\n                rpn.pop();\\n                result = stoi(rpn.top()) - k;\\n                rpn.pop();\\n               rpn.push(to_string(result));\\n            }\\n            else if(tokens[i]==\"*\"){\\n                int k=stoi(rpn.top());\\n                rpn.pop();\\n                result = stoi(rpn.top()) * k;\\n                rpn.pop();\\n             rpn.push(to_string(result));\\n            }\\n            else if(tokens[i]==\"/\"){\\n                int k=stoi(rpn.top());\\n                rpn.pop();\\n                result = stoi(rpn.top()) / k;\\n                rpn.pop();\\n               rpn.push(to_string(result));\\n            }\\n            else{\\n                rpn.push(tokens[i]);\\n            }\\n        }\\n            return result;\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<string> rpn;\\n        int result;\\n\\n            if(tokens.size()==1){\\n                return stoi(tokens[0]);\\n            }\\n\\n        for(int i=0;i<tokens.size();i++){\\n\\n\\n            if(tokens[i]==\"+\"){\\n                int k=stoi(rpn.top());\\n                rpn.pop();\\n                result = stoi(rpn.top()) + k;\\n                rpn.pop();\\n                rpn.push(to_string(result));\\n                \\n            }\\n            else if(tokens[i]==\"-\"){\\n                int k=stoi(rpn.top());\\n                rpn.pop();\\n                result = stoi(rpn.top()) - k;\\n                rpn.pop();\\n               rpn.push(to_string(result));\\n            }\\n            else if(tokens[i]==\"*\"){\\n                int k=stoi(rpn.top());\\n                rpn.pop();\\n                result = stoi(rpn.top()) * k;\\n                rpn.pop();\\n             rpn.push(to_string(result));\\n            }\\n            else if(tokens[i]==\"/\"){\\n                int k=stoi(rpn.top());\\n                rpn.pop();\\n                result = stoi(rpn.top()) / k;\\n                rpn.pop();\\n               rpn.push(to_string(result));\\n            }\\n            else{\\n                rpn.push(tokens[i]);\\n            }\\n        }\\n            return result;\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3944350,
                "title": "easy-to-understand-beginner-friendly-stack-solution",
                "content": "\\n# Approach\\nThis code performs the evaluation of an expression in Reverse Polish Notation (RPN), also known as postfix notation.\\n\\n1. Initialize a Stack: \\'s\\' is used as a stack to hold operands during evaluation.\\n\\n2. Iteration through Tokens:\\n   - Iterate through each token (number or operator) in the \\'tokens\\' array.\\n   - If the token is an operator:\\n      - Pop the top two operands (\\'a\\' and \\'b\\') from the stack.\\n      - Perform the operation indicated by the operator:\\n         - If the operator is \"*\", multiply \\'a\\' and \\'b\\' and push the result back to the stack.\\n         - If the operator is \"+\", add \\'a\\' and \\'b\\' and push the result back to the stack.\\n         - If the operator is \"-\", subtract \\'a\\' from \\'b\\' and push the result back to the stack.\\n         - If the operator is \"/\", divide \\'b\\' by \\'a\\' and push the result back to the stack.\\n   - If the token is an operand (number):\\n      - Convert the token to an integer using stoi() and push it onto the stack.\\n\\n3. Final Result:\\n   - After iterating through all tokens, the top of the stack will contain the final result of the expression evaluation.\\n   - Return the top element of the stack as the answer.\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;  // Initialize a stack to hold numbers during evaluation\\n        \\n        for(int i = 0; i < tokens.size(); i++) {\\n            if(tokens[i] == \"*\" || tokens[i] == \"+\" || tokens[i] == \"-\" || tokens[i] == \"/\") {\\n                int a = s.top();  // Get the first operand from the top of the stack\\n                s.pop();  // Pop the operand from the stack\\n                int b = s.top();  // Get the second operand from the new top of the stack\\n                s.pop();  // Pop the second operand from the stack\\n                \\n                // Perform the operation based on the operator\\n                if(tokens[i] == \"*\") {\\n                    s.push(a * b);  // Push the result of multiplication onto the stack\\n                } else if(tokens[i] == \"+\") {\\n                    s.push(a + b);  // Push the result of addition onto the stack\\n                } else if(tokens[i] == \"-\") {\\n                    s.push(b - a);  // Push the result of subtraction onto the stack\\n                } else {\\n                    s.push(b / a);  // Push the result of division onto the stack\\n                }\\n            } else {\\n                s.push(stoi(tokens[i]));  // Push the number onto the stack\\n            }\\n        }\\n        \\n        return s.top();  // The final result after all calculations\\n    }\\n};\\n\\n\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;  // Initialize a stack to hold numbers during evaluation\\n        \\n        for(int i = 0; i < tokens.size(); i++) {\\n            if(tokens[i] == \"*\" || tokens[i] == \"+\" || tokens[i] == \"-\" || tokens[i] == \"/\") {\\n                int a = s.top();  // Get the first operand from the top of the stack\\n                s.pop();  // Pop the operand from the stack\\n                int b = s.top();  // Get the second operand from the new top of the stack\\n                s.pop();  // Pop the second operand from the stack\\n                \\n                // Perform the operation based on the operator\\n                if(tokens[i] == \"*\") {\\n                    s.push(a * b);  // Push the result of multiplication onto the stack\\n                } else if(tokens[i] == \"+\") {\\n                    s.push(a + b);  // Push the result of addition onto the stack\\n                } else if(tokens[i] == \"-\") {\\n                    s.push(b - a);  // Push the result of subtraction onto the stack\\n                } else {\\n                    s.push(b / a);  // Push the result of division onto the stack\\n                }\\n            } else {\\n                s.push(stoi(tokens[i]));  // Push the number onto the stack\\n            }\\n        }\\n        \\n        return s.top();  // The final result after all calculations\\n    }\\n};\\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3822030,
                "title": "c-eazzy-peazzy-solution-2-methods-beats-94-00-runtime-beats-80-52-memory",
                "content": "# using switch-case\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;\\n        for(int i = 0; i < tokens.size(); i++) {\\n            if(tokens[i] != \"+\" && tokens[i] != \"-\" && tokens[i] != \"*\" && tokens[i] != \"/\") {\\n                s.push(stoi(tokens[i]));\\n            }\\n            else {\\n                int a = s.top();\\n                s.pop();\\n                int b = s.top();\\n                s.pop();\\n                \\n                char op = tokens[i][0]; // imp\\n                switch(op) {\\n                    case \\'+\\':\\n                        s.push(b + a);\\n                        break;\\n\\n                    case \\'-\\':\\n                        s.push(b - a);\\n                        break;\\n\\n                    case \\'*\\':\\n                        s.push(b * a);\\n                        break;\\n\\n                    case \\'/\\':\\n                        s.push(b / a);\\n                        break;\\n                }\\n            }\\n        }\\n        return s.top();\\n    }\\n};\\n```\\n\\n\\n# using if-else\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n```\\nclass Solution {\\n    public:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;\\n        for(int i = 0; i < tokens.size(); i++) {\\n            if(tokens[i] != \"+\" && tokens[i] != \"-\" && tokens[i] != \"*\" && tokens[i] != \"/\") {\\n                s.push(stoi(tokens[i]));\\n            }\\n            else if(tokens[i] == \"+\") {\\n                int a = s.top();\\n                s.pop();\\n                int b = s.top();\\n                s.pop();\\n\\n                s.push(b + a);\\n            }\\n            else if(tokens[i] == \"-\") {\\n                int a = s.top();\\n                s.pop();\\n                int b = s.top();\\n                s.pop();\\n\\n                s.push(b - a);\\n            }\\n            else if(tokens[i] == \"*\") {\\n                int a = s.top();\\n                s.pop();\\n                int b = s.top();\\n                s.pop();\\n\\n                s.push(b * a);\\n            }\\n            else if(tokens[i] == \"/\") {\\n                int a = s.top();\\n                s.pop();\\n                int b = s.top();\\n                s.pop();\\n\\n                s.push(b / a);\\n            }\\n        }\\n        return s.top();\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\n    public:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;\\n        for(int i = 0; i < tokens.size(); i++) {\\n            if(tokens[i] != \"+\" && tokens[i] != \"-\" && tokens[i] != \"*\" && tokens[i] != \"/\") {\\n                s.push(stoi(tokens[i]));\\n            }\\n            else {\\n                int a = s.top();\\n                s.pop();\\n                int b = s.top();\\n                s.pop();\\n                \\n                char op = tokens[i][0]; // imp\\n                switch(op) {\\n                    case \\'+\\':\\n                        s.push(b + a);\\n                        break;\\n\\n                    case \\'-\\':\\n                        s.push(b - a);\\n                        break;\\n\\n                    case \\'*\\':\\n                        s.push(b * a);\\n                        break;\\n\\n                    case \\'/\\':\\n                        s.push(b / a);\\n                        break;\\n                }\\n            }\\n        }\\n        return s.top();\\n    }\\n};\\n```\n```\\nclass Solution {\\n    public:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;\\n        for(int i = 0; i < tokens.size(); i++) {\\n            if(tokens[i] != \"+\" && tokens[i] != \"-\" && tokens[i] != \"*\" && tokens[i] != \"/\") {\\n                s.push(stoi(tokens[i]));\\n            }\\n            else if(tokens[i] == \"+\") {\\n                int a = s.top();\\n                s.pop();\\n                int b = s.top();\\n                s.pop();\\n\\n                s.push(b + a);\\n            }\\n            else if(tokens[i] == \"-\") {\\n                int a = s.top();\\n                s.pop();\\n                int b = s.top();\\n                s.pop();\\n\\n                s.push(b - a);\\n            }\\n            else if(tokens[i] == \"*\") {\\n                int a = s.top();\\n                s.pop();\\n                int b = s.top();\\n                s.pop();\\n\\n                s.push(b * a);\\n            }\\n            else if(tokens[i] == \"/\") {\\n                int a = s.top();\\n                s.pop();\\n                int b = s.top();\\n                s.pop();\\n\\n                s.push(b / a);\\n            }\\n        }\\n        return s.top();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3485741,
                "title": "java-solution-for-evaluate-reverse-polish-notation-problem",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThe intuition behind the solution is to use a stack to keep track of the operands in the expression and to apply the operators to the top elements of the stack.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nThe solution uses a stack to store the operands and applies the operators to the top elements of the stack whenever an operator is encountered in the input array.\\n\\nThe solution iterates over the input array of tokens. If the token is an operand, it is pushed onto the stack. If it is an operator, the top two elements of the stack are popped and the operator is applied to them. The result is pushed back onto the stack.\\n\\nFinally, the solution pops the final result from the stack and returns it.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nThe time complexity of the above solution is O(n), where n is the length of the input array. This is because we are iterating over the input array only once, and each operation on the stack takes constant time.\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nThe space complexity of the above solution is O(n), where n is the length of the input array. This is because we are using a stack to store the operands and the size of the stack can grow up to the size of the input array.\\n\\n# Code\\n```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        int returnValue = 0;\\n        String operators = \"+-*/\";\\n\\n        Stack<String> stack = new Stack<String>();\\n\\n        for(String t : tokens)\\n        {\\n            if(!operators.contains(t))\\n            {\\n                stack.push(t);\\n            }\\n            else\\n            {\\n                int a = Integer.valueOf(stack.pop());\\n                int b = Integer.valueOf(stack.pop());\\n               // int index = operators.indexOf(t);\\n\\n                //switch(index)\\n                switch(t)\\n                {\\n                    //case 0:\\n                    case \"+\":\\n                        stack.push(String.valueOf(a + b));\\n                        break;\\n                    //case 1:\\n                    case \"-\":\\n                        stack.push(String.valueOf(b - a));\\n                        break;\\n                    //case 2:\\n                    case \"*\":\\n                        stack.push(String.valueOf(a * b));\\n                        break;\\n                    //case 3:\\n                    case \"/\":\\n                        stack.push(String.valueOf(b / a));\\n                        break;\\n\\n                }\\n            }\\n        }\\n        returnValue = Integer.valueOf(stack.pop());\\n        return returnValue;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        int returnValue = 0;\\n        String operators = \"+-*/\";\\n\\n        Stack<String> stack = new Stack<String>();\\n\\n        for(String t : tokens)\\n        {\\n            if(!operators.contains(t))\\n            {\\n                stack.push(t);\\n            }\\n            else\\n            {\\n                int a = Integer.valueOf(stack.pop());\\n                int b = Integer.valueOf(stack.pop());\\n               // int index = operators.indexOf(t);\\n\\n                //switch(index)\\n                switch(t)\\n                {\\n                    //case 0:\\n                    case \"+\":\\n                        stack.push(String.valueOf(a + b));\\n                        break;\\n                    //case 1:\\n                    case \"-\":\\n                        stack.push(String.valueOf(b - a));\\n                        break;\\n                    //case 2:\\n                    case \"*\":\\n                        stack.push(String.valueOf(a * b));\\n                        break;\\n                    //case 3:\\n                    case \"/\":\\n                        stack.push(String.valueOf(b / a));\\n                        break;\\n\\n                }\\n            }\\n        }\\n        returnValue = Integer.valueOf(stack.pop());\\n        return returnValue;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3405564,
                "title": "java-python-beat-91-65-cleanest-and-easy-understanding-solution-for-beginners",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\nStack \\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n``` Python []\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        stack = []\\n        for i in tokens:\\n            if i.isdigit() or (i.startswith(\\'-\\') and i[1:].isdigit()):\\n                stack.append(int(i))\\n            else:\\n                num1 = stack.pop()\\n                num2 = stack.pop()\\n                if i == \\'+\\' : stack.append(int(num1 + num2))\\n                if i == \\'-\\' : stack.append(int(num2 - num1))\\n                if i == \\'*\\' : stack.append(int(num1 * num2))\\n                if i == \\'/\\' : stack.append(int(num2 / num1))\\n        return stack[0]\\n```\\n```Java []\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> stack = new Stack<>();\\n        for (String token : tokens) {\\n            if (!\"+-*/\".contains(token)) {\\n                stack.push(Integer.valueOf(token));\\n            } else {\\n                int n1 = stack.pop();\\n                int n2 = stack.pop();\\n                switch (token) {\\n                    case \"+\":\\n                        stack.push(n1 + n2);\\n                        break;\\n                    case \"-\":\\n                        stack.push(n2 - n1);\\n                        break;\\n                    case \"*\":\\n                        stack.push(n1 * n2);\\n                        break;\\n                    case \"/\":\\n                        if (n1 == 0) {\\n                            throw new ArithmeticException(\"Division by zero\");\\n                        }\\n                        stack.push(n2 / n1);\\n                        break;\\n                }\\n            }\\n        }\\n        return stack.pop();\\n    }\\n}\\n\\n```",
                "solutionTags": [
                    "Java",
                    "Python3",
                    "Array",
                    "Math",
                    "Stack"
                ],
                "code": "``` Python []\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        stack = []\\n        for i in tokens:\\n            if i.isdigit() or (i.startswith(\\'-\\') and i[1:].isdigit()):\\n                stack.append(int(i))\\n            else:\\n                num1 = stack.pop()\\n                num2 = stack.pop()\\n                if i == \\'+\\' : stack.append(int(num1 + num2))\\n                if i == \\'-\\' : stack.append(int(num2 - num1))\\n                if i == \\'*\\' : stack.append(int(num1 * num2))\\n                if i == \\'/\\' : stack.append(int(num2 / num1))\\n        return stack[0]\\n```\n```Java []\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> stack = new Stack<>();\\n        for (String token : tokens) {\\n            if (!\"+-*/\".contains(token)) {\\n                stack.push(Integer.valueOf(token));\\n            } else {\\n                int n1 = stack.pop();\\n                int n2 = stack.pop();\\n                switch (token) {\\n                    case \"+\":\\n                        stack.push(n1 + n2);\\n                        break;\\n                    case \"-\":\\n                        stack.push(n2 - n1);\\n                        break;\\n                    case \"*\":\\n                        stack.push(n1 * n2);\\n                        break;\\n                    case \"/\":\\n                        if (n1 == 0) {\\n                            throw new ArithmeticException(\"Division by zero\");\\n                        }\\n                        stack.push(n2 / n1);\\n                        break;\\n                }\\n            }\\n        }\\n        return stack.pop();\\n    }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3227285,
                "title": "easy-python-solution-using-stacks",
                "content": "# Code\\n```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        s=\"+-*/\"\\n        stack=[]\\n        for i in tokens:\\n            if i in s:\\n                val=eval(stack[-2]+i+stack[-1])\\n                stack.pop()\\n                stack.pop()\\n                stack.append(str(int(val)))\\n            else:\\n                stack.append(i)\\n        return int(stack[0])\\n\\n```",
                "solutionTags": [
                    "Python3",
                    "Stack"
                ],
                "code": "```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        s=\"+-*/\"\\n        stack=[]\\n        for i in tokens:\\n            if i in s:\\n                val=eval(stack[-2]+i+stack[-1])\\n                stack.pop()\\n                stack.pop()\\n                stack.append(str(int(val)))\\n            else:\\n                stack.append(i)\\n        return int(stack[0])\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3085240,
                "title": "compact-python-solution-smallest",
                "content": "\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\nO(n)\\n\\n# Code\\n```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        p=[]\\n        for i in tokens:\\n            if i==\"+\" or i==\"-\" or i==\"*\" or i==\"/\" :\\n                a=p.pop()\\n                b=p.pop()\\n                p.append(int(eval(str(b)+i+str(a))))\\n            else:\\n                p.append(i)\\n        return int(p[0]); \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        p=[]\\n        for i in tokens:\\n            if i==\"+\" or i==\"-\" or i==\"*\" or i==\"/\" :\\n                a=p.pop()\\n                b=p.pop()\\n                p.append(int(eval(str(b)+i+str(a))))\\n            else:\\n                p.append(i)\\n        return int(p[0]); \\n```",
                "codeTag": "Java"
            },
            {
                "id": 2992273,
                "title": "using-stack-o-n-space-and-time-c",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> st;\\n\\n        for(string x:tokens)\\n        {\\n            if(isdigit(x[0]) || (x[0] == \\'-\\' && x.size() > 1) ) st.push(stoi(x));\\n\\n            else\\n            {\\n                int a=st.top();\\n                st.pop();\\n                int b=st.top();\\n                st.pop();\\n\\n                if(x==\"+\") st.push(b+a);\\n                else if(x==\"-\") st.push(b-a);\\n                else if(x==\"/\") st.push(b/a);\\n                else if(x==\"*\") st.push(b*a);\\n            }\\n        }\\n        return st.top();\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> st;\\n\\n        for(string x:tokens)\\n        {\\n            if(isdigit(x[0]) || (x[0] == \\'-\\' && x.size() > 1) ) st.push(stoi(x));\\n\\n            else\\n            {\\n                int a=st.top();\\n                st.pop();\\n                int b=st.top();\\n                st.pop();\\n\\n                if(x==\"+\") st.push(b+a);\\n                else if(x==\"-\") st.push(b-a);\\n                else if(x==\"/\") st.push(b/a);\\n                else if(x==\"*\") st.push(b*a);\\n            }\\n        }\\n        return st.top();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2922482,
                "title": "kotlin-stack",
                "content": "# Telegram\\nhttps://t.me/leetcode_daily_unstoppable/55\\n# Intuition\\nReverse polish notations made explicitly for calculation using stack. Just execute every operation immediately using last two numbers in the stack and push the result.\\n\\n# Approach\\n* be aware of the order of the operands\\n\\n# Complexity\\n- Time complexity:\\n$$O(N)$$\\n\\n- Space complexity:\\n$$O(N)$$\\n\\n# Code\\n```\\nclass Solution {\\n    fun evalRPN(tokens: Array<String>): Int = with(Stack<Int>()) {\\n        tokens.forEach {\\n            when(it) {\\n                \"+\" -> push(pop() + pop())\\n                \"-\" -> push(-pop() + pop())\\n                \"*\" -> push(pop() * pop())\\n                \"/\" -> with(pop()) { push(pop()/this) }\\n                else -> push(it.toInt())\\n            }\\n        }\\n        pop()\\n    }\\n}\\n```",
                "solutionTags": [
                    "Kotlin",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\n    fun evalRPN(tokens: Array<String>): Int = with(Stack<Int>()) {\\n        tokens.forEach {\\n            when(it) {\\n                \"+\" -> push(pop() + pop())\\n                \"-\" -> push(-pop() + pop())\\n                \"*\" -> push(pop() * pop())\\n                \"/\" -> with(pop()) { push(pop()/this) }\\n                else -> push(it.toInt())\\n            }\\n        }\\n        pop()\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2921954,
                "title": "java-most-possible-solution",
                "content": "\\n```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Deque<Integer> stk = new ArrayDeque<>();\\n        for (String t : tokens) {\\n            if (t.length() > 1 || Character.isDigit(t.charAt(0))) {\\n                stk.push(Integer.parseInt(t));\\n            } else {\\n                int y = stk.pop();\\n                int x = stk.pop();\\n                switch (t) {\\n                case \"+\":\\n                    stk.push(x + y);\\n                    break;\\n                case \"-\":\\n                    stk.push(x - y);\\n                    break;\\n                case \"*\":\\n                    stk.push(x * y);\\n                    break;\\n                default:\\n                    stk.push(x / y);\\n                    break;\\n                }\\n            }\\n        }\\n        return stk.pop();\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Deque<Integer> stk = new ArrayDeque<>();\\n        for (String t : tokens) {\\n            if (t.length() > 1 || Character.isDigit(t.charAt(0))) {\\n                stk.push(Integer.parseInt(t));\\n            } else {\\n                int y = stk.pop();\\n                int x = stk.pop();\\n                switch (t) {\\n                case \"+\":\\n                    stk.push(x + y);\\n                    break;\\n                case \"-\":\\n                    stk.push(x - y);\\n                    break;\\n                case \"*\":\\n                    stk.push(x * y);\\n                    break;\\n                default:\\n                    stk.push(x / y);\\n                    break;\\n                }\\n            }\\n        }\\n        return stk.pop();\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2921496,
                "title": "java-solution-using-stack",
                "content": "# Approach\\n<!-- Describe your first thoughts on how to solve this problem. -->In this question, we will use stack to solve the problem.\\nFirstly, we will check that the given string has integer or operator by using \\'parseInt\\' method in java. and if it is number then push it into stack and if it is operator then pop two elements from the stack and do the operation using switch case and again push this result into stack for further calculations.\\n\\n\\n# Complexity\\n- Time complexity:$$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:$$O(n)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int evalRPN(String[] t) {\\n        Stack<Integer> st = new Stack<>();\\n        int n = t.length,res=Integer.parseInt(t[0]);\\n        for(int i=0;i<n;i++){\\n            if(num(t[i]))\\n                st.push(Integer.parseInt(t[i]));\\n            else{\\n                char x = t[i].charAt(0);\\n                int a = st.pop();\\n                int b = st.pop();\\n                switch(x){\\n                    case \\'+\\': \\n                        res = b+a;\\n                        break;\\n                    case \\'-\\': \\n                        res = b-a;\\n                        break;\\n                    case \\'*\\':\\n                        res = b*a;\\n                        break;\\n                    case \\'/\\':\\n                        res = b/a;\\n                        break;\\n                }\\n                st.push(res);\\n            }\\n        }\\n        return res;\\n    }\\n    public boolean num(String s){\\n        try {\\n            int d = Integer.parseInt(s);\\n        } \\n        catch (NumberFormatException nfe) {\\n            return false;\\n        }\\n        return true;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Math",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\n    public int evalRPN(String[] t) {\\n        Stack<Integer> st = new Stack<>();\\n        int n = t.length,res=Integer.parseInt(t[0]);\\n        for(int i=0;i<n;i++){\\n            if(num(t[i]))\\n                st.push(Integer.parseInt(t[i]));\\n            else{\\n                char x = t[i].charAt(0);\\n                int a = st.pop();\\n                int b = st.pop();\\n                switch(x){\\n                    case \\'+\\': \\n                        res = b+a;\\n                        break;\\n                    case \\'-\\': \\n                        res = b-a;\\n                        break;\\n                    case \\'*\\':\\n                        res = b*a;\\n                        break;\\n                    case \\'/\\':\\n                        res = b/a;\\n                        break;\\n                }\\n                st.push(res);\\n            }\\n        }\\n        return res;\\n    }\\n    public boolean num(String s){\\n        try {\\n            int d = Integer.parseInt(s);\\n        } \\n        catch (NumberFormatException nfe) {\\n            return false;\\n        }\\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2921471,
                "title": "easy-approach-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nSolving postfix notation involves use of stack.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nFirstly,push all the values to the stack except the special characters(+,-,*,/)and when u encounters a special character then pop the top 2 elements and apply the process and push the result to stack.\\nFinally,return the top element.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;\\n        for(int i=0;i<tokens.size();i++){\\n            if(tokens[i]!=\"+\"  && tokens[i]!=\"-\"&& tokens[i]!=\"*\"&& tokens[i]!=\"/\"){\\n                s.push(stoi(tokens[i]));\\n            }\\n            else{\\n                long long a=s.top();\\n                s.pop();\\n                long long b=s.top();\\n                s.pop();\\n                if(tokens[i]==\"+\")\\n                s.push(b+a);\\n                else if(tokens[i]==\"-\")\\n                s.push(b-a);\\n                else if(tokens[i]==\"*\")\\n                s.push(b*a);\\n                else \\n                s.push(b/a);\\n            }\\n        }\\n        return s.top();\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;\\n        for(int i=0;i<tokens.size();i++){\\n            if(tokens[i]!=\"+\"  && tokens[i]!=\"-\"&& tokens[i]!=\"*\"&& tokens[i]!=\"/\"){\\n                s.push(stoi(tokens[i]));\\n            }\\n            else{\\n                long long a=s.top();\\n                s.pop();\\n                long long b=s.top();\\n                s.pop();\\n                if(tokens[i]==\"+\")\\n                s.push(b+a);\\n                else if(tokens[i]==\"-\")\\n                s.push(b-a);\\n                else if(tokens[i]==\"*\")\\n                s.push(b*a);\\n                else \\n                s.push(b/a);\\n            }\\n        }\\n        return s.top();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2921412,
                "title": "simple-solution-using-try-except-and-stack",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nAs we all know for this problem we are going to use a stack . While the elements in the list are not operators we append the operands into the stack . When we encounter an operator we pop two operands from the stack add compute the necessary result and pust it on to the stack.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nWe are gonna use a stack and follow the approach discussed in the intution . \\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nTime complexity is $$O(n)$$ as we are traversing the list of n strings.\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nSpace complexity is $$O(n)$$ as we have used a stack.\\n\\n# Code\\n```\\nfrom math import ceil,floor\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        stack = []\\n        for i in tokens:\\n            try:\\n                stack.append(int(i))\\n            except:    \\n                if len(stack) >=2:\\n                    a = stack.pop()\\n                    b = stack.pop()\\n                    if i==\"*\":\\n                        stack.append(b*a)\\n                    elif i==\"-\":\\n                        stack.append(b-a)\\n                    elif i==\"+\":\\n                        stack.append(b+a)\\n                    elif i==\"/\":\\n                        stack.append(int(b/a))\\n        return stack.pop()\\n```",
                "solutionTags": [
                    "Python3",
                    "Stack"
                ],
                "code": "```\\nfrom math import ceil,floor\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        stack = []\\n        for i in tokens:\\n            try:\\n                stack.append(int(i))\\n            except:    \\n                if len(stack) >=2:\\n                    a = stack.pop()\\n                    b = stack.pop()\\n                    if i==\"*\":\\n                        stack.append(b*a)\\n                    elif i==\"-\":\\n                        stack.append(b-a)\\n                    elif i==\"+\":\\n                        stack.append(b+a)\\n                    elif i==\"/\":\\n                        stack.append(int(b/a))\\n        return stack.pop()\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2921363,
                "title": "python-solution-using-stack-easy-to-understand",
                "content": "# Code\\n```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        stack = []\\n        operators = [\\'+\\', \\'-\\', \\'*\\', \\'/\\']\\n        for i in tokens:\\n            if i in operators:\\n                second, first = stack.pop(),  stack.pop()\\n\\n                if i == \\'+\\':\\n                    temp = first+second\\n                elif i == \\'-\\':\\n                    temp = first - second\\n                elif i == \\'*\\':\\n                    temp = first * second\\n                else:\\n                    temp = int(first/second)\\n                \\n                stack.append(temp)\\n\\n            else:\\n                stack.append(int(i))\\n        return stack[0]\\n                \\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Stack"
                ],
                "code": "```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        stack = []\\n        operators = [\\'+\\', \\'-\\', \\'*\\', \\'/\\']\\n        for i in tokens:\\n            if i in operators:\\n                second, first = stack.pop(),  stack.pop()\\n\\n                if i == \\'+\\':\\n                    temp = first+second\\n                elif i == \\'-\\':\\n                    temp = first - second\\n                elif i == \\'*\\':\\n                    temp = first * second\\n                else:\\n                    temp = int(first/second)\\n                \\n                stack.append(temp)\\n\\n            else:\\n                stack.append(int(i))\\n        return stack[0]\\n                \\n```",
                "codeTag": "Java"
            },
            {
                "id": 2920988,
                "title": "basic-easy-logic-java-stack-solution-88-63-faster",
                "content": "## **Approach:\\n***1] Create a string of all the operators. Create a stack list.\\n2] Check the each single item from the given String[] tokens for whether it is an operator or not.\\n3] If it is not an operator, simply push it in the stack. and go for the next item.\\n4} If it is an operator, pop out the first two elements of the stack.\\n5] Check the type of operator, and return the respective expression. [ like op1  op2, etc*]*****\\n\\n***CODE:***\\n\\n```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> stack=new Stack();\\n        String oprtr=\"+-*/\";\\n        for(String s:tokens)\\n        {\\n            if(oprtr.contains(s)&&!stack.isEmpty()){\\n              int op1=stack.pop();\\n              int op2=stack.pop();\\n              int ans=help(op2,s,op1);\\n              stack.push(ans);\\n            }else{\\n                stack.push(Integer.parseInt(s));\\n            }\\n        }\\n        return stack.pop();\\n\\n    }\\n    public int help(int op2,String s,int op1)\\n    {\\n        if(s.equals(\"+\"))return op2+op1;\\n        else if(s.equals(\"-\"))return op2-op1;\\n        else if(s.equals(\"/\"))return op2/op1;\\n        return op2*op1;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> stack=new Stack();\\n        String oprtr=\"+-*/\";\\n        for(String s:tokens)\\n        {\\n            if(oprtr.contains(s)&&!stack.isEmpty()){\\n              int op1=stack.pop();\\n              int op2=stack.pop();\\n              int ans=help(op2,s,op1);\\n              stack.push(ans);\\n            }else{\\n                stack.push(Integer.parseInt(s));\\n            }\\n        }\\n        return stack.pop();\\n\\n    }\\n    public int help(int op2,String s,int op1)\\n    {\\n        if(s.equals(\"+\"))return op2+op1;\\n        else if(s.equals(\"-\"))return op2-op1;\\n        else if(s.equals(\"/\"))return op2/op1;\\n        return op2*op1;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2920478,
                "title": "c-stack-easy-to-understand-easy-to-code-array",
                "content": "# Please upvote if you like this solution \\n![image.png](https://assets.leetcode.com/users/images/ec3d240c-6283-4b3f-aa98-10e8a65dd123_1671259399.014272.png){:style=\\'height:230px\\'}\\n\\n# Intuition\\nwhen one operator comes at that time we have to take two elements from the top of the stack and then we have to perform the given operation and then we have to push element back to the stack \\n\\n# Approach\\nFor this the most optimized approach is stack \\n\\n# Complexity\\n- Time complexity:\\nO(N) --> N is the size of the array\\n\\n- Space complexity:\\nO(N) ---> stack size\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string> &tokens)\\n    {\\n        stack<long long> st;\\n        for (auto letter : tokens)\\n        {\\n            if (letter == \"+\" || letter == \"-\" || letter == \"*\" || letter == \"/\")\\n            {\\n                long long num1 = st.top();\\n                st.pop();\\n    \\n                long long num2 = st.top();\\n                st.pop();\\n    \\n                char charac = letter[0];\\n                switch (charac)\\n                {\\n                case \\'+\\':\\n                    st.push(num2 + num1);\\n                    break;\\n    \\n                case \\'-\\':\\n                    st.push(num2 - num1);\\n                    break;\\n    \\n                case \\'*\\':\\n                    st.push(num2 * num1);\\n                    break;\\n                case \\'/\\':\\n                    st.push(num2 / num1);\\n                    break;\\n    \\n                default:\\n                    break;\\n                }\\n            }\\n            else\\n            {\\n                long long num = stoi(letter);\\n                st.push(num);\\n            }\\n        }\\n        return st.top();\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Array",
                    "Stack",
                    "Brainteaser",
                    "Monotonic Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string> &tokens)\\n    {\\n        stack<long long> st;\\n        for (auto letter : tokens)\\n        {\\n            if (letter == \"+\" || letter == \"-\" || letter == \"*\" || letter == \"/\")\\n            {\\n                long long num1 = st.top();\\n                st.pop();\\n    \\n                long long num2 = st.top();\\n                st.pop();\\n    \\n                char charac = letter[0];\\n                switch (charac)\\n                {\\n                case \\'+\\':\\n                    st.push(num2 + num1);\\n                    break;\\n    \\n                case \\'-\\':\\n                    st.push(num2 - num1);\\n                    break;\\n    \\n                case \\'*\\':\\n                    st.push(num2 * num1);\\n                    break;\\n                case \\'/\\':\\n                    st.push(num2 / num1);\\n                    break;\\n    \\n                default:\\n                    break;\\n                }\\n            }\\n            else\\n            {\\n                long long num = stoi(letter);\\n                st.push(num);\\n            }\\n        }\\n        return st.top();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2919790,
                "title": "javascript-operator-functions-while-loop-math-floor",
                "content": "If you create an object with the operations, you can check if the current index $$i$$ is an \\'operation\\' character (\\'+\\', \\'-\\', \\'*\\', \\'/\\'). \\n\\nIf it is, perform the operation on the two previous indices, splice two indices out of the array, and revert $$i$$ back two spaces to account for the removed characters. \\n\\nDon\\'t forget to use Math.floor() -> other languages will round down automatically, but we need to explicitly round to pass all cases. \\n \\n# Code\\n```\\n/**\\n * @param {string[]} tokens\\n * @return {number}\\n */\\nvar evalRPN = function(tokens) {\\n\\n    const operations = {\\n        \\'+\\': function(a, b) { return parseInt(a) + parseInt(b) },\\n        \\'-\\': function(a, b) { return parseInt(a) - parseInt(b) },\\n        \\'*\\': function(a, b) { return parseInt(a) * parseInt(b) }, \\n        \\'/\\': function(a, b) { return parseInt(a) / parseInt(b) }\\n    }\\n\\n    let i = 0\\n    while (tokens.length > 1) {\\n        if (tokens[i] in operations) {\\n            const operation = operations[tokens[i]]\\n            tokens[i] = operation(tokens[i - 2], tokens[i - 1])\\n            tokens.splice(i - 2, 2)\\n            i -= 2\\n        }\\n        i++\\n    }\\n\\n    return Math.floor(tokens[0])\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {string[]} tokens\\n * @return {number}\\n */\\nvar evalRPN = function(tokens) {\\n\\n    const operations = {\\n        \\'+\\': function(a, b) { return parseInt(a) + parseInt(b) },\\n        \\'-\\': function(a, b) { return parseInt(a) - parseInt(b) },\\n        \\'*\\': function(a, b) { return parseInt(a) * parseInt(b) }, \\n        \\'/\\': function(a, b) { return parseInt(a) / parseInt(b) }\\n    }\\n\\n    let i = 0\\n    while (tokens.length > 1) {\\n        if (tokens[i] in operations) {\\n            const operation = operations[tokens[i]]\\n            tokens[i] = operation(tokens[i - 2], tokens[i - 1])\\n            tokens.splice(i - 2, 2)\\n            i -= 2\\n        }\\n        i++\\n    }\\n\\n    return Math.floor(tokens[0])\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2919691,
                "title": "very-simple-and-easy-stack-solution",
                "content": "IF YOU LIKE MY EXPLANATION THEN PLEASE DO NOT FORGET TO UPVOTE :)\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\niterate the whole tokens array,and check for each element\\nnow if the element is not \"+\" or \"-\" or \"/\" or \"*\" \\nthen it means the element is a digit so we push the element by converting it into an integer in the stack\\nnow whenever we encounter any \"+\" or \"-\" or \"/\" or \"*\" operation\\nthen we pop the top 2 elements from the stack and perform the operation the the 2 elements\\nafter preforming operation storing the result of the operation in the top of the stack and keep iterating the tokens array\\nat the en the element at the top of the array is the required answer\\n\\nNOTE: we used long long to avoid overflow\\n\\nexample:\\n4,13,5,/,+\\nstack: empty\\n\\nSTEP I\\n\\nwe encounter 4 so we push it in the stack\\nstack: {4}\\n\\nSTEP II\\n\\nwe encounter 13 so we push it in the stack\\nstack: {4,13}\\n\\nSTEP III\\n\\nwe encounter 5 so we push it in the stack\\nstack: {4,13,5}\\n\\nSTEP IV\\n\\nwe encounter / so we pop top 2 elements from the stack i.e. 13,5\\nstack: {4}\\nans =round to lowest integer(13/5)=2\\nand then push 2 in the stack\\nstack: {4,2}\\n\\nSTEP V\\n\\nwe encounter + so we pop top 2 elements from the stack i.e. 4,2\\nstack: empty\\nans =round to lowest integer(4+2)=6\\nand then push 6 in the stack\\nstack: {6}\\n\\nSTEP VI\\n\\nnow the top of the stack is our answer :)\\n\\n\\n# Complexity\\n- Time complexity:O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\nIF YOU LIKE MY EXPLANATION THEN PLEASE DO NOT FORGET TO UPVOTE :)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long>st;\\n        for(auto t:tokens){\\n            if(t!=\"+\" and t!=\"-\" and t!=\"*\" and t!=\"/\"){\\n                st.push(stoi(t));\\n            }else{\\n                long long a=st.top();\\n                st.pop();\\n                long long b=st.top();\\n                st.pop();\\n                long long c;\\n                if(t==\"+\"){\\n                    c=a+b;\\n                }else\\n                if(t==\"-\"){\\n                    c=b-a;\\n                }else\\n                if(t==\"*\"){\\n                    c=a*b;\\n                }else\\n                if(t==\"/\"){\\n                    c=b/a;\\n                }\\n                st.push(c);\\n            }\\n        }\\n        return (int)st.top();\\n    }\\n};\\n```",
                "solutionTags": [
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long>st;\\n        for(auto t:tokens){\\n            if(t!=\"+\" and t!=\"-\" and t!=\"*\" and t!=\"/\"){\\n                st.push(stoi(t));\\n            }else{\\n                long long a=st.top();\\n                st.pop();\\n                long long b=st.top();\\n                st.pop();\\n                long long c;\\n                if(t==\"+\"){\\n                    c=a+b;\\n                }else\\n                if(t==\"-\"){\\n                    c=b-a;\\n                }else\\n                if(t==\"*\"){\\n                    c=a*b;\\n                }else\\n                if(t==\"/\"){\\n                    c=b/a;\\n                }\\n                st.push(c);\\n            }\\n        }\\n        return (int)st.top();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2901857,
                "title": "beats-99-codedominar-solution",
                "content": "\\n# Code\\n```\\nclass Solution:\\n    def evalRPN(self, li: List[str]) -> int:\\n        stack=[]\\n        for ele in li:\\n            if ele in \\'+-*/\\':\\n                a,b=stack.pop(),stack.pop()\\n            if ele == \\'+\\':                \\n                stack.append(b+a)\\n            elif ele == \\'-\\':                \\n                stack.append(b-a)\\n            elif ele == \\'*\\':                \\n                stack.append(b * a)\\n            elif ele == \\'/\\':                \\n                stack.append(int(b/a))\\n            else:\\n                stack.append(int(ele))\\n        return stack[0]  \\n    \\n \\n    \\n\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def evalRPN(self, li: List[str]) -> int:\\n        stack=[]\\n        for ele in li:\\n            if ele in \\'+-*/\\':\\n                a,b=stack.pop(),stack.pop()\\n            if ele == \\'+\\':                \\n                stack.append(b+a)\\n            elif ele == \\'-\\':                \\n                stack.append(b-a)\\n            elif ele == \\'*\\':                \\n                stack.append(b * a)\\n            elif ele == \\'/\\':                \\n                stack.append(int(b/a))\\n            else:\\n                stack.append(int(ele))\\n        return stack[0]  \\n    \\n \\n    \\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2832626,
                "title": "easiest-to-follow-friendly-and-fast",
                "content": "\\n\\n# Approach\\nstack\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\nO(n)\\n\\n# Code\\n```\\nvar evalRPN = function (t) {\\n  const stack = [];\\n  for (let i = 0; i < t.length; i++) {\\n// if element in tocken array is number, push to stack and go to next elment.\\n    if (!isNaN(t[i])) {\\n      stack.push(parseInt(t[i]));\\n      continue;\\n    }\\n// if the element is +-*/, we take out 2 elements from stack, then do the operation, finally push the single number back to stack\\n    let first = stack.pop();\\n    let second = stack.pop();\\n    switch (t[i]) {\\n      case \"+\":\\n        stack.push(first + second);\\n        break;\\n      case \"-\":\\n        stack.push(second - first);\\n        break;\\n      case \"*\":\\n        stack.push(first * second);\\n        break;\\n      case \"/\":\\n        stack.push(parseInt(second / first));\\n        break;\\n    }\\n  }\\n// the only number left in stack is the answer what we should return\\n  return stack[0];\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar evalRPN = function (t) {\\n  const stack = [];\\n  for (let i = 0; i < t.length; i++) {\\n// if element in tocken array is number, push to stack and go to next elment.\\n    if (!isNaN(t[i])) {\\n      stack.push(parseInt(t[i]));\\n      continue;\\n    }\\n// if the element is +-*/, we take out 2 elements from stack, then do the operation, finally push the single number back to stack\\n    let first = stack.pop();\\n    let second = stack.pop();\\n    switch (t[i]) {\\n      case \"+\":\\n        stack.push(first + second);\\n        break;\\n      case \"-\":\\n        stack.push(second - first);\\n        break;\\n      case \"*\":\\n        stack.push(first * second);\\n        break;\\n      case \"/\":\\n        stack.push(parseInt(second / first));\\n        break;\\n    }\\n  }\\n// the only number left in stack is the answer what we should return\\n  return stack[0];\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2621432,
                "title": "java-stack",
                "content": "```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer>st=new Stack<>();\\n        for(int i=0;i<tokens.length;i++){\\n            if(tokens[i].equals(\"+\")){\\n                int num1=st.pop();\\n                int num2=st.pop();\\n                st.push(num2+num1);\\n                \\n            }\\n             else if(tokens[i].equals(\"-\")){\\n                int num1=st.pop();\\n                int num2=st.pop();\\n                st.push(num2-num1);\\n                \\n            }\\n             else if(tokens[i].equals(\"*\")){\\n                int num1=st.pop();\\n                int num2=st.pop();\\n                st.push(num2*num1);\\n                \\n            }\\n             else if(tokens[i].equals(\"/\")){\\n                int num1=st.pop();\\n                int num2=st.pop();\\n                st.push(num2/num1);\\n                \\n            }\\n            else{\\n               st.push(Integer.valueOf(tokens[i]));\\n            }\\n        }\\n        return st.peek();\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer>st=new Stack<>();\\n        for(int i=0;i<tokens.length;i++){\\n            if(tokens[i].equals(\"+\")){\\n                int num1=st.pop();\\n                int num2=st.pop();\\n                st.push(num2+num1);\\n                \\n            }\\n             else if(tokens[i].equals(\"-\")){\\n                int num1=st.pop();\\n                int num2=st.pop();\\n                st.push(num2-num1);\\n                \\n            }\\n             else if(tokens[i].equals(\"*\")){\\n                int num1=st.pop();\\n                int num2=st.pop();\\n                st.push(num2*num1);\\n                \\n            }\\n             else if(tokens[i].equals(\"/\")){\\n                int num1=st.pop();\\n                int num2=st.pop();\\n                st.push(num2/num1);\\n                \\n            }\\n            else{\\n               st.push(Integer.valueOf(tokens[i]));\\n            }\\n        }\\n        return st.peek();\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2581292,
                "title": "clean-c-code",
                "content": "```\\nclass Solution {\\nprivate:\\n    long long doOperation(long long lhs, long long rhs, char operation)\\n    {\\n        switch(operation)\\n        {\\n            case \\'+\\' :\\n                return lhs+rhs;\\n            case \\'-\\' :\\n                return lhs-rhs;\\n            case \\'*\\' :\\n                return lhs*rhs;\\n            case \\'/\\' :\\n                return lhs/rhs;\\n            default:\\n                return 0;\\n        }\\n    }\\n    bool isNumber(string s)\\n    {\\n        try\\n        {\\n           int n = stoi(s); \\n           return true;\\n        }\\n        catch(exception e) \\n        {    \\n            return false;\\n        }\\n    }\\npublic:\\n    int evalRPN(vector<string>& tokens) \\n    {\\n        stack<string> s;\\n        for(auto i: tokens)\\n        {\\n            string cur = i;\\n            if(isNumber(cur))\\n            {\\n                s.push(cur);\\n            }\\n            else\\n            {\\n                char operation = cur[0];\\n                long long rhs = stoll(s.top()); s.pop();\\n                long long lhs= stoll(s.top()); s.pop();\\n                int result = doOperation(lhs,rhs,operation);\\n                s.push(to_string(result));\\n            }\\n        }\\n        return stoi(s.top());\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\nprivate:\\n    long long doOperation(long long lhs, long long rhs, char operation)\\n    {\\n        switch(operation)\\n        {\\n            case \\'+\\' :\\n                return lhs+rhs;\\n            case \\'-\\' :\\n                return lhs-rhs;\\n            case \\'*\\' :\\n                return lhs*rhs;\\n            case \\'/\\' :\\n                return lhs/rhs;\\n            default:\\n                return 0;\\n        }\\n    }\\n    bool isNumber(string s)\\n    {\\n        try\\n        {\\n           int n = stoi(s); \\n           return true;\\n        }\\n        catch(exception e) \\n        {    \\n            return false;\\n        }\\n    }\\npublic:\\n    int evalRPN(vector<string>& tokens) \\n    {\\n        stack<string> s;\\n        for(auto i: tokens)\\n        {\\n            string cur = i;\\n            if(isNumber(cur))\\n            {\\n                s.push(cur);\\n            }\\n            else\\n            {\\n                char operation = cur[0];\\n                long long rhs = stoll(s.top()); s.pop();\\n                long long lhs= stoll(s.top()); s.pop();\\n                int result = doOperation(lhs,rhs,operation);\\n                s.push(to_string(result));\\n            }\\n        }\\n        return stoi(s.top());\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2500462,
                "title": "go-clean-solution-with-stack",
                "content": "```\\nfunc evalRPN(tokens []string) int {\\n\\tvar stack []string\\n\\n\\tfor _, token := range tokens {\\n\\t\\tif isOperator(token) {\\n\\t\\t\\tsecondOperand := stack[len(stack)-1]\\n\\t\\t\\tfirstOperand := stack[len(stack)-2]\\n\\n\\t\\t\\tstack = stack[:len(stack)-2]\\n\\n\\t\\t\\tcurrentVal := calculate(firstOperand, secondOperand, token)\\n\\n\\t\\t\\tstack = append(stack, strconv.Itoa(currentVal))\\n\\t\\t} else {\\n\\t\\t\\tstack = append(stack, token)\\n\\t\\t}\\n\\t}\\n\\n\\tres, _ := strconv.Atoi(stack[0])\\n\\n\\treturn res\\n}\\n\\nfunc calculate(firstOperandStr, secondOperandStr string, operator string) int {\\n\\tfirstOperand, _ := strconv.Atoi(firstOperandStr)\\n\\tsecondOperand, _ := strconv.Atoi(secondOperandStr)\\n\\n\\tswitch operator {\\n\\tcase \"+\":\\n\\t\\treturn firstOperand + secondOperand\\n\\tcase \"-\":\\n\\t\\treturn firstOperand - secondOperand\\n\\tcase \"*\":\\n\\t\\treturn firstOperand * secondOperand\\n\\tdefault:\\n\\t\\treturn firstOperand / secondOperand\\n\\t}\\n}\\n\\nfunc isOperator(s string) bool {\\n\\tswitch s {\\n\\tcase \"+\":\\n\\t\\treturn true\\n\\tcase \"-\":\\n\\t\\treturn true\\n\\tcase \"*\":\\n\\t\\treturn true\\n\\tcase \"/\":\\n\\t\\treturn true\\n\\tdefault:\\n\\t\\treturn false\\n\\t}\\n}\\n```",
                "solutionTags": [
                    "Go",
                    "Stack"
                ],
                "code": "```\\nfunc evalRPN(tokens []string) int {\\n\\tvar stack []string\\n\\n\\tfor _, token := range tokens {\\n\\t\\tif isOperator(token) {\\n\\t\\t\\tsecondOperand := stack[len(stack)-1]\\n\\t\\t\\tfirstOperand := stack[len(stack)-2]\\n\\n\\t\\t\\tstack = stack[:len(stack)-2]\\n\\n\\t\\t\\tcurrentVal := calculate(firstOperand, secondOperand, token)\\n\\n\\t\\t\\tstack = append(stack, strconv.Itoa(currentVal))\\n\\t\\t} else {\\n\\t\\t\\tstack = append(stack, token)\\n\\t\\t}\\n\\t}\\n\\n\\tres, _ := strconv.Atoi(stack[0])\\n\\n\\treturn res\\n}\\n\\nfunc calculate(firstOperandStr, secondOperandStr string, operator string) int {\\n\\tfirstOperand, _ := strconv.Atoi(firstOperandStr)\\n\\tsecondOperand, _ := strconv.Atoi(secondOperandStr)\\n\\n\\tswitch operator {\\n\\tcase \"+\":\\n\\t\\treturn firstOperand + secondOperand\\n\\tcase \"-\":\\n\\t\\treturn firstOperand - secondOperand\\n\\tcase \"*\":\\n\\t\\treturn firstOperand * secondOperand\\n\\tdefault:\\n\\t\\treturn firstOperand / secondOperand\\n\\t}\\n}\\n\\nfunc isOperator(s string) bool {\\n\\tswitch s {\\n\\tcase \"+\":\\n\\t\\treturn true\\n\\tcase \"-\":\\n\\t\\treturn true\\n\\tcase \"*\":\\n\\t\\treturn true\\n\\tcase \"/\":\\n\\t\\treturn true\\n\\tdefault:\\n\\t\\treturn false\\n\\t}\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2289510,
                "title": "c-stack-solution",
                "content": "Edit : There is change in testcases and now negative numbers till -200 are also included. Previously I made the stack of type int, which I changed to long long now.\\n\\n```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& token) {\\n        stack<long long> st;\\n        for(int i = 0;i<token.size();i++){\\n            if(token[i]==\"+\" || token[i]==\"-\" || token[i]==\"*\" || token[i]==\"/\"){\\n                long long a = st.top();\\n                st.pop();\\n                long long b = st.top();\\n                st.pop();\\n                if(token[i]==\"+\"){\\n                    st.push(b+a);\\n                }\\n                else if(token[i]==\"-\"){\\n                    st.push(b-a);\\n                }\\n                else if(token[i]==\"*\"){\\n                    st.push(b*a);\\n                }\\n                else{\\n                    st.push(b/a);\\n                }\\n            }\\n            else{\\n                st.push(stoi(token[i]));\\n            }\\n        }\\n        return st.top();\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& token) {\\n        stack<long long> st;\\n        for(int i = 0;i<token.size();i++){\\n            if(token[i]==\"+\" || token[i]==\"-\" || token[i]==\"*\" || token[i]==\"/\"){\\n                long long a = st.top();\\n                st.pop();\\n                long long b = st.top();\\n                st.pop();\\n                if(token[i]==\"+\"){\\n                    st.push(b+a);\\n                }\\n                else if(token[i]==\"-\"){\\n                    st.push(b-a);\\n                }\\n                else if(token[i]==\"*\"){\\n                    st.push(b*a);\\n                }\\n                else{\\n                    st.push(b/a);\\n                }\\n            }\\n            else{\\n                st.push(stoi(token[i]));\\n            }\\n        }\\n        return st.top();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2194597,
                "title": "java-easy-solution-using-stack",
                "content": "\\t\\tclass Solution {\\n\\t\\t\\tpublic int evalRPN(String[] tokens) {\\n\\t\\t\\t\\tStack<Integer> st = new Stack<>();\\n\\t\\t\\t\\tfor(String s : tokens){\\n\\t\\t\\t\\t\\tif(s.equals(\"/\")){\\n\\t\\t\\t\\t\\t\\tint b = st.pop();\\n\\t\\t\\t\\t\\t\\tint a = st.pop();\\n\\t\\t\\t\\t\\t\\tst.push(a/b);\\n\\t\\t\\t\\t\\t}else if( s.equals(\"+\")){\\n\\t\\t\\t\\t\\t\\tint b = st.pop();\\n\\t\\t\\t\\t\\t\\tint a = st.pop();\\n\\t\\t\\t\\t\\t\\tst.push(a+b);\\n\\t\\t\\t\\t\\t}else if(s.equals(\"-\")){\\n\\t\\t\\t\\t\\t\\tint b = st.pop();\\n\\t\\t\\t\\t\\t\\tint a = st.pop();\\n\\t\\t\\t\\t\\t\\tst.push(a-b);\\n\\n\\t\\t\\t\\t\\t}else if(s.equals(\"*\")){\\n\\t\\t\\t\\t\\t\\tint b = st.pop();\\n\\t\\t\\t\\t\\t\\tint a = st.pop();\\n\\t\\t\\t\\t\\t\\tst.push(a*b);\\n\\n\\t\\t\\t\\t\\t}else {\\n\\t\\t\\t\\t\\t\\tst.push(Integer.parseInt(s));\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn st.peek();\\n\\n\\t\\t\\t}\\n\\t\\t}",
                "solutionTags": [
                    "Java",
                    "Stack"
                ],
                "code": "class Solution {\\n\\t\\t\\tpublic int evalRPN(String[] tokens) {\\n\\t\\t\\t\\tStack<Integer> st = new Stack<>();\\n\\t\\t\\t\\tfor(String s : tokens){\\n\\t\\t\\t\\t\\tif(s.equals(\"/\")){\\n\\t\\t\\t\\t\\t\\tint b = st.pop();\\n\\t\\t\\t\\t\\t\\tint a = st.pop();\\n\\t\\t\\t\\t\\t\\tst.push(a/b);\\n\\t\\t\\t\\t\\t}",
                "codeTag": "Java"
            },
            {
                "id": 1985653,
                "title": "c-recursive-solution-o-n-time-o-n-space",
                "content": "The `tokens` vector represents the post-order traversal of a binary tree where each sub-tree represents a sub-expression of the overall expression. Every node that has an operator value (*, /, +, -) must have left and right children. Every node that has a numeric value must be a leaf.\\n\\nThe last element of `tokens` is the root of the tree and the previous element in `tokens` is the root of the right subtree. Therefore we can start at the end of `tokens` and evaluate each subtree recursively. The base case is when the current element is a number and not an operator (*, /, +, -). The variable `currIdx` is used to keep track of where we are in the tree so we can know where a given left sub-tree starts.\\n\\n**Time complexity: O(n)** because we are traversing every node of the tree (every element of `tokens`)\\n**Space complexity: O(n)** because each recursive call adds memory on the stack. In the worst case, the tree is one-sided and has a depth of n.\\n\\nThis problem can also be solved iteratively by iterating from the start of `tokens` and using a stack. That approach will have the same time and space complextiy.\\n\\n\\n```\\nclass Solution {\\npublic:\\n    \\n    // helper function that returns true if input is a valid operator, false otherwise\\n    bool isoperator(const string& s) {\\n        if (s.compare(\"*\") == 0) return true;\\n        if (s.compare(\"/\") == 0) return true;\\n        if (s.compare(\"+\") == 0) return true;\\n        if (s.compare(\"-\") == 0) return true;\\n        return false;\\n    }\\n    \\n    // recursive helper evalRPN\\n    int evalRPN(vector<string>& tokens, int& currIdx) {\\n        // base case: if current value is a number it\\'s a leaf node, return value and increment expression length\\n        string currVal = tokens[currIdx--];\\n        if (!isoperator(currVal)) return stoi(currVal);\\n        \\n        // evaluate right subtree\\n        int right = evalRPN(tokens, currIdx);\\n        \\n        // evaluate left subtree\\n        int left = evalRPN(tokens, currIdx);\\n        \\n        // return left (operator) right\\n        if (currVal == \"*\") return left * right;\\n        if (currVal == \"/\") return left / right;\\n        if (currVal == \"+\") return left + right;\\n        if (currVal == \"-\") return left - right;\\n        \\n        return 0;   // invalid operator\\n    }\\n    \\n    int evalRPN(vector<string>& tokens) {\\n        if (tokens.empty()) return 0;\\n        \\n        // start at end of tokens (root of expression)\\n        int currIdx = tokens.size() - 1;\\n        return evalRPN(tokens, currIdx);\\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Recursion"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    \\n    // helper function that returns true if input is a valid operator, false otherwise\\n    bool isoperator(const string& s) {\\n        if (s.compare(\"*\") == 0) return true;\\n        if (s.compare(\"/\") == 0) return true;\\n        if (s.compare(\"+\") == 0) return true;\\n        if (s.compare(\"-\") == 0) return true;\\n        return false;\\n    }\\n    \\n    // recursive helper evalRPN\\n    int evalRPN(vector<string>& tokens, int& currIdx) {\\n        // base case: if current value is a number it\\'s a leaf node, return value and increment expression length\\n        string currVal = tokens[currIdx--];\\n        if (!isoperator(currVal)) return stoi(currVal);\\n        \\n        // evaluate right subtree\\n        int right = evalRPN(tokens, currIdx);\\n        \\n        // evaluate left subtree\\n        int left = evalRPN(tokens, currIdx);\\n        \\n        // return left (operator) right\\n        if (currVal == \"*\") return left * right;\\n        if (currVal == \"/\") return left / right;\\n        if (currVal == \"+\") return left + right;\\n        if (currVal == \"-\") return left - right;\\n        \\n        return 0;   // invalid operator\\n    }\\n    \\n    int evalRPN(vector<string>& tokens) {\\n        if (tokens.empty()) return 0;\\n        \\n        // start at end of tokens (root of expression)\\n        int currIdx = tokens.size() - 1;\\n        return evalRPN(tokens, currIdx);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1862937,
                "title": "java-clean-code",
                "content": "Solution using stack. \\ncase with division is equivalent to \\n```\\nint divisor = stack.pop();\\nstack.push(stack.pop / divisor);\\n```\\n\\n```\\npublic int evalRPN(String[] tokens) {\\n        Stack<Integer> stack = new Stack<>();\\n\\n        for (String token : tokens) {\\n            switch (token) {\\n                case \"+\" -> stack.push(stack.pop() + stack.pop());\\n                case \"-\" -> stack.push(-(stack.pop() - stack.pop()));\\n                case \"*\" -> stack.push(stack.pop() * stack.pop());\\n                case \"/\" -> stack.push((int) ((1.00 / stack.pop()) * stack.pop()));\\n                default ->  stack.push(Integer.parseInt(token));\\n            }\\n        }\\n        return stack.pop();\\n    }\\n\\n\\t\\n\\t",
                "solutionTags": [
                    "Java",
                    "Stack"
                ],
                "code": "```\\nint divisor = stack.pop();\\nstack.push(stack.pop / divisor);\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1839382,
                "title": "python-solution-through-stack",
                "content": "```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        stack = []\\n        for i in tokens:\\n            if i in [\\'+\\',\\'-\\',\\'*\\',\\'/\\']: \\n                a = stack.pop()\\n                b = stack.pop()\\n                stack.append(str(int(eval(b+i+a)))) # int() is used to truncate\\n            else:\\n                stack.append(i) # storing in string form for evaluation through eval()\\n        return stack.pop()\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        stack = []\\n        for i in tokens:\\n            if i in [\\'+\\',\\'-\\',\\'*\\',\\'/\\']: \\n                a = stack.pop()\\n                b = stack.pop()\\n                stack.append(str(int(eval(b+i+a)))) # int() is used to truncate\\n            else:\\n                stack.append(i) # storing in string form for evaluation through eval()\\n        return stack.pop()\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1575633,
                "title": "c-easy-approach-using-stack-data-structure",
                "content": "stack<int> st;\\n        \\n        for(auto z: tokens){\\n            if(z!=\"+\" && z!=\"-\" && z!=\"/\" && z!=\"*\"){\\n                int k=stoi(z);\\n                st.push(k);\\n            }\\n            else{\\n                int second=st.top();\\n                st.pop();\\n                int first=st.top();\\n                st.pop();\\n                if(z==\"+\"){\\n                    st.push(first+second);\\n                }\\n                else if(z==\"-\"){\\n                    st.push(first-second);\\n                }\\n                else if(z==\"/\"){\\n                    st.push(first/second);\\n                }\\n                else{\\n                    st.push(first*second);\\n                }\\n            }\\n        }\\n        return st.top();",
                "solutionTags": [],
                "code": "stack<int> st;\\n        \\n        for(auto z: tokens){\\n            if(z!=\"+\" && z!=\"-\" && z!=\"/\" && z!=\"*\"){\\n                int k=stoi(z);\\n                st.push(k);\\n            }\\n            else{\\n                int second=st.top();\\n                st.pop();\\n                int first=st.top();\\n                st.pop();\\n                if(z==\"+\"){\\n                    st.push(first+second);\\n                }\\n                else if(z==\"-\"){\\n                    st.push(first-second);\\n                }\\n                else if(z==\"/\"){\\n                    st.push(first/second);\\n                }\\n                else{\\n                    st.push(first*second);\\n                }\\n            }\\n        }\\n        return st.top();",
                "codeTag": "Unknown"
            },
            {
                "id": 1365998,
                "title": "java-stack-2ms-beats-99-64-t-c-o-n-s-c-o-n",
                "content": "\\n    public int evalRPN(String[] tokens) {\\n        \\n        int top = -1;\\n        int[] operands = new int[tokens.length];\\n        for(String token : tokens){\\n            if(token.equals(\"+\")){\\n                int op1 = operands[top--], op2 = operands[top--];\\n                operands[++top] = op2 + op1;\\n            }else if(token.equals(\"-\")){\\n                int op1 = operands[top--], op2 = operands[top--];\\n                operands[++top] = op2 - op1;\\n            }else if(token.equals(\"*\")){\\n                int op1 = operands[top--], op2 = operands[top--];\\n                operands[++top] = op2 * op1;\\n            }else if(token.equals(\"/\")){\\n                int op1 = operands[top--], op2 = operands[top--];\\n                operands[++top] = op2 / op1;\\n            }else\\n                operands[++top] = Integer.parseInt(token);\\n        }\\n        return operands[top];\\n    }",
                "solutionTags": [],
                "code": "\\n    public int evalRPN(String[] tokens) {\\n        \\n        int top = -1;\\n        int[] operands = new int[tokens.length];\\n        for(String token : tokens){\\n            if(token.equals(\"+\")){\\n                int op1 = operands[top--], op2 = operands[top--];\\n                operands[++top] = op2 + op1;\\n            }else if(token.equals(\"-\")){\\n                int op1 = operands[top--], op2 = operands[top--];\\n                operands[++top] = op2 - op1;\\n            }else if(token.equals(\"*\")){\\n                int op1 = operands[top--], op2 = operands[top--];\\n                operands[++top] = op2 * op1;\\n            }else if(token.equals(\"/\")){\\n                int op1 = operands[top--], op2 = operands[top--];\\n                operands[++top] = op2 / op1;\\n            }else\\n                operands[++top] = Integer.parseInt(token);\\n        }\\n        return operands[top];\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 1230423,
                "title": "accepted-code-stack-implementation-beat-99-time-and-space-simple-solution",
                "content": "here i am using stack ds, to implement this ..my apprach is self explanatory, please comment if you have any questions ill try to respond as soon as i can\\n\\nclass Solution {\\n\\n    private boolean isSign(String c) {\\n        if(c.equals(\"+\") || c.equals(\"-\") || c.equals(\"/\") ||c.equals(\"*\")) \\n            return true;\\n        return false;\\n    }\\n    public int evalRPN(String[] tokens) {\\n          Stack<String> st = new Stack<>();\\n          for(String s : tokens) {\\n               if(isSign(s)){\\n                   String sign = s;\\n                   int y = Integer.parseInt(st.pop());\\n                   int x = Integer.parseInt(st.pop());\\n                   int res = 0;\\n                   switch(sign){\\n                       case \"+\": \\n                           res = x+y;\\n                           break;\\n                       case \"-\":\\n                           res = x - y;\\n                           break;\\n                       case \"*\":\\n                           res = x * y;\\n                           break;\\n                       case \"/\":\\n                           res = x/y;\\n                   }\\n                   \\n                 st.push(String.valueOf(res));  \\n               } else{\\n                   st.push(s);\\n               } \\n          }\\n        \\n        return Integer.parseInt(st.pop());\\n    }\\n}",
                "solutionTags": [],
                "code": "class Solution {\\n\\n    private boolean isSign(String c) {\\n        if(c.equals(\"+\") || c.equals(\"-\") || c.equals(\"/\") ||c.equals(\"*\")) \\n            return true;\\n        return false;\\n    }",
                "codeTag": "Java"
            },
            {
                "id": 1230266,
                "title": "python-3-today-s-one-liner",
                "content": "# A few lines\\n```python\\nOPS = {\\n  \\'+\\': add,\\n  \\'-\\': sub,\\n  \\'*\\': mul,\\n  \\'/\\': truediv,\\n}\\nclass Solution:\\n  def evalRPN(self, A: List[str]) -> int:\\n    stack = []\\n    for x in A:\\n      stack.append(int(OPS[x](*(stack.pop(), stack.pop())[::-1]) if x in OPS else x))\\n    return stack[0]\\n```\\n\\n# One line\\n```python\\nclass Solution:\\n  def evalRPN(self, A: List[str]) -> int:\\n    return reduce(lambda s,x: s.append(int({\\'+\\':add,\\'-\\':sub,\\'*\\':mul,\\'/\\':truediv}[x](*(s.pop(), s.pop())[::-1]) if x in \\'+-*/\\' else x)) or s, A, [])[0]\\n```\\n\\n# True one-liner\\n```python\\nclass Solution: evalRPN = lambda _,A: reduce(lambda s,x: s.append(int({\\'+\\':add,\\'-\\':sub,\\'*\\':mul,\\'/\\':truediv}[x](*(s.pop(), s.pop())[::-1]) if x in \\'+-*/\\' else x)) or s, A, [])[0]\\n```\\n\\n# Not efficient, but shorter using eval\\n```python\\nclass Solution:\\n  def evalRPN(self, A: List[str]) -> int:\\n    return reduce(lambda s,x: s.append(int(eval(\\'{2}{1}{0}\\'.format(s.pop(), x, s.pop()))) if x in \\'+-*/\\' else x) or s, A, [])[0]\\n```\\n\\n# True one-liner of that\\n```python\\nclass Solution: evalRPN = lambda _,A: reduce(lambda s,x: s.append(int(eval(\\'{2}{1}{0}\\'.format(s.pop(), x, s.pop()))) if x in \\'+-*/\\' else x) or s, A, [])[0]\\n```",
                "solutionTags": [],
                "code": "```python\\nOPS = {\\n  \\'+\\': add,\\n  \\'-\\': sub,\\n  \\'*\\': mul,\\n  \\'/\\': truediv,\\n}\\nclass Solution:\\n  def evalRPN(self, A: List[str]) -> int:\\n    stack = []\\n    for x in A:\\n      stack.append(int(OPS[x](*(stack.pop(), stack.pop())[::-1]) if x in OPS else x))\\n    return stack[0]\\n```\n```python\\nclass Solution:\\n  def evalRPN(self, A: List[str]) -> int:\\n    return reduce(lambda s,x: s.append(int({\\'+\\':add,\\'-\\':sub,\\'*\\':mul,\\'/\\':truediv}[x](*(s.pop(), s.pop())[::-1]) if x in \\'+-*/\\' else x)) or s, A, [])[0]\\n```\n```python\\nclass Solution: evalRPN = lambda _,A: reduce(lambda s,x: s.append(int({\\'+\\':add,\\'-\\':sub,\\'*\\':mul,\\'/\\':truediv}[x](*(s.pop(), s.pop())[::-1]) if x in \\'+-*/\\' else x)) or s, A, [])[0]\\n```\n```python\\nclass Solution:\\n  def evalRPN(self, A: List[str]) -> int:\\n    return reduce(lambda s,x: s.append(int(eval(\\'{2}{1}{0}\\'.format(s.pop(), x, s.pop()))) if x in \\'+-*/\\' else x) or s, A, [])[0]\\n```\n```python\\nclass Solution: evalRPN = lambda _,A: reduce(lambda s,x: s.append(int(eval(\\'{2}{1}{0}\\'.format(s.pop(), x, s.pop()))) if x in \\'+-*/\\' else x) or s, A, [])[0]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1230259,
                "title": "java-stack-implementation",
                "content": "By using stack we can push the values except operators into the stack and once operator encountered we will pop two elements from the stack and do the operator operation on the operands. \\n```\\npublic int evalRPN(String[] tokens) {\\n        int operand1, operand2, result=0;\\n        Deque<Integer> st = new ArrayDeque<Integer> ();\\n        List<String> operators = Arrays.asList(\"+\",\"-\",\"*\",\"/\");\\n        for(String s : tokens){\\n            if(operators.contains(s)){\\n                operand2 = st.remove();\\n                operand1 = st.remove();\\n                switch(s){\\n                    case \"+\": result = operand1+operand2;break;\\n                    case \"-\": result = operand1-operand2;break;\\n                    case \"*\": result = operand1*operand2;break;\\n                    case \"/\": result = operand1/operand2;break;\\n                }\\n                st.push (result);\\n            }else{\\n                st.push (Integer.parseInt(s));\\n            }\\n        }\\n        return st.remove();\\n    }\\n```",
                "solutionTags": [
                    "Java",
                    "Stack"
                ],
                "code": "```\\npublic int evalRPN(String[] tokens) {\\n        int operand1, operand2, result=0;\\n        Deque<Integer> st = new ArrayDeque<Integer> ();\\n        List<String> operators = Arrays.asList(\"+\",\"-\",\"*\",\"/\");\\n        for(String s : tokens){\\n            if(operators.contains(s)){\\n                operand2 = st.remove();\\n                operand1 = st.remove();\\n                switch(s){\\n                    case \"+\": result = operand1+operand2;break;\\n                    case \"-\": result = operand1-operand2;break;\\n                    case \"*\": result = operand1*operand2;break;\\n                    case \"/\": result = operand1/operand2;break;\\n                }\\n                st.push (result);\\n            }else{\\n                st.push (Integer.parseInt(s));\\n            }\\n        }\\n        return st.remove();\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1229933,
                "title": "ruby-stack",
                "content": "```\\n# @param {String[]} tokens\\n# @return {Integer}\\ndef eval_rpn(tokens)\\n  stack = []\\n  \\n  tokens.each do |token|\\n    if %w[+ - * /].include?(token)\\n      right = stack.pop\\n      left = stack.pop\\n      \\n      case token\\n      when \\'+\\'\\n        stack << left + right\\n      when \\'-\\'\\n        stack << left - right\\n      when \\'*\\'\\n        stack << left*right\\n      else\\n        stack << (left.to_f/right).to_i\\n      end\\n    else\\n      stack << token.to_i\\n    end\\n  end\\n  \\n  stack.pop\\nend\\n```",
                "solutionTags": [
                    "Ruby",
                    "Stack"
                ],
                "code": "```\\n# @param {String[]} tokens\\n# @return {Integer}\\ndef eval_rpn(tokens)\\n  stack = []\\n  \\n  tokens.each do |token|\\n    if %w[+ - * /].include?(token)\\n      right = stack.pop\\n      left = stack.pop\\n      \\n      case token\\n      when \\'+\\'\\n        stack << left + right\\n      when \\'-\\'\\n        stack << left - right\\n      when \\'*\\'\\n        stack << left*right\\n      else\\n        stack << (left.to_f/right).to_i\\n      end\\n    else\\n      stack << token.to_i\\n    end\\n  end\\n  \\n  stack.pop\\nend\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 1229450,
                "title": "evaluate-reverse-polish-notation-easy-and-clear-code-c",
                "content": "```\\nclass Solution {\\npublic:\\n    unordered_map<string,char> mp;\\n    int getVal(int first,int second,char op)\\n    {\\n        int res=0;\\n        switch(op)\\n        {\\n            case \\'*\\':\\n                res=first*second;\\n                break;\\n            case \\'+\\':\\n                res = first+second;\\n                break;\\n            case \\'-\\':\\n                res=first-second;\\n                break;\\n            case \\'/\\':\\n                res = first/second;\\n                break;\\n            default:\\n                break;       \\n        }\\n        return res;\\n    }\\n    int evalRPN(vector<string>& tokens) {\\n        mp[\"*\"] = \\'*\\';\\n        mp[\"+\"] = \\'+\\';\\n        mp[\"-\"] = \\'-\\';\\n        mp[\"/\"] = \\'/\\';\\n        stack<int> s;\\n        for(auto i:tokens)\\n        {\\n            if(!mp.count(i))\\n            {\\n                s.push(stoi(i));\\n            }\\n            else\\n            {\\n                int sec = s.top();\\n                s.pop();\\n                int first = s.top();\\n                s.pop();\\n                s.push(getVal(first,sec,mp[i]));\\n            }\\n        }\\n        return s.top();\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    unordered_map<string,char> mp;\\n    int getVal(int first,int second,char op)\\n    {\\n        int res=0;\\n        switch(op)\\n        {\\n            case \\'*\\':\\n                res=first*second;\\n                break;\\n            case \\'+\\':\\n                res = first+second;\\n                break;\\n            case \\'-\\':\\n                res=first-second;\\n                break;\\n            case \\'/\\':\\n                res = first/second;\\n                break;\\n            default:\\n                break;       \\n        }\\n        return res;\\n    }\\n    int evalRPN(vector<string>& tokens) {\\n        mp[\"*\"] = \\'*\\';\\n        mp[\"+\"] = \\'+\\';\\n        mp[\"-\"] = \\'-\\';\\n        mp[\"/\"] = \\'/\\';\\n        stack<int> s;\\n        for(auto i:tokens)\\n        {\\n            if(!mp.count(i))\\n            {\\n                s.push(stoi(i));\\n            }\\n            else\\n            {\\n                int sec = s.top();\\n                s.pop();\\n                int first = s.top();\\n                s.pop();\\n                s.push(getVal(first,sec,mp[i]));\\n            }\\n        }\\n        return s.top();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1093054,
                "title": "c-0ms-100-obvious",
                "content": "20 / 20 test cases passed.\\nStatus: Accepted\\nRuntime: 0 ms\\nMemory Usage: 11.9 MB\\n```\\nclass Solution {\\npublic:\\n  int evalRPN(vector<string>& tokens) {\\n    vector <int> st;\\n    int k = -2, j = -1;\\n    \\n    for(auto i : tokens)\\n      if(i.size() > 1 || i[0] > \\'/\\') {st.push_back(stoi(i));k++,j++;}\\n      else \\n        switch(i[0]){\\n          case \\'+\\':\\n            st[k--] += st[j--]; st.pop_back();break;\\n          case \\'-\\': \\n            st[k--] -= st[j--]; st.pop_back();break;\\n          case \\'*\\': \\n            st[k--] *= st[j--]; st.pop_back();break;\\n          case \\'/\\': \\n            st[k--] /= st[j--]; st.pop_back();break;\\n        }\\n      \\n    \\n    return st[0];\\n  }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n  int evalRPN(vector<string>& tokens) {\\n    vector <int> st;\\n    int k = -2, j = -1;\\n    \\n    for(auto i : tokens)\\n      if(i.size() > 1 || i[0] > \\'/\\') {st.push_back(stoi(i));k++,j++;}\\n      else \\n        switch(i[0]){\\n          case \\'+\\':\\n            st[k--] += st[j--]; st.pop_back();break;\\n          case \\'-\\': \\n            st[k--] -= st[j--]; st.pop_back();break;\\n          case \\'*\\': \\n            st[k--] *= st[j--]; st.pop_back();break;\\n          case \\'/\\': \\n            st[k--] /= st[j--]; st.pop_back();break;\\n        }\\n      \\n    \\n    return st[0];\\n  }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1089406,
                "title": "c-sol-time-complexity-o-n-space-complexity-o-n",
                "content": "```\\n    int evalRPN(vector<string>& t) {\\n        stack<int> s;\\n        int i=0;\\n        while(i<t.size())\\n        {\\n           if(t[i]==\"+\"||t[i]==\"-\"||t[i]==\"*\"||t[i]==\"/\")\\n           {  \\n              int a=s.top();\\n              s.pop();\\n              int b=s.top();\\n              s.pop();\\n              if(t[i]==\"+\")\\n                 s.push(a+b);\\n              else if(t[i]==\"-\")\\n                 s.push(b-a);\\n              else if(t[i]==\"*\")\\n                 s.push(a*b);\\n              else\\n                 s.push(b/a);\\n           }\\n          else\\n          {\\n              int c=stoi(t[i]);\\n              s.push(c);\\n          }\\n          i++;\\n        }\\n       if(!s.empty())\\n            return s.top();\\n       else\\n             return 0;\\n    }\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\n    int evalRPN(vector<string>& t) {\\n        stack<int> s;\\n        int i=0;\\n        while(i<t.size())\\n        {\\n           if(t[i]==\"+\"||t[i]==\"-\"||t[i]==\"*\"||t[i]==\"/\")\\n           {  \\n              int a=s.top();\\n              s.pop();\\n              int b=s.top();\\n              s.pop();\\n              if(t[i]==\"+\")\\n                 s.push(a+b);\\n              else if(t[i]==\"-\")\\n                 s.push(b-a);\\n              else if(t[i]==\"*\")\\n                 s.push(a*b);\\n              else\\n                 s.push(b/a);\\n           }\\n          else\\n          {\\n              int c=stoi(t[i]);\\n              s.push(c);\\n          }\\n          i++;\\n        }\\n       if(!s.empty())\\n            return s.top();\\n       else\\n             return 0;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1026554,
                "title": "concise-python-solution",
                "content": "```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        ops = {\\n            \\'+\\': lambda a,b: a+b,\\n            \\'-\\': lambda a,b: a-b,\\n            \\'*\\': lambda a,b: a*b,\\n            \\'/\\': lambda a,b: int(a/b)\\n        }\\n\\n        stack = []\\n        for token in tokens:\\n            if token in ops: # is operation\\n                b = stack.pop()\\n                a = stack.pop()\\n                ans = ops[token](a,b)\\n                stack.append(ans)\\n            else: # is number\\n                stack.append(int(token))\\n\\n        return stack[0]\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Stack"
                ],
                "code": "```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        ops = {\\n            \\'+\\': lambda a,b: a+b,\\n            \\'-\\': lambda a,b: a-b,\\n            \\'*\\': lambda a,b: a*b,\\n            \\'/\\': lambda a,b: int(a/b)\\n        }\\n\\n        stack = []\\n        for token in tokens:\\n            if token in ops: # is operation\\n                b = stack.pop()\\n                a = stack.pop()\\n                ans = ops[token](a,b)\\n                stack.append(ans)\\n            else: # is number\\n                stack.append(int(token))\\n\\n        return stack[0]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 654712,
                "title": "c-python-revisit-after-1-year-and-found-a-better-way-to-distinguish-between-operator-and-operand",
                "content": "```\\nclass Solution { // Soltuion 1: Stack\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> stk;\\n        for(const auto& token: tokens){                        \\n            if(isdigit(token.back())){ stk.push(stoi(token));//Note1\\n            }else{\\n                int n2 = stk.top(); stk.pop();\\n                int n1 = stk.top(); stk.pop();\\n                int n;\\n                if(token == \"+\") n = n1 + n2;\\n                else if(token == \"-\") n = n1 - n2;\\n                else if(token == \"*\") n = n1 * n2;\\n                else if(token == \"/\") n = n1 / n2;\\n                stk.push(n);\\n            }\\n        }    \\n        return stk.top();\\n    }\\n};\\n```\\nNote1:  Revisit after 1 year and found a better way to distinguish between operator and operand:\\n\\nHere are other choices\\nif(token.back() - \\'0\\' >=0 && token.back() - \\'0\\' <= 9) \\nstk.push(stoi(token));\\nif(token.size()>1 || isdigit(token[0])) stk.push(stoi(token));\\nif(token!=\"+\" && token!=\"-\" && token!=\"*\" && token!=\"/\") stk.push(stoi(token));\\n\\n\\n\\nApproach 2: Python\\n```\\nclass Solution:#4\\'16\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        stk = []\\n        for s in tokens:\\n            if s[-1] in \\'+-*/\\':\\n                num2 = stk.pop()\\n                num1 = stk.pop()\\n                if s == \\'+\\': stk.append(num1+num2)\\n                elif s == \\'-\\': stk.append(num1-num2)\\n                elif s == \\'*\\': stk.append(num1*num2)\\n                else: stk.append(int(num1/num2)) # note the trick\\n            else:\\n                stk.append(int(s))\\n        return stk.pop() #better than: stk[-1]\\n```\\nCredit: \\nhttps://zxi.mytechroad.com/blog/stack/leetcode-150-evaluate-reverse-polish-notation/\\n",
                "solutionTags": [
                    "C++",
                    "Python3"
                ],
                "code": "```\\nclass Solution { // Soltuion 1: Stack\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> stk;\\n        for(const auto& token: tokens){                        \\n            if(isdigit(token.back())){ stk.push(stoi(token));//Note1\\n            }else{\\n                int n2 = stk.top(); stk.pop();\\n                int n1 = stk.top(); stk.pop();\\n                int n;\\n                if(token == \"+\") n = n1 + n2;\\n                else if(token == \"-\") n = n1 - n2;\\n                else if(token == \"*\") n = n1 * n2;\\n                else if(token == \"/\") n = n1 / n2;\\n                stk.push(n);\\n            }\\n        }    \\n        return stk.top();\\n    }\\n};\\n```\n```\\nclass Solution:#4\\'16\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        stk = []\\n        for s in tokens:\\n            if s[-1] in \\'+-*/\\':\\n                num2 = stk.pop()\\n                num1 = stk.pop()\\n                if s == \\'+\\': stk.append(num1+num2)\\n                elif s == \\'-\\': stk.append(num1-num2)\\n                elif s == \\'*\\': stk.append(num1*num2)\\n                else: stk.append(int(num1/num2)) # note the trick\\n            else:\\n                stk.append(int(s))\\n        return stk.pop() #better than: stk[-1]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 453965,
                "title": "c-simple-easy-straightforward-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;\\n        set<string> st={\"*\",\"+\",\"-\",\"/\"};\\n        for(auto x:tokens){\\n            if(st.find(x)==st.end()){\\n                s.push(stoi(x));\\n            }\\n            else{\\n                int a=s.top();\\n                s.pop();\\n                int b=s.top();\\n                s.pop();\\n                if(x==\"*\"){\\n                    s.push(b*a);\\n                }\\n                else if(x==\"+\"){\\n                    s.push(b+a);\\n                }\\n                else if(x==\"-\"){\\n                    s.push(b-a);\\n                }\\n                else{\\n                    s.push(b/a);\\n                }\\n            }\\n        }\\n        return s.top();\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;\\n        set<string> st={\"*\",\"+\",\"-\",\"/\"};\\n        for(auto x:tokens){\\n            if(st.find(x)==st.end()){\\n                s.push(stoi(x));\\n            }\\n            else{\\n                int a=s.top();\\n                s.pop();\\n                int b=s.top();\\n                s.pop();\\n                if(x==\"*\"){\\n                    s.push(b*a);\\n                }\\n                else if(x==\"+\"){\\n                    s.push(b+a);\\n                }\\n                else if(x==\"-\"){\\n                    s.push(b-a);\\n                }\\n                else{\\n                    s.push(b/a);\\n                }\\n            }\\n        }\\n        return s.top();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 447980,
                "title": "python-stack-98-55-100",
                "content": "```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        stack = []\\n        operators = set([\\'+\\', \\'-\\', \\'*\\', \\'/\\'])\\n        for token in tokens:\\n            if token not in operators:\\n                stack.append(int(token))\\n            else:\\n                right, left = stack.pop(), stack.pop()\\n                if token == \\'+\\': res = left + right\\n                if token == \\'-\\': res = left - right\\n                if token == \\'*\\': res = left * right\\n                if token == \\'/\\': res = left / right\\n                stack.append(int(res))\\n        return stack.pop()\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        stack = []\\n        operators = set([\\'+\\', \\'-\\', \\'*\\', \\'/\\'])\\n        for token in tokens:\\n            if token not in operators:\\n                stack.append(int(token))\\n            else:\\n                right, left = stack.pop(), stack.pop()\\n                if token == \\'+\\': res = left + right\\n                if token == \\'-\\': res = left - right\\n                if token == \\'*\\': res = left * right\\n                if token == \\'/\\': res = left / right\\n                stack.append(int(res))\\n        return stack.pop()\\n```",
                "codeTag": "Java"
            },
            {
                "id": 349841,
                "title": "c-short-clean-and-concise",
                "content": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> stk;\\n        for(string s: tokens) {\\n            if(s != \"+\" && s != \"-\" && s != \"*\" && s != \"/\") stk.push(stoi(s));\\n            else {\\n                int op2 = stk.top();\\n                stk.pop();\\n                int op1 = stk.top();\\n                stk.pop();\\n                if(s == \"+\") stk.push(op1 + op2);\\n                if(s == \"-\") stk.push(op1 - op2);\\n                if(s == \"*\") stk.push(op1 * op2);\\n                if(s == \"/\") stk.push(op1 / op2);\\n            }\\n        }\\n        return stk.top();\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> stk;\\n        for(string s: tokens) {\\n            if(s != \"+\" && s != \"-\" && s != \"*\" && s != \"/\") stk.push(stoi(s));\\n            else {\\n                int op2 = stk.top();\\n                stk.pop();\\n                int op1 = stk.top();\\n                stk.pop();\\n                if(s == \"+\") stk.push(op1 + op2);\\n                if(s == \"-\") stk.push(op1 - op2);\\n                if(s == \"*\") stk.push(op1 * op2);\\n                if(s == \"/\") stk.push(op1 / op2);\\n            }\\n        }\\n        return stk.top();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 323933,
                "title": "python-pretty-short-and-beats-98-5",
                "content": "```\\nimport operator\\n\\ndef myDiv(x, y):\\n    res = x // y\\n    if res < 0 and x % y != 0:\\n        return res + 1\\n    else:\\n        return res\\n\\nops = {\"+\": operator.add, \"-\": operator.sub, \"*\": operator.mul, \"/\": myDiv}\\n\\nclass Solution(object):\\n    def eval(self, tokens, i):\\n        if tokens[i] in ops:\\n            x, ii = self.eval(tokens, i - 1)\\n            y, iii = self.eval(tokens, ii)\\n            return ops[tokens[i]](y, x), iii\\n        else:\\n            return int(tokens[i]), i - 1\\n            \\n    def evalRPN(self, tokens):\\n        ans, _ = self.eval(tokens, len(tokens) - 1)\\n        return ans\\n```",
                "solutionTags": [],
                "code": "```\\nimport operator\\n\\ndef myDiv(x, y):\\n    res = x // y\\n    if res < 0 and x % y != 0:\\n        return res + 1\\n    else:\\n        return res\\n\\nops = {\"+\": operator.add, \"-\": operator.sub, \"*\": operator.mul, \"/\": myDiv}\\n\\nclass Solution(object):\\n    def eval(self, tokens, i):\\n        if tokens[i] in ops:\\n            x, ii = self.eval(tokens, i - 1)\\n            y, iii = self.eval(tokens, ii)\\n            return ops[tokens[i]](y, x), iii\\n        else:\\n            return int(tokens[i]), i - 1\\n            \\n    def evalRPN(self, tokens):\\n        ans, _ = self.eval(tokens, len(tokens) - 1)\\n        return ans\\n```",
                "codeTag": "Java"
            },
            {
                "id": 280036,
                "title": "python-use-lambda-function-to-convert-the-string-to-operation",
                "content": "```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        operators = {\\n            \"+\": lambda a,b: a+b,\\n            \"-\": lambda a,b: a-b,\\n            \"/\": lambda a,b: int(a/b),\\n            \"*\": lambda a,b: a*b\\n        }\\n        stack = []\\n        for i in tokens:\\n            if i in operators:\\n                a = stack.pop()\\n                b = stack.pop()\\n                res = operators[i](b, a)\\n                stack.append(res)\\n            else:\\n                stack.append(int(i))\\n        return stack[0]\\n        \\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def evalRPN(self, tokens: List[str]) -> int:\\n        operators = {\\n            \"+\": lambda a,b: a+b,\\n            \"-\": lambda a,b: a-b,\\n            \"/\": lambda a,b: int(a/b),\\n            \"*\": lambda a,b: a*b\\n        }\\n        stack = []\\n        for i in tokens:\\n            if i in operators:\\n                a = stack.pop()\\n                b = stack.pop()\\n                res = operators[i](b, a)\\n                stack.append(res)\\n            else:\\n                stack.append(int(i))\\n        return stack[0]\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 233297,
                "title": "python-with-stack",
                "content": "```\\n#\\n# coding=utf-8\\n\\n\\nclass Solution(object):\\n\\n    def evalRPN(self, tokens):\\n        \"\"\"\\n        :type tokens: List[str]\\n        :rtype: int\\n        \"\"\"\\n        stack = []\\n        symbol_dict = {\\'+\\': self._add, \\'-\\': self._sub, \\'*\\': self._mul, \\'/\\': self._div}\\n        for ele in tokens:\\n            if ele not in symbol_dict:\\n                stack.append(int(ele))\\n            else:\\n                e1 = stack.pop()\\n                e2 = stack.pop()\\n                stack.append(symbol_dict[ele](e2, e1))\\n                # print stack[len(stack)-1]\\n        return stack.pop()\\n    \\n    def _add(self, x, y):\\n        return x+y\\n\\n    def _sub(self, x, y):\\n        return x-y\\n\\n    def _mul(self, x, y):\\n        return x*y\\n\\n    def _div(self, x, y):\\n        return int(float(x)/float(y))\\n```",
                "solutionTags": [],
                "code": "```\\n#\\n# coding=utf-8\\n\\n\\nclass Solution(object):\\n\\n    def evalRPN(self, tokens):\\n        \"\"\"\\n        :type tokens: List[str]\\n        :rtype: int\\n        \"\"\"\\n        stack = []\\n        symbol_dict = {\\'+\\': self._add, \\'-\\': self._sub, \\'*\\': self._mul, \\'/\\': self._div}\\n        for ele in tokens:\\n            if ele not in symbol_dict:\\n                stack.append(int(ele))\\n            else:\\n                e1 = stack.pop()\\n                e2 = stack.pop()\\n                stack.append(symbol_dict[ele](e2, e1))\\n                # print stack[len(stack)-1]\\n        return stack.pop()\\n    \\n    def _add(self, x, y):\\n        return x+y\\n\\n    def _sub(self, x, y):\\n        return x-y\\n\\n    def _mul(self, x, y):\\n        return x*y\\n\\n    def _div(self, x, y):\\n        return int(float(x)/float(y))\\n```",
                "codeTag": "Java"
            },
            {
                "id": 47424,
                "title": "java-oop-solution-with-stack-lambda-expression-method-reference-unfortunately-runs-slow",
                "content": "class Solution {\\n    \\n    private static final Map<String, BiFunction<Integer, Integer, Integer>> ops = new HashMap<>();\\n    static {\\n        ops.put(\"+\", (n1, n2) -> n1 + n2);\\n        ops.put(\"-\", (n1, n2) -> n1 - n2);\\n        ops.put(\"*\", (n1, n2) -> n1 * n2);\\n        ops.put(\"/\", (n1, n2) -> n1 / n2);\\n    }\\n    \\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> stack = new Stack<>();\\n        BiFunction<Integer, Integer, Integer> func;\\n        for (String s: tokens) {\\n            func = ops.get(s);\\n            if (func != null) {\\n                int n2 = stack.pop();\\n                int n1 = stack.pop();\\n                stack.push(func.apply(n1, n2));\\n            } else {\\n                stack.push(Integer.parseInt(s));\\n            }\\n        }\\n        return stack.pop();\\n    }\\n\\n}",
                "solutionTags": [],
                "code": "class Solution {\\n    \\n    private static final Map<String, BiFunction<Integer, Integer, Integer>> ops = new HashMap<>();\\n    static {\\n        ops.put(\"+\", (n1, n2) -> n1 + n2);\\n        ops.put(\"-\", (n1, n2) -> n1 - n2);\\n        ops.put(\"*\", (n1, n2) -> n1 * n2);\\n        ops.put(\"/\", (n1, n2) -> n1 / n2);\\n    }",
                "codeTag": "Java"
            },
            {
                "id": 47426,
                "title": "java-stack-with-explanation",
                "content": "[The reverse Polish scheme was proposed in 1954 by Burks, Warren, and Wright and was independently reinvented by Friedrich L. Bauer and Edsger W. Dijkstra in the early 1960s to reduce computer memory access and utilize the stack to evaluate expressions.](https://en.wikipedia.org/wiki/Reverse_Polish_notation)\\n\\n```\\nclass Solution {\\n    //Use a stack to store every digit numbers.\\n    //Whenever we detect a binary operation (Must be), we pop the top two elements in stack.\\n    //Then calculate and put result back to stack.\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> stack = new Stack<>();\\n        for(int i = 0; i < tokens.length; i++){\\n            if(tokens[i].equals(\"+\")){\\n                int b = stack.pop();\\n                int a = stack.pop();\\n                stack.push(a+b);\\n            }\\n            else if(tokens[i].equals(\"-\")){\\n                int b = stack.pop();\\n                int a = stack.pop();\\n                stack.push(a-b);\\n            }\\n            else if(tokens[i].equals(\"*\")){\\n                int b = stack.pop();\\n                int a = stack.pop();\\n                stack.push(a*b);\\n            }\\n            else if(tokens[i].equals(\"/\")){\\n                int b = stack.pop();\\n                int a = stack.pop();\\n                stack.push(a/b);\\n            }\\n            else\\n                stack.push(Integer.parseInt(tokens[i]));\\n        }\\n        return stack.pop();\\n    }\\n}\\n\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    //Use a stack to store every digit numbers.\\n    //Whenever we detect a binary operation (Must be), we pop the top two elements in stack.\\n    //Then calculate and put result back to stack.\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> stack = new Stack<>();\\n        for(int i = 0; i < tokens.length; i++){\\n            if(tokens[i].equals(\"+\")){\\n                int b = stack.pop();\\n                int a = stack.pop();\\n                stack.push(a+b);\\n            }\\n            else if(tokens[i].equals(\"-\")){\\n                int b = stack.pop();\\n                int a = stack.pop();\\n                stack.push(a-b);\\n            }\\n            else if(tokens[i].equals(\"*\")){\\n                int b = stack.pop();\\n                int a = stack.pop();\\n                stack.push(a*b);\\n            }\\n            else if(tokens[i].equals(\"/\")){\\n                int b = stack.pop();\\n                int a = stack.pop();\\n                stack.push(a/b);\\n            }\\n            else\\n                stack.push(Integer.parseInt(tokens[i]));\\n        }\\n        return stack.pop();\\n    }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 47435,
                "title": "clean-python-solution",
                "content": "This solution could be even shorter if python idea of integer division would be the same as for LeetCode.\\n```\\nclass Solution(object):\\n    def evalRPN(self, tokens):\\n        \"\"\"\\n        :type tokens: List[str]\\n        :rtype: int\\n        \"\"\"\\n        def sign(a):\\n            return (-1 if a < 0 else 1)\\n        op = {'+':lambda a,b:a+b,'-':lambda a,b:b-a,'*':lambda a,b:a*b,'/':lambda a,b:abs(b)/abs(a)*sign(a)*sign(b)}\\n        st = []\\n        for t in tokens:\\n            if t in op:\\n                st.append(op[t](st.pop(),st.pop()))\\n            else:\\n                st.append(int(t))\\n        \\n        return st[0]\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution(object):\\n    def evalRPN(self, tokens):\\n        \"\"\"\\n        :type tokens: List[str]\\n        :rtype: int\\n        \"\"\"\\n        def sign(a):\\n            return (-1 if a < 0 else 1)\\n        op = {'+':lambda a,b:a+b,'-':lambda a,b:b-a,'*':lambda a,b:a*b,'/':lambda a,b:abs(b)/abs(a)*sign(a)*sign(b)}\\n        st = []\\n        for t in tokens:\\n            if t in op:\\n                st.append(op[t](st.pop(),st.pop()))\\n            else:\\n                st.append(int(t))\\n        \\n        return st[0]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 47456,
                "title": "problem-with-javascript-tests",
                "content": "It seems like there's an inconsistency with the javascript test cases.\\n\\nFor [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"] it expects the answer 22, so it seems like it's rounding the answer/each step to the closest integer or taking the ceiling.\\n\\nBut for [\"4\",\"13\",\"5\",\"/\",\"+\"]  the expected answer is 6, but that means it's rounding down or taking the floor for the answer or each step.\\n\\nAm I missing something or is it a problem with the judge? \\n\\nMy code...\\n\\n```\\nvar evalRPN = function(tokens) { //  [\"4\",\"-2\",\"/\",\"2\",\"-3\",\"-\",\"-\"]\\n    var stack = []; // ['-2', '2']\\n    for (var i=0; i<tokens.length; i++) { // 5 < 7\\n        var token = tokens[i]; // \"-\"\\n        if (isOperator(token)) {\\n            var operand2 = stack.pop(); // '-3'\\n            var operand1 = stack.pop(); // '-2'\\n            var expression = '(' + operand1 + ')' + token + '(' + operand2 + ')'; // '-2--3'\\n            var result = Math.round(eval(expression)); // 3\\n            stack.push(result + '');\\n        } else {\\n            stack.push(token);\\n        }\\n    }\\n    return Math.round(Number(stack.pop()));\\n};\\n\\nfunction isOperator(token) {\\n    return ['+', '-', '*', '/'].indexOf(token) > -1;\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nvar evalRPN = function(tokens) { //  [\"4\",\"-2\",\"/\",\"2\",\"-3\",\"-\",\"-\"]\\n    var stack = []; // ['-2', '2']\\n    for (var i=0; i<tokens.length; i++) { // 5 < 7\\n        var token = tokens[i]; // \"-\"\\n        if (isOperator(token)) {\\n            var operand2 = stack.pop(); // '-3'\\n            var operand1 = stack.pop(); // '-2'\\n            var expression = '(' + operand1 + ')' + token + '(' + operand2 + ')'; // '-2--3'\\n            var result = Math.round(eval(expression)); // 3\\n            stack.push(result + '');\\n        } else {\\n            stack.push(token);\\n        }\\n    }\\n    return Math.round(Number(stack.pop()));\\n};\\n\\nfunction isOperator(token) {\\n    return ['+', '-', '*', '/'].indexOf(token) > -1;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 47495,
                "title": "accepted-c-code-4ms-stack-implementation",
                "content": "```\\nint evalRPN(char** tokens, int tokensSize) {\\n    int i = 1;\\n    int* buffer;\\n    buffer = (int*)malloc(sizeof(int) * tokensSize);\\n    int* top = buffer;\\n    *top = atoi(tokens[0]);\\n    for (; i < tokensSize; ++i) {\\n        switch(tokens[i][0]) {\\n            case '+':\\n            *(top - 1) += *top;\\n            top -= 1;\\n            break;\\n            case '-':\\n            if (atoi(tokens[i]) != 0) {\\n                top += 1;\\n                *top = atoi(tokens[i]);\\n                break;\\n            }\\n            *(top - 1) -= *top;\\n            top -= 1;\\n            break;\\n            case '*':\\n            *(top - 1) *= *top;\\n            top -= 1;\\n            break;\\n            case '/':\\n            *(top - 1) /= *top;\\n            top -= 1;\\n            break;\\n            default:\\n            top += 1;\\n            *top = atoi(tokens[i]);\\n        }\\n    }\\n    int res = *top;\\n    free(buffer);\\n    return res;\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nint evalRPN(char** tokens, int tokensSize) {\\n    int i = 1;\\n    int* buffer;\\n    buffer = (int*)malloc(sizeof(int) * tokensSize);\\n    int* top = buffer;\\n    *top = atoi(tokens[0]);\\n    for (; i < tokensSize; ++i) {\\n        switch(tokens[i][0]) {\\n            case '+':\\n            *(top - 1) += *top;\\n            top -= 1;\\n            break;\\n            case '-':\\n            if (atoi(tokens[i]) != 0) {\\n                top += 1;\\n                *top = atoi(tokens[i]);\\n                break;\\n            }\\n            *(top - 1) -= *top;\\n            top -= 1;\\n            break;\\n            case '*':\\n            *(top - 1) *= *top;\\n            top -= 1;\\n            break;\\n            case '/':\\n            *(top - 1) /= *top;\\n            top -= 1;\\n            break;\\n            default:\\n            top += 1;\\n            *top = atoi(tokens[i]);\\n        }\\n    }\\n    int res = *top;\\n    free(buffer);\\n    return res;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 47507,
                "title": "12-lines-javascript",
                "content": "    // If you put var ops in 1 line, it can b 8 lines.\\n    \\n    var evalRPN = function(tokens) {\\n        var st=[]\\n        var ops = {\\n            '+': (a,b)=>a+b,\\n            '-': (a,b)=>a-b,\\n            '*': (a,b)=>a*b,\\n            '/': (a,b)=>a/b|0,\\n        }\\n    \\n        for(var to of tokens )\\n            if (to in ops)\\n                st[st.length-2] = ops[to](st[st.length-2], st.pop())\\n            else\\n                st.push(parseInt(to))\\n    \\n        return st[0]\\n    };",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "    // If you put var ops in 1 line, it can b 8 lines.\\n    \\n    var evalRPN = function(tokens) {\\n        var st=[]\\n        var ops = {\\n            '+': (a,b)=>a+b,\\n            '-': (a,b)=>a-b,\\n            '*': (a,b)=>a*b,\\n            '/': (a,b)=>a/b|0,\\n        }\\n    \\n        for(var to of tokens )\\n            if (to in ops)\\n                st[st.length-2] = ops[to](st[st.length-2], st.pop())\\n            else\\n                st.push(parseInt(to))\\n    \\n        return st[0]\\n    };",
                "codeTag": "Unknown"
            },
            {
                "id": 47586,
                "title": "my-accepeted-javs-solution-with-stack",
                "content": "    public class Solution {\\n        public int evalRPN(String[] tokens) {\\n            \\n    \\t\\t\\n    \\t\\tStack<String> st = new Stack<String>();\\n    \\t\\tfor(int i=0;i<tokens.length;i++){\\n    \\t\\t\\tif(!isAnOperator(tokens[i]))\\n    \\t\\t\\tst.push(tokens[i]);\\n    \\t\\t\\telse{\\n    \\t\\t\\t\\tint res = 0;\\n    \\t\\t\\t\\tint a = Integer.parseInt(st.pop());\\n    \\t\\t\\t\\tint b = Integer.parseInt(st.pop());\\n    \\t\\t\\t\\tif(tokens[i].equals(\"*\")){\\n    \\t\\t\\t\\t\\t res =b * a;\\n    \\t\\t\\t\\t}\\n    \\t\\t\\t\\tif(tokens[i].equals(\"/\")){\\n    \\t\\t\\t\\t\\t res =b / a;\\n    \\t\\t\\t\\t}\\n    \\t\\t\\t\\tif(tokens[i].equals(\"+\")){\\n    \\t\\t\\t\\t\\t res =b + a;\\n    \\t\\t\\t\\t}\\n    \\t\\t\\t\\tif(tokens[i].equals(\"-\")){\\n    \\t\\t\\t\\t\\t res =b - a;\\n    \\t\\t\\t\\t}\\n    \\t\\t\\t\\tst.push(Integer.toString(res));\\n    \\n    \\t\\t\\t\\t\\n    \\t\\t\\t}\\n    \\t\\t}\\n    \\t\\t\\n    \\t\\treturn (Integer.parseInt(st.pop()));\\n    \\t\\n        }\\n        \\n        \\tprivate static boolean isAnOperator(String string) {\\n    \\t\\t// TODO Auto-generated method stub\\n    \\t\\tif(string.equals(\"+\") || string.equals(\"-\") || string.equals(\"*\") || string.equals(\"/\"))\\n    \\t\\t\\treturn true;\\n    \\t\\treturn false;\\n    \\t} \\n    \\n    }",
                "solutionTags": [],
                "code": "class Solution {\\n        public int evalRPN(String[] tokens) {\\n            \\n    \\t\\t\\n    \\t\\tStack<String> st = new Stack<String>();\\n    \\t\\tfor(int i=0;i<tokens.length;i++){\\n    \\t\\t\\tif(!isAnOperator(tokens[i]))\\n    \\t\\t\\tst.push(tokens[i]);\\n    \\t\\t\\telse{\\n    \\t\\t\\t\\tint res = 0;\\n    \\t\\t\\t\\tint a = Integer.parseInt(st.pop());\\n    \\t\\t\\t\\tint b = Integer.parseInt(st.pop());\\n    \\t\\t\\t\\tif(tokens[i].equals(\"*\")){\\n    \\t\\t\\t\\t\\t res =b * a;\\n    \\t\\t\\t\\t}",
                "codeTag": "Java"
            },
            {
                "id": 3997869,
                "title": "stack-solution",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\n* First of all I have written down the problem description on a white paper in a clear way. \\n* After that I started analyzing the existing test cases, by visualizing how to sort the given digits with the given operations. \\n* Also the order of the operands, and which should be the first operand and which should be the second, specially in the division and subtraction operations. \\n* After that I have realized that always, it takes the first element to be inserted as the second operand **(operand on the right of the operation)**. \\n* so if we have list like this: \\n    * [ 3, 2, /] it means => 3 / 2 = 1 (integer divison).\\n    * [ 5, 2, -, 2, /] it means => 5 - 2 = 3 => 3 / 2 = 1 (integer division). \\n* So I have realized that it is a stack problem. \\n* And we keep inserting the elements in the stack until we meet one of the operations. \\n* Then we have to apply the operation on the top 2 elements where, the element on the top of the stack( the last to be inserted ) should be our second operand, while the element below it should be our first one. \\n* then after we calculate the result, we have to insert it again on the top of our stack. \\n* and keep repeating the same operation until we finish all the given tokens. \\n* After that our result will be the last remaining integer which should be on the top of the stack. \\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n> O(N) where N is the number of the given tokens, as we just iterate over the size of this list once. \\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n> O(N) where N is number of the given tokens. actually the stack will never be the same size as the given tokens, because in the stack I just keep the numbers only, and since the token list contains also some operations, so they will never be in the same size, but this is a higher bound estimation.\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n         stack<int> numbers;\\n    for (string tok : tokens)\\n    {\\n        if (isdigit(tok[0]) || (tok.size() > 1 && isdigit(tok[1])))\\n            numbers.push(stoi(tok));\\n        else\\n        {\\n            // this is an operation\\n            int second_operand = numbers.top();\\n            numbers.pop();\\n            int first_operand = numbers.top();\\n            numbers.pop();\\n            if (tok == \"+\")\\n                numbers.push(first_operand + second_operand);\\n            else if (tok == \"-\")\\n                numbers.push(first_operand - second_operand);\\n            else if (tok == \"/\")\\n                numbers.push(first_operand / second_operand);\\n            else if (tok == \"*\")\\n                numbers.push(first_operand * second_operand);\\n        }\\n    }\\n    return numbers.top();\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n         stack<int> numbers;\\n    for (string tok : tokens)\\n    {\\n        if (isdigit(tok[0]) || (tok.size() > 1 && isdigit(tok[1])))\\n            numbers.push(stoi(tok));\\n        else\\n        {\\n            // this is an operation\\n            int second_operand = numbers.top();\\n            numbers.pop();\\n            int first_operand = numbers.top();\\n            numbers.pop();\\n            if (tok == \"+\")\\n                numbers.push(first_operand + second_operand);\\n            else if (tok == \"-\")\\n                numbers.push(first_operand - second_operand);\\n            else if (tok == \"/\")\\n                numbers.push(first_operand / second_operand);\\n            else if (tok == \"*\")\\n                numbers.push(first_operand * second_operand);\\n        }\\n    }\\n    return numbers.top();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3991971,
                "title": "easy-structured-java-solution",
                "content": "# Intuition\\nThe idea is to check the token - is it a number or operand. If it is a number - we push it into the stack. If it is an operand - we do something with last two numbers in stack.\\n\\n# Approach\\n1. We create a set of operands **oper** and place all reqired operands into it.\\n2. We create a stack of integers, which we will be working with and two additional ints **a** and **b**, they will represent last and pre-last numbers in our stack.\\n3. We iterate through the array of tokens and either\\n    3.3. pop last two numbers from stack, evaluate and push the result back (in case of next character is an operand)\\n    3.4  push the token into the stack in case it is a number\\n\\nThis is my first solution publication, don\\'t judge me strict, I\\'m already nervous enought :)\\n\\n# Code\\n```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Set<String> oper = new HashSet<>();\\n        oper.add(\"+\");\\n        oper.add(\"-\");\\n        oper.add(\"*\");\\n        oper.add(\"/\");\\n        var stack = new Stack<Integer>();\\n        int a = 0;\\n        int b = 0;\\n\\n        for (int i = 0; i < tokens.length; i++) {\\n            if (oper.contains(tokens[i])) {\\n                switch (tokens[i]) {\\n                    case \"+\" -> {\\n                        a = stack.pop();\\n                        b = stack.pop();\\n                        stack.push(a + b);\\n                    }\\n                    case \"*\" -> {\\n                        a = stack.pop();\\n                        b = stack.pop();\\n                        stack.push(a * b);\\n                    }\\n                    case \"/\" -> {\\n                        a = stack.pop();\\n                        b = stack.pop();\\n                        stack.push(b / a);\\n                    }\\n                    case \"-\" -> {\\n                        a = stack.pop();\\n                        b = stack.pop();\\n                        stack.push(b - a);\\n                    }\\n                }\\n            }\\n            else {\\n                stack.push(Integer.parseInt(tokens[i]));\\n            }\\n        }\\n        return stack.peek();\\n    }\\n    }\\n\\n```",
                "solutionTags": [
                    "Java",
                    "Stack"
                ],
                "code": "```\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Set<String> oper = new HashSet<>();\\n        oper.add(\"+\");\\n        oper.add(\"-\");\\n        oper.add(\"*\");\\n        oper.add(\"/\");\\n        var stack = new Stack<Integer>();\\n        int a = 0;\\n        int b = 0;\\n\\n        for (int i = 0; i < tokens.length; i++) {\\n            if (oper.contains(tokens[i])) {\\n                switch (tokens[i]) {\\n                    case \"+\" -> {\\n                        a = stack.pop();\\n                        b = stack.pop();\\n                        stack.push(a + b);\\n                    }\\n                    case \"*\" -> {\\n                        a = stack.pop();\\n                        b = stack.pop();\\n                        stack.push(a * b);\\n                    }\\n                    case \"/\" -> {\\n                        a = stack.pop();\\n                        b = stack.pop();\\n                        stack.push(b / a);\\n                    }\\n                    case \"-\" -> {\\n                        a = stack.pop();\\n                        b = stack.pop();\\n                        stack.push(b - a);\\n                    }\\n                }\\n            }\\n            else {\\n                stack.push(Integer.parseInt(tokens[i]));\\n            }\\n        }\\n        return stack.peek();\\n    }\\n    }\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3764907,
                "title": "98-31-js-solution-o-n-using-stack",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n\\n\\nvar evalRPN = function(tokens) {\\n    const stack = [];\\n\\n    for (let i = 0; i < tokens.length; i++) {\\n        if (tokens[i] == \\'+\\') {\\n            stack.push(stack.pop() + stack.pop());\\n        } else if (tokens[i] == \\'-\\') {\\n            stack.push(- stack.pop() + stack.pop());\\n        } else if (tokens[i] == \\'*\\') {\\n            stack.push(stack.pop() * stack.pop());\\n        } else if (tokens[i] == \\'/\\') {\\n            stack.push(Math.trunc(1/(stack.pop()/stack.pop())));\\n            // The Math.trunc() static method returns the  \\n            //integer part of a number by removing any \\n            //fractional digits.\\n        } else stack.push(parseInt(tokens[i]));\\n    };\\n\\n    return stack[0];\\n};\\n\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n\\n\\nvar evalRPN = function(tokens) {\\n    const stack = [];\\n\\n    for (let i = 0; i < tokens.length; i++) {\\n        if (tokens[i] == \\'+\\') {\\n            stack.push(stack.pop() + stack.pop());\\n        } else if (tokens[i] == \\'-\\') {\\n            stack.push(- stack.pop() + stack.pop());\\n        } else if (tokens[i] == \\'*\\') {\\n            stack.push(stack.pop() * stack.pop());\\n        } else if (tokens[i] == \\'/\\') {\\n            stack.push(Math.trunc(1/(stack.pop()/stack.pop())));\\n            // The Math.trunc() static method returns the  \\n            //integer part of a number by removing any \\n            //fractional digits.\\n        } else stack.push(parseInt(tokens[i]));\\n    };\\n\\n    return stack[0];\\n};\\n\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3604881,
                "title": "easy-c-solution-stack",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> st;\\n        int n = tokens.size();\\n        int ans = 0;\\n        int temp = 0 ;\\n\\n        if(n == 1){\\n            return stoi(tokens[0]);\\n        }\\n        else{\\n            for(int i = 0 ; i < n ; i++){\\n            \\n                if(tokens[i] == \"+\"){\\n                    temp = st.top();\\n                    st.pop();\\n                    ans = st.top() + temp;\\n                    st.pop();\\n                    st.push(ans);\\n                }\\n                else if(tokens[i] == \"-\"){\\n                    temp = st.top();\\n                    st.pop();\\n                    ans = st.top() - temp;\\n                    st.pop();\\n                    st.push(ans);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    temp = st.top();\\n                    st.pop();\\n                    ans = st.top() * temp;\\n                    st.pop();\\n                    st.push(ans);\\n                }\\n                else if(tokens[i] == \"/\"){\\n                    temp = st.top();\\n                    st.pop();\\n                    ans = st.top() / temp;\\n                    st.pop();\\n                    st.push(ans);\\n                }\\n                else{\\n                    st.push(stoi(tokens[i]));\\n                }\\n            \\n        }\\n        \\n        return ans;\\n        }\\n        \\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> st;\\n        int n = tokens.size();\\n        int ans = 0;\\n        int temp = 0 ;\\n\\n        if(n == 1){\\n            return stoi(tokens[0]);\\n        }\\n        else{\\n            for(int i = 0 ; i < n ; i++){\\n            \\n                if(tokens[i] == \"+\"){\\n                    temp = st.top();\\n                    st.pop();\\n                    ans = st.top() + temp;\\n                    st.pop();\\n                    st.push(ans);\\n                }\\n                else if(tokens[i] == \"-\"){\\n                    temp = st.top();\\n                    st.pop();\\n                    ans = st.top() - temp;\\n                    st.pop();\\n                    st.push(ans);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    temp = st.top();\\n                    st.pop();\\n                    ans = st.top() * temp;\\n                    st.pop();\\n                    st.push(ans);\\n                }\\n                else if(tokens[i] == \"/\"){\\n                    temp = st.top();\\n                    st.pop();\\n                    ans = st.top() / temp;\\n                    st.pop();\\n                    st.push(ans);\\n                }\\n                else{\\n                    st.push(stoi(tokens[i]));\\n                }\\n            \\n        }\\n        \\n        return ans;\\n        }\\n        \\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3601869,
                "title": "simple-and-easy-to-understand-java-code-direct-approach",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n- O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int evalRPN(String[] str) {\\n        Stack <Integer> st = new Stack <>();\\n        for(String s:str)\\n        {\\n            if(s.equals(\"+\"))\\n            {\\n                int x=st.pop();\\n                int y=st.pop();\\n                st.push(x+y);\\n            }\\n           else if(s.equals(\"*\"))\\n            {\\n                int x=st.pop();\\n                int y=st.pop();\\n                st.push(x*y);\\n            }\\n            else if(s.equals(\"-\"))\\n            {\\n                int x=st.pop();\\n                int y=st.pop();\\n                st.push(y-x);\\n            }\\n           else if(s.equals(\"/\"))\\n            {\\n                int x=st.pop();\\n                int y=st.pop();\\n                st.push(y/x);\\n            }\\n            else\\n            st.push(Integer.parseInt(s));\\n        }\\n       return st.peek(); \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int evalRPN(String[] str) {\\n        Stack <Integer> st = new Stack <>();\\n        for(String s:str)\\n        {\\n            if(s.equals(\"+\"))\\n            {\\n                int x=st.pop();\\n                int y=st.pop();\\n                st.push(x+y);\\n            }\\n           else if(s.equals(\"*\"))\\n            {\\n                int x=st.pop();\\n                int y=st.pop();\\n                st.push(x*y);\\n            }\\n            else if(s.equals(\"-\"))\\n            {\\n                int x=st.pop();\\n                int y=st.pop();\\n                st.push(y-x);\\n            }\\n           else if(s.equals(\"/\"))\\n            {\\n                int x=st.pop();\\n                int y=st.pop();\\n                st.push(y/x);\\n            }\\n            else\\n            st.push(Integer.parseInt(s));\\n        }\\n       return st.peek(); \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3601242,
                "title": "c-stack-simple-linear-time",
                "content": "## Approach\\n<!-- Describe your approach to solving the problem. -->\\nMaintain a stack of integers. Iterate through the ```tokens``` vector :\\n- If```tokens[i]```is an integer (where```i```is the iterator), push```tokens[i]```to the stack.\\n\\n- If```tokens[i]```is an arithmetic operation, the top two numbers in the stack are popped; the concerned arithmetic operation is applied to the two numbers and the result of the operation is pushed back to the stack. Pushing the result simulates the use of brackets, i.e. evaluating the results in order of the brackets in the combined arithmetic operation.\\n(*For operations in which order of integers matters, i.e. subtraction and division, the integer popped second from the stack is the one to be considered first in the order, and the one popped first is to be considered second in the order.*)\\n\\n\\n## Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n#include <string>\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;\\n\\n        for(int i=0; i<tokens.size(); i++){\\n            string x = tokens[i];\\n            \\n            if(x==\"+\"){\\n                int a = s.top();\\n                s.pop();\\n                int b = s.top();\\n                s.pop();\\n                s.push(a+b);\\n            }\\n            else if(x==\"-\"){\\n                int a = s.top();\\n                s.pop();\\n                int b = s.top();\\n                s.pop();\\n                s.push(b-a);\\n            }\\n            else if(x==\"*\"){\\n                int a = s.top();\\n                s.pop();\\n                int b = s.top();\\n                s.pop();\\n                s.push(a*b);\\n            }\\n            else if(x==\"/\"){\\n                int a = s.top();\\n                s.pop();\\n                int b = s.top();\\n                s.pop();\\n                s.push(b/a);\\n            }\\n            else{\\n                s.push(stoi(x));\\n            }\\n        }\\n\\n        return s.top();\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Stack"
                ],
                "code": "```tokens```\n```tokens[i]```\n```i```\n```tokens[i]```\n```tokens[i]```\n```\\n#include <string>\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;\\n\\n        for(int i=0; i<tokens.size(); i++){\\n            string x = tokens[i];\\n            \\n            if(x==\"+\"){\\n                int a = s.top();\\n                s.pop();\\n                int b = s.top();\\n                s.pop();\\n                s.push(a+b);\\n            }\\n            else if(x==\"-\"){\\n                int a = s.top();\\n                s.pop();\\n                int b = s.top();\\n                s.pop();\\n                s.push(b-a);\\n            }\\n            else if(x==\"*\"){\\n                int a = s.top();\\n                s.pop();\\n                int b = s.top();\\n                s.pop();\\n                s.push(a*b);\\n            }\\n            else if(x==\"/\"){\\n                int a = s.top();\\n                s.pop();\\n                int b = s.top();\\n                s.pop();\\n                s.push(b/a);\\n            }\\n            else{\\n                s.push(stoi(x));\\n            }\\n        }\\n\\n        return s.top();\\n    }\\n};\\n```",
                "codeTag": "C++"
            }
        ],
        "discussions": [
            {
                "id": 1564687,
                "content": [
                    {
                        "username": "yfdyyy",
                        "content": "when I test [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"], \\nin this program, the result I got is 12, I think I am right. Because when I calculate 6/(-132) = -1, not 0, so i think the result is 12 not 22."
                    },
                    {
                        "username": "nonethewiser",
                        "content": "\"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "soleo",
                        "content": "If you are using `//` in python3, that would be the root cause for the test to fail. Check https://stackoverflow.com/questions/19517868/integer-division-by-negative-number"
                    },
                    {
                        "username": "TheSuperGroot",
                        "content": "[@nghuuminh03](/nghuuminh03) maybe he /she is still  looking"
                    },
                    {
                        "username": "0biwan",
                        "content": "[@jitendra_nagar_50](/jitendra_nagar_50) int(6 / -132), no need for `float()` type conversion. Result will be float anyway"
                    },
                    {
                        "username": "jitendra_nagar_50",
                        "content": "Do float division then convert to int like int(float(6)/-132)"
                    },
                    {
                        "username": "nghuuminh03",
                        "content": "guys his comment was 8 years ago"
                    },
                    {
                        "username": "andynullwong",
                        "content": "6/(-132) = -0.04545454545. Make sure that the method you are using is rounding towards zero, For example in javascript Math.floor will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case)"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "The question asks to round towards zero. So if it is negative, round to greater integer. If positive round to smaller integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "Simplest solution to your problem can be \\n`do the Float Division then convert the result into int`"
                    },
                    {
                        "username": "arobe91594",
                        "content": "[@tharunbalaji31](/tharunbalaji31) \\nIt is heavily dependent on the language (for some languages, rounding behavior can even differ from compiler to compiler, ex. C)\\n\\nFor this problem, the desired behavior is rounding toward zero, but it is important to note that this is different than rounding toward -infinity. Rounding \"down\" can be interpreted either way."
                    },
                    {
                        "username": "tharunbalaji31",
                        "content": "Yeah I too got the same result, try using int(6/-132), you would get 0"
                    },
                    {
                        "username": "choprasrishti01",
                        "content": "python will take floor automatically and return the result rounded off to -1 \\nas [@Luc Taylor](/godshiva) said you can instead divide first and then convert to integer . example: int(b/a)\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "You can probably guess why I\\'m reading your comment :)  \\nIt appears, comparing a passing version with my failing version, for python at least\\nWhat I typed was `o1 // o2` and what I needed to type, to make it pass was `int(o1/o2)`"
                    },
                    {
                        "username": "Ahmed-Hodhod",
                        "content": "Just a note, i don\\'t know if it is mentioned below or not,\\nmath.trunc() : Python has a builtin method to do truncation for us\\n\\nTruncation toward Zero is simply like that :\\n5/ 2 = 2\\n-5 / 2 = -2\\nalways go toward zero"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "Also you could use type conversion with floating division like:\\nint(5/2) = 2\\nint(-5/2) = -2"
                    },
                    {
                        "username": "shivamrawat2626",
                        "content": "Line 23: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:32:28\\n\\nelse if(tokens[i]==\"*\")\\n                    s.push(v2*v1);"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "if you declare stack as ```stack<long long>``` then the problem will be solve "
                    },
                    {
                        "username": "saiful1604008",
                        "content": "[@lrazo](/lrazo) you need to use long long if overflow occurs."
                    },
                    {
                        "username": "lrazo",
                        "content": "I had the same problem, but it was solved casting to `(long long)`\n`res = (long long) v1 * v2;`"
                    },
                    {
                        "username": "Enzhou",
                        "content": "for java, 6/-132 = 0\\nbut in python 6/-132 = -1\\n\\nany comments?"
                    },
                    {
                        "username": "Triquetra",
                        "content": "Workaround without resorting to floating point: `a//b if a*b >= 0 else -(-a//b)`."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "I guess it\\'e becuase Java implements truncated division and python implements floored division"
                    },
                    {
                        "username": "amanchandna",
                        "content": "[@sumitChoube238](/sumitChoube238) \\uD83E\\uDD23\\uD83E\\uDD23"
                    },
                    {
                        "username": "sumitChoube238",
                        "content": "[@pingvaibhav](/pingvaibhav)  bro vo comment 2014 se hai \\n"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "Convert to floating, then calculate and round accordingly"
                    },
                    {
                        "username": "natitati",
                        "content": "I am going insane."
                    },
                    {
                        "username": "himanshu1910",
                        "content": "[\"4\",\"-2\",\"/\",\"2\",\"-3\",\"-\",\"-\"]\n\ncan someone explain this test case how the answer is -7\n\nMy solution:-\n```\nclass Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stck =[]\n        for t in tokens:\n            if t not in [\"+\", \"-\", \"*\", \"/\"]:\n                stck.append(t)\n            else:\n                a=stck.pop()\n                b=stck.pop()\n                stck.append(self.perform(t, b, a))\n                \n        return int(stck[0])\n                \n    def perform(self, op, b, a):\n        b, a =int(b), int(a)\n        if op ==\"+\":\n            return b+a\n        elif op == \"-\":\n            return b-a\n        elif op == \"*\":\n            return b*a\n        else:\n            return math.floor(abs(b)/abs(a))\n```"
                    },
                    {
                        "username": "Yogi_978",
                        "content": "stack[4,-2]        op= 4/-2 =-2\nstack[-2,2,3]     op=2-(-3)=5\nstack[-2,5]    op=-2-(5)=-7    hence the answer\n\nremove abs in code : we dont need that\nremove floor division: use int(a/b)  that should work....."
                    },
                    {
                        "username": "ajsdo222",
                        "content": "[@KatappaSR](/KatappaSR) The last one seems incorrect. Shouldn\\'t this be like this?\\n\\n[\"4\", \"-2\", \"/\", \"2\", \"-3\", \"-\", \"-\"]\\n\\nStack: []\\n\\n\"4\": push 4 onto the stack\\nStack: [4]\\n\\n\"-2\": push -2 onto the stack\\nStack: [4, -2]\\n\\n\"/\": pop -2 and 4 from the stack, divide 4 by -2, and push the result (which is -2) onto the stack\\nStack: [-2]\\n\\n\"2\": push 2 onto the stack\\nStack: [-2, 2]\\n\\n\"-3\": push -3 onto the stack\\nStack: [-2, 2, -3]\\n\\n\"-\": pop -3 and 2 from the stack, subtract 2 from -3, and push the result (which is -5) onto the stack\\nStack: [-2, -5]\\n\\n\"-\": pop -5 and -2 from the stack, subtract -2 from -5, and push the result (which is -3) onto the stack\\nStack: [-3]\\n\\nThe final result is -3."
                    },
                    {
                        "username": "aryansuvarna",
                        "content": "[@KatappaSR](/KatappaSR) shouldn\\'t 4 / -2 yield 0. I thought we always truncate to 0"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "You perform the operation as soon as operator is encountered\\nSo 4 -2 / 2 -3 - -\\nFirst is division  (4 / -2) 2 -3 - -which makes it -2 2 -3 - -\\nThen subtraction -2 2 - (-3) - which makes it -2 5 -\\nThen again subtraction -2 - 5 which makes it -7"
                    },
                    {
                        "username": "tpolm",
                        "content": "e g 200 200 200 200 200 * * * * \\n\\nthe tests from judges do not seem to test for the large results. the custom test like this breaks online judge completely;)\\n\\nthe original problem makes it clear that long arithmetic is needed, otherwise ir is not even \"meduim\", but \"\\n\\n"
                    },
                    {
                        "username": "nathankm",
                        "content": "I think integer overflow issues are a valid programming issue to work around, but to me it just seems kind of annoying to deal with in leetcode problems. In almost most cases, the solution is to just make certain variables and outputs 64-bit integers, which doesn\\'t really add to any sort of problem-solving skills in my opinion. I think it\\'d be better to not include 32-bit integer overflow in problems for which it is not really meaningful. "
                    },
                    {
                        "username": "acearth",
                        "content": "Due to division with negative number have different implements in different platform,     the use case \"\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\"  for mentioned question can NOT work well in ruby.\\n\\nIn ruby, division with negative number will generate integer result close to negative infinite, which is opposite to C and others.  \\n\\nIs my fault, or the use case should be modified? thx"
                    },
                    {
                        "username": "silvere",
                        "content": "Why NPR of [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"] got 22?not 12?\\n\\nThanks."
                    },
                    {
                        "username": "bosnma",
                        "content": "tends to 0... means, 1.3 will be floored to 1 while -1.3 will be ceiled to -1"
                    }
                ]
            },
            {
                "id": 1574136,
                "content": [
                    {
                        "username": "yfdyyy",
                        "content": "when I test [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"], \\nin this program, the result I got is 12, I think I am right. Because when I calculate 6/(-132) = -1, not 0, so i think the result is 12 not 22."
                    },
                    {
                        "username": "nonethewiser",
                        "content": "\"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "soleo",
                        "content": "If you are using `//` in python3, that would be the root cause for the test to fail. Check https://stackoverflow.com/questions/19517868/integer-division-by-negative-number"
                    },
                    {
                        "username": "TheSuperGroot",
                        "content": "[@nghuuminh03](/nghuuminh03) maybe he /she is still  looking"
                    },
                    {
                        "username": "0biwan",
                        "content": "[@jitendra_nagar_50](/jitendra_nagar_50) int(6 / -132), no need for `float()` type conversion. Result will be float anyway"
                    },
                    {
                        "username": "jitendra_nagar_50",
                        "content": "Do float division then convert to int like int(float(6)/-132)"
                    },
                    {
                        "username": "nghuuminh03",
                        "content": "guys his comment was 8 years ago"
                    },
                    {
                        "username": "andynullwong",
                        "content": "6/(-132) = -0.04545454545. Make sure that the method you are using is rounding towards zero, For example in javascript Math.floor will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case)"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "The question asks to round towards zero. So if it is negative, round to greater integer. If positive round to smaller integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "Simplest solution to your problem can be \\n`do the Float Division then convert the result into int`"
                    },
                    {
                        "username": "arobe91594",
                        "content": "[@tharunbalaji31](/tharunbalaji31) \\nIt is heavily dependent on the language (for some languages, rounding behavior can even differ from compiler to compiler, ex. C)\\n\\nFor this problem, the desired behavior is rounding toward zero, but it is important to note that this is different than rounding toward -infinity. Rounding \"down\" can be interpreted either way."
                    },
                    {
                        "username": "tharunbalaji31",
                        "content": "Yeah I too got the same result, try using int(6/-132), you would get 0"
                    },
                    {
                        "username": "choprasrishti01",
                        "content": "python will take floor automatically and return the result rounded off to -1 \\nas [@Luc Taylor](/godshiva) said you can instead divide first and then convert to integer . example: int(b/a)\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "You can probably guess why I\\'m reading your comment :)  \\nIt appears, comparing a passing version with my failing version, for python at least\\nWhat I typed was `o1 // o2` and what I needed to type, to make it pass was `int(o1/o2)`"
                    },
                    {
                        "username": "Ahmed-Hodhod",
                        "content": "Just a note, i don\\'t know if it is mentioned below or not,\\nmath.trunc() : Python has a builtin method to do truncation for us\\n\\nTruncation toward Zero is simply like that :\\n5/ 2 = 2\\n-5 / 2 = -2\\nalways go toward zero"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "Also you could use type conversion with floating division like:\\nint(5/2) = 2\\nint(-5/2) = -2"
                    },
                    {
                        "username": "shivamrawat2626",
                        "content": "Line 23: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:32:28\\n\\nelse if(tokens[i]==\"*\")\\n                    s.push(v2*v1);"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "if you declare stack as ```stack<long long>``` then the problem will be solve "
                    },
                    {
                        "username": "saiful1604008",
                        "content": "[@lrazo](/lrazo) you need to use long long if overflow occurs."
                    },
                    {
                        "username": "lrazo",
                        "content": "I had the same problem, but it was solved casting to `(long long)`\n`res = (long long) v1 * v2;`"
                    },
                    {
                        "username": "Enzhou",
                        "content": "for java, 6/-132 = 0\\nbut in python 6/-132 = -1\\n\\nany comments?"
                    },
                    {
                        "username": "Triquetra",
                        "content": "Workaround without resorting to floating point: `a//b if a*b >= 0 else -(-a//b)`."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "I guess it\\'e becuase Java implements truncated division and python implements floored division"
                    },
                    {
                        "username": "amanchandna",
                        "content": "[@sumitChoube238](/sumitChoube238) \\uD83E\\uDD23\\uD83E\\uDD23"
                    },
                    {
                        "username": "sumitChoube238",
                        "content": "[@pingvaibhav](/pingvaibhav)  bro vo comment 2014 se hai \\n"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "Convert to floating, then calculate and round accordingly"
                    },
                    {
                        "username": "natitati",
                        "content": "I am going insane."
                    },
                    {
                        "username": "himanshu1910",
                        "content": "[\"4\",\"-2\",\"/\",\"2\",\"-3\",\"-\",\"-\"]\n\ncan someone explain this test case how the answer is -7\n\nMy solution:-\n```\nclass Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stck =[]\n        for t in tokens:\n            if t not in [\"+\", \"-\", \"*\", \"/\"]:\n                stck.append(t)\n            else:\n                a=stck.pop()\n                b=stck.pop()\n                stck.append(self.perform(t, b, a))\n                \n        return int(stck[0])\n                \n    def perform(self, op, b, a):\n        b, a =int(b), int(a)\n        if op ==\"+\":\n            return b+a\n        elif op == \"-\":\n            return b-a\n        elif op == \"*\":\n            return b*a\n        else:\n            return math.floor(abs(b)/abs(a))\n```"
                    },
                    {
                        "username": "Yogi_978",
                        "content": "stack[4,-2]        op= 4/-2 =-2\nstack[-2,2,3]     op=2-(-3)=5\nstack[-2,5]    op=-2-(5)=-7    hence the answer\n\nremove abs in code : we dont need that\nremove floor division: use int(a/b)  that should work....."
                    },
                    {
                        "username": "ajsdo222",
                        "content": "[@KatappaSR](/KatappaSR) The last one seems incorrect. Shouldn\\'t this be like this?\\n\\n[\"4\", \"-2\", \"/\", \"2\", \"-3\", \"-\", \"-\"]\\n\\nStack: []\\n\\n\"4\": push 4 onto the stack\\nStack: [4]\\n\\n\"-2\": push -2 onto the stack\\nStack: [4, -2]\\n\\n\"/\": pop -2 and 4 from the stack, divide 4 by -2, and push the result (which is -2) onto the stack\\nStack: [-2]\\n\\n\"2\": push 2 onto the stack\\nStack: [-2, 2]\\n\\n\"-3\": push -3 onto the stack\\nStack: [-2, 2, -3]\\n\\n\"-\": pop -3 and 2 from the stack, subtract 2 from -3, and push the result (which is -5) onto the stack\\nStack: [-2, -5]\\n\\n\"-\": pop -5 and -2 from the stack, subtract -2 from -5, and push the result (which is -3) onto the stack\\nStack: [-3]\\n\\nThe final result is -3."
                    },
                    {
                        "username": "aryansuvarna",
                        "content": "[@KatappaSR](/KatappaSR) shouldn\\'t 4 / -2 yield 0. I thought we always truncate to 0"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "You perform the operation as soon as operator is encountered\\nSo 4 -2 / 2 -3 - -\\nFirst is division  (4 / -2) 2 -3 - -which makes it -2 2 -3 - -\\nThen subtraction -2 2 - (-3) - which makes it -2 5 -\\nThen again subtraction -2 - 5 which makes it -7"
                    },
                    {
                        "username": "tpolm",
                        "content": "e g 200 200 200 200 200 * * * * \\n\\nthe tests from judges do not seem to test for the large results. the custom test like this breaks online judge completely;)\\n\\nthe original problem makes it clear that long arithmetic is needed, otherwise ir is not even \"meduim\", but \"\\n\\n"
                    },
                    {
                        "username": "nathankm",
                        "content": "I think integer overflow issues are a valid programming issue to work around, but to me it just seems kind of annoying to deal with in leetcode problems. In almost most cases, the solution is to just make certain variables and outputs 64-bit integers, which doesn\\'t really add to any sort of problem-solving skills in my opinion. I think it\\'d be better to not include 32-bit integer overflow in problems for which it is not really meaningful. "
                    },
                    {
                        "username": "acearth",
                        "content": "Due to division with negative number have different implements in different platform,     the use case \"\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\"  for mentioned question can NOT work well in ruby.\\n\\nIn ruby, division with negative number will generate integer result close to negative infinite, which is opposite to C and others.  \\n\\nIs my fault, or the use case should be modified? thx"
                    },
                    {
                        "username": "silvere",
                        "content": "Why NPR of [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"] got 22?not 12?\\n\\nThanks."
                    },
                    {
                        "username": "bosnma",
                        "content": "tends to 0... means, 1.3 will be floored to 1 while -1.3 will be ceiled to -1"
                    }
                ]
            },
            {
                "id": 1711236,
                "content": [
                    {
                        "username": "yfdyyy",
                        "content": "when I test [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"], \\nin this program, the result I got is 12, I think I am right. Because when I calculate 6/(-132) = -1, not 0, so i think the result is 12 not 22."
                    },
                    {
                        "username": "nonethewiser",
                        "content": "\"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "soleo",
                        "content": "If you are using `//` in python3, that would be the root cause for the test to fail. Check https://stackoverflow.com/questions/19517868/integer-division-by-negative-number"
                    },
                    {
                        "username": "TheSuperGroot",
                        "content": "[@nghuuminh03](/nghuuminh03) maybe he /she is still  looking"
                    },
                    {
                        "username": "0biwan",
                        "content": "[@jitendra_nagar_50](/jitendra_nagar_50) int(6 / -132), no need for `float()` type conversion. Result will be float anyway"
                    },
                    {
                        "username": "jitendra_nagar_50",
                        "content": "Do float division then convert to int like int(float(6)/-132)"
                    },
                    {
                        "username": "nghuuminh03",
                        "content": "guys his comment was 8 years ago"
                    },
                    {
                        "username": "andynullwong",
                        "content": "6/(-132) = -0.04545454545. Make sure that the method you are using is rounding towards zero, For example in javascript Math.floor will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case)"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "The question asks to round towards zero. So if it is negative, round to greater integer. If positive round to smaller integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "Simplest solution to your problem can be \\n`do the Float Division then convert the result into int`"
                    },
                    {
                        "username": "arobe91594",
                        "content": "[@tharunbalaji31](/tharunbalaji31) \\nIt is heavily dependent on the language (for some languages, rounding behavior can even differ from compiler to compiler, ex. C)\\n\\nFor this problem, the desired behavior is rounding toward zero, but it is important to note that this is different than rounding toward -infinity. Rounding \"down\" can be interpreted either way."
                    },
                    {
                        "username": "tharunbalaji31",
                        "content": "Yeah I too got the same result, try using int(6/-132), you would get 0"
                    },
                    {
                        "username": "choprasrishti01",
                        "content": "python will take floor automatically and return the result rounded off to -1 \\nas [@Luc Taylor](/godshiva) said you can instead divide first and then convert to integer . example: int(b/a)\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "You can probably guess why I\\'m reading your comment :)  \\nIt appears, comparing a passing version with my failing version, for python at least\\nWhat I typed was `o1 // o2` and what I needed to type, to make it pass was `int(o1/o2)`"
                    },
                    {
                        "username": "Ahmed-Hodhod",
                        "content": "Just a note, i don\\'t know if it is mentioned below or not,\\nmath.trunc() : Python has a builtin method to do truncation for us\\n\\nTruncation toward Zero is simply like that :\\n5/ 2 = 2\\n-5 / 2 = -2\\nalways go toward zero"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "Also you could use type conversion with floating division like:\\nint(5/2) = 2\\nint(-5/2) = -2"
                    },
                    {
                        "username": "shivamrawat2626",
                        "content": "Line 23: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:32:28\\n\\nelse if(tokens[i]==\"*\")\\n                    s.push(v2*v1);"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "if you declare stack as ```stack<long long>``` then the problem will be solve "
                    },
                    {
                        "username": "saiful1604008",
                        "content": "[@lrazo](/lrazo) you need to use long long if overflow occurs."
                    },
                    {
                        "username": "lrazo",
                        "content": "I had the same problem, but it was solved casting to `(long long)`\n`res = (long long) v1 * v2;`"
                    },
                    {
                        "username": "Enzhou",
                        "content": "for java, 6/-132 = 0\\nbut in python 6/-132 = -1\\n\\nany comments?"
                    },
                    {
                        "username": "Triquetra",
                        "content": "Workaround without resorting to floating point: `a//b if a*b >= 0 else -(-a//b)`."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "I guess it\\'e becuase Java implements truncated division and python implements floored division"
                    },
                    {
                        "username": "amanchandna",
                        "content": "[@sumitChoube238](/sumitChoube238) \\uD83E\\uDD23\\uD83E\\uDD23"
                    },
                    {
                        "username": "sumitChoube238",
                        "content": "[@pingvaibhav](/pingvaibhav)  bro vo comment 2014 se hai \\n"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "Convert to floating, then calculate and round accordingly"
                    },
                    {
                        "username": "natitati",
                        "content": "I am going insane."
                    },
                    {
                        "username": "himanshu1910",
                        "content": "[\"4\",\"-2\",\"/\",\"2\",\"-3\",\"-\",\"-\"]\n\ncan someone explain this test case how the answer is -7\n\nMy solution:-\n```\nclass Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stck =[]\n        for t in tokens:\n            if t not in [\"+\", \"-\", \"*\", \"/\"]:\n                stck.append(t)\n            else:\n                a=stck.pop()\n                b=stck.pop()\n                stck.append(self.perform(t, b, a))\n                \n        return int(stck[0])\n                \n    def perform(self, op, b, a):\n        b, a =int(b), int(a)\n        if op ==\"+\":\n            return b+a\n        elif op == \"-\":\n            return b-a\n        elif op == \"*\":\n            return b*a\n        else:\n            return math.floor(abs(b)/abs(a))\n```"
                    },
                    {
                        "username": "Yogi_978",
                        "content": "stack[4,-2]        op= 4/-2 =-2\nstack[-2,2,3]     op=2-(-3)=5\nstack[-2,5]    op=-2-(5)=-7    hence the answer\n\nremove abs in code : we dont need that\nremove floor division: use int(a/b)  that should work....."
                    },
                    {
                        "username": "ajsdo222",
                        "content": "[@KatappaSR](/KatappaSR) The last one seems incorrect. Shouldn\\'t this be like this?\\n\\n[\"4\", \"-2\", \"/\", \"2\", \"-3\", \"-\", \"-\"]\\n\\nStack: []\\n\\n\"4\": push 4 onto the stack\\nStack: [4]\\n\\n\"-2\": push -2 onto the stack\\nStack: [4, -2]\\n\\n\"/\": pop -2 and 4 from the stack, divide 4 by -2, and push the result (which is -2) onto the stack\\nStack: [-2]\\n\\n\"2\": push 2 onto the stack\\nStack: [-2, 2]\\n\\n\"-3\": push -3 onto the stack\\nStack: [-2, 2, -3]\\n\\n\"-\": pop -3 and 2 from the stack, subtract 2 from -3, and push the result (which is -5) onto the stack\\nStack: [-2, -5]\\n\\n\"-\": pop -5 and -2 from the stack, subtract -2 from -5, and push the result (which is -3) onto the stack\\nStack: [-3]\\n\\nThe final result is -3."
                    },
                    {
                        "username": "aryansuvarna",
                        "content": "[@KatappaSR](/KatappaSR) shouldn\\'t 4 / -2 yield 0. I thought we always truncate to 0"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "You perform the operation as soon as operator is encountered\\nSo 4 -2 / 2 -3 - -\\nFirst is division  (4 / -2) 2 -3 - -which makes it -2 2 -3 - -\\nThen subtraction -2 2 - (-3) - which makes it -2 5 -\\nThen again subtraction -2 - 5 which makes it -7"
                    },
                    {
                        "username": "tpolm",
                        "content": "e g 200 200 200 200 200 * * * * \\n\\nthe tests from judges do not seem to test for the large results. the custom test like this breaks online judge completely;)\\n\\nthe original problem makes it clear that long arithmetic is needed, otherwise ir is not even \"meduim\", but \"\\n\\n"
                    },
                    {
                        "username": "nathankm",
                        "content": "I think integer overflow issues are a valid programming issue to work around, but to me it just seems kind of annoying to deal with in leetcode problems. In almost most cases, the solution is to just make certain variables and outputs 64-bit integers, which doesn\\'t really add to any sort of problem-solving skills in my opinion. I think it\\'d be better to not include 32-bit integer overflow in problems for which it is not really meaningful. "
                    },
                    {
                        "username": "acearth",
                        "content": "Due to division with negative number have different implements in different platform,     the use case \"\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\"  for mentioned question can NOT work well in ruby.\\n\\nIn ruby, division with negative number will generate integer result close to negative infinite, which is opposite to C and others.  \\n\\nIs my fault, or the use case should be modified? thx"
                    },
                    {
                        "username": "silvere",
                        "content": "Why NPR of [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"] got 22?not 12?\\n\\nThanks."
                    },
                    {
                        "username": "bosnma",
                        "content": "tends to 0... means, 1.3 will be floored to 1 while -1.3 will be ceiled to -1"
                    }
                ]
            },
            {
                "id": 1571338,
                "content": [
                    {
                        "username": "yfdyyy",
                        "content": "when I test [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"], \\nin this program, the result I got is 12, I think I am right. Because when I calculate 6/(-132) = -1, not 0, so i think the result is 12 not 22."
                    },
                    {
                        "username": "nonethewiser",
                        "content": "\"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "soleo",
                        "content": "If you are using `//` in python3, that would be the root cause for the test to fail. Check https://stackoverflow.com/questions/19517868/integer-division-by-negative-number"
                    },
                    {
                        "username": "TheSuperGroot",
                        "content": "[@nghuuminh03](/nghuuminh03) maybe he /she is still  looking"
                    },
                    {
                        "username": "0biwan",
                        "content": "[@jitendra_nagar_50](/jitendra_nagar_50) int(6 / -132), no need for `float()` type conversion. Result will be float anyway"
                    },
                    {
                        "username": "jitendra_nagar_50",
                        "content": "Do float division then convert to int like int(float(6)/-132)"
                    },
                    {
                        "username": "nghuuminh03",
                        "content": "guys his comment was 8 years ago"
                    },
                    {
                        "username": "andynullwong",
                        "content": "6/(-132) = -0.04545454545. Make sure that the method you are using is rounding towards zero, For example in javascript Math.floor will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case)"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "The question asks to round towards zero. So if it is negative, round to greater integer. If positive round to smaller integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "Simplest solution to your problem can be \\n`do the Float Division then convert the result into int`"
                    },
                    {
                        "username": "arobe91594",
                        "content": "[@tharunbalaji31](/tharunbalaji31) \\nIt is heavily dependent on the language (for some languages, rounding behavior can even differ from compiler to compiler, ex. C)\\n\\nFor this problem, the desired behavior is rounding toward zero, but it is important to note that this is different than rounding toward -infinity. Rounding \"down\" can be interpreted either way."
                    },
                    {
                        "username": "tharunbalaji31",
                        "content": "Yeah I too got the same result, try using int(6/-132), you would get 0"
                    },
                    {
                        "username": "choprasrishti01",
                        "content": "python will take floor automatically and return the result rounded off to -1 \\nas [@Luc Taylor](/godshiva) said you can instead divide first and then convert to integer . example: int(b/a)\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "You can probably guess why I\\'m reading your comment :)  \\nIt appears, comparing a passing version with my failing version, for python at least\\nWhat I typed was `o1 // o2` and what I needed to type, to make it pass was `int(o1/o2)`"
                    },
                    {
                        "username": "Ahmed-Hodhod",
                        "content": "Just a note, i don\\'t know if it is mentioned below or not,\\nmath.trunc() : Python has a builtin method to do truncation for us\\n\\nTruncation toward Zero is simply like that :\\n5/ 2 = 2\\n-5 / 2 = -2\\nalways go toward zero"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "Also you could use type conversion with floating division like:\\nint(5/2) = 2\\nint(-5/2) = -2"
                    },
                    {
                        "username": "shivamrawat2626",
                        "content": "Line 23: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:32:28\\n\\nelse if(tokens[i]==\"*\")\\n                    s.push(v2*v1);"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "if you declare stack as ```stack<long long>``` then the problem will be solve "
                    },
                    {
                        "username": "saiful1604008",
                        "content": "[@lrazo](/lrazo) you need to use long long if overflow occurs."
                    },
                    {
                        "username": "lrazo",
                        "content": "I had the same problem, but it was solved casting to `(long long)`\n`res = (long long) v1 * v2;`"
                    },
                    {
                        "username": "Enzhou",
                        "content": "for java, 6/-132 = 0\\nbut in python 6/-132 = -1\\n\\nany comments?"
                    },
                    {
                        "username": "Triquetra",
                        "content": "Workaround without resorting to floating point: `a//b if a*b >= 0 else -(-a//b)`."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "I guess it\\'e becuase Java implements truncated division and python implements floored division"
                    },
                    {
                        "username": "amanchandna",
                        "content": "[@sumitChoube238](/sumitChoube238) \\uD83E\\uDD23\\uD83E\\uDD23"
                    },
                    {
                        "username": "sumitChoube238",
                        "content": "[@pingvaibhav](/pingvaibhav)  bro vo comment 2014 se hai \\n"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "Convert to floating, then calculate and round accordingly"
                    },
                    {
                        "username": "natitati",
                        "content": "I am going insane."
                    },
                    {
                        "username": "himanshu1910",
                        "content": "[\"4\",\"-2\",\"/\",\"2\",\"-3\",\"-\",\"-\"]\n\ncan someone explain this test case how the answer is -7\n\nMy solution:-\n```\nclass Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stck =[]\n        for t in tokens:\n            if t not in [\"+\", \"-\", \"*\", \"/\"]:\n                stck.append(t)\n            else:\n                a=stck.pop()\n                b=stck.pop()\n                stck.append(self.perform(t, b, a))\n                \n        return int(stck[0])\n                \n    def perform(self, op, b, a):\n        b, a =int(b), int(a)\n        if op ==\"+\":\n            return b+a\n        elif op == \"-\":\n            return b-a\n        elif op == \"*\":\n            return b*a\n        else:\n            return math.floor(abs(b)/abs(a))\n```"
                    },
                    {
                        "username": "Yogi_978",
                        "content": "stack[4,-2]        op= 4/-2 =-2\nstack[-2,2,3]     op=2-(-3)=5\nstack[-2,5]    op=-2-(5)=-7    hence the answer\n\nremove abs in code : we dont need that\nremove floor division: use int(a/b)  that should work....."
                    },
                    {
                        "username": "ajsdo222",
                        "content": "[@KatappaSR](/KatappaSR) The last one seems incorrect. Shouldn\\'t this be like this?\\n\\n[\"4\", \"-2\", \"/\", \"2\", \"-3\", \"-\", \"-\"]\\n\\nStack: []\\n\\n\"4\": push 4 onto the stack\\nStack: [4]\\n\\n\"-2\": push -2 onto the stack\\nStack: [4, -2]\\n\\n\"/\": pop -2 and 4 from the stack, divide 4 by -2, and push the result (which is -2) onto the stack\\nStack: [-2]\\n\\n\"2\": push 2 onto the stack\\nStack: [-2, 2]\\n\\n\"-3\": push -3 onto the stack\\nStack: [-2, 2, -3]\\n\\n\"-\": pop -3 and 2 from the stack, subtract 2 from -3, and push the result (which is -5) onto the stack\\nStack: [-2, -5]\\n\\n\"-\": pop -5 and -2 from the stack, subtract -2 from -5, and push the result (which is -3) onto the stack\\nStack: [-3]\\n\\nThe final result is -3."
                    },
                    {
                        "username": "aryansuvarna",
                        "content": "[@KatappaSR](/KatappaSR) shouldn\\'t 4 / -2 yield 0. I thought we always truncate to 0"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "You perform the operation as soon as operator is encountered\\nSo 4 -2 / 2 -3 - -\\nFirst is division  (4 / -2) 2 -3 - -which makes it -2 2 -3 - -\\nThen subtraction -2 2 - (-3) - which makes it -2 5 -\\nThen again subtraction -2 - 5 which makes it -7"
                    },
                    {
                        "username": "tpolm",
                        "content": "e g 200 200 200 200 200 * * * * \\n\\nthe tests from judges do not seem to test for the large results. the custom test like this breaks online judge completely;)\\n\\nthe original problem makes it clear that long arithmetic is needed, otherwise ir is not even \"meduim\", but \"\\n\\n"
                    },
                    {
                        "username": "nathankm",
                        "content": "I think integer overflow issues are a valid programming issue to work around, but to me it just seems kind of annoying to deal with in leetcode problems. In almost most cases, the solution is to just make certain variables and outputs 64-bit integers, which doesn\\'t really add to any sort of problem-solving skills in my opinion. I think it\\'d be better to not include 32-bit integer overflow in problems for which it is not really meaningful. "
                    },
                    {
                        "username": "acearth",
                        "content": "Due to division with negative number have different implements in different platform,     the use case \"\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\"  for mentioned question can NOT work well in ruby.\\n\\nIn ruby, division with negative number will generate integer result close to negative infinite, which is opposite to C and others.  \\n\\nIs my fault, or the use case should be modified? thx"
                    },
                    {
                        "username": "silvere",
                        "content": "Why NPR of [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"] got 22?not 12?\\n\\nThanks."
                    },
                    {
                        "username": "bosnma",
                        "content": "tends to 0... means, 1.3 will be floored to 1 while -1.3 will be ceiled to -1"
                    }
                ]
            },
            {
                "id": 1908920,
                "content": [
                    {
                        "username": "yfdyyy",
                        "content": "when I test [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"], \\nin this program, the result I got is 12, I think I am right. Because when I calculate 6/(-132) = -1, not 0, so i think the result is 12 not 22."
                    },
                    {
                        "username": "nonethewiser",
                        "content": "\"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "soleo",
                        "content": "If you are using `//` in python3, that would be the root cause for the test to fail. Check https://stackoverflow.com/questions/19517868/integer-division-by-negative-number"
                    },
                    {
                        "username": "TheSuperGroot",
                        "content": "[@nghuuminh03](/nghuuminh03) maybe he /she is still  looking"
                    },
                    {
                        "username": "0biwan",
                        "content": "[@jitendra_nagar_50](/jitendra_nagar_50) int(6 / -132), no need for `float()` type conversion. Result will be float anyway"
                    },
                    {
                        "username": "jitendra_nagar_50",
                        "content": "Do float division then convert to int like int(float(6)/-132)"
                    },
                    {
                        "username": "nghuuminh03",
                        "content": "guys his comment was 8 years ago"
                    },
                    {
                        "username": "andynullwong",
                        "content": "6/(-132) = -0.04545454545. Make sure that the method you are using is rounding towards zero, For example in javascript Math.floor will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case)"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "The question asks to round towards zero. So if it is negative, round to greater integer. If positive round to smaller integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "Simplest solution to your problem can be \\n`do the Float Division then convert the result into int`"
                    },
                    {
                        "username": "arobe91594",
                        "content": "[@tharunbalaji31](/tharunbalaji31) \\nIt is heavily dependent on the language (for some languages, rounding behavior can even differ from compiler to compiler, ex. C)\\n\\nFor this problem, the desired behavior is rounding toward zero, but it is important to note that this is different than rounding toward -infinity. Rounding \"down\" can be interpreted either way."
                    },
                    {
                        "username": "tharunbalaji31",
                        "content": "Yeah I too got the same result, try using int(6/-132), you would get 0"
                    },
                    {
                        "username": "choprasrishti01",
                        "content": "python will take floor automatically and return the result rounded off to -1 \\nas [@Luc Taylor](/godshiva) said you can instead divide first and then convert to integer . example: int(b/a)\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "You can probably guess why I\\'m reading your comment :)  \\nIt appears, comparing a passing version with my failing version, for python at least\\nWhat I typed was `o1 // o2` and what I needed to type, to make it pass was `int(o1/o2)`"
                    },
                    {
                        "username": "Ahmed-Hodhod",
                        "content": "Just a note, i don\\'t know if it is mentioned below or not,\\nmath.trunc() : Python has a builtin method to do truncation for us\\n\\nTruncation toward Zero is simply like that :\\n5/ 2 = 2\\n-5 / 2 = -2\\nalways go toward zero"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "Also you could use type conversion with floating division like:\\nint(5/2) = 2\\nint(-5/2) = -2"
                    },
                    {
                        "username": "shivamrawat2626",
                        "content": "Line 23: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:32:28\\n\\nelse if(tokens[i]==\"*\")\\n                    s.push(v2*v1);"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "if you declare stack as ```stack<long long>``` then the problem will be solve "
                    },
                    {
                        "username": "saiful1604008",
                        "content": "[@lrazo](/lrazo) you need to use long long if overflow occurs."
                    },
                    {
                        "username": "lrazo",
                        "content": "I had the same problem, but it was solved casting to `(long long)`\n`res = (long long) v1 * v2;`"
                    },
                    {
                        "username": "Enzhou",
                        "content": "for java, 6/-132 = 0\\nbut in python 6/-132 = -1\\n\\nany comments?"
                    },
                    {
                        "username": "Triquetra",
                        "content": "Workaround without resorting to floating point: `a//b if a*b >= 0 else -(-a//b)`."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "I guess it\\'e becuase Java implements truncated division and python implements floored division"
                    },
                    {
                        "username": "amanchandna",
                        "content": "[@sumitChoube238](/sumitChoube238) \\uD83E\\uDD23\\uD83E\\uDD23"
                    },
                    {
                        "username": "sumitChoube238",
                        "content": "[@pingvaibhav](/pingvaibhav)  bro vo comment 2014 se hai \\n"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "Convert to floating, then calculate and round accordingly"
                    },
                    {
                        "username": "natitati",
                        "content": "I am going insane."
                    },
                    {
                        "username": "himanshu1910",
                        "content": "[\"4\",\"-2\",\"/\",\"2\",\"-3\",\"-\",\"-\"]\n\ncan someone explain this test case how the answer is -7\n\nMy solution:-\n```\nclass Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stck =[]\n        for t in tokens:\n            if t not in [\"+\", \"-\", \"*\", \"/\"]:\n                stck.append(t)\n            else:\n                a=stck.pop()\n                b=stck.pop()\n                stck.append(self.perform(t, b, a))\n                \n        return int(stck[0])\n                \n    def perform(self, op, b, a):\n        b, a =int(b), int(a)\n        if op ==\"+\":\n            return b+a\n        elif op == \"-\":\n            return b-a\n        elif op == \"*\":\n            return b*a\n        else:\n            return math.floor(abs(b)/abs(a))\n```"
                    },
                    {
                        "username": "Yogi_978",
                        "content": "stack[4,-2]        op= 4/-2 =-2\nstack[-2,2,3]     op=2-(-3)=5\nstack[-2,5]    op=-2-(5)=-7    hence the answer\n\nremove abs in code : we dont need that\nremove floor division: use int(a/b)  that should work....."
                    },
                    {
                        "username": "ajsdo222",
                        "content": "[@KatappaSR](/KatappaSR) The last one seems incorrect. Shouldn\\'t this be like this?\\n\\n[\"4\", \"-2\", \"/\", \"2\", \"-3\", \"-\", \"-\"]\\n\\nStack: []\\n\\n\"4\": push 4 onto the stack\\nStack: [4]\\n\\n\"-2\": push -2 onto the stack\\nStack: [4, -2]\\n\\n\"/\": pop -2 and 4 from the stack, divide 4 by -2, and push the result (which is -2) onto the stack\\nStack: [-2]\\n\\n\"2\": push 2 onto the stack\\nStack: [-2, 2]\\n\\n\"-3\": push -3 onto the stack\\nStack: [-2, 2, -3]\\n\\n\"-\": pop -3 and 2 from the stack, subtract 2 from -3, and push the result (which is -5) onto the stack\\nStack: [-2, -5]\\n\\n\"-\": pop -5 and -2 from the stack, subtract -2 from -5, and push the result (which is -3) onto the stack\\nStack: [-3]\\n\\nThe final result is -3."
                    },
                    {
                        "username": "aryansuvarna",
                        "content": "[@KatappaSR](/KatappaSR) shouldn\\'t 4 / -2 yield 0. I thought we always truncate to 0"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "You perform the operation as soon as operator is encountered\\nSo 4 -2 / 2 -3 - -\\nFirst is division  (4 / -2) 2 -3 - -which makes it -2 2 -3 - -\\nThen subtraction -2 2 - (-3) - which makes it -2 5 -\\nThen again subtraction -2 - 5 which makes it -7"
                    },
                    {
                        "username": "tpolm",
                        "content": "e g 200 200 200 200 200 * * * * \\n\\nthe tests from judges do not seem to test for the large results. the custom test like this breaks online judge completely;)\\n\\nthe original problem makes it clear that long arithmetic is needed, otherwise ir is not even \"meduim\", but \"\\n\\n"
                    },
                    {
                        "username": "nathankm",
                        "content": "I think integer overflow issues are a valid programming issue to work around, but to me it just seems kind of annoying to deal with in leetcode problems. In almost most cases, the solution is to just make certain variables and outputs 64-bit integers, which doesn\\'t really add to any sort of problem-solving skills in my opinion. I think it\\'d be better to not include 32-bit integer overflow in problems for which it is not really meaningful. "
                    },
                    {
                        "username": "acearth",
                        "content": "Due to division with negative number have different implements in different platform,     the use case \"\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\"  for mentioned question can NOT work well in ruby.\\n\\nIn ruby, division with negative number will generate integer result close to negative infinite, which is opposite to C and others.  \\n\\nIs my fault, or the use case should be modified? thx"
                    },
                    {
                        "username": "silvere",
                        "content": "Why NPR of [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"] got 22?not 12?\\n\\nThanks."
                    },
                    {
                        "username": "bosnma",
                        "content": "tends to 0... means, 1.3 will be floored to 1 while -1.3 will be ceiled to -1"
                    }
                ]
            },
            {
                "id": 1719683,
                "content": [
                    {
                        "username": "yfdyyy",
                        "content": "when I test [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"], \\nin this program, the result I got is 12, I think I am right. Because when I calculate 6/(-132) = -1, not 0, so i think the result is 12 not 22."
                    },
                    {
                        "username": "nonethewiser",
                        "content": "\"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "soleo",
                        "content": "If you are using `//` in python3, that would be the root cause for the test to fail. Check https://stackoverflow.com/questions/19517868/integer-division-by-negative-number"
                    },
                    {
                        "username": "TheSuperGroot",
                        "content": "[@nghuuminh03](/nghuuminh03) maybe he /she is still  looking"
                    },
                    {
                        "username": "0biwan",
                        "content": "[@jitendra_nagar_50](/jitendra_nagar_50) int(6 / -132), no need for `float()` type conversion. Result will be float anyway"
                    },
                    {
                        "username": "jitendra_nagar_50",
                        "content": "Do float division then convert to int like int(float(6)/-132)"
                    },
                    {
                        "username": "nghuuminh03",
                        "content": "guys his comment was 8 years ago"
                    },
                    {
                        "username": "andynullwong",
                        "content": "6/(-132) = -0.04545454545. Make sure that the method you are using is rounding towards zero, For example in javascript Math.floor will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case)"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "The question asks to round towards zero. So if it is negative, round to greater integer. If positive round to smaller integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "Simplest solution to your problem can be \\n`do the Float Division then convert the result into int`"
                    },
                    {
                        "username": "arobe91594",
                        "content": "[@tharunbalaji31](/tharunbalaji31) \\nIt is heavily dependent on the language (for some languages, rounding behavior can even differ from compiler to compiler, ex. C)\\n\\nFor this problem, the desired behavior is rounding toward zero, but it is important to note that this is different than rounding toward -infinity. Rounding \"down\" can be interpreted either way."
                    },
                    {
                        "username": "tharunbalaji31",
                        "content": "Yeah I too got the same result, try using int(6/-132), you would get 0"
                    },
                    {
                        "username": "choprasrishti01",
                        "content": "python will take floor automatically and return the result rounded off to -1 \\nas [@Luc Taylor](/godshiva) said you can instead divide first and then convert to integer . example: int(b/a)\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "You can probably guess why I\\'m reading your comment :)  \\nIt appears, comparing a passing version with my failing version, for python at least\\nWhat I typed was `o1 // o2` and what I needed to type, to make it pass was `int(o1/o2)`"
                    },
                    {
                        "username": "Ahmed-Hodhod",
                        "content": "Just a note, i don\\'t know if it is mentioned below or not,\\nmath.trunc() : Python has a builtin method to do truncation for us\\n\\nTruncation toward Zero is simply like that :\\n5/ 2 = 2\\n-5 / 2 = -2\\nalways go toward zero"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "Also you could use type conversion with floating division like:\\nint(5/2) = 2\\nint(-5/2) = -2"
                    },
                    {
                        "username": "shivamrawat2626",
                        "content": "Line 23: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:32:28\\n\\nelse if(tokens[i]==\"*\")\\n                    s.push(v2*v1);"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "if you declare stack as ```stack<long long>``` then the problem will be solve "
                    },
                    {
                        "username": "saiful1604008",
                        "content": "[@lrazo](/lrazo) you need to use long long if overflow occurs."
                    },
                    {
                        "username": "lrazo",
                        "content": "I had the same problem, but it was solved casting to `(long long)`\n`res = (long long) v1 * v2;`"
                    },
                    {
                        "username": "Enzhou",
                        "content": "for java, 6/-132 = 0\\nbut in python 6/-132 = -1\\n\\nany comments?"
                    },
                    {
                        "username": "Triquetra",
                        "content": "Workaround without resorting to floating point: `a//b if a*b >= 0 else -(-a//b)`."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "I guess it\\'e becuase Java implements truncated division and python implements floored division"
                    },
                    {
                        "username": "amanchandna",
                        "content": "[@sumitChoube238](/sumitChoube238) \\uD83E\\uDD23\\uD83E\\uDD23"
                    },
                    {
                        "username": "sumitChoube238",
                        "content": "[@pingvaibhav](/pingvaibhav)  bro vo comment 2014 se hai \\n"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "Convert to floating, then calculate and round accordingly"
                    },
                    {
                        "username": "natitati",
                        "content": "I am going insane."
                    },
                    {
                        "username": "himanshu1910",
                        "content": "[\"4\",\"-2\",\"/\",\"2\",\"-3\",\"-\",\"-\"]\n\ncan someone explain this test case how the answer is -7\n\nMy solution:-\n```\nclass Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stck =[]\n        for t in tokens:\n            if t not in [\"+\", \"-\", \"*\", \"/\"]:\n                stck.append(t)\n            else:\n                a=stck.pop()\n                b=stck.pop()\n                stck.append(self.perform(t, b, a))\n                \n        return int(stck[0])\n                \n    def perform(self, op, b, a):\n        b, a =int(b), int(a)\n        if op ==\"+\":\n            return b+a\n        elif op == \"-\":\n            return b-a\n        elif op == \"*\":\n            return b*a\n        else:\n            return math.floor(abs(b)/abs(a))\n```"
                    },
                    {
                        "username": "Yogi_978",
                        "content": "stack[4,-2]        op= 4/-2 =-2\nstack[-2,2,3]     op=2-(-3)=5\nstack[-2,5]    op=-2-(5)=-7    hence the answer\n\nremove abs in code : we dont need that\nremove floor division: use int(a/b)  that should work....."
                    },
                    {
                        "username": "ajsdo222",
                        "content": "[@KatappaSR](/KatappaSR) The last one seems incorrect. Shouldn\\'t this be like this?\\n\\n[\"4\", \"-2\", \"/\", \"2\", \"-3\", \"-\", \"-\"]\\n\\nStack: []\\n\\n\"4\": push 4 onto the stack\\nStack: [4]\\n\\n\"-2\": push -2 onto the stack\\nStack: [4, -2]\\n\\n\"/\": pop -2 and 4 from the stack, divide 4 by -2, and push the result (which is -2) onto the stack\\nStack: [-2]\\n\\n\"2\": push 2 onto the stack\\nStack: [-2, 2]\\n\\n\"-3\": push -3 onto the stack\\nStack: [-2, 2, -3]\\n\\n\"-\": pop -3 and 2 from the stack, subtract 2 from -3, and push the result (which is -5) onto the stack\\nStack: [-2, -5]\\n\\n\"-\": pop -5 and -2 from the stack, subtract -2 from -5, and push the result (which is -3) onto the stack\\nStack: [-3]\\n\\nThe final result is -3."
                    },
                    {
                        "username": "aryansuvarna",
                        "content": "[@KatappaSR](/KatappaSR) shouldn\\'t 4 / -2 yield 0. I thought we always truncate to 0"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "You perform the operation as soon as operator is encountered\\nSo 4 -2 / 2 -3 - -\\nFirst is division  (4 / -2) 2 -3 - -which makes it -2 2 -3 - -\\nThen subtraction -2 2 - (-3) - which makes it -2 5 -\\nThen again subtraction -2 - 5 which makes it -7"
                    },
                    {
                        "username": "tpolm",
                        "content": "e g 200 200 200 200 200 * * * * \\n\\nthe tests from judges do not seem to test for the large results. the custom test like this breaks online judge completely;)\\n\\nthe original problem makes it clear that long arithmetic is needed, otherwise ir is not even \"meduim\", but \"\\n\\n"
                    },
                    {
                        "username": "nathankm",
                        "content": "I think integer overflow issues are a valid programming issue to work around, but to me it just seems kind of annoying to deal with in leetcode problems. In almost most cases, the solution is to just make certain variables and outputs 64-bit integers, which doesn\\'t really add to any sort of problem-solving skills in my opinion. I think it\\'d be better to not include 32-bit integer overflow in problems for which it is not really meaningful. "
                    },
                    {
                        "username": "acearth",
                        "content": "Due to division with negative number have different implements in different platform,     the use case \"\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\"  for mentioned question can NOT work well in ruby.\\n\\nIn ruby, division with negative number will generate integer result close to negative infinite, which is opposite to C and others.  \\n\\nIs my fault, or the use case should be modified? thx"
                    },
                    {
                        "username": "silvere",
                        "content": "Why NPR of [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"] got 22?not 12?\\n\\nThanks."
                    },
                    {
                        "username": "bosnma",
                        "content": "tends to 0... means, 1.3 will be floored to 1 while -1.3 will be ceiled to -1"
                    }
                ]
            },
            {
                "id": 1576662,
                "content": [
                    {
                        "username": "yfdyyy",
                        "content": "when I test [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"], \\nin this program, the result I got is 12, I think I am right. Because when I calculate 6/(-132) = -1, not 0, so i think the result is 12 not 22."
                    },
                    {
                        "username": "nonethewiser",
                        "content": "\"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "soleo",
                        "content": "If you are using `//` in python3, that would be the root cause for the test to fail. Check https://stackoverflow.com/questions/19517868/integer-division-by-negative-number"
                    },
                    {
                        "username": "TheSuperGroot",
                        "content": "[@nghuuminh03](/nghuuminh03) maybe he /she is still  looking"
                    },
                    {
                        "username": "0biwan",
                        "content": "[@jitendra_nagar_50](/jitendra_nagar_50) int(6 / -132), no need for `float()` type conversion. Result will be float anyway"
                    },
                    {
                        "username": "jitendra_nagar_50",
                        "content": "Do float division then convert to int like int(float(6)/-132)"
                    },
                    {
                        "username": "nghuuminh03",
                        "content": "guys his comment was 8 years ago"
                    },
                    {
                        "username": "andynullwong",
                        "content": "6/(-132) = -0.04545454545. Make sure that the method you are using is rounding towards zero, For example in javascript Math.floor will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case)"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "The question asks to round towards zero. So if it is negative, round to greater integer. If positive round to smaller integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "Simplest solution to your problem can be \\n`do the Float Division then convert the result into int`"
                    },
                    {
                        "username": "arobe91594",
                        "content": "[@tharunbalaji31](/tharunbalaji31) \\nIt is heavily dependent on the language (for some languages, rounding behavior can even differ from compiler to compiler, ex. C)\\n\\nFor this problem, the desired behavior is rounding toward zero, but it is important to note that this is different than rounding toward -infinity. Rounding \"down\" can be interpreted either way."
                    },
                    {
                        "username": "tharunbalaji31",
                        "content": "Yeah I too got the same result, try using int(6/-132), you would get 0"
                    },
                    {
                        "username": "choprasrishti01",
                        "content": "python will take floor automatically and return the result rounded off to -1 \\nas [@Luc Taylor](/godshiva) said you can instead divide first and then convert to integer . example: int(b/a)\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "You can probably guess why I\\'m reading your comment :)  \\nIt appears, comparing a passing version with my failing version, for python at least\\nWhat I typed was `o1 // o2` and what I needed to type, to make it pass was `int(o1/o2)`"
                    },
                    {
                        "username": "Ahmed-Hodhod",
                        "content": "Just a note, i don\\'t know if it is mentioned below or not,\\nmath.trunc() : Python has a builtin method to do truncation for us\\n\\nTruncation toward Zero is simply like that :\\n5/ 2 = 2\\n-5 / 2 = -2\\nalways go toward zero"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "Also you could use type conversion with floating division like:\\nint(5/2) = 2\\nint(-5/2) = -2"
                    },
                    {
                        "username": "shivamrawat2626",
                        "content": "Line 23: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:32:28\\n\\nelse if(tokens[i]==\"*\")\\n                    s.push(v2*v1);"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "if you declare stack as ```stack<long long>``` then the problem will be solve "
                    },
                    {
                        "username": "saiful1604008",
                        "content": "[@lrazo](/lrazo) you need to use long long if overflow occurs."
                    },
                    {
                        "username": "lrazo",
                        "content": "I had the same problem, but it was solved casting to `(long long)`\n`res = (long long) v1 * v2;`"
                    },
                    {
                        "username": "Enzhou",
                        "content": "for java, 6/-132 = 0\\nbut in python 6/-132 = -1\\n\\nany comments?"
                    },
                    {
                        "username": "Triquetra",
                        "content": "Workaround without resorting to floating point: `a//b if a*b >= 0 else -(-a//b)`."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "I guess it\\'e becuase Java implements truncated division and python implements floored division"
                    },
                    {
                        "username": "amanchandna",
                        "content": "[@sumitChoube238](/sumitChoube238) \\uD83E\\uDD23\\uD83E\\uDD23"
                    },
                    {
                        "username": "sumitChoube238",
                        "content": "[@pingvaibhav](/pingvaibhav)  bro vo comment 2014 se hai \\n"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "Convert to floating, then calculate and round accordingly"
                    },
                    {
                        "username": "natitati",
                        "content": "I am going insane."
                    },
                    {
                        "username": "himanshu1910",
                        "content": "[\"4\",\"-2\",\"/\",\"2\",\"-3\",\"-\",\"-\"]\n\ncan someone explain this test case how the answer is -7\n\nMy solution:-\n```\nclass Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stck =[]\n        for t in tokens:\n            if t not in [\"+\", \"-\", \"*\", \"/\"]:\n                stck.append(t)\n            else:\n                a=stck.pop()\n                b=stck.pop()\n                stck.append(self.perform(t, b, a))\n                \n        return int(stck[0])\n                \n    def perform(self, op, b, a):\n        b, a =int(b), int(a)\n        if op ==\"+\":\n            return b+a\n        elif op == \"-\":\n            return b-a\n        elif op == \"*\":\n            return b*a\n        else:\n            return math.floor(abs(b)/abs(a))\n```"
                    },
                    {
                        "username": "Yogi_978",
                        "content": "stack[4,-2]        op= 4/-2 =-2\nstack[-2,2,3]     op=2-(-3)=5\nstack[-2,5]    op=-2-(5)=-7    hence the answer\n\nremove abs in code : we dont need that\nremove floor division: use int(a/b)  that should work....."
                    },
                    {
                        "username": "ajsdo222",
                        "content": "[@KatappaSR](/KatappaSR) The last one seems incorrect. Shouldn\\'t this be like this?\\n\\n[\"4\", \"-2\", \"/\", \"2\", \"-3\", \"-\", \"-\"]\\n\\nStack: []\\n\\n\"4\": push 4 onto the stack\\nStack: [4]\\n\\n\"-2\": push -2 onto the stack\\nStack: [4, -2]\\n\\n\"/\": pop -2 and 4 from the stack, divide 4 by -2, and push the result (which is -2) onto the stack\\nStack: [-2]\\n\\n\"2\": push 2 onto the stack\\nStack: [-2, 2]\\n\\n\"-3\": push -3 onto the stack\\nStack: [-2, 2, -3]\\n\\n\"-\": pop -3 and 2 from the stack, subtract 2 from -3, and push the result (which is -5) onto the stack\\nStack: [-2, -5]\\n\\n\"-\": pop -5 and -2 from the stack, subtract -2 from -5, and push the result (which is -3) onto the stack\\nStack: [-3]\\n\\nThe final result is -3."
                    },
                    {
                        "username": "aryansuvarna",
                        "content": "[@KatappaSR](/KatappaSR) shouldn\\'t 4 / -2 yield 0. I thought we always truncate to 0"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "You perform the operation as soon as operator is encountered\\nSo 4 -2 / 2 -3 - -\\nFirst is division  (4 / -2) 2 -3 - -which makes it -2 2 -3 - -\\nThen subtraction -2 2 - (-3) - which makes it -2 5 -\\nThen again subtraction -2 - 5 which makes it -7"
                    },
                    {
                        "username": "tpolm",
                        "content": "e g 200 200 200 200 200 * * * * \\n\\nthe tests from judges do not seem to test for the large results. the custom test like this breaks online judge completely;)\\n\\nthe original problem makes it clear that long arithmetic is needed, otherwise ir is not even \"meduim\", but \"\\n\\n"
                    },
                    {
                        "username": "nathankm",
                        "content": "I think integer overflow issues are a valid programming issue to work around, but to me it just seems kind of annoying to deal with in leetcode problems. In almost most cases, the solution is to just make certain variables and outputs 64-bit integers, which doesn\\'t really add to any sort of problem-solving skills in my opinion. I think it\\'d be better to not include 32-bit integer overflow in problems for which it is not really meaningful. "
                    },
                    {
                        "username": "acearth",
                        "content": "Due to division with negative number have different implements in different platform,     the use case \"\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\"  for mentioned question can NOT work well in ruby.\\n\\nIn ruby, division with negative number will generate integer result close to negative infinite, which is opposite to C and others.  \\n\\nIs my fault, or the use case should be modified? thx"
                    },
                    {
                        "username": "silvere",
                        "content": "Why NPR of [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"] got 22?not 12?\\n\\nThanks."
                    },
                    {
                        "username": "bosnma",
                        "content": "tends to 0... means, 1.3 will be floored to 1 while -1.3 will be ceiled to -1"
                    }
                ]
            },
            {
                "id": 1719598,
                "content": [
                    {
                        "username": "yfdyyy",
                        "content": "when I test [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"], \\nin this program, the result I got is 12, I think I am right. Because when I calculate 6/(-132) = -1, not 0, so i think the result is 12 not 22."
                    },
                    {
                        "username": "nonethewiser",
                        "content": "\"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "soleo",
                        "content": "If you are using `//` in python3, that would be the root cause for the test to fail. Check https://stackoverflow.com/questions/19517868/integer-division-by-negative-number"
                    },
                    {
                        "username": "TheSuperGroot",
                        "content": "[@nghuuminh03](/nghuuminh03) maybe he /she is still  looking"
                    },
                    {
                        "username": "0biwan",
                        "content": "[@jitendra_nagar_50](/jitendra_nagar_50) int(6 / -132), no need for `float()` type conversion. Result will be float anyway"
                    },
                    {
                        "username": "jitendra_nagar_50",
                        "content": "Do float division then convert to int like int(float(6)/-132)"
                    },
                    {
                        "username": "nghuuminh03",
                        "content": "guys his comment was 8 years ago"
                    },
                    {
                        "username": "andynullwong",
                        "content": "6/(-132) = -0.04545454545. Make sure that the method you are using is rounding towards zero, For example in javascript Math.floor will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case)"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "The question asks to round towards zero. So if it is negative, round to greater integer. If positive round to smaller integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "Simplest solution to your problem can be \\n`do the Float Division then convert the result into int`"
                    },
                    {
                        "username": "arobe91594",
                        "content": "[@tharunbalaji31](/tharunbalaji31) \\nIt is heavily dependent on the language (for some languages, rounding behavior can even differ from compiler to compiler, ex. C)\\n\\nFor this problem, the desired behavior is rounding toward zero, but it is important to note that this is different than rounding toward -infinity. Rounding \"down\" can be interpreted either way."
                    },
                    {
                        "username": "tharunbalaji31",
                        "content": "Yeah I too got the same result, try using int(6/-132), you would get 0"
                    },
                    {
                        "username": "choprasrishti01",
                        "content": "python will take floor automatically and return the result rounded off to -1 \\nas [@Luc Taylor](/godshiva) said you can instead divide first and then convert to integer . example: int(b/a)\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "You can probably guess why I\\'m reading your comment :)  \\nIt appears, comparing a passing version with my failing version, for python at least\\nWhat I typed was `o1 // o2` and what I needed to type, to make it pass was `int(o1/o2)`"
                    },
                    {
                        "username": "Ahmed-Hodhod",
                        "content": "Just a note, i don\\'t know if it is mentioned below or not,\\nmath.trunc() : Python has a builtin method to do truncation for us\\n\\nTruncation toward Zero is simply like that :\\n5/ 2 = 2\\n-5 / 2 = -2\\nalways go toward zero"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "Also you could use type conversion with floating division like:\\nint(5/2) = 2\\nint(-5/2) = -2"
                    },
                    {
                        "username": "shivamrawat2626",
                        "content": "Line 23: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:32:28\\n\\nelse if(tokens[i]==\"*\")\\n                    s.push(v2*v1);"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "if you declare stack as ```stack<long long>``` then the problem will be solve "
                    },
                    {
                        "username": "saiful1604008",
                        "content": "[@lrazo](/lrazo) you need to use long long if overflow occurs."
                    },
                    {
                        "username": "lrazo",
                        "content": "I had the same problem, but it was solved casting to `(long long)`\n`res = (long long) v1 * v2;`"
                    },
                    {
                        "username": "Enzhou",
                        "content": "for java, 6/-132 = 0\\nbut in python 6/-132 = -1\\n\\nany comments?"
                    },
                    {
                        "username": "Triquetra",
                        "content": "Workaround without resorting to floating point: `a//b if a*b >= 0 else -(-a//b)`."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "I guess it\\'e becuase Java implements truncated division and python implements floored division"
                    },
                    {
                        "username": "amanchandna",
                        "content": "[@sumitChoube238](/sumitChoube238) \\uD83E\\uDD23\\uD83E\\uDD23"
                    },
                    {
                        "username": "sumitChoube238",
                        "content": "[@pingvaibhav](/pingvaibhav)  bro vo comment 2014 se hai \\n"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "Convert to floating, then calculate and round accordingly"
                    },
                    {
                        "username": "natitati",
                        "content": "I am going insane."
                    },
                    {
                        "username": "himanshu1910",
                        "content": "[\"4\",\"-2\",\"/\",\"2\",\"-3\",\"-\",\"-\"]\n\ncan someone explain this test case how the answer is -7\n\nMy solution:-\n```\nclass Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stck =[]\n        for t in tokens:\n            if t not in [\"+\", \"-\", \"*\", \"/\"]:\n                stck.append(t)\n            else:\n                a=stck.pop()\n                b=stck.pop()\n                stck.append(self.perform(t, b, a))\n                \n        return int(stck[0])\n                \n    def perform(self, op, b, a):\n        b, a =int(b), int(a)\n        if op ==\"+\":\n            return b+a\n        elif op == \"-\":\n            return b-a\n        elif op == \"*\":\n            return b*a\n        else:\n            return math.floor(abs(b)/abs(a))\n```"
                    },
                    {
                        "username": "Yogi_978",
                        "content": "stack[4,-2]        op= 4/-2 =-2\nstack[-2,2,3]     op=2-(-3)=5\nstack[-2,5]    op=-2-(5)=-7    hence the answer\n\nremove abs in code : we dont need that\nremove floor division: use int(a/b)  that should work....."
                    },
                    {
                        "username": "ajsdo222",
                        "content": "[@KatappaSR](/KatappaSR) The last one seems incorrect. Shouldn\\'t this be like this?\\n\\n[\"4\", \"-2\", \"/\", \"2\", \"-3\", \"-\", \"-\"]\\n\\nStack: []\\n\\n\"4\": push 4 onto the stack\\nStack: [4]\\n\\n\"-2\": push -2 onto the stack\\nStack: [4, -2]\\n\\n\"/\": pop -2 and 4 from the stack, divide 4 by -2, and push the result (which is -2) onto the stack\\nStack: [-2]\\n\\n\"2\": push 2 onto the stack\\nStack: [-2, 2]\\n\\n\"-3\": push -3 onto the stack\\nStack: [-2, 2, -3]\\n\\n\"-\": pop -3 and 2 from the stack, subtract 2 from -3, and push the result (which is -5) onto the stack\\nStack: [-2, -5]\\n\\n\"-\": pop -5 and -2 from the stack, subtract -2 from -5, and push the result (which is -3) onto the stack\\nStack: [-3]\\n\\nThe final result is -3."
                    },
                    {
                        "username": "aryansuvarna",
                        "content": "[@KatappaSR](/KatappaSR) shouldn\\'t 4 / -2 yield 0. I thought we always truncate to 0"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "You perform the operation as soon as operator is encountered\\nSo 4 -2 / 2 -3 - -\\nFirst is division  (4 / -2) 2 -3 - -which makes it -2 2 -3 - -\\nThen subtraction -2 2 - (-3) - which makes it -2 5 -\\nThen again subtraction -2 - 5 which makes it -7"
                    },
                    {
                        "username": "tpolm",
                        "content": "e g 200 200 200 200 200 * * * * \\n\\nthe tests from judges do not seem to test for the large results. the custom test like this breaks online judge completely;)\\n\\nthe original problem makes it clear that long arithmetic is needed, otherwise ir is not even \"meduim\", but \"\\n\\n"
                    },
                    {
                        "username": "nathankm",
                        "content": "I think integer overflow issues are a valid programming issue to work around, but to me it just seems kind of annoying to deal with in leetcode problems. In almost most cases, the solution is to just make certain variables and outputs 64-bit integers, which doesn\\'t really add to any sort of problem-solving skills in my opinion. I think it\\'d be better to not include 32-bit integer overflow in problems for which it is not really meaningful. "
                    },
                    {
                        "username": "acearth",
                        "content": "Due to division with negative number have different implements in different platform,     the use case \"\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\"  for mentioned question can NOT work well in ruby.\\n\\nIn ruby, division with negative number will generate integer result close to negative infinite, which is opposite to C and others.  \\n\\nIs my fault, or the use case should be modified? thx"
                    },
                    {
                        "username": "silvere",
                        "content": "Why NPR of [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"] got 22?not 12?\\n\\nThanks."
                    },
                    {
                        "username": "bosnma",
                        "content": "tends to 0... means, 1.3 will be floored to 1 while -1.3 will be ceiled to -1"
                    }
                ]
            },
            {
                "id": 1567891,
                "content": [
                    {
                        "username": "yfdyyy",
                        "content": "when I test [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"], \\nin this program, the result I got is 12, I think I am right. Because when I calculate 6/(-132) = -1, not 0, so i think the result is 12 not 22."
                    },
                    {
                        "username": "nonethewiser",
                        "content": "\"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "soleo",
                        "content": "If you are using `//` in python3, that would be the root cause for the test to fail. Check https://stackoverflow.com/questions/19517868/integer-division-by-negative-number"
                    },
                    {
                        "username": "TheSuperGroot",
                        "content": "[@nghuuminh03](/nghuuminh03) maybe he /she is still  looking"
                    },
                    {
                        "username": "0biwan",
                        "content": "[@jitendra_nagar_50](/jitendra_nagar_50) int(6 / -132), no need for `float()` type conversion. Result will be float anyway"
                    },
                    {
                        "username": "jitendra_nagar_50",
                        "content": "Do float division then convert to int like int(float(6)/-132)"
                    },
                    {
                        "username": "nghuuminh03",
                        "content": "guys his comment was 8 years ago"
                    },
                    {
                        "username": "andynullwong",
                        "content": "6/(-132) = -0.04545454545. Make sure that the method you are using is rounding towards zero, For example in javascript Math.floor will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case)"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "The question asks to round towards zero. So if it is negative, round to greater integer. If positive round to smaller integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "Simplest solution to your problem can be \\n`do the Float Division then convert the result into int`"
                    },
                    {
                        "username": "arobe91594",
                        "content": "[@tharunbalaji31](/tharunbalaji31) \\nIt is heavily dependent on the language (for some languages, rounding behavior can even differ from compiler to compiler, ex. C)\\n\\nFor this problem, the desired behavior is rounding toward zero, but it is important to note that this is different than rounding toward -infinity. Rounding \"down\" can be interpreted either way."
                    },
                    {
                        "username": "tharunbalaji31",
                        "content": "Yeah I too got the same result, try using int(6/-132), you would get 0"
                    },
                    {
                        "username": "choprasrishti01",
                        "content": "python will take floor automatically and return the result rounded off to -1 \\nas [@Luc Taylor](/godshiva) said you can instead divide first and then convert to integer . example: int(b/a)\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "You can probably guess why I\\'m reading your comment :)  \\nIt appears, comparing a passing version with my failing version, for python at least\\nWhat I typed was `o1 // o2` and what I needed to type, to make it pass was `int(o1/o2)`"
                    },
                    {
                        "username": "Ahmed-Hodhod",
                        "content": "Just a note, i don\\'t know if it is mentioned below or not,\\nmath.trunc() : Python has a builtin method to do truncation for us\\n\\nTruncation toward Zero is simply like that :\\n5/ 2 = 2\\n-5 / 2 = -2\\nalways go toward zero"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "Also you could use type conversion with floating division like:\\nint(5/2) = 2\\nint(-5/2) = -2"
                    },
                    {
                        "username": "shivamrawat2626",
                        "content": "Line 23: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:32:28\\n\\nelse if(tokens[i]==\"*\")\\n                    s.push(v2*v1);"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "if you declare stack as ```stack<long long>``` then the problem will be solve "
                    },
                    {
                        "username": "saiful1604008",
                        "content": "[@lrazo](/lrazo) you need to use long long if overflow occurs."
                    },
                    {
                        "username": "lrazo",
                        "content": "I had the same problem, but it was solved casting to `(long long)`\n`res = (long long) v1 * v2;`"
                    },
                    {
                        "username": "Enzhou",
                        "content": "for java, 6/-132 = 0\\nbut in python 6/-132 = -1\\n\\nany comments?"
                    },
                    {
                        "username": "Triquetra",
                        "content": "Workaround without resorting to floating point: `a//b if a*b >= 0 else -(-a//b)`."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "I guess it\\'e becuase Java implements truncated division and python implements floored division"
                    },
                    {
                        "username": "amanchandna",
                        "content": "[@sumitChoube238](/sumitChoube238) \\uD83E\\uDD23\\uD83E\\uDD23"
                    },
                    {
                        "username": "sumitChoube238",
                        "content": "[@pingvaibhav](/pingvaibhav)  bro vo comment 2014 se hai \\n"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "Convert to floating, then calculate and round accordingly"
                    },
                    {
                        "username": "natitati",
                        "content": "I am going insane."
                    },
                    {
                        "username": "himanshu1910",
                        "content": "[\"4\",\"-2\",\"/\",\"2\",\"-3\",\"-\",\"-\"]\n\ncan someone explain this test case how the answer is -7\n\nMy solution:-\n```\nclass Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stck =[]\n        for t in tokens:\n            if t not in [\"+\", \"-\", \"*\", \"/\"]:\n                stck.append(t)\n            else:\n                a=stck.pop()\n                b=stck.pop()\n                stck.append(self.perform(t, b, a))\n                \n        return int(stck[0])\n                \n    def perform(self, op, b, a):\n        b, a =int(b), int(a)\n        if op ==\"+\":\n            return b+a\n        elif op == \"-\":\n            return b-a\n        elif op == \"*\":\n            return b*a\n        else:\n            return math.floor(abs(b)/abs(a))\n```"
                    },
                    {
                        "username": "Yogi_978",
                        "content": "stack[4,-2]        op= 4/-2 =-2\nstack[-2,2,3]     op=2-(-3)=5\nstack[-2,5]    op=-2-(5)=-7    hence the answer\n\nremove abs in code : we dont need that\nremove floor division: use int(a/b)  that should work....."
                    },
                    {
                        "username": "ajsdo222",
                        "content": "[@KatappaSR](/KatappaSR) The last one seems incorrect. Shouldn\\'t this be like this?\\n\\n[\"4\", \"-2\", \"/\", \"2\", \"-3\", \"-\", \"-\"]\\n\\nStack: []\\n\\n\"4\": push 4 onto the stack\\nStack: [4]\\n\\n\"-2\": push -2 onto the stack\\nStack: [4, -2]\\n\\n\"/\": pop -2 and 4 from the stack, divide 4 by -2, and push the result (which is -2) onto the stack\\nStack: [-2]\\n\\n\"2\": push 2 onto the stack\\nStack: [-2, 2]\\n\\n\"-3\": push -3 onto the stack\\nStack: [-2, 2, -3]\\n\\n\"-\": pop -3 and 2 from the stack, subtract 2 from -3, and push the result (which is -5) onto the stack\\nStack: [-2, -5]\\n\\n\"-\": pop -5 and -2 from the stack, subtract -2 from -5, and push the result (which is -3) onto the stack\\nStack: [-3]\\n\\nThe final result is -3."
                    },
                    {
                        "username": "aryansuvarna",
                        "content": "[@KatappaSR](/KatappaSR) shouldn\\'t 4 / -2 yield 0. I thought we always truncate to 0"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "You perform the operation as soon as operator is encountered\\nSo 4 -2 / 2 -3 - -\\nFirst is division  (4 / -2) 2 -3 - -which makes it -2 2 -3 - -\\nThen subtraction -2 2 - (-3) - which makes it -2 5 -\\nThen again subtraction -2 - 5 which makes it -7"
                    },
                    {
                        "username": "tpolm",
                        "content": "e g 200 200 200 200 200 * * * * \\n\\nthe tests from judges do not seem to test for the large results. the custom test like this breaks online judge completely;)\\n\\nthe original problem makes it clear that long arithmetic is needed, otherwise ir is not even \"meduim\", but \"\\n\\n"
                    },
                    {
                        "username": "nathankm",
                        "content": "I think integer overflow issues are a valid programming issue to work around, but to me it just seems kind of annoying to deal with in leetcode problems. In almost most cases, the solution is to just make certain variables and outputs 64-bit integers, which doesn\\'t really add to any sort of problem-solving skills in my opinion. I think it\\'d be better to not include 32-bit integer overflow in problems for which it is not really meaningful. "
                    },
                    {
                        "username": "acearth",
                        "content": "Due to division with negative number have different implements in different platform,     the use case \"\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\"  for mentioned question can NOT work well in ruby.\\n\\nIn ruby, division with negative number will generate integer result close to negative infinite, which is opposite to C and others.  \\n\\nIs my fault, or the use case should be modified? thx"
                    },
                    {
                        "username": "silvere",
                        "content": "Why NPR of [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"] got 22?not 12?\\n\\nThanks."
                    },
                    {
                        "username": "bosnma",
                        "content": "tends to 0... means, 1.3 will be floored to 1 while -1.3 will be ceiled to -1"
                    }
                ]
            },
            {
                "id": 1568981,
                "content": [
                    {
                        "username": "yfdyyy",
                        "content": "when I test [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"], \\nin this program, the result I got is 12, I think I am right. Because when I calculate 6/(-132) = -1, not 0, so i think the result is 12 not 22."
                    },
                    {
                        "username": "nonethewiser",
                        "content": "\"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "soleo",
                        "content": "If you are using `//` in python3, that would be the root cause for the test to fail. Check https://stackoverflow.com/questions/19517868/integer-division-by-negative-number"
                    },
                    {
                        "username": "TheSuperGroot",
                        "content": "[@nghuuminh03](/nghuuminh03) maybe he /she is still  looking"
                    },
                    {
                        "username": "0biwan",
                        "content": "[@jitendra_nagar_50](/jitendra_nagar_50) int(6 / -132), no need for `float()` type conversion. Result will be float anyway"
                    },
                    {
                        "username": "jitendra_nagar_50",
                        "content": "Do float division then convert to int like int(float(6)/-132)"
                    },
                    {
                        "username": "nghuuminh03",
                        "content": "guys his comment was 8 years ago"
                    },
                    {
                        "username": "andynullwong",
                        "content": "6/(-132) = -0.04545454545. Make sure that the method you are using is rounding towards zero, For example in javascript Math.floor will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case)"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "The question asks to round towards zero. So if it is negative, round to greater integer. If positive round to smaller integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "Simplest solution to your problem can be \\n`do the Float Division then convert the result into int`"
                    },
                    {
                        "username": "arobe91594",
                        "content": "[@tharunbalaji31](/tharunbalaji31) \\nIt is heavily dependent on the language (for some languages, rounding behavior can even differ from compiler to compiler, ex. C)\\n\\nFor this problem, the desired behavior is rounding toward zero, but it is important to note that this is different than rounding toward -infinity. Rounding \"down\" can be interpreted either way."
                    },
                    {
                        "username": "tharunbalaji31",
                        "content": "Yeah I too got the same result, try using int(6/-132), you would get 0"
                    },
                    {
                        "username": "choprasrishti01",
                        "content": "python will take floor automatically and return the result rounded off to -1 \\nas [@Luc Taylor](/godshiva) said you can instead divide first and then convert to integer . example: int(b/a)\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "You can probably guess why I\\'m reading your comment :)  \\nIt appears, comparing a passing version with my failing version, for python at least\\nWhat I typed was `o1 // o2` and what I needed to type, to make it pass was `int(o1/o2)`"
                    },
                    {
                        "username": "Ahmed-Hodhod",
                        "content": "Just a note, i don\\'t know if it is mentioned below or not,\\nmath.trunc() : Python has a builtin method to do truncation for us\\n\\nTruncation toward Zero is simply like that :\\n5/ 2 = 2\\n-5 / 2 = -2\\nalways go toward zero"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "Also you could use type conversion with floating division like:\\nint(5/2) = 2\\nint(-5/2) = -2"
                    },
                    {
                        "username": "shivamrawat2626",
                        "content": "Line 23: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:32:28\\n\\nelse if(tokens[i]==\"*\")\\n                    s.push(v2*v1);"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "if you declare stack as ```stack<long long>``` then the problem will be solve "
                    },
                    {
                        "username": "saiful1604008",
                        "content": "[@lrazo](/lrazo) you need to use long long if overflow occurs."
                    },
                    {
                        "username": "lrazo",
                        "content": "I had the same problem, but it was solved casting to `(long long)`\n`res = (long long) v1 * v2;`"
                    },
                    {
                        "username": "Enzhou",
                        "content": "for java, 6/-132 = 0\\nbut in python 6/-132 = -1\\n\\nany comments?"
                    },
                    {
                        "username": "Triquetra",
                        "content": "Workaround without resorting to floating point: `a//b if a*b >= 0 else -(-a//b)`."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "I guess it\\'e becuase Java implements truncated division and python implements floored division"
                    },
                    {
                        "username": "amanchandna",
                        "content": "[@sumitChoube238](/sumitChoube238) \\uD83E\\uDD23\\uD83E\\uDD23"
                    },
                    {
                        "username": "sumitChoube238",
                        "content": "[@pingvaibhav](/pingvaibhav)  bro vo comment 2014 se hai \\n"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "Convert to floating, then calculate and round accordingly"
                    },
                    {
                        "username": "natitati",
                        "content": "I am going insane."
                    },
                    {
                        "username": "himanshu1910",
                        "content": "[\"4\",\"-2\",\"/\",\"2\",\"-3\",\"-\",\"-\"]\n\ncan someone explain this test case how the answer is -7\n\nMy solution:-\n```\nclass Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stck =[]\n        for t in tokens:\n            if t not in [\"+\", \"-\", \"*\", \"/\"]:\n                stck.append(t)\n            else:\n                a=stck.pop()\n                b=stck.pop()\n                stck.append(self.perform(t, b, a))\n                \n        return int(stck[0])\n                \n    def perform(self, op, b, a):\n        b, a =int(b), int(a)\n        if op ==\"+\":\n            return b+a\n        elif op == \"-\":\n            return b-a\n        elif op == \"*\":\n            return b*a\n        else:\n            return math.floor(abs(b)/abs(a))\n```"
                    },
                    {
                        "username": "Yogi_978",
                        "content": "stack[4,-2]        op= 4/-2 =-2\nstack[-2,2,3]     op=2-(-3)=5\nstack[-2,5]    op=-2-(5)=-7    hence the answer\n\nremove abs in code : we dont need that\nremove floor division: use int(a/b)  that should work....."
                    },
                    {
                        "username": "ajsdo222",
                        "content": "[@KatappaSR](/KatappaSR) The last one seems incorrect. Shouldn\\'t this be like this?\\n\\n[\"4\", \"-2\", \"/\", \"2\", \"-3\", \"-\", \"-\"]\\n\\nStack: []\\n\\n\"4\": push 4 onto the stack\\nStack: [4]\\n\\n\"-2\": push -2 onto the stack\\nStack: [4, -2]\\n\\n\"/\": pop -2 and 4 from the stack, divide 4 by -2, and push the result (which is -2) onto the stack\\nStack: [-2]\\n\\n\"2\": push 2 onto the stack\\nStack: [-2, 2]\\n\\n\"-3\": push -3 onto the stack\\nStack: [-2, 2, -3]\\n\\n\"-\": pop -3 and 2 from the stack, subtract 2 from -3, and push the result (which is -5) onto the stack\\nStack: [-2, -5]\\n\\n\"-\": pop -5 and -2 from the stack, subtract -2 from -5, and push the result (which is -3) onto the stack\\nStack: [-3]\\n\\nThe final result is -3."
                    },
                    {
                        "username": "aryansuvarna",
                        "content": "[@KatappaSR](/KatappaSR) shouldn\\'t 4 / -2 yield 0. I thought we always truncate to 0"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "You perform the operation as soon as operator is encountered\\nSo 4 -2 / 2 -3 - -\\nFirst is division  (4 / -2) 2 -3 - -which makes it -2 2 -3 - -\\nThen subtraction -2 2 - (-3) - which makes it -2 5 -\\nThen again subtraction -2 - 5 which makes it -7"
                    },
                    {
                        "username": "tpolm",
                        "content": "e g 200 200 200 200 200 * * * * \\n\\nthe tests from judges do not seem to test for the large results. the custom test like this breaks online judge completely;)\\n\\nthe original problem makes it clear that long arithmetic is needed, otherwise ir is not even \"meduim\", but \"\\n\\n"
                    },
                    {
                        "username": "nathankm",
                        "content": "I think integer overflow issues are a valid programming issue to work around, but to me it just seems kind of annoying to deal with in leetcode problems. In almost most cases, the solution is to just make certain variables and outputs 64-bit integers, which doesn\\'t really add to any sort of problem-solving skills in my opinion. I think it\\'d be better to not include 32-bit integer overflow in problems for which it is not really meaningful. "
                    },
                    {
                        "username": "acearth",
                        "content": "Due to division with negative number have different implements in different platform,     the use case \"\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\"  for mentioned question can NOT work well in ruby.\\n\\nIn ruby, division with negative number will generate integer result close to negative infinite, which is opposite to C and others.  \\n\\nIs my fault, or the use case should be modified? thx"
                    },
                    {
                        "username": "silvere",
                        "content": "Why NPR of [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"] got 22?not 12?\\n\\nThanks."
                    },
                    {
                        "username": "bosnma",
                        "content": "tends to 0... means, 1.3 will be floored to 1 while -1.3 will be ceiled to -1"
                    }
                ]
            },
            {
                "id": 1564687,
                "content": [
                    {
                        "username": "yfdyyy",
                        "content": "when I test [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"], \\nin this program, the result I got is 12, I think I am right. Because when I calculate 6/(-132) = -1, not 0, so i think the result is 12 not 22."
                    },
                    {
                        "username": "nonethewiser",
                        "content": "\"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "soleo",
                        "content": "If you are using `//` in python3, that would be the root cause for the test to fail. Check https://stackoverflow.com/questions/19517868/integer-division-by-negative-number"
                    },
                    {
                        "username": "TheSuperGroot",
                        "content": "[@nghuuminh03](/nghuuminh03) maybe he /she is still  looking"
                    },
                    {
                        "username": "0biwan",
                        "content": "[@jitendra_nagar_50](/jitendra_nagar_50) int(6 / -132), no need for `float()` type conversion. Result will be float anyway"
                    },
                    {
                        "username": "jitendra_nagar_50",
                        "content": "Do float division then convert to int like int(float(6)/-132)"
                    },
                    {
                        "username": "nghuuminh03",
                        "content": "guys his comment was 8 years ago"
                    },
                    {
                        "username": "andynullwong",
                        "content": "6/(-132) = -0.04545454545. Make sure that the method you are using is rounding towards zero, For example in javascript Math.floor will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case)"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "The question asks to round towards zero. So if it is negative, round to greater integer. If positive round to smaller integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "Simplest solution to your problem can be \\n`do the Float Division then convert the result into int`"
                    },
                    {
                        "username": "arobe91594",
                        "content": "[@tharunbalaji31](/tharunbalaji31) \\nIt is heavily dependent on the language (for some languages, rounding behavior can even differ from compiler to compiler, ex. C)\\n\\nFor this problem, the desired behavior is rounding toward zero, but it is important to note that this is different than rounding toward -infinity. Rounding \"down\" can be interpreted either way."
                    },
                    {
                        "username": "tharunbalaji31",
                        "content": "Yeah I too got the same result, try using int(6/-132), you would get 0"
                    },
                    {
                        "username": "choprasrishti01",
                        "content": "python will take floor automatically and return the result rounded off to -1 \\nas [@Luc Taylor](/godshiva) said you can instead divide first and then convert to integer . example: int(b/a)\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "You can probably guess why I\\'m reading your comment :)  \\nIt appears, comparing a passing version with my failing version, for python at least\\nWhat I typed was `o1 // o2` and what I needed to type, to make it pass was `int(o1/o2)`"
                    },
                    {
                        "username": "Ahmed-Hodhod",
                        "content": "Just a note, i don\\'t know if it is mentioned below or not,\\nmath.trunc() : Python has a builtin method to do truncation for us\\n\\nTruncation toward Zero is simply like that :\\n5/ 2 = 2\\n-5 / 2 = -2\\nalways go toward zero"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "Also you could use type conversion with floating division like:\\nint(5/2) = 2\\nint(-5/2) = -2"
                    },
                    {
                        "username": "shivamrawat2626",
                        "content": "Line 23: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:32:28\\n\\nelse if(tokens[i]==\"*\")\\n                    s.push(v2*v1);"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "if you declare stack as ```stack<long long>``` then the problem will be solve "
                    },
                    {
                        "username": "saiful1604008",
                        "content": "[@lrazo](/lrazo) you need to use long long if overflow occurs."
                    },
                    {
                        "username": "lrazo",
                        "content": "I had the same problem, but it was solved casting to `(long long)`\n`res = (long long) v1 * v2;`"
                    },
                    {
                        "username": "Enzhou",
                        "content": "for java, 6/-132 = 0\\nbut in python 6/-132 = -1\\n\\nany comments?"
                    },
                    {
                        "username": "Triquetra",
                        "content": "Workaround without resorting to floating point: `a//b if a*b >= 0 else -(-a//b)`."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "I guess it\\'e becuase Java implements truncated division and python implements floored division"
                    },
                    {
                        "username": "amanchandna",
                        "content": "[@sumitChoube238](/sumitChoube238) \\uD83E\\uDD23\\uD83E\\uDD23"
                    },
                    {
                        "username": "sumitChoube238",
                        "content": "[@pingvaibhav](/pingvaibhav)  bro vo comment 2014 se hai \\n"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "Convert to floating, then calculate and round accordingly"
                    },
                    {
                        "username": "natitati",
                        "content": "I am going insane."
                    },
                    {
                        "username": "himanshu1910",
                        "content": "[\"4\",\"-2\",\"/\",\"2\",\"-3\",\"-\",\"-\"]\n\ncan someone explain this test case how the answer is -7\n\nMy solution:-\n```\nclass Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stck =[]\n        for t in tokens:\n            if t not in [\"+\", \"-\", \"*\", \"/\"]:\n                stck.append(t)\n            else:\n                a=stck.pop()\n                b=stck.pop()\n                stck.append(self.perform(t, b, a))\n                \n        return int(stck[0])\n                \n    def perform(self, op, b, a):\n        b, a =int(b), int(a)\n        if op ==\"+\":\n            return b+a\n        elif op == \"-\":\n            return b-a\n        elif op == \"*\":\n            return b*a\n        else:\n            return math.floor(abs(b)/abs(a))\n```"
                    },
                    {
                        "username": "Yogi_978",
                        "content": "stack[4,-2]        op= 4/-2 =-2\nstack[-2,2,3]     op=2-(-3)=5\nstack[-2,5]    op=-2-(5)=-7    hence the answer\n\nremove abs in code : we dont need that\nremove floor division: use int(a/b)  that should work....."
                    },
                    {
                        "username": "ajsdo222",
                        "content": "[@KatappaSR](/KatappaSR) The last one seems incorrect. Shouldn\\'t this be like this?\\n\\n[\"4\", \"-2\", \"/\", \"2\", \"-3\", \"-\", \"-\"]\\n\\nStack: []\\n\\n\"4\": push 4 onto the stack\\nStack: [4]\\n\\n\"-2\": push -2 onto the stack\\nStack: [4, -2]\\n\\n\"/\": pop -2 and 4 from the stack, divide 4 by -2, and push the result (which is -2) onto the stack\\nStack: [-2]\\n\\n\"2\": push 2 onto the stack\\nStack: [-2, 2]\\n\\n\"-3\": push -3 onto the stack\\nStack: [-2, 2, -3]\\n\\n\"-\": pop -3 and 2 from the stack, subtract 2 from -3, and push the result (which is -5) onto the stack\\nStack: [-2, -5]\\n\\n\"-\": pop -5 and -2 from the stack, subtract -2 from -5, and push the result (which is -3) onto the stack\\nStack: [-3]\\n\\nThe final result is -3."
                    },
                    {
                        "username": "aryansuvarna",
                        "content": "[@KatappaSR](/KatappaSR) shouldn\\'t 4 / -2 yield 0. I thought we always truncate to 0"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "You perform the operation as soon as operator is encountered\\nSo 4 -2 / 2 -3 - -\\nFirst is division  (4 / -2) 2 -3 - -which makes it -2 2 -3 - -\\nThen subtraction -2 2 - (-3) - which makes it -2 5 -\\nThen again subtraction -2 - 5 which makes it -7"
                    },
                    {
                        "username": "tpolm",
                        "content": "e g 200 200 200 200 200 * * * * \\n\\nthe tests from judges do not seem to test for the large results. the custom test like this breaks online judge completely;)\\n\\nthe original problem makes it clear that long arithmetic is needed, otherwise ir is not even \"meduim\", but \"\\n\\n"
                    },
                    {
                        "username": "nathankm",
                        "content": "I think integer overflow issues are a valid programming issue to work around, but to me it just seems kind of annoying to deal with in leetcode problems. In almost most cases, the solution is to just make certain variables and outputs 64-bit integers, which doesn\\'t really add to any sort of problem-solving skills in my opinion. I think it\\'d be better to not include 32-bit integer overflow in problems for which it is not really meaningful. "
                    },
                    {
                        "username": "acearth",
                        "content": "Due to division with negative number have different implements in different platform,     the use case \"\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\"  for mentioned question can NOT work well in ruby.\\n\\nIn ruby, division with negative number will generate integer result close to negative infinite, which is opposite to C and others.  \\n\\nIs my fault, or the use case should be modified? thx"
                    },
                    {
                        "username": "silvere",
                        "content": "Why NPR of [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"] got 22?not 12?\\n\\nThanks."
                    },
                    {
                        "username": "bosnma",
                        "content": "tends to 0... means, 1.3 will be floored to 1 while -1.3 will be ceiled to -1"
                    }
                ]
            },
            {
                "id": 1574136,
                "content": [
                    {
                        "username": "yfdyyy",
                        "content": "when I test [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"], \\nin this program, the result I got is 12, I think I am right. Because when I calculate 6/(-132) = -1, not 0, so i think the result is 12 not 22."
                    },
                    {
                        "username": "nonethewiser",
                        "content": "\"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "soleo",
                        "content": "If you are using `//` in python3, that would be the root cause for the test to fail. Check https://stackoverflow.com/questions/19517868/integer-division-by-negative-number"
                    },
                    {
                        "username": "TheSuperGroot",
                        "content": "[@nghuuminh03](/nghuuminh03) maybe he /she is still  looking"
                    },
                    {
                        "username": "0biwan",
                        "content": "[@jitendra_nagar_50](/jitendra_nagar_50) int(6 / -132), no need for `float()` type conversion. Result will be float anyway"
                    },
                    {
                        "username": "jitendra_nagar_50",
                        "content": "Do float division then convert to int like int(float(6)/-132)"
                    },
                    {
                        "username": "nghuuminh03",
                        "content": "guys his comment was 8 years ago"
                    },
                    {
                        "username": "andynullwong",
                        "content": "6/(-132) = -0.04545454545. Make sure that the method you are using is rounding towards zero, For example in javascript Math.floor will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case)"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "The question asks to round towards zero. So if it is negative, round to greater integer. If positive round to smaller integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "Simplest solution to your problem can be \\n`do the Float Division then convert the result into int`"
                    },
                    {
                        "username": "arobe91594",
                        "content": "[@tharunbalaji31](/tharunbalaji31) \\nIt is heavily dependent on the language (for some languages, rounding behavior can even differ from compiler to compiler, ex. C)\\n\\nFor this problem, the desired behavior is rounding toward zero, but it is important to note that this is different than rounding toward -infinity. Rounding \"down\" can be interpreted either way."
                    },
                    {
                        "username": "tharunbalaji31",
                        "content": "Yeah I too got the same result, try using int(6/-132), you would get 0"
                    },
                    {
                        "username": "choprasrishti01",
                        "content": "python will take floor automatically and return the result rounded off to -1 \\nas [@Luc Taylor](/godshiva) said you can instead divide first and then convert to integer . example: int(b/a)\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "You can probably guess why I\\'m reading your comment :)  \\nIt appears, comparing a passing version with my failing version, for python at least\\nWhat I typed was `o1 // o2` and what I needed to type, to make it pass was `int(o1/o2)`"
                    },
                    {
                        "username": "Ahmed-Hodhod",
                        "content": "Just a note, i don\\'t know if it is mentioned below or not,\\nmath.trunc() : Python has a builtin method to do truncation for us\\n\\nTruncation toward Zero is simply like that :\\n5/ 2 = 2\\n-5 / 2 = -2\\nalways go toward zero"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "Also you could use type conversion with floating division like:\\nint(5/2) = 2\\nint(-5/2) = -2"
                    },
                    {
                        "username": "shivamrawat2626",
                        "content": "Line 23: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:32:28\\n\\nelse if(tokens[i]==\"*\")\\n                    s.push(v2*v1);"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "if you declare stack as ```stack<long long>``` then the problem will be solve "
                    },
                    {
                        "username": "saiful1604008",
                        "content": "[@lrazo](/lrazo) you need to use long long if overflow occurs."
                    },
                    {
                        "username": "lrazo",
                        "content": "I had the same problem, but it was solved casting to `(long long)`\n`res = (long long) v1 * v2;`"
                    },
                    {
                        "username": "Enzhou",
                        "content": "for java, 6/-132 = 0\\nbut in python 6/-132 = -1\\n\\nany comments?"
                    },
                    {
                        "username": "Triquetra",
                        "content": "Workaround without resorting to floating point: `a//b if a*b >= 0 else -(-a//b)`."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "I guess it\\'e becuase Java implements truncated division and python implements floored division"
                    },
                    {
                        "username": "amanchandna",
                        "content": "[@sumitChoube238](/sumitChoube238) \\uD83E\\uDD23\\uD83E\\uDD23"
                    },
                    {
                        "username": "sumitChoube238",
                        "content": "[@pingvaibhav](/pingvaibhav)  bro vo comment 2014 se hai \\n"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "Convert to floating, then calculate and round accordingly"
                    },
                    {
                        "username": "natitati",
                        "content": "I am going insane."
                    },
                    {
                        "username": "himanshu1910",
                        "content": "[\"4\",\"-2\",\"/\",\"2\",\"-3\",\"-\",\"-\"]\n\ncan someone explain this test case how the answer is -7\n\nMy solution:-\n```\nclass Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stck =[]\n        for t in tokens:\n            if t not in [\"+\", \"-\", \"*\", \"/\"]:\n                stck.append(t)\n            else:\n                a=stck.pop()\n                b=stck.pop()\n                stck.append(self.perform(t, b, a))\n                \n        return int(stck[0])\n                \n    def perform(self, op, b, a):\n        b, a =int(b), int(a)\n        if op ==\"+\":\n            return b+a\n        elif op == \"-\":\n            return b-a\n        elif op == \"*\":\n            return b*a\n        else:\n            return math.floor(abs(b)/abs(a))\n```"
                    },
                    {
                        "username": "Yogi_978",
                        "content": "stack[4,-2]        op= 4/-2 =-2\nstack[-2,2,3]     op=2-(-3)=5\nstack[-2,5]    op=-2-(5)=-7    hence the answer\n\nremove abs in code : we dont need that\nremove floor division: use int(a/b)  that should work....."
                    },
                    {
                        "username": "ajsdo222",
                        "content": "[@KatappaSR](/KatappaSR) The last one seems incorrect. Shouldn\\'t this be like this?\\n\\n[\"4\", \"-2\", \"/\", \"2\", \"-3\", \"-\", \"-\"]\\n\\nStack: []\\n\\n\"4\": push 4 onto the stack\\nStack: [4]\\n\\n\"-2\": push -2 onto the stack\\nStack: [4, -2]\\n\\n\"/\": pop -2 and 4 from the stack, divide 4 by -2, and push the result (which is -2) onto the stack\\nStack: [-2]\\n\\n\"2\": push 2 onto the stack\\nStack: [-2, 2]\\n\\n\"-3\": push -3 onto the stack\\nStack: [-2, 2, -3]\\n\\n\"-\": pop -3 and 2 from the stack, subtract 2 from -3, and push the result (which is -5) onto the stack\\nStack: [-2, -5]\\n\\n\"-\": pop -5 and -2 from the stack, subtract -2 from -5, and push the result (which is -3) onto the stack\\nStack: [-3]\\n\\nThe final result is -3."
                    },
                    {
                        "username": "aryansuvarna",
                        "content": "[@KatappaSR](/KatappaSR) shouldn\\'t 4 / -2 yield 0. I thought we always truncate to 0"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "You perform the operation as soon as operator is encountered\\nSo 4 -2 / 2 -3 - -\\nFirst is division  (4 / -2) 2 -3 - -which makes it -2 2 -3 - -\\nThen subtraction -2 2 - (-3) - which makes it -2 5 -\\nThen again subtraction -2 - 5 which makes it -7"
                    },
                    {
                        "username": "tpolm",
                        "content": "e g 200 200 200 200 200 * * * * \\n\\nthe tests from judges do not seem to test for the large results. the custom test like this breaks online judge completely;)\\n\\nthe original problem makes it clear that long arithmetic is needed, otherwise ir is not even \"meduim\", but \"\\n\\n"
                    },
                    {
                        "username": "nathankm",
                        "content": "I think integer overflow issues are a valid programming issue to work around, but to me it just seems kind of annoying to deal with in leetcode problems. In almost most cases, the solution is to just make certain variables and outputs 64-bit integers, which doesn\\'t really add to any sort of problem-solving skills in my opinion. I think it\\'d be better to not include 32-bit integer overflow in problems for which it is not really meaningful. "
                    },
                    {
                        "username": "acearth",
                        "content": "Due to division with negative number have different implements in different platform,     the use case \"\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\"  for mentioned question can NOT work well in ruby.\\n\\nIn ruby, division with negative number will generate integer result close to negative infinite, which is opposite to C and others.  \\n\\nIs my fault, or the use case should be modified? thx"
                    },
                    {
                        "username": "silvere",
                        "content": "Why NPR of [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"] got 22?not 12?\\n\\nThanks."
                    },
                    {
                        "username": "bosnma",
                        "content": "tends to 0... means, 1.3 will be floored to 1 while -1.3 will be ceiled to -1"
                    }
                ]
            },
            {
                "id": 1711236,
                "content": [
                    {
                        "username": "yfdyyy",
                        "content": "when I test [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"], \\nin this program, the result I got is 12, I think I am right. Because when I calculate 6/(-132) = -1, not 0, so i think the result is 12 not 22."
                    },
                    {
                        "username": "nonethewiser",
                        "content": "\"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "soleo",
                        "content": "If you are using `//` in python3, that would be the root cause for the test to fail. Check https://stackoverflow.com/questions/19517868/integer-division-by-negative-number"
                    },
                    {
                        "username": "TheSuperGroot",
                        "content": "[@nghuuminh03](/nghuuminh03) maybe he /she is still  looking"
                    },
                    {
                        "username": "0biwan",
                        "content": "[@jitendra_nagar_50](/jitendra_nagar_50) int(6 / -132), no need for `float()` type conversion. Result will be float anyway"
                    },
                    {
                        "username": "jitendra_nagar_50",
                        "content": "Do float division then convert to int like int(float(6)/-132)"
                    },
                    {
                        "username": "nghuuminh03",
                        "content": "guys his comment was 8 years ago"
                    },
                    {
                        "username": "andynullwong",
                        "content": "6/(-132) = -0.04545454545. Make sure that the method you are using is rounding towards zero, For example in javascript Math.floor will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case)"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "The question asks to round towards zero. So if it is negative, round to greater integer. If positive round to smaller integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "Simplest solution to your problem can be \\n`do the Float Division then convert the result into int`"
                    },
                    {
                        "username": "arobe91594",
                        "content": "[@tharunbalaji31](/tharunbalaji31) \\nIt is heavily dependent on the language (for some languages, rounding behavior can even differ from compiler to compiler, ex. C)\\n\\nFor this problem, the desired behavior is rounding toward zero, but it is important to note that this is different than rounding toward -infinity. Rounding \"down\" can be interpreted either way."
                    },
                    {
                        "username": "tharunbalaji31",
                        "content": "Yeah I too got the same result, try using int(6/-132), you would get 0"
                    },
                    {
                        "username": "choprasrishti01",
                        "content": "python will take floor automatically and return the result rounded off to -1 \\nas [@Luc Taylor](/godshiva) said you can instead divide first and then convert to integer . example: int(b/a)\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "You can probably guess why I\\'m reading your comment :)  \\nIt appears, comparing a passing version with my failing version, for python at least\\nWhat I typed was `o1 // o2` and what I needed to type, to make it pass was `int(o1/o2)`"
                    },
                    {
                        "username": "Ahmed-Hodhod",
                        "content": "Just a note, i don\\'t know if it is mentioned below or not,\\nmath.trunc() : Python has a builtin method to do truncation for us\\n\\nTruncation toward Zero is simply like that :\\n5/ 2 = 2\\n-5 / 2 = -2\\nalways go toward zero"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "Also you could use type conversion with floating division like:\\nint(5/2) = 2\\nint(-5/2) = -2"
                    },
                    {
                        "username": "shivamrawat2626",
                        "content": "Line 23: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:32:28\\n\\nelse if(tokens[i]==\"*\")\\n                    s.push(v2*v1);"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "if you declare stack as ```stack<long long>``` then the problem will be solve "
                    },
                    {
                        "username": "saiful1604008",
                        "content": "[@lrazo](/lrazo) you need to use long long if overflow occurs."
                    },
                    {
                        "username": "lrazo",
                        "content": "I had the same problem, but it was solved casting to `(long long)`\n`res = (long long) v1 * v2;`"
                    },
                    {
                        "username": "Enzhou",
                        "content": "for java, 6/-132 = 0\\nbut in python 6/-132 = -1\\n\\nany comments?"
                    },
                    {
                        "username": "Triquetra",
                        "content": "Workaround without resorting to floating point: `a//b if a*b >= 0 else -(-a//b)`."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "I guess it\\'e becuase Java implements truncated division and python implements floored division"
                    },
                    {
                        "username": "amanchandna",
                        "content": "[@sumitChoube238](/sumitChoube238) \\uD83E\\uDD23\\uD83E\\uDD23"
                    },
                    {
                        "username": "sumitChoube238",
                        "content": "[@pingvaibhav](/pingvaibhav)  bro vo comment 2014 se hai \\n"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "Convert to floating, then calculate and round accordingly"
                    },
                    {
                        "username": "natitati",
                        "content": "I am going insane."
                    },
                    {
                        "username": "himanshu1910",
                        "content": "[\"4\",\"-2\",\"/\",\"2\",\"-3\",\"-\",\"-\"]\n\ncan someone explain this test case how the answer is -7\n\nMy solution:-\n```\nclass Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stck =[]\n        for t in tokens:\n            if t not in [\"+\", \"-\", \"*\", \"/\"]:\n                stck.append(t)\n            else:\n                a=stck.pop()\n                b=stck.pop()\n                stck.append(self.perform(t, b, a))\n                \n        return int(stck[0])\n                \n    def perform(self, op, b, a):\n        b, a =int(b), int(a)\n        if op ==\"+\":\n            return b+a\n        elif op == \"-\":\n            return b-a\n        elif op == \"*\":\n            return b*a\n        else:\n            return math.floor(abs(b)/abs(a))\n```"
                    },
                    {
                        "username": "Yogi_978",
                        "content": "stack[4,-2]        op= 4/-2 =-2\nstack[-2,2,3]     op=2-(-3)=5\nstack[-2,5]    op=-2-(5)=-7    hence the answer\n\nremove abs in code : we dont need that\nremove floor division: use int(a/b)  that should work....."
                    },
                    {
                        "username": "ajsdo222",
                        "content": "[@KatappaSR](/KatappaSR) The last one seems incorrect. Shouldn\\'t this be like this?\\n\\n[\"4\", \"-2\", \"/\", \"2\", \"-3\", \"-\", \"-\"]\\n\\nStack: []\\n\\n\"4\": push 4 onto the stack\\nStack: [4]\\n\\n\"-2\": push -2 onto the stack\\nStack: [4, -2]\\n\\n\"/\": pop -2 and 4 from the stack, divide 4 by -2, and push the result (which is -2) onto the stack\\nStack: [-2]\\n\\n\"2\": push 2 onto the stack\\nStack: [-2, 2]\\n\\n\"-3\": push -3 onto the stack\\nStack: [-2, 2, -3]\\n\\n\"-\": pop -3 and 2 from the stack, subtract 2 from -3, and push the result (which is -5) onto the stack\\nStack: [-2, -5]\\n\\n\"-\": pop -5 and -2 from the stack, subtract -2 from -5, and push the result (which is -3) onto the stack\\nStack: [-3]\\n\\nThe final result is -3."
                    },
                    {
                        "username": "aryansuvarna",
                        "content": "[@KatappaSR](/KatappaSR) shouldn\\'t 4 / -2 yield 0. I thought we always truncate to 0"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "You perform the operation as soon as operator is encountered\\nSo 4 -2 / 2 -3 - -\\nFirst is division  (4 / -2) 2 -3 - -which makes it -2 2 -3 - -\\nThen subtraction -2 2 - (-3) - which makes it -2 5 -\\nThen again subtraction -2 - 5 which makes it -7"
                    },
                    {
                        "username": "tpolm",
                        "content": "e g 200 200 200 200 200 * * * * \\n\\nthe tests from judges do not seem to test for the large results. the custom test like this breaks online judge completely;)\\n\\nthe original problem makes it clear that long arithmetic is needed, otherwise ir is not even \"meduim\", but \"\\n\\n"
                    },
                    {
                        "username": "nathankm",
                        "content": "I think integer overflow issues are a valid programming issue to work around, but to me it just seems kind of annoying to deal with in leetcode problems. In almost most cases, the solution is to just make certain variables and outputs 64-bit integers, which doesn\\'t really add to any sort of problem-solving skills in my opinion. I think it\\'d be better to not include 32-bit integer overflow in problems for which it is not really meaningful. "
                    },
                    {
                        "username": "acearth",
                        "content": "Due to division with negative number have different implements in different platform,     the use case \"\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\"  for mentioned question can NOT work well in ruby.\\n\\nIn ruby, division with negative number will generate integer result close to negative infinite, which is opposite to C and others.  \\n\\nIs my fault, or the use case should be modified? thx"
                    },
                    {
                        "username": "silvere",
                        "content": "Why NPR of [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"] got 22?not 12?\\n\\nThanks."
                    },
                    {
                        "username": "bosnma",
                        "content": "tends to 0... means, 1.3 will be floored to 1 while -1.3 will be ceiled to -1"
                    }
                ]
            },
            {
                "id": 1571338,
                "content": [
                    {
                        "username": "yfdyyy",
                        "content": "when I test [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"], \\nin this program, the result I got is 12, I think I am right. Because when I calculate 6/(-132) = -1, not 0, so i think the result is 12 not 22."
                    },
                    {
                        "username": "nonethewiser",
                        "content": "\"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "soleo",
                        "content": "If you are using `//` in python3, that would be the root cause for the test to fail. Check https://stackoverflow.com/questions/19517868/integer-division-by-negative-number"
                    },
                    {
                        "username": "TheSuperGroot",
                        "content": "[@nghuuminh03](/nghuuminh03) maybe he /she is still  looking"
                    },
                    {
                        "username": "0biwan",
                        "content": "[@jitendra_nagar_50](/jitendra_nagar_50) int(6 / -132), no need for `float()` type conversion. Result will be float anyway"
                    },
                    {
                        "username": "jitendra_nagar_50",
                        "content": "Do float division then convert to int like int(float(6)/-132)"
                    },
                    {
                        "username": "nghuuminh03",
                        "content": "guys his comment was 8 years ago"
                    },
                    {
                        "username": "andynullwong",
                        "content": "6/(-132) = -0.04545454545. Make sure that the method you are using is rounding towards zero, For example in javascript Math.floor will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case)"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "The question asks to round towards zero. So if it is negative, round to greater integer. If positive round to smaller integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "Simplest solution to your problem can be \\n`do the Float Division then convert the result into int`"
                    },
                    {
                        "username": "arobe91594",
                        "content": "[@tharunbalaji31](/tharunbalaji31) \\nIt is heavily dependent on the language (for some languages, rounding behavior can even differ from compiler to compiler, ex. C)\\n\\nFor this problem, the desired behavior is rounding toward zero, but it is important to note that this is different than rounding toward -infinity. Rounding \"down\" can be interpreted either way."
                    },
                    {
                        "username": "tharunbalaji31",
                        "content": "Yeah I too got the same result, try using int(6/-132), you would get 0"
                    },
                    {
                        "username": "choprasrishti01",
                        "content": "python will take floor automatically and return the result rounded off to -1 \\nas [@Luc Taylor](/godshiva) said you can instead divide first and then convert to integer . example: int(b/a)\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "You can probably guess why I\\'m reading your comment :)  \\nIt appears, comparing a passing version with my failing version, for python at least\\nWhat I typed was `o1 // o2` and what I needed to type, to make it pass was `int(o1/o2)`"
                    },
                    {
                        "username": "Ahmed-Hodhod",
                        "content": "Just a note, i don\\'t know if it is mentioned below or not,\\nmath.trunc() : Python has a builtin method to do truncation for us\\n\\nTruncation toward Zero is simply like that :\\n5/ 2 = 2\\n-5 / 2 = -2\\nalways go toward zero"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "Also you could use type conversion with floating division like:\\nint(5/2) = 2\\nint(-5/2) = -2"
                    },
                    {
                        "username": "shivamrawat2626",
                        "content": "Line 23: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:32:28\\n\\nelse if(tokens[i]==\"*\")\\n                    s.push(v2*v1);"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "if you declare stack as ```stack<long long>``` then the problem will be solve "
                    },
                    {
                        "username": "saiful1604008",
                        "content": "[@lrazo](/lrazo) you need to use long long if overflow occurs."
                    },
                    {
                        "username": "lrazo",
                        "content": "I had the same problem, but it was solved casting to `(long long)`\n`res = (long long) v1 * v2;`"
                    },
                    {
                        "username": "Enzhou",
                        "content": "for java, 6/-132 = 0\\nbut in python 6/-132 = -1\\n\\nany comments?"
                    },
                    {
                        "username": "Triquetra",
                        "content": "Workaround without resorting to floating point: `a//b if a*b >= 0 else -(-a//b)`."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "I guess it\\'e becuase Java implements truncated division and python implements floored division"
                    },
                    {
                        "username": "amanchandna",
                        "content": "[@sumitChoube238](/sumitChoube238) \\uD83E\\uDD23\\uD83E\\uDD23"
                    },
                    {
                        "username": "sumitChoube238",
                        "content": "[@pingvaibhav](/pingvaibhav)  bro vo comment 2014 se hai \\n"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "Convert to floating, then calculate and round accordingly"
                    },
                    {
                        "username": "natitati",
                        "content": "I am going insane."
                    },
                    {
                        "username": "himanshu1910",
                        "content": "[\"4\",\"-2\",\"/\",\"2\",\"-3\",\"-\",\"-\"]\n\ncan someone explain this test case how the answer is -7\n\nMy solution:-\n```\nclass Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stck =[]\n        for t in tokens:\n            if t not in [\"+\", \"-\", \"*\", \"/\"]:\n                stck.append(t)\n            else:\n                a=stck.pop()\n                b=stck.pop()\n                stck.append(self.perform(t, b, a))\n                \n        return int(stck[0])\n                \n    def perform(self, op, b, a):\n        b, a =int(b), int(a)\n        if op ==\"+\":\n            return b+a\n        elif op == \"-\":\n            return b-a\n        elif op == \"*\":\n            return b*a\n        else:\n            return math.floor(abs(b)/abs(a))\n```"
                    },
                    {
                        "username": "Yogi_978",
                        "content": "stack[4,-2]        op= 4/-2 =-2\nstack[-2,2,3]     op=2-(-3)=5\nstack[-2,5]    op=-2-(5)=-7    hence the answer\n\nremove abs in code : we dont need that\nremove floor division: use int(a/b)  that should work....."
                    },
                    {
                        "username": "ajsdo222",
                        "content": "[@KatappaSR](/KatappaSR) The last one seems incorrect. Shouldn\\'t this be like this?\\n\\n[\"4\", \"-2\", \"/\", \"2\", \"-3\", \"-\", \"-\"]\\n\\nStack: []\\n\\n\"4\": push 4 onto the stack\\nStack: [4]\\n\\n\"-2\": push -2 onto the stack\\nStack: [4, -2]\\n\\n\"/\": pop -2 and 4 from the stack, divide 4 by -2, and push the result (which is -2) onto the stack\\nStack: [-2]\\n\\n\"2\": push 2 onto the stack\\nStack: [-2, 2]\\n\\n\"-3\": push -3 onto the stack\\nStack: [-2, 2, -3]\\n\\n\"-\": pop -3 and 2 from the stack, subtract 2 from -3, and push the result (which is -5) onto the stack\\nStack: [-2, -5]\\n\\n\"-\": pop -5 and -2 from the stack, subtract -2 from -5, and push the result (which is -3) onto the stack\\nStack: [-3]\\n\\nThe final result is -3."
                    },
                    {
                        "username": "aryansuvarna",
                        "content": "[@KatappaSR](/KatappaSR) shouldn\\'t 4 / -2 yield 0. I thought we always truncate to 0"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "You perform the operation as soon as operator is encountered\\nSo 4 -2 / 2 -3 - -\\nFirst is division  (4 / -2) 2 -3 - -which makes it -2 2 -3 - -\\nThen subtraction -2 2 - (-3) - which makes it -2 5 -\\nThen again subtraction -2 - 5 which makes it -7"
                    },
                    {
                        "username": "tpolm",
                        "content": "e g 200 200 200 200 200 * * * * \\n\\nthe tests from judges do not seem to test for the large results. the custom test like this breaks online judge completely;)\\n\\nthe original problem makes it clear that long arithmetic is needed, otherwise ir is not even \"meduim\", but \"\\n\\n"
                    },
                    {
                        "username": "nathankm",
                        "content": "I think integer overflow issues are a valid programming issue to work around, but to me it just seems kind of annoying to deal with in leetcode problems. In almost most cases, the solution is to just make certain variables and outputs 64-bit integers, which doesn\\'t really add to any sort of problem-solving skills in my opinion. I think it\\'d be better to not include 32-bit integer overflow in problems for which it is not really meaningful. "
                    },
                    {
                        "username": "acearth",
                        "content": "Due to division with negative number have different implements in different platform,     the use case \"\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\"  for mentioned question can NOT work well in ruby.\\n\\nIn ruby, division with negative number will generate integer result close to negative infinite, which is opposite to C and others.  \\n\\nIs my fault, or the use case should be modified? thx"
                    },
                    {
                        "username": "silvere",
                        "content": "Why NPR of [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"] got 22?not 12?\\n\\nThanks."
                    },
                    {
                        "username": "bosnma",
                        "content": "tends to 0... means, 1.3 will be floored to 1 while -1.3 will be ceiled to -1"
                    }
                ]
            },
            {
                "id": 1908920,
                "content": [
                    {
                        "username": "yfdyyy",
                        "content": "when I test [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"], \\nin this program, the result I got is 12, I think I am right. Because when I calculate 6/(-132) = -1, not 0, so i think the result is 12 not 22."
                    },
                    {
                        "username": "nonethewiser",
                        "content": "\"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "soleo",
                        "content": "If you are using `//` in python3, that would be the root cause for the test to fail. Check https://stackoverflow.com/questions/19517868/integer-division-by-negative-number"
                    },
                    {
                        "username": "TheSuperGroot",
                        "content": "[@nghuuminh03](/nghuuminh03) maybe he /she is still  looking"
                    },
                    {
                        "username": "0biwan",
                        "content": "[@jitendra_nagar_50](/jitendra_nagar_50) int(6 / -132), no need for `float()` type conversion. Result will be float anyway"
                    },
                    {
                        "username": "jitendra_nagar_50",
                        "content": "Do float division then convert to int like int(float(6)/-132)"
                    },
                    {
                        "username": "nghuuminh03",
                        "content": "guys his comment was 8 years ago"
                    },
                    {
                        "username": "andynullwong",
                        "content": "6/(-132) = -0.04545454545. Make sure that the method you are using is rounding towards zero, For example in javascript Math.floor will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case)"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "The question asks to round towards zero. So if it is negative, round to greater integer. If positive round to smaller integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "Simplest solution to your problem can be \\n`do the Float Division then convert the result into int`"
                    },
                    {
                        "username": "arobe91594",
                        "content": "[@tharunbalaji31](/tharunbalaji31) \\nIt is heavily dependent on the language (for some languages, rounding behavior can even differ from compiler to compiler, ex. C)\\n\\nFor this problem, the desired behavior is rounding toward zero, but it is important to note that this is different than rounding toward -infinity. Rounding \"down\" can be interpreted either way."
                    },
                    {
                        "username": "tharunbalaji31",
                        "content": "Yeah I too got the same result, try using int(6/-132), you would get 0"
                    },
                    {
                        "username": "choprasrishti01",
                        "content": "python will take floor automatically and return the result rounded off to -1 \\nas [@Luc Taylor](/godshiva) said you can instead divide first and then convert to integer . example: int(b/a)\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "You can probably guess why I\\'m reading your comment :)  \\nIt appears, comparing a passing version with my failing version, for python at least\\nWhat I typed was `o1 // o2` and what I needed to type, to make it pass was `int(o1/o2)`"
                    },
                    {
                        "username": "Ahmed-Hodhod",
                        "content": "Just a note, i don\\'t know if it is mentioned below or not,\\nmath.trunc() : Python has a builtin method to do truncation for us\\n\\nTruncation toward Zero is simply like that :\\n5/ 2 = 2\\n-5 / 2 = -2\\nalways go toward zero"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "Also you could use type conversion with floating division like:\\nint(5/2) = 2\\nint(-5/2) = -2"
                    },
                    {
                        "username": "shivamrawat2626",
                        "content": "Line 23: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:32:28\\n\\nelse if(tokens[i]==\"*\")\\n                    s.push(v2*v1);"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "if you declare stack as ```stack<long long>``` then the problem will be solve "
                    },
                    {
                        "username": "saiful1604008",
                        "content": "[@lrazo](/lrazo) you need to use long long if overflow occurs."
                    },
                    {
                        "username": "lrazo",
                        "content": "I had the same problem, but it was solved casting to `(long long)`\n`res = (long long) v1 * v2;`"
                    },
                    {
                        "username": "Enzhou",
                        "content": "for java, 6/-132 = 0\\nbut in python 6/-132 = -1\\n\\nany comments?"
                    },
                    {
                        "username": "Triquetra",
                        "content": "Workaround without resorting to floating point: `a//b if a*b >= 0 else -(-a//b)`."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "I guess it\\'e becuase Java implements truncated division and python implements floored division"
                    },
                    {
                        "username": "amanchandna",
                        "content": "[@sumitChoube238](/sumitChoube238) \\uD83E\\uDD23\\uD83E\\uDD23"
                    },
                    {
                        "username": "sumitChoube238",
                        "content": "[@pingvaibhav](/pingvaibhav)  bro vo comment 2014 se hai \\n"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "Convert to floating, then calculate and round accordingly"
                    },
                    {
                        "username": "natitati",
                        "content": "I am going insane."
                    },
                    {
                        "username": "himanshu1910",
                        "content": "[\"4\",\"-2\",\"/\",\"2\",\"-3\",\"-\",\"-\"]\n\ncan someone explain this test case how the answer is -7\n\nMy solution:-\n```\nclass Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stck =[]\n        for t in tokens:\n            if t not in [\"+\", \"-\", \"*\", \"/\"]:\n                stck.append(t)\n            else:\n                a=stck.pop()\n                b=stck.pop()\n                stck.append(self.perform(t, b, a))\n                \n        return int(stck[0])\n                \n    def perform(self, op, b, a):\n        b, a =int(b), int(a)\n        if op ==\"+\":\n            return b+a\n        elif op == \"-\":\n            return b-a\n        elif op == \"*\":\n            return b*a\n        else:\n            return math.floor(abs(b)/abs(a))\n```"
                    },
                    {
                        "username": "Yogi_978",
                        "content": "stack[4,-2]        op= 4/-2 =-2\nstack[-2,2,3]     op=2-(-3)=5\nstack[-2,5]    op=-2-(5)=-7    hence the answer\n\nremove abs in code : we dont need that\nremove floor division: use int(a/b)  that should work....."
                    },
                    {
                        "username": "ajsdo222",
                        "content": "[@KatappaSR](/KatappaSR) The last one seems incorrect. Shouldn\\'t this be like this?\\n\\n[\"4\", \"-2\", \"/\", \"2\", \"-3\", \"-\", \"-\"]\\n\\nStack: []\\n\\n\"4\": push 4 onto the stack\\nStack: [4]\\n\\n\"-2\": push -2 onto the stack\\nStack: [4, -2]\\n\\n\"/\": pop -2 and 4 from the stack, divide 4 by -2, and push the result (which is -2) onto the stack\\nStack: [-2]\\n\\n\"2\": push 2 onto the stack\\nStack: [-2, 2]\\n\\n\"-3\": push -3 onto the stack\\nStack: [-2, 2, -3]\\n\\n\"-\": pop -3 and 2 from the stack, subtract 2 from -3, and push the result (which is -5) onto the stack\\nStack: [-2, -5]\\n\\n\"-\": pop -5 and -2 from the stack, subtract -2 from -5, and push the result (which is -3) onto the stack\\nStack: [-3]\\n\\nThe final result is -3."
                    },
                    {
                        "username": "aryansuvarna",
                        "content": "[@KatappaSR](/KatappaSR) shouldn\\'t 4 / -2 yield 0. I thought we always truncate to 0"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "You perform the operation as soon as operator is encountered\\nSo 4 -2 / 2 -3 - -\\nFirst is division  (4 / -2) 2 -3 - -which makes it -2 2 -3 - -\\nThen subtraction -2 2 - (-3) - which makes it -2 5 -\\nThen again subtraction -2 - 5 which makes it -7"
                    },
                    {
                        "username": "tpolm",
                        "content": "e g 200 200 200 200 200 * * * * \\n\\nthe tests from judges do not seem to test for the large results. the custom test like this breaks online judge completely;)\\n\\nthe original problem makes it clear that long arithmetic is needed, otherwise ir is not even \"meduim\", but \"\\n\\n"
                    },
                    {
                        "username": "nathankm",
                        "content": "I think integer overflow issues are a valid programming issue to work around, but to me it just seems kind of annoying to deal with in leetcode problems. In almost most cases, the solution is to just make certain variables and outputs 64-bit integers, which doesn\\'t really add to any sort of problem-solving skills in my opinion. I think it\\'d be better to not include 32-bit integer overflow in problems for which it is not really meaningful. "
                    },
                    {
                        "username": "acearth",
                        "content": "Due to division with negative number have different implements in different platform,     the use case \"\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\"  for mentioned question can NOT work well in ruby.\\n\\nIn ruby, division with negative number will generate integer result close to negative infinite, which is opposite to C and others.  \\n\\nIs my fault, or the use case should be modified? thx"
                    },
                    {
                        "username": "silvere",
                        "content": "Why NPR of [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"] got 22?not 12?\\n\\nThanks."
                    },
                    {
                        "username": "bosnma",
                        "content": "tends to 0... means, 1.3 will be floored to 1 while -1.3 will be ceiled to -1"
                    }
                ]
            },
            {
                "id": 1719683,
                "content": [
                    {
                        "username": "yfdyyy",
                        "content": "when I test [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"], \\nin this program, the result I got is 12, I think I am right. Because when I calculate 6/(-132) = -1, not 0, so i think the result is 12 not 22."
                    },
                    {
                        "username": "nonethewiser",
                        "content": "\"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "soleo",
                        "content": "If you are using `//` in python3, that would be the root cause for the test to fail. Check https://stackoverflow.com/questions/19517868/integer-division-by-negative-number"
                    },
                    {
                        "username": "TheSuperGroot",
                        "content": "[@nghuuminh03](/nghuuminh03) maybe he /she is still  looking"
                    },
                    {
                        "username": "0biwan",
                        "content": "[@jitendra_nagar_50](/jitendra_nagar_50) int(6 / -132), no need for `float()` type conversion. Result will be float anyway"
                    },
                    {
                        "username": "jitendra_nagar_50",
                        "content": "Do float division then convert to int like int(float(6)/-132)"
                    },
                    {
                        "username": "nghuuminh03",
                        "content": "guys his comment was 8 years ago"
                    },
                    {
                        "username": "andynullwong",
                        "content": "6/(-132) = -0.04545454545. Make sure that the method you are using is rounding towards zero, For example in javascript Math.floor will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case)"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "The question asks to round towards zero. So if it is negative, round to greater integer. If positive round to smaller integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "Simplest solution to your problem can be \\n`do the Float Division then convert the result into int`"
                    },
                    {
                        "username": "arobe91594",
                        "content": "[@tharunbalaji31](/tharunbalaji31) \\nIt is heavily dependent on the language (for some languages, rounding behavior can even differ from compiler to compiler, ex. C)\\n\\nFor this problem, the desired behavior is rounding toward zero, but it is important to note that this is different than rounding toward -infinity. Rounding \"down\" can be interpreted either way."
                    },
                    {
                        "username": "tharunbalaji31",
                        "content": "Yeah I too got the same result, try using int(6/-132), you would get 0"
                    },
                    {
                        "username": "choprasrishti01",
                        "content": "python will take floor automatically and return the result rounded off to -1 \\nas [@Luc Taylor](/godshiva) said you can instead divide first and then convert to integer . example: int(b/a)\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "You can probably guess why I\\'m reading your comment :)  \\nIt appears, comparing a passing version with my failing version, for python at least\\nWhat I typed was `o1 // o2` and what I needed to type, to make it pass was `int(o1/o2)`"
                    },
                    {
                        "username": "Ahmed-Hodhod",
                        "content": "Just a note, i don\\'t know if it is mentioned below or not,\\nmath.trunc() : Python has a builtin method to do truncation for us\\n\\nTruncation toward Zero is simply like that :\\n5/ 2 = 2\\n-5 / 2 = -2\\nalways go toward zero"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "Also you could use type conversion with floating division like:\\nint(5/2) = 2\\nint(-5/2) = -2"
                    },
                    {
                        "username": "shivamrawat2626",
                        "content": "Line 23: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:32:28\\n\\nelse if(tokens[i]==\"*\")\\n                    s.push(v2*v1);"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "if you declare stack as ```stack<long long>``` then the problem will be solve "
                    },
                    {
                        "username": "saiful1604008",
                        "content": "[@lrazo](/lrazo) you need to use long long if overflow occurs."
                    },
                    {
                        "username": "lrazo",
                        "content": "I had the same problem, but it was solved casting to `(long long)`\n`res = (long long) v1 * v2;`"
                    },
                    {
                        "username": "Enzhou",
                        "content": "for java, 6/-132 = 0\\nbut in python 6/-132 = -1\\n\\nany comments?"
                    },
                    {
                        "username": "Triquetra",
                        "content": "Workaround without resorting to floating point: `a//b if a*b >= 0 else -(-a//b)`."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "I guess it\\'e becuase Java implements truncated division and python implements floored division"
                    },
                    {
                        "username": "amanchandna",
                        "content": "[@sumitChoube238](/sumitChoube238) \\uD83E\\uDD23\\uD83E\\uDD23"
                    },
                    {
                        "username": "sumitChoube238",
                        "content": "[@pingvaibhav](/pingvaibhav)  bro vo comment 2014 se hai \\n"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "Convert to floating, then calculate and round accordingly"
                    },
                    {
                        "username": "natitati",
                        "content": "I am going insane."
                    },
                    {
                        "username": "himanshu1910",
                        "content": "[\"4\",\"-2\",\"/\",\"2\",\"-3\",\"-\",\"-\"]\n\ncan someone explain this test case how the answer is -7\n\nMy solution:-\n```\nclass Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stck =[]\n        for t in tokens:\n            if t not in [\"+\", \"-\", \"*\", \"/\"]:\n                stck.append(t)\n            else:\n                a=stck.pop()\n                b=stck.pop()\n                stck.append(self.perform(t, b, a))\n                \n        return int(stck[0])\n                \n    def perform(self, op, b, a):\n        b, a =int(b), int(a)\n        if op ==\"+\":\n            return b+a\n        elif op == \"-\":\n            return b-a\n        elif op == \"*\":\n            return b*a\n        else:\n            return math.floor(abs(b)/abs(a))\n```"
                    },
                    {
                        "username": "Yogi_978",
                        "content": "stack[4,-2]        op= 4/-2 =-2\nstack[-2,2,3]     op=2-(-3)=5\nstack[-2,5]    op=-2-(5)=-7    hence the answer\n\nremove abs in code : we dont need that\nremove floor division: use int(a/b)  that should work....."
                    },
                    {
                        "username": "ajsdo222",
                        "content": "[@KatappaSR](/KatappaSR) The last one seems incorrect. Shouldn\\'t this be like this?\\n\\n[\"4\", \"-2\", \"/\", \"2\", \"-3\", \"-\", \"-\"]\\n\\nStack: []\\n\\n\"4\": push 4 onto the stack\\nStack: [4]\\n\\n\"-2\": push -2 onto the stack\\nStack: [4, -2]\\n\\n\"/\": pop -2 and 4 from the stack, divide 4 by -2, and push the result (which is -2) onto the stack\\nStack: [-2]\\n\\n\"2\": push 2 onto the stack\\nStack: [-2, 2]\\n\\n\"-3\": push -3 onto the stack\\nStack: [-2, 2, -3]\\n\\n\"-\": pop -3 and 2 from the stack, subtract 2 from -3, and push the result (which is -5) onto the stack\\nStack: [-2, -5]\\n\\n\"-\": pop -5 and -2 from the stack, subtract -2 from -5, and push the result (which is -3) onto the stack\\nStack: [-3]\\n\\nThe final result is -3."
                    },
                    {
                        "username": "aryansuvarna",
                        "content": "[@KatappaSR](/KatappaSR) shouldn\\'t 4 / -2 yield 0. I thought we always truncate to 0"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "You perform the operation as soon as operator is encountered\\nSo 4 -2 / 2 -3 - -\\nFirst is division  (4 / -2) 2 -3 - -which makes it -2 2 -3 - -\\nThen subtraction -2 2 - (-3) - which makes it -2 5 -\\nThen again subtraction -2 - 5 which makes it -7"
                    },
                    {
                        "username": "tpolm",
                        "content": "e g 200 200 200 200 200 * * * * \\n\\nthe tests from judges do not seem to test for the large results. the custom test like this breaks online judge completely;)\\n\\nthe original problem makes it clear that long arithmetic is needed, otherwise ir is not even \"meduim\", but \"\\n\\n"
                    },
                    {
                        "username": "nathankm",
                        "content": "I think integer overflow issues are a valid programming issue to work around, but to me it just seems kind of annoying to deal with in leetcode problems. In almost most cases, the solution is to just make certain variables and outputs 64-bit integers, which doesn\\'t really add to any sort of problem-solving skills in my opinion. I think it\\'d be better to not include 32-bit integer overflow in problems for which it is not really meaningful. "
                    },
                    {
                        "username": "acearth",
                        "content": "Due to division with negative number have different implements in different platform,     the use case \"\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\"  for mentioned question can NOT work well in ruby.\\n\\nIn ruby, division with negative number will generate integer result close to negative infinite, which is opposite to C and others.  \\n\\nIs my fault, or the use case should be modified? thx"
                    },
                    {
                        "username": "silvere",
                        "content": "Why NPR of [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"] got 22?not 12?\\n\\nThanks."
                    },
                    {
                        "username": "bosnma",
                        "content": "tends to 0... means, 1.3 will be floored to 1 while -1.3 will be ceiled to -1"
                    }
                ]
            },
            {
                "id": 1576662,
                "content": [
                    {
                        "username": "yfdyyy",
                        "content": "when I test [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"], \\nin this program, the result I got is 12, I think I am right. Because when I calculate 6/(-132) = -1, not 0, so i think the result is 12 not 22."
                    },
                    {
                        "username": "nonethewiser",
                        "content": "\"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "soleo",
                        "content": "If you are using `//` in python3, that would be the root cause for the test to fail. Check https://stackoverflow.com/questions/19517868/integer-division-by-negative-number"
                    },
                    {
                        "username": "TheSuperGroot",
                        "content": "[@nghuuminh03](/nghuuminh03) maybe he /she is still  looking"
                    },
                    {
                        "username": "0biwan",
                        "content": "[@jitendra_nagar_50](/jitendra_nagar_50) int(6 / -132), no need for `float()` type conversion. Result will be float anyway"
                    },
                    {
                        "username": "jitendra_nagar_50",
                        "content": "Do float division then convert to int like int(float(6)/-132)"
                    },
                    {
                        "username": "nghuuminh03",
                        "content": "guys his comment was 8 years ago"
                    },
                    {
                        "username": "andynullwong",
                        "content": "6/(-132) = -0.04545454545. Make sure that the method you are using is rounding towards zero, For example in javascript Math.floor will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case)"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "The question asks to round towards zero. So if it is negative, round to greater integer. If positive round to smaller integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "Simplest solution to your problem can be \\n`do the Float Division then convert the result into int`"
                    },
                    {
                        "username": "arobe91594",
                        "content": "[@tharunbalaji31](/tharunbalaji31) \\nIt is heavily dependent on the language (for some languages, rounding behavior can even differ from compiler to compiler, ex. C)\\n\\nFor this problem, the desired behavior is rounding toward zero, but it is important to note that this is different than rounding toward -infinity. Rounding \"down\" can be interpreted either way."
                    },
                    {
                        "username": "tharunbalaji31",
                        "content": "Yeah I too got the same result, try using int(6/-132), you would get 0"
                    },
                    {
                        "username": "choprasrishti01",
                        "content": "python will take floor automatically and return the result rounded off to -1 \\nas [@Luc Taylor](/godshiva) said you can instead divide first and then convert to integer . example: int(b/a)\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "You can probably guess why I\\'m reading your comment :)  \\nIt appears, comparing a passing version with my failing version, for python at least\\nWhat I typed was `o1 // o2` and what I needed to type, to make it pass was `int(o1/o2)`"
                    },
                    {
                        "username": "Ahmed-Hodhod",
                        "content": "Just a note, i don\\'t know if it is mentioned below or not,\\nmath.trunc() : Python has a builtin method to do truncation for us\\n\\nTruncation toward Zero is simply like that :\\n5/ 2 = 2\\n-5 / 2 = -2\\nalways go toward zero"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "Also you could use type conversion with floating division like:\\nint(5/2) = 2\\nint(-5/2) = -2"
                    },
                    {
                        "username": "shivamrawat2626",
                        "content": "Line 23: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:32:28\\n\\nelse if(tokens[i]==\"*\")\\n                    s.push(v2*v1);"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "if you declare stack as ```stack<long long>``` then the problem will be solve "
                    },
                    {
                        "username": "saiful1604008",
                        "content": "[@lrazo](/lrazo) you need to use long long if overflow occurs."
                    },
                    {
                        "username": "lrazo",
                        "content": "I had the same problem, but it was solved casting to `(long long)`\n`res = (long long) v1 * v2;`"
                    },
                    {
                        "username": "Enzhou",
                        "content": "for java, 6/-132 = 0\\nbut in python 6/-132 = -1\\n\\nany comments?"
                    },
                    {
                        "username": "Triquetra",
                        "content": "Workaround without resorting to floating point: `a//b if a*b >= 0 else -(-a//b)`."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "I guess it\\'e becuase Java implements truncated division and python implements floored division"
                    },
                    {
                        "username": "amanchandna",
                        "content": "[@sumitChoube238](/sumitChoube238) \\uD83E\\uDD23\\uD83E\\uDD23"
                    },
                    {
                        "username": "sumitChoube238",
                        "content": "[@pingvaibhav](/pingvaibhav)  bro vo comment 2014 se hai \\n"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "Convert to floating, then calculate and round accordingly"
                    },
                    {
                        "username": "natitati",
                        "content": "I am going insane."
                    },
                    {
                        "username": "himanshu1910",
                        "content": "[\"4\",\"-2\",\"/\",\"2\",\"-3\",\"-\",\"-\"]\n\ncan someone explain this test case how the answer is -7\n\nMy solution:-\n```\nclass Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stck =[]\n        for t in tokens:\n            if t not in [\"+\", \"-\", \"*\", \"/\"]:\n                stck.append(t)\n            else:\n                a=stck.pop()\n                b=stck.pop()\n                stck.append(self.perform(t, b, a))\n                \n        return int(stck[0])\n                \n    def perform(self, op, b, a):\n        b, a =int(b), int(a)\n        if op ==\"+\":\n            return b+a\n        elif op == \"-\":\n            return b-a\n        elif op == \"*\":\n            return b*a\n        else:\n            return math.floor(abs(b)/abs(a))\n```"
                    },
                    {
                        "username": "Yogi_978",
                        "content": "stack[4,-2]        op= 4/-2 =-2\nstack[-2,2,3]     op=2-(-3)=5\nstack[-2,5]    op=-2-(5)=-7    hence the answer\n\nremove abs in code : we dont need that\nremove floor division: use int(a/b)  that should work....."
                    },
                    {
                        "username": "ajsdo222",
                        "content": "[@KatappaSR](/KatappaSR) The last one seems incorrect. Shouldn\\'t this be like this?\\n\\n[\"4\", \"-2\", \"/\", \"2\", \"-3\", \"-\", \"-\"]\\n\\nStack: []\\n\\n\"4\": push 4 onto the stack\\nStack: [4]\\n\\n\"-2\": push -2 onto the stack\\nStack: [4, -2]\\n\\n\"/\": pop -2 and 4 from the stack, divide 4 by -2, and push the result (which is -2) onto the stack\\nStack: [-2]\\n\\n\"2\": push 2 onto the stack\\nStack: [-2, 2]\\n\\n\"-3\": push -3 onto the stack\\nStack: [-2, 2, -3]\\n\\n\"-\": pop -3 and 2 from the stack, subtract 2 from -3, and push the result (which is -5) onto the stack\\nStack: [-2, -5]\\n\\n\"-\": pop -5 and -2 from the stack, subtract -2 from -5, and push the result (which is -3) onto the stack\\nStack: [-3]\\n\\nThe final result is -3."
                    },
                    {
                        "username": "aryansuvarna",
                        "content": "[@KatappaSR](/KatappaSR) shouldn\\'t 4 / -2 yield 0. I thought we always truncate to 0"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "You perform the operation as soon as operator is encountered\\nSo 4 -2 / 2 -3 - -\\nFirst is division  (4 / -2) 2 -3 - -which makes it -2 2 -3 - -\\nThen subtraction -2 2 - (-3) - which makes it -2 5 -\\nThen again subtraction -2 - 5 which makes it -7"
                    },
                    {
                        "username": "tpolm",
                        "content": "e g 200 200 200 200 200 * * * * \\n\\nthe tests from judges do not seem to test for the large results. the custom test like this breaks online judge completely;)\\n\\nthe original problem makes it clear that long arithmetic is needed, otherwise ir is not even \"meduim\", but \"\\n\\n"
                    },
                    {
                        "username": "nathankm",
                        "content": "I think integer overflow issues are a valid programming issue to work around, but to me it just seems kind of annoying to deal with in leetcode problems. In almost most cases, the solution is to just make certain variables and outputs 64-bit integers, which doesn\\'t really add to any sort of problem-solving skills in my opinion. I think it\\'d be better to not include 32-bit integer overflow in problems for which it is not really meaningful. "
                    },
                    {
                        "username": "acearth",
                        "content": "Due to division with negative number have different implements in different platform,     the use case \"\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\"  for mentioned question can NOT work well in ruby.\\n\\nIn ruby, division with negative number will generate integer result close to negative infinite, which is opposite to C and others.  \\n\\nIs my fault, or the use case should be modified? thx"
                    },
                    {
                        "username": "silvere",
                        "content": "Why NPR of [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"] got 22?not 12?\\n\\nThanks."
                    },
                    {
                        "username": "bosnma",
                        "content": "tends to 0... means, 1.3 will be floored to 1 while -1.3 will be ceiled to -1"
                    }
                ]
            },
            {
                "id": 1719598,
                "content": [
                    {
                        "username": "yfdyyy",
                        "content": "when I test [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"], \\nin this program, the result I got is 12, I think I am right. Because when I calculate 6/(-132) = -1, not 0, so i think the result is 12 not 22."
                    },
                    {
                        "username": "nonethewiser",
                        "content": "\"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "soleo",
                        "content": "If you are using `//` in python3, that would be the root cause for the test to fail. Check https://stackoverflow.com/questions/19517868/integer-division-by-negative-number"
                    },
                    {
                        "username": "TheSuperGroot",
                        "content": "[@nghuuminh03](/nghuuminh03) maybe he /she is still  looking"
                    },
                    {
                        "username": "0biwan",
                        "content": "[@jitendra_nagar_50](/jitendra_nagar_50) int(6 / -132), no need for `float()` type conversion. Result will be float anyway"
                    },
                    {
                        "username": "jitendra_nagar_50",
                        "content": "Do float division then convert to int like int(float(6)/-132)"
                    },
                    {
                        "username": "nghuuminh03",
                        "content": "guys his comment was 8 years ago"
                    },
                    {
                        "username": "andynullwong",
                        "content": "6/(-132) = -0.04545454545. Make sure that the method you are using is rounding towards zero, For example in javascript Math.floor will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case)"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "The question asks to round towards zero. So if it is negative, round to greater integer. If positive round to smaller integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "Simplest solution to your problem can be \\n`do the Float Division then convert the result into int`"
                    },
                    {
                        "username": "arobe91594",
                        "content": "[@tharunbalaji31](/tharunbalaji31) \\nIt is heavily dependent on the language (for some languages, rounding behavior can even differ from compiler to compiler, ex. C)\\n\\nFor this problem, the desired behavior is rounding toward zero, but it is important to note that this is different than rounding toward -infinity. Rounding \"down\" can be interpreted either way."
                    },
                    {
                        "username": "tharunbalaji31",
                        "content": "Yeah I too got the same result, try using int(6/-132), you would get 0"
                    },
                    {
                        "username": "choprasrishti01",
                        "content": "python will take floor automatically and return the result rounded off to -1 \\nas [@Luc Taylor](/godshiva) said you can instead divide first and then convert to integer . example: int(b/a)\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "You can probably guess why I\\'m reading your comment :)  \\nIt appears, comparing a passing version with my failing version, for python at least\\nWhat I typed was `o1 // o2` and what I needed to type, to make it pass was `int(o1/o2)`"
                    },
                    {
                        "username": "Ahmed-Hodhod",
                        "content": "Just a note, i don\\'t know if it is mentioned below or not,\\nmath.trunc() : Python has a builtin method to do truncation for us\\n\\nTruncation toward Zero is simply like that :\\n5/ 2 = 2\\n-5 / 2 = -2\\nalways go toward zero"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "Also you could use type conversion with floating division like:\\nint(5/2) = 2\\nint(-5/2) = -2"
                    },
                    {
                        "username": "shivamrawat2626",
                        "content": "Line 23: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:32:28\\n\\nelse if(tokens[i]==\"*\")\\n                    s.push(v2*v1);"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "if you declare stack as ```stack<long long>``` then the problem will be solve "
                    },
                    {
                        "username": "saiful1604008",
                        "content": "[@lrazo](/lrazo) you need to use long long if overflow occurs."
                    },
                    {
                        "username": "lrazo",
                        "content": "I had the same problem, but it was solved casting to `(long long)`\n`res = (long long) v1 * v2;`"
                    },
                    {
                        "username": "Enzhou",
                        "content": "for java, 6/-132 = 0\\nbut in python 6/-132 = -1\\n\\nany comments?"
                    },
                    {
                        "username": "Triquetra",
                        "content": "Workaround without resorting to floating point: `a//b if a*b >= 0 else -(-a//b)`."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "I guess it\\'e becuase Java implements truncated division and python implements floored division"
                    },
                    {
                        "username": "amanchandna",
                        "content": "[@sumitChoube238](/sumitChoube238) \\uD83E\\uDD23\\uD83E\\uDD23"
                    },
                    {
                        "username": "sumitChoube238",
                        "content": "[@pingvaibhav](/pingvaibhav)  bro vo comment 2014 se hai \\n"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "Convert to floating, then calculate and round accordingly"
                    },
                    {
                        "username": "natitati",
                        "content": "I am going insane."
                    },
                    {
                        "username": "himanshu1910",
                        "content": "[\"4\",\"-2\",\"/\",\"2\",\"-3\",\"-\",\"-\"]\n\ncan someone explain this test case how the answer is -7\n\nMy solution:-\n```\nclass Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stck =[]\n        for t in tokens:\n            if t not in [\"+\", \"-\", \"*\", \"/\"]:\n                stck.append(t)\n            else:\n                a=stck.pop()\n                b=stck.pop()\n                stck.append(self.perform(t, b, a))\n                \n        return int(stck[0])\n                \n    def perform(self, op, b, a):\n        b, a =int(b), int(a)\n        if op ==\"+\":\n            return b+a\n        elif op == \"-\":\n            return b-a\n        elif op == \"*\":\n            return b*a\n        else:\n            return math.floor(abs(b)/abs(a))\n```"
                    },
                    {
                        "username": "Yogi_978",
                        "content": "stack[4,-2]        op= 4/-2 =-2\nstack[-2,2,3]     op=2-(-3)=5\nstack[-2,5]    op=-2-(5)=-7    hence the answer\n\nremove abs in code : we dont need that\nremove floor division: use int(a/b)  that should work....."
                    },
                    {
                        "username": "ajsdo222",
                        "content": "[@KatappaSR](/KatappaSR) The last one seems incorrect. Shouldn\\'t this be like this?\\n\\n[\"4\", \"-2\", \"/\", \"2\", \"-3\", \"-\", \"-\"]\\n\\nStack: []\\n\\n\"4\": push 4 onto the stack\\nStack: [4]\\n\\n\"-2\": push -2 onto the stack\\nStack: [4, -2]\\n\\n\"/\": pop -2 and 4 from the stack, divide 4 by -2, and push the result (which is -2) onto the stack\\nStack: [-2]\\n\\n\"2\": push 2 onto the stack\\nStack: [-2, 2]\\n\\n\"-3\": push -3 onto the stack\\nStack: [-2, 2, -3]\\n\\n\"-\": pop -3 and 2 from the stack, subtract 2 from -3, and push the result (which is -5) onto the stack\\nStack: [-2, -5]\\n\\n\"-\": pop -5 and -2 from the stack, subtract -2 from -5, and push the result (which is -3) onto the stack\\nStack: [-3]\\n\\nThe final result is -3."
                    },
                    {
                        "username": "aryansuvarna",
                        "content": "[@KatappaSR](/KatappaSR) shouldn\\'t 4 / -2 yield 0. I thought we always truncate to 0"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "You perform the operation as soon as operator is encountered\\nSo 4 -2 / 2 -3 - -\\nFirst is division  (4 / -2) 2 -3 - -which makes it -2 2 -3 - -\\nThen subtraction -2 2 - (-3) - which makes it -2 5 -\\nThen again subtraction -2 - 5 which makes it -7"
                    },
                    {
                        "username": "tpolm",
                        "content": "e g 200 200 200 200 200 * * * * \\n\\nthe tests from judges do not seem to test for the large results. the custom test like this breaks online judge completely;)\\n\\nthe original problem makes it clear that long arithmetic is needed, otherwise ir is not even \"meduim\", but \"\\n\\n"
                    },
                    {
                        "username": "nathankm",
                        "content": "I think integer overflow issues are a valid programming issue to work around, but to me it just seems kind of annoying to deal with in leetcode problems. In almost most cases, the solution is to just make certain variables and outputs 64-bit integers, which doesn\\'t really add to any sort of problem-solving skills in my opinion. I think it\\'d be better to not include 32-bit integer overflow in problems for which it is not really meaningful. "
                    },
                    {
                        "username": "acearth",
                        "content": "Due to division with negative number have different implements in different platform,     the use case \"\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\"  for mentioned question can NOT work well in ruby.\\n\\nIn ruby, division with negative number will generate integer result close to negative infinite, which is opposite to C and others.  \\n\\nIs my fault, or the use case should be modified? thx"
                    },
                    {
                        "username": "silvere",
                        "content": "Why NPR of [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"] got 22?not 12?\\n\\nThanks."
                    },
                    {
                        "username": "bosnma",
                        "content": "tends to 0... means, 1.3 will be floored to 1 while -1.3 will be ceiled to -1"
                    }
                ]
            },
            {
                "id": 1567891,
                "content": [
                    {
                        "username": "yfdyyy",
                        "content": "when I test [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"], \\nin this program, the result I got is 12, I think I am right. Because when I calculate 6/(-132) = -1, not 0, so i think the result is 12 not 22."
                    },
                    {
                        "username": "nonethewiser",
                        "content": "\"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "soleo",
                        "content": "If you are using `//` in python3, that would be the root cause for the test to fail. Check https://stackoverflow.com/questions/19517868/integer-division-by-negative-number"
                    },
                    {
                        "username": "TheSuperGroot",
                        "content": "[@nghuuminh03](/nghuuminh03) maybe he /she is still  looking"
                    },
                    {
                        "username": "0biwan",
                        "content": "[@jitendra_nagar_50](/jitendra_nagar_50) int(6 / -132), no need for `float()` type conversion. Result will be float anyway"
                    },
                    {
                        "username": "jitendra_nagar_50",
                        "content": "Do float division then convert to int like int(float(6)/-132)"
                    },
                    {
                        "username": "nghuuminh03",
                        "content": "guys his comment was 8 years ago"
                    },
                    {
                        "username": "andynullwong",
                        "content": "6/(-132) = -0.04545454545. Make sure that the method you are using is rounding towards zero, For example in javascript Math.floor will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case)"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "The question asks to round towards zero. So if it is negative, round to greater integer. If positive round to smaller integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "Simplest solution to your problem can be \\n`do the Float Division then convert the result into int`"
                    },
                    {
                        "username": "arobe91594",
                        "content": "[@tharunbalaji31](/tharunbalaji31) \\nIt is heavily dependent on the language (for some languages, rounding behavior can even differ from compiler to compiler, ex. C)\\n\\nFor this problem, the desired behavior is rounding toward zero, but it is important to note that this is different than rounding toward -infinity. Rounding \"down\" can be interpreted either way."
                    },
                    {
                        "username": "tharunbalaji31",
                        "content": "Yeah I too got the same result, try using int(6/-132), you would get 0"
                    },
                    {
                        "username": "choprasrishti01",
                        "content": "python will take floor automatically and return the result rounded off to -1 \\nas [@Luc Taylor](/godshiva) said you can instead divide first and then convert to integer . example: int(b/a)\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "You can probably guess why I\\'m reading your comment :)  \\nIt appears, comparing a passing version with my failing version, for python at least\\nWhat I typed was `o1 // o2` and what I needed to type, to make it pass was `int(o1/o2)`"
                    },
                    {
                        "username": "Ahmed-Hodhod",
                        "content": "Just a note, i don\\'t know if it is mentioned below or not,\\nmath.trunc() : Python has a builtin method to do truncation for us\\n\\nTruncation toward Zero is simply like that :\\n5/ 2 = 2\\n-5 / 2 = -2\\nalways go toward zero"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "Also you could use type conversion with floating division like:\\nint(5/2) = 2\\nint(-5/2) = -2"
                    },
                    {
                        "username": "shivamrawat2626",
                        "content": "Line 23: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:32:28\\n\\nelse if(tokens[i]==\"*\")\\n                    s.push(v2*v1);"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "if you declare stack as ```stack<long long>``` then the problem will be solve "
                    },
                    {
                        "username": "saiful1604008",
                        "content": "[@lrazo](/lrazo) you need to use long long if overflow occurs."
                    },
                    {
                        "username": "lrazo",
                        "content": "I had the same problem, but it was solved casting to `(long long)`\n`res = (long long) v1 * v2;`"
                    },
                    {
                        "username": "Enzhou",
                        "content": "for java, 6/-132 = 0\\nbut in python 6/-132 = -1\\n\\nany comments?"
                    },
                    {
                        "username": "Triquetra",
                        "content": "Workaround without resorting to floating point: `a//b if a*b >= 0 else -(-a//b)`."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "I guess it\\'e becuase Java implements truncated division and python implements floored division"
                    },
                    {
                        "username": "amanchandna",
                        "content": "[@sumitChoube238](/sumitChoube238) \\uD83E\\uDD23\\uD83E\\uDD23"
                    },
                    {
                        "username": "sumitChoube238",
                        "content": "[@pingvaibhav](/pingvaibhav)  bro vo comment 2014 se hai \\n"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "Convert to floating, then calculate and round accordingly"
                    },
                    {
                        "username": "natitati",
                        "content": "I am going insane."
                    },
                    {
                        "username": "himanshu1910",
                        "content": "[\"4\",\"-2\",\"/\",\"2\",\"-3\",\"-\",\"-\"]\n\ncan someone explain this test case how the answer is -7\n\nMy solution:-\n```\nclass Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stck =[]\n        for t in tokens:\n            if t not in [\"+\", \"-\", \"*\", \"/\"]:\n                stck.append(t)\n            else:\n                a=stck.pop()\n                b=stck.pop()\n                stck.append(self.perform(t, b, a))\n                \n        return int(stck[0])\n                \n    def perform(self, op, b, a):\n        b, a =int(b), int(a)\n        if op ==\"+\":\n            return b+a\n        elif op == \"-\":\n            return b-a\n        elif op == \"*\":\n            return b*a\n        else:\n            return math.floor(abs(b)/abs(a))\n```"
                    },
                    {
                        "username": "Yogi_978",
                        "content": "stack[4,-2]        op= 4/-2 =-2\nstack[-2,2,3]     op=2-(-3)=5\nstack[-2,5]    op=-2-(5)=-7    hence the answer\n\nremove abs in code : we dont need that\nremove floor division: use int(a/b)  that should work....."
                    },
                    {
                        "username": "ajsdo222",
                        "content": "[@KatappaSR](/KatappaSR) The last one seems incorrect. Shouldn\\'t this be like this?\\n\\n[\"4\", \"-2\", \"/\", \"2\", \"-3\", \"-\", \"-\"]\\n\\nStack: []\\n\\n\"4\": push 4 onto the stack\\nStack: [4]\\n\\n\"-2\": push -2 onto the stack\\nStack: [4, -2]\\n\\n\"/\": pop -2 and 4 from the stack, divide 4 by -2, and push the result (which is -2) onto the stack\\nStack: [-2]\\n\\n\"2\": push 2 onto the stack\\nStack: [-2, 2]\\n\\n\"-3\": push -3 onto the stack\\nStack: [-2, 2, -3]\\n\\n\"-\": pop -3 and 2 from the stack, subtract 2 from -3, and push the result (which is -5) onto the stack\\nStack: [-2, -5]\\n\\n\"-\": pop -5 and -2 from the stack, subtract -2 from -5, and push the result (which is -3) onto the stack\\nStack: [-3]\\n\\nThe final result is -3."
                    },
                    {
                        "username": "aryansuvarna",
                        "content": "[@KatappaSR](/KatappaSR) shouldn\\'t 4 / -2 yield 0. I thought we always truncate to 0"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "You perform the operation as soon as operator is encountered\\nSo 4 -2 / 2 -3 - -\\nFirst is division  (4 / -2) 2 -3 - -which makes it -2 2 -3 - -\\nThen subtraction -2 2 - (-3) - which makes it -2 5 -\\nThen again subtraction -2 - 5 which makes it -7"
                    },
                    {
                        "username": "tpolm",
                        "content": "e g 200 200 200 200 200 * * * * \\n\\nthe tests from judges do not seem to test for the large results. the custom test like this breaks online judge completely;)\\n\\nthe original problem makes it clear that long arithmetic is needed, otherwise ir is not even \"meduim\", but \"\\n\\n"
                    },
                    {
                        "username": "nathankm",
                        "content": "I think integer overflow issues are a valid programming issue to work around, but to me it just seems kind of annoying to deal with in leetcode problems. In almost most cases, the solution is to just make certain variables and outputs 64-bit integers, which doesn\\'t really add to any sort of problem-solving skills in my opinion. I think it\\'d be better to not include 32-bit integer overflow in problems for which it is not really meaningful. "
                    },
                    {
                        "username": "acearth",
                        "content": "Due to division with negative number have different implements in different platform,     the use case \"\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\"  for mentioned question can NOT work well in ruby.\\n\\nIn ruby, division with negative number will generate integer result close to negative infinite, which is opposite to C and others.  \\n\\nIs my fault, or the use case should be modified? thx"
                    },
                    {
                        "username": "silvere",
                        "content": "Why NPR of [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"] got 22?not 12?\\n\\nThanks."
                    },
                    {
                        "username": "bosnma",
                        "content": "tends to 0... means, 1.3 will be floored to 1 while -1.3 will be ceiled to -1"
                    }
                ]
            },
            {
                "id": 1568981,
                "content": [
                    {
                        "username": "yfdyyy",
                        "content": "when I test [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"], \\nin this program, the result I got is 12, I think I am right. Because when I calculate 6/(-132) = -1, not 0, so i think the result is 12 not 22."
                    },
                    {
                        "username": "nonethewiser",
                        "content": "\"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "soleo",
                        "content": "If you are using `//` in python3, that would be the root cause for the test to fail. Check https://stackoverflow.com/questions/19517868/integer-division-by-negative-number"
                    },
                    {
                        "username": "TheSuperGroot",
                        "content": "[@nghuuminh03](/nghuuminh03) maybe he /she is still  looking"
                    },
                    {
                        "username": "0biwan",
                        "content": "[@jitendra_nagar_50](/jitendra_nagar_50) int(6 / -132), no need for `float()` type conversion. Result will be float anyway"
                    },
                    {
                        "username": "jitendra_nagar_50",
                        "content": "Do float division then convert to int like int(float(6)/-132)"
                    },
                    {
                        "username": "nghuuminh03",
                        "content": "guys his comment was 8 years ago"
                    },
                    {
                        "username": "andynullwong",
                        "content": "6/(-132) = -0.04545454545. Make sure that the method you are using is rounding towards zero, For example in javascript Math.floor will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case)"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "The question asks to round towards zero. So if it is negative, round to greater integer. If positive round to smaller integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "Simplest solution to your problem can be \\n`do the Float Division then convert the result into int`"
                    },
                    {
                        "username": "arobe91594",
                        "content": "[@tharunbalaji31](/tharunbalaji31) \\nIt is heavily dependent on the language (for some languages, rounding behavior can even differ from compiler to compiler, ex. C)\\n\\nFor this problem, the desired behavior is rounding toward zero, but it is important to note that this is different than rounding toward -infinity. Rounding \"down\" can be interpreted either way."
                    },
                    {
                        "username": "tharunbalaji31",
                        "content": "Yeah I too got the same result, try using int(6/-132), you would get 0"
                    },
                    {
                        "username": "choprasrishti01",
                        "content": "python will take floor automatically and return the result rounded off to -1 \\nas [@Luc Taylor](/godshiva) said you can instead divide first and then convert to integer . example: int(b/a)\\n"
                    },
                    {
                        "username": "godshiva",
                        "content": "You can probably guess why I\\'m reading your comment :)  \\nIt appears, comparing a passing version with my failing version, for python at least\\nWhat I typed was `o1 // o2` and what I needed to type, to make it pass was `int(o1/o2)`"
                    },
                    {
                        "username": "Ahmed-Hodhod",
                        "content": "Just a note, i don\\'t know if it is mentioned below or not,\\nmath.trunc() : Python has a builtin method to do truncation for us\\n\\nTruncation toward Zero is simply like that :\\n5/ 2 = 2\\n-5 / 2 = -2\\nalways go toward zero"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "Also you could use type conversion with floating division like:\\nint(5/2) = 2\\nint(-5/2) = -2"
                    },
                    {
                        "username": "shivamrawat2626",
                        "content": "Line 23: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:32:28\\n\\nelse if(tokens[i]==\"*\")\\n                    s.push(v2*v1);"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "if you declare stack as ```stack<long long>``` then the problem will be solve "
                    },
                    {
                        "username": "saiful1604008",
                        "content": "[@lrazo](/lrazo) you need to use long long if overflow occurs."
                    },
                    {
                        "username": "lrazo",
                        "content": "I had the same problem, but it was solved casting to `(long long)`\n`res = (long long) v1 * v2;`"
                    },
                    {
                        "username": "Enzhou",
                        "content": "for java, 6/-132 = 0\\nbut in python 6/-132 = -1\\n\\nany comments?"
                    },
                    {
                        "username": "Triquetra",
                        "content": "Workaround without resorting to floating point: `a//b if a*b >= 0 else -(-a//b)`."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "I guess it\\'e becuase Java implements truncated division and python implements floored division"
                    },
                    {
                        "username": "amanchandna",
                        "content": "[@sumitChoube238](/sumitChoube238) \\uD83E\\uDD23\\uD83E\\uDD23"
                    },
                    {
                        "username": "sumitChoube238",
                        "content": "[@pingvaibhav](/pingvaibhav)  bro vo comment 2014 se hai \\n"
                    },
                    {
                        "username": "pingvaibhav",
                        "content": "Convert to floating, then calculate and round accordingly"
                    },
                    {
                        "username": "natitati",
                        "content": "I am going insane."
                    },
                    {
                        "username": "himanshu1910",
                        "content": "[\"4\",\"-2\",\"/\",\"2\",\"-3\",\"-\",\"-\"]\n\ncan someone explain this test case how the answer is -7\n\nMy solution:-\n```\nclass Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stck =[]\n        for t in tokens:\n            if t not in [\"+\", \"-\", \"*\", \"/\"]:\n                stck.append(t)\n            else:\n                a=stck.pop()\n                b=stck.pop()\n                stck.append(self.perform(t, b, a))\n                \n        return int(stck[0])\n                \n    def perform(self, op, b, a):\n        b, a =int(b), int(a)\n        if op ==\"+\":\n            return b+a\n        elif op == \"-\":\n            return b-a\n        elif op == \"*\":\n            return b*a\n        else:\n            return math.floor(abs(b)/abs(a))\n```"
                    },
                    {
                        "username": "Yogi_978",
                        "content": "stack[4,-2]        op= 4/-2 =-2\nstack[-2,2,3]     op=2-(-3)=5\nstack[-2,5]    op=-2-(5)=-7    hence the answer\n\nremove abs in code : we dont need that\nremove floor division: use int(a/b)  that should work....."
                    },
                    {
                        "username": "ajsdo222",
                        "content": "[@KatappaSR](/KatappaSR) The last one seems incorrect. Shouldn\\'t this be like this?\\n\\n[\"4\", \"-2\", \"/\", \"2\", \"-3\", \"-\", \"-\"]\\n\\nStack: []\\n\\n\"4\": push 4 onto the stack\\nStack: [4]\\n\\n\"-2\": push -2 onto the stack\\nStack: [4, -2]\\n\\n\"/\": pop -2 and 4 from the stack, divide 4 by -2, and push the result (which is -2) onto the stack\\nStack: [-2]\\n\\n\"2\": push 2 onto the stack\\nStack: [-2, 2]\\n\\n\"-3\": push -3 onto the stack\\nStack: [-2, 2, -3]\\n\\n\"-\": pop -3 and 2 from the stack, subtract 2 from -3, and push the result (which is -5) onto the stack\\nStack: [-2, -5]\\n\\n\"-\": pop -5 and -2 from the stack, subtract -2 from -5, and push the result (which is -3) onto the stack\\nStack: [-3]\\n\\nThe final result is -3."
                    },
                    {
                        "username": "aryansuvarna",
                        "content": "[@KatappaSR](/KatappaSR) shouldn\\'t 4 / -2 yield 0. I thought we always truncate to 0"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "You perform the operation as soon as operator is encountered\\nSo 4 -2 / 2 -3 - -\\nFirst is division  (4 / -2) 2 -3 - -which makes it -2 2 -3 - -\\nThen subtraction -2 2 - (-3) - which makes it -2 5 -\\nThen again subtraction -2 - 5 which makes it -7"
                    },
                    {
                        "username": "tpolm",
                        "content": "e g 200 200 200 200 200 * * * * \\n\\nthe tests from judges do not seem to test for the large results. the custom test like this breaks online judge completely;)\\n\\nthe original problem makes it clear that long arithmetic is needed, otherwise ir is not even \"meduim\", but \"\\n\\n"
                    },
                    {
                        "username": "nathankm",
                        "content": "I think integer overflow issues are a valid programming issue to work around, but to me it just seems kind of annoying to deal with in leetcode problems. In almost most cases, the solution is to just make certain variables and outputs 64-bit integers, which doesn\\'t really add to any sort of problem-solving skills in my opinion. I think it\\'d be better to not include 32-bit integer overflow in problems for which it is not really meaningful. "
                    },
                    {
                        "username": "acearth",
                        "content": "Due to division with negative number have different implements in different platform,     the use case \"\\n[\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\"  for mentioned question can NOT work well in ruby.\\n\\nIn ruby, division with negative number will generate integer result close to negative infinite, which is opposite to C and others.  \\n\\nIs my fault, or the use case should be modified? thx"
                    },
                    {
                        "username": "silvere",
                        "content": "Why NPR of [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"] got 22?not 12?\\n\\nThanks."
                    },
                    {
                        "username": "bosnma",
                        "content": "tends to 0... means, 1.3 will be floored to 1 while -1.3 will be ceiled to -1"
                    }
                ]
            },
            {
                "id": 1567892,
                "content": [
                    {
                        "username": "file404",
                        "content": "i have got \"accepted\",but i was wondering whether i got the meaning of this problem.the question said the operand can be a another expression,but if i do this,i got wrong anwser.is there a fault in the question?"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "No it completely goes with what you are saying. An operand can be an expression means that it is in form of a string and not a ordinary number like 1,2,3 but rather in form of \"1\",\"34\",\"145\" etc."
                    },
                    {
                        "username": "_grandmaster_",
                        "content": "Easiest way in python3 to achieve \"division between two integers always truncates toward zero\" is to do the normal float division, and then convert it to integer, like -> int(a/b).\\n\\nJust saved you a trip to stackoverflow :)"
                    },
                    {
                        "username": "Shaik_Aman_Sayer",
                        "content": "wonderful problem to understand stack."
                    },
                    {
                        "username": "rminjy",
                        "content": "fyi i thought truncated toward zero meant to floor divide but it does not \\nint(a/b) is truncated toward zero and a//b is not save yourself the suffering if you had the same problem as me :,)"
                    },
                    {
                        "username": "t4n",
                        "content": "Goated"
                    },
                    {
                        "username": "angelsoto2373",
                        "content": "My code is getting the correct response in vscode but for some reason not on leetcode, and I cant figure out why? \\n `import math\\n\\ndef evalRPN(tokens):\\n    curr = 0\\n    ans = None\\n    stack = []\\n    operators = {\\n        \\'+\\': True, \\'-\\': True, \\'*\\': True, \\'/\\': True\\n    }\\n\\n    while curr < len(tokens):\\n        value = tokens[curr]\\n        if value not in operators:\\n            stack.append(value)\\n            curr += 1\\n        else:\\n            num1 = int(stack.pop())\\n            num2 = int(stack.pop())\\n            if value == \\'+\\':\\n                ans = math.floor(num2 + num1)\\n            elif value == \\'-\\':\\n                ans = math.floor(num2 - num1)\\n            elif value == \\'*\\':\\n                ans = math.floor(num2 * num1)\\n            else:\\n                ans = math.ceil(num2 / num1)\\n            stack.append(int(float(ans)))\\n            curr += 1\\n\\n    return stack.pop()\\n\\n\\ntokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\",\"2\",\"*\"]\\nevalRPN(tokens)`"
                    },
                    {
                        "username": "AdityaPrasad275",
                        "content": "lol they gave away the answer in the wiki they linked"
                    },
                    {
                        "username": "vishesh014",
                        "content": "hey aditya i have taken help from ur solution \\nbut can you pls explain it to me"
                    },
                    {
                        "username": "xqsu",
                        "content": "Does anyone know why this code does not work properly in leetcode?when I tested [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"\",\"/\",\"\",\"17\",\"+\",\"5\",\"+\"],\\nin this program, the result I got was 22 in vs studio but 12 in leetcode?\\n`def operations(operator, x, y):\\n    if operator == \"+\":\\n        return x+y\\n    elif operator == \"-\":\\n        return x-y\\n    elif operator == \"/\":\\n        return int(x/y)\\n    else:\\n        return x*y\\n\\n\\noperators = [\"+\", \"-\", \"/\", \"*\"]\\nresult = []\\nfor token in tokens:\\n    if token not in operators:\\n        result.append(int(token))\\n    elif len(result) != 0:\\n        y = result.pop()\\n        x = result.pop()\\n        result.append(operations(token, x, y))\\nreturn(result.pop())`"
                    },
                    {
                        "username": "JayVerma",
                        "content": "The test cases seems to have changed somewhere between September and December 2022. Need to use long long now, int doesn\\'t work anymore"
                    },
                    {
                        "username": "manmohansaraswat15",
                        "content": "What is the means of \n``` division between two integers should truncate toward zero ```"
                    },
                    {
                        "username": "sparklingness",
                        "content": "And you should consider the negative case. \\n-3/2 = -1.5 --> it should be near to zero. So, it should be -1."
                    },
                    {
                        "username": "suhaanbhandary1",
                        "content": "In other terms the floor of the division is taken: \\neg: 3/2 = 1\\nsince floor(1.5) is 1"
                    },
                    {
                        "username": "zolibra",
                        "content": "the problem is that how to get a Node's previous's previous of a LinkedList..."
                    }
                ]
            },
            {
                "id": 1968519,
                "content": [
                    {
                        "username": "file404",
                        "content": "i have got \"accepted\",but i was wondering whether i got the meaning of this problem.the question said the operand can be a another expression,but if i do this,i got wrong anwser.is there a fault in the question?"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "No it completely goes with what you are saying. An operand can be an expression means that it is in form of a string and not a ordinary number like 1,2,3 but rather in form of \"1\",\"34\",\"145\" etc."
                    },
                    {
                        "username": "_grandmaster_",
                        "content": "Easiest way in python3 to achieve \"division between two integers always truncates toward zero\" is to do the normal float division, and then convert it to integer, like -> int(a/b).\\n\\nJust saved you a trip to stackoverflow :)"
                    },
                    {
                        "username": "Shaik_Aman_Sayer",
                        "content": "wonderful problem to understand stack."
                    },
                    {
                        "username": "rminjy",
                        "content": "fyi i thought truncated toward zero meant to floor divide but it does not \\nint(a/b) is truncated toward zero and a//b is not save yourself the suffering if you had the same problem as me :,)"
                    },
                    {
                        "username": "t4n",
                        "content": "Goated"
                    },
                    {
                        "username": "angelsoto2373",
                        "content": "My code is getting the correct response in vscode but for some reason not on leetcode, and I cant figure out why? \\n `import math\\n\\ndef evalRPN(tokens):\\n    curr = 0\\n    ans = None\\n    stack = []\\n    operators = {\\n        \\'+\\': True, \\'-\\': True, \\'*\\': True, \\'/\\': True\\n    }\\n\\n    while curr < len(tokens):\\n        value = tokens[curr]\\n        if value not in operators:\\n            stack.append(value)\\n            curr += 1\\n        else:\\n            num1 = int(stack.pop())\\n            num2 = int(stack.pop())\\n            if value == \\'+\\':\\n                ans = math.floor(num2 + num1)\\n            elif value == \\'-\\':\\n                ans = math.floor(num2 - num1)\\n            elif value == \\'*\\':\\n                ans = math.floor(num2 * num1)\\n            else:\\n                ans = math.ceil(num2 / num1)\\n            stack.append(int(float(ans)))\\n            curr += 1\\n\\n    return stack.pop()\\n\\n\\ntokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\",\"2\",\"*\"]\\nevalRPN(tokens)`"
                    },
                    {
                        "username": "AdityaPrasad275",
                        "content": "lol they gave away the answer in the wiki they linked"
                    },
                    {
                        "username": "vishesh014",
                        "content": "hey aditya i have taken help from ur solution \\nbut can you pls explain it to me"
                    },
                    {
                        "username": "xqsu",
                        "content": "Does anyone know why this code does not work properly in leetcode?when I tested [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"\",\"/\",\"\",\"17\",\"+\",\"5\",\"+\"],\\nin this program, the result I got was 22 in vs studio but 12 in leetcode?\\n`def operations(operator, x, y):\\n    if operator == \"+\":\\n        return x+y\\n    elif operator == \"-\":\\n        return x-y\\n    elif operator == \"/\":\\n        return int(x/y)\\n    else:\\n        return x*y\\n\\n\\noperators = [\"+\", \"-\", \"/\", \"*\"]\\nresult = []\\nfor token in tokens:\\n    if token not in operators:\\n        result.append(int(token))\\n    elif len(result) != 0:\\n        y = result.pop()\\n        x = result.pop()\\n        result.append(operations(token, x, y))\\nreturn(result.pop())`"
                    },
                    {
                        "username": "JayVerma",
                        "content": "The test cases seems to have changed somewhere between September and December 2022. Need to use long long now, int doesn\\'t work anymore"
                    },
                    {
                        "username": "manmohansaraswat15",
                        "content": "What is the means of \n``` division between two integers should truncate toward zero ```"
                    },
                    {
                        "username": "sparklingness",
                        "content": "And you should consider the negative case. \\n-3/2 = -1.5 --> it should be near to zero. So, it should be -1."
                    },
                    {
                        "username": "suhaanbhandary1",
                        "content": "In other terms the floor of the division is taken: \\neg: 3/2 = 1\\nsince floor(1.5) is 1"
                    },
                    {
                        "username": "zolibra",
                        "content": "the problem is that how to get a Node's previous's previous of a LinkedList..."
                    }
                ]
            },
            {
                "id": 1902509,
                "content": [
                    {
                        "username": "file404",
                        "content": "i have got \"accepted\",but i was wondering whether i got the meaning of this problem.the question said the operand can be a another expression,but if i do this,i got wrong anwser.is there a fault in the question?"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "No it completely goes with what you are saying. An operand can be an expression means that it is in form of a string and not a ordinary number like 1,2,3 but rather in form of \"1\",\"34\",\"145\" etc."
                    },
                    {
                        "username": "_grandmaster_",
                        "content": "Easiest way in python3 to achieve \"division between two integers always truncates toward zero\" is to do the normal float division, and then convert it to integer, like -> int(a/b).\\n\\nJust saved you a trip to stackoverflow :)"
                    },
                    {
                        "username": "Shaik_Aman_Sayer",
                        "content": "wonderful problem to understand stack."
                    },
                    {
                        "username": "rminjy",
                        "content": "fyi i thought truncated toward zero meant to floor divide but it does not \\nint(a/b) is truncated toward zero and a//b is not save yourself the suffering if you had the same problem as me :,)"
                    },
                    {
                        "username": "t4n",
                        "content": "Goated"
                    },
                    {
                        "username": "angelsoto2373",
                        "content": "My code is getting the correct response in vscode but for some reason not on leetcode, and I cant figure out why? \\n `import math\\n\\ndef evalRPN(tokens):\\n    curr = 0\\n    ans = None\\n    stack = []\\n    operators = {\\n        \\'+\\': True, \\'-\\': True, \\'*\\': True, \\'/\\': True\\n    }\\n\\n    while curr < len(tokens):\\n        value = tokens[curr]\\n        if value not in operators:\\n            stack.append(value)\\n            curr += 1\\n        else:\\n            num1 = int(stack.pop())\\n            num2 = int(stack.pop())\\n            if value == \\'+\\':\\n                ans = math.floor(num2 + num1)\\n            elif value == \\'-\\':\\n                ans = math.floor(num2 - num1)\\n            elif value == \\'*\\':\\n                ans = math.floor(num2 * num1)\\n            else:\\n                ans = math.ceil(num2 / num1)\\n            stack.append(int(float(ans)))\\n            curr += 1\\n\\n    return stack.pop()\\n\\n\\ntokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\",\"2\",\"*\"]\\nevalRPN(tokens)`"
                    },
                    {
                        "username": "AdityaPrasad275",
                        "content": "lol they gave away the answer in the wiki they linked"
                    },
                    {
                        "username": "vishesh014",
                        "content": "hey aditya i have taken help from ur solution \\nbut can you pls explain it to me"
                    },
                    {
                        "username": "xqsu",
                        "content": "Does anyone know why this code does not work properly in leetcode?when I tested [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"\",\"/\",\"\",\"17\",\"+\",\"5\",\"+\"],\\nin this program, the result I got was 22 in vs studio but 12 in leetcode?\\n`def operations(operator, x, y):\\n    if operator == \"+\":\\n        return x+y\\n    elif operator == \"-\":\\n        return x-y\\n    elif operator == \"/\":\\n        return int(x/y)\\n    else:\\n        return x*y\\n\\n\\noperators = [\"+\", \"-\", \"/\", \"*\"]\\nresult = []\\nfor token in tokens:\\n    if token not in operators:\\n        result.append(int(token))\\n    elif len(result) != 0:\\n        y = result.pop()\\n        x = result.pop()\\n        result.append(operations(token, x, y))\\nreturn(result.pop())`"
                    },
                    {
                        "username": "JayVerma",
                        "content": "The test cases seems to have changed somewhere between September and December 2022. Need to use long long now, int doesn\\'t work anymore"
                    },
                    {
                        "username": "manmohansaraswat15",
                        "content": "What is the means of \n``` division between two integers should truncate toward zero ```"
                    },
                    {
                        "username": "sparklingness",
                        "content": "And you should consider the negative case. \\n-3/2 = -1.5 --> it should be near to zero. So, it should be -1."
                    },
                    {
                        "username": "suhaanbhandary1",
                        "content": "In other terms the floor of the division is taken: \\neg: 3/2 = 1\\nsince floor(1.5) is 1"
                    },
                    {
                        "username": "zolibra",
                        "content": "the problem is that how to get a Node's previous's previous of a LinkedList..."
                    }
                ]
            },
            {
                "id": 1951003,
                "content": [
                    {
                        "username": "file404",
                        "content": "i have got \"accepted\",but i was wondering whether i got the meaning of this problem.the question said the operand can be a another expression,but if i do this,i got wrong anwser.is there a fault in the question?"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "No it completely goes with what you are saying. An operand can be an expression means that it is in form of a string and not a ordinary number like 1,2,3 but rather in form of \"1\",\"34\",\"145\" etc."
                    },
                    {
                        "username": "_grandmaster_",
                        "content": "Easiest way in python3 to achieve \"division between two integers always truncates toward zero\" is to do the normal float division, and then convert it to integer, like -> int(a/b).\\n\\nJust saved you a trip to stackoverflow :)"
                    },
                    {
                        "username": "Shaik_Aman_Sayer",
                        "content": "wonderful problem to understand stack."
                    },
                    {
                        "username": "rminjy",
                        "content": "fyi i thought truncated toward zero meant to floor divide but it does not \\nint(a/b) is truncated toward zero and a//b is not save yourself the suffering if you had the same problem as me :,)"
                    },
                    {
                        "username": "t4n",
                        "content": "Goated"
                    },
                    {
                        "username": "angelsoto2373",
                        "content": "My code is getting the correct response in vscode but for some reason not on leetcode, and I cant figure out why? \\n `import math\\n\\ndef evalRPN(tokens):\\n    curr = 0\\n    ans = None\\n    stack = []\\n    operators = {\\n        \\'+\\': True, \\'-\\': True, \\'*\\': True, \\'/\\': True\\n    }\\n\\n    while curr < len(tokens):\\n        value = tokens[curr]\\n        if value not in operators:\\n            stack.append(value)\\n            curr += 1\\n        else:\\n            num1 = int(stack.pop())\\n            num2 = int(stack.pop())\\n            if value == \\'+\\':\\n                ans = math.floor(num2 + num1)\\n            elif value == \\'-\\':\\n                ans = math.floor(num2 - num1)\\n            elif value == \\'*\\':\\n                ans = math.floor(num2 * num1)\\n            else:\\n                ans = math.ceil(num2 / num1)\\n            stack.append(int(float(ans)))\\n            curr += 1\\n\\n    return stack.pop()\\n\\n\\ntokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\",\"2\",\"*\"]\\nevalRPN(tokens)`"
                    },
                    {
                        "username": "AdityaPrasad275",
                        "content": "lol they gave away the answer in the wiki they linked"
                    },
                    {
                        "username": "vishesh014",
                        "content": "hey aditya i have taken help from ur solution \\nbut can you pls explain it to me"
                    },
                    {
                        "username": "xqsu",
                        "content": "Does anyone know why this code does not work properly in leetcode?when I tested [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"\",\"/\",\"\",\"17\",\"+\",\"5\",\"+\"],\\nin this program, the result I got was 22 in vs studio but 12 in leetcode?\\n`def operations(operator, x, y):\\n    if operator == \"+\":\\n        return x+y\\n    elif operator == \"-\":\\n        return x-y\\n    elif operator == \"/\":\\n        return int(x/y)\\n    else:\\n        return x*y\\n\\n\\noperators = [\"+\", \"-\", \"/\", \"*\"]\\nresult = []\\nfor token in tokens:\\n    if token not in operators:\\n        result.append(int(token))\\n    elif len(result) != 0:\\n        y = result.pop()\\n        x = result.pop()\\n        result.append(operations(token, x, y))\\nreturn(result.pop())`"
                    },
                    {
                        "username": "JayVerma",
                        "content": "The test cases seems to have changed somewhere between September and December 2022. Need to use long long now, int doesn\\'t work anymore"
                    },
                    {
                        "username": "manmohansaraswat15",
                        "content": "What is the means of \n``` division between two integers should truncate toward zero ```"
                    },
                    {
                        "username": "sparklingness",
                        "content": "And you should consider the negative case. \\n-3/2 = -1.5 --> it should be near to zero. So, it should be -1."
                    },
                    {
                        "username": "suhaanbhandary1",
                        "content": "In other terms the floor of the division is taken: \\neg: 3/2 = 1\\nsince floor(1.5) is 1"
                    },
                    {
                        "username": "zolibra",
                        "content": "the problem is that how to get a Node's previous's previous of a LinkedList..."
                    }
                ]
            },
            {
                "id": 1928505,
                "content": [
                    {
                        "username": "file404",
                        "content": "i have got \"accepted\",but i was wondering whether i got the meaning of this problem.the question said the operand can be a another expression,but if i do this,i got wrong anwser.is there a fault in the question?"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "No it completely goes with what you are saying. An operand can be an expression means that it is in form of a string and not a ordinary number like 1,2,3 but rather in form of \"1\",\"34\",\"145\" etc."
                    },
                    {
                        "username": "_grandmaster_",
                        "content": "Easiest way in python3 to achieve \"division between two integers always truncates toward zero\" is to do the normal float division, and then convert it to integer, like -> int(a/b).\\n\\nJust saved you a trip to stackoverflow :)"
                    },
                    {
                        "username": "Shaik_Aman_Sayer",
                        "content": "wonderful problem to understand stack."
                    },
                    {
                        "username": "rminjy",
                        "content": "fyi i thought truncated toward zero meant to floor divide but it does not \\nint(a/b) is truncated toward zero and a//b is not save yourself the suffering if you had the same problem as me :,)"
                    },
                    {
                        "username": "t4n",
                        "content": "Goated"
                    },
                    {
                        "username": "angelsoto2373",
                        "content": "My code is getting the correct response in vscode but for some reason not on leetcode, and I cant figure out why? \\n `import math\\n\\ndef evalRPN(tokens):\\n    curr = 0\\n    ans = None\\n    stack = []\\n    operators = {\\n        \\'+\\': True, \\'-\\': True, \\'*\\': True, \\'/\\': True\\n    }\\n\\n    while curr < len(tokens):\\n        value = tokens[curr]\\n        if value not in operators:\\n            stack.append(value)\\n            curr += 1\\n        else:\\n            num1 = int(stack.pop())\\n            num2 = int(stack.pop())\\n            if value == \\'+\\':\\n                ans = math.floor(num2 + num1)\\n            elif value == \\'-\\':\\n                ans = math.floor(num2 - num1)\\n            elif value == \\'*\\':\\n                ans = math.floor(num2 * num1)\\n            else:\\n                ans = math.ceil(num2 / num1)\\n            stack.append(int(float(ans)))\\n            curr += 1\\n\\n    return stack.pop()\\n\\n\\ntokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\",\"2\",\"*\"]\\nevalRPN(tokens)`"
                    },
                    {
                        "username": "AdityaPrasad275",
                        "content": "lol they gave away the answer in the wiki they linked"
                    },
                    {
                        "username": "vishesh014",
                        "content": "hey aditya i have taken help from ur solution \\nbut can you pls explain it to me"
                    },
                    {
                        "username": "xqsu",
                        "content": "Does anyone know why this code does not work properly in leetcode?when I tested [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"\",\"/\",\"\",\"17\",\"+\",\"5\",\"+\"],\\nin this program, the result I got was 22 in vs studio but 12 in leetcode?\\n`def operations(operator, x, y):\\n    if operator == \"+\":\\n        return x+y\\n    elif operator == \"-\":\\n        return x-y\\n    elif operator == \"/\":\\n        return int(x/y)\\n    else:\\n        return x*y\\n\\n\\noperators = [\"+\", \"-\", \"/\", \"*\"]\\nresult = []\\nfor token in tokens:\\n    if token not in operators:\\n        result.append(int(token))\\n    elif len(result) != 0:\\n        y = result.pop()\\n        x = result.pop()\\n        result.append(operations(token, x, y))\\nreturn(result.pop())`"
                    },
                    {
                        "username": "JayVerma",
                        "content": "The test cases seems to have changed somewhere between September and December 2022. Need to use long long now, int doesn\\'t work anymore"
                    },
                    {
                        "username": "manmohansaraswat15",
                        "content": "What is the means of \n``` division between two integers should truncate toward zero ```"
                    },
                    {
                        "username": "sparklingness",
                        "content": "And you should consider the negative case. \\n-3/2 = -1.5 --> it should be near to zero. So, it should be -1."
                    },
                    {
                        "username": "suhaanbhandary1",
                        "content": "In other terms the floor of the division is taken: \\neg: 3/2 = 1\\nsince floor(1.5) is 1"
                    },
                    {
                        "username": "zolibra",
                        "content": "the problem is that how to get a Node's previous's previous of a LinkedList..."
                    }
                ]
            },
            {
                "id": 1853722,
                "content": [
                    {
                        "username": "file404",
                        "content": "i have got \"accepted\",but i was wondering whether i got the meaning of this problem.the question said the operand can be a another expression,but if i do this,i got wrong anwser.is there a fault in the question?"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "No it completely goes with what you are saying. An operand can be an expression means that it is in form of a string and not a ordinary number like 1,2,3 but rather in form of \"1\",\"34\",\"145\" etc."
                    },
                    {
                        "username": "_grandmaster_",
                        "content": "Easiest way in python3 to achieve \"division between two integers always truncates toward zero\" is to do the normal float division, and then convert it to integer, like -> int(a/b).\\n\\nJust saved you a trip to stackoverflow :)"
                    },
                    {
                        "username": "Shaik_Aman_Sayer",
                        "content": "wonderful problem to understand stack."
                    },
                    {
                        "username": "rminjy",
                        "content": "fyi i thought truncated toward zero meant to floor divide but it does not \\nint(a/b) is truncated toward zero and a//b is not save yourself the suffering if you had the same problem as me :,)"
                    },
                    {
                        "username": "t4n",
                        "content": "Goated"
                    },
                    {
                        "username": "angelsoto2373",
                        "content": "My code is getting the correct response in vscode but for some reason not on leetcode, and I cant figure out why? \\n `import math\\n\\ndef evalRPN(tokens):\\n    curr = 0\\n    ans = None\\n    stack = []\\n    operators = {\\n        \\'+\\': True, \\'-\\': True, \\'*\\': True, \\'/\\': True\\n    }\\n\\n    while curr < len(tokens):\\n        value = tokens[curr]\\n        if value not in operators:\\n            stack.append(value)\\n            curr += 1\\n        else:\\n            num1 = int(stack.pop())\\n            num2 = int(stack.pop())\\n            if value == \\'+\\':\\n                ans = math.floor(num2 + num1)\\n            elif value == \\'-\\':\\n                ans = math.floor(num2 - num1)\\n            elif value == \\'*\\':\\n                ans = math.floor(num2 * num1)\\n            else:\\n                ans = math.ceil(num2 / num1)\\n            stack.append(int(float(ans)))\\n            curr += 1\\n\\n    return stack.pop()\\n\\n\\ntokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\",\"2\",\"*\"]\\nevalRPN(tokens)`"
                    },
                    {
                        "username": "AdityaPrasad275",
                        "content": "lol they gave away the answer in the wiki they linked"
                    },
                    {
                        "username": "vishesh014",
                        "content": "hey aditya i have taken help from ur solution \\nbut can you pls explain it to me"
                    },
                    {
                        "username": "xqsu",
                        "content": "Does anyone know why this code does not work properly in leetcode?when I tested [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"\",\"/\",\"\",\"17\",\"+\",\"5\",\"+\"],\\nin this program, the result I got was 22 in vs studio but 12 in leetcode?\\n`def operations(operator, x, y):\\n    if operator == \"+\":\\n        return x+y\\n    elif operator == \"-\":\\n        return x-y\\n    elif operator == \"/\":\\n        return int(x/y)\\n    else:\\n        return x*y\\n\\n\\noperators = [\"+\", \"-\", \"/\", \"*\"]\\nresult = []\\nfor token in tokens:\\n    if token not in operators:\\n        result.append(int(token))\\n    elif len(result) != 0:\\n        y = result.pop()\\n        x = result.pop()\\n        result.append(operations(token, x, y))\\nreturn(result.pop())`"
                    },
                    {
                        "username": "JayVerma",
                        "content": "The test cases seems to have changed somewhere between September and December 2022. Need to use long long now, int doesn\\'t work anymore"
                    },
                    {
                        "username": "manmohansaraswat15",
                        "content": "What is the means of \n``` division between two integers should truncate toward zero ```"
                    },
                    {
                        "username": "sparklingness",
                        "content": "And you should consider the negative case. \\n-3/2 = -1.5 --> it should be near to zero. So, it should be -1."
                    },
                    {
                        "username": "suhaanbhandary1",
                        "content": "In other terms the floor of the division is taken: \\neg: 3/2 = 1\\nsince floor(1.5) is 1"
                    },
                    {
                        "username": "zolibra",
                        "content": "the problem is that how to get a Node's previous's previous of a LinkedList..."
                    }
                ]
            },
            {
                "id": 1719800,
                "content": [
                    {
                        "username": "file404",
                        "content": "i have got \"accepted\",but i was wondering whether i got the meaning of this problem.the question said the operand can be a another expression,but if i do this,i got wrong anwser.is there a fault in the question?"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "No it completely goes with what you are saying. An operand can be an expression means that it is in form of a string and not a ordinary number like 1,2,3 but rather in form of \"1\",\"34\",\"145\" etc."
                    },
                    {
                        "username": "_grandmaster_",
                        "content": "Easiest way in python3 to achieve \"division between two integers always truncates toward zero\" is to do the normal float division, and then convert it to integer, like -> int(a/b).\\n\\nJust saved you a trip to stackoverflow :)"
                    },
                    {
                        "username": "Shaik_Aman_Sayer",
                        "content": "wonderful problem to understand stack."
                    },
                    {
                        "username": "rminjy",
                        "content": "fyi i thought truncated toward zero meant to floor divide but it does not \\nint(a/b) is truncated toward zero and a//b is not save yourself the suffering if you had the same problem as me :,)"
                    },
                    {
                        "username": "t4n",
                        "content": "Goated"
                    },
                    {
                        "username": "angelsoto2373",
                        "content": "My code is getting the correct response in vscode but for some reason not on leetcode, and I cant figure out why? \\n `import math\\n\\ndef evalRPN(tokens):\\n    curr = 0\\n    ans = None\\n    stack = []\\n    operators = {\\n        \\'+\\': True, \\'-\\': True, \\'*\\': True, \\'/\\': True\\n    }\\n\\n    while curr < len(tokens):\\n        value = tokens[curr]\\n        if value not in operators:\\n            stack.append(value)\\n            curr += 1\\n        else:\\n            num1 = int(stack.pop())\\n            num2 = int(stack.pop())\\n            if value == \\'+\\':\\n                ans = math.floor(num2 + num1)\\n            elif value == \\'-\\':\\n                ans = math.floor(num2 - num1)\\n            elif value == \\'*\\':\\n                ans = math.floor(num2 * num1)\\n            else:\\n                ans = math.ceil(num2 / num1)\\n            stack.append(int(float(ans)))\\n            curr += 1\\n\\n    return stack.pop()\\n\\n\\ntokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\",\"2\",\"*\"]\\nevalRPN(tokens)`"
                    },
                    {
                        "username": "AdityaPrasad275",
                        "content": "lol they gave away the answer in the wiki they linked"
                    },
                    {
                        "username": "vishesh014",
                        "content": "hey aditya i have taken help from ur solution \\nbut can you pls explain it to me"
                    },
                    {
                        "username": "xqsu",
                        "content": "Does anyone know why this code does not work properly in leetcode?when I tested [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"\",\"/\",\"\",\"17\",\"+\",\"5\",\"+\"],\\nin this program, the result I got was 22 in vs studio but 12 in leetcode?\\n`def operations(operator, x, y):\\n    if operator == \"+\":\\n        return x+y\\n    elif operator == \"-\":\\n        return x-y\\n    elif operator == \"/\":\\n        return int(x/y)\\n    else:\\n        return x*y\\n\\n\\noperators = [\"+\", \"-\", \"/\", \"*\"]\\nresult = []\\nfor token in tokens:\\n    if token not in operators:\\n        result.append(int(token))\\n    elif len(result) != 0:\\n        y = result.pop()\\n        x = result.pop()\\n        result.append(operations(token, x, y))\\nreturn(result.pop())`"
                    },
                    {
                        "username": "JayVerma",
                        "content": "The test cases seems to have changed somewhere between September and December 2022. Need to use long long now, int doesn\\'t work anymore"
                    },
                    {
                        "username": "manmohansaraswat15",
                        "content": "What is the means of \n``` division between two integers should truncate toward zero ```"
                    },
                    {
                        "username": "sparklingness",
                        "content": "And you should consider the negative case. \\n-3/2 = -1.5 --> it should be near to zero. So, it should be -1."
                    },
                    {
                        "username": "suhaanbhandary1",
                        "content": "In other terms the floor of the division is taken: \\neg: 3/2 = 1\\nsince floor(1.5) is 1"
                    },
                    {
                        "username": "zolibra",
                        "content": "the problem is that how to get a Node's previous's previous of a LinkedList..."
                    }
                ]
            },
            {
                "id": 1719168,
                "content": [
                    {
                        "username": "file404",
                        "content": "i have got \"accepted\",but i was wondering whether i got the meaning of this problem.the question said the operand can be a another expression,but if i do this,i got wrong anwser.is there a fault in the question?"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "No it completely goes with what you are saying. An operand can be an expression means that it is in form of a string and not a ordinary number like 1,2,3 but rather in form of \"1\",\"34\",\"145\" etc."
                    },
                    {
                        "username": "_grandmaster_",
                        "content": "Easiest way in python3 to achieve \"division between two integers always truncates toward zero\" is to do the normal float division, and then convert it to integer, like -> int(a/b).\\n\\nJust saved you a trip to stackoverflow :)"
                    },
                    {
                        "username": "Shaik_Aman_Sayer",
                        "content": "wonderful problem to understand stack."
                    },
                    {
                        "username": "rminjy",
                        "content": "fyi i thought truncated toward zero meant to floor divide but it does not \\nint(a/b) is truncated toward zero and a//b is not save yourself the suffering if you had the same problem as me :,)"
                    },
                    {
                        "username": "t4n",
                        "content": "Goated"
                    },
                    {
                        "username": "angelsoto2373",
                        "content": "My code is getting the correct response in vscode but for some reason not on leetcode, and I cant figure out why? \\n `import math\\n\\ndef evalRPN(tokens):\\n    curr = 0\\n    ans = None\\n    stack = []\\n    operators = {\\n        \\'+\\': True, \\'-\\': True, \\'*\\': True, \\'/\\': True\\n    }\\n\\n    while curr < len(tokens):\\n        value = tokens[curr]\\n        if value not in operators:\\n            stack.append(value)\\n            curr += 1\\n        else:\\n            num1 = int(stack.pop())\\n            num2 = int(stack.pop())\\n            if value == \\'+\\':\\n                ans = math.floor(num2 + num1)\\n            elif value == \\'-\\':\\n                ans = math.floor(num2 - num1)\\n            elif value == \\'*\\':\\n                ans = math.floor(num2 * num1)\\n            else:\\n                ans = math.ceil(num2 / num1)\\n            stack.append(int(float(ans)))\\n            curr += 1\\n\\n    return stack.pop()\\n\\n\\ntokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\",\"2\",\"*\"]\\nevalRPN(tokens)`"
                    },
                    {
                        "username": "AdityaPrasad275",
                        "content": "lol they gave away the answer in the wiki they linked"
                    },
                    {
                        "username": "vishesh014",
                        "content": "hey aditya i have taken help from ur solution \\nbut can you pls explain it to me"
                    },
                    {
                        "username": "xqsu",
                        "content": "Does anyone know why this code does not work properly in leetcode?when I tested [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"\",\"/\",\"\",\"17\",\"+\",\"5\",\"+\"],\\nin this program, the result I got was 22 in vs studio but 12 in leetcode?\\n`def operations(operator, x, y):\\n    if operator == \"+\":\\n        return x+y\\n    elif operator == \"-\":\\n        return x-y\\n    elif operator == \"/\":\\n        return int(x/y)\\n    else:\\n        return x*y\\n\\n\\noperators = [\"+\", \"-\", \"/\", \"*\"]\\nresult = []\\nfor token in tokens:\\n    if token not in operators:\\n        result.append(int(token))\\n    elif len(result) != 0:\\n        y = result.pop()\\n        x = result.pop()\\n        result.append(operations(token, x, y))\\nreturn(result.pop())`"
                    },
                    {
                        "username": "JayVerma",
                        "content": "The test cases seems to have changed somewhere between September and December 2022. Need to use long long now, int doesn\\'t work anymore"
                    },
                    {
                        "username": "manmohansaraswat15",
                        "content": "What is the means of \n``` division between two integers should truncate toward zero ```"
                    },
                    {
                        "username": "sparklingness",
                        "content": "And you should consider the negative case. \\n-3/2 = -1.5 --> it should be near to zero. So, it should be -1."
                    },
                    {
                        "username": "suhaanbhandary1",
                        "content": "In other terms the floor of the division is taken: \\neg: 3/2 = 1\\nsince floor(1.5) is 1"
                    },
                    {
                        "username": "zolibra",
                        "content": "the problem is that how to get a Node's previous's previous of a LinkedList..."
                    }
                ]
            },
            {
                "id": 1718866,
                "content": [
                    {
                        "username": "file404",
                        "content": "i have got \"accepted\",but i was wondering whether i got the meaning of this problem.the question said the operand can be a another expression,but if i do this,i got wrong anwser.is there a fault in the question?"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "No it completely goes with what you are saying. An operand can be an expression means that it is in form of a string and not a ordinary number like 1,2,3 but rather in form of \"1\",\"34\",\"145\" etc."
                    },
                    {
                        "username": "_grandmaster_",
                        "content": "Easiest way in python3 to achieve \"division between two integers always truncates toward zero\" is to do the normal float division, and then convert it to integer, like -> int(a/b).\\n\\nJust saved you a trip to stackoverflow :)"
                    },
                    {
                        "username": "Shaik_Aman_Sayer",
                        "content": "wonderful problem to understand stack."
                    },
                    {
                        "username": "rminjy",
                        "content": "fyi i thought truncated toward zero meant to floor divide but it does not \\nint(a/b) is truncated toward zero and a//b is not save yourself the suffering if you had the same problem as me :,)"
                    },
                    {
                        "username": "t4n",
                        "content": "Goated"
                    },
                    {
                        "username": "angelsoto2373",
                        "content": "My code is getting the correct response in vscode but for some reason not on leetcode, and I cant figure out why? \\n `import math\\n\\ndef evalRPN(tokens):\\n    curr = 0\\n    ans = None\\n    stack = []\\n    operators = {\\n        \\'+\\': True, \\'-\\': True, \\'*\\': True, \\'/\\': True\\n    }\\n\\n    while curr < len(tokens):\\n        value = tokens[curr]\\n        if value not in operators:\\n            stack.append(value)\\n            curr += 1\\n        else:\\n            num1 = int(stack.pop())\\n            num2 = int(stack.pop())\\n            if value == \\'+\\':\\n                ans = math.floor(num2 + num1)\\n            elif value == \\'-\\':\\n                ans = math.floor(num2 - num1)\\n            elif value == \\'*\\':\\n                ans = math.floor(num2 * num1)\\n            else:\\n                ans = math.ceil(num2 / num1)\\n            stack.append(int(float(ans)))\\n            curr += 1\\n\\n    return stack.pop()\\n\\n\\ntokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\",\"2\",\"*\"]\\nevalRPN(tokens)`"
                    },
                    {
                        "username": "AdityaPrasad275",
                        "content": "lol they gave away the answer in the wiki they linked"
                    },
                    {
                        "username": "vishesh014",
                        "content": "hey aditya i have taken help from ur solution \\nbut can you pls explain it to me"
                    },
                    {
                        "username": "xqsu",
                        "content": "Does anyone know why this code does not work properly in leetcode?when I tested [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"\",\"/\",\"\",\"17\",\"+\",\"5\",\"+\"],\\nin this program, the result I got was 22 in vs studio but 12 in leetcode?\\n`def operations(operator, x, y):\\n    if operator == \"+\":\\n        return x+y\\n    elif operator == \"-\":\\n        return x-y\\n    elif operator == \"/\":\\n        return int(x/y)\\n    else:\\n        return x*y\\n\\n\\noperators = [\"+\", \"-\", \"/\", \"*\"]\\nresult = []\\nfor token in tokens:\\n    if token not in operators:\\n        result.append(int(token))\\n    elif len(result) != 0:\\n        y = result.pop()\\n        x = result.pop()\\n        result.append(operations(token, x, y))\\nreturn(result.pop())`"
                    },
                    {
                        "username": "JayVerma",
                        "content": "The test cases seems to have changed somewhere between September and December 2022. Need to use long long now, int doesn\\'t work anymore"
                    },
                    {
                        "username": "manmohansaraswat15",
                        "content": "What is the means of \n``` division between two integers should truncate toward zero ```"
                    },
                    {
                        "username": "sparklingness",
                        "content": "And you should consider the negative case. \\n-3/2 = -1.5 --> it should be near to zero. So, it should be -1."
                    },
                    {
                        "username": "suhaanbhandary1",
                        "content": "In other terms the floor of the division is taken: \\neg: 3/2 = 1\\nsince floor(1.5) is 1"
                    },
                    {
                        "username": "zolibra",
                        "content": "the problem is that how to get a Node's previous's previous of a LinkedList..."
                    }
                ]
            },
            {
                "id": 1571337,
                "content": [
                    {
                        "username": "file404",
                        "content": "i have got \"accepted\",but i was wondering whether i got the meaning of this problem.the question said the operand can be a another expression,but if i do this,i got wrong anwser.is there a fault in the question?"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "No it completely goes with what you are saying. An operand can be an expression means that it is in form of a string and not a ordinary number like 1,2,3 but rather in form of \"1\",\"34\",\"145\" etc."
                    },
                    {
                        "username": "_grandmaster_",
                        "content": "Easiest way in python3 to achieve \"division between two integers always truncates toward zero\" is to do the normal float division, and then convert it to integer, like -> int(a/b).\\n\\nJust saved you a trip to stackoverflow :)"
                    },
                    {
                        "username": "Shaik_Aman_Sayer",
                        "content": "wonderful problem to understand stack."
                    },
                    {
                        "username": "rminjy",
                        "content": "fyi i thought truncated toward zero meant to floor divide but it does not \\nint(a/b) is truncated toward zero and a//b is not save yourself the suffering if you had the same problem as me :,)"
                    },
                    {
                        "username": "t4n",
                        "content": "Goated"
                    },
                    {
                        "username": "angelsoto2373",
                        "content": "My code is getting the correct response in vscode but for some reason not on leetcode, and I cant figure out why? \\n `import math\\n\\ndef evalRPN(tokens):\\n    curr = 0\\n    ans = None\\n    stack = []\\n    operators = {\\n        \\'+\\': True, \\'-\\': True, \\'*\\': True, \\'/\\': True\\n    }\\n\\n    while curr < len(tokens):\\n        value = tokens[curr]\\n        if value not in operators:\\n            stack.append(value)\\n            curr += 1\\n        else:\\n            num1 = int(stack.pop())\\n            num2 = int(stack.pop())\\n            if value == \\'+\\':\\n                ans = math.floor(num2 + num1)\\n            elif value == \\'-\\':\\n                ans = math.floor(num2 - num1)\\n            elif value == \\'*\\':\\n                ans = math.floor(num2 * num1)\\n            else:\\n                ans = math.ceil(num2 / num1)\\n            stack.append(int(float(ans)))\\n            curr += 1\\n\\n    return stack.pop()\\n\\n\\ntokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\",\"2\",\"*\"]\\nevalRPN(tokens)`"
                    },
                    {
                        "username": "AdityaPrasad275",
                        "content": "lol they gave away the answer in the wiki they linked"
                    },
                    {
                        "username": "vishesh014",
                        "content": "hey aditya i have taken help from ur solution \\nbut can you pls explain it to me"
                    },
                    {
                        "username": "xqsu",
                        "content": "Does anyone know why this code does not work properly in leetcode?when I tested [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"\",\"/\",\"\",\"17\",\"+\",\"5\",\"+\"],\\nin this program, the result I got was 22 in vs studio but 12 in leetcode?\\n`def operations(operator, x, y):\\n    if operator == \"+\":\\n        return x+y\\n    elif operator == \"-\":\\n        return x-y\\n    elif operator == \"/\":\\n        return int(x/y)\\n    else:\\n        return x*y\\n\\n\\noperators = [\"+\", \"-\", \"/\", \"*\"]\\nresult = []\\nfor token in tokens:\\n    if token not in operators:\\n        result.append(int(token))\\n    elif len(result) != 0:\\n        y = result.pop()\\n        x = result.pop()\\n        result.append(operations(token, x, y))\\nreturn(result.pop())`"
                    },
                    {
                        "username": "JayVerma",
                        "content": "The test cases seems to have changed somewhere between September and December 2022. Need to use long long now, int doesn\\'t work anymore"
                    },
                    {
                        "username": "manmohansaraswat15",
                        "content": "What is the means of \n``` division between two integers should truncate toward zero ```"
                    },
                    {
                        "username": "sparklingness",
                        "content": "And you should consider the negative case. \\n-3/2 = -1.5 --> it should be near to zero. So, it should be -1."
                    },
                    {
                        "username": "suhaanbhandary1",
                        "content": "In other terms the floor of the division is taken: \\neg: 3/2 = 1\\nsince floor(1.5) is 1"
                    },
                    {
                        "username": "zolibra",
                        "content": "the problem is that how to get a Node's previous's previous of a LinkedList..."
                    }
                ]
            },
            {
                "id": 2068284,
                "content": [
                    {
                        "username": "aftabmk",
                        "content": "isBool(Cpp)used to find whether is it operator or number.\\n `\\nbool isBool(string token) {\\n        switch(token[0]) {\\n            case \\'+\\' : case \\'-\\' : case \\'*\\' : case \\'/\\' : return true;break;\\n            default : return false; \\n}}\\n`\\nbut giving the following error\\n\"Line 172: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/bits/stl_deque.h:181:16\"\\nhence had to rely on \\nreturn token == \"operator\" method.\\nCan some one help why using switch statement throws such errors."
                    },
                    {
                        "username": "qhdud3100",
                        "content": "Should devision be (large num / small num) or (Second popped num / First popped num) ?\\nI can\\'t see any description mentioned about this. "
                    },
                    {
                        "username": "zexely",
                        "content": "How should it work???\\n[\\'4\\', \\'13\\', \\'5\\', \\'/\\', \\'+\\']\\n\\n13/5=2.6\\n[\\'4\\', \\'2.6\\', +]\\n4 + 2.6 = 6.6\\n\\nBut result should be 6!\\nAny questions?"
                    },
                    {
                        "username": "i_am_guts",
                        "content": "finally a question with proper difficulty level and this was asked in Google btw\\n"
                    },
                    {
                        "username": "Mirap9615",
                        "content": "The trunc thing is so stupid ngl"
                    },
                    {
                        "username": "heka",
                        "content": "The linked wiki article basically gives away the answer. Don\\'t read the second paragraph of the \"Explanation\" section if you want to figure it out on your own."
                    },
                    {
                        "username": "ironassassinyt",
                        "content": "For anyone using python who is confused why they are getting 12 on leetcode and 22 in some other IDE for test case 3, its probably because you\\'re using Python 2 in leetcode and python 3 in your IDE."
                    },
                    {
                        "username": "ibourkabdelatif",
                        "content": "Hello , when i run my code on VS studio it gives me the right results , but when i run it in Leetcode env it gives me 12 insted of 22 in the Case number 3 : tokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n\\nPlease Help , thanks"
                    },
                    {
                        "username": "RedoUser",
                        "content": "The Wiki article will tell you a major hint on what data structure you should use."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "Stack is friend"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "If you know vector well then you don\\'t need to use stack ever."
                    }
                ]
            },
            {
                "id": 2064150,
                "content": [
                    {
                        "username": "aftabmk",
                        "content": "isBool(Cpp)used to find whether is it operator or number.\\n `\\nbool isBool(string token) {\\n        switch(token[0]) {\\n            case \\'+\\' : case \\'-\\' : case \\'*\\' : case \\'/\\' : return true;break;\\n            default : return false; \\n}}\\n`\\nbut giving the following error\\n\"Line 172: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/bits/stl_deque.h:181:16\"\\nhence had to rely on \\nreturn token == \"operator\" method.\\nCan some one help why using switch statement throws such errors."
                    },
                    {
                        "username": "qhdud3100",
                        "content": "Should devision be (large num / small num) or (Second popped num / First popped num) ?\\nI can\\'t see any description mentioned about this. "
                    },
                    {
                        "username": "zexely",
                        "content": "How should it work???\\n[\\'4\\', \\'13\\', \\'5\\', \\'/\\', \\'+\\']\\n\\n13/5=2.6\\n[\\'4\\', \\'2.6\\', +]\\n4 + 2.6 = 6.6\\n\\nBut result should be 6!\\nAny questions?"
                    },
                    {
                        "username": "i_am_guts",
                        "content": "finally a question with proper difficulty level and this was asked in Google btw\\n"
                    },
                    {
                        "username": "Mirap9615",
                        "content": "The trunc thing is so stupid ngl"
                    },
                    {
                        "username": "heka",
                        "content": "The linked wiki article basically gives away the answer. Don\\'t read the second paragraph of the \"Explanation\" section if you want to figure it out on your own."
                    },
                    {
                        "username": "ironassassinyt",
                        "content": "For anyone using python who is confused why they are getting 12 on leetcode and 22 in some other IDE for test case 3, its probably because you\\'re using Python 2 in leetcode and python 3 in your IDE."
                    },
                    {
                        "username": "ibourkabdelatif",
                        "content": "Hello , when i run my code on VS studio it gives me the right results , but when i run it in Leetcode env it gives me 12 insted of 22 in the Case number 3 : tokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n\\nPlease Help , thanks"
                    },
                    {
                        "username": "RedoUser",
                        "content": "The Wiki article will tell you a major hint on what data structure you should use."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "Stack is friend"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "If you know vector well then you don\\'t need to use stack ever."
                    }
                ]
            },
            {
                "id": 2063474,
                "content": [
                    {
                        "username": "aftabmk",
                        "content": "isBool(Cpp)used to find whether is it operator or number.\\n `\\nbool isBool(string token) {\\n        switch(token[0]) {\\n            case \\'+\\' : case \\'-\\' : case \\'*\\' : case \\'/\\' : return true;break;\\n            default : return false; \\n}}\\n`\\nbut giving the following error\\n\"Line 172: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/bits/stl_deque.h:181:16\"\\nhence had to rely on \\nreturn token == \"operator\" method.\\nCan some one help why using switch statement throws such errors."
                    },
                    {
                        "username": "qhdud3100",
                        "content": "Should devision be (large num / small num) or (Second popped num / First popped num) ?\\nI can\\'t see any description mentioned about this. "
                    },
                    {
                        "username": "zexely",
                        "content": "How should it work???\\n[\\'4\\', \\'13\\', \\'5\\', \\'/\\', \\'+\\']\\n\\n13/5=2.6\\n[\\'4\\', \\'2.6\\', +]\\n4 + 2.6 = 6.6\\n\\nBut result should be 6!\\nAny questions?"
                    },
                    {
                        "username": "i_am_guts",
                        "content": "finally a question with proper difficulty level and this was asked in Google btw\\n"
                    },
                    {
                        "username": "Mirap9615",
                        "content": "The trunc thing is so stupid ngl"
                    },
                    {
                        "username": "heka",
                        "content": "The linked wiki article basically gives away the answer. Don\\'t read the second paragraph of the \"Explanation\" section if you want to figure it out on your own."
                    },
                    {
                        "username": "ironassassinyt",
                        "content": "For anyone using python who is confused why they are getting 12 on leetcode and 22 in some other IDE for test case 3, its probably because you\\'re using Python 2 in leetcode and python 3 in your IDE."
                    },
                    {
                        "username": "ibourkabdelatif",
                        "content": "Hello , when i run my code on VS studio it gives me the right results , but when i run it in Leetcode env it gives me 12 insted of 22 in the Case number 3 : tokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n\\nPlease Help , thanks"
                    },
                    {
                        "username": "RedoUser",
                        "content": "The Wiki article will tell you a major hint on what data structure you should use."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "Stack is friend"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "If you know vector well then you don\\'t need to use stack ever."
                    }
                ]
            },
            {
                "id": 2057534,
                "content": [
                    {
                        "username": "aftabmk",
                        "content": "isBool(Cpp)used to find whether is it operator or number.\\n `\\nbool isBool(string token) {\\n        switch(token[0]) {\\n            case \\'+\\' : case \\'-\\' : case \\'*\\' : case \\'/\\' : return true;break;\\n            default : return false; \\n}}\\n`\\nbut giving the following error\\n\"Line 172: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/bits/stl_deque.h:181:16\"\\nhence had to rely on \\nreturn token == \"operator\" method.\\nCan some one help why using switch statement throws such errors."
                    },
                    {
                        "username": "qhdud3100",
                        "content": "Should devision be (large num / small num) or (Second popped num / First popped num) ?\\nI can\\'t see any description mentioned about this. "
                    },
                    {
                        "username": "zexely",
                        "content": "How should it work???\\n[\\'4\\', \\'13\\', \\'5\\', \\'/\\', \\'+\\']\\n\\n13/5=2.6\\n[\\'4\\', \\'2.6\\', +]\\n4 + 2.6 = 6.6\\n\\nBut result should be 6!\\nAny questions?"
                    },
                    {
                        "username": "i_am_guts",
                        "content": "finally a question with proper difficulty level and this was asked in Google btw\\n"
                    },
                    {
                        "username": "Mirap9615",
                        "content": "The trunc thing is so stupid ngl"
                    },
                    {
                        "username": "heka",
                        "content": "The linked wiki article basically gives away the answer. Don\\'t read the second paragraph of the \"Explanation\" section if you want to figure it out on your own."
                    },
                    {
                        "username": "ironassassinyt",
                        "content": "For anyone using python who is confused why they are getting 12 on leetcode and 22 in some other IDE for test case 3, its probably because you\\'re using Python 2 in leetcode and python 3 in your IDE."
                    },
                    {
                        "username": "ibourkabdelatif",
                        "content": "Hello , when i run my code on VS studio it gives me the right results , but when i run it in Leetcode env it gives me 12 insted of 22 in the Case number 3 : tokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n\\nPlease Help , thanks"
                    },
                    {
                        "username": "RedoUser",
                        "content": "The Wiki article will tell you a major hint on what data structure you should use."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "Stack is friend"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "If you know vector well then you don\\'t need to use stack ever."
                    }
                ]
            },
            {
                "id": 2048630,
                "content": [
                    {
                        "username": "aftabmk",
                        "content": "isBool(Cpp)used to find whether is it operator or number.\\n `\\nbool isBool(string token) {\\n        switch(token[0]) {\\n            case \\'+\\' : case \\'-\\' : case \\'*\\' : case \\'/\\' : return true;break;\\n            default : return false; \\n}}\\n`\\nbut giving the following error\\n\"Line 172: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/bits/stl_deque.h:181:16\"\\nhence had to rely on \\nreturn token == \"operator\" method.\\nCan some one help why using switch statement throws such errors."
                    },
                    {
                        "username": "qhdud3100",
                        "content": "Should devision be (large num / small num) or (Second popped num / First popped num) ?\\nI can\\'t see any description mentioned about this. "
                    },
                    {
                        "username": "zexely",
                        "content": "How should it work???\\n[\\'4\\', \\'13\\', \\'5\\', \\'/\\', \\'+\\']\\n\\n13/5=2.6\\n[\\'4\\', \\'2.6\\', +]\\n4 + 2.6 = 6.6\\n\\nBut result should be 6!\\nAny questions?"
                    },
                    {
                        "username": "i_am_guts",
                        "content": "finally a question with proper difficulty level and this was asked in Google btw\\n"
                    },
                    {
                        "username": "Mirap9615",
                        "content": "The trunc thing is so stupid ngl"
                    },
                    {
                        "username": "heka",
                        "content": "The linked wiki article basically gives away the answer. Don\\'t read the second paragraph of the \"Explanation\" section if you want to figure it out on your own."
                    },
                    {
                        "username": "ironassassinyt",
                        "content": "For anyone using python who is confused why they are getting 12 on leetcode and 22 in some other IDE for test case 3, its probably because you\\'re using Python 2 in leetcode and python 3 in your IDE."
                    },
                    {
                        "username": "ibourkabdelatif",
                        "content": "Hello , when i run my code on VS studio it gives me the right results , but when i run it in Leetcode env it gives me 12 insted of 22 in the Case number 3 : tokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n\\nPlease Help , thanks"
                    },
                    {
                        "username": "RedoUser",
                        "content": "The Wiki article will tell you a major hint on what data structure you should use."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "Stack is friend"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "If you know vector well then you don\\'t need to use stack ever."
                    }
                ]
            },
            {
                "id": 2046329,
                "content": [
                    {
                        "username": "aftabmk",
                        "content": "isBool(Cpp)used to find whether is it operator or number.\\n `\\nbool isBool(string token) {\\n        switch(token[0]) {\\n            case \\'+\\' : case \\'-\\' : case \\'*\\' : case \\'/\\' : return true;break;\\n            default : return false; \\n}}\\n`\\nbut giving the following error\\n\"Line 172: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/bits/stl_deque.h:181:16\"\\nhence had to rely on \\nreturn token == \"operator\" method.\\nCan some one help why using switch statement throws such errors."
                    },
                    {
                        "username": "qhdud3100",
                        "content": "Should devision be (large num / small num) or (Second popped num / First popped num) ?\\nI can\\'t see any description mentioned about this. "
                    },
                    {
                        "username": "zexely",
                        "content": "How should it work???\\n[\\'4\\', \\'13\\', \\'5\\', \\'/\\', \\'+\\']\\n\\n13/5=2.6\\n[\\'4\\', \\'2.6\\', +]\\n4 + 2.6 = 6.6\\n\\nBut result should be 6!\\nAny questions?"
                    },
                    {
                        "username": "i_am_guts",
                        "content": "finally a question with proper difficulty level and this was asked in Google btw\\n"
                    },
                    {
                        "username": "Mirap9615",
                        "content": "The trunc thing is so stupid ngl"
                    },
                    {
                        "username": "heka",
                        "content": "The linked wiki article basically gives away the answer. Don\\'t read the second paragraph of the \"Explanation\" section if you want to figure it out on your own."
                    },
                    {
                        "username": "ironassassinyt",
                        "content": "For anyone using python who is confused why they are getting 12 on leetcode and 22 in some other IDE for test case 3, its probably because you\\'re using Python 2 in leetcode and python 3 in your IDE."
                    },
                    {
                        "username": "ibourkabdelatif",
                        "content": "Hello , when i run my code on VS studio it gives me the right results , but when i run it in Leetcode env it gives me 12 insted of 22 in the Case number 3 : tokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n\\nPlease Help , thanks"
                    },
                    {
                        "username": "RedoUser",
                        "content": "The Wiki article will tell you a major hint on what data structure you should use."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "Stack is friend"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "If you know vector well then you don\\'t need to use stack ever."
                    }
                ]
            },
            {
                "id": 2044323,
                "content": [
                    {
                        "username": "aftabmk",
                        "content": "isBool(Cpp)used to find whether is it operator or number.\\n `\\nbool isBool(string token) {\\n        switch(token[0]) {\\n            case \\'+\\' : case \\'-\\' : case \\'*\\' : case \\'/\\' : return true;break;\\n            default : return false; \\n}}\\n`\\nbut giving the following error\\n\"Line 172: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/bits/stl_deque.h:181:16\"\\nhence had to rely on \\nreturn token == \"operator\" method.\\nCan some one help why using switch statement throws such errors."
                    },
                    {
                        "username": "qhdud3100",
                        "content": "Should devision be (large num / small num) or (Second popped num / First popped num) ?\\nI can\\'t see any description mentioned about this. "
                    },
                    {
                        "username": "zexely",
                        "content": "How should it work???\\n[\\'4\\', \\'13\\', \\'5\\', \\'/\\', \\'+\\']\\n\\n13/5=2.6\\n[\\'4\\', \\'2.6\\', +]\\n4 + 2.6 = 6.6\\n\\nBut result should be 6!\\nAny questions?"
                    },
                    {
                        "username": "i_am_guts",
                        "content": "finally a question with proper difficulty level and this was asked in Google btw\\n"
                    },
                    {
                        "username": "Mirap9615",
                        "content": "The trunc thing is so stupid ngl"
                    },
                    {
                        "username": "heka",
                        "content": "The linked wiki article basically gives away the answer. Don\\'t read the second paragraph of the \"Explanation\" section if you want to figure it out on your own."
                    },
                    {
                        "username": "ironassassinyt",
                        "content": "For anyone using python who is confused why they are getting 12 on leetcode and 22 in some other IDE for test case 3, its probably because you\\'re using Python 2 in leetcode and python 3 in your IDE."
                    },
                    {
                        "username": "ibourkabdelatif",
                        "content": "Hello , when i run my code on VS studio it gives me the right results , but when i run it in Leetcode env it gives me 12 insted of 22 in the Case number 3 : tokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n\\nPlease Help , thanks"
                    },
                    {
                        "username": "RedoUser",
                        "content": "The Wiki article will tell you a major hint on what data structure you should use."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "Stack is friend"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "If you know vector well then you don\\'t need to use stack ever."
                    }
                ]
            },
            {
                "id": 2043109,
                "content": [
                    {
                        "username": "aftabmk",
                        "content": "isBool(Cpp)used to find whether is it operator or number.\\n `\\nbool isBool(string token) {\\n        switch(token[0]) {\\n            case \\'+\\' : case \\'-\\' : case \\'*\\' : case \\'/\\' : return true;break;\\n            default : return false; \\n}}\\n`\\nbut giving the following error\\n\"Line 172: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/bits/stl_deque.h:181:16\"\\nhence had to rely on \\nreturn token == \"operator\" method.\\nCan some one help why using switch statement throws such errors."
                    },
                    {
                        "username": "qhdud3100",
                        "content": "Should devision be (large num / small num) or (Second popped num / First popped num) ?\\nI can\\'t see any description mentioned about this. "
                    },
                    {
                        "username": "zexely",
                        "content": "How should it work???\\n[\\'4\\', \\'13\\', \\'5\\', \\'/\\', \\'+\\']\\n\\n13/5=2.6\\n[\\'4\\', \\'2.6\\', +]\\n4 + 2.6 = 6.6\\n\\nBut result should be 6!\\nAny questions?"
                    },
                    {
                        "username": "i_am_guts",
                        "content": "finally a question with proper difficulty level and this was asked in Google btw\\n"
                    },
                    {
                        "username": "Mirap9615",
                        "content": "The trunc thing is so stupid ngl"
                    },
                    {
                        "username": "heka",
                        "content": "The linked wiki article basically gives away the answer. Don\\'t read the second paragraph of the \"Explanation\" section if you want to figure it out on your own."
                    },
                    {
                        "username": "ironassassinyt",
                        "content": "For anyone using python who is confused why they are getting 12 on leetcode and 22 in some other IDE for test case 3, its probably because you\\'re using Python 2 in leetcode and python 3 in your IDE."
                    },
                    {
                        "username": "ibourkabdelatif",
                        "content": "Hello , when i run my code on VS studio it gives me the right results , but when i run it in Leetcode env it gives me 12 insted of 22 in the Case number 3 : tokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n\\nPlease Help , thanks"
                    },
                    {
                        "username": "RedoUser",
                        "content": "The Wiki article will tell you a major hint on what data structure you should use."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "Stack is friend"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "If you know vector well then you don\\'t need to use stack ever."
                    }
                ]
            },
            {
                "id": 2015486,
                "content": [
                    {
                        "username": "aftabmk",
                        "content": "isBool(Cpp)used to find whether is it operator or number.\\n `\\nbool isBool(string token) {\\n        switch(token[0]) {\\n            case \\'+\\' : case \\'-\\' : case \\'*\\' : case \\'/\\' : return true;break;\\n            default : return false; \\n}}\\n`\\nbut giving the following error\\n\"Line 172: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/bits/stl_deque.h:181:16\"\\nhence had to rely on \\nreturn token == \"operator\" method.\\nCan some one help why using switch statement throws such errors."
                    },
                    {
                        "username": "qhdud3100",
                        "content": "Should devision be (large num / small num) or (Second popped num / First popped num) ?\\nI can\\'t see any description mentioned about this. "
                    },
                    {
                        "username": "zexely",
                        "content": "How should it work???\\n[\\'4\\', \\'13\\', \\'5\\', \\'/\\', \\'+\\']\\n\\n13/5=2.6\\n[\\'4\\', \\'2.6\\', +]\\n4 + 2.6 = 6.6\\n\\nBut result should be 6!\\nAny questions?"
                    },
                    {
                        "username": "i_am_guts",
                        "content": "finally a question with proper difficulty level and this was asked in Google btw\\n"
                    },
                    {
                        "username": "Mirap9615",
                        "content": "The trunc thing is so stupid ngl"
                    },
                    {
                        "username": "heka",
                        "content": "The linked wiki article basically gives away the answer. Don\\'t read the second paragraph of the \"Explanation\" section if you want to figure it out on your own."
                    },
                    {
                        "username": "ironassassinyt",
                        "content": "For anyone using python who is confused why they are getting 12 on leetcode and 22 in some other IDE for test case 3, its probably because you\\'re using Python 2 in leetcode and python 3 in your IDE."
                    },
                    {
                        "username": "ibourkabdelatif",
                        "content": "Hello , when i run my code on VS studio it gives me the right results , but when i run it in Leetcode env it gives me 12 insted of 22 in the Case number 3 : tokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n\\nPlease Help , thanks"
                    },
                    {
                        "username": "RedoUser",
                        "content": "The Wiki article will tell you a major hint on what data structure you should use."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "Stack is friend"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "If you know vector well then you don\\'t need to use stack ever."
                    }
                ]
            },
            {
                "id": 2009101,
                "content": [
                    {
                        "username": "aftabmk",
                        "content": "isBool(Cpp)used to find whether is it operator or number.\\n `\\nbool isBool(string token) {\\n        switch(token[0]) {\\n            case \\'+\\' : case \\'-\\' : case \\'*\\' : case \\'/\\' : return true;break;\\n            default : return false; \\n}}\\n`\\nbut giving the following error\\n\"Line 172: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/bits/stl_deque.h:181:16\"\\nhence had to rely on \\nreturn token == \"operator\" method.\\nCan some one help why using switch statement throws such errors."
                    },
                    {
                        "username": "qhdud3100",
                        "content": "Should devision be (large num / small num) or (Second popped num / First popped num) ?\\nI can\\'t see any description mentioned about this. "
                    },
                    {
                        "username": "zexely",
                        "content": "How should it work???\\n[\\'4\\', \\'13\\', \\'5\\', \\'/\\', \\'+\\']\\n\\n13/5=2.6\\n[\\'4\\', \\'2.6\\', +]\\n4 + 2.6 = 6.6\\n\\nBut result should be 6!\\nAny questions?"
                    },
                    {
                        "username": "i_am_guts",
                        "content": "finally a question with proper difficulty level and this was asked in Google btw\\n"
                    },
                    {
                        "username": "Mirap9615",
                        "content": "The trunc thing is so stupid ngl"
                    },
                    {
                        "username": "heka",
                        "content": "The linked wiki article basically gives away the answer. Don\\'t read the second paragraph of the \"Explanation\" section if you want to figure it out on your own."
                    },
                    {
                        "username": "ironassassinyt",
                        "content": "For anyone using python who is confused why they are getting 12 on leetcode and 22 in some other IDE for test case 3, its probably because you\\'re using Python 2 in leetcode and python 3 in your IDE."
                    },
                    {
                        "username": "ibourkabdelatif",
                        "content": "Hello , when i run my code on VS studio it gives me the right results , but when i run it in Leetcode env it gives me 12 insted of 22 in the Case number 3 : tokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\\n\\nPlease Help , thanks"
                    },
                    {
                        "username": "RedoUser",
                        "content": "The Wiki article will tell you a major hint on what data structure you should use."
                    },
                    {
                        "username": "Cocamo1337",
                        "content": "Stack is friend"
                    },
                    {
                        "username": "Crispy_coffee",
                        "content": "If you know vector well then you don\\'t need to use stack ever."
                    }
                ]
            },
            {
                "id": 1994031,
                "content": [
                    {
                        "username": "rahuljauhari3",
                        "content": "In case someone is looking for this [\\'+\\', \\'-\\', \\'*\\', \\'/\\']"
                    },
                    {
                        "username": "danek1313",
                        "content": "If you are relying on a Wikipedia explanation of what Reverse Polish Notation is, and you acknowledge that Wikipedia\\'s explanation contains errors, maybe you should hire someone to write a correct explanation of what it is.\\n\\nI\\'m stuck on testcase 13 because I have no idea how that case is supposed to be executed regardless of code."
                    },
                    {
                        "username": "RuiK",
                        "content": "For Python users, does anyone know why floor division (`x // y`) doesn\\'t work but the true division (`x / y`) works for this problem? \\n\\nWith floor division, it triggers certain error (e.g. -1 instead of 0, minor miscalculation for longer input, etc.) while the true division seems to not have any issues that floor division faces. "
                    },
                    {
                        "username": "pqt2p1",
                        "content": " I don't know why isnumeric() doesn't work.\n\n1: This works fine\n `class Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stack = []\n        for i in range(len(tokens)):\n            if tokens[i] == \"+\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a+b)\n            elif tokens[i] == \"-\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(b-a)\n            elif tokens[i] == \"*\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a*b)\n            elif tokens[i] == \"/\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(int(b/a))\n            else:\n                stack.append(int(tokens[i]))\n        return stack[0]\n`\n\n2: This doesn't work.\n `class Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stack = []\n        for i in range(len(tokens)):\n            if tokens[i] == \"+\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a+b)\n            elif tokens[i] == \"-\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(b-a)\n            elif tokens[i] == \"*\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a*b)\n            elif tokens[i] == \"/\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(int(b/a))\n            elif (tokens[i].isnumeric()):\n                stack.append(int(tokens[i]))\n\n        return stack[0]\n`\n\nThe error returned is:\n\n `IndexError: pop from empty list\n    a,b = stack.pop(), stack.pop()\nLine 12 in evalRPN (Solution.py)\n    ret = Solution().evalRPN(param_1)\nLine 40 in _driver (Solution.py)\n    _driver()\nLine 51 in <module> (Solution.py)"
                    },
                    {
                        "username": "CaptainKidd",
                        "content": "So long as you know that stacks are involved it\\'s not so bad. The fiddly logic is remembering that the second value pulled off the stack goes first in whatever notation you are being asked to process.\\n\\nIn Java this has some annoying extra steps because the direct string comparison you are used to in math operations like \\'==\\' is not applicable and will return false when you expect true. So remember that String.equals() and Integer.parseInt()  are your friends here. "
                    },
                    {
                        "username": "marco_seven",
                        "content": "Hint: when a oprator comes calculate last 2 numbers from stack "
                    },
                    {
                        "username": "marco_seven",
                        "content": "ek bar me to smjh me aata hi nhi problem,,\n\ncan anyone explain this question/problem.."
                    },
                    {
                        "username": "spookie886",
                        "content": "what if tokens.length <= 2 ?"
                    },
                    {
                        "username": "mochiball",
                        "content": "This should be easy problem. I struggle with stack problems but found this one to be pretty easy\\n\\nAlso, we don\\'t need to check that the size of stack is >=2 before we pop because Reverse Polish Notation guarantees that we\\'ll never get something like \\n\\n[\"+\", \"5\", \"*\" ]"
                    },
                    {
                        "username": "lowerkinded",
                        "content": "Three hints for those wanting to take an alternative path:\n- Recursively parse the list into an abstract syntax tree\n- Every operation can have a sub-operation only on its right-hand side or only on its left-hand side\n- Turn this into lisp"
                    }
                ]
            },
            {
                "id": 1986522,
                "content": [
                    {
                        "username": "rahuljauhari3",
                        "content": "In case someone is looking for this [\\'+\\', \\'-\\', \\'*\\', \\'/\\']"
                    },
                    {
                        "username": "danek1313",
                        "content": "If you are relying on a Wikipedia explanation of what Reverse Polish Notation is, and you acknowledge that Wikipedia\\'s explanation contains errors, maybe you should hire someone to write a correct explanation of what it is.\\n\\nI\\'m stuck on testcase 13 because I have no idea how that case is supposed to be executed regardless of code."
                    },
                    {
                        "username": "RuiK",
                        "content": "For Python users, does anyone know why floor division (`x // y`) doesn\\'t work but the true division (`x / y`) works for this problem? \\n\\nWith floor division, it triggers certain error (e.g. -1 instead of 0, minor miscalculation for longer input, etc.) while the true division seems to not have any issues that floor division faces. "
                    },
                    {
                        "username": "pqt2p1",
                        "content": " I don't know why isnumeric() doesn't work.\n\n1: This works fine\n `class Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stack = []\n        for i in range(len(tokens)):\n            if tokens[i] == \"+\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a+b)\n            elif tokens[i] == \"-\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(b-a)\n            elif tokens[i] == \"*\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a*b)\n            elif tokens[i] == \"/\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(int(b/a))\n            else:\n                stack.append(int(tokens[i]))\n        return stack[0]\n`\n\n2: This doesn't work.\n `class Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stack = []\n        for i in range(len(tokens)):\n            if tokens[i] == \"+\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a+b)\n            elif tokens[i] == \"-\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(b-a)\n            elif tokens[i] == \"*\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a*b)\n            elif tokens[i] == \"/\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(int(b/a))\n            elif (tokens[i].isnumeric()):\n                stack.append(int(tokens[i]))\n\n        return stack[0]\n`\n\nThe error returned is:\n\n `IndexError: pop from empty list\n    a,b = stack.pop(), stack.pop()\nLine 12 in evalRPN (Solution.py)\n    ret = Solution().evalRPN(param_1)\nLine 40 in _driver (Solution.py)\n    _driver()\nLine 51 in <module> (Solution.py)"
                    },
                    {
                        "username": "CaptainKidd",
                        "content": "So long as you know that stacks are involved it\\'s not so bad. The fiddly logic is remembering that the second value pulled off the stack goes first in whatever notation you are being asked to process.\\n\\nIn Java this has some annoying extra steps because the direct string comparison you are used to in math operations like \\'==\\' is not applicable and will return false when you expect true. So remember that String.equals() and Integer.parseInt()  are your friends here. "
                    },
                    {
                        "username": "marco_seven",
                        "content": "Hint: when a oprator comes calculate last 2 numbers from stack "
                    },
                    {
                        "username": "marco_seven",
                        "content": "ek bar me to smjh me aata hi nhi problem,,\n\ncan anyone explain this question/problem.."
                    },
                    {
                        "username": "spookie886",
                        "content": "what if tokens.length <= 2 ?"
                    },
                    {
                        "username": "mochiball",
                        "content": "This should be easy problem. I struggle with stack problems but found this one to be pretty easy\\n\\nAlso, we don\\'t need to check that the size of stack is >=2 before we pop because Reverse Polish Notation guarantees that we\\'ll never get something like \\n\\n[\"+\", \"5\", \"*\" ]"
                    },
                    {
                        "username": "lowerkinded",
                        "content": "Three hints for those wanting to take an alternative path:\n- Recursively parse the list into an abstract syntax tree\n- Every operation can have a sub-operation only on its right-hand side or only on its left-hand side\n- Turn this into lisp"
                    }
                ]
            },
            {
                "id": 1984875,
                "content": [
                    {
                        "username": "rahuljauhari3",
                        "content": "In case someone is looking for this [\\'+\\', \\'-\\', \\'*\\', \\'/\\']"
                    },
                    {
                        "username": "danek1313",
                        "content": "If you are relying on a Wikipedia explanation of what Reverse Polish Notation is, and you acknowledge that Wikipedia\\'s explanation contains errors, maybe you should hire someone to write a correct explanation of what it is.\\n\\nI\\'m stuck on testcase 13 because I have no idea how that case is supposed to be executed regardless of code."
                    },
                    {
                        "username": "RuiK",
                        "content": "For Python users, does anyone know why floor division (`x // y`) doesn\\'t work but the true division (`x / y`) works for this problem? \\n\\nWith floor division, it triggers certain error (e.g. -1 instead of 0, minor miscalculation for longer input, etc.) while the true division seems to not have any issues that floor division faces. "
                    },
                    {
                        "username": "pqt2p1",
                        "content": " I don't know why isnumeric() doesn't work.\n\n1: This works fine\n `class Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stack = []\n        for i in range(len(tokens)):\n            if tokens[i] == \"+\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a+b)\n            elif tokens[i] == \"-\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(b-a)\n            elif tokens[i] == \"*\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a*b)\n            elif tokens[i] == \"/\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(int(b/a))\n            else:\n                stack.append(int(tokens[i]))\n        return stack[0]\n`\n\n2: This doesn't work.\n `class Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stack = []\n        for i in range(len(tokens)):\n            if tokens[i] == \"+\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a+b)\n            elif tokens[i] == \"-\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(b-a)\n            elif tokens[i] == \"*\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a*b)\n            elif tokens[i] == \"/\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(int(b/a))\n            elif (tokens[i].isnumeric()):\n                stack.append(int(tokens[i]))\n\n        return stack[0]\n`\n\nThe error returned is:\n\n `IndexError: pop from empty list\n    a,b = stack.pop(), stack.pop()\nLine 12 in evalRPN (Solution.py)\n    ret = Solution().evalRPN(param_1)\nLine 40 in _driver (Solution.py)\n    _driver()\nLine 51 in <module> (Solution.py)"
                    },
                    {
                        "username": "CaptainKidd",
                        "content": "So long as you know that stacks are involved it\\'s not so bad. The fiddly logic is remembering that the second value pulled off the stack goes first in whatever notation you are being asked to process.\\n\\nIn Java this has some annoying extra steps because the direct string comparison you are used to in math operations like \\'==\\' is not applicable and will return false when you expect true. So remember that String.equals() and Integer.parseInt()  are your friends here. "
                    },
                    {
                        "username": "marco_seven",
                        "content": "Hint: when a oprator comes calculate last 2 numbers from stack "
                    },
                    {
                        "username": "marco_seven",
                        "content": "ek bar me to smjh me aata hi nhi problem,,\n\ncan anyone explain this question/problem.."
                    },
                    {
                        "username": "spookie886",
                        "content": "what if tokens.length <= 2 ?"
                    },
                    {
                        "username": "mochiball",
                        "content": "This should be easy problem. I struggle with stack problems but found this one to be pretty easy\\n\\nAlso, we don\\'t need to check that the size of stack is >=2 before we pop because Reverse Polish Notation guarantees that we\\'ll never get something like \\n\\n[\"+\", \"5\", \"*\" ]"
                    },
                    {
                        "username": "lowerkinded",
                        "content": "Three hints for those wanting to take an alternative path:\n- Recursively parse the list into an abstract syntax tree\n- Every operation can have a sub-operation only on its right-hand side or only on its left-hand side\n- Turn this into lisp"
                    }
                ]
            },
            {
                "id": 1979331,
                "content": [
                    {
                        "username": "rahuljauhari3",
                        "content": "In case someone is looking for this [\\'+\\', \\'-\\', \\'*\\', \\'/\\']"
                    },
                    {
                        "username": "danek1313",
                        "content": "If you are relying on a Wikipedia explanation of what Reverse Polish Notation is, and you acknowledge that Wikipedia\\'s explanation contains errors, maybe you should hire someone to write a correct explanation of what it is.\\n\\nI\\'m stuck on testcase 13 because I have no idea how that case is supposed to be executed regardless of code."
                    },
                    {
                        "username": "RuiK",
                        "content": "For Python users, does anyone know why floor division (`x // y`) doesn\\'t work but the true division (`x / y`) works for this problem? \\n\\nWith floor division, it triggers certain error (e.g. -1 instead of 0, minor miscalculation for longer input, etc.) while the true division seems to not have any issues that floor division faces. "
                    },
                    {
                        "username": "pqt2p1",
                        "content": " I don't know why isnumeric() doesn't work.\n\n1: This works fine\n `class Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stack = []\n        for i in range(len(tokens)):\n            if tokens[i] == \"+\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a+b)\n            elif tokens[i] == \"-\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(b-a)\n            elif tokens[i] == \"*\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a*b)\n            elif tokens[i] == \"/\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(int(b/a))\n            else:\n                stack.append(int(tokens[i]))\n        return stack[0]\n`\n\n2: This doesn't work.\n `class Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stack = []\n        for i in range(len(tokens)):\n            if tokens[i] == \"+\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a+b)\n            elif tokens[i] == \"-\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(b-a)\n            elif tokens[i] == \"*\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a*b)\n            elif tokens[i] == \"/\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(int(b/a))\n            elif (tokens[i].isnumeric()):\n                stack.append(int(tokens[i]))\n\n        return stack[0]\n`\n\nThe error returned is:\n\n `IndexError: pop from empty list\n    a,b = stack.pop(), stack.pop()\nLine 12 in evalRPN (Solution.py)\n    ret = Solution().evalRPN(param_1)\nLine 40 in _driver (Solution.py)\n    _driver()\nLine 51 in <module> (Solution.py)"
                    },
                    {
                        "username": "CaptainKidd",
                        "content": "So long as you know that stacks are involved it\\'s not so bad. The fiddly logic is remembering that the second value pulled off the stack goes first in whatever notation you are being asked to process.\\n\\nIn Java this has some annoying extra steps because the direct string comparison you are used to in math operations like \\'==\\' is not applicable and will return false when you expect true. So remember that String.equals() and Integer.parseInt()  are your friends here. "
                    },
                    {
                        "username": "marco_seven",
                        "content": "Hint: when a oprator comes calculate last 2 numbers from stack "
                    },
                    {
                        "username": "marco_seven",
                        "content": "ek bar me to smjh me aata hi nhi problem,,\n\ncan anyone explain this question/problem.."
                    },
                    {
                        "username": "spookie886",
                        "content": "what if tokens.length <= 2 ?"
                    },
                    {
                        "username": "mochiball",
                        "content": "This should be easy problem. I struggle with stack problems but found this one to be pretty easy\\n\\nAlso, we don\\'t need to check that the size of stack is >=2 before we pop because Reverse Polish Notation guarantees that we\\'ll never get something like \\n\\n[\"+\", \"5\", \"*\" ]"
                    },
                    {
                        "username": "lowerkinded",
                        "content": "Three hints for those wanting to take an alternative path:\n- Recursively parse the list into an abstract syntax tree\n- Every operation can have a sub-operation only on its right-hand side or only on its left-hand side\n- Turn this into lisp"
                    }
                ]
            },
            {
                "id": 1963633,
                "content": [
                    {
                        "username": "rahuljauhari3",
                        "content": "In case someone is looking for this [\\'+\\', \\'-\\', \\'*\\', \\'/\\']"
                    },
                    {
                        "username": "danek1313",
                        "content": "If you are relying on a Wikipedia explanation of what Reverse Polish Notation is, and you acknowledge that Wikipedia\\'s explanation contains errors, maybe you should hire someone to write a correct explanation of what it is.\\n\\nI\\'m stuck on testcase 13 because I have no idea how that case is supposed to be executed regardless of code."
                    },
                    {
                        "username": "RuiK",
                        "content": "For Python users, does anyone know why floor division (`x // y`) doesn\\'t work but the true division (`x / y`) works for this problem? \\n\\nWith floor division, it triggers certain error (e.g. -1 instead of 0, minor miscalculation for longer input, etc.) while the true division seems to not have any issues that floor division faces. "
                    },
                    {
                        "username": "pqt2p1",
                        "content": " I don't know why isnumeric() doesn't work.\n\n1: This works fine\n `class Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stack = []\n        for i in range(len(tokens)):\n            if tokens[i] == \"+\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a+b)\n            elif tokens[i] == \"-\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(b-a)\n            elif tokens[i] == \"*\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a*b)\n            elif tokens[i] == \"/\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(int(b/a))\n            else:\n                stack.append(int(tokens[i]))\n        return stack[0]\n`\n\n2: This doesn't work.\n `class Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stack = []\n        for i in range(len(tokens)):\n            if tokens[i] == \"+\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a+b)\n            elif tokens[i] == \"-\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(b-a)\n            elif tokens[i] == \"*\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a*b)\n            elif tokens[i] == \"/\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(int(b/a))\n            elif (tokens[i].isnumeric()):\n                stack.append(int(tokens[i]))\n\n        return stack[0]\n`\n\nThe error returned is:\n\n `IndexError: pop from empty list\n    a,b = stack.pop(), stack.pop()\nLine 12 in evalRPN (Solution.py)\n    ret = Solution().evalRPN(param_1)\nLine 40 in _driver (Solution.py)\n    _driver()\nLine 51 in <module> (Solution.py)"
                    },
                    {
                        "username": "CaptainKidd",
                        "content": "So long as you know that stacks are involved it\\'s not so bad. The fiddly logic is remembering that the second value pulled off the stack goes first in whatever notation you are being asked to process.\\n\\nIn Java this has some annoying extra steps because the direct string comparison you are used to in math operations like \\'==\\' is not applicable and will return false when you expect true. So remember that String.equals() and Integer.parseInt()  are your friends here. "
                    },
                    {
                        "username": "marco_seven",
                        "content": "Hint: when a oprator comes calculate last 2 numbers from stack "
                    },
                    {
                        "username": "marco_seven",
                        "content": "ek bar me to smjh me aata hi nhi problem,,\n\ncan anyone explain this question/problem.."
                    },
                    {
                        "username": "spookie886",
                        "content": "what if tokens.length <= 2 ?"
                    },
                    {
                        "username": "mochiball",
                        "content": "This should be easy problem. I struggle with stack problems but found this one to be pretty easy\\n\\nAlso, we don\\'t need to check that the size of stack is >=2 before we pop because Reverse Polish Notation guarantees that we\\'ll never get something like \\n\\n[\"+\", \"5\", \"*\" ]"
                    },
                    {
                        "username": "lowerkinded",
                        "content": "Three hints for those wanting to take an alternative path:\n- Recursively parse the list into an abstract syntax tree\n- Every operation can have a sub-operation only on its right-hand side or only on its left-hand side\n- Turn this into lisp"
                    }
                ]
            },
            {
                "id": 1943547,
                "content": [
                    {
                        "username": "rahuljauhari3",
                        "content": "In case someone is looking for this [\\'+\\', \\'-\\', \\'*\\', \\'/\\']"
                    },
                    {
                        "username": "danek1313",
                        "content": "If you are relying on a Wikipedia explanation of what Reverse Polish Notation is, and you acknowledge that Wikipedia\\'s explanation contains errors, maybe you should hire someone to write a correct explanation of what it is.\\n\\nI\\'m stuck on testcase 13 because I have no idea how that case is supposed to be executed regardless of code."
                    },
                    {
                        "username": "RuiK",
                        "content": "For Python users, does anyone know why floor division (`x // y`) doesn\\'t work but the true division (`x / y`) works for this problem? \\n\\nWith floor division, it triggers certain error (e.g. -1 instead of 0, minor miscalculation for longer input, etc.) while the true division seems to not have any issues that floor division faces. "
                    },
                    {
                        "username": "pqt2p1",
                        "content": " I don't know why isnumeric() doesn't work.\n\n1: This works fine\n `class Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stack = []\n        for i in range(len(tokens)):\n            if tokens[i] == \"+\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a+b)\n            elif tokens[i] == \"-\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(b-a)\n            elif tokens[i] == \"*\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a*b)\n            elif tokens[i] == \"/\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(int(b/a))\n            else:\n                stack.append(int(tokens[i]))\n        return stack[0]\n`\n\n2: This doesn't work.\n `class Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stack = []\n        for i in range(len(tokens)):\n            if tokens[i] == \"+\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a+b)\n            elif tokens[i] == \"-\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(b-a)\n            elif tokens[i] == \"*\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a*b)\n            elif tokens[i] == \"/\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(int(b/a))\n            elif (tokens[i].isnumeric()):\n                stack.append(int(tokens[i]))\n\n        return stack[0]\n`\n\nThe error returned is:\n\n `IndexError: pop from empty list\n    a,b = stack.pop(), stack.pop()\nLine 12 in evalRPN (Solution.py)\n    ret = Solution().evalRPN(param_1)\nLine 40 in _driver (Solution.py)\n    _driver()\nLine 51 in <module> (Solution.py)"
                    },
                    {
                        "username": "CaptainKidd",
                        "content": "So long as you know that stacks are involved it\\'s not so bad. The fiddly logic is remembering that the second value pulled off the stack goes first in whatever notation you are being asked to process.\\n\\nIn Java this has some annoying extra steps because the direct string comparison you are used to in math operations like \\'==\\' is not applicable and will return false when you expect true. So remember that String.equals() and Integer.parseInt()  are your friends here. "
                    },
                    {
                        "username": "marco_seven",
                        "content": "Hint: when a oprator comes calculate last 2 numbers from stack "
                    },
                    {
                        "username": "marco_seven",
                        "content": "ek bar me to smjh me aata hi nhi problem,,\n\ncan anyone explain this question/problem.."
                    },
                    {
                        "username": "spookie886",
                        "content": "what if tokens.length <= 2 ?"
                    },
                    {
                        "username": "mochiball",
                        "content": "This should be easy problem. I struggle with stack problems but found this one to be pretty easy\\n\\nAlso, we don\\'t need to check that the size of stack is >=2 before we pop because Reverse Polish Notation guarantees that we\\'ll never get something like \\n\\n[\"+\", \"5\", \"*\" ]"
                    },
                    {
                        "username": "lowerkinded",
                        "content": "Three hints for those wanting to take an alternative path:\n- Recursively parse the list into an abstract syntax tree\n- Every operation can have a sub-operation only on its right-hand side or only on its left-hand side\n- Turn this into lisp"
                    }
                ]
            },
            {
                "id": 1943507,
                "content": [
                    {
                        "username": "rahuljauhari3",
                        "content": "In case someone is looking for this [\\'+\\', \\'-\\', \\'*\\', \\'/\\']"
                    },
                    {
                        "username": "danek1313",
                        "content": "If you are relying on a Wikipedia explanation of what Reverse Polish Notation is, and you acknowledge that Wikipedia\\'s explanation contains errors, maybe you should hire someone to write a correct explanation of what it is.\\n\\nI\\'m stuck on testcase 13 because I have no idea how that case is supposed to be executed regardless of code."
                    },
                    {
                        "username": "RuiK",
                        "content": "For Python users, does anyone know why floor division (`x // y`) doesn\\'t work but the true division (`x / y`) works for this problem? \\n\\nWith floor division, it triggers certain error (e.g. -1 instead of 0, minor miscalculation for longer input, etc.) while the true division seems to not have any issues that floor division faces. "
                    },
                    {
                        "username": "pqt2p1",
                        "content": " I don't know why isnumeric() doesn't work.\n\n1: This works fine\n `class Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stack = []\n        for i in range(len(tokens)):\n            if tokens[i] == \"+\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a+b)\n            elif tokens[i] == \"-\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(b-a)\n            elif tokens[i] == \"*\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a*b)\n            elif tokens[i] == \"/\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(int(b/a))\n            else:\n                stack.append(int(tokens[i]))\n        return stack[0]\n`\n\n2: This doesn't work.\n `class Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stack = []\n        for i in range(len(tokens)):\n            if tokens[i] == \"+\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a+b)\n            elif tokens[i] == \"-\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(b-a)\n            elif tokens[i] == \"*\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a*b)\n            elif tokens[i] == \"/\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(int(b/a))\n            elif (tokens[i].isnumeric()):\n                stack.append(int(tokens[i]))\n\n        return stack[0]\n`\n\nThe error returned is:\n\n `IndexError: pop from empty list\n    a,b = stack.pop(), stack.pop()\nLine 12 in evalRPN (Solution.py)\n    ret = Solution().evalRPN(param_1)\nLine 40 in _driver (Solution.py)\n    _driver()\nLine 51 in <module> (Solution.py)"
                    },
                    {
                        "username": "CaptainKidd",
                        "content": "So long as you know that stacks are involved it\\'s not so bad. The fiddly logic is remembering that the second value pulled off the stack goes first in whatever notation you are being asked to process.\\n\\nIn Java this has some annoying extra steps because the direct string comparison you are used to in math operations like \\'==\\' is not applicable and will return false when you expect true. So remember that String.equals() and Integer.parseInt()  are your friends here. "
                    },
                    {
                        "username": "marco_seven",
                        "content": "Hint: when a oprator comes calculate last 2 numbers from stack "
                    },
                    {
                        "username": "marco_seven",
                        "content": "ek bar me to smjh me aata hi nhi problem,,\n\ncan anyone explain this question/problem.."
                    },
                    {
                        "username": "spookie886",
                        "content": "what if tokens.length <= 2 ?"
                    },
                    {
                        "username": "mochiball",
                        "content": "This should be easy problem. I struggle with stack problems but found this one to be pretty easy\\n\\nAlso, we don\\'t need to check that the size of stack is >=2 before we pop because Reverse Polish Notation guarantees that we\\'ll never get something like \\n\\n[\"+\", \"5\", \"*\" ]"
                    },
                    {
                        "username": "lowerkinded",
                        "content": "Three hints for those wanting to take an alternative path:\n- Recursively parse the list into an abstract syntax tree\n- Every operation can have a sub-operation only on its right-hand side or only on its left-hand side\n- Turn this into lisp"
                    }
                ]
            },
            {
                "id": 1933564,
                "content": [
                    {
                        "username": "rahuljauhari3",
                        "content": "In case someone is looking for this [\\'+\\', \\'-\\', \\'*\\', \\'/\\']"
                    },
                    {
                        "username": "danek1313",
                        "content": "If you are relying on a Wikipedia explanation of what Reverse Polish Notation is, and you acknowledge that Wikipedia\\'s explanation contains errors, maybe you should hire someone to write a correct explanation of what it is.\\n\\nI\\'m stuck on testcase 13 because I have no idea how that case is supposed to be executed regardless of code."
                    },
                    {
                        "username": "RuiK",
                        "content": "For Python users, does anyone know why floor division (`x // y`) doesn\\'t work but the true division (`x / y`) works for this problem? \\n\\nWith floor division, it triggers certain error (e.g. -1 instead of 0, minor miscalculation for longer input, etc.) while the true division seems to not have any issues that floor division faces. "
                    },
                    {
                        "username": "pqt2p1",
                        "content": " I don't know why isnumeric() doesn't work.\n\n1: This works fine\n `class Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stack = []\n        for i in range(len(tokens)):\n            if tokens[i] == \"+\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a+b)\n            elif tokens[i] == \"-\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(b-a)\n            elif tokens[i] == \"*\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a*b)\n            elif tokens[i] == \"/\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(int(b/a))\n            else:\n                stack.append(int(tokens[i]))\n        return stack[0]\n`\n\n2: This doesn't work.\n `class Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stack = []\n        for i in range(len(tokens)):\n            if tokens[i] == \"+\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a+b)\n            elif tokens[i] == \"-\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(b-a)\n            elif tokens[i] == \"*\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a*b)\n            elif tokens[i] == \"/\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(int(b/a))\n            elif (tokens[i].isnumeric()):\n                stack.append(int(tokens[i]))\n\n        return stack[0]\n`\n\nThe error returned is:\n\n `IndexError: pop from empty list\n    a,b = stack.pop(), stack.pop()\nLine 12 in evalRPN (Solution.py)\n    ret = Solution().evalRPN(param_1)\nLine 40 in _driver (Solution.py)\n    _driver()\nLine 51 in <module> (Solution.py)"
                    },
                    {
                        "username": "CaptainKidd",
                        "content": "So long as you know that stacks are involved it\\'s not so bad. The fiddly logic is remembering that the second value pulled off the stack goes first in whatever notation you are being asked to process.\\n\\nIn Java this has some annoying extra steps because the direct string comparison you are used to in math operations like \\'==\\' is not applicable and will return false when you expect true. So remember that String.equals() and Integer.parseInt()  are your friends here. "
                    },
                    {
                        "username": "marco_seven",
                        "content": "Hint: when a oprator comes calculate last 2 numbers from stack "
                    },
                    {
                        "username": "marco_seven",
                        "content": "ek bar me to smjh me aata hi nhi problem,,\n\ncan anyone explain this question/problem.."
                    },
                    {
                        "username": "spookie886",
                        "content": "what if tokens.length <= 2 ?"
                    },
                    {
                        "username": "mochiball",
                        "content": "This should be easy problem. I struggle with stack problems but found this one to be pretty easy\\n\\nAlso, we don\\'t need to check that the size of stack is >=2 before we pop because Reverse Polish Notation guarantees that we\\'ll never get something like \\n\\n[\"+\", \"5\", \"*\" ]"
                    },
                    {
                        "username": "lowerkinded",
                        "content": "Three hints for those wanting to take an alternative path:\n- Recursively parse the list into an abstract syntax tree\n- Every operation can have a sub-operation only on its right-hand side or only on its left-hand side\n- Turn this into lisp"
                    }
                ]
            },
            {
                "id": 1918212,
                "content": [
                    {
                        "username": "rahuljauhari3",
                        "content": "In case someone is looking for this [\\'+\\', \\'-\\', \\'*\\', \\'/\\']"
                    },
                    {
                        "username": "danek1313",
                        "content": "If you are relying on a Wikipedia explanation of what Reverse Polish Notation is, and you acknowledge that Wikipedia\\'s explanation contains errors, maybe you should hire someone to write a correct explanation of what it is.\\n\\nI\\'m stuck on testcase 13 because I have no idea how that case is supposed to be executed regardless of code."
                    },
                    {
                        "username": "RuiK",
                        "content": "For Python users, does anyone know why floor division (`x // y`) doesn\\'t work but the true division (`x / y`) works for this problem? \\n\\nWith floor division, it triggers certain error (e.g. -1 instead of 0, minor miscalculation for longer input, etc.) while the true division seems to not have any issues that floor division faces. "
                    },
                    {
                        "username": "pqt2p1",
                        "content": " I don't know why isnumeric() doesn't work.\n\n1: This works fine\n `class Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stack = []\n        for i in range(len(tokens)):\n            if tokens[i] == \"+\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a+b)\n            elif tokens[i] == \"-\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(b-a)\n            elif tokens[i] == \"*\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a*b)\n            elif tokens[i] == \"/\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(int(b/a))\n            else:\n                stack.append(int(tokens[i]))\n        return stack[0]\n`\n\n2: This doesn't work.\n `class Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stack = []\n        for i in range(len(tokens)):\n            if tokens[i] == \"+\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a+b)\n            elif tokens[i] == \"-\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(b-a)\n            elif tokens[i] == \"*\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a*b)\n            elif tokens[i] == \"/\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(int(b/a))\n            elif (tokens[i].isnumeric()):\n                stack.append(int(tokens[i]))\n\n        return stack[0]\n`\n\nThe error returned is:\n\n `IndexError: pop from empty list\n    a,b = stack.pop(), stack.pop()\nLine 12 in evalRPN (Solution.py)\n    ret = Solution().evalRPN(param_1)\nLine 40 in _driver (Solution.py)\n    _driver()\nLine 51 in <module> (Solution.py)"
                    },
                    {
                        "username": "CaptainKidd",
                        "content": "So long as you know that stacks are involved it\\'s not so bad. The fiddly logic is remembering that the second value pulled off the stack goes first in whatever notation you are being asked to process.\\n\\nIn Java this has some annoying extra steps because the direct string comparison you are used to in math operations like \\'==\\' is not applicable and will return false when you expect true. So remember that String.equals() and Integer.parseInt()  are your friends here. "
                    },
                    {
                        "username": "marco_seven",
                        "content": "Hint: when a oprator comes calculate last 2 numbers from stack "
                    },
                    {
                        "username": "marco_seven",
                        "content": "ek bar me to smjh me aata hi nhi problem,,\n\ncan anyone explain this question/problem.."
                    },
                    {
                        "username": "spookie886",
                        "content": "what if tokens.length <= 2 ?"
                    },
                    {
                        "username": "mochiball",
                        "content": "This should be easy problem. I struggle with stack problems but found this one to be pretty easy\\n\\nAlso, we don\\'t need to check that the size of stack is >=2 before we pop because Reverse Polish Notation guarantees that we\\'ll never get something like \\n\\n[\"+\", \"5\", \"*\" ]"
                    },
                    {
                        "username": "lowerkinded",
                        "content": "Three hints for those wanting to take an alternative path:\n- Recursively parse the list into an abstract syntax tree\n- Every operation can have a sub-operation only on its right-hand side or only on its left-hand side\n- Turn this into lisp"
                    }
                ]
            },
            {
                "id": 1911303,
                "content": [
                    {
                        "username": "rahuljauhari3",
                        "content": "In case someone is looking for this [\\'+\\', \\'-\\', \\'*\\', \\'/\\']"
                    },
                    {
                        "username": "danek1313",
                        "content": "If you are relying on a Wikipedia explanation of what Reverse Polish Notation is, and you acknowledge that Wikipedia\\'s explanation contains errors, maybe you should hire someone to write a correct explanation of what it is.\\n\\nI\\'m stuck on testcase 13 because I have no idea how that case is supposed to be executed regardless of code."
                    },
                    {
                        "username": "RuiK",
                        "content": "For Python users, does anyone know why floor division (`x // y`) doesn\\'t work but the true division (`x / y`) works for this problem? \\n\\nWith floor division, it triggers certain error (e.g. -1 instead of 0, minor miscalculation for longer input, etc.) while the true division seems to not have any issues that floor division faces. "
                    },
                    {
                        "username": "pqt2p1",
                        "content": " I don't know why isnumeric() doesn't work.\n\n1: This works fine\n `class Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stack = []\n        for i in range(len(tokens)):\n            if tokens[i] == \"+\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a+b)\n            elif tokens[i] == \"-\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(b-a)\n            elif tokens[i] == \"*\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a*b)\n            elif tokens[i] == \"/\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(int(b/a))\n            else:\n                stack.append(int(tokens[i]))\n        return stack[0]\n`\n\n2: This doesn't work.\n `class Solution:\n    def evalRPN(self, tokens: List[str]) -> int:\n        stack = []\n        for i in range(len(tokens)):\n            if tokens[i] == \"+\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a+b)\n            elif tokens[i] == \"-\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(b-a)\n            elif tokens[i] == \"*\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(a*b)\n            elif tokens[i] == \"/\":\n                a,b = stack.pop(), stack.pop()\n                stack.append(int(b/a))\n            elif (tokens[i].isnumeric()):\n                stack.append(int(tokens[i]))\n\n        return stack[0]\n`\n\nThe error returned is:\n\n `IndexError: pop from empty list\n    a,b = stack.pop(), stack.pop()\nLine 12 in evalRPN (Solution.py)\n    ret = Solution().evalRPN(param_1)\nLine 40 in _driver (Solution.py)\n    _driver()\nLine 51 in <module> (Solution.py)"
                    },
                    {
                        "username": "CaptainKidd",
                        "content": "So long as you know that stacks are involved it\\'s not so bad. The fiddly logic is remembering that the second value pulled off the stack goes first in whatever notation you are being asked to process.\\n\\nIn Java this has some annoying extra steps because the direct string comparison you are used to in math operations like \\'==\\' is not applicable and will return false when you expect true. So remember that String.equals() and Integer.parseInt()  are your friends here. "
                    },
                    {
                        "username": "marco_seven",
                        "content": "Hint: when a oprator comes calculate last 2 numbers from stack "
                    },
                    {
                        "username": "marco_seven",
                        "content": "ek bar me to smjh me aata hi nhi problem,,\n\ncan anyone explain this question/problem.."
                    },
                    {
                        "username": "spookie886",
                        "content": "what if tokens.length <= 2 ?"
                    },
                    {
                        "username": "mochiball",
                        "content": "This should be easy problem. I struggle with stack problems but found this one to be pretty easy\\n\\nAlso, we don\\'t need to check that the size of stack is >=2 before we pop because Reverse Polish Notation guarantees that we\\'ll never get something like \\n\\n[\"+\", \"5\", \"*\" ]"
                    },
                    {
                        "username": "lowerkinded",
                        "content": "Three hints for those wanting to take an alternative path:\n- Recursively parse the list into an abstract syntax tree\n- Every operation can have a sub-operation only on its right-hand side or only on its left-hand side\n- Turn this into lisp"
                    }
                ]
            },
            {
                "id": 1906508,
                "content": [
                    {
                        "username": "yeezy_szn",
                        "content": "The wikipedia article linked in the description contains solution spoilers. I'd recommend LC change the description to include this blurb from the editorial below that describes Reverse Polish Notation, so that people unfamiliar with it can read the description without going to the Wikipedia page that contains hints on how to write a program to evaluate RPN.\n\n`\nWhile there are operators remaining in the list, find the left-most operator. Apply it to the 2 numbers immediately before it, and replace all 3 tokens (the operator and 2 numbers) with the result.\n`"
                    },
                    {
                        "username": "yogesh713",
                        "content": "[\"4\",\"13\",\"5\",\"/\",\"+\",\"10\",\"*\"] -> Valid TestCase\\nChanging Last Two Strings\\n[\"4\",\"13\",\"5\",\"/\",\"+\",\"10\",\"*\"] -> Why this is an InValid TestCase"
                    },
                    {
                        "username": "nonethewiser",
                        "content": "Hint: \"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "rosenjd4",
                        "content": "`The division between two integers always truncates toward zero.\n`\nThrew me off, luckily JS has `Math.trunc` functionality that works well with this problem.\n\nHalf the battle with Leetcode is just understanding the arbitrary rules"
                    },
                    {
                        "username": "xuranw2022",
                        "content": "No idea why I can\\'t pass case 3, please help!! Thanks\\n\\nclass Solution(object):\\n    def evalRPN(self, tokens):\\n        \"\"\"\\n        :type tokens: List[str]\\n        :rtype: int\\n        \"\"\"\\n        stack = []\\n        for s in tokens:\\n            if s not in \"+-*/\":\\n                stack.append(int(s))\\n            else:\\n                n2 = stack.pop()\\n                n1 = stack.pop()\\n                if s == \"+\":\\n                    stack.append(n1+n2)\\n                elif s == \"-\":\\n                    stack.append(n1-n2)\\n                elif s == \"*\":\\n                    stack.append(n1*n2)\\n                elif s == \"/\":\\n                    stack.append(int(n1/n2))\\n        return stack[0]"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "For my `JS` friends:\\n1. the **rounding up/down** for integers goes this way:\\n`value > 0 ? Math.floor(newResult) : Math.ceil(newResult);`\\naka round down for positive numbers, and round up for negative numbers.\\n2. if you have a string like \"(2 + 3)\", you can use eval to get the mathematical result i.e. `let result = eval(\"2 + 3\")` => result will eval to 5\\n\\nThis problem really wasn\\'t made to be handled with JS, JS is oh so amazing :eye_roll:  for handling numbers.. ooh well"
                    },
                    {
                        "username": "anonpq",
                        "content": "Could someone help me understand why the expected answer for [\"3\",\"11\",\"+\",\"5\",\"-\"] is 9 and not -9?\\nThe way I understood it is that it parses to (5-(11+3)), which equals -9. However the expected answer is coming out as 9, i.e. ((11+3)-5)"
                    },
                    {
                        "username": "bilik",
                        "content": "Hey [@anonpq](/anonpq)! I encountered the same issue and solved it, the thing is [\"3\",\"11\",\"+\",\"5\",\"-\"] translates to \"(3 + 11) - 5\" and not to \"5 - (3 + 11)\"\\nThat\\'s because \"num1, num2, operator\" === \"num1, operator, num2\".\\n\\nAnd with nesting:\\n\"num1, num2, operator1, num3, operator2\" ->\\nsum1 = num1, operator1, num2\\n\"sum1, num3, operator2\" ->\\n\"sum1, operator2, num3\"\\n\\nbasically -\\n14, -, 5\\n\\n\\n\\nSo going through [\"3\",\"11\",\"+\",\"5\",\"-\"] step by step:\\n\\n\"3, 11, +, 5, -\" === \"(3+11), 5, -\"\\n\"14, 5, -\" === \"(14 - 5)\"\\n9"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "abhi098",
                        "content": "why i am getting this error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0b6 for type \\'long long\\', which requires 8 byte alignment (stl_deque.h)\\n0xbebebebebebec0b6: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16\\n\\nHere is the code\\n\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long int>st;\\n        int j=0;\\n        while(true){\\n            cout<<j<<\" \";\\n            if(j>=tokens.size())break;\\n            string i=tokens[j];\\n            if(i>=\"0\" and i<=\"9\"){\\n                st.push(stoi(i));\\n            }\\n            else{\\n                long long ans=0;\\n                int a=st.top(); \\n                st.pop(); \\n                int b=st.top(); \\n                st.pop();\\n                if(i==\"+\")ans=b+a;\\n                else if(i==\"-\")ans=b-a;\\n                else if(i==\"*\")ans=b*a;\\n                else if(i==\"/\")ans=b/a;\\n                st.push(ans);\\n            }\\n            j++;\\n        }\\n        int d=(int)st.top();\\n        return d;\\n    }\\n};\\n\\n\\n\\n\\n"
                    },
                    {
                        "username": "abhi098",
                        "content": "why am i getting this error \\n\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16"
                    }
                ]
            },
            {
                "id": 1846303,
                "content": [
                    {
                        "username": "yeezy_szn",
                        "content": "The wikipedia article linked in the description contains solution spoilers. I'd recommend LC change the description to include this blurb from the editorial below that describes Reverse Polish Notation, so that people unfamiliar with it can read the description without going to the Wikipedia page that contains hints on how to write a program to evaluate RPN.\n\n`\nWhile there are operators remaining in the list, find the left-most operator. Apply it to the 2 numbers immediately before it, and replace all 3 tokens (the operator and 2 numbers) with the result.\n`"
                    },
                    {
                        "username": "yogesh713",
                        "content": "[\"4\",\"13\",\"5\",\"/\",\"+\",\"10\",\"*\"] -> Valid TestCase\\nChanging Last Two Strings\\n[\"4\",\"13\",\"5\",\"/\",\"+\",\"10\",\"*\"] -> Why this is an InValid TestCase"
                    },
                    {
                        "username": "nonethewiser",
                        "content": "Hint: \"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "rosenjd4",
                        "content": "`The division between two integers always truncates toward zero.\n`\nThrew me off, luckily JS has `Math.trunc` functionality that works well with this problem.\n\nHalf the battle with Leetcode is just understanding the arbitrary rules"
                    },
                    {
                        "username": "xuranw2022",
                        "content": "No idea why I can\\'t pass case 3, please help!! Thanks\\n\\nclass Solution(object):\\n    def evalRPN(self, tokens):\\n        \"\"\"\\n        :type tokens: List[str]\\n        :rtype: int\\n        \"\"\"\\n        stack = []\\n        for s in tokens:\\n            if s not in \"+-*/\":\\n                stack.append(int(s))\\n            else:\\n                n2 = stack.pop()\\n                n1 = stack.pop()\\n                if s == \"+\":\\n                    stack.append(n1+n2)\\n                elif s == \"-\":\\n                    stack.append(n1-n2)\\n                elif s == \"*\":\\n                    stack.append(n1*n2)\\n                elif s == \"/\":\\n                    stack.append(int(n1/n2))\\n        return stack[0]"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "For my `JS` friends:\\n1. the **rounding up/down** for integers goes this way:\\n`value > 0 ? Math.floor(newResult) : Math.ceil(newResult);`\\naka round down for positive numbers, and round up for negative numbers.\\n2. if you have a string like \"(2 + 3)\", you can use eval to get the mathematical result i.e. `let result = eval(\"2 + 3\")` => result will eval to 5\\n\\nThis problem really wasn\\'t made to be handled with JS, JS is oh so amazing :eye_roll:  for handling numbers.. ooh well"
                    },
                    {
                        "username": "anonpq",
                        "content": "Could someone help me understand why the expected answer for [\"3\",\"11\",\"+\",\"5\",\"-\"] is 9 and not -9?\\nThe way I understood it is that it parses to (5-(11+3)), which equals -9. However the expected answer is coming out as 9, i.e. ((11+3)-5)"
                    },
                    {
                        "username": "bilik",
                        "content": "Hey [@anonpq](/anonpq)! I encountered the same issue and solved it, the thing is [\"3\",\"11\",\"+\",\"5\",\"-\"] translates to \"(3 + 11) - 5\" and not to \"5 - (3 + 11)\"\\nThat\\'s because \"num1, num2, operator\" === \"num1, operator, num2\".\\n\\nAnd with nesting:\\n\"num1, num2, operator1, num3, operator2\" ->\\nsum1 = num1, operator1, num2\\n\"sum1, num3, operator2\" ->\\n\"sum1, operator2, num3\"\\n\\nbasically -\\n14, -, 5\\n\\n\\n\\nSo going through [\"3\",\"11\",\"+\",\"5\",\"-\"] step by step:\\n\\n\"3, 11, +, 5, -\" === \"(3+11), 5, -\"\\n\"14, 5, -\" === \"(14 - 5)\"\\n9"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "abhi098",
                        "content": "why i am getting this error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0b6 for type \\'long long\\', which requires 8 byte alignment (stl_deque.h)\\n0xbebebebebebec0b6: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16\\n\\nHere is the code\\n\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long int>st;\\n        int j=0;\\n        while(true){\\n            cout<<j<<\" \";\\n            if(j>=tokens.size())break;\\n            string i=tokens[j];\\n            if(i>=\"0\" and i<=\"9\"){\\n                st.push(stoi(i));\\n            }\\n            else{\\n                long long ans=0;\\n                int a=st.top(); \\n                st.pop(); \\n                int b=st.top(); \\n                st.pop();\\n                if(i==\"+\")ans=b+a;\\n                else if(i==\"-\")ans=b-a;\\n                else if(i==\"*\")ans=b*a;\\n                else if(i==\"/\")ans=b/a;\\n                st.push(ans);\\n            }\\n            j++;\\n        }\\n        int d=(int)st.top();\\n        return d;\\n    }\\n};\\n\\n\\n\\n\\n"
                    },
                    {
                        "username": "abhi098",
                        "content": "why am i getting this error \\n\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16"
                    }
                ]
            },
            {
                "id": 1801248,
                "content": [
                    {
                        "username": "yeezy_szn",
                        "content": "The wikipedia article linked in the description contains solution spoilers. I'd recommend LC change the description to include this blurb from the editorial below that describes Reverse Polish Notation, so that people unfamiliar with it can read the description without going to the Wikipedia page that contains hints on how to write a program to evaluate RPN.\n\n`\nWhile there are operators remaining in the list, find the left-most operator. Apply it to the 2 numbers immediately before it, and replace all 3 tokens (the operator and 2 numbers) with the result.\n`"
                    },
                    {
                        "username": "yogesh713",
                        "content": "[\"4\",\"13\",\"5\",\"/\",\"+\",\"10\",\"*\"] -> Valid TestCase\\nChanging Last Two Strings\\n[\"4\",\"13\",\"5\",\"/\",\"+\",\"10\",\"*\"] -> Why this is an InValid TestCase"
                    },
                    {
                        "username": "nonethewiser",
                        "content": "Hint: \"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "rosenjd4",
                        "content": "`The division between two integers always truncates toward zero.\n`\nThrew me off, luckily JS has `Math.trunc` functionality that works well with this problem.\n\nHalf the battle with Leetcode is just understanding the arbitrary rules"
                    },
                    {
                        "username": "xuranw2022",
                        "content": "No idea why I can\\'t pass case 3, please help!! Thanks\\n\\nclass Solution(object):\\n    def evalRPN(self, tokens):\\n        \"\"\"\\n        :type tokens: List[str]\\n        :rtype: int\\n        \"\"\"\\n        stack = []\\n        for s in tokens:\\n            if s not in \"+-*/\":\\n                stack.append(int(s))\\n            else:\\n                n2 = stack.pop()\\n                n1 = stack.pop()\\n                if s == \"+\":\\n                    stack.append(n1+n2)\\n                elif s == \"-\":\\n                    stack.append(n1-n2)\\n                elif s == \"*\":\\n                    stack.append(n1*n2)\\n                elif s == \"/\":\\n                    stack.append(int(n1/n2))\\n        return stack[0]"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "For my `JS` friends:\\n1. the **rounding up/down** for integers goes this way:\\n`value > 0 ? Math.floor(newResult) : Math.ceil(newResult);`\\naka round down for positive numbers, and round up for negative numbers.\\n2. if you have a string like \"(2 + 3)\", you can use eval to get the mathematical result i.e. `let result = eval(\"2 + 3\")` => result will eval to 5\\n\\nThis problem really wasn\\'t made to be handled with JS, JS is oh so amazing :eye_roll:  for handling numbers.. ooh well"
                    },
                    {
                        "username": "anonpq",
                        "content": "Could someone help me understand why the expected answer for [\"3\",\"11\",\"+\",\"5\",\"-\"] is 9 and not -9?\\nThe way I understood it is that it parses to (5-(11+3)), which equals -9. However the expected answer is coming out as 9, i.e. ((11+3)-5)"
                    },
                    {
                        "username": "bilik",
                        "content": "Hey [@anonpq](/anonpq)! I encountered the same issue and solved it, the thing is [\"3\",\"11\",\"+\",\"5\",\"-\"] translates to \"(3 + 11) - 5\" and not to \"5 - (3 + 11)\"\\nThat\\'s because \"num1, num2, operator\" === \"num1, operator, num2\".\\n\\nAnd with nesting:\\n\"num1, num2, operator1, num3, operator2\" ->\\nsum1 = num1, operator1, num2\\n\"sum1, num3, operator2\" ->\\n\"sum1, operator2, num3\"\\n\\nbasically -\\n14, -, 5\\n\\n\\n\\nSo going through [\"3\",\"11\",\"+\",\"5\",\"-\"] step by step:\\n\\n\"3, 11, +, 5, -\" === \"(3+11), 5, -\"\\n\"14, 5, -\" === \"(14 - 5)\"\\n9"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "abhi098",
                        "content": "why i am getting this error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0b6 for type \\'long long\\', which requires 8 byte alignment (stl_deque.h)\\n0xbebebebebebec0b6: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16\\n\\nHere is the code\\n\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long int>st;\\n        int j=0;\\n        while(true){\\n            cout<<j<<\" \";\\n            if(j>=tokens.size())break;\\n            string i=tokens[j];\\n            if(i>=\"0\" and i<=\"9\"){\\n                st.push(stoi(i));\\n            }\\n            else{\\n                long long ans=0;\\n                int a=st.top(); \\n                st.pop(); \\n                int b=st.top(); \\n                st.pop();\\n                if(i==\"+\")ans=b+a;\\n                else if(i==\"-\")ans=b-a;\\n                else if(i==\"*\")ans=b*a;\\n                else if(i==\"/\")ans=b/a;\\n                st.push(ans);\\n            }\\n            j++;\\n        }\\n        int d=(int)st.top();\\n        return d;\\n    }\\n};\\n\\n\\n\\n\\n"
                    },
                    {
                        "username": "abhi098",
                        "content": "why am i getting this error \\n\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16"
                    }
                ]
            },
            {
                "id": 1795186,
                "content": [
                    {
                        "username": "yeezy_szn",
                        "content": "The wikipedia article linked in the description contains solution spoilers. I'd recommend LC change the description to include this blurb from the editorial below that describes Reverse Polish Notation, so that people unfamiliar with it can read the description without going to the Wikipedia page that contains hints on how to write a program to evaluate RPN.\n\n`\nWhile there are operators remaining in the list, find the left-most operator. Apply it to the 2 numbers immediately before it, and replace all 3 tokens (the operator and 2 numbers) with the result.\n`"
                    },
                    {
                        "username": "yogesh713",
                        "content": "[\"4\",\"13\",\"5\",\"/\",\"+\",\"10\",\"*\"] -> Valid TestCase\\nChanging Last Two Strings\\n[\"4\",\"13\",\"5\",\"/\",\"+\",\"10\",\"*\"] -> Why this is an InValid TestCase"
                    },
                    {
                        "username": "nonethewiser",
                        "content": "Hint: \"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "rosenjd4",
                        "content": "`The division between two integers always truncates toward zero.\n`\nThrew me off, luckily JS has `Math.trunc` functionality that works well with this problem.\n\nHalf the battle with Leetcode is just understanding the arbitrary rules"
                    },
                    {
                        "username": "xuranw2022",
                        "content": "No idea why I can\\'t pass case 3, please help!! Thanks\\n\\nclass Solution(object):\\n    def evalRPN(self, tokens):\\n        \"\"\"\\n        :type tokens: List[str]\\n        :rtype: int\\n        \"\"\"\\n        stack = []\\n        for s in tokens:\\n            if s not in \"+-*/\":\\n                stack.append(int(s))\\n            else:\\n                n2 = stack.pop()\\n                n1 = stack.pop()\\n                if s == \"+\":\\n                    stack.append(n1+n2)\\n                elif s == \"-\":\\n                    stack.append(n1-n2)\\n                elif s == \"*\":\\n                    stack.append(n1*n2)\\n                elif s == \"/\":\\n                    stack.append(int(n1/n2))\\n        return stack[0]"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "For my `JS` friends:\\n1. the **rounding up/down** for integers goes this way:\\n`value > 0 ? Math.floor(newResult) : Math.ceil(newResult);`\\naka round down for positive numbers, and round up for negative numbers.\\n2. if you have a string like \"(2 + 3)\", you can use eval to get the mathematical result i.e. `let result = eval(\"2 + 3\")` => result will eval to 5\\n\\nThis problem really wasn\\'t made to be handled with JS, JS is oh so amazing :eye_roll:  for handling numbers.. ooh well"
                    },
                    {
                        "username": "anonpq",
                        "content": "Could someone help me understand why the expected answer for [\"3\",\"11\",\"+\",\"5\",\"-\"] is 9 and not -9?\\nThe way I understood it is that it parses to (5-(11+3)), which equals -9. However the expected answer is coming out as 9, i.e. ((11+3)-5)"
                    },
                    {
                        "username": "bilik",
                        "content": "Hey [@anonpq](/anonpq)! I encountered the same issue and solved it, the thing is [\"3\",\"11\",\"+\",\"5\",\"-\"] translates to \"(3 + 11) - 5\" and not to \"5 - (3 + 11)\"\\nThat\\'s because \"num1, num2, operator\" === \"num1, operator, num2\".\\n\\nAnd with nesting:\\n\"num1, num2, operator1, num3, operator2\" ->\\nsum1 = num1, operator1, num2\\n\"sum1, num3, operator2\" ->\\n\"sum1, operator2, num3\"\\n\\nbasically -\\n14, -, 5\\n\\n\\n\\nSo going through [\"3\",\"11\",\"+\",\"5\",\"-\"] step by step:\\n\\n\"3, 11, +, 5, -\" === \"(3+11), 5, -\"\\n\"14, 5, -\" === \"(14 - 5)\"\\n9"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "abhi098",
                        "content": "why i am getting this error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0b6 for type \\'long long\\', which requires 8 byte alignment (stl_deque.h)\\n0xbebebebebebec0b6: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16\\n\\nHere is the code\\n\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long int>st;\\n        int j=0;\\n        while(true){\\n            cout<<j<<\" \";\\n            if(j>=tokens.size())break;\\n            string i=tokens[j];\\n            if(i>=\"0\" and i<=\"9\"){\\n                st.push(stoi(i));\\n            }\\n            else{\\n                long long ans=0;\\n                int a=st.top(); \\n                st.pop(); \\n                int b=st.top(); \\n                st.pop();\\n                if(i==\"+\")ans=b+a;\\n                else if(i==\"-\")ans=b-a;\\n                else if(i==\"*\")ans=b*a;\\n                else if(i==\"/\")ans=b/a;\\n                st.push(ans);\\n            }\\n            j++;\\n        }\\n        int d=(int)st.top();\\n        return d;\\n    }\\n};\\n\\n\\n\\n\\n"
                    },
                    {
                        "username": "abhi098",
                        "content": "why am i getting this error \\n\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16"
                    }
                ]
            },
            {
                "id": 1788088,
                "content": [
                    {
                        "username": "yeezy_szn",
                        "content": "The wikipedia article linked in the description contains solution spoilers. I'd recommend LC change the description to include this blurb from the editorial below that describes Reverse Polish Notation, so that people unfamiliar with it can read the description without going to the Wikipedia page that contains hints on how to write a program to evaluate RPN.\n\n`\nWhile there are operators remaining in the list, find the left-most operator. Apply it to the 2 numbers immediately before it, and replace all 3 tokens (the operator and 2 numbers) with the result.\n`"
                    },
                    {
                        "username": "yogesh713",
                        "content": "[\"4\",\"13\",\"5\",\"/\",\"+\",\"10\",\"*\"] -> Valid TestCase\\nChanging Last Two Strings\\n[\"4\",\"13\",\"5\",\"/\",\"+\",\"10\",\"*\"] -> Why this is an InValid TestCase"
                    },
                    {
                        "username": "nonethewiser",
                        "content": "Hint: \"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "rosenjd4",
                        "content": "`The division between two integers always truncates toward zero.\n`\nThrew me off, luckily JS has `Math.trunc` functionality that works well with this problem.\n\nHalf the battle with Leetcode is just understanding the arbitrary rules"
                    },
                    {
                        "username": "xuranw2022",
                        "content": "No idea why I can\\'t pass case 3, please help!! Thanks\\n\\nclass Solution(object):\\n    def evalRPN(self, tokens):\\n        \"\"\"\\n        :type tokens: List[str]\\n        :rtype: int\\n        \"\"\"\\n        stack = []\\n        for s in tokens:\\n            if s not in \"+-*/\":\\n                stack.append(int(s))\\n            else:\\n                n2 = stack.pop()\\n                n1 = stack.pop()\\n                if s == \"+\":\\n                    stack.append(n1+n2)\\n                elif s == \"-\":\\n                    stack.append(n1-n2)\\n                elif s == \"*\":\\n                    stack.append(n1*n2)\\n                elif s == \"/\":\\n                    stack.append(int(n1/n2))\\n        return stack[0]"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "For my `JS` friends:\\n1. the **rounding up/down** for integers goes this way:\\n`value > 0 ? Math.floor(newResult) : Math.ceil(newResult);`\\naka round down for positive numbers, and round up for negative numbers.\\n2. if you have a string like \"(2 + 3)\", you can use eval to get the mathematical result i.e. `let result = eval(\"2 + 3\")` => result will eval to 5\\n\\nThis problem really wasn\\'t made to be handled with JS, JS is oh so amazing :eye_roll:  for handling numbers.. ooh well"
                    },
                    {
                        "username": "anonpq",
                        "content": "Could someone help me understand why the expected answer for [\"3\",\"11\",\"+\",\"5\",\"-\"] is 9 and not -9?\\nThe way I understood it is that it parses to (5-(11+3)), which equals -9. However the expected answer is coming out as 9, i.e. ((11+3)-5)"
                    },
                    {
                        "username": "bilik",
                        "content": "Hey [@anonpq](/anonpq)! I encountered the same issue and solved it, the thing is [\"3\",\"11\",\"+\",\"5\",\"-\"] translates to \"(3 + 11) - 5\" and not to \"5 - (3 + 11)\"\\nThat\\'s because \"num1, num2, operator\" === \"num1, operator, num2\".\\n\\nAnd with nesting:\\n\"num1, num2, operator1, num3, operator2\" ->\\nsum1 = num1, operator1, num2\\n\"sum1, num3, operator2\" ->\\n\"sum1, operator2, num3\"\\n\\nbasically -\\n14, -, 5\\n\\n\\n\\nSo going through [\"3\",\"11\",\"+\",\"5\",\"-\"] step by step:\\n\\n\"3, 11, +, 5, -\" === \"(3+11), 5, -\"\\n\"14, 5, -\" === \"(14 - 5)\"\\n9"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "abhi098",
                        "content": "why i am getting this error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0b6 for type \\'long long\\', which requires 8 byte alignment (stl_deque.h)\\n0xbebebebebebec0b6: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16\\n\\nHere is the code\\n\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long int>st;\\n        int j=0;\\n        while(true){\\n            cout<<j<<\" \";\\n            if(j>=tokens.size())break;\\n            string i=tokens[j];\\n            if(i>=\"0\" and i<=\"9\"){\\n                st.push(stoi(i));\\n            }\\n            else{\\n                long long ans=0;\\n                int a=st.top(); \\n                st.pop(); \\n                int b=st.top(); \\n                st.pop();\\n                if(i==\"+\")ans=b+a;\\n                else if(i==\"-\")ans=b-a;\\n                else if(i==\"*\")ans=b*a;\\n                else if(i==\"/\")ans=b/a;\\n                st.push(ans);\\n            }\\n            j++;\\n        }\\n        int d=(int)st.top();\\n        return d;\\n    }\\n};\\n\\n\\n\\n\\n"
                    },
                    {
                        "username": "abhi098",
                        "content": "why am i getting this error \\n\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16"
                    }
                ]
            },
            {
                "id": 1778228,
                "content": [
                    {
                        "username": "yeezy_szn",
                        "content": "The wikipedia article linked in the description contains solution spoilers. I'd recommend LC change the description to include this blurb from the editorial below that describes Reverse Polish Notation, so that people unfamiliar with it can read the description without going to the Wikipedia page that contains hints on how to write a program to evaluate RPN.\n\n`\nWhile there are operators remaining in the list, find the left-most operator. Apply it to the 2 numbers immediately before it, and replace all 3 tokens (the operator and 2 numbers) with the result.\n`"
                    },
                    {
                        "username": "yogesh713",
                        "content": "[\"4\",\"13\",\"5\",\"/\",\"+\",\"10\",\"*\"] -> Valid TestCase\\nChanging Last Two Strings\\n[\"4\",\"13\",\"5\",\"/\",\"+\",\"10\",\"*\"] -> Why this is an InValid TestCase"
                    },
                    {
                        "username": "nonethewiser",
                        "content": "Hint: \"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "rosenjd4",
                        "content": "`The division between two integers always truncates toward zero.\n`\nThrew me off, luckily JS has `Math.trunc` functionality that works well with this problem.\n\nHalf the battle with Leetcode is just understanding the arbitrary rules"
                    },
                    {
                        "username": "xuranw2022",
                        "content": "No idea why I can\\'t pass case 3, please help!! Thanks\\n\\nclass Solution(object):\\n    def evalRPN(self, tokens):\\n        \"\"\"\\n        :type tokens: List[str]\\n        :rtype: int\\n        \"\"\"\\n        stack = []\\n        for s in tokens:\\n            if s not in \"+-*/\":\\n                stack.append(int(s))\\n            else:\\n                n2 = stack.pop()\\n                n1 = stack.pop()\\n                if s == \"+\":\\n                    stack.append(n1+n2)\\n                elif s == \"-\":\\n                    stack.append(n1-n2)\\n                elif s == \"*\":\\n                    stack.append(n1*n2)\\n                elif s == \"/\":\\n                    stack.append(int(n1/n2))\\n        return stack[0]"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "For my `JS` friends:\\n1. the **rounding up/down** for integers goes this way:\\n`value > 0 ? Math.floor(newResult) : Math.ceil(newResult);`\\naka round down for positive numbers, and round up for negative numbers.\\n2. if you have a string like \"(2 + 3)\", you can use eval to get the mathematical result i.e. `let result = eval(\"2 + 3\")` => result will eval to 5\\n\\nThis problem really wasn\\'t made to be handled with JS, JS is oh so amazing :eye_roll:  for handling numbers.. ooh well"
                    },
                    {
                        "username": "anonpq",
                        "content": "Could someone help me understand why the expected answer for [\"3\",\"11\",\"+\",\"5\",\"-\"] is 9 and not -9?\\nThe way I understood it is that it parses to (5-(11+3)), which equals -9. However the expected answer is coming out as 9, i.e. ((11+3)-5)"
                    },
                    {
                        "username": "bilik",
                        "content": "Hey [@anonpq](/anonpq)! I encountered the same issue and solved it, the thing is [\"3\",\"11\",\"+\",\"5\",\"-\"] translates to \"(3 + 11) - 5\" and not to \"5 - (3 + 11)\"\\nThat\\'s because \"num1, num2, operator\" === \"num1, operator, num2\".\\n\\nAnd with nesting:\\n\"num1, num2, operator1, num3, operator2\" ->\\nsum1 = num1, operator1, num2\\n\"sum1, num3, operator2\" ->\\n\"sum1, operator2, num3\"\\n\\nbasically -\\n14, -, 5\\n\\n\\n\\nSo going through [\"3\",\"11\",\"+\",\"5\",\"-\"] step by step:\\n\\n\"3, 11, +, 5, -\" === \"(3+11), 5, -\"\\n\"14, 5, -\" === \"(14 - 5)\"\\n9"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "abhi098",
                        "content": "why i am getting this error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0b6 for type \\'long long\\', which requires 8 byte alignment (stl_deque.h)\\n0xbebebebebebec0b6: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16\\n\\nHere is the code\\n\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long int>st;\\n        int j=0;\\n        while(true){\\n            cout<<j<<\" \";\\n            if(j>=tokens.size())break;\\n            string i=tokens[j];\\n            if(i>=\"0\" and i<=\"9\"){\\n                st.push(stoi(i));\\n            }\\n            else{\\n                long long ans=0;\\n                int a=st.top(); \\n                st.pop(); \\n                int b=st.top(); \\n                st.pop();\\n                if(i==\"+\")ans=b+a;\\n                else if(i==\"-\")ans=b-a;\\n                else if(i==\"*\")ans=b*a;\\n                else if(i==\"/\")ans=b/a;\\n                st.push(ans);\\n            }\\n            j++;\\n        }\\n        int d=(int)st.top();\\n        return d;\\n    }\\n};\\n\\n\\n\\n\\n"
                    },
                    {
                        "username": "abhi098",
                        "content": "why am i getting this error \\n\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16"
                    }
                ]
            },
            {
                "id": 1757519,
                "content": [
                    {
                        "username": "yeezy_szn",
                        "content": "The wikipedia article linked in the description contains solution spoilers. I'd recommend LC change the description to include this blurb from the editorial below that describes Reverse Polish Notation, so that people unfamiliar with it can read the description without going to the Wikipedia page that contains hints on how to write a program to evaluate RPN.\n\n`\nWhile there are operators remaining in the list, find the left-most operator. Apply it to the 2 numbers immediately before it, and replace all 3 tokens (the operator and 2 numbers) with the result.\n`"
                    },
                    {
                        "username": "yogesh713",
                        "content": "[\"4\",\"13\",\"5\",\"/\",\"+\",\"10\",\"*\"] -> Valid TestCase\\nChanging Last Two Strings\\n[\"4\",\"13\",\"5\",\"/\",\"+\",\"10\",\"*\"] -> Why this is an InValid TestCase"
                    },
                    {
                        "username": "nonethewiser",
                        "content": "Hint: \"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "rosenjd4",
                        "content": "`The division between two integers always truncates toward zero.\n`\nThrew me off, luckily JS has `Math.trunc` functionality that works well with this problem.\n\nHalf the battle with Leetcode is just understanding the arbitrary rules"
                    },
                    {
                        "username": "xuranw2022",
                        "content": "No idea why I can\\'t pass case 3, please help!! Thanks\\n\\nclass Solution(object):\\n    def evalRPN(self, tokens):\\n        \"\"\"\\n        :type tokens: List[str]\\n        :rtype: int\\n        \"\"\"\\n        stack = []\\n        for s in tokens:\\n            if s not in \"+-*/\":\\n                stack.append(int(s))\\n            else:\\n                n2 = stack.pop()\\n                n1 = stack.pop()\\n                if s == \"+\":\\n                    stack.append(n1+n2)\\n                elif s == \"-\":\\n                    stack.append(n1-n2)\\n                elif s == \"*\":\\n                    stack.append(n1*n2)\\n                elif s == \"/\":\\n                    stack.append(int(n1/n2))\\n        return stack[0]"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "For my `JS` friends:\\n1. the **rounding up/down** for integers goes this way:\\n`value > 0 ? Math.floor(newResult) : Math.ceil(newResult);`\\naka round down for positive numbers, and round up for negative numbers.\\n2. if you have a string like \"(2 + 3)\", you can use eval to get the mathematical result i.e. `let result = eval(\"2 + 3\")` => result will eval to 5\\n\\nThis problem really wasn\\'t made to be handled with JS, JS is oh so amazing :eye_roll:  for handling numbers.. ooh well"
                    },
                    {
                        "username": "anonpq",
                        "content": "Could someone help me understand why the expected answer for [\"3\",\"11\",\"+\",\"5\",\"-\"] is 9 and not -9?\\nThe way I understood it is that it parses to (5-(11+3)), which equals -9. However the expected answer is coming out as 9, i.e. ((11+3)-5)"
                    },
                    {
                        "username": "bilik",
                        "content": "Hey [@anonpq](/anonpq)! I encountered the same issue and solved it, the thing is [\"3\",\"11\",\"+\",\"5\",\"-\"] translates to \"(3 + 11) - 5\" and not to \"5 - (3 + 11)\"\\nThat\\'s because \"num1, num2, operator\" === \"num1, operator, num2\".\\n\\nAnd with nesting:\\n\"num1, num2, operator1, num3, operator2\" ->\\nsum1 = num1, operator1, num2\\n\"sum1, num3, operator2\" ->\\n\"sum1, operator2, num3\"\\n\\nbasically -\\n14, -, 5\\n\\n\\n\\nSo going through [\"3\",\"11\",\"+\",\"5\",\"-\"] step by step:\\n\\n\"3, 11, +, 5, -\" === \"(3+11), 5, -\"\\n\"14, 5, -\" === \"(14 - 5)\"\\n9"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "abhi098",
                        "content": "why i am getting this error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0b6 for type \\'long long\\', which requires 8 byte alignment (stl_deque.h)\\n0xbebebebebebec0b6: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16\\n\\nHere is the code\\n\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long int>st;\\n        int j=0;\\n        while(true){\\n            cout<<j<<\" \";\\n            if(j>=tokens.size())break;\\n            string i=tokens[j];\\n            if(i>=\"0\" and i<=\"9\"){\\n                st.push(stoi(i));\\n            }\\n            else{\\n                long long ans=0;\\n                int a=st.top(); \\n                st.pop(); \\n                int b=st.top(); \\n                st.pop();\\n                if(i==\"+\")ans=b+a;\\n                else if(i==\"-\")ans=b-a;\\n                else if(i==\"*\")ans=b*a;\\n                else if(i==\"/\")ans=b/a;\\n                st.push(ans);\\n            }\\n            j++;\\n        }\\n        int d=(int)st.top();\\n        return d;\\n    }\\n};\\n\\n\\n\\n\\n"
                    },
                    {
                        "username": "abhi098",
                        "content": "why am i getting this error \\n\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16"
                    }
                ]
            },
            {
                "id": 1756364,
                "content": [
                    {
                        "username": "yeezy_szn",
                        "content": "The wikipedia article linked in the description contains solution spoilers. I'd recommend LC change the description to include this blurb from the editorial below that describes Reverse Polish Notation, so that people unfamiliar with it can read the description without going to the Wikipedia page that contains hints on how to write a program to evaluate RPN.\n\n`\nWhile there are operators remaining in the list, find the left-most operator. Apply it to the 2 numbers immediately before it, and replace all 3 tokens (the operator and 2 numbers) with the result.\n`"
                    },
                    {
                        "username": "yogesh713",
                        "content": "[\"4\",\"13\",\"5\",\"/\",\"+\",\"10\",\"*\"] -> Valid TestCase\\nChanging Last Two Strings\\n[\"4\",\"13\",\"5\",\"/\",\"+\",\"10\",\"*\"] -> Why this is an InValid TestCase"
                    },
                    {
                        "username": "nonethewiser",
                        "content": "Hint: \"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "rosenjd4",
                        "content": "`The division between two integers always truncates toward zero.\n`\nThrew me off, luckily JS has `Math.trunc` functionality that works well with this problem.\n\nHalf the battle with Leetcode is just understanding the arbitrary rules"
                    },
                    {
                        "username": "xuranw2022",
                        "content": "No idea why I can\\'t pass case 3, please help!! Thanks\\n\\nclass Solution(object):\\n    def evalRPN(self, tokens):\\n        \"\"\"\\n        :type tokens: List[str]\\n        :rtype: int\\n        \"\"\"\\n        stack = []\\n        for s in tokens:\\n            if s not in \"+-*/\":\\n                stack.append(int(s))\\n            else:\\n                n2 = stack.pop()\\n                n1 = stack.pop()\\n                if s == \"+\":\\n                    stack.append(n1+n2)\\n                elif s == \"-\":\\n                    stack.append(n1-n2)\\n                elif s == \"*\":\\n                    stack.append(n1*n2)\\n                elif s == \"/\":\\n                    stack.append(int(n1/n2))\\n        return stack[0]"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "For my `JS` friends:\\n1. the **rounding up/down** for integers goes this way:\\n`value > 0 ? Math.floor(newResult) : Math.ceil(newResult);`\\naka round down for positive numbers, and round up for negative numbers.\\n2. if you have a string like \"(2 + 3)\", you can use eval to get the mathematical result i.e. `let result = eval(\"2 + 3\")` => result will eval to 5\\n\\nThis problem really wasn\\'t made to be handled with JS, JS is oh so amazing :eye_roll:  for handling numbers.. ooh well"
                    },
                    {
                        "username": "anonpq",
                        "content": "Could someone help me understand why the expected answer for [\"3\",\"11\",\"+\",\"5\",\"-\"] is 9 and not -9?\\nThe way I understood it is that it parses to (5-(11+3)), which equals -9. However the expected answer is coming out as 9, i.e. ((11+3)-5)"
                    },
                    {
                        "username": "bilik",
                        "content": "Hey [@anonpq](/anonpq)! I encountered the same issue and solved it, the thing is [\"3\",\"11\",\"+\",\"5\",\"-\"] translates to \"(3 + 11) - 5\" and not to \"5 - (3 + 11)\"\\nThat\\'s because \"num1, num2, operator\" === \"num1, operator, num2\".\\n\\nAnd with nesting:\\n\"num1, num2, operator1, num3, operator2\" ->\\nsum1 = num1, operator1, num2\\n\"sum1, num3, operator2\" ->\\n\"sum1, operator2, num3\"\\n\\nbasically -\\n14, -, 5\\n\\n\\n\\nSo going through [\"3\",\"11\",\"+\",\"5\",\"-\"] step by step:\\n\\n\"3, 11, +, 5, -\" === \"(3+11), 5, -\"\\n\"14, 5, -\" === \"(14 - 5)\"\\n9"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "abhi098",
                        "content": "why i am getting this error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0b6 for type \\'long long\\', which requires 8 byte alignment (stl_deque.h)\\n0xbebebebebebec0b6: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16\\n\\nHere is the code\\n\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long int>st;\\n        int j=0;\\n        while(true){\\n            cout<<j<<\" \";\\n            if(j>=tokens.size())break;\\n            string i=tokens[j];\\n            if(i>=\"0\" and i<=\"9\"){\\n                st.push(stoi(i));\\n            }\\n            else{\\n                long long ans=0;\\n                int a=st.top(); \\n                st.pop(); \\n                int b=st.top(); \\n                st.pop();\\n                if(i==\"+\")ans=b+a;\\n                else if(i==\"-\")ans=b-a;\\n                else if(i==\"*\")ans=b*a;\\n                else if(i==\"/\")ans=b/a;\\n                st.push(ans);\\n            }\\n            j++;\\n        }\\n        int d=(int)st.top();\\n        return d;\\n    }\\n};\\n\\n\\n\\n\\n"
                    },
                    {
                        "username": "abhi098",
                        "content": "why am i getting this error \\n\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16"
                    }
                ]
            },
            {
                "id": 1747904,
                "content": [
                    {
                        "username": "yeezy_szn",
                        "content": "The wikipedia article linked in the description contains solution spoilers. I'd recommend LC change the description to include this blurb from the editorial below that describes Reverse Polish Notation, so that people unfamiliar with it can read the description without going to the Wikipedia page that contains hints on how to write a program to evaluate RPN.\n\n`\nWhile there are operators remaining in the list, find the left-most operator. Apply it to the 2 numbers immediately before it, and replace all 3 tokens (the operator and 2 numbers) with the result.\n`"
                    },
                    {
                        "username": "yogesh713",
                        "content": "[\"4\",\"13\",\"5\",\"/\",\"+\",\"10\",\"*\"] -> Valid TestCase\\nChanging Last Two Strings\\n[\"4\",\"13\",\"5\",\"/\",\"+\",\"10\",\"*\"] -> Why this is an InValid TestCase"
                    },
                    {
                        "username": "nonethewiser",
                        "content": "Hint: \"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "rosenjd4",
                        "content": "`The division between two integers always truncates toward zero.\n`\nThrew me off, luckily JS has `Math.trunc` functionality that works well with this problem.\n\nHalf the battle with Leetcode is just understanding the arbitrary rules"
                    },
                    {
                        "username": "xuranw2022",
                        "content": "No idea why I can\\'t pass case 3, please help!! Thanks\\n\\nclass Solution(object):\\n    def evalRPN(self, tokens):\\n        \"\"\"\\n        :type tokens: List[str]\\n        :rtype: int\\n        \"\"\"\\n        stack = []\\n        for s in tokens:\\n            if s not in \"+-*/\":\\n                stack.append(int(s))\\n            else:\\n                n2 = stack.pop()\\n                n1 = stack.pop()\\n                if s == \"+\":\\n                    stack.append(n1+n2)\\n                elif s == \"-\":\\n                    stack.append(n1-n2)\\n                elif s == \"*\":\\n                    stack.append(n1*n2)\\n                elif s == \"/\":\\n                    stack.append(int(n1/n2))\\n        return stack[0]"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "For my `JS` friends:\\n1. the **rounding up/down** for integers goes this way:\\n`value > 0 ? Math.floor(newResult) : Math.ceil(newResult);`\\naka round down for positive numbers, and round up for negative numbers.\\n2. if you have a string like \"(2 + 3)\", you can use eval to get the mathematical result i.e. `let result = eval(\"2 + 3\")` => result will eval to 5\\n\\nThis problem really wasn\\'t made to be handled with JS, JS is oh so amazing :eye_roll:  for handling numbers.. ooh well"
                    },
                    {
                        "username": "anonpq",
                        "content": "Could someone help me understand why the expected answer for [\"3\",\"11\",\"+\",\"5\",\"-\"] is 9 and not -9?\\nThe way I understood it is that it parses to (5-(11+3)), which equals -9. However the expected answer is coming out as 9, i.e. ((11+3)-5)"
                    },
                    {
                        "username": "bilik",
                        "content": "Hey [@anonpq](/anonpq)! I encountered the same issue and solved it, the thing is [\"3\",\"11\",\"+\",\"5\",\"-\"] translates to \"(3 + 11) - 5\" and not to \"5 - (3 + 11)\"\\nThat\\'s because \"num1, num2, operator\" === \"num1, operator, num2\".\\n\\nAnd with nesting:\\n\"num1, num2, operator1, num3, operator2\" ->\\nsum1 = num1, operator1, num2\\n\"sum1, num3, operator2\" ->\\n\"sum1, operator2, num3\"\\n\\nbasically -\\n14, -, 5\\n\\n\\n\\nSo going through [\"3\",\"11\",\"+\",\"5\",\"-\"] step by step:\\n\\n\"3, 11, +, 5, -\" === \"(3+11), 5, -\"\\n\"14, 5, -\" === \"(14 - 5)\"\\n9"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "abhi098",
                        "content": "why i am getting this error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0b6 for type \\'long long\\', which requires 8 byte alignment (stl_deque.h)\\n0xbebebebebebec0b6: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16\\n\\nHere is the code\\n\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long int>st;\\n        int j=0;\\n        while(true){\\n            cout<<j<<\" \";\\n            if(j>=tokens.size())break;\\n            string i=tokens[j];\\n            if(i>=\"0\" and i<=\"9\"){\\n                st.push(stoi(i));\\n            }\\n            else{\\n                long long ans=0;\\n                int a=st.top(); \\n                st.pop(); \\n                int b=st.top(); \\n                st.pop();\\n                if(i==\"+\")ans=b+a;\\n                else if(i==\"-\")ans=b-a;\\n                else if(i==\"*\")ans=b*a;\\n                else if(i==\"/\")ans=b/a;\\n                st.push(ans);\\n            }\\n            j++;\\n        }\\n        int d=(int)st.top();\\n        return d;\\n    }\\n};\\n\\n\\n\\n\\n"
                    },
                    {
                        "username": "abhi098",
                        "content": "why am i getting this error \\n\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16"
                    }
                ]
            },
            {
                "id": 1747875,
                "content": [
                    {
                        "username": "yeezy_szn",
                        "content": "The wikipedia article linked in the description contains solution spoilers. I'd recommend LC change the description to include this blurb from the editorial below that describes Reverse Polish Notation, so that people unfamiliar with it can read the description without going to the Wikipedia page that contains hints on how to write a program to evaluate RPN.\n\n`\nWhile there are operators remaining in the list, find the left-most operator. Apply it to the 2 numbers immediately before it, and replace all 3 tokens (the operator and 2 numbers) with the result.\n`"
                    },
                    {
                        "username": "yogesh713",
                        "content": "[\"4\",\"13\",\"5\",\"/\",\"+\",\"10\",\"*\"] -> Valid TestCase\\nChanging Last Two Strings\\n[\"4\",\"13\",\"5\",\"/\",\"+\",\"10\",\"*\"] -> Why this is an InValid TestCase"
                    },
                    {
                        "username": "nonethewiser",
                        "content": "Hint: \"Trending towards 0\" != rounding down"
                    },
                    {
                        "username": "rosenjd4",
                        "content": "`The division between two integers always truncates toward zero.\n`\nThrew me off, luckily JS has `Math.trunc` functionality that works well with this problem.\n\nHalf the battle with Leetcode is just understanding the arbitrary rules"
                    },
                    {
                        "username": "xuranw2022",
                        "content": "No idea why I can\\'t pass case 3, please help!! Thanks\\n\\nclass Solution(object):\\n    def evalRPN(self, tokens):\\n        \"\"\"\\n        :type tokens: List[str]\\n        :rtype: int\\n        \"\"\"\\n        stack = []\\n        for s in tokens:\\n            if s not in \"+-*/\":\\n                stack.append(int(s))\\n            else:\\n                n2 = stack.pop()\\n                n1 = stack.pop()\\n                if s == \"+\":\\n                    stack.append(n1+n2)\\n                elif s == \"-\":\\n                    stack.append(n1-n2)\\n                elif s == \"*\":\\n                    stack.append(n1*n2)\\n                elif s == \"/\":\\n                    stack.append(int(n1/n2))\\n        return stack[0]"
                    },
                    {
                        "username": "sandagolcea",
                        "content": "For my `JS` friends:\\n1. the **rounding up/down** for integers goes this way:\\n`value > 0 ? Math.floor(newResult) : Math.ceil(newResult);`\\naka round down for positive numbers, and round up for negative numbers.\\n2. if you have a string like \"(2 + 3)\", you can use eval to get the mathematical result i.e. `let result = eval(\"2 + 3\")` => result will eval to 5\\n\\nThis problem really wasn\\'t made to be handled with JS, JS is oh so amazing :eye_roll:  for handling numbers.. ooh well"
                    },
                    {
                        "username": "anonpq",
                        "content": "Could someone help me understand why the expected answer for [\"3\",\"11\",\"+\",\"5\",\"-\"] is 9 and not -9?\\nThe way I understood it is that it parses to (5-(11+3)), which equals -9. However the expected answer is coming out as 9, i.e. ((11+3)-5)"
                    },
                    {
                        "username": "bilik",
                        "content": "Hey [@anonpq](/anonpq)! I encountered the same issue and solved it, the thing is [\"3\",\"11\",\"+\",\"5\",\"-\"] translates to \"(3 + 11) - 5\" and not to \"5 - (3 + 11)\"\\nThat\\'s because \"num1, num2, operator\" === \"num1, operator, num2\".\\n\\nAnd with nesting:\\n\"num1, num2, operator1, num3, operator2\" ->\\nsum1 = num1, operator1, num2\\n\"sum1, num3, operator2\" ->\\n\"sum1, operator2, num3\"\\n\\nbasically -\\n14, -, 5\\n\\n\\n\\nSo going through [\"3\",\"11\",\"+\",\"5\",\"-\"] step by step:\\n\\n\"3, 11, +, 5, -\" === \"(3+11), 5, -\"\\n\"14, 5, -\" === \"(14 - 5)\"\\n9"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "abhi098",
                        "content": "why i am getting this error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0b6 for type \\'long long\\', which requires 8 byte alignment (stl_deque.h)\\n0xbebebebebebec0b6: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16\\n\\nHere is the code\\n\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long int>st;\\n        int j=0;\\n        while(true){\\n            cout<<j<<\" \";\\n            if(j>=tokens.size())break;\\n            string i=tokens[j];\\n            if(i>=\"0\" and i<=\"9\"){\\n                st.push(stoi(i));\\n            }\\n            else{\\n                long long ans=0;\\n                int a=st.top(); \\n                st.pop(); \\n                int b=st.top(); \\n                st.pop();\\n                if(i==\"+\")ans=b+a;\\n                else if(i==\"-\")ans=b-a;\\n                else if(i==\"*\")ans=b*a;\\n                else if(i==\"/\")ans=b/a;\\n                st.push(ans);\\n            }\\n            j++;\\n        }\\n        int d=(int)st.top();\\n        return d;\\n    }\\n};\\n\\n\\n\\n\\n"
                    },
                    {
                        "username": "abhi098",
                        "content": "why am i getting this error \\n\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16"
                    }
                ]
            },
            {
                "id": 1745906,
                "content": [
                    {
                        "username": "discodoggy12345",
                        "content": "Hey!\n\nSo I was able to complete this problem successfully but along the way I ran into a strange error I cannot explain. For context, I am using C++.\n\nWith this line of code, I have no errors \n``` for (int i = 0; i < tokens.size(); i++) {\n\n            temp_token = tokens[i];\n\n            if(temp_token.size() > 1 || isdigit(temp_token[0])) {\n                number = stoi(tokens.at(i));\n                operands.push(number);\n            }\n```\n\nbut when I take away the ```temp_token.size() > 1``` in the if statement, I get this error:\n\n```Line 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type 'int', which requires 4 byte alignment (stl_deque.h)\n0xbebebebebebec0ba: note: pointer points here\n<memory cannot be printed>\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16\n```\n\nI was not able to identify the cause of this error but if anybody has an explanation I would very much like to hear it.\n\nThank you!\n\n"
                    },
                    {
                        "username": "harsh_k112002",
                        "content": "*************************** SIMPLE AND EASY WAY TO UNDERSTAND AND SOLVE **********************\\n\\nThe question is really simple, all you have to do traverse through the vector and push the operand in a stack, do until you get a operator , when you get a operator d a calculation of that operator by poping two elements out of the stack and do perform a formula ( operator_ans = element in top of stack, then pop it, then apply the operator(+,-,* ,/) then again for second element take element in top of stack, then pop it.), Now you have to push the ans you got into the stack ,do until the stack is empty.\\n\\nAt the end the element in top of stack is your answer.\\n\\nDo upvote if you like my method :)\\nHAPPY CODING"
                    },
                    {
                        "username": "a12baghel2",
                        "content": "```C++\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long> st;\\n        for(auto i:tokens){\\n            if(i == \"*\" || i ==  \"/\" || i == \"-\" || i == \"+\"){\\n                long val1 = st.top();\\n                st.pop();\\n                long val2 = st.top();\\n                st.pop();\\n                if(i == \"+\"){\\n                    st.push(val1+val2);\\n                }else if(i == \"-\"){\\n                    st.push(val1-val2);\\n                }else if(i == \"*\"){\\n                    st.push(val1*val2);\\n                }else{\\n                    st.push(val1/val2);\\n                }\\n            }else{\\n                int num = stoi(i);\\n                st.push(num);\\n            }\\n        }\\n        return st.top();\\n    }\\n};\\n```\\n## Why leetcode is giving WA on correct solution ? Anyone can explain me why this is happening?"
                    },
                    {
                        "username": "ag10022101",
                        "content": "just set val1 to val2 and vice versa  and you are good to go."
                    },
                    {
                        "username": "DavalC",
                        "content": "The space complexity of the evaluateRPN function is O(n), where n is the number of tokens in the input list. This is because the function uses a stack to store the operands, which has a maximum size of n.\\n\\nThe time complexity of the evaluateRPN function is also O(n), because the function performs a constant number of operations on each token in the input list.\\n\\nTherefore, the overall complexity of the evaluateRPN function is O(n). This means that the function\\'s performance will be linear in the size of the input."
                    },
                    {
                        "username": "ravi-k-8179",
                        "content": "I am getting the signed integer overflow in the below code at line 27 stk.push(a* b) any help !!!\\n\\n\\n\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& t) {\\n        set<string> s;\\n        s.insert(\"+\");\\n        s.insert(\"-\");\\n        s.insert(\"*\");\\n        s.insert(\"/\");\\n        stack<int> stk;\\n        int n = t.size();\\n        for(int i=0;i<n;i++){\\n            if(s.count(t[i])==0){\\n                stk.push(stoi(t[i]));\\n            }else{\\n                int b = stk.top();\\n                stk.pop();\\n                int a = stk.top();\\n                stk.pop();\\n                // int res = 0;\\n                if(t[i]==\"+\"){\\n                    stk.push(a+b);\\n                }\\n                else if(t[i]==\"-\"){\\n                    stk.push(a-b);\\n                }\\n                else if(t[i]==\"*\"){\\n                    stk.push(a*b);\\n                }\\n                else if(t[i]==\"/\"){\\n                    stk.push(a/b);\\n                }\\n                // stk.push(res);\\n            }\\n        }\\n        return stk.top();\\n    }\\n};\\n"
                    },
                    {
                        "username": "user5120tq",
                        "content": "class Solution {\\npublic:\\n    long long applymath(string a,long long b,long long c)\\n    {\\n        long long l=0;\\n        if(a==\"+\") \\n        l=c+b;\\n        else if(a==\"*\")\\n        l=c*b;\\n        else if(a==\"-\")\\n        l=c-b;\\n        else if(a==\"/\")\\n        {\\n            if(c!=0)\\n            {\\n                l=c/b;\\n            }\\n           \\n        }\\n        return l;\\n    }\\n     bool fun(string q)\\n     {\\n     if(q==\"+\" || q==\"-\" || q==\"*\" || q==\"/\")\\n     return true;\\n     else \\n     return false;\\n     }\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long> st;\\n        for(int i=0;i<tokens.size();i++)\\n        {\\n            if(fun(tokens[i])==true)\\n            {\\n             long long x=st.top();\\n             st.pop();\\n             long long  y=st.top();\\n             st.pop();\\n             long long z=applymath(tokens[i],x,y);\\n             st.push(z);\\n\\n            }\\n            else \\n            {\\n                long long k=stoi(tokens[i]);\\n                st.push(k);\\n            }\\n\\n        }\\n        return st.top();\\n    }\\n};"
                    },
                    {
                        "username": "hkaur_3",
                        "content": "JAVA CODE\\n```class Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> st= new Stack();\\n        for(String t:tokens){\\n            if(\"+-*/\".contains(t))\\n                st.push(eval(st.pop(), st.pop(), t));\\n            else\\n                st.push(Integer.parseInt(t));    \\n        }\\n        return st.pop();\\n    }\\n    private int eval(int b, int a, String op){\\n        if(\"+\".equals(op))\\n            return a+b;\\n        else if(\"-\".equals(op))  \\n            return a-b;\\n        else if(\"*\".equals(op))\\n            return a*b;\\n        else\\n            return a/b;          \\n    }\\n}```"
                    },
                    {
                        "username": "__adityaraj___",
                        "content": "class Solution {\\n    public int evalRPN(String[] tokens) {\\n        if (tokens == null || tokens.length == 0) return 0;\\n\\n        Stack<Long> stack = new Stack<>();\\n        for (String s : tokens) {\\n            if (!isOperator(s)) stack.push(Long.parseLong(s));\\n            else {\\n                long numB = stack.pop(), numA = stack.pop();\\n                stack.push(eval(numA, numB, s));                \\n            }\\n        }\\n        return stack.pop().intValue();\\n    }\\n    \\n    private boolean isOperator(String s) {\\n        if (s.length() != 1) return false;\\n        char c = s.charAt(0);\\n        return c == \\'+\\' || c == \\'-\\' || c == \\'/\\' || c == \\'*\\';\\n    }\\n    \\n    private long eval(long a, long b, String s) {\\n        long rst = 0;\\n        char operator = s.charAt(0);\\n        if (operator == \\'+\\') rst = a + b;\\n        if (operator == \\'-\\') rst = a - b;\\n        if (operator == \\'*\\') rst = a * b;\\n        if (operator == \\'/\\') rst = a / b;\\n    \\treturn rst;\\n    }\\n}"
                    },
                    {
                        "username": "anantnipunge",
                        "content": "what's wrong with this code?? at operand\n\n\n `Stack<Integer> st = new Stack<>();\n\n        for(String el : tokens){\n            if(el == \"+\" || el == \"-\" || el == \"*\" || el == \"/\"){\n                //find operand\n                int op1 = st.peek(); st.pop(); // top element\n                int op2 = st.peek(); st.pop(); // top element and find op1 and op2\n\n                if(el == \"+\") st.add(op1 + op2);\n                if(el == \"-\") st.add(op1 - op2);\n                if(el == \"*\") st.add(op1 * op2);\n                if(el == \"/\") st.add(op1 / op2);\n            }\n            else{\n                // operand\n                st.add(Integer.parseInt(el));\n            }\n        }\n\n        return st.peek();// return top element;`"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "1st pop should be op2 and 2nd pop should be op1 as we\\'re going left to right"
                    },
                    {
                        "username": "chengweiwei",
                        "content": "I understand that stack is the easiest and the cleanest way to do it, but could anyone tell me why the following code fails the tests? (It fails one long test case.) The logic is essentially the same. \n\n\n```\n    while len(tokens) != 1:\n        for i in range(len(tokens) - 2):\n            if tokens[i + 2] in \"*/+-\":\n                if tokens[i + 2] == '+':\n                    tokens[i] = str(int(tokens[i]) + int(tokens[i + 1]))\n                elif tokens[i + 2] == '-':\n                    tokens[i] = str(int(tokens[i]) - int(tokens[i + 1]))\n                elif tokens[i + 2] == '*':\n                    tokens[i] = str(int(tokens[i]) * int(tokens[i + 1]))\n                else:\n                    tokens[i] = str(int(int(tokens[i]) / int(tokens[i + 1])))\n                tokens.remove(tokens[i + 2])\n                tokens.remove(tokens[i + 1])\n                break\n    return int(tokens[0])\n```\n"
                    }
                ]
            },
            {
                "id": 1737230,
                "content": [
                    {
                        "username": "discodoggy12345",
                        "content": "Hey!\n\nSo I was able to complete this problem successfully but along the way I ran into a strange error I cannot explain. For context, I am using C++.\n\nWith this line of code, I have no errors \n``` for (int i = 0; i < tokens.size(); i++) {\n\n            temp_token = tokens[i];\n\n            if(temp_token.size() > 1 || isdigit(temp_token[0])) {\n                number = stoi(tokens.at(i));\n                operands.push(number);\n            }\n```\n\nbut when I take away the ```temp_token.size() > 1``` in the if statement, I get this error:\n\n```Line 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type 'int', which requires 4 byte alignment (stl_deque.h)\n0xbebebebebebec0ba: note: pointer points here\n<memory cannot be printed>\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16\n```\n\nI was not able to identify the cause of this error but if anybody has an explanation I would very much like to hear it.\n\nThank you!\n\n"
                    },
                    {
                        "username": "harsh_k112002",
                        "content": "*************************** SIMPLE AND EASY WAY TO UNDERSTAND AND SOLVE **********************\\n\\nThe question is really simple, all you have to do traverse through the vector and push the operand in a stack, do until you get a operator , when you get a operator d a calculation of that operator by poping two elements out of the stack and do perform a formula ( operator_ans = element in top of stack, then pop it, then apply the operator(+,-,* ,/) then again for second element take element in top of stack, then pop it.), Now you have to push the ans you got into the stack ,do until the stack is empty.\\n\\nAt the end the element in top of stack is your answer.\\n\\nDo upvote if you like my method :)\\nHAPPY CODING"
                    },
                    {
                        "username": "a12baghel2",
                        "content": "```C++\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long> st;\\n        for(auto i:tokens){\\n            if(i == \"*\" || i ==  \"/\" || i == \"-\" || i == \"+\"){\\n                long val1 = st.top();\\n                st.pop();\\n                long val2 = st.top();\\n                st.pop();\\n                if(i == \"+\"){\\n                    st.push(val1+val2);\\n                }else if(i == \"-\"){\\n                    st.push(val1-val2);\\n                }else if(i == \"*\"){\\n                    st.push(val1*val2);\\n                }else{\\n                    st.push(val1/val2);\\n                }\\n            }else{\\n                int num = stoi(i);\\n                st.push(num);\\n            }\\n        }\\n        return st.top();\\n    }\\n};\\n```\\n## Why leetcode is giving WA on correct solution ? Anyone can explain me why this is happening?"
                    },
                    {
                        "username": "ag10022101",
                        "content": "just set val1 to val2 and vice versa  and you are good to go."
                    },
                    {
                        "username": "DavalC",
                        "content": "The space complexity of the evaluateRPN function is O(n), where n is the number of tokens in the input list. This is because the function uses a stack to store the operands, which has a maximum size of n.\\n\\nThe time complexity of the evaluateRPN function is also O(n), because the function performs a constant number of operations on each token in the input list.\\n\\nTherefore, the overall complexity of the evaluateRPN function is O(n). This means that the function\\'s performance will be linear in the size of the input."
                    },
                    {
                        "username": "ravi-k-8179",
                        "content": "I am getting the signed integer overflow in the below code at line 27 stk.push(a* b) any help !!!\\n\\n\\n\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& t) {\\n        set<string> s;\\n        s.insert(\"+\");\\n        s.insert(\"-\");\\n        s.insert(\"*\");\\n        s.insert(\"/\");\\n        stack<int> stk;\\n        int n = t.size();\\n        for(int i=0;i<n;i++){\\n            if(s.count(t[i])==0){\\n                stk.push(stoi(t[i]));\\n            }else{\\n                int b = stk.top();\\n                stk.pop();\\n                int a = stk.top();\\n                stk.pop();\\n                // int res = 0;\\n                if(t[i]==\"+\"){\\n                    stk.push(a+b);\\n                }\\n                else if(t[i]==\"-\"){\\n                    stk.push(a-b);\\n                }\\n                else if(t[i]==\"*\"){\\n                    stk.push(a*b);\\n                }\\n                else if(t[i]==\"/\"){\\n                    stk.push(a/b);\\n                }\\n                // stk.push(res);\\n            }\\n        }\\n        return stk.top();\\n    }\\n};\\n"
                    },
                    {
                        "username": "user5120tq",
                        "content": "class Solution {\\npublic:\\n    long long applymath(string a,long long b,long long c)\\n    {\\n        long long l=0;\\n        if(a==\"+\") \\n        l=c+b;\\n        else if(a==\"*\")\\n        l=c*b;\\n        else if(a==\"-\")\\n        l=c-b;\\n        else if(a==\"/\")\\n        {\\n            if(c!=0)\\n            {\\n                l=c/b;\\n            }\\n           \\n        }\\n        return l;\\n    }\\n     bool fun(string q)\\n     {\\n     if(q==\"+\" || q==\"-\" || q==\"*\" || q==\"/\")\\n     return true;\\n     else \\n     return false;\\n     }\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long> st;\\n        for(int i=0;i<tokens.size();i++)\\n        {\\n            if(fun(tokens[i])==true)\\n            {\\n             long long x=st.top();\\n             st.pop();\\n             long long  y=st.top();\\n             st.pop();\\n             long long z=applymath(tokens[i],x,y);\\n             st.push(z);\\n\\n            }\\n            else \\n            {\\n                long long k=stoi(tokens[i]);\\n                st.push(k);\\n            }\\n\\n        }\\n        return st.top();\\n    }\\n};"
                    },
                    {
                        "username": "hkaur_3",
                        "content": "JAVA CODE\\n```class Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> st= new Stack();\\n        for(String t:tokens){\\n            if(\"+-*/\".contains(t))\\n                st.push(eval(st.pop(), st.pop(), t));\\n            else\\n                st.push(Integer.parseInt(t));    \\n        }\\n        return st.pop();\\n    }\\n    private int eval(int b, int a, String op){\\n        if(\"+\".equals(op))\\n            return a+b;\\n        else if(\"-\".equals(op))  \\n            return a-b;\\n        else if(\"*\".equals(op))\\n            return a*b;\\n        else\\n            return a/b;          \\n    }\\n}```"
                    },
                    {
                        "username": "__adityaraj___",
                        "content": "class Solution {\\n    public int evalRPN(String[] tokens) {\\n        if (tokens == null || tokens.length == 0) return 0;\\n\\n        Stack<Long> stack = new Stack<>();\\n        for (String s : tokens) {\\n            if (!isOperator(s)) stack.push(Long.parseLong(s));\\n            else {\\n                long numB = stack.pop(), numA = stack.pop();\\n                stack.push(eval(numA, numB, s));                \\n            }\\n        }\\n        return stack.pop().intValue();\\n    }\\n    \\n    private boolean isOperator(String s) {\\n        if (s.length() != 1) return false;\\n        char c = s.charAt(0);\\n        return c == \\'+\\' || c == \\'-\\' || c == \\'/\\' || c == \\'*\\';\\n    }\\n    \\n    private long eval(long a, long b, String s) {\\n        long rst = 0;\\n        char operator = s.charAt(0);\\n        if (operator == \\'+\\') rst = a + b;\\n        if (operator == \\'-\\') rst = a - b;\\n        if (operator == \\'*\\') rst = a * b;\\n        if (operator == \\'/\\') rst = a / b;\\n    \\treturn rst;\\n    }\\n}"
                    },
                    {
                        "username": "anantnipunge",
                        "content": "what's wrong with this code?? at operand\n\n\n `Stack<Integer> st = new Stack<>();\n\n        for(String el : tokens){\n            if(el == \"+\" || el == \"-\" || el == \"*\" || el == \"/\"){\n                //find operand\n                int op1 = st.peek(); st.pop(); // top element\n                int op2 = st.peek(); st.pop(); // top element and find op1 and op2\n\n                if(el == \"+\") st.add(op1 + op2);\n                if(el == \"-\") st.add(op1 - op2);\n                if(el == \"*\") st.add(op1 * op2);\n                if(el == \"/\") st.add(op1 / op2);\n            }\n            else{\n                // operand\n                st.add(Integer.parseInt(el));\n            }\n        }\n\n        return st.peek();// return top element;`"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "1st pop should be op2 and 2nd pop should be op1 as we\\'re going left to right"
                    },
                    {
                        "username": "chengweiwei",
                        "content": "I understand that stack is the easiest and the cleanest way to do it, but could anyone tell me why the following code fails the tests? (It fails one long test case.) The logic is essentially the same. \n\n\n```\n    while len(tokens) != 1:\n        for i in range(len(tokens) - 2):\n            if tokens[i + 2] in \"*/+-\":\n                if tokens[i + 2] == '+':\n                    tokens[i] = str(int(tokens[i]) + int(tokens[i + 1]))\n                elif tokens[i + 2] == '-':\n                    tokens[i] = str(int(tokens[i]) - int(tokens[i + 1]))\n                elif tokens[i + 2] == '*':\n                    tokens[i] = str(int(tokens[i]) * int(tokens[i + 1]))\n                else:\n                    tokens[i] = str(int(int(tokens[i]) / int(tokens[i + 1])))\n                tokens.remove(tokens[i + 2])\n                tokens.remove(tokens[i + 1])\n                break\n    return int(tokens[0])\n```\n"
                    }
                ]
            },
            {
                "id": 1735534,
                "content": [
                    {
                        "username": "discodoggy12345",
                        "content": "Hey!\n\nSo I was able to complete this problem successfully but along the way I ran into a strange error I cannot explain. For context, I am using C++.\n\nWith this line of code, I have no errors \n``` for (int i = 0; i < tokens.size(); i++) {\n\n            temp_token = tokens[i];\n\n            if(temp_token.size() > 1 || isdigit(temp_token[0])) {\n                number = stoi(tokens.at(i));\n                operands.push(number);\n            }\n```\n\nbut when I take away the ```temp_token.size() > 1``` in the if statement, I get this error:\n\n```Line 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type 'int', which requires 4 byte alignment (stl_deque.h)\n0xbebebebebebec0ba: note: pointer points here\n<memory cannot be printed>\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16\n```\n\nI was not able to identify the cause of this error but if anybody has an explanation I would very much like to hear it.\n\nThank you!\n\n"
                    },
                    {
                        "username": "harsh_k112002",
                        "content": "*************************** SIMPLE AND EASY WAY TO UNDERSTAND AND SOLVE **********************\\n\\nThe question is really simple, all you have to do traverse through the vector and push the operand in a stack, do until you get a operator , when you get a operator d a calculation of that operator by poping two elements out of the stack and do perform a formula ( operator_ans = element in top of stack, then pop it, then apply the operator(+,-,* ,/) then again for second element take element in top of stack, then pop it.), Now you have to push the ans you got into the stack ,do until the stack is empty.\\n\\nAt the end the element in top of stack is your answer.\\n\\nDo upvote if you like my method :)\\nHAPPY CODING"
                    },
                    {
                        "username": "a12baghel2",
                        "content": "```C++\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long> st;\\n        for(auto i:tokens){\\n            if(i == \"*\" || i ==  \"/\" || i == \"-\" || i == \"+\"){\\n                long val1 = st.top();\\n                st.pop();\\n                long val2 = st.top();\\n                st.pop();\\n                if(i == \"+\"){\\n                    st.push(val1+val2);\\n                }else if(i == \"-\"){\\n                    st.push(val1-val2);\\n                }else if(i == \"*\"){\\n                    st.push(val1*val2);\\n                }else{\\n                    st.push(val1/val2);\\n                }\\n            }else{\\n                int num = stoi(i);\\n                st.push(num);\\n            }\\n        }\\n        return st.top();\\n    }\\n};\\n```\\n## Why leetcode is giving WA on correct solution ? Anyone can explain me why this is happening?"
                    },
                    {
                        "username": "ag10022101",
                        "content": "just set val1 to val2 and vice versa  and you are good to go."
                    },
                    {
                        "username": "DavalC",
                        "content": "The space complexity of the evaluateRPN function is O(n), where n is the number of tokens in the input list. This is because the function uses a stack to store the operands, which has a maximum size of n.\\n\\nThe time complexity of the evaluateRPN function is also O(n), because the function performs a constant number of operations on each token in the input list.\\n\\nTherefore, the overall complexity of the evaluateRPN function is O(n). This means that the function\\'s performance will be linear in the size of the input."
                    },
                    {
                        "username": "ravi-k-8179",
                        "content": "I am getting the signed integer overflow in the below code at line 27 stk.push(a* b) any help !!!\\n\\n\\n\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& t) {\\n        set<string> s;\\n        s.insert(\"+\");\\n        s.insert(\"-\");\\n        s.insert(\"*\");\\n        s.insert(\"/\");\\n        stack<int> stk;\\n        int n = t.size();\\n        for(int i=0;i<n;i++){\\n            if(s.count(t[i])==0){\\n                stk.push(stoi(t[i]));\\n            }else{\\n                int b = stk.top();\\n                stk.pop();\\n                int a = stk.top();\\n                stk.pop();\\n                // int res = 0;\\n                if(t[i]==\"+\"){\\n                    stk.push(a+b);\\n                }\\n                else if(t[i]==\"-\"){\\n                    stk.push(a-b);\\n                }\\n                else if(t[i]==\"*\"){\\n                    stk.push(a*b);\\n                }\\n                else if(t[i]==\"/\"){\\n                    stk.push(a/b);\\n                }\\n                // stk.push(res);\\n            }\\n        }\\n        return stk.top();\\n    }\\n};\\n"
                    },
                    {
                        "username": "user5120tq",
                        "content": "class Solution {\\npublic:\\n    long long applymath(string a,long long b,long long c)\\n    {\\n        long long l=0;\\n        if(a==\"+\") \\n        l=c+b;\\n        else if(a==\"*\")\\n        l=c*b;\\n        else if(a==\"-\")\\n        l=c-b;\\n        else if(a==\"/\")\\n        {\\n            if(c!=0)\\n            {\\n                l=c/b;\\n            }\\n           \\n        }\\n        return l;\\n    }\\n     bool fun(string q)\\n     {\\n     if(q==\"+\" || q==\"-\" || q==\"*\" || q==\"/\")\\n     return true;\\n     else \\n     return false;\\n     }\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long> st;\\n        for(int i=0;i<tokens.size();i++)\\n        {\\n            if(fun(tokens[i])==true)\\n            {\\n             long long x=st.top();\\n             st.pop();\\n             long long  y=st.top();\\n             st.pop();\\n             long long z=applymath(tokens[i],x,y);\\n             st.push(z);\\n\\n            }\\n            else \\n            {\\n                long long k=stoi(tokens[i]);\\n                st.push(k);\\n            }\\n\\n        }\\n        return st.top();\\n    }\\n};"
                    },
                    {
                        "username": "hkaur_3",
                        "content": "JAVA CODE\\n```class Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> st= new Stack();\\n        for(String t:tokens){\\n            if(\"+-*/\".contains(t))\\n                st.push(eval(st.pop(), st.pop(), t));\\n            else\\n                st.push(Integer.parseInt(t));    \\n        }\\n        return st.pop();\\n    }\\n    private int eval(int b, int a, String op){\\n        if(\"+\".equals(op))\\n            return a+b;\\n        else if(\"-\".equals(op))  \\n            return a-b;\\n        else if(\"*\".equals(op))\\n            return a*b;\\n        else\\n            return a/b;          \\n    }\\n}```"
                    },
                    {
                        "username": "__adityaraj___",
                        "content": "class Solution {\\n    public int evalRPN(String[] tokens) {\\n        if (tokens == null || tokens.length == 0) return 0;\\n\\n        Stack<Long> stack = new Stack<>();\\n        for (String s : tokens) {\\n            if (!isOperator(s)) stack.push(Long.parseLong(s));\\n            else {\\n                long numB = stack.pop(), numA = stack.pop();\\n                stack.push(eval(numA, numB, s));                \\n            }\\n        }\\n        return stack.pop().intValue();\\n    }\\n    \\n    private boolean isOperator(String s) {\\n        if (s.length() != 1) return false;\\n        char c = s.charAt(0);\\n        return c == \\'+\\' || c == \\'-\\' || c == \\'/\\' || c == \\'*\\';\\n    }\\n    \\n    private long eval(long a, long b, String s) {\\n        long rst = 0;\\n        char operator = s.charAt(0);\\n        if (operator == \\'+\\') rst = a + b;\\n        if (operator == \\'-\\') rst = a - b;\\n        if (operator == \\'*\\') rst = a * b;\\n        if (operator == \\'/\\') rst = a / b;\\n    \\treturn rst;\\n    }\\n}"
                    },
                    {
                        "username": "anantnipunge",
                        "content": "what's wrong with this code?? at operand\n\n\n `Stack<Integer> st = new Stack<>();\n\n        for(String el : tokens){\n            if(el == \"+\" || el == \"-\" || el == \"*\" || el == \"/\"){\n                //find operand\n                int op1 = st.peek(); st.pop(); // top element\n                int op2 = st.peek(); st.pop(); // top element and find op1 and op2\n\n                if(el == \"+\") st.add(op1 + op2);\n                if(el == \"-\") st.add(op1 - op2);\n                if(el == \"*\") st.add(op1 * op2);\n                if(el == \"/\") st.add(op1 / op2);\n            }\n            else{\n                // operand\n                st.add(Integer.parseInt(el));\n            }\n        }\n\n        return st.peek();// return top element;`"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "1st pop should be op2 and 2nd pop should be op1 as we\\'re going left to right"
                    },
                    {
                        "username": "chengweiwei",
                        "content": "I understand that stack is the easiest and the cleanest way to do it, but could anyone tell me why the following code fails the tests? (It fails one long test case.) The logic is essentially the same. \n\n\n```\n    while len(tokens) != 1:\n        for i in range(len(tokens) - 2):\n            if tokens[i + 2] in \"*/+-\":\n                if tokens[i + 2] == '+':\n                    tokens[i] = str(int(tokens[i]) + int(tokens[i + 1]))\n                elif tokens[i + 2] == '-':\n                    tokens[i] = str(int(tokens[i]) - int(tokens[i + 1]))\n                elif tokens[i + 2] == '*':\n                    tokens[i] = str(int(tokens[i]) * int(tokens[i + 1]))\n                else:\n                    tokens[i] = str(int(int(tokens[i]) / int(tokens[i + 1])))\n                tokens.remove(tokens[i + 2])\n                tokens.remove(tokens[i + 1])\n                break\n    return int(tokens[0])\n```\n"
                    }
                ]
            },
            {
                "id": 1734734,
                "content": [
                    {
                        "username": "discodoggy12345",
                        "content": "Hey!\n\nSo I was able to complete this problem successfully but along the way I ran into a strange error I cannot explain. For context, I am using C++.\n\nWith this line of code, I have no errors \n``` for (int i = 0; i < tokens.size(); i++) {\n\n            temp_token = tokens[i];\n\n            if(temp_token.size() > 1 || isdigit(temp_token[0])) {\n                number = stoi(tokens.at(i));\n                operands.push(number);\n            }\n```\n\nbut when I take away the ```temp_token.size() > 1``` in the if statement, I get this error:\n\n```Line 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type 'int', which requires 4 byte alignment (stl_deque.h)\n0xbebebebebebec0ba: note: pointer points here\n<memory cannot be printed>\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16\n```\n\nI was not able to identify the cause of this error but if anybody has an explanation I would very much like to hear it.\n\nThank you!\n\n"
                    },
                    {
                        "username": "harsh_k112002",
                        "content": "*************************** SIMPLE AND EASY WAY TO UNDERSTAND AND SOLVE **********************\\n\\nThe question is really simple, all you have to do traverse through the vector and push the operand in a stack, do until you get a operator , when you get a operator d a calculation of that operator by poping two elements out of the stack and do perform a formula ( operator_ans = element in top of stack, then pop it, then apply the operator(+,-,* ,/) then again for second element take element in top of stack, then pop it.), Now you have to push the ans you got into the stack ,do until the stack is empty.\\n\\nAt the end the element in top of stack is your answer.\\n\\nDo upvote if you like my method :)\\nHAPPY CODING"
                    },
                    {
                        "username": "a12baghel2",
                        "content": "```C++\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long> st;\\n        for(auto i:tokens){\\n            if(i == \"*\" || i ==  \"/\" || i == \"-\" || i == \"+\"){\\n                long val1 = st.top();\\n                st.pop();\\n                long val2 = st.top();\\n                st.pop();\\n                if(i == \"+\"){\\n                    st.push(val1+val2);\\n                }else if(i == \"-\"){\\n                    st.push(val1-val2);\\n                }else if(i == \"*\"){\\n                    st.push(val1*val2);\\n                }else{\\n                    st.push(val1/val2);\\n                }\\n            }else{\\n                int num = stoi(i);\\n                st.push(num);\\n            }\\n        }\\n        return st.top();\\n    }\\n};\\n```\\n## Why leetcode is giving WA on correct solution ? Anyone can explain me why this is happening?"
                    },
                    {
                        "username": "ag10022101",
                        "content": "just set val1 to val2 and vice versa  and you are good to go."
                    },
                    {
                        "username": "DavalC",
                        "content": "The space complexity of the evaluateRPN function is O(n), where n is the number of tokens in the input list. This is because the function uses a stack to store the operands, which has a maximum size of n.\\n\\nThe time complexity of the evaluateRPN function is also O(n), because the function performs a constant number of operations on each token in the input list.\\n\\nTherefore, the overall complexity of the evaluateRPN function is O(n). This means that the function\\'s performance will be linear in the size of the input."
                    },
                    {
                        "username": "ravi-k-8179",
                        "content": "I am getting the signed integer overflow in the below code at line 27 stk.push(a* b) any help !!!\\n\\n\\n\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& t) {\\n        set<string> s;\\n        s.insert(\"+\");\\n        s.insert(\"-\");\\n        s.insert(\"*\");\\n        s.insert(\"/\");\\n        stack<int> stk;\\n        int n = t.size();\\n        for(int i=0;i<n;i++){\\n            if(s.count(t[i])==0){\\n                stk.push(stoi(t[i]));\\n            }else{\\n                int b = stk.top();\\n                stk.pop();\\n                int a = stk.top();\\n                stk.pop();\\n                // int res = 0;\\n                if(t[i]==\"+\"){\\n                    stk.push(a+b);\\n                }\\n                else if(t[i]==\"-\"){\\n                    stk.push(a-b);\\n                }\\n                else if(t[i]==\"*\"){\\n                    stk.push(a*b);\\n                }\\n                else if(t[i]==\"/\"){\\n                    stk.push(a/b);\\n                }\\n                // stk.push(res);\\n            }\\n        }\\n        return stk.top();\\n    }\\n};\\n"
                    },
                    {
                        "username": "user5120tq",
                        "content": "class Solution {\\npublic:\\n    long long applymath(string a,long long b,long long c)\\n    {\\n        long long l=0;\\n        if(a==\"+\") \\n        l=c+b;\\n        else if(a==\"*\")\\n        l=c*b;\\n        else if(a==\"-\")\\n        l=c-b;\\n        else if(a==\"/\")\\n        {\\n            if(c!=0)\\n            {\\n                l=c/b;\\n            }\\n           \\n        }\\n        return l;\\n    }\\n     bool fun(string q)\\n     {\\n     if(q==\"+\" || q==\"-\" || q==\"*\" || q==\"/\")\\n     return true;\\n     else \\n     return false;\\n     }\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long> st;\\n        for(int i=0;i<tokens.size();i++)\\n        {\\n            if(fun(tokens[i])==true)\\n            {\\n             long long x=st.top();\\n             st.pop();\\n             long long  y=st.top();\\n             st.pop();\\n             long long z=applymath(tokens[i],x,y);\\n             st.push(z);\\n\\n            }\\n            else \\n            {\\n                long long k=stoi(tokens[i]);\\n                st.push(k);\\n            }\\n\\n        }\\n        return st.top();\\n    }\\n};"
                    },
                    {
                        "username": "hkaur_3",
                        "content": "JAVA CODE\\n```class Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> st= new Stack();\\n        for(String t:tokens){\\n            if(\"+-*/\".contains(t))\\n                st.push(eval(st.pop(), st.pop(), t));\\n            else\\n                st.push(Integer.parseInt(t));    \\n        }\\n        return st.pop();\\n    }\\n    private int eval(int b, int a, String op){\\n        if(\"+\".equals(op))\\n            return a+b;\\n        else if(\"-\".equals(op))  \\n            return a-b;\\n        else if(\"*\".equals(op))\\n            return a*b;\\n        else\\n            return a/b;          \\n    }\\n}```"
                    },
                    {
                        "username": "__adityaraj___",
                        "content": "class Solution {\\n    public int evalRPN(String[] tokens) {\\n        if (tokens == null || tokens.length == 0) return 0;\\n\\n        Stack<Long> stack = new Stack<>();\\n        for (String s : tokens) {\\n            if (!isOperator(s)) stack.push(Long.parseLong(s));\\n            else {\\n                long numB = stack.pop(), numA = stack.pop();\\n                stack.push(eval(numA, numB, s));                \\n            }\\n        }\\n        return stack.pop().intValue();\\n    }\\n    \\n    private boolean isOperator(String s) {\\n        if (s.length() != 1) return false;\\n        char c = s.charAt(0);\\n        return c == \\'+\\' || c == \\'-\\' || c == \\'/\\' || c == \\'*\\';\\n    }\\n    \\n    private long eval(long a, long b, String s) {\\n        long rst = 0;\\n        char operator = s.charAt(0);\\n        if (operator == \\'+\\') rst = a + b;\\n        if (operator == \\'-\\') rst = a - b;\\n        if (operator == \\'*\\') rst = a * b;\\n        if (operator == \\'/\\') rst = a / b;\\n    \\treturn rst;\\n    }\\n}"
                    },
                    {
                        "username": "anantnipunge",
                        "content": "what's wrong with this code?? at operand\n\n\n `Stack<Integer> st = new Stack<>();\n\n        for(String el : tokens){\n            if(el == \"+\" || el == \"-\" || el == \"*\" || el == \"/\"){\n                //find operand\n                int op1 = st.peek(); st.pop(); // top element\n                int op2 = st.peek(); st.pop(); // top element and find op1 and op2\n\n                if(el == \"+\") st.add(op1 + op2);\n                if(el == \"-\") st.add(op1 - op2);\n                if(el == \"*\") st.add(op1 * op2);\n                if(el == \"/\") st.add(op1 / op2);\n            }\n            else{\n                // operand\n                st.add(Integer.parseInt(el));\n            }\n        }\n\n        return st.peek();// return top element;`"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "1st pop should be op2 and 2nd pop should be op1 as we\\'re going left to right"
                    },
                    {
                        "username": "chengweiwei",
                        "content": "I understand that stack is the easiest and the cleanest way to do it, but could anyone tell me why the following code fails the tests? (It fails one long test case.) The logic is essentially the same. \n\n\n```\n    while len(tokens) != 1:\n        for i in range(len(tokens) - 2):\n            if tokens[i + 2] in \"*/+-\":\n                if tokens[i + 2] == '+':\n                    tokens[i] = str(int(tokens[i]) + int(tokens[i + 1]))\n                elif tokens[i + 2] == '-':\n                    tokens[i] = str(int(tokens[i]) - int(tokens[i + 1]))\n                elif tokens[i + 2] == '*':\n                    tokens[i] = str(int(tokens[i]) * int(tokens[i + 1]))\n                else:\n                    tokens[i] = str(int(int(tokens[i]) / int(tokens[i + 1])))\n                tokens.remove(tokens[i + 2])\n                tokens.remove(tokens[i + 1])\n                break\n    return int(tokens[0])\n```\n"
                    }
                ]
            },
            {
                "id": 1720906,
                "content": [
                    {
                        "username": "discodoggy12345",
                        "content": "Hey!\n\nSo I was able to complete this problem successfully but along the way I ran into a strange error I cannot explain. For context, I am using C++.\n\nWith this line of code, I have no errors \n``` for (int i = 0; i < tokens.size(); i++) {\n\n            temp_token = tokens[i];\n\n            if(temp_token.size() > 1 || isdigit(temp_token[0])) {\n                number = stoi(tokens.at(i));\n                operands.push(number);\n            }\n```\n\nbut when I take away the ```temp_token.size() > 1``` in the if statement, I get this error:\n\n```Line 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type 'int', which requires 4 byte alignment (stl_deque.h)\n0xbebebebebebec0ba: note: pointer points here\n<memory cannot be printed>\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16\n```\n\nI was not able to identify the cause of this error but if anybody has an explanation I would very much like to hear it.\n\nThank you!\n\n"
                    },
                    {
                        "username": "harsh_k112002",
                        "content": "*************************** SIMPLE AND EASY WAY TO UNDERSTAND AND SOLVE **********************\\n\\nThe question is really simple, all you have to do traverse through the vector and push the operand in a stack, do until you get a operator , when you get a operator d a calculation of that operator by poping two elements out of the stack and do perform a formula ( operator_ans = element in top of stack, then pop it, then apply the operator(+,-,* ,/) then again for second element take element in top of stack, then pop it.), Now you have to push the ans you got into the stack ,do until the stack is empty.\\n\\nAt the end the element in top of stack is your answer.\\n\\nDo upvote if you like my method :)\\nHAPPY CODING"
                    },
                    {
                        "username": "a12baghel2",
                        "content": "```C++\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long> st;\\n        for(auto i:tokens){\\n            if(i == \"*\" || i ==  \"/\" || i == \"-\" || i == \"+\"){\\n                long val1 = st.top();\\n                st.pop();\\n                long val2 = st.top();\\n                st.pop();\\n                if(i == \"+\"){\\n                    st.push(val1+val2);\\n                }else if(i == \"-\"){\\n                    st.push(val1-val2);\\n                }else if(i == \"*\"){\\n                    st.push(val1*val2);\\n                }else{\\n                    st.push(val1/val2);\\n                }\\n            }else{\\n                int num = stoi(i);\\n                st.push(num);\\n            }\\n        }\\n        return st.top();\\n    }\\n};\\n```\\n## Why leetcode is giving WA on correct solution ? Anyone can explain me why this is happening?"
                    },
                    {
                        "username": "ag10022101",
                        "content": "just set val1 to val2 and vice versa  and you are good to go."
                    },
                    {
                        "username": "DavalC",
                        "content": "The space complexity of the evaluateRPN function is O(n), where n is the number of tokens in the input list. This is because the function uses a stack to store the operands, which has a maximum size of n.\\n\\nThe time complexity of the evaluateRPN function is also O(n), because the function performs a constant number of operations on each token in the input list.\\n\\nTherefore, the overall complexity of the evaluateRPN function is O(n). This means that the function\\'s performance will be linear in the size of the input."
                    },
                    {
                        "username": "ravi-k-8179",
                        "content": "I am getting the signed integer overflow in the below code at line 27 stk.push(a* b) any help !!!\\n\\n\\n\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& t) {\\n        set<string> s;\\n        s.insert(\"+\");\\n        s.insert(\"-\");\\n        s.insert(\"*\");\\n        s.insert(\"/\");\\n        stack<int> stk;\\n        int n = t.size();\\n        for(int i=0;i<n;i++){\\n            if(s.count(t[i])==0){\\n                stk.push(stoi(t[i]));\\n            }else{\\n                int b = stk.top();\\n                stk.pop();\\n                int a = stk.top();\\n                stk.pop();\\n                // int res = 0;\\n                if(t[i]==\"+\"){\\n                    stk.push(a+b);\\n                }\\n                else if(t[i]==\"-\"){\\n                    stk.push(a-b);\\n                }\\n                else if(t[i]==\"*\"){\\n                    stk.push(a*b);\\n                }\\n                else if(t[i]==\"/\"){\\n                    stk.push(a/b);\\n                }\\n                // stk.push(res);\\n            }\\n        }\\n        return stk.top();\\n    }\\n};\\n"
                    },
                    {
                        "username": "user5120tq",
                        "content": "class Solution {\\npublic:\\n    long long applymath(string a,long long b,long long c)\\n    {\\n        long long l=0;\\n        if(a==\"+\") \\n        l=c+b;\\n        else if(a==\"*\")\\n        l=c*b;\\n        else if(a==\"-\")\\n        l=c-b;\\n        else if(a==\"/\")\\n        {\\n            if(c!=0)\\n            {\\n                l=c/b;\\n            }\\n           \\n        }\\n        return l;\\n    }\\n     bool fun(string q)\\n     {\\n     if(q==\"+\" || q==\"-\" || q==\"*\" || q==\"/\")\\n     return true;\\n     else \\n     return false;\\n     }\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long> st;\\n        for(int i=0;i<tokens.size();i++)\\n        {\\n            if(fun(tokens[i])==true)\\n            {\\n             long long x=st.top();\\n             st.pop();\\n             long long  y=st.top();\\n             st.pop();\\n             long long z=applymath(tokens[i],x,y);\\n             st.push(z);\\n\\n            }\\n            else \\n            {\\n                long long k=stoi(tokens[i]);\\n                st.push(k);\\n            }\\n\\n        }\\n        return st.top();\\n    }\\n};"
                    },
                    {
                        "username": "hkaur_3",
                        "content": "JAVA CODE\\n```class Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> st= new Stack();\\n        for(String t:tokens){\\n            if(\"+-*/\".contains(t))\\n                st.push(eval(st.pop(), st.pop(), t));\\n            else\\n                st.push(Integer.parseInt(t));    \\n        }\\n        return st.pop();\\n    }\\n    private int eval(int b, int a, String op){\\n        if(\"+\".equals(op))\\n            return a+b;\\n        else if(\"-\".equals(op))  \\n            return a-b;\\n        else if(\"*\".equals(op))\\n            return a*b;\\n        else\\n            return a/b;          \\n    }\\n}```"
                    },
                    {
                        "username": "__adityaraj___",
                        "content": "class Solution {\\n    public int evalRPN(String[] tokens) {\\n        if (tokens == null || tokens.length == 0) return 0;\\n\\n        Stack<Long> stack = new Stack<>();\\n        for (String s : tokens) {\\n            if (!isOperator(s)) stack.push(Long.parseLong(s));\\n            else {\\n                long numB = stack.pop(), numA = stack.pop();\\n                stack.push(eval(numA, numB, s));                \\n            }\\n        }\\n        return stack.pop().intValue();\\n    }\\n    \\n    private boolean isOperator(String s) {\\n        if (s.length() != 1) return false;\\n        char c = s.charAt(0);\\n        return c == \\'+\\' || c == \\'-\\' || c == \\'/\\' || c == \\'*\\';\\n    }\\n    \\n    private long eval(long a, long b, String s) {\\n        long rst = 0;\\n        char operator = s.charAt(0);\\n        if (operator == \\'+\\') rst = a + b;\\n        if (operator == \\'-\\') rst = a - b;\\n        if (operator == \\'*\\') rst = a * b;\\n        if (operator == \\'/\\') rst = a / b;\\n    \\treturn rst;\\n    }\\n}"
                    },
                    {
                        "username": "anantnipunge",
                        "content": "what's wrong with this code?? at operand\n\n\n `Stack<Integer> st = new Stack<>();\n\n        for(String el : tokens){\n            if(el == \"+\" || el == \"-\" || el == \"*\" || el == \"/\"){\n                //find operand\n                int op1 = st.peek(); st.pop(); // top element\n                int op2 = st.peek(); st.pop(); // top element and find op1 and op2\n\n                if(el == \"+\") st.add(op1 + op2);\n                if(el == \"-\") st.add(op1 - op2);\n                if(el == \"*\") st.add(op1 * op2);\n                if(el == \"/\") st.add(op1 / op2);\n            }\n            else{\n                // operand\n                st.add(Integer.parseInt(el));\n            }\n        }\n\n        return st.peek();// return top element;`"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "1st pop should be op2 and 2nd pop should be op1 as we\\'re going left to right"
                    },
                    {
                        "username": "chengweiwei",
                        "content": "I understand that stack is the easiest and the cleanest way to do it, but could anyone tell me why the following code fails the tests? (It fails one long test case.) The logic is essentially the same. \n\n\n```\n    while len(tokens) != 1:\n        for i in range(len(tokens) - 2):\n            if tokens[i + 2] in \"*/+-\":\n                if tokens[i + 2] == '+':\n                    tokens[i] = str(int(tokens[i]) + int(tokens[i + 1]))\n                elif tokens[i + 2] == '-':\n                    tokens[i] = str(int(tokens[i]) - int(tokens[i + 1]))\n                elif tokens[i + 2] == '*':\n                    tokens[i] = str(int(tokens[i]) * int(tokens[i + 1]))\n                else:\n                    tokens[i] = str(int(int(tokens[i]) / int(tokens[i + 1])))\n                tokens.remove(tokens[i + 2])\n                tokens.remove(tokens[i + 1])\n                break\n    return int(tokens[0])\n```\n"
                    }
                ]
            },
            {
                "id": 1720705,
                "content": [
                    {
                        "username": "discodoggy12345",
                        "content": "Hey!\n\nSo I was able to complete this problem successfully but along the way I ran into a strange error I cannot explain. For context, I am using C++.\n\nWith this line of code, I have no errors \n``` for (int i = 0; i < tokens.size(); i++) {\n\n            temp_token = tokens[i];\n\n            if(temp_token.size() > 1 || isdigit(temp_token[0])) {\n                number = stoi(tokens.at(i));\n                operands.push(number);\n            }\n```\n\nbut when I take away the ```temp_token.size() > 1``` in the if statement, I get this error:\n\n```Line 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type 'int', which requires 4 byte alignment (stl_deque.h)\n0xbebebebebebec0ba: note: pointer points here\n<memory cannot be printed>\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16\n```\n\nI was not able to identify the cause of this error but if anybody has an explanation I would very much like to hear it.\n\nThank you!\n\n"
                    },
                    {
                        "username": "harsh_k112002",
                        "content": "*************************** SIMPLE AND EASY WAY TO UNDERSTAND AND SOLVE **********************\\n\\nThe question is really simple, all you have to do traverse through the vector and push the operand in a stack, do until you get a operator , when you get a operator d a calculation of that operator by poping two elements out of the stack and do perform a formula ( operator_ans = element in top of stack, then pop it, then apply the operator(+,-,* ,/) then again for second element take element in top of stack, then pop it.), Now you have to push the ans you got into the stack ,do until the stack is empty.\\n\\nAt the end the element in top of stack is your answer.\\n\\nDo upvote if you like my method :)\\nHAPPY CODING"
                    },
                    {
                        "username": "a12baghel2",
                        "content": "```C++\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long> st;\\n        for(auto i:tokens){\\n            if(i == \"*\" || i ==  \"/\" || i == \"-\" || i == \"+\"){\\n                long val1 = st.top();\\n                st.pop();\\n                long val2 = st.top();\\n                st.pop();\\n                if(i == \"+\"){\\n                    st.push(val1+val2);\\n                }else if(i == \"-\"){\\n                    st.push(val1-val2);\\n                }else if(i == \"*\"){\\n                    st.push(val1*val2);\\n                }else{\\n                    st.push(val1/val2);\\n                }\\n            }else{\\n                int num = stoi(i);\\n                st.push(num);\\n            }\\n        }\\n        return st.top();\\n    }\\n};\\n```\\n## Why leetcode is giving WA on correct solution ? Anyone can explain me why this is happening?"
                    },
                    {
                        "username": "ag10022101",
                        "content": "just set val1 to val2 and vice versa  and you are good to go."
                    },
                    {
                        "username": "DavalC",
                        "content": "The space complexity of the evaluateRPN function is O(n), where n is the number of tokens in the input list. This is because the function uses a stack to store the operands, which has a maximum size of n.\\n\\nThe time complexity of the evaluateRPN function is also O(n), because the function performs a constant number of operations on each token in the input list.\\n\\nTherefore, the overall complexity of the evaluateRPN function is O(n). This means that the function\\'s performance will be linear in the size of the input."
                    },
                    {
                        "username": "ravi-k-8179",
                        "content": "I am getting the signed integer overflow in the below code at line 27 stk.push(a* b) any help !!!\\n\\n\\n\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& t) {\\n        set<string> s;\\n        s.insert(\"+\");\\n        s.insert(\"-\");\\n        s.insert(\"*\");\\n        s.insert(\"/\");\\n        stack<int> stk;\\n        int n = t.size();\\n        for(int i=0;i<n;i++){\\n            if(s.count(t[i])==0){\\n                stk.push(stoi(t[i]));\\n            }else{\\n                int b = stk.top();\\n                stk.pop();\\n                int a = stk.top();\\n                stk.pop();\\n                // int res = 0;\\n                if(t[i]==\"+\"){\\n                    stk.push(a+b);\\n                }\\n                else if(t[i]==\"-\"){\\n                    stk.push(a-b);\\n                }\\n                else if(t[i]==\"*\"){\\n                    stk.push(a*b);\\n                }\\n                else if(t[i]==\"/\"){\\n                    stk.push(a/b);\\n                }\\n                // stk.push(res);\\n            }\\n        }\\n        return stk.top();\\n    }\\n};\\n"
                    },
                    {
                        "username": "user5120tq",
                        "content": "class Solution {\\npublic:\\n    long long applymath(string a,long long b,long long c)\\n    {\\n        long long l=0;\\n        if(a==\"+\") \\n        l=c+b;\\n        else if(a==\"*\")\\n        l=c*b;\\n        else if(a==\"-\")\\n        l=c-b;\\n        else if(a==\"/\")\\n        {\\n            if(c!=0)\\n            {\\n                l=c/b;\\n            }\\n           \\n        }\\n        return l;\\n    }\\n     bool fun(string q)\\n     {\\n     if(q==\"+\" || q==\"-\" || q==\"*\" || q==\"/\")\\n     return true;\\n     else \\n     return false;\\n     }\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long> st;\\n        for(int i=0;i<tokens.size();i++)\\n        {\\n            if(fun(tokens[i])==true)\\n            {\\n             long long x=st.top();\\n             st.pop();\\n             long long  y=st.top();\\n             st.pop();\\n             long long z=applymath(tokens[i],x,y);\\n             st.push(z);\\n\\n            }\\n            else \\n            {\\n                long long k=stoi(tokens[i]);\\n                st.push(k);\\n            }\\n\\n        }\\n        return st.top();\\n    }\\n};"
                    },
                    {
                        "username": "hkaur_3",
                        "content": "JAVA CODE\\n```class Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> st= new Stack();\\n        for(String t:tokens){\\n            if(\"+-*/\".contains(t))\\n                st.push(eval(st.pop(), st.pop(), t));\\n            else\\n                st.push(Integer.parseInt(t));    \\n        }\\n        return st.pop();\\n    }\\n    private int eval(int b, int a, String op){\\n        if(\"+\".equals(op))\\n            return a+b;\\n        else if(\"-\".equals(op))  \\n            return a-b;\\n        else if(\"*\".equals(op))\\n            return a*b;\\n        else\\n            return a/b;          \\n    }\\n}```"
                    },
                    {
                        "username": "__adityaraj___",
                        "content": "class Solution {\\n    public int evalRPN(String[] tokens) {\\n        if (tokens == null || tokens.length == 0) return 0;\\n\\n        Stack<Long> stack = new Stack<>();\\n        for (String s : tokens) {\\n            if (!isOperator(s)) stack.push(Long.parseLong(s));\\n            else {\\n                long numB = stack.pop(), numA = stack.pop();\\n                stack.push(eval(numA, numB, s));                \\n            }\\n        }\\n        return stack.pop().intValue();\\n    }\\n    \\n    private boolean isOperator(String s) {\\n        if (s.length() != 1) return false;\\n        char c = s.charAt(0);\\n        return c == \\'+\\' || c == \\'-\\' || c == \\'/\\' || c == \\'*\\';\\n    }\\n    \\n    private long eval(long a, long b, String s) {\\n        long rst = 0;\\n        char operator = s.charAt(0);\\n        if (operator == \\'+\\') rst = a + b;\\n        if (operator == \\'-\\') rst = a - b;\\n        if (operator == \\'*\\') rst = a * b;\\n        if (operator == \\'/\\') rst = a / b;\\n    \\treturn rst;\\n    }\\n}"
                    },
                    {
                        "username": "anantnipunge",
                        "content": "what's wrong with this code?? at operand\n\n\n `Stack<Integer> st = new Stack<>();\n\n        for(String el : tokens){\n            if(el == \"+\" || el == \"-\" || el == \"*\" || el == \"/\"){\n                //find operand\n                int op1 = st.peek(); st.pop(); // top element\n                int op2 = st.peek(); st.pop(); // top element and find op1 and op2\n\n                if(el == \"+\") st.add(op1 + op2);\n                if(el == \"-\") st.add(op1 - op2);\n                if(el == \"*\") st.add(op1 * op2);\n                if(el == \"/\") st.add(op1 / op2);\n            }\n            else{\n                // operand\n                st.add(Integer.parseInt(el));\n            }\n        }\n\n        return st.peek();// return top element;`"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "1st pop should be op2 and 2nd pop should be op1 as we\\'re going left to right"
                    },
                    {
                        "username": "chengweiwei",
                        "content": "I understand that stack is the easiest and the cleanest way to do it, but could anyone tell me why the following code fails the tests? (It fails one long test case.) The logic is essentially the same. \n\n\n```\n    while len(tokens) != 1:\n        for i in range(len(tokens) - 2):\n            if tokens[i + 2] in \"*/+-\":\n                if tokens[i + 2] == '+':\n                    tokens[i] = str(int(tokens[i]) + int(tokens[i + 1]))\n                elif tokens[i + 2] == '-':\n                    tokens[i] = str(int(tokens[i]) - int(tokens[i + 1]))\n                elif tokens[i + 2] == '*':\n                    tokens[i] = str(int(tokens[i]) * int(tokens[i + 1]))\n                else:\n                    tokens[i] = str(int(int(tokens[i]) / int(tokens[i + 1])))\n                tokens.remove(tokens[i + 2])\n                tokens.remove(tokens[i + 1])\n                break\n    return int(tokens[0])\n```\n"
                    }
                ]
            },
            {
                "id": 1719741,
                "content": [
                    {
                        "username": "discodoggy12345",
                        "content": "Hey!\n\nSo I was able to complete this problem successfully but along the way I ran into a strange error I cannot explain. For context, I am using C++.\n\nWith this line of code, I have no errors \n``` for (int i = 0; i < tokens.size(); i++) {\n\n            temp_token = tokens[i];\n\n            if(temp_token.size() > 1 || isdigit(temp_token[0])) {\n                number = stoi(tokens.at(i));\n                operands.push(number);\n            }\n```\n\nbut when I take away the ```temp_token.size() > 1``` in the if statement, I get this error:\n\n```Line 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type 'int', which requires 4 byte alignment (stl_deque.h)\n0xbebebebebebec0ba: note: pointer points here\n<memory cannot be printed>\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16\n```\n\nI was not able to identify the cause of this error but if anybody has an explanation I would very much like to hear it.\n\nThank you!\n\n"
                    },
                    {
                        "username": "harsh_k112002",
                        "content": "*************************** SIMPLE AND EASY WAY TO UNDERSTAND AND SOLVE **********************\\n\\nThe question is really simple, all you have to do traverse through the vector and push the operand in a stack, do until you get a operator , when you get a operator d a calculation of that operator by poping two elements out of the stack and do perform a formula ( operator_ans = element in top of stack, then pop it, then apply the operator(+,-,* ,/) then again for second element take element in top of stack, then pop it.), Now you have to push the ans you got into the stack ,do until the stack is empty.\\n\\nAt the end the element in top of stack is your answer.\\n\\nDo upvote if you like my method :)\\nHAPPY CODING"
                    },
                    {
                        "username": "a12baghel2",
                        "content": "```C++\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long> st;\\n        for(auto i:tokens){\\n            if(i == \"*\" || i ==  \"/\" || i == \"-\" || i == \"+\"){\\n                long val1 = st.top();\\n                st.pop();\\n                long val2 = st.top();\\n                st.pop();\\n                if(i == \"+\"){\\n                    st.push(val1+val2);\\n                }else if(i == \"-\"){\\n                    st.push(val1-val2);\\n                }else if(i == \"*\"){\\n                    st.push(val1*val2);\\n                }else{\\n                    st.push(val1/val2);\\n                }\\n            }else{\\n                int num = stoi(i);\\n                st.push(num);\\n            }\\n        }\\n        return st.top();\\n    }\\n};\\n```\\n## Why leetcode is giving WA on correct solution ? Anyone can explain me why this is happening?"
                    },
                    {
                        "username": "ag10022101",
                        "content": "just set val1 to val2 and vice versa  and you are good to go."
                    },
                    {
                        "username": "DavalC",
                        "content": "The space complexity of the evaluateRPN function is O(n), where n is the number of tokens in the input list. This is because the function uses a stack to store the operands, which has a maximum size of n.\\n\\nThe time complexity of the evaluateRPN function is also O(n), because the function performs a constant number of operations on each token in the input list.\\n\\nTherefore, the overall complexity of the evaluateRPN function is O(n). This means that the function\\'s performance will be linear in the size of the input."
                    },
                    {
                        "username": "ravi-k-8179",
                        "content": "I am getting the signed integer overflow in the below code at line 27 stk.push(a* b) any help !!!\\n\\n\\n\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& t) {\\n        set<string> s;\\n        s.insert(\"+\");\\n        s.insert(\"-\");\\n        s.insert(\"*\");\\n        s.insert(\"/\");\\n        stack<int> stk;\\n        int n = t.size();\\n        for(int i=0;i<n;i++){\\n            if(s.count(t[i])==0){\\n                stk.push(stoi(t[i]));\\n            }else{\\n                int b = stk.top();\\n                stk.pop();\\n                int a = stk.top();\\n                stk.pop();\\n                // int res = 0;\\n                if(t[i]==\"+\"){\\n                    stk.push(a+b);\\n                }\\n                else if(t[i]==\"-\"){\\n                    stk.push(a-b);\\n                }\\n                else if(t[i]==\"*\"){\\n                    stk.push(a*b);\\n                }\\n                else if(t[i]==\"/\"){\\n                    stk.push(a/b);\\n                }\\n                // stk.push(res);\\n            }\\n        }\\n        return stk.top();\\n    }\\n};\\n"
                    },
                    {
                        "username": "user5120tq",
                        "content": "class Solution {\\npublic:\\n    long long applymath(string a,long long b,long long c)\\n    {\\n        long long l=0;\\n        if(a==\"+\") \\n        l=c+b;\\n        else if(a==\"*\")\\n        l=c*b;\\n        else if(a==\"-\")\\n        l=c-b;\\n        else if(a==\"/\")\\n        {\\n            if(c!=0)\\n            {\\n                l=c/b;\\n            }\\n           \\n        }\\n        return l;\\n    }\\n     bool fun(string q)\\n     {\\n     if(q==\"+\" || q==\"-\" || q==\"*\" || q==\"/\")\\n     return true;\\n     else \\n     return false;\\n     }\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long> st;\\n        for(int i=0;i<tokens.size();i++)\\n        {\\n            if(fun(tokens[i])==true)\\n            {\\n             long long x=st.top();\\n             st.pop();\\n             long long  y=st.top();\\n             st.pop();\\n             long long z=applymath(tokens[i],x,y);\\n             st.push(z);\\n\\n            }\\n            else \\n            {\\n                long long k=stoi(tokens[i]);\\n                st.push(k);\\n            }\\n\\n        }\\n        return st.top();\\n    }\\n};"
                    },
                    {
                        "username": "hkaur_3",
                        "content": "JAVA CODE\\n```class Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> st= new Stack();\\n        for(String t:tokens){\\n            if(\"+-*/\".contains(t))\\n                st.push(eval(st.pop(), st.pop(), t));\\n            else\\n                st.push(Integer.parseInt(t));    \\n        }\\n        return st.pop();\\n    }\\n    private int eval(int b, int a, String op){\\n        if(\"+\".equals(op))\\n            return a+b;\\n        else if(\"-\".equals(op))  \\n            return a-b;\\n        else if(\"*\".equals(op))\\n            return a*b;\\n        else\\n            return a/b;          \\n    }\\n}```"
                    },
                    {
                        "username": "__adityaraj___",
                        "content": "class Solution {\\n    public int evalRPN(String[] tokens) {\\n        if (tokens == null || tokens.length == 0) return 0;\\n\\n        Stack<Long> stack = new Stack<>();\\n        for (String s : tokens) {\\n            if (!isOperator(s)) stack.push(Long.parseLong(s));\\n            else {\\n                long numB = stack.pop(), numA = stack.pop();\\n                stack.push(eval(numA, numB, s));                \\n            }\\n        }\\n        return stack.pop().intValue();\\n    }\\n    \\n    private boolean isOperator(String s) {\\n        if (s.length() != 1) return false;\\n        char c = s.charAt(0);\\n        return c == \\'+\\' || c == \\'-\\' || c == \\'/\\' || c == \\'*\\';\\n    }\\n    \\n    private long eval(long a, long b, String s) {\\n        long rst = 0;\\n        char operator = s.charAt(0);\\n        if (operator == \\'+\\') rst = a + b;\\n        if (operator == \\'-\\') rst = a - b;\\n        if (operator == \\'*\\') rst = a * b;\\n        if (operator == \\'/\\') rst = a / b;\\n    \\treturn rst;\\n    }\\n}"
                    },
                    {
                        "username": "anantnipunge",
                        "content": "what's wrong with this code?? at operand\n\n\n `Stack<Integer> st = new Stack<>();\n\n        for(String el : tokens){\n            if(el == \"+\" || el == \"-\" || el == \"*\" || el == \"/\"){\n                //find operand\n                int op1 = st.peek(); st.pop(); // top element\n                int op2 = st.peek(); st.pop(); // top element and find op1 and op2\n\n                if(el == \"+\") st.add(op1 + op2);\n                if(el == \"-\") st.add(op1 - op2);\n                if(el == \"*\") st.add(op1 * op2);\n                if(el == \"/\") st.add(op1 / op2);\n            }\n            else{\n                // operand\n                st.add(Integer.parseInt(el));\n            }\n        }\n\n        return st.peek();// return top element;`"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "1st pop should be op2 and 2nd pop should be op1 as we\\'re going left to right"
                    },
                    {
                        "username": "chengweiwei",
                        "content": "I understand that stack is the easiest and the cleanest way to do it, but could anyone tell me why the following code fails the tests? (It fails one long test case.) The logic is essentially the same. \n\n\n```\n    while len(tokens) != 1:\n        for i in range(len(tokens) - 2):\n            if tokens[i + 2] in \"*/+-\":\n                if tokens[i + 2] == '+':\n                    tokens[i] = str(int(tokens[i]) + int(tokens[i + 1]))\n                elif tokens[i + 2] == '-':\n                    tokens[i] = str(int(tokens[i]) - int(tokens[i + 1]))\n                elif tokens[i + 2] == '*':\n                    tokens[i] = str(int(tokens[i]) * int(tokens[i + 1]))\n                else:\n                    tokens[i] = str(int(int(tokens[i]) / int(tokens[i + 1])))\n                tokens.remove(tokens[i + 2])\n                tokens.remove(tokens[i + 1])\n                break\n    return int(tokens[0])\n```\n"
                    }
                ]
            },
            {
                "id": 1719654,
                "content": [
                    {
                        "username": "discodoggy12345",
                        "content": "Hey!\n\nSo I was able to complete this problem successfully but along the way I ran into a strange error I cannot explain. For context, I am using C++.\n\nWith this line of code, I have no errors \n``` for (int i = 0; i < tokens.size(); i++) {\n\n            temp_token = tokens[i];\n\n            if(temp_token.size() > 1 || isdigit(temp_token[0])) {\n                number = stoi(tokens.at(i));\n                operands.push(number);\n            }\n```\n\nbut when I take away the ```temp_token.size() > 1``` in the if statement, I get this error:\n\n```Line 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type 'int', which requires 4 byte alignment (stl_deque.h)\n0xbebebebebebec0ba: note: pointer points here\n<memory cannot be printed>\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16\n```\n\nI was not able to identify the cause of this error but if anybody has an explanation I would very much like to hear it.\n\nThank you!\n\n"
                    },
                    {
                        "username": "harsh_k112002",
                        "content": "*************************** SIMPLE AND EASY WAY TO UNDERSTAND AND SOLVE **********************\\n\\nThe question is really simple, all you have to do traverse through the vector and push the operand in a stack, do until you get a operator , when you get a operator d a calculation of that operator by poping two elements out of the stack and do perform a formula ( operator_ans = element in top of stack, then pop it, then apply the operator(+,-,* ,/) then again for second element take element in top of stack, then pop it.), Now you have to push the ans you got into the stack ,do until the stack is empty.\\n\\nAt the end the element in top of stack is your answer.\\n\\nDo upvote if you like my method :)\\nHAPPY CODING"
                    },
                    {
                        "username": "a12baghel2",
                        "content": "```C++\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long> st;\\n        for(auto i:tokens){\\n            if(i == \"*\" || i ==  \"/\" || i == \"-\" || i == \"+\"){\\n                long val1 = st.top();\\n                st.pop();\\n                long val2 = st.top();\\n                st.pop();\\n                if(i == \"+\"){\\n                    st.push(val1+val2);\\n                }else if(i == \"-\"){\\n                    st.push(val1-val2);\\n                }else if(i == \"*\"){\\n                    st.push(val1*val2);\\n                }else{\\n                    st.push(val1/val2);\\n                }\\n            }else{\\n                int num = stoi(i);\\n                st.push(num);\\n            }\\n        }\\n        return st.top();\\n    }\\n};\\n```\\n## Why leetcode is giving WA on correct solution ? Anyone can explain me why this is happening?"
                    },
                    {
                        "username": "ag10022101",
                        "content": "just set val1 to val2 and vice versa  and you are good to go."
                    },
                    {
                        "username": "DavalC",
                        "content": "The space complexity of the evaluateRPN function is O(n), where n is the number of tokens in the input list. This is because the function uses a stack to store the operands, which has a maximum size of n.\\n\\nThe time complexity of the evaluateRPN function is also O(n), because the function performs a constant number of operations on each token in the input list.\\n\\nTherefore, the overall complexity of the evaluateRPN function is O(n). This means that the function\\'s performance will be linear in the size of the input."
                    },
                    {
                        "username": "ravi-k-8179",
                        "content": "I am getting the signed integer overflow in the below code at line 27 stk.push(a* b) any help !!!\\n\\n\\n\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& t) {\\n        set<string> s;\\n        s.insert(\"+\");\\n        s.insert(\"-\");\\n        s.insert(\"*\");\\n        s.insert(\"/\");\\n        stack<int> stk;\\n        int n = t.size();\\n        for(int i=0;i<n;i++){\\n            if(s.count(t[i])==0){\\n                stk.push(stoi(t[i]));\\n            }else{\\n                int b = stk.top();\\n                stk.pop();\\n                int a = stk.top();\\n                stk.pop();\\n                // int res = 0;\\n                if(t[i]==\"+\"){\\n                    stk.push(a+b);\\n                }\\n                else if(t[i]==\"-\"){\\n                    stk.push(a-b);\\n                }\\n                else if(t[i]==\"*\"){\\n                    stk.push(a*b);\\n                }\\n                else if(t[i]==\"/\"){\\n                    stk.push(a/b);\\n                }\\n                // stk.push(res);\\n            }\\n        }\\n        return stk.top();\\n    }\\n};\\n"
                    },
                    {
                        "username": "user5120tq",
                        "content": "class Solution {\\npublic:\\n    long long applymath(string a,long long b,long long c)\\n    {\\n        long long l=0;\\n        if(a==\"+\") \\n        l=c+b;\\n        else if(a==\"*\")\\n        l=c*b;\\n        else if(a==\"-\")\\n        l=c-b;\\n        else if(a==\"/\")\\n        {\\n            if(c!=0)\\n            {\\n                l=c/b;\\n            }\\n           \\n        }\\n        return l;\\n    }\\n     bool fun(string q)\\n     {\\n     if(q==\"+\" || q==\"-\" || q==\"*\" || q==\"/\")\\n     return true;\\n     else \\n     return false;\\n     }\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long> st;\\n        for(int i=0;i<tokens.size();i++)\\n        {\\n            if(fun(tokens[i])==true)\\n            {\\n             long long x=st.top();\\n             st.pop();\\n             long long  y=st.top();\\n             st.pop();\\n             long long z=applymath(tokens[i],x,y);\\n             st.push(z);\\n\\n            }\\n            else \\n            {\\n                long long k=stoi(tokens[i]);\\n                st.push(k);\\n            }\\n\\n        }\\n        return st.top();\\n    }\\n};"
                    },
                    {
                        "username": "hkaur_3",
                        "content": "JAVA CODE\\n```class Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> st= new Stack();\\n        for(String t:tokens){\\n            if(\"+-*/\".contains(t))\\n                st.push(eval(st.pop(), st.pop(), t));\\n            else\\n                st.push(Integer.parseInt(t));    \\n        }\\n        return st.pop();\\n    }\\n    private int eval(int b, int a, String op){\\n        if(\"+\".equals(op))\\n            return a+b;\\n        else if(\"-\".equals(op))  \\n            return a-b;\\n        else if(\"*\".equals(op))\\n            return a*b;\\n        else\\n            return a/b;          \\n    }\\n}```"
                    },
                    {
                        "username": "__adityaraj___",
                        "content": "class Solution {\\n    public int evalRPN(String[] tokens) {\\n        if (tokens == null || tokens.length == 0) return 0;\\n\\n        Stack<Long> stack = new Stack<>();\\n        for (String s : tokens) {\\n            if (!isOperator(s)) stack.push(Long.parseLong(s));\\n            else {\\n                long numB = stack.pop(), numA = stack.pop();\\n                stack.push(eval(numA, numB, s));                \\n            }\\n        }\\n        return stack.pop().intValue();\\n    }\\n    \\n    private boolean isOperator(String s) {\\n        if (s.length() != 1) return false;\\n        char c = s.charAt(0);\\n        return c == \\'+\\' || c == \\'-\\' || c == \\'/\\' || c == \\'*\\';\\n    }\\n    \\n    private long eval(long a, long b, String s) {\\n        long rst = 0;\\n        char operator = s.charAt(0);\\n        if (operator == \\'+\\') rst = a + b;\\n        if (operator == \\'-\\') rst = a - b;\\n        if (operator == \\'*\\') rst = a * b;\\n        if (operator == \\'/\\') rst = a / b;\\n    \\treturn rst;\\n    }\\n}"
                    },
                    {
                        "username": "anantnipunge",
                        "content": "what's wrong with this code?? at operand\n\n\n `Stack<Integer> st = new Stack<>();\n\n        for(String el : tokens){\n            if(el == \"+\" || el == \"-\" || el == \"*\" || el == \"/\"){\n                //find operand\n                int op1 = st.peek(); st.pop(); // top element\n                int op2 = st.peek(); st.pop(); // top element and find op1 and op2\n\n                if(el == \"+\") st.add(op1 + op2);\n                if(el == \"-\") st.add(op1 - op2);\n                if(el == \"*\") st.add(op1 * op2);\n                if(el == \"/\") st.add(op1 / op2);\n            }\n            else{\n                // operand\n                st.add(Integer.parseInt(el));\n            }\n        }\n\n        return st.peek();// return top element;`"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "1st pop should be op2 and 2nd pop should be op1 as we\\'re going left to right"
                    },
                    {
                        "username": "chengweiwei",
                        "content": "I understand that stack is the easiest and the cleanest way to do it, but could anyone tell me why the following code fails the tests? (It fails one long test case.) The logic is essentially the same. \n\n\n```\n    while len(tokens) != 1:\n        for i in range(len(tokens) - 2):\n            if tokens[i + 2] in \"*/+-\":\n                if tokens[i + 2] == '+':\n                    tokens[i] = str(int(tokens[i]) + int(tokens[i + 1]))\n                elif tokens[i + 2] == '-':\n                    tokens[i] = str(int(tokens[i]) - int(tokens[i + 1]))\n                elif tokens[i + 2] == '*':\n                    tokens[i] = str(int(tokens[i]) * int(tokens[i + 1]))\n                else:\n                    tokens[i] = str(int(int(tokens[i]) / int(tokens[i + 1])))\n                tokens.remove(tokens[i + 2])\n                tokens.remove(tokens[i + 1])\n                break\n    return int(tokens[0])\n```\n"
                    }
                ]
            },
            {
                "id": 1719590,
                "content": [
                    {
                        "username": "discodoggy12345",
                        "content": "Hey!\n\nSo I was able to complete this problem successfully but along the way I ran into a strange error I cannot explain. For context, I am using C++.\n\nWith this line of code, I have no errors \n``` for (int i = 0; i < tokens.size(); i++) {\n\n            temp_token = tokens[i];\n\n            if(temp_token.size() > 1 || isdigit(temp_token[0])) {\n                number = stoi(tokens.at(i));\n                operands.push(number);\n            }\n```\n\nbut when I take away the ```temp_token.size() > 1``` in the if statement, I get this error:\n\n```Line 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type 'int', which requires 4 byte alignment (stl_deque.h)\n0xbebebebebebec0ba: note: pointer points here\n<memory cannot be printed>\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16\n```\n\nI was not able to identify the cause of this error but if anybody has an explanation I would very much like to hear it.\n\nThank you!\n\n"
                    },
                    {
                        "username": "harsh_k112002",
                        "content": "*************************** SIMPLE AND EASY WAY TO UNDERSTAND AND SOLVE **********************\\n\\nThe question is really simple, all you have to do traverse through the vector and push the operand in a stack, do until you get a operator , when you get a operator d a calculation of that operator by poping two elements out of the stack and do perform a formula ( operator_ans = element in top of stack, then pop it, then apply the operator(+,-,* ,/) then again for second element take element in top of stack, then pop it.), Now you have to push the ans you got into the stack ,do until the stack is empty.\\n\\nAt the end the element in top of stack is your answer.\\n\\nDo upvote if you like my method :)\\nHAPPY CODING"
                    },
                    {
                        "username": "a12baghel2",
                        "content": "```C++\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long> st;\\n        for(auto i:tokens){\\n            if(i == \"*\" || i ==  \"/\" || i == \"-\" || i == \"+\"){\\n                long val1 = st.top();\\n                st.pop();\\n                long val2 = st.top();\\n                st.pop();\\n                if(i == \"+\"){\\n                    st.push(val1+val2);\\n                }else if(i == \"-\"){\\n                    st.push(val1-val2);\\n                }else if(i == \"*\"){\\n                    st.push(val1*val2);\\n                }else{\\n                    st.push(val1/val2);\\n                }\\n            }else{\\n                int num = stoi(i);\\n                st.push(num);\\n            }\\n        }\\n        return st.top();\\n    }\\n};\\n```\\n## Why leetcode is giving WA on correct solution ? Anyone can explain me why this is happening?"
                    },
                    {
                        "username": "ag10022101",
                        "content": "just set val1 to val2 and vice versa  and you are good to go."
                    },
                    {
                        "username": "DavalC",
                        "content": "The space complexity of the evaluateRPN function is O(n), where n is the number of tokens in the input list. This is because the function uses a stack to store the operands, which has a maximum size of n.\\n\\nThe time complexity of the evaluateRPN function is also O(n), because the function performs a constant number of operations on each token in the input list.\\n\\nTherefore, the overall complexity of the evaluateRPN function is O(n). This means that the function\\'s performance will be linear in the size of the input."
                    },
                    {
                        "username": "ravi-k-8179",
                        "content": "I am getting the signed integer overflow in the below code at line 27 stk.push(a* b) any help !!!\\n\\n\\n\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& t) {\\n        set<string> s;\\n        s.insert(\"+\");\\n        s.insert(\"-\");\\n        s.insert(\"*\");\\n        s.insert(\"/\");\\n        stack<int> stk;\\n        int n = t.size();\\n        for(int i=0;i<n;i++){\\n            if(s.count(t[i])==0){\\n                stk.push(stoi(t[i]));\\n            }else{\\n                int b = stk.top();\\n                stk.pop();\\n                int a = stk.top();\\n                stk.pop();\\n                // int res = 0;\\n                if(t[i]==\"+\"){\\n                    stk.push(a+b);\\n                }\\n                else if(t[i]==\"-\"){\\n                    stk.push(a-b);\\n                }\\n                else if(t[i]==\"*\"){\\n                    stk.push(a*b);\\n                }\\n                else if(t[i]==\"/\"){\\n                    stk.push(a/b);\\n                }\\n                // stk.push(res);\\n            }\\n        }\\n        return stk.top();\\n    }\\n};\\n"
                    },
                    {
                        "username": "user5120tq",
                        "content": "class Solution {\\npublic:\\n    long long applymath(string a,long long b,long long c)\\n    {\\n        long long l=0;\\n        if(a==\"+\") \\n        l=c+b;\\n        else if(a==\"*\")\\n        l=c*b;\\n        else if(a==\"-\")\\n        l=c-b;\\n        else if(a==\"/\")\\n        {\\n            if(c!=0)\\n            {\\n                l=c/b;\\n            }\\n           \\n        }\\n        return l;\\n    }\\n     bool fun(string q)\\n     {\\n     if(q==\"+\" || q==\"-\" || q==\"*\" || q==\"/\")\\n     return true;\\n     else \\n     return false;\\n     }\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long> st;\\n        for(int i=0;i<tokens.size();i++)\\n        {\\n            if(fun(tokens[i])==true)\\n            {\\n             long long x=st.top();\\n             st.pop();\\n             long long  y=st.top();\\n             st.pop();\\n             long long z=applymath(tokens[i],x,y);\\n             st.push(z);\\n\\n            }\\n            else \\n            {\\n                long long k=stoi(tokens[i]);\\n                st.push(k);\\n            }\\n\\n        }\\n        return st.top();\\n    }\\n};"
                    },
                    {
                        "username": "hkaur_3",
                        "content": "JAVA CODE\\n```class Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> st= new Stack();\\n        for(String t:tokens){\\n            if(\"+-*/\".contains(t))\\n                st.push(eval(st.pop(), st.pop(), t));\\n            else\\n                st.push(Integer.parseInt(t));    \\n        }\\n        return st.pop();\\n    }\\n    private int eval(int b, int a, String op){\\n        if(\"+\".equals(op))\\n            return a+b;\\n        else if(\"-\".equals(op))  \\n            return a-b;\\n        else if(\"*\".equals(op))\\n            return a*b;\\n        else\\n            return a/b;          \\n    }\\n}```"
                    },
                    {
                        "username": "__adityaraj___",
                        "content": "class Solution {\\n    public int evalRPN(String[] tokens) {\\n        if (tokens == null || tokens.length == 0) return 0;\\n\\n        Stack<Long> stack = new Stack<>();\\n        for (String s : tokens) {\\n            if (!isOperator(s)) stack.push(Long.parseLong(s));\\n            else {\\n                long numB = stack.pop(), numA = stack.pop();\\n                stack.push(eval(numA, numB, s));                \\n            }\\n        }\\n        return stack.pop().intValue();\\n    }\\n    \\n    private boolean isOperator(String s) {\\n        if (s.length() != 1) return false;\\n        char c = s.charAt(0);\\n        return c == \\'+\\' || c == \\'-\\' || c == \\'/\\' || c == \\'*\\';\\n    }\\n    \\n    private long eval(long a, long b, String s) {\\n        long rst = 0;\\n        char operator = s.charAt(0);\\n        if (operator == \\'+\\') rst = a + b;\\n        if (operator == \\'-\\') rst = a - b;\\n        if (operator == \\'*\\') rst = a * b;\\n        if (operator == \\'/\\') rst = a / b;\\n    \\treturn rst;\\n    }\\n}"
                    },
                    {
                        "username": "anantnipunge",
                        "content": "what's wrong with this code?? at operand\n\n\n `Stack<Integer> st = new Stack<>();\n\n        for(String el : tokens){\n            if(el == \"+\" || el == \"-\" || el == \"*\" || el == \"/\"){\n                //find operand\n                int op1 = st.peek(); st.pop(); // top element\n                int op2 = st.peek(); st.pop(); // top element and find op1 and op2\n\n                if(el == \"+\") st.add(op1 + op2);\n                if(el == \"-\") st.add(op1 - op2);\n                if(el == \"*\") st.add(op1 * op2);\n                if(el == \"/\") st.add(op1 / op2);\n            }\n            else{\n                // operand\n                st.add(Integer.parseInt(el));\n            }\n        }\n\n        return st.peek();// return top element;`"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "1st pop should be op2 and 2nd pop should be op1 as we\\'re going left to right"
                    },
                    {
                        "username": "chengweiwei",
                        "content": "I understand that stack is the easiest and the cleanest way to do it, but could anyone tell me why the following code fails the tests? (It fails one long test case.) The logic is essentially the same. \n\n\n```\n    while len(tokens) != 1:\n        for i in range(len(tokens) - 2):\n            if tokens[i + 2] in \"*/+-\":\n                if tokens[i + 2] == '+':\n                    tokens[i] = str(int(tokens[i]) + int(tokens[i + 1]))\n                elif tokens[i + 2] == '-':\n                    tokens[i] = str(int(tokens[i]) - int(tokens[i + 1]))\n                elif tokens[i + 2] == '*':\n                    tokens[i] = str(int(tokens[i]) * int(tokens[i + 1]))\n                else:\n                    tokens[i] = str(int(int(tokens[i]) / int(tokens[i + 1])))\n                tokens.remove(tokens[i + 2])\n                tokens.remove(tokens[i + 1])\n                break\n    return int(tokens[0])\n```\n"
                    }
                ]
            },
            {
                "id": 1719588,
                "content": [
                    {
                        "username": "discodoggy12345",
                        "content": "Hey!\n\nSo I was able to complete this problem successfully but along the way I ran into a strange error I cannot explain. For context, I am using C++.\n\nWith this line of code, I have no errors \n``` for (int i = 0; i < tokens.size(); i++) {\n\n            temp_token = tokens[i];\n\n            if(temp_token.size() > 1 || isdigit(temp_token[0])) {\n                number = stoi(tokens.at(i));\n                operands.push(number);\n            }\n```\n\nbut when I take away the ```temp_token.size() > 1``` in the if statement, I get this error:\n\n```Line 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type 'int', which requires 4 byte alignment (stl_deque.h)\n0xbebebebebebec0ba: note: pointer points here\n<memory cannot be printed>\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16\n```\n\nI was not able to identify the cause of this error but if anybody has an explanation I would very much like to hear it.\n\nThank you!\n\n"
                    },
                    {
                        "username": "harsh_k112002",
                        "content": "*************************** SIMPLE AND EASY WAY TO UNDERSTAND AND SOLVE **********************\\n\\nThe question is really simple, all you have to do traverse through the vector and push the operand in a stack, do until you get a operator , when you get a operator d a calculation of that operator by poping two elements out of the stack and do perform a formula ( operator_ans = element in top of stack, then pop it, then apply the operator(+,-,* ,/) then again for second element take element in top of stack, then pop it.), Now you have to push the ans you got into the stack ,do until the stack is empty.\\n\\nAt the end the element in top of stack is your answer.\\n\\nDo upvote if you like my method :)\\nHAPPY CODING"
                    },
                    {
                        "username": "a12baghel2",
                        "content": "```C++\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long> st;\\n        for(auto i:tokens){\\n            if(i == \"*\" || i ==  \"/\" || i == \"-\" || i == \"+\"){\\n                long val1 = st.top();\\n                st.pop();\\n                long val2 = st.top();\\n                st.pop();\\n                if(i == \"+\"){\\n                    st.push(val1+val2);\\n                }else if(i == \"-\"){\\n                    st.push(val1-val2);\\n                }else if(i == \"*\"){\\n                    st.push(val1*val2);\\n                }else{\\n                    st.push(val1/val2);\\n                }\\n            }else{\\n                int num = stoi(i);\\n                st.push(num);\\n            }\\n        }\\n        return st.top();\\n    }\\n};\\n```\\n## Why leetcode is giving WA on correct solution ? Anyone can explain me why this is happening?"
                    },
                    {
                        "username": "ag10022101",
                        "content": "just set val1 to val2 and vice versa  and you are good to go."
                    },
                    {
                        "username": "DavalC",
                        "content": "The space complexity of the evaluateRPN function is O(n), where n is the number of tokens in the input list. This is because the function uses a stack to store the operands, which has a maximum size of n.\\n\\nThe time complexity of the evaluateRPN function is also O(n), because the function performs a constant number of operations on each token in the input list.\\n\\nTherefore, the overall complexity of the evaluateRPN function is O(n). This means that the function\\'s performance will be linear in the size of the input."
                    },
                    {
                        "username": "ravi-k-8179",
                        "content": "I am getting the signed integer overflow in the below code at line 27 stk.push(a* b) any help !!!\\n\\n\\n\\nclass Solution {\\npublic:\\n    int evalRPN(vector<string>& t) {\\n        set<string> s;\\n        s.insert(\"+\");\\n        s.insert(\"-\");\\n        s.insert(\"*\");\\n        s.insert(\"/\");\\n        stack<int> stk;\\n        int n = t.size();\\n        for(int i=0;i<n;i++){\\n            if(s.count(t[i])==0){\\n                stk.push(stoi(t[i]));\\n            }else{\\n                int b = stk.top();\\n                stk.pop();\\n                int a = stk.top();\\n                stk.pop();\\n                // int res = 0;\\n                if(t[i]==\"+\"){\\n                    stk.push(a+b);\\n                }\\n                else if(t[i]==\"-\"){\\n                    stk.push(a-b);\\n                }\\n                else if(t[i]==\"*\"){\\n                    stk.push(a*b);\\n                }\\n                else if(t[i]==\"/\"){\\n                    stk.push(a/b);\\n                }\\n                // stk.push(res);\\n            }\\n        }\\n        return stk.top();\\n    }\\n};\\n"
                    },
                    {
                        "username": "user5120tq",
                        "content": "class Solution {\\npublic:\\n    long long applymath(string a,long long b,long long c)\\n    {\\n        long long l=0;\\n        if(a==\"+\") \\n        l=c+b;\\n        else if(a==\"*\")\\n        l=c*b;\\n        else if(a==\"-\")\\n        l=c-b;\\n        else if(a==\"/\")\\n        {\\n            if(c!=0)\\n            {\\n                l=c/b;\\n            }\\n           \\n        }\\n        return l;\\n    }\\n     bool fun(string q)\\n     {\\n     if(q==\"+\" || q==\"-\" || q==\"*\" || q==\"/\")\\n     return true;\\n     else \\n     return false;\\n     }\\n    int evalRPN(vector<string>& tokens) {\\n        stack<long long> st;\\n        for(int i=0;i<tokens.size();i++)\\n        {\\n            if(fun(tokens[i])==true)\\n            {\\n             long long x=st.top();\\n             st.pop();\\n             long long  y=st.top();\\n             st.pop();\\n             long long z=applymath(tokens[i],x,y);\\n             st.push(z);\\n\\n            }\\n            else \\n            {\\n                long long k=stoi(tokens[i]);\\n                st.push(k);\\n            }\\n\\n        }\\n        return st.top();\\n    }\\n};"
                    },
                    {
                        "username": "hkaur_3",
                        "content": "JAVA CODE\\n```class Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<Integer> st= new Stack();\\n        for(String t:tokens){\\n            if(\"+-*/\".contains(t))\\n                st.push(eval(st.pop(), st.pop(), t));\\n            else\\n                st.push(Integer.parseInt(t));    \\n        }\\n        return st.pop();\\n    }\\n    private int eval(int b, int a, String op){\\n        if(\"+\".equals(op))\\n            return a+b;\\n        else if(\"-\".equals(op))  \\n            return a-b;\\n        else if(\"*\".equals(op))\\n            return a*b;\\n        else\\n            return a/b;          \\n    }\\n}```"
                    },
                    {
                        "username": "__adityaraj___",
                        "content": "class Solution {\\n    public int evalRPN(String[] tokens) {\\n        if (tokens == null || tokens.length == 0) return 0;\\n\\n        Stack<Long> stack = new Stack<>();\\n        for (String s : tokens) {\\n            if (!isOperator(s)) stack.push(Long.parseLong(s));\\n            else {\\n                long numB = stack.pop(), numA = stack.pop();\\n                stack.push(eval(numA, numB, s));                \\n            }\\n        }\\n        return stack.pop().intValue();\\n    }\\n    \\n    private boolean isOperator(String s) {\\n        if (s.length() != 1) return false;\\n        char c = s.charAt(0);\\n        return c == \\'+\\' || c == \\'-\\' || c == \\'/\\' || c == \\'*\\';\\n    }\\n    \\n    private long eval(long a, long b, String s) {\\n        long rst = 0;\\n        char operator = s.charAt(0);\\n        if (operator == \\'+\\') rst = a + b;\\n        if (operator == \\'-\\') rst = a - b;\\n        if (operator == \\'*\\') rst = a * b;\\n        if (operator == \\'/\\') rst = a / b;\\n    \\treturn rst;\\n    }\\n}"
                    },
                    {
                        "username": "anantnipunge",
                        "content": "what's wrong with this code?? at operand\n\n\n `Stack<Integer> st = new Stack<>();\n\n        for(String el : tokens){\n            if(el == \"+\" || el == \"-\" || el == \"*\" || el == \"/\"){\n                //find operand\n                int op1 = st.peek(); st.pop(); // top element\n                int op2 = st.peek(); st.pop(); // top element and find op1 and op2\n\n                if(el == \"+\") st.add(op1 + op2);\n                if(el == \"-\") st.add(op1 - op2);\n                if(el == \"*\") st.add(op1 * op2);\n                if(el == \"/\") st.add(op1 / op2);\n            }\n            else{\n                // operand\n                st.add(Integer.parseInt(el));\n            }\n        }\n\n        return st.peek();// return top element;`"
                    },
                    {
                        "username": "KatappaSR",
                        "content": "1st pop should be op2 and 2nd pop should be op1 as we\\'re going left to right"
                    },
                    {
                        "username": "chengweiwei",
                        "content": "I understand that stack is the easiest and the cleanest way to do it, but could anyone tell me why the following code fails the tests? (It fails one long test case.) The logic is essentially the same. \n\n\n```\n    while len(tokens) != 1:\n        for i in range(len(tokens) - 2):\n            if tokens[i + 2] in \"*/+-\":\n                if tokens[i + 2] == '+':\n                    tokens[i] = str(int(tokens[i]) + int(tokens[i + 1]))\n                elif tokens[i + 2] == '-':\n                    tokens[i] = str(int(tokens[i]) - int(tokens[i + 1]))\n                elif tokens[i + 2] == '*':\n                    tokens[i] = str(int(tokens[i]) * int(tokens[i + 1]))\n                else:\n                    tokens[i] = str(int(int(tokens[i]) / int(tokens[i + 1])))\n                tokens.remove(tokens[i + 2])\n                tokens.remove(tokens[i + 1])\n                break\n    return int(tokens[0])\n```\n"
                    }
                ]
            },
            {
                "id": 1719545,
                "content": [
                    {
                        "username": "Sohith_Sai",
                        "content": "i got the doubt i have used long long  and succesfully submitted the code but the function return type is in int right shouldn\\'t it raise an error as we have to return int but we are returning long long"
                    },
                    {
                        "username": "Priyanshu_Arya",
                        "content": "https://leetcode.com/problems/evaluate-reverse-polish-notation/solutions/2922263/evaluate-reverse-polish-notation/"
                    },
                    {
                        "username": "chandan_nayak",
                        "content": " `your inline code...your inline code...\\'class Solution {\\n    public int evalRPN(String[] tokens)\\n {\\n      Stack<Integer> arr=new Stack<Integer>();\\n     int a,b,res;\\n     if(tokens.length==0)\\n     {\\n            return 0;\\n     }\\n     else\\n     {\\n\\n        for(int i=0;i<tokens.length;i++)\\n     {\\n        char r=tokens[i].charAt(0);\\n        if(tokens[i].length()!=1)\\n        {\\n            if(r==\\'-\\')\\n            {\\n                r=tokens[i].charAt(1);\\n            }\\n        }\\n        \\n        if(Character.isDigit(r))\\n        {\\n             int n=Integer.parseInt(tokens[i]);\\n             arr.push(n);\\n        }\\n\\n         else\\n         {\\n               char ch=(tokens[i].charAt(0));\\n\\n               switch(ch)\\n               {\\n                   case \\'*\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b*a;\\n                            arr.push(res);\\n                            break;\\n                    case \\'/\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b/a;\\n                            arr.push(res);\\n                            break;\\n                    case \\'+\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b+a;\\n                            arr.push(res);\\n                            break;\\n\\n                    case \\'-\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b-a;\\n                            arr.push(res);\\n                            break;\\n               }\\n         }\\n     }\\n }\\n\\n         return arr.pop();\\n }\\n}"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can somepoint point out the mistake...\\n//leetcode compiler is showing other output \\nbut my other editor is showing the right output\\n\\n\\n\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        \\n         Stack<String> s = new Stack<>();\\n         String s1 = \"+\";\\n         String s2 = \"-\";\\n         String s3 = \"*\";\\n         String s4 = \"/\";\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(!tokens[i].equals(s1) && !tokens[i].equals(s2) && !tokens[i].equals(s3) && !tokens[i].equals(s4) )\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z ;\\n                    if(x !=0){\\n                        z = Integer.toString(y/x);\\n                    }\\n                    else{\\n                       z = \"0\";\\n                    }\\n               \\n                    s.push(z);\\n                }\\n            }\\n        }\\n        while(s.peek() == \"*\" || s.peek() == \"+\" || s.peek() == \"/\" || s.peek() == \"-\" ){\\n            s.pop();\\n        }\\n        return Integer.parseInt(s.pop());\\n        //return m;\\n    }\\n     \\n}"
                    },
                    {
                        "username": "johnsmillie",
                        "content": "[@anmolkhanna2003](/anmolkhanna2003) Thanks for the suggestions. I have run into a similar issue as [@weknewit007](/weknewit007)."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "- you should be using .equals() in place of \"==\", when comparing strings.\n- hardcode your else for tokens[i].equals(\"/\"). \n- There is no need for the while loop at the end either, it will only affect your program's runtime.\n- you can use ArrayDeque in place of Stack as well, it's more performant than Stack in java\n"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "Please help me with this runtime error!\\n\\nMy code is:\\n\\n \\'class Solution {\\n  public: int solve(vector < string > & given) {\\n    string exp = \"\";\\n\\n    /******************************************************/\\n    // THIS PIECE OF CODE MIGHT BE GENERATING THIS ERROR.\\n    for (int i = 0; i < given.size(); i++) {\\n      if (given[i].size() > 1) {\\n\\n        int j = 0;\\n        while (j < given[i].size()) {\\n          exp += given[i][j];\\n          j++;\\n        }\\n      } else exp += (given[i][0]);\\n\\n    }\\n\\n    /******************************************************/\\n    cout << exp;\\n    int i;\\n    stack < int > st;\\n    // \\xA0\\xA0\\xA0st.size()=exp.size();\\n    // \\xA0\\xA0\\xA0\\xA0if (!st.size()) return -1;\\n\\n    for (i = 0; exp[i]; ++i) {\\n\\n      if (exp[i] == \\' \\') continue;\\n\\n      // If the scanned character is an\\n      // operand (number here),extract the full number\\n      // Push it to the stack.\\n      else if (isdigit(exp[i])) {\\n        int num = 0;\\n\\n        //extract full number\\n        while (isdigit(exp[i])) {\\n          num = num * 10 + (int)(exp[i] - \\'0\\');\\n          i++;\\n        }\\n        i--;\\n\\n        //push the element in the stack\\n        st.push(num);\\n      }\\n\\n      // If the scanned character is an operator, pop two\\n      // elements from stack apply the operator\\n      else {\\n        int val1 = st.top();\\n        st.pop();\\n        int val2 = st.top();\\n        st.pop();\\n\\n        switch (exp[i]) {\\n        case \\'+\\':\\n          st.push(val2 + val1);\\n          break;\\n        case \\'-\\':\\n          st.push(val2 - val1);\\n          break;\\n        case \\'*\\':\\n          st.push(val2 * val1);\\n          break;\\n        case \\'/\\':\\n          st.push(val2 / val1);\\n          break;\\n\\n        }\\n      }\\n    }\\n\\n    return st.top();\\n  }\\n  int evalRPN(vector < string > & tokens) {\\n    return solve(tokens);\\n    //    char a=65;\\n\\n    //    return 0;\\n  }\\n};\\'\\n\\n `Runtime Error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16`\\n\\nPlease help me out!"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can someone point me the error\\n//\\n\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<String> s = new Stack<>();\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(tokens[i] != \"+\" && tokens[i] != \"*\"   && tokens[i] != \"/\" && tokens[i] != \"-\")\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y/x);\\n                    s.push(z);\\n                }\\n            }\\n        }\\n        int m = Integer.parseInt(s.peek());\\n        return m;\\n       \\n    }\\n     \\n}"
                    },
                    {
                        "username": "weknewit007",
                        "content": "[@avi_maurya_0926](/avi_maurya_0926) import java.util.*;\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        \\n         Stack<String> s = new Stack<>();\\n         String s1 = \"+\";\\n         String s2 = \"-\";\\n         String s3 = \"*\";\\n         String s4 = \"/\";\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(!tokens[i].equals(s1) && !tokens[i].equals(s2) && !tokens[i].equals(s3) && !tokens[i].equals(s4) )\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z ;\\n                    if(x !=0){\\n                        z = Integer.toString(y/x);\\n                    }\\n                    else{\\n                       z = \"0\";\\n                    }\\n               \\n                    s.push(z);\\n                }\\n            }\\n        }\\n        while(s.peek() == \"*\" || s.peek() == \"+\" || s.peek() == \"/\" || s.peek() == \"-\" ){\\n            s.pop();\\n        }\\n        return Integer.parseInt(s.pop());\\n        //return m;\\n    }\\n     \\n} \\n\\n\\n// still showing wrong output but in other editor it is giving right answer\\nplease help\\n"
                    },
                    {
                        "username": "avi__09",
                        "content": "use tokens[i].equals(\"*\");    \\nuse equals everywhere insteed of =="
                    },
                    {
                        "username": "jallen89",
                        "content": "TIL: `6 // -132 = -1` in Python3."
                    },
                    {
                        "username": "kjoydeep5",
                        "content": "first find operator index(left to right) then previous two number  then insert to arrary\\nloop upto length ==1"
                    },
                    {
                        "username": "ritika_272_",
                        "content": "class Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens)\\n    {\\n        stack<string>st;\\n        int i=0;\\n        //run it till array gets emptied\\n        while(i<tokens.size())\\n        {   // till you encounter an operator, push things into stack\\n            while(tokens[i]!=\"+\" || tokens[i]!=\"-\"|| tokens[i]!=\"*\"|| tokens[i]!=\"/\")\\n            {   \\n                st.push(tokens[i]);\\n                i++;\\n            }\\n            int a,b;\\n            if(!st.empty())\\n            {a=stoi(st.top());\\n            st.pop();}\\n            if(!st.empty())\\n            {\\n             b=stoi(st.top());\\n            st.pop();}\\n            int c=0;\\n            if(tokens[i]==\"+\")\\n            c=a+b;\\n            else if(tokens[i]==\"-\")\\n            c=b-a;\\n            else if(tokens[i]==\"*\")\\n            c=b*a;\\n            else\\n            c=b/a;\\n\\n            //push it back into stack;\\n            st.push(to_string(c));\\n            i++;\\n        }\\n        string str=st.top();\\n        return stoi(str);\\n        \\n    }\\n};\\n\\ncan somebody point out the error"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Ritika](/ritika_272_)\\n\\n```\\n// till you encounter an operator, push things into stack\\nwhile(tokens[i]!=\"+\" || tokens[i]!=\"-\"|| tokens[i]!=\"\"|| tokens[i]!=\"/\")\\n{\\n      st.push(tokens[i]);\\n      i++;\\n}\\n```\\n\\nHere is the MISTAKE , you need to use `&&` (AND) operator but you have used `||` (OR) operator\\n\\n\\nconsider Upvote if it helps :-)"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can someone debug my code \\n\\n// showing error in leetcode but working fine in other code editors\\n\\n Stack<String> s = new Stack<>();\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(tokens[i] != \"+\" && tokens[i] != \"*\"   && tokens[i] != \"/\" && tokens[i] != \"-\")\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y/x);\\n                    s.push(z);\\n                }\\n            }\\n        }\\n        int m = Integer.parseInt(s.peek());\\n        return m;"
                    }
                ]
            },
            {
                "id": 1719490,
                "content": [
                    {
                        "username": "Sohith_Sai",
                        "content": "i got the doubt i have used long long  and succesfully submitted the code but the function return type is in int right shouldn\\'t it raise an error as we have to return int but we are returning long long"
                    },
                    {
                        "username": "Priyanshu_Arya",
                        "content": "https://leetcode.com/problems/evaluate-reverse-polish-notation/solutions/2922263/evaluate-reverse-polish-notation/"
                    },
                    {
                        "username": "chandan_nayak",
                        "content": " `your inline code...your inline code...\\'class Solution {\\n    public int evalRPN(String[] tokens)\\n {\\n      Stack<Integer> arr=new Stack<Integer>();\\n     int a,b,res;\\n     if(tokens.length==0)\\n     {\\n            return 0;\\n     }\\n     else\\n     {\\n\\n        for(int i=0;i<tokens.length;i++)\\n     {\\n        char r=tokens[i].charAt(0);\\n        if(tokens[i].length()!=1)\\n        {\\n            if(r==\\'-\\')\\n            {\\n                r=tokens[i].charAt(1);\\n            }\\n        }\\n        \\n        if(Character.isDigit(r))\\n        {\\n             int n=Integer.parseInt(tokens[i]);\\n             arr.push(n);\\n        }\\n\\n         else\\n         {\\n               char ch=(tokens[i].charAt(0));\\n\\n               switch(ch)\\n               {\\n                   case \\'*\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b*a;\\n                            arr.push(res);\\n                            break;\\n                    case \\'/\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b/a;\\n                            arr.push(res);\\n                            break;\\n                    case \\'+\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b+a;\\n                            arr.push(res);\\n                            break;\\n\\n                    case \\'-\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b-a;\\n                            arr.push(res);\\n                            break;\\n               }\\n         }\\n     }\\n }\\n\\n         return arr.pop();\\n }\\n}"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can somepoint point out the mistake...\\n//leetcode compiler is showing other output \\nbut my other editor is showing the right output\\n\\n\\n\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        \\n         Stack<String> s = new Stack<>();\\n         String s1 = \"+\";\\n         String s2 = \"-\";\\n         String s3 = \"*\";\\n         String s4 = \"/\";\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(!tokens[i].equals(s1) && !tokens[i].equals(s2) && !tokens[i].equals(s3) && !tokens[i].equals(s4) )\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z ;\\n                    if(x !=0){\\n                        z = Integer.toString(y/x);\\n                    }\\n                    else{\\n                       z = \"0\";\\n                    }\\n               \\n                    s.push(z);\\n                }\\n            }\\n        }\\n        while(s.peek() == \"*\" || s.peek() == \"+\" || s.peek() == \"/\" || s.peek() == \"-\" ){\\n            s.pop();\\n        }\\n        return Integer.parseInt(s.pop());\\n        //return m;\\n    }\\n     \\n}"
                    },
                    {
                        "username": "johnsmillie",
                        "content": "[@anmolkhanna2003](/anmolkhanna2003) Thanks for the suggestions. I have run into a similar issue as [@weknewit007](/weknewit007)."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "- you should be using .equals() in place of \"==\", when comparing strings.\n- hardcode your else for tokens[i].equals(\"/\"). \n- There is no need for the while loop at the end either, it will only affect your program's runtime.\n- you can use ArrayDeque in place of Stack as well, it's more performant than Stack in java\n"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "Please help me with this runtime error!\\n\\nMy code is:\\n\\n \\'class Solution {\\n  public: int solve(vector < string > & given) {\\n    string exp = \"\";\\n\\n    /******************************************************/\\n    // THIS PIECE OF CODE MIGHT BE GENERATING THIS ERROR.\\n    for (int i = 0; i < given.size(); i++) {\\n      if (given[i].size() > 1) {\\n\\n        int j = 0;\\n        while (j < given[i].size()) {\\n          exp += given[i][j];\\n          j++;\\n        }\\n      } else exp += (given[i][0]);\\n\\n    }\\n\\n    /******************************************************/\\n    cout << exp;\\n    int i;\\n    stack < int > st;\\n    // \\xA0\\xA0\\xA0st.size()=exp.size();\\n    // \\xA0\\xA0\\xA0\\xA0if (!st.size()) return -1;\\n\\n    for (i = 0; exp[i]; ++i) {\\n\\n      if (exp[i] == \\' \\') continue;\\n\\n      // If the scanned character is an\\n      // operand (number here),extract the full number\\n      // Push it to the stack.\\n      else if (isdigit(exp[i])) {\\n        int num = 0;\\n\\n        //extract full number\\n        while (isdigit(exp[i])) {\\n          num = num * 10 + (int)(exp[i] - \\'0\\');\\n          i++;\\n        }\\n        i--;\\n\\n        //push the element in the stack\\n        st.push(num);\\n      }\\n\\n      // If the scanned character is an operator, pop two\\n      // elements from stack apply the operator\\n      else {\\n        int val1 = st.top();\\n        st.pop();\\n        int val2 = st.top();\\n        st.pop();\\n\\n        switch (exp[i]) {\\n        case \\'+\\':\\n          st.push(val2 + val1);\\n          break;\\n        case \\'-\\':\\n          st.push(val2 - val1);\\n          break;\\n        case \\'*\\':\\n          st.push(val2 * val1);\\n          break;\\n        case \\'/\\':\\n          st.push(val2 / val1);\\n          break;\\n\\n        }\\n      }\\n    }\\n\\n    return st.top();\\n  }\\n  int evalRPN(vector < string > & tokens) {\\n    return solve(tokens);\\n    //    char a=65;\\n\\n    //    return 0;\\n  }\\n};\\'\\n\\n `Runtime Error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16`\\n\\nPlease help me out!"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can someone point me the error\\n//\\n\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<String> s = new Stack<>();\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(tokens[i] != \"+\" && tokens[i] != \"*\"   && tokens[i] != \"/\" && tokens[i] != \"-\")\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y/x);\\n                    s.push(z);\\n                }\\n            }\\n        }\\n        int m = Integer.parseInt(s.peek());\\n        return m;\\n       \\n    }\\n     \\n}"
                    },
                    {
                        "username": "weknewit007",
                        "content": "[@avi_maurya_0926](/avi_maurya_0926) import java.util.*;\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        \\n         Stack<String> s = new Stack<>();\\n         String s1 = \"+\";\\n         String s2 = \"-\";\\n         String s3 = \"*\";\\n         String s4 = \"/\";\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(!tokens[i].equals(s1) && !tokens[i].equals(s2) && !tokens[i].equals(s3) && !tokens[i].equals(s4) )\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z ;\\n                    if(x !=0){\\n                        z = Integer.toString(y/x);\\n                    }\\n                    else{\\n                       z = \"0\";\\n                    }\\n               \\n                    s.push(z);\\n                }\\n            }\\n        }\\n        while(s.peek() == \"*\" || s.peek() == \"+\" || s.peek() == \"/\" || s.peek() == \"-\" ){\\n            s.pop();\\n        }\\n        return Integer.parseInt(s.pop());\\n        //return m;\\n    }\\n     \\n} \\n\\n\\n// still showing wrong output but in other editor it is giving right answer\\nplease help\\n"
                    },
                    {
                        "username": "avi__09",
                        "content": "use tokens[i].equals(\"*\");    \\nuse equals everywhere insteed of =="
                    },
                    {
                        "username": "jallen89",
                        "content": "TIL: `6 // -132 = -1` in Python3."
                    },
                    {
                        "username": "kjoydeep5",
                        "content": "first find operator index(left to right) then previous two number  then insert to arrary\\nloop upto length ==1"
                    },
                    {
                        "username": "ritika_272_",
                        "content": "class Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens)\\n    {\\n        stack<string>st;\\n        int i=0;\\n        //run it till array gets emptied\\n        while(i<tokens.size())\\n        {   // till you encounter an operator, push things into stack\\n            while(tokens[i]!=\"+\" || tokens[i]!=\"-\"|| tokens[i]!=\"*\"|| tokens[i]!=\"/\")\\n            {   \\n                st.push(tokens[i]);\\n                i++;\\n            }\\n            int a,b;\\n            if(!st.empty())\\n            {a=stoi(st.top());\\n            st.pop();}\\n            if(!st.empty())\\n            {\\n             b=stoi(st.top());\\n            st.pop();}\\n            int c=0;\\n            if(tokens[i]==\"+\")\\n            c=a+b;\\n            else if(tokens[i]==\"-\")\\n            c=b-a;\\n            else if(tokens[i]==\"*\")\\n            c=b*a;\\n            else\\n            c=b/a;\\n\\n            //push it back into stack;\\n            st.push(to_string(c));\\n            i++;\\n        }\\n        string str=st.top();\\n        return stoi(str);\\n        \\n    }\\n};\\n\\ncan somebody point out the error"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Ritika](/ritika_272_)\\n\\n```\\n// till you encounter an operator, push things into stack\\nwhile(tokens[i]!=\"+\" || tokens[i]!=\"-\"|| tokens[i]!=\"\"|| tokens[i]!=\"/\")\\n{\\n      st.push(tokens[i]);\\n      i++;\\n}\\n```\\n\\nHere is the MISTAKE , you need to use `&&` (AND) operator but you have used `||` (OR) operator\\n\\n\\nconsider Upvote if it helps :-)"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can someone debug my code \\n\\n// showing error in leetcode but working fine in other code editors\\n\\n Stack<String> s = new Stack<>();\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(tokens[i] != \"+\" && tokens[i] != \"*\"   && tokens[i] != \"/\" && tokens[i] != \"-\")\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y/x);\\n                    s.push(z);\\n                }\\n            }\\n        }\\n        int m = Integer.parseInt(s.peek());\\n        return m;"
                    }
                ]
            },
            {
                "id": 1719463,
                "content": [
                    {
                        "username": "Sohith_Sai",
                        "content": "i got the doubt i have used long long  and succesfully submitted the code but the function return type is in int right shouldn\\'t it raise an error as we have to return int but we are returning long long"
                    },
                    {
                        "username": "Priyanshu_Arya",
                        "content": "https://leetcode.com/problems/evaluate-reverse-polish-notation/solutions/2922263/evaluate-reverse-polish-notation/"
                    },
                    {
                        "username": "chandan_nayak",
                        "content": " `your inline code...your inline code...\\'class Solution {\\n    public int evalRPN(String[] tokens)\\n {\\n      Stack<Integer> arr=new Stack<Integer>();\\n     int a,b,res;\\n     if(tokens.length==0)\\n     {\\n            return 0;\\n     }\\n     else\\n     {\\n\\n        for(int i=0;i<tokens.length;i++)\\n     {\\n        char r=tokens[i].charAt(0);\\n        if(tokens[i].length()!=1)\\n        {\\n            if(r==\\'-\\')\\n            {\\n                r=tokens[i].charAt(1);\\n            }\\n        }\\n        \\n        if(Character.isDigit(r))\\n        {\\n             int n=Integer.parseInt(tokens[i]);\\n             arr.push(n);\\n        }\\n\\n         else\\n         {\\n               char ch=(tokens[i].charAt(0));\\n\\n               switch(ch)\\n               {\\n                   case \\'*\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b*a;\\n                            arr.push(res);\\n                            break;\\n                    case \\'/\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b/a;\\n                            arr.push(res);\\n                            break;\\n                    case \\'+\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b+a;\\n                            arr.push(res);\\n                            break;\\n\\n                    case \\'-\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b-a;\\n                            arr.push(res);\\n                            break;\\n               }\\n         }\\n     }\\n }\\n\\n         return arr.pop();\\n }\\n}"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can somepoint point out the mistake...\\n//leetcode compiler is showing other output \\nbut my other editor is showing the right output\\n\\n\\n\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        \\n         Stack<String> s = new Stack<>();\\n         String s1 = \"+\";\\n         String s2 = \"-\";\\n         String s3 = \"*\";\\n         String s4 = \"/\";\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(!tokens[i].equals(s1) && !tokens[i].equals(s2) && !tokens[i].equals(s3) && !tokens[i].equals(s4) )\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z ;\\n                    if(x !=0){\\n                        z = Integer.toString(y/x);\\n                    }\\n                    else{\\n                       z = \"0\";\\n                    }\\n               \\n                    s.push(z);\\n                }\\n            }\\n        }\\n        while(s.peek() == \"*\" || s.peek() == \"+\" || s.peek() == \"/\" || s.peek() == \"-\" ){\\n            s.pop();\\n        }\\n        return Integer.parseInt(s.pop());\\n        //return m;\\n    }\\n     \\n}"
                    },
                    {
                        "username": "johnsmillie",
                        "content": "[@anmolkhanna2003](/anmolkhanna2003) Thanks for the suggestions. I have run into a similar issue as [@weknewit007](/weknewit007)."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "- you should be using .equals() in place of \"==\", when comparing strings.\n- hardcode your else for tokens[i].equals(\"/\"). \n- There is no need for the while loop at the end either, it will only affect your program's runtime.\n- you can use ArrayDeque in place of Stack as well, it's more performant than Stack in java\n"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "Please help me with this runtime error!\\n\\nMy code is:\\n\\n \\'class Solution {\\n  public: int solve(vector < string > & given) {\\n    string exp = \"\";\\n\\n    /******************************************************/\\n    // THIS PIECE OF CODE MIGHT BE GENERATING THIS ERROR.\\n    for (int i = 0; i < given.size(); i++) {\\n      if (given[i].size() > 1) {\\n\\n        int j = 0;\\n        while (j < given[i].size()) {\\n          exp += given[i][j];\\n          j++;\\n        }\\n      } else exp += (given[i][0]);\\n\\n    }\\n\\n    /******************************************************/\\n    cout << exp;\\n    int i;\\n    stack < int > st;\\n    // \\xA0\\xA0\\xA0st.size()=exp.size();\\n    // \\xA0\\xA0\\xA0\\xA0if (!st.size()) return -1;\\n\\n    for (i = 0; exp[i]; ++i) {\\n\\n      if (exp[i] == \\' \\') continue;\\n\\n      // If the scanned character is an\\n      // operand (number here),extract the full number\\n      // Push it to the stack.\\n      else if (isdigit(exp[i])) {\\n        int num = 0;\\n\\n        //extract full number\\n        while (isdigit(exp[i])) {\\n          num = num * 10 + (int)(exp[i] - \\'0\\');\\n          i++;\\n        }\\n        i--;\\n\\n        //push the element in the stack\\n        st.push(num);\\n      }\\n\\n      // If the scanned character is an operator, pop two\\n      // elements from stack apply the operator\\n      else {\\n        int val1 = st.top();\\n        st.pop();\\n        int val2 = st.top();\\n        st.pop();\\n\\n        switch (exp[i]) {\\n        case \\'+\\':\\n          st.push(val2 + val1);\\n          break;\\n        case \\'-\\':\\n          st.push(val2 - val1);\\n          break;\\n        case \\'*\\':\\n          st.push(val2 * val1);\\n          break;\\n        case \\'/\\':\\n          st.push(val2 / val1);\\n          break;\\n\\n        }\\n      }\\n    }\\n\\n    return st.top();\\n  }\\n  int evalRPN(vector < string > & tokens) {\\n    return solve(tokens);\\n    //    char a=65;\\n\\n    //    return 0;\\n  }\\n};\\'\\n\\n `Runtime Error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16`\\n\\nPlease help me out!"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can someone point me the error\\n//\\n\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<String> s = new Stack<>();\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(tokens[i] != \"+\" && tokens[i] != \"*\"   && tokens[i] != \"/\" && tokens[i] != \"-\")\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y/x);\\n                    s.push(z);\\n                }\\n            }\\n        }\\n        int m = Integer.parseInt(s.peek());\\n        return m;\\n       \\n    }\\n     \\n}"
                    },
                    {
                        "username": "weknewit007",
                        "content": "[@avi_maurya_0926](/avi_maurya_0926) import java.util.*;\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        \\n         Stack<String> s = new Stack<>();\\n         String s1 = \"+\";\\n         String s2 = \"-\";\\n         String s3 = \"*\";\\n         String s4 = \"/\";\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(!tokens[i].equals(s1) && !tokens[i].equals(s2) && !tokens[i].equals(s3) && !tokens[i].equals(s4) )\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z ;\\n                    if(x !=0){\\n                        z = Integer.toString(y/x);\\n                    }\\n                    else{\\n                       z = \"0\";\\n                    }\\n               \\n                    s.push(z);\\n                }\\n            }\\n        }\\n        while(s.peek() == \"*\" || s.peek() == \"+\" || s.peek() == \"/\" || s.peek() == \"-\" ){\\n            s.pop();\\n        }\\n        return Integer.parseInt(s.pop());\\n        //return m;\\n    }\\n     \\n} \\n\\n\\n// still showing wrong output but in other editor it is giving right answer\\nplease help\\n"
                    },
                    {
                        "username": "avi__09",
                        "content": "use tokens[i].equals(\"*\");    \\nuse equals everywhere insteed of =="
                    },
                    {
                        "username": "jallen89",
                        "content": "TIL: `6 // -132 = -1` in Python3."
                    },
                    {
                        "username": "kjoydeep5",
                        "content": "first find operator index(left to right) then previous two number  then insert to arrary\\nloop upto length ==1"
                    },
                    {
                        "username": "ritika_272_",
                        "content": "class Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens)\\n    {\\n        stack<string>st;\\n        int i=0;\\n        //run it till array gets emptied\\n        while(i<tokens.size())\\n        {   // till you encounter an operator, push things into stack\\n            while(tokens[i]!=\"+\" || tokens[i]!=\"-\"|| tokens[i]!=\"*\"|| tokens[i]!=\"/\")\\n            {   \\n                st.push(tokens[i]);\\n                i++;\\n            }\\n            int a,b;\\n            if(!st.empty())\\n            {a=stoi(st.top());\\n            st.pop();}\\n            if(!st.empty())\\n            {\\n             b=stoi(st.top());\\n            st.pop();}\\n            int c=0;\\n            if(tokens[i]==\"+\")\\n            c=a+b;\\n            else if(tokens[i]==\"-\")\\n            c=b-a;\\n            else if(tokens[i]==\"*\")\\n            c=b*a;\\n            else\\n            c=b/a;\\n\\n            //push it back into stack;\\n            st.push(to_string(c));\\n            i++;\\n        }\\n        string str=st.top();\\n        return stoi(str);\\n        \\n    }\\n};\\n\\ncan somebody point out the error"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Ritika](/ritika_272_)\\n\\n```\\n// till you encounter an operator, push things into stack\\nwhile(tokens[i]!=\"+\" || tokens[i]!=\"-\"|| tokens[i]!=\"\"|| tokens[i]!=\"/\")\\n{\\n      st.push(tokens[i]);\\n      i++;\\n}\\n```\\n\\nHere is the MISTAKE , you need to use `&&` (AND) operator but you have used `||` (OR) operator\\n\\n\\nconsider Upvote if it helps :-)"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can someone debug my code \\n\\n// showing error in leetcode but working fine in other code editors\\n\\n Stack<String> s = new Stack<>();\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(tokens[i] != \"+\" && tokens[i] != \"*\"   && tokens[i] != \"/\" && tokens[i] != \"-\")\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y/x);\\n                    s.push(z);\\n                }\\n            }\\n        }\\n        int m = Integer.parseInt(s.peek());\\n        return m;"
                    }
                ]
            },
            {
                "id": 1719431,
                "content": [
                    {
                        "username": "Sohith_Sai",
                        "content": "i got the doubt i have used long long  and succesfully submitted the code but the function return type is in int right shouldn\\'t it raise an error as we have to return int but we are returning long long"
                    },
                    {
                        "username": "Priyanshu_Arya",
                        "content": "https://leetcode.com/problems/evaluate-reverse-polish-notation/solutions/2922263/evaluate-reverse-polish-notation/"
                    },
                    {
                        "username": "chandan_nayak",
                        "content": " `your inline code...your inline code...\\'class Solution {\\n    public int evalRPN(String[] tokens)\\n {\\n      Stack<Integer> arr=new Stack<Integer>();\\n     int a,b,res;\\n     if(tokens.length==0)\\n     {\\n            return 0;\\n     }\\n     else\\n     {\\n\\n        for(int i=0;i<tokens.length;i++)\\n     {\\n        char r=tokens[i].charAt(0);\\n        if(tokens[i].length()!=1)\\n        {\\n            if(r==\\'-\\')\\n            {\\n                r=tokens[i].charAt(1);\\n            }\\n        }\\n        \\n        if(Character.isDigit(r))\\n        {\\n             int n=Integer.parseInt(tokens[i]);\\n             arr.push(n);\\n        }\\n\\n         else\\n         {\\n               char ch=(tokens[i].charAt(0));\\n\\n               switch(ch)\\n               {\\n                   case \\'*\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b*a;\\n                            arr.push(res);\\n                            break;\\n                    case \\'/\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b/a;\\n                            arr.push(res);\\n                            break;\\n                    case \\'+\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b+a;\\n                            arr.push(res);\\n                            break;\\n\\n                    case \\'-\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b-a;\\n                            arr.push(res);\\n                            break;\\n               }\\n         }\\n     }\\n }\\n\\n         return arr.pop();\\n }\\n}"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can somepoint point out the mistake...\\n//leetcode compiler is showing other output \\nbut my other editor is showing the right output\\n\\n\\n\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        \\n         Stack<String> s = new Stack<>();\\n         String s1 = \"+\";\\n         String s2 = \"-\";\\n         String s3 = \"*\";\\n         String s4 = \"/\";\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(!tokens[i].equals(s1) && !tokens[i].equals(s2) && !tokens[i].equals(s3) && !tokens[i].equals(s4) )\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z ;\\n                    if(x !=0){\\n                        z = Integer.toString(y/x);\\n                    }\\n                    else{\\n                       z = \"0\";\\n                    }\\n               \\n                    s.push(z);\\n                }\\n            }\\n        }\\n        while(s.peek() == \"*\" || s.peek() == \"+\" || s.peek() == \"/\" || s.peek() == \"-\" ){\\n            s.pop();\\n        }\\n        return Integer.parseInt(s.pop());\\n        //return m;\\n    }\\n     \\n}"
                    },
                    {
                        "username": "johnsmillie",
                        "content": "[@anmolkhanna2003](/anmolkhanna2003) Thanks for the suggestions. I have run into a similar issue as [@weknewit007](/weknewit007)."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "- you should be using .equals() in place of \"==\", when comparing strings.\n- hardcode your else for tokens[i].equals(\"/\"). \n- There is no need for the while loop at the end either, it will only affect your program's runtime.\n- you can use ArrayDeque in place of Stack as well, it's more performant than Stack in java\n"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "Please help me with this runtime error!\\n\\nMy code is:\\n\\n \\'class Solution {\\n  public: int solve(vector < string > & given) {\\n    string exp = \"\";\\n\\n    /******************************************************/\\n    // THIS PIECE OF CODE MIGHT BE GENERATING THIS ERROR.\\n    for (int i = 0; i < given.size(); i++) {\\n      if (given[i].size() > 1) {\\n\\n        int j = 0;\\n        while (j < given[i].size()) {\\n          exp += given[i][j];\\n          j++;\\n        }\\n      } else exp += (given[i][0]);\\n\\n    }\\n\\n    /******************************************************/\\n    cout << exp;\\n    int i;\\n    stack < int > st;\\n    // \\xA0\\xA0\\xA0st.size()=exp.size();\\n    // \\xA0\\xA0\\xA0\\xA0if (!st.size()) return -1;\\n\\n    for (i = 0; exp[i]; ++i) {\\n\\n      if (exp[i] == \\' \\') continue;\\n\\n      // If the scanned character is an\\n      // operand (number here),extract the full number\\n      // Push it to the stack.\\n      else if (isdigit(exp[i])) {\\n        int num = 0;\\n\\n        //extract full number\\n        while (isdigit(exp[i])) {\\n          num = num * 10 + (int)(exp[i] - \\'0\\');\\n          i++;\\n        }\\n        i--;\\n\\n        //push the element in the stack\\n        st.push(num);\\n      }\\n\\n      // If the scanned character is an operator, pop two\\n      // elements from stack apply the operator\\n      else {\\n        int val1 = st.top();\\n        st.pop();\\n        int val2 = st.top();\\n        st.pop();\\n\\n        switch (exp[i]) {\\n        case \\'+\\':\\n          st.push(val2 + val1);\\n          break;\\n        case \\'-\\':\\n          st.push(val2 - val1);\\n          break;\\n        case \\'*\\':\\n          st.push(val2 * val1);\\n          break;\\n        case \\'/\\':\\n          st.push(val2 / val1);\\n          break;\\n\\n        }\\n      }\\n    }\\n\\n    return st.top();\\n  }\\n  int evalRPN(vector < string > & tokens) {\\n    return solve(tokens);\\n    //    char a=65;\\n\\n    //    return 0;\\n  }\\n};\\'\\n\\n `Runtime Error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16`\\n\\nPlease help me out!"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can someone point me the error\\n//\\n\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<String> s = new Stack<>();\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(tokens[i] != \"+\" && tokens[i] != \"*\"   && tokens[i] != \"/\" && tokens[i] != \"-\")\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y/x);\\n                    s.push(z);\\n                }\\n            }\\n        }\\n        int m = Integer.parseInt(s.peek());\\n        return m;\\n       \\n    }\\n     \\n}"
                    },
                    {
                        "username": "weknewit007",
                        "content": "[@avi_maurya_0926](/avi_maurya_0926) import java.util.*;\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        \\n         Stack<String> s = new Stack<>();\\n         String s1 = \"+\";\\n         String s2 = \"-\";\\n         String s3 = \"*\";\\n         String s4 = \"/\";\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(!tokens[i].equals(s1) && !tokens[i].equals(s2) && !tokens[i].equals(s3) && !tokens[i].equals(s4) )\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z ;\\n                    if(x !=0){\\n                        z = Integer.toString(y/x);\\n                    }\\n                    else{\\n                       z = \"0\";\\n                    }\\n               \\n                    s.push(z);\\n                }\\n            }\\n        }\\n        while(s.peek() == \"*\" || s.peek() == \"+\" || s.peek() == \"/\" || s.peek() == \"-\" ){\\n            s.pop();\\n        }\\n        return Integer.parseInt(s.pop());\\n        //return m;\\n    }\\n     \\n} \\n\\n\\n// still showing wrong output but in other editor it is giving right answer\\nplease help\\n"
                    },
                    {
                        "username": "avi__09",
                        "content": "use tokens[i].equals(\"*\");    \\nuse equals everywhere insteed of =="
                    },
                    {
                        "username": "jallen89",
                        "content": "TIL: `6 // -132 = -1` in Python3."
                    },
                    {
                        "username": "kjoydeep5",
                        "content": "first find operator index(left to right) then previous two number  then insert to arrary\\nloop upto length ==1"
                    },
                    {
                        "username": "ritika_272_",
                        "content": "class Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens)\\n    {\\n        stack<string>st;\\n        int i=0;\\n        //run it till array gets emptied\\n        while(i<tokens.size())\\n        {   // till you encounter an operator, push things into stack\\n            while(tokens[i]!=\"+\" || tokens[i]!=\"-\"|| tokens[i]!=\"*\"|| tokens[i]!=\"/\")\\n            {   \\n                st.push(tokens[i]);\\n                i++;\\n            }\\n            int a,b;\\n            if(!st.empty())\\n            {a=stoi(st.top());\\n            st.pop();}\\n            if(!st.empty())\\n            {\\n             b=stoi(st.top());\\n            st.pop();}\\n            int c=0;\\n            if(tokens[i]==\"+\")\\n            c=a+b;\\n            else if(tokens[i]==\"-\")\\n            c=b-a;\\n            else if(tokens[i]==\"*\")\\n            c=b*a;\\n            else\\n            c=b/a;\\n\\n            //push it back into stack;\\n            st.push(to_string(c));\\n            i++;\\n        }\\n        string str=st.top();\\n        return stoi(str);\\n        \\n    }\\n};\\n\\ncan somebody point out the error"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Ritika](/ritika_272_)\\n\\n```\\n// till you encounter an operator, push things into stack\\nwhile(tokens[i]!=\"+\" || tokens[i]!=\"-\"|| tokens[i]!=\"\"|| tokens[i]!=\"/\")\\n{\\n      st.push(tokens[i]);\\n      i++;\\n}\\n```\\n\\nHere is the MISTAKE , you need to use `&&` (AND) operator but you have used `||` (OR) operator\\n\\n\\nconsider Upvote if it helps :-)"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can someone debug my code \\n\\n// showing error in leetcode but working fine in other code editors\\n\\n Stack<String> s = new Stack<>();\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(tokens[i] != \"+\" && tokens[i] != \"*\"   && tokens[i] != \"/\" && tokens[i] != \"-\")\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y/x);\\n                    s.push(z);\\n                }\\n            }\\n        }\\n        int m = Integer.parseInt(s.peek());\\n        return m;"
                    }
                ]
            },
            {
                "id": 1719388,
                "content": [
                    {
                        "username": "Sohith_Sai",
                        "content": "i got the doubt i have used long long  and succesfully submitted the code but the function return type is in int right shouldn\\'t it raise an error as we have to return int but we are returning long long"
                    },
                    {
                        "username": "Priyanshu_Arya",
                        "content": "https://leetcode.com/problems/evaluate-reverse-polish-notation/solutions/2922263/evaluate-reverse-polish-notation/"
                    },
                    {
                        "username": "chandan_nayak",
                        "content": " `your inline code...your inline code...\\'class Solution {\\n    public int evalRPN(String[] tokens)\\n {\\n      Stack<Integer> arr=new Stack<Integer>();\\n     int a,b,res;\\n     if(tokens.length==0)\\n     {\\n            return 0;\\n     }\\n     else\\n     {\\n\\n        for(int i=0;i<tokens.length;i++)\\n     {\\n        char r=tokens[i].charAt(0);\\n        if(tokens[i].length()!=1)\\n        {\\n            if(r==\\'-\\')\\n            {\\n                r=tokens[i].charAt(1);\\n            }\\n        }\\n        \\n        if(Character.isDigit(r))\\n        {\\n             int n=Integer.parseInt(tokens[i]);\\n             arr.push(n);\\n        }\\n\\n         else\\n         {\\n               char ch=(tokens[i].charAt(0));\\n\\n               switch(ch)\\n               {\\n                   case \\'*\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b*a;\\n                            arr.push(res);\\n                            break;\\n                    case \\'/\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b/a;\\n                            arr.push(res);\\n                            break;\\n                    case \\'+\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b+a;\\n                            arr.push(res);\\n                            break;\\n\\n                    case \\'-\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b-a;\\n                            arr.push(res);\\n                            break;\\n               }\\n         }\\n     }\\n }\\n\\n         return arr.pop();\\n }\\n}"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can somepoint point out the mistake...\\n//leetcode compiler is showing other output \\nbut my other editor is showing the right output\\n\\n\\n\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        \\n         Stack<String> s = new Stack<>();\\n         String s1 = \"+\";\\n         String s2 = \"-\";\\n         String s3 = \"*\";\\n         String s4 = \"/\";\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(!tokens[i].equals(s1) && !tokens[i].equals(s2) && !tokens[i].equals(s3) && !tokens[i].equals(s4) )\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z ;\\n                    if(x !=0){\\n                        z = Integer.toString(y/x);\\n                    }\\n                    else{\\n                       z = \"0\";\\n                    }\\n               \\n                    s.push(z);\\n                }\\n            }\\n        }\\n        while(s.peek() == \"*\" || s.peek() == \"+\" || s.peek() == \"/\" || s.peek() == \"-\" ){\\n            s.pop();\\n        }\\n        return Integer.parseInt(s.pop());\\n        //return m;\\n    }\\n     \\n}"
                    },
                    {
                        "username": "johnsmillie",
                        "content": "[@anmolkhanna2003](/anmolkhanna2003) Thanks for the suggestions. I have run into a similar issue as [@weknewit007](/weknewit007)."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "- you should be using .equals() in place of \"==\", when comparing strings.\n- hardcode your else for tokens[i].equals(\"/\"). \n- There is no need for the while loop at the end either, it will only affect your program's runtime.\n- you can use ArrayDeque in place of Stack as well, it's more performant than Stack in java\n"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "Please help me with this runtime error!\\n\\nMy code is:\\n\\n \\'class Solution {\\n  public: int solve(vector < string > & given) {\\n    string exp = \"\";\\n\\n    /******************************************************/\\n    // THIS PIECE OF CODE MIGHT BE GENERATING THIS ERROR.\\n    for (int i = 0; i < given.size(); i++) {\\n      if (given[i].size() > 1) {\\n\\n        int j = 0;\\n        while (j < given[i].size()) {\\n          exp += given[i][j];\\n          j++;\\n        }\\n      } else exp += (given[i][0]);\\n\\n    }\\n\\n    /******************************************************/\\n    cout << exp;\\n    int i;\\n    stack < int > st;\\n    // \\xA0\\xA0\\xA0st.size()=exp.size();\\n    // \\xA0\\xA0\\xA0\\xA0if (!st.size()) return -1;\\n\\n    for (i = 0; exp[i]; ++i) {\\n\\n      if (exp[i] == \\' \\') continue;\\n\\n      // If the scanned character is an\\n      // operand (number here),extract the full number\\n      // Push it to the stack.\\n      else if (isdigit(exp[i])) {\\n        int num = 0;\\n\\n        //extract full number\\n        while (isdigit(exp[i])) {\\n          num = num * 10 + (int)(exp[i] - \\'0\\');\\n          i++;\\n        }\\n        i--;\\n\\n        //push the element in the stack\\n        st.push(num);\\n      }\\n\\n      // If the scanned character is an operator, pop two\\n      // elements from stack apply the operator\\n      else {\\n        int val1 = st.top();\\n        st.pop();\\n        int val2 = st.top();\\n        st.pop();\\n\\n        switch (exp[i]) {\\n        case \\'+\\':\\n          st.push(val2 + val1);\\n          break;\\n        case \\'-\\':\\n          st.push(val2 - val1);\\n          break;\\n        case \\'*\\':\\n          st.push(val2 * val1);\\n          break;\\n        case \\'/\\':\\n          st.push(val2 / val1);\\n          break;\\n\\n        }\\n      }\\n    }\\n\\n    return st.top();\\n  }\\n  int evalRPN(vector < string > & tokens) {\\n    return solve(tokens);\\n    //    char a=65;\\n\\n    //    return 0;\\n  }\\n};\\'\\n\\n `Runtime Error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16`\\n\\nPlease help me out!"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can someone point me the error\\n//\\n\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<String> s = new Stack<>();\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(tokens[i] != \"+\" && tokens[i] != \"*\"   && tokens[i] != \"/\" && tokens[i] != \"-\")\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y/x);\\n                    s.push(z);\\n                }\\n            }\\n        }\\n        int m = Integer.parseInt(s.peek());\\n        return m;\\n       \\n    }\\n     \\n}"
                    },
                    {
                        "username": "weknewit007",
                        "content": "[@avi_maurya_0926](/avi_maurya_0926) import java.util.*;\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        \\n         Stack<String> s = new Stack<>();\\n         String s1 = \"+\";\\n         String s2 = \"-\";\\n         String s3 = \"*\";\\n         String s4 = \"/\";\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(!tokens[i].equals(s1) && !tokens[i].equals(s2) && !tokens[i].equals(s3) && !tokens[i].equals(s4) )\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z ;\\n                    if(x !=0){\\n                        z = Integer.toString(y/x);\\n                    }\\n                    else{\\n                       z = \"0\";\\n                    }\\n               \\n                    s.push(z);\\n                }\\n            }\\n        }\\n        while(s.peek() == \"*\" || s.peek() == \"+\" || s.peek() == \"/\" || s.peek() == \"-\" ){\\n            s.pop();\\n        }\\n        return Integer.parseInt(s.pop());\\n        //return m;\\n    }\\n     \\n} \\n\\n\\n// still showing wrong output but in other editor it is giving right answer\\nplease help\\n"
                    },
                    {
                        "username": "avi__09",
                        "content": "use tokens[i].equals(\"*\");    \\nuse equals everywhere insteed of =="
                    },
                    {
                        "username": "jallen89",
                        "content": "TIL: `6 // -132 = -1` in Python3."
                    },
                    {
                        "username": "kjoydeep5",
                        "content": "first find operator index(left to right) then previous two number  then insert to arrary\\nloop upto length ==1"
                    },
                    {
                        "username": "ritika_272_",
                        "content": "class Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens)\\n    {\\n        stack<string>st;\\n        int i=0;\\n        //run it till array gets emptied\\n        while(i<tokens.size())\\n        {   // till you encounter an operator, push things into stack\\n            while(tokens[i]!=\"+\" || tokens[i]!=\"-\"|| tokens[i]!=\"*\"|| tokens[i]!=\"/\")\\n            {   \\n                st.push(tokens[i]);\\n                i++;\\n            }\\n            int a,b;\\n            if(!st.empty())\\n            {a=stoi(st.top());\\n            st.pop();}\\n            if(!st.empty())\\n            {\\n             b=stoi(st.top());\\n            st.pop();}\\n            int c=0;\\n            if(tokens[i]==\"+\")\\n            c=a+b;\\n            else if(tokens[i]==\"-\")\\n            c=b-a;\\n            else if(tokens[i]==\"*\")\\n            c=b*a;\\n            else\\n            c=b/a;\\n\\n            //push it back into stack;\\n            st.push(to_string(c));\\n            i++;\\n        }\\n        string str=st.top();\\n        return stoi(str);\\n        \\n    }\\n};\\n\\ncan somebody point out the error"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Ritika](/ritika_272_)\\n\\n```\\n// till you encounter an operator, push things into stack\\nwhile(tokens[i]!=\"+\" || tokens[i]!=\"-\"|| tokens[i]!=\"\"|| tokens[i]!=\"/\")\\n{\\n      st.push(tokens[i]);\\n      i++;\\n}\\n```\\n\\nHere is the MISTAKE , you need to use `&&` (AND) operator but you have used `||` (OR) operator\\n\\n\\nconsider Upvote if it helps :-)"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can someone debug my code \\n\\n// showing error in leetcode but working fine in other code editors\\n\\n Stack<String> s = new Stack<>();\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(tokens[i] != \"+\" && tokens[i] != \"*\"   && tokens[i] != \"/\" && tokens[i] != \"-\")\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y/x);\\n                    s.push(z);\\n                }\\n            }\\n        }\\n        int m = Integer.parseInt(s.peek());\\n        return m;"
                    }
                ]
            },
            {
                "id": 1719373,
                "content": [
                    {
                        "username": "Sohith_Sai",
                        "content": "i got the doubt i have used long long  and succesfully submitted the code but the function return type is in int right shouldn\\'t it raise an error as we have to return int but we are returning long long"
                    },
                    {
                        "username": "Priyanshu_Arya",
                        "content": "https://leetcode.com/problems/evaluate-reverse-polish-notation/solutions/2922263/evaluate-reverse-polish-notation/"
                    },
                    {
                        "username": "chandan_nayak",
                        "content": " `your inline code...your inline code...\\'class Solution {\\n    public int evalRPN(String[] tokens)\\n {\\n      Stack<Integer> arr=new Stack<Integer>();\\n     int a,b,res;\\n     if(tokens.length==0)\\n     {\\n            return 0;\\n     }\\n     else\\n     {\\n\\n        for(int i=0;i<tokens.length;i++)\\n     {\\n        char r=tokens[i].charAt(0);\\n        if(tokens[i].length()!=1)\\n        {\\n            if(r==\\'-\\')\\n            {\\n                r=tokens[i].charAt(1);\\n            }\\n        }\\n        \\n        if(Character.isDigit(r))\\n        {\\n             int n=Integer.parseInt(tokens[i]);\\n             arr.push(n);\\n        }\\n\\n         else\\n         {\\n               char ch=(tokens[i].charAt(0));\\n\\n               switch(ch)\\n               {\\n                   case \\'*\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b*a;\\n                            arr.push(res);\\n                            break;\\n                    case \\'/\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b/a;\\n                            arr.push(res);\\n                            break;\\n                    case \\'+\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b+a;\\n                            arr.push(res);\\n                            break;\\n\\n                    case \\'-\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b-a;\\n                            arr.push(res);\\n                            break;\\n               }\\n         }\\n     }\\n }\\n\\n         return arr.pop();\\n }\\n}"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can somepoint point out the mistake...\\n//leetcode compiler is showing other output \\nbut my other editor is showing the right output\\n\\n\\n\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        \\n         Stack<String> s = new Stack<>();\\n         String s1 = \"+\";\\n         String s2 = \"-\";\\n         String s3 = \"*\";\\n         String s4 = \"/\";\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(!tokens[i].equals(s1) && !tokens[i].equals(s2) && !tokens[i].equals(s3) && !tokens[i].equals(s4) )\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z ;\\n                    if(x !=0){\\n                        z = Integer.toString(y/x);\\n                    }\\n                    else{\\n                       z = \"0\";\\n                    }\\n               \\n                    s.push(z);\\n                }\\n            }\\n        }\\n        while(s.peek() == \"*\" || s.peek() == \"+\" || s.peek() == \"/\" || s.peek() == \"-\" ){\\n            s.pop();\\n        }\\n        return Integer.parseInt(s.pop());\\n        //return m;\\n    }\\n     \\n}"
                    },
                    {
                        "username": "johnsmillie",
                        "content": "[@anmolkhanna2003](/anmolkhanna2003) Thanks for the suggestions. I have run into a similar issue as [@weknewit007](/weknewit007)."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "- you should be using .equals() in place of \"==\", when comparing strings.\n- hardcode your else for tokens[i].equals(\"/\"). \n- There is no need for the while loop at the end either, it will only affect your program's runtime.\n- you can use ArrayDeque in place of Stack as well, it's more performant than Stack in java\n"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "Please help me with this runtime error!\\n\\nMy code is:\\n\\n \\'class Solution {\\n  public: int solve(vector < string > & given) {\\n    string exp = \"\";\\n\\n    /******************************************************/\\n    // THIS PIECE OF CODE MIGHT BE GENERATING THIS ERROR.\\n    for (int i = 0; i < given.size(); i++) {\\n      if (given[i].size() > 1) {\\n\\n        int j = 0;\\n        while (j < given[i].size()) {\\n          exp += given[i][j];\\n          j++;\\n        }\\n      } else exp += (given[i][0]);\\n\\n    }\\n\\n    /******************************************************/\\n    cout << exp;\\n    int i;\\n    stack < int > st;\\n    // \\xA0\\xA0\\xA0st.size()=exp.size();\\n    // \\xA0\\xA0\\xA0\\xA0if (!st.size()) return -1;\\n\\n    for (i = 0; exp[i]; ++i) {\\n\\n      if (exp[i] == \\' \\') continue;\\n\\n      // If the scanned character is an\\n      // operand (number here),extract the full number\\n      // Push it to the stack.\\n      else if (isdigit(exp[i])) {\\n        int num = 0;\\n\\n        //extract full number\\n        while (isdigit(exp[i])) {\\n          num = num * 10 + (int)(exp[i] - \\'0\\');\\n          i++;\\n        }\\n        i--;\\n\\n        //push the element in the stack\\n        st.push(num);\\n      }\\n\\n      // If the scanned character is an operator, pop two\\n      // elements from stack apply the operator\\n      else {\\n        int val1 = st.top();\\n        st.pop();\\n        int val2 = st.top();\\n        st.pop();\\n\\n        switch (exp[i]) {\\n        case \\'+\\':\\n          st.push(val2 + val1);\\n          break;\\n        case \\'-\\':\\n          st.push(val2 - val1);\\n          break;\\n        case \\'*\\':\\n          st.push(val2 * val1);\\n          break;\\n        case \\'/\\':\\n          st.push(val2 / val1);\\n          break;\\n\\n        }\\n      }\\n    }\\n\\n    return st.top();\\n  }\\n  int evalRPN(vector < string > & tokens) {\\n    return solve(tokens);\\n    //    char a=65;\\n\\n    //    return 0;\\n  }\\n};\\'\\n\\n `Runtime Error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16`\\n\\nPlease help me out!"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can someone point me the error\\n//\\n\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<String> s = new Stack<>();\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(tokens[i] != \"+\" && tokens[i] != \"*\"   && tokens[i] != \"/\" && tokens[i] != \"-\")\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y/x);\\n                    s.push(z);\\n                }\\n            }\\n        }\\n        int m = Integer.parseInt(s.peek());\\n        return m;\\n       \\n    }\\n     \\n}"
                    },
                    {
                        "username": "weknewit007",
                        "content": "[@avi_maurya_0926](/avi_maurya_0926) import java.util.*;\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        \\n         Stack<String> s = new Stack<>();\\n         String s1 = \"+\";\\n         String s2 = \"-\";\\n         String s3 = \"*\";\\n         String s4 = \"/\";\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(!tokens[i].equals(s1) && !tokens[i].equals(s2) && !tokens[i].equals(s3) && !tokens[i].equals(s4) )\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z ;\\n                    if(x !=0){\\n                        z = Integer.toString(y/x);\\n                    }\\n                    else{\\n                       z = \"0\";\\n                    }\\n               \\n                    s.push(z);\\n                }\\n            }\\n        }\\n        while(s.peek() == \"*\" || s.peek() == \"+\" || s.peek() == \"/\" || s.peek() == \"-\" ){\\n            s.pop();\\n        }\\n        return Integer.parseInt(s.pop());\\n        //return m;\\n    }\\n     \\n} \\n\\n\\n// still showing wrong output but in other editor it is giving right answer\\nplease help\\n"
                    },
                    {
                        "username": "avi__09",
                        "content": "use tokens[i].equals(\"*\");    \\nuse equals everywhere insteed of =="
                    },
                    {
                        "username": "jallen89",
                        "content": "TIL: `6 // -132 = -1` in Python3."
                    },
                    {
                        "username": "kjoydeep5",
                        "content": "first find operator index(left to right) then previous two number  then insert to arrary\\nloop upto length ==1"
                    },
                    {
                        "username": "ritika_272_",
                        "content": "class Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens)\\n    {\\n        stack<string>st;\\n        int i=0;\\n        //run it till array gets emptied\\n        while(i<tokens.size())\\n        {   // till you encounter an operator, push things into stack\\n            while(tokens[i]!=\"+\" || tokens[i]!=\"-\"|| tokens[i]!=\"*\"|| tokens[i]!=\"/\")\\n            {   \\n                st.push(tokens[i]);\\n                i++;\\n            }\\n            int a,b;\\n            if(!st.empty())\\n            {a=stoi(st.top());\\n            st.pop();}\\n            if(!st.empty())\\n            {\\n             b=stoi(st.top());\\n            st.pop();}\\n            int c=0;\\n            if(tokens[i]==\"+\")\\n            c=a+b;\\n            else if(tokens[i]==\"-\")\\n            c=b-a;\\n            else if(tokens[i]==\"*\")\\n            c=b*a;\\n            else\\n            c=b/a;\\n\\n            //push it back into stack;\\n            st.push(to_string(c));\\n            i++;\\n        }\\n        string str=st.top();\\n        return stoi(str);\\n        \\n    }\\n};\\n\\ncan somebody point out the error"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Ritika](/ritika_272_)\\n\\n```\\n// till you encounter an operator, push things into stack\\nwhile(tokens[i]!=\"+\" || tokens[i]!=\"-\"|| tokens[i]!=\"\"|| tokens[i]!=\"/\")\\n{\\n      st.push(tokens[i]);\\n      i++;\\n}\\n```\\n\\nHere is the MISTAKE , you need to use `&&` (AND) operator but you have used `||` (OR) operator\\n\\n\\nconsider Upvote if it helps :-)"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can someone debug my code \\n\\n// showing error in leetcode but working fine in other code editors\\n\\n Stack<String> s = new Stack<>();\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(tokens[i] != \"+\" && tokens[i] != \"*\"   && tokens[i] != \"/\" && tokens[i] != \"-\")\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y/x);\\n                    s.push(z);\\n                }\\n            }\\n        }\\n        int m = Integer.parseInt(s.peek());\\n        return m;"
                    }
                ]
            },
            {
                "id": 1719365,
                "content": [
                    {
                        "username": "Sohith_Sai",
                        "content": "i got the doubt i have used long long  and succesfully submitted the code but the function return type is in int right shouldn\\'t it raise an error as we have to return int but we are returning long long"
                    },
                    {
                        "username": "Priyanshu_Arya",
                        "content": "https://leetcode.com/problems/evaluate-reverse-polish-notation/solutions/2922263/evaluate-reverse-polish-notation/"
                    },
                    {
                        "username": "chandan_nayak",
                        "content": " `your inline code...your inline code...\\'class Solution {\\n    public int evalRPN(String[] tokens)\\n {\\n      Stack<Integer> arr=new Stack<Integer>();\\n     int a,b,res;\\n     if(tokens.length==0)\\n     {\\n            return 0;\\n     }\\n     else\\n     {\\n\\n        for(int i=0;i<tokens.length;i++)\\n     {\\n        char r=tokens[i].charAt(0);\\n        if(tokens[i].length()!=1)\\n        {\\n            if(r==\\'-\\')\\n            {\\n                r=tokens[i].charAt(1);\\n            }\\n        }\\n        \\n        if(Character.isDigit(r))\\n        {\\n             int n=Integer.parseInt(tokens[i]);\\n             arr.push(n);\\n        }\\n\\n         else\\n         {\\n               char ch=(tokens[i].charAt(0));\\n\\n               switch(ch)\\n               {\\n                   case \\'*\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b*a;\\n                            arr.push(res);\\n                            break;\\n                    case \\'/\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b/a;\\n                            arr.push(res);\\n                            break;\\n                    case \\'+\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b+a;\\n                            arr.push(res);\\n                            break;\\n\\n                    case \\'-\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b-a;\\n                            arr.push(res);\\n                            break;\\n               }\\n         }\\n     }\\n }\\n\\n         return arr.pop();\\n }\\n}"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can somepoint point out the mistake...\\n//leetcode compiler is showing other output \\nbut my other editor is showing the right output\\n\\n\\n\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        \\n         Stack<String> s = new Stack<>();\\n         String s1 = \"+\";\\n         String s2 = \"-\";\\n         String s3 = \"*\";\\n         String s4 = \"/\";\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(!tokens[i].equals(s1) && !tokens[i].equals(s2) && !tokens[i].equals(s3) && !tokens[i].equals(s4) )\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z ;\\n                    if(x !=0){\\n                        z = Integer.toString(y/x);\\n                    }\\n                    else{\\n                       z = \"0\";\\n                    }\\n               \\n                    s.push(z);\\n                }\\n            }\\n        }\\n        while(s.peek() == \"*\" || s.peek() == \"+\" || s.peek() == \"/\" || s.peek() == \"-\" ){\\n            s.pop();\\n        }\\n        return Integer.parseInt(s.pop());\\n        //return m;\\n    }\\n     \\n}"
                    },
                    {
                        "username": "johnsmillie",
                        "content": "[@anmolkhanna2003](/anmolkhanna2003) Thanks for the suggestions. I have run into a similar issue as [@weknewit007](/weknewit007)."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "- you should be using .equals() in place of \"==\", when comparing strings.\n- hardcode your else for tokens[i].equals(\"/\"). \n- There is no need for the while loop at the end either, it will only affect your program's runtime.\n- you can use ArrayDeque in place of Stack as well, it's more performant than Stack in java\n"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "Please help me with this runtime error!\\n\\nMy code is:\\n\\n \\'class Solution {\\n  public: int solve(vector < string > & given) {\\n    string exp = \"\";\\n\\n    /******************************************************/\\n    // THIS PIECE OF CODE MIGHT BE GENERATING THIS ERROR.\\n    for (int i = 0; i < given.size(); i++) {\\n      if (given[i].size() > 1) {\\n\\n        int j = 0;\\n        while (j < given[i].size()) {\\n          exp += given[i][j];\\n          j++;\\n        }\\n      } else exp += (given[i][0]);\\n\\n    }\\n\\n    /******************************************************/\\n    cout << exp;\\n    int i;\\n    stack < int > st;\\n    // \\xA0\\xA0\\xA0st.size()=exp.size();\\n    // \\xA0\\xA0\\xA0\\xA0if (!st.size()) return -1;\\n\\n    for (i = 0; exp[i]; ++i) {\\n\\n      if (exp[i] == \\' \\') continue;\\n\\n      // If the scanned character is an\\n      // operand (number here),extract the full number\\n      // Push it to the stack.\\n      else if (isdigit(exp[i])) {\\n        int num = 0;\\n\\n        //extract full number\\n        while (isdigit(exp[i])) {\\n          num = num * 10 + (int)(exp[i] - \\'0\\');\\n          i++;\\n        }\\n        i--;\\n\\n        //push the element in the stack\\n        st.push(num);\\n      }\\n\\n      // If the scanned character is an operator, pop two\\n      // elements from stack apply the operator\\n      else {\\n        int val1 = st.top();\\n        st.pop();\\n        int val2 = st.top();\\n        st.pop();\\n\\n        switch (exp[i]) {\\n        case \\'+\\':\\n          st.push(val2 + val1);\\n          break;\\n        case \\'-\\':\\n          st.push(val2 - val1);\\n          break;\\n        case \\'*\\':\\n          st.push(val2 * val1);\\n          break;\\n        case \\'/\\':\\n          st.push(val2 / val1);\\n          break;\\n\\n        }\\n      }\\n    }\\n\\n    return st.top();\\n  }\\n  int evalRPN(vector < string > & tokens) {\\n    return solve(tokens);\\n    //    char a=65;\\n\\n    //    return 0;\\n  }\\n};\\'\\n\\n `Runtime Error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16`\\n\\nPlease help me out!"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can someone point me the error\\n//\\n\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<String> s = new Stack<>();\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(tokens[i] != \"+\" && tokens[i] != \"*\"   && tokens[i] != \"/\" && tokens[i] != \"-\")\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y/x);\\n                    s.push(z);\\n                }\\n            }\\n        }\\n        int m = Integer.parseInt(s.peek());\\n        return m;\\n       \\n    }\\n     \\n}"
                    },
                    {
                        "username": "weknewit007",
                        "content": "[@avi_maurya_0926](/avi_maurya_0926) import java.util.*;\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        \\n         Stack<String> s = new Stack<>();\\n         String s1 = \"+\";\\n         String s2 = \"-\";\\n         String s3 = \"*\";\\n         String s4 = \"/\";\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(!tokens[i].equals(s1) && !tokens[i].equals(s2) && !tokens[i].equals(s3) && !tokens[i].equals(s4) )\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z ;\\n                    if(x !=0){\\n                        z = Integer.toString(y/x);\\n                    }\\n                    else{\\n                       z = \"0\";\\n                    }\\n               \\n                    s.push(z);\\n                }\\n            }\\n        }\\n        while(s.peek() == \"*\" || s.peek() == \"+\" || s.peek() == \"/\" || s.peek() == \"-\" ){\\n            s.pop();\\n        }\\n        return Integer.parseInt(s.pop());\\n        //return m;\\n    }\\n     \\n} \\n\\n\\n// still showing wrong output but in other editor it is giving right answer\\nplease help\\n"
                    },
                    {
                        "username": "avi__09",
                        "content": "use tokens[i].equals(\"*\");    \\nuse equals everywhere insteed of =="
                    },
                    {
                        "username": "jallen89",
                        "content": "TIL: `6 // -132 = -1` in Python3."
                    },
                    {
                        "username": "kjoydeep5",
                        "content": "first find operator index(left to right) then previous two number  then insert to arrary\\nloop upto length ==1"
                    },
                    {
                        "username": "ritika_272_",
                        "content": "class Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens)\\n    {\\n        stack<string>st;\\n        int i=0;\\n        //run it till array gets emptied\\n        while(i<tokens.size())\\n        {   // till you encounter an operator, push things into stack\\n            while(tokens[i]!=\"+\" || tokens[i]!=\"-\"|| tokens[i]!=\"*\"|| tokens[i]!=\"/\")\\n            {   \\n                st.push(tokens[i]);\\n                i++;\\n            }\\n            int a,b;\\n            if(!st.empty())\\n            {a=stoi(st.top());\\n            st.pop();}\\n            if(!st.empty())\\n            {\\n             b=stoi(st.top());\\n            st.pop();}\\n            int c=0;\\n            if(tokens[i]==\"+\")\\n            c=a+b;\\n            else if(tokens[i]==\"-\")\\n            c=b-a;\\n            else if(tokens[i]==\"*\")\\n            c=b*a;\\n            else\\n            c=b/a;\\n\\n            //push it back into stack;\\n            st.push(to_string(c));\\n            i++;\\n        }\\n        string str=st.top();\\n        return stoi(str);\\n        \\n    }\\n};\\n\\ncan somebody point out the error"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Ritika](/ritika_272_)\\n\\n```\\n// till you encounter an operator, push things into stack\\nwhile(tokens[i]!=\"+\" || tokens[i]!=\"-\"|| tokens[i]!=\"\"|| tokens[i]!=\"/\")\\n{\\n      st.push(tokens[i]);\\n      i++;\\n}\\n```\\n\\nHere is the MISTAKE , you need to use `&&` (AND) operator but you have used `||` (OR) operator\\n\\n\\nconsider Upvote if it helps :-)"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can someone debug my code \\n\\n// showing error in leetcode but working fine in other code editors\\n\\n Stack<String> s = new Stack<>();\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(tokens[i] != \"+\" && tokens[i] != \"*\"   && tokens[i] != \"/\" && tokens[i] != \"-\")\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y/x);\\n                    s.push(z);\\n                }\\n            }\\n        }\\n        int m = Integer.parseInt(s.peek());\\n        return m;"
                    }
                ]
            },
            {
                "id": 1719363,
                "content": [
                    {
                        "username": "Sohith_Sai",
                        "content": "i got the doubt i have used long long  and succesfully submitted the code but the function return type is in int right shouldn\\'t it raise an error as we have to return int but we are returning long long"
                    },
                    {
                        "username": "Priyanshu_Arya",
                        "content": "https://leetcode.com/problems/evaluate-reverse-polish-notation/solutions/2922263/evaluate-reverse-polish-notation/"
                    },
                    {
                        "username": "chandan_nayak",
                        "content": " `your inline code...your inline code...\\'class Solution {\\n    public int evalRPN(String[] tokens)\\n {\\n      Stack<Integer> arr=new Stack<Integer>();\\n     int a,b,res;\\n     if(tokens.length==0)\\n     {\\n            return 0;\\n     }\\n     else\\n     {\\n\\n        for(int i=0;i<tokens.length;i++)\\n     {\\n        char r=tokens[i].charAt(0);\\n        if(tokens[i].length()!=1)\\n        {\\n            if(r==\\'-\\')\\n            {\\n                r=tokens[i].charAt(1);\\n            }\\n        }\\n        \\n        if(Character.isDigit(r))\\n        {\\n             int n=Integer.parseInt(tokens[i]);\\n             arr.push(n);\\n        }\\n\\n         else\\n         {\\n               char ch=(tokens[i].charAt(0));\\n\\n               switch(ch)\\n               {\\n                   case \\'*\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b*a;\\n                            arr.push(res);\\n                            break;\\n                    case \\'/\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b/a;\\n                            arr.push(res);\\n                            break;\\n                    case \\'+\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b+a;\\n                            arr.push(res);\\n                            break;\\n\\n                    case \\'-\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b-a;\\n                            arr.push(res);\\n                            break;\\n               }\\n         }\\n     }\\n }\\n\\n         return arr.pop();\\n }\\n}"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can somepoint point out the mistake...\\n//leetcode compiler is showing other output \\nbut my other editor is showing the right output\\n\\n\\n\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        \\n         Stack<String> s = new Stack<>();\\n         String s1 = \"+\";\\n         String s2 = \"-\";\\n         String s3 = \"*\";\\n         String s4 = \"/\";\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(!tokens[i].equals(s1) && !tokens[i].equals(s2) && !tokens[i].equals(s3) && !tokens[i].equals(s4) )\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z ;\\n                    if(x !=0){\\n                        z = Integer.toString(y/x);\\n                    }\\n                    else{\\n                       z = \"0\";\\n                    }\\n               \\n                    s.push(z);\\n                }\\n            }\\n        }\\n        while(s.peek() == \"*\" || s.peek() == \"+\" || s.peek() == \"/\" || s.peek() == \"-\" ){\\n            s.pop();\\n        }\\n        return Integer.parseInt(s.pop());\\n        //return m;\\n    }\\n     \\n}"
                    },
                    {
                        "username": "johnsmillie",
                        "content": "[@anmolkhanna2003](/anmolkhanna2003) Thanks for the suggestions. I have run into a similar issue as [@weknewit007](/weknewit007)."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "- you should be using .equals() in place of \"==\", when comparing strings.\n- hardcode your else for tokens[i].equals(\"/\"). \n- There is no need for the while loop at the end either, it will only affect your program's runtime.\n- you can use ArrayDeque in place of Stack as well, it's more performant than Stack in java\n"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "Please help me with this runtime error!\\n\\nMy code is:\\n\\n \\'class Solution {\\n  public: int solve(vector < string > & given) {\\n    string exp = \"\";\\n\\n    /******************************************************/\\n    // THIS PIECE OF CODE MIGHT BE GENERATING THIS ERROR.\\n    for (int i = 0; i < given.size(); i++) {\\n      if (given[i].size() > 1) {\\n\\n        int j = 0;\\n        while (j < given[i].size()) {\\n          exp += given[i][j];\\n          j++;\\n        }\\n      } else exp += (given[i][0]);\\n\\n    }\\n\\n    /******************************************************/\\n    cout << exp;\\n    int i;\\n    stack < int > st;\\n    // \\xA0\\xA0\\xA0st.size()=exp.size();\\n    // \\xA0\\xA0\\xA0\\xA0if (!st.size()) return -1;\\n\\n    for (i = 0; exp[i]; ++i) {\\n\\n      if (exp[i] == \\' \\') continue;\\n\\n      // If the scanned character is an\\n      // operand (number here),extract the full number\\n      // Push it to the stack.\\n      else if (isdigit(exp[i])) {\\n        int num = 0;\\n\\n        //extract full number\\n        while (isdigit(exp[i])) {\\n          num = num * 10 + (int)(exp[i] - \\'0\\');\\n          i++;\\n        }\\n        i--;\\n\\n        //push the element in the stack\\n        st.push(num);\\n      }\\n\\n      // If the scanned character is an operator, pop two\\n      // elements from stack apply the operator\\n      else {\\n        int val1 = st.top();\\n        st.pop();\\n        int val2 = st.top();\\n        st.pop();\\n\\n        switch (exp[i]) {\\n        case \\'+\\':\\n          st.push(val2 + val1);\\n          break;\\n        case \\'-\\':\\n          st.push(val2 - val1);\\n          break;\\n        case \\'*\\':\\n          st.push(val2 * val1);\\n          break;\\n        case \\'/\\':\\n          st.push(val2 / val1);\\n          break;\\n\\n        }\\n      }\\n    }\\n\\n    return st.top();\\n  }\\n  int evalRPN(vector < string > & tokens) {\\n    return solve(tokens);\\n    //    char a=65;\\n\\n    //    return 0;\\n  }\\n};\\'\\n\\n `Runtime Error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16`\\n\\nPlease help me out!"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can someone point me the error\\n//\\n\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<String> s = new Stack<>();\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(tokens[i] != \"+\" && tokens[i] != \"*\"   && tokens[i] != \"/\" && tokens[i] != \"-\")\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y/x);\\n                    s.push(z);\\n                }\\n            }\\n        }\\n        int m = Integer.parseInt(s.peek());\\n        return m;\\n       \\n    }\\n     \\n}"
                    },
                    {
                        "username": "weknewit007",
                        "content": "[@avi_maurya_0926](/avi_maurya_0926) import java.util.*;\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        \\n         Stack<String> s = new Stack<>();\\n         String s1 = \"+\";\\n         String s2 = \"-\";\\n         String s3 = \"*\";\\n         String s4 = \"/\";\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(!tokens[i].equals(s1) && !tokens[i].equals(s2) && !tokens[i].equals(s3) && !tokens[i].equals(s4) )\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z ;\\n                    if(x !=0){\\n                        z = Integer.toString(y/x);\\n                    }\\n                    else{\\n                       z = \"0\";\\n                    }\\n               \\n                    s.push(z);\\n                }\\n            }\\n        }\\n        while(s.peek() == \"*\" || s.peek() == \"+\" || s.peek() == \"/\" || s.peek() == \"-\" ){\\n            s.pop();\\n        }\\n        return Integer.parseInt(s.pop());\\n        //return m;\\n    }\\n     \\n} \\n\\n\\n// still showing wrong output but in other editor it is giving right answer\\nplease help\\n"
                    },
                    {
                        "username": "avi__09",
                        "content": "use tokens[i].equals(\"*\");    \\nuse equals everywhere insteed of =="
                    },
                    {
                        "username": "jallen89",
                        "content": "TIL: `6 // -132 = -1` in Python3."
                    },
                    {
                        "username": "kjoydeep5",
                        "content": "first find operator index(left to right) then previous two number  then insert to arrary\\nloop upto length ==1"
                    },
                    {
                        "username": "ritika_272_",
                        "content": "class Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens)\\n    {\\n        stack<string>st;\\n        int i=0;\\n        //run it till array gets emptied\\n        while(i<tokens.size())\\n        {   // till you encounter an operator, push things into stack\\n            while(tokens[i]!=\"+\" || tokens[i]!=\"-\"|| tokens[i]!=\"*\"|| tokens[i]!=\"/\")\\n            {   \\n                st.push(tokens[i]);\\n                i++;\\n            }\\n            int a,b;\\n            if(!st.empty())\\n            {a=stoi(st.top());\\n            st.pop();}\\n            if(!st.empty())\\n            {\\n             b=stoi(st.top());\\n            st.pop();}\\n            int c=0;\\n            if(tokens[i]==\"+\")\\n            c=a+b;\\n            else if(tokens[i]==\"-\")\\n            c=b-a;\\n            else if(tokens[i]==\"*\")\\n            c=b*a;\\n            else\\n            c=b/a;\\n\\n            //push it back into stack;\\n            st.push(to_string(c));\\n            i++;\\n        }\\n        string str=st.top();\\n        return stoi(str);\\n        \\n    }\\n};\\n\\ncan somebody point out the error"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Ritika](/ritika_272_)\\n\\n```\\n// till you encounter an operator, push things into stack\\nwhile(tokens[i]!=\"+\" || tokens[i]!=\"-\"|| tokens[i]!=\"\"|| tokens[i]!=\"/\")\\n{\\n      st.push(tokens[i]);\\n      i++;\\n}\\n```\\n\\nHere is the MISTAKE , you need to use `&&` (AND) operator but you have used `||` (OR) operator\\n\\n\\nconsider Upvote if it helps :-)"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can someone debug my code \\n\\n// showing error in leetcode but working fine in other code editors\\n\\n Stack<String> s = new Stack<>();\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(tokens[i] != \"+\" && tokens[i] != \"*\"   && tokens[i] != \"/\" && tokens[i] != \"-\")\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y/x);\\n                    s.push(z);\\n                }\\n            }\\n        }\\n        int m = Integer.parseInt(s.peek());\\n        return m;"
                    }
                ]
            },
            {
                "id": 1719361,
                "content": [
                    {
                        "username": "Sohith_Sai",
                        "content": "i got the doubt i have used long long  and succesfully submitted the code but the function return type is in int right shouldn\\'t it raise an error as we have to return int but we are returning long long"
                    },
                    {
                        "username": "Priyanshu_Arya",
                        "content": "https://leetcode.com/problems/evaluate-reverse-polish-notation/solutions/2922263/evaluate-reverse-polish-notation/"
                    },
                    {
                        "username": "chandan_nayak",
                        "content": " `your inline code...your inline code...\\'class Solution {\\n    public int evalRPN(String[] tokens)\\n {\\n      Stack<Integer> arr=new Stack<Integer>();\\n     int a,b,res;\\n     if(tokens.length==0)\\n     {\\n            return 0;\\n     }\\n     else\\n     {\\n\\n        for(int i=0;i<tokens.length;i++)\\n     {\\n        char r=tokens[i].charAt(0);\\n        if(tokens[i].length()!=1)\\n        {\\n            if(r==\\'-\\')\\n            {\\n                r=tokens[i].charAt(1);\\n            }\\n        }\\n        \\n        if(Character.isDigit(r))\\n        {\\n             int n=Integer.parseInt(tokens[i]);\\n             arr.push(n);\\n        }\\n\\n         else\\n         {\\n               char ch=(tokens[i].charAt(0));\\n\\n               switch(ch)\\n               {\\n                   case \\'*\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b*a;\\n                            arr.push(res);\\n                            break;\\n                    case \\'/\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b/a;\\n                            arr.push(res);\\n                            break;\\n                    case \\'+\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b+a;\\n                            arr.push(res);\\n                            break;\\n\\n                    case \\'-\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b-a;\\n                            arr.push(res);\\n                            break;\\n               }\\n         }\\n     }\\n }\\n\\n         return arr.pop();\\n }\\n}"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can somepoint point out the mistake...\\n//leetcode compiler is showing other output \\nbut my other editor is showing the right output\\n\\n\\n\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        \\n         Stack<String> s = new Stack<>();\\n         String s1 = \"+\";\\n         String s2 = \"-\";\\n         String s3 = \"*\";\\n         String s4 = \"/\";\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(!tokens[i].equals(s1) && !tokens[i].equals(s2) && !tokens[i].equals(s3) && !tokens[i].equals(s4) )\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z ;\\n                    if(x !=0){\\n                        z = Integer.toString(y/x);\\n                    }\\n                    else{\\n                       z = \"0\";\\n                    }\\n               \\n                    s.push(z);\\n                }\\n            }\\n        }\\n        while(s.peek() == \"*\" || s.peek() == \"+\" || s.peek() == \"/\" || s.peek() == \"-\" ){\\n            s.pop();\\n        }\\n        return Integer.parseInt(s.pop());\\n        //return m;\\n    }\\n     \\n}"
                    },
                    {
                        "username": "johnsmillie",
                        "content": "[@anmolkhanna2003](/anmolkhanna2003) Thanks for the suggestions. I have run into a similar issue as [@weknewit007](/weknewit007)."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "- you should be using .equals() in place of \"==\", when comparing strings.\n- hardcode your else for tokens[i].equals(\"/\"). \n- There is no need for the while loop at the end either, it will only affect your program's runtime.\n- you can use ArrayDeque in place of Stack as well, it's more performant than Stack in java\n"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "Please help me with this runtime error!\\n\\nMy code is:\\n\\n \\'class Solution {\\n  public: int solve(vector < string > & given) {\\n    string exp = \"\";\\n\\n    /******************************************************/\\n    // THIS PIECE OF CODE MIGHT BE GENERATING THIS ERROR.\\n    for (int i = 0; i < given.size(); i++) {\\n      if (given[i].size() > 1) {\\n\\n        int j = 0;\\n        while (j < given[i].size()) {\\n          exp += given[i][j];\\n          j++;\\n        }\\n      } else exp += (given[i][0]);\\n\\n    }\\n\\n    /******************************************************/\\n    cout << exp;\\n    int i;\\n    stack < int > st;\\n    // \\xA0\\xA0\\xA0st.size()=exp.size();\\n    // \\xA0\\xA0\\xA0\\xA0if (!st.size()) return -1;\\n\\n    for (i = 0; exp[i]; ++i) {\\n\\n      if (exp[i] == \\' \\') continue;\\n\\n      // If the scanned character is an\\n      // operand (number here),extract the full number\\n      // Push it to the stack.\\n      else if (isdigit(exp[i])) {\\n        int num = 0;\\n\\n        //extract full number\\n        while (isdigit(exp[i])) {\\n          num = num * 10 + (int)(exp[i] - \\'0\\');\\n          i++;\\n        }\\n        i--;\\n\\n        //push the element in the stack\\n        st.push(num);\\n      }\\n\\n      // If the scanned character is an operator, pop two\\n      // elements from stack apply the operator\\n      else {\\n        int val1 = st.top();\\n        st.pop();\\n        int val2 = st.top();\\n        st.pop();\\n\\n        switch (exp[i]) {\\n        case \\'+\\':\\n          st.push(val2 + val1);\\n          break;\\n        case \\'-\\':\\n          st.push(val2 - val1);\\n          break;\\n        case \\'*\\':\\n          st.push(val2 * val1);\\n          break;\\n        case \\'/\\':\\n          st.push(val2 / val1);\\n          break;\\n\\n        }\\n      }\\n    }\\n\\n    return st.top();\\n  }\\n  int evalRPN(vector < string > & tokens) {\\n    return solve(tokens);\\n    //    char a=65;\\n\\n    //    return 0;\\n  }\\n};\\'\\n\\n `Runtime Error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16`\\n\\nPlease help me out!"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can someone point me the error\\n//\\n\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<String> s = new Stack<>();\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(tokens[i] != \"+\" && tokens[i] != \"*\"   && tokens[i] != \"/\" && tokens[i] != \"-\")\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y/x);\\n                    s.push(z);\\n                }\\n            }\\n        }\\n        int m = Integer.parseInt(s.peek());\\n        return m;\\n       \\n    }\\n     \\n}"
                    },
                    {
                        "username": "weknewit007",
                        "content": "[@avi_maurya_0926](/avi_maurya_0926) import java.util.*;\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        \\n         Stack<String> s = new Stack<>();\\n         String s1 = \"+\";\\n         String s2 = \"-\";\\n         String s3 = \"*\";\\n         String s4 = \"/\";\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(!tokens[i].equals(s1) && !tokens[i].equals(s2) && !tokens[i].equals(s3) && !tokens[i].equals(s4) )\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z ;\\n                    if(x !=0){\\n                        z = Integer.toString(y/x);\\n                    }\\n                    else{\\n                       z = \"0\";\\n                    }\\n               \\n                    s.push(z);\\n                }\\n            }\\n        }\\n        while(s.peek() == \"*\" || s.peek() == \"+\" || s.peek() == \"/\" || s.peek() == \"-\" ){\\n            s.pop();\\n        }\\n        return Integer.parseInt(s.pop());\\n        //return m;\\n    }\\n     \\n} \\n\\n\\n// still showing wrong output but in other editor it is giving right answer\\nplease help\\n"
                    },
                    {
                        "username": "avi__09",
                        "content": "use tokens[i].equals(\"*\");    \\nuse equals everywhere insteed of =="
                    },
                    {
                        "username": "jallen89",
                        "content": "TIL: `6 // -132 = -1` in Python3."
                    },
                    {
                        "username": "kjoydeep5",
                        "content": "first find operator index(left to right) then previous two number  then insert to arrary\\nloop upto length ==1"
                    },
                    {
                        "username": "ritika_272_",
                        "content": "class Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens)\\n    {\\n        stack<string>st;\\n        int i=0;\\n        //run it till array gets emptied\\n        while(i<tokens.size())\\n        {   // till you encounter an operator, push things into stack\\n            while(tokens[i]!=\"+\" || tokens[i]!=\"-\"|| tokens[i]!=\"*\"|| tokens[i]!=\"/\")\\n            {   \\n                st.push(tokens[i]);\\n                i++;\\n            }\\n            int a,b;\\n            if(!st.empty())\\n            {a=stoi(st.top());\\n            st.pop();}\\n            if(!st.empty())\\n            {\\n             b=stoi(st.top());\\n            st.pop();}\\n            int c=0;\\n            if(tokens[i]==\"+\")\\n            c=a+b;\\n            else if(tokens[i]==\"-\")\\n            c=b-a;\\n            else if(tokens[i]==\"*\")\\n            c=b*a;\\n            else\\n            c=b/a;\\n\\n            //push it back into stack;\\n            st.push(to_string(c));\\n            i++;\\n        }\\n        string str=st.top();\\n        return stoi(str);\\n        \\n    }\\n};\\n\\ncan somebody point out the error"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Ritika](/ritika_272_)\\n\\n```\\n// till you encounter an operator, push things into stack\\nwhile(tokens[i]!=\"+\" || tokens[i]!=\"-\"|| tokens[i]!=\"\"|| tokens[i]!=\"/\")\\n{\\n      st.push(tokens[i]);\\n      i++;\\n}\\n```\\n\\nHere is the MISTAKE , you need to use `&&` (AND) operator but you have used `||` (OR) operator\\n\\n\\nconsider Upvote if it helps :-)"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can someone debug my code \\n\\n// showing error in leetcode but working fine in other code editors\\n\\n Stack<String> s = new Stack<>();\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(tokens[i] != \"+\" && tokens[i] != \"*\"   && tokens[i] != \"/\" && tokens[i] != \"-\")\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y/x);\\n                    s.push(z);\\n                }\\n            }\\n        }\\n        int m = Integer.parseInt(s.peek());\\n        return m;"
                    }
                ]
            },
            {
                "id": 1719341,
                "content": [
                    {
                        "username": "Sohith_Sai",
                        "content": "i got the doubt i have used long long  and succesfully submitted the code but the function return type is in int right shouldn\\'t it raise an error as we have to return int but we are returning long long"
                    },
                    {
                        "username": "Priyanshu_Arya",
                        "content": "https://leetcode.com/problems/evaluate-reverse-polish-notation/solutions/2922263/evaluate-reverse-polish-notation/"
                    },
                    {
                        "username": "chandan_nayak",
                        "content": " `your inline code...your inline code...\\'class Solution {\\n    public int evalRPN(String[] tokens)\\n {\\n      Stack<Integer> arr=new Stack<Integer>();\\n     int a,b,res;\\n     if(tokens.length==0)\\n     {\\n            return 0;\\n     }\\n     else\\n     {\\n\\n        for(int i=0;i<tokens.length;i++)\\n     {\\n        char r=tokens[i].charAt(0);\\n        if(tokens[i].length()!=1)\\n        {\\n            if(r==\\'-\\')\\n            {\\n                r=tokens[i].charAt(1);\\n            }\\n        }\\n        \\n        if(Character.isDigit(r))\\n        {\\n             int n=Integer.parseInt(tokens[i]);\\n             arr.push(n);\\n        }\\n\\n         else\\n         {\\n               char ch=(tokens[i].charAt(0));\\n\\n               switch(ch)\\n               {\\n                   case \\'*\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b*a;\\n                            arr.push(res);\\n                            break;\\n                    case \\'/\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b/a;\\n                            arr.push(res);\\n                            break;\\n                    case \\'+\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b+a;\\n                            arr.push(res);\\n                            break;\\n\\n                    case \\'-\\':if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n                            a=arr.pop();\\n                            if(arr.empty())\\n                            {\\n                                return 0;\\n                            }\\n\\n                            b=arr.pop();\\n\\n                            res=b-a;\\n                            arr.push(res);\\n                            break;\\n               }\\n         }\\n     }\\n }\\n\\n         return arr.pop();\\n }\\n}"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can somepoint point out the mistake...\\n//leetcode compiler is showing other output \\nbut my other editor is showing the right output\\n\\n\\n\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        \\n         Stack<String> s = new Stack<>();\\n         String s1 = \"+\";\\n         String s2 = \"-\";\\n         String s3 = \"*\";\\n         String s4 = \"/\";\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(!tokens[i].equals(s1) && !tokens[i].equals(s2) && !tokens[i].equals(s3) && !tokens[i].equals(s4) )\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z ;\\n                    if(x !=0){\\n                        z = Integer.toString(y/x);\\n                    }\\n                    else{\\n                       z = \"0\";\\n                    }\\n               \\n                    s.push(z);\\n                }\\n            }\\n        }\\n        while(s.peek() == \"*\" || s.peek() == \"+\" || s.peek() == \"/\" || s.peek() == \"-\" ){\\n            s.pop();\\n        }\\n        return Integer.parseInt(s.pop());\\n        //return m;\\n    }\\n     \\n}"
                    },
                    {
                        "username": "johnsmillie",
                        "content": "[@anmolkhanna2003](/anmolkhanna2003) Thanks for the suggestions. I have run into a similar issue as [@weknewit007](/weknewit007)."
                    },
                    {
                        "username": "anmolkhanna2003",
                        "content": "- you should be using .equals() in place of \"==\", when comparing strings.\n- hardcode your else for tokens[i].equals(\"/\"). \n- There is no need for the while loop at the end either, it will only affect your program's runtime.\n- you can use ArrayDeque in place of Stack as well, it's more performant than Stack in java\n"
                    },
                    {
                        "username": "Hussain_14",
                        "content": "Please help me with this runtime error!\\n\\nMy code is:\\n\\n \\'class Solution {\\n  public: int solve(vector < string > & given) {\\n    string exp = \"\";\\n\\n    /******************************************************/\\n    // THIS PIECE OF CODE MIGHT BE GENERATING THIS ERROR.\\n    for (int i = 0; i < given.size(); i++) {\\n      if (given[i].size() > 1) {\\n\\n        int j = 0;\\n        while (j < given[i].size()) {\\n          exp += given[i][j];\\n          j++;\\n        }\\n      } else exp += (given[i][0]);\\n\\n    }\\n\\n    /******************************************************/\\n    cout << exp;\\n    int i;\\n    stack < int > st;\\n    // \\xA0\\xA0\\xA0st.size()=exp.size();\\n    // \\xA0\\xA0\\xA0\\xA0if (!st.size()) return -1;\\n\\n    for (i = 0; exp[i]; ++i) {\\n\\n      if (exp[i] == \\' \\') continue;\\n\\n      // If the scanned character is an\\n      // operand (number here),extract the full number\\n      // Push it to the stack.\\n      else if (isdigit(exp[i])) {\\n        int num = 0;\\n\\n        //extract full number\\n        while (isdigit(exp[i])) {\\n          num = num * 10 + (int)(exp[i] - \\'0\\');\\n          i++;\\n        }\\n        i--;\\n\\n        //push the element in the stack\\n        st.push(num);\\n      }\\n\\n      // If the scanned character is an operator, pop two\\n      // elements from stack apply the operator\\n      else {\\n        int val1 = st.top();\\n        st.pop();\\n        int val2 = st.top();\\n        st.pop();\\n\\n        switch (exp[i]) {\\n        case \\'+\\':\\n          st.push(val2 + val1);\\n          break;\\n        case \\'-\\':\\n          st.push(val2 - val1);\\n          break;\\n        case \\'*\\':\\n          st.push(val2 * val1);\\n          break;\\n        case \\'/\\':\\n          st.push(val2 / val1);\\n          break;\\n\\n        }\\n      }\\n    }\\n\\n    return st.top();\\n  }\\n  int evalRPN(vector < string > & tokens) {\\n    return solve(tokens);\\n    //    char a=65;\\n\\n    //    return 0;\\n  }\\n};\\'\\n\\n `Runtime Error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16`\\n\\nPlease help me out!"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can someone point me the error\\n//\\n\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        Stack<String> s = new Stack<>();\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(tokens[i] != \"+\" && tokens[i] != \"*\"   && tokens[i] != \"/\" && tokens[i] != \"-\")\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y/x);\\n                    s.push(z);\\n                }\\n            }\\n        }\\n        int m = Integer.parseInt(s.peek());\\n        return m;\\n       \\n    }\\n     \\n}"
                    },
                    {
                        "username": "weknewit007",
                        "content": "[@avi_maurya_0926](/avi_maurya_0926) import java.util.*;\\nclass Solution {\\n    public int evalRPN(String[] tokens) {\\n        \\n         Stack<String> s = new Stack<>();\\n         String s1 = \"+\";\\n         String s2 = \"-\";\\n         String s3 = \"*\";\\n         String s4 = \"/\";\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(!tokens[i].equals(s1) && !tokens[i].equals(s2) && !tokens[i].equals(s3) && !tokens[i].equals(s4) )\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z ;\\n                    if(x !=0){\\n                        z = Integer.toString(y/x);\\n                    }\\n                    else{\\n                       z = \"0\";\\n                    }\\n               \\n                    s.push(z);\\n                }\\n            }\\n        }\\n        while(s.peek() == \"*\" || s.peek() == \"+\" || s.peek() == \"/\" || s.peek() == \"-\" ){\\n            s.pop();\\n        }\\n        return Integer.parseInt(s.pop());\\n        //return m;\\n    }\\n     \\n} \\n\\n\\n// still showing wrong output but in other editor it is giving right answer\\nplease help\\n"
                    },
                    {
                        "username": "avi__09",
                        "content": "use tokens[i].equals(\"*\");    \\nuse equals everywhere insteed of =="
                    },
                    {
                        "username": "jallen89",
                        "content": "TIL: `6 // -132 = -1` in Python3."
                    },
                    {
                        "username": "kjoydeep5",
                        "content": "first find operator index(left to right) then previous two number  then insert to arrary\\nloop upto length ==1"
                    },
                    {
                        "username": "ritika_272_",
                        "content": "class Solution {\\npublic:\\n    int evalRPN(vector<string>& tokens)\\n    {\\n        stack<string>st;\\n        int i=0;\\n        //run it till array gets emptied\\n        while(i<tokens.size())\\n        {   // till you encounter an operator, push things into stack\\n            while(tokens[i]!=\"+\" || tokens[i]!=\"-\"|| tokens[i]!=\"*\"|| tokens[i]!=\"/\")\\n            {   \\n                st.push(tokens[i]);\\n                i++;\\n            }\\n            int a,b;\\n            if(!st.empty())\\n            {a=stoi(st.top());\\n            st.pop();}\\n            if(!st.empty())\\n            {\\n             b=stoi(st.top());\\n            st.pop();}\\n            int c=0;\\n            if(tokens[i]==\"+\")\\n            c=a+b;\\n            else if(tokens[i]==\"-\")\\n            c=b-a;\\n            else if(tokens[i]==\"*\")\\n            c=b*a;\\n            else\\n            c=b/a;\\n\\n            //push it back into stack;\\n            st.push(to_string(c));\\n            i++;\\n        }\\n        string str=st.top();\\n        return stoi(str);\\n        \\n    }\\n};\\n\\ncan somebody point out the error"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Ritika](/ritika_272_)\\n\\n```\\n// till you encounter an operator, push things into stack\\nwhile(tokens[i]!=\"+\" || tokens[i]!=\"-\"|| tokens[i]!=\"\"|| tokens[i]!=\"/\")\\n{\\n      st.push(tokens[i]);\\n      i++;\\n}\\n```\\n\\nHere is the MISTAKE , you need to use `&&` (AND) operator but you have used `||` (OR) operator\\n\\n\\nconsider Upvote if it helps :-)"
                    },
                    {
                        "username": "weknewit007",
                        "content": "can someone debug my code \\n\\n// showing error in leetcode but working fine in other code editors\\n\\n Stack<String> s = new Stack<>();\\n\\n        for(int i=0; i<tokens.length; i++){\\n            if(tokens[i] != \"+\" && tokens[i] != \"*\"   && tokens[i] != \"/\" && tokens[i] != \"-\")\\n            {\\n                s.push(tokens[i]);\\n            }\\n            else{\\n                if(tokens[i] == \"+\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y+x);\\n                   \\n                    s.push(z);\\n\\n                }\\n                else if(tokens[i]== \"-\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y-x);\\n                    s.push(z);\\n                }\\n                else if(tokens[i] == \"*\"){\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y*x);\\n                    s.push(z);\\n                }\\n                else{\\n                    // token is /\\n                    int x = Integer.parseInt(s.pop());\\n                    int y = Integer.parseInt(s.pop());\\n                    String z = Integer.toString(y/x);\\n                    s.push(z);\\n                }\\n            }\\n        }\\n        int m = Integer.parseInt(s.peek());\\n        return m;"
                    }
                ]
            },
            {
                "id": 1719336,
                "content": [
                    {
                        "username": "aryan20022003",
                        "content": "Hint : USE long long int"
                    },
                    {
                        "username": "avi__09",
                        "content": "class Solution {\\n\\n    Stack<Integer> st = new Stack<>();\\n\\n    public int evalRPN(String[] tokens) {\\n        \\n        for(int i=0; i<tokens.length; i++){\\n            \\n            String val = tokens[i];\\n            if(val.equals(\"*\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 * num1));\\n            }else if(val.equals(\"/\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 / num1));\\n            }else if(val.equals(\"+\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                System.out.println(st);\\n                st.add((int)(num2 + num1));\\n                \\n            }else if(val.equals(\"-\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 - num1));\\n            }else{\\n                st.add(Integer.parseInt(val));\\n            }\\n        }\\n        return st.pop();\\n    }\\n}\\n\\n\\nit says \"Output limit exceed\" why ?"
                    },
                    {
                        "username": "jxgr1t",
                        "content": "Help me with this TC:[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"] \\nGetting overflow \\n `int evalRPN(vector<string>& tokens) {\\n        stack<int>s;\\n        for(auto i:tokens)\\n        {\\n            if(i==\"+\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b+a);\\n            }\\n            else if(i==\"-\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b-a);\\n            }\\n            else if(i==\"/\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b/a);\\n            }\\n            else if(i==\"*\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b*a);\\n            }\\n            else s.push(stoi(i));\\n        }\\n        return s.top();\\n\\n    }\\n};`\\n\\nThanks"
                    },
                    {
                        "username": "jxgr1t",
                        "content": "[@Md_Shamim_Ahmmed](/Md_Shamim_Ahmmed) thanks man\\n"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "Hey, type cast ```int``` with ```long long``` when doing the multiplication of a & b."
                    },
                    {
                        "username": "yugalkishore59",
                        "content": "I want to know the reason for Runtime Error in my c++ code :  https://onlinegdb.com/O0nAvLx8n\\nIt is working fine in other online c++ compiler but it shows Runtime error in leetcode.\\nwhat is the cause and how can I fix this?\\n\\nRuntime Error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16"
                    },
                    {
                        "username": "rosie-i",
                        "content": "This guy has a really clear an helpful explanation of how Reverse Polish Notation works if, like me, you\\'d never encountered it before! (It does also basically explain the algorithm towards the end, so pause around 4 minutes if you want to try it yourself before that!)\\nhttps://www.youtube.com/watch?v=qN8LPIcY6K4"
                    },
                    {
                        "username": "disturbedbrown1",
                        "content": "The only tricky thing is: `Note that division between two integers should truncate toward zero.`. Took me a few minutes to understand why integer division, integer division with `math.floor` doesn\\'t work but `int()` works haha. (I use Python)"
                    },
                    {
                        "username": "Msey",
                        "content": "The main difficulty here is to knowledge of Reverse Polish Notation hehe. I\\'m not sure that you will be given the wikipedia page during the interview. Or if you ask for explaination in FAANG you know how would it look like lol. I felt like a dummy\\n\\nAll other things are very easy to implement. I\\'d say it\\'s easier than most of the easy problems"
                    },
                    {
                        "username": "Msey",
                        "content": "[@disturbedbrown1](/disturbedbrown1) Yes. The trick is in description, not implementation "
                    },
                    {
                        "username": "disturbedbrown1",
                        "content": "If we just look at the examples carefully, its simple postfix notation, and that is enough to solve the problem."
                    },
                    {
                        "username": "theAchiever",
                        "content": "This keeps on throwing emptystack exception please help.   \\n\\n public int evalRPN(String[] tokens) {\\n        Stack <Integer> stack=new Stack<>();\\n        if(tokens.length==0)\\n        return 0;\\n        for(int i=0;i<tokens.length;i++)\\n        {\\n            char ch=tokens[i].charAt(0);\\n            switch(ch)\\n            {\\n                case \\'+\\':\\n                stack.push(stack.pop()+stack.pop());\\n                break;\\n                case \\'-\\':\\n                stack.push(-stack.pop()+stack.pop());\\n                break;\\n                case \\'/\\':\\n                stack.push((int)(1.0/stack.pop()*stack.pop()));\\n                break;\\n                case \\'*\\':\\n                stack.push(stack.pop()*stack.pop());\\n                break;\\n                default:\\n                stack.push((int)i);\\n            }\\n           \\n        }\\n         return stack.pop();\\n        \\n    }\\n}"
                    },
                    {
                        "username": "ayush-tiwari26",
                        "content": "This question should be LC easy. "
                    },
                    {
                        "username": "M2rider",
                        "content": "✅The best and easiest algorithm to solve this problem is the use of stacks.\n\n 1. Start storing the elements of given string vector in a stack.\n 2. As and when you encounter a non-integer value(+,-,/,*) , put the symbol between the last two integers in the stack.\n 3. Push the answer in your stack and continue iterating through the vector string.\n 4. After the loop is over only one element will be left in the stack.\n 5. Return the element.\n\n Note: Remember to use long long instead of int as continuous additions and multiplications may lead to a very large value.\nThe time complexity of this solution will be O(n).\nn=size of the vector "
                    },
                    {
                        "username": "Sohith_Sai",
                        "content": "i got the doubt i have used long long but the function return type is in int right shouldn\\'t it raise an error as we have to return int but we are returning long long "
                    }
                ]
            },
            {
                "id": 1719333,
                "content": [
                    {
                        "username": "aryan20022003",
                        "content": "Hint : USE long long int"
                    },
                    {
                        "username": "avi__09",
                        "content": "class Solution {\\n\\n    Stack<Integer> st = new Stack<>();\\n\\n    public int evalRPN(String[] tokens) {\\n        \\n        for(int i=0; i<tokens.length; i++){\\n            \\n            String val = tokens[i];\\n            if(val.equals(\"*\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 * num1));\\n            }else if(val.equals(\"/\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 / num1));\\n            }else if(val.equals(\"+\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                System.out.println(st);\\n                st.add((int)(num2 + num1));\\n                \\n            }else if(val.equals(\"-\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 - num1));\\n            }else{\\n                st.add(Integer.parseInt(val));\\n            }\\n        }\\n        return st.pop();\\n    }\\n}\\n\\n\\nit says \"Output limit exceed\" why ?"
                    },
                    {
                        "username": "jxgr1t",
                        "content": "Help me with this TC:[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"] \\nGetting overflow \\n `int evalRPN(vector<string>& tokens) {\\n        stack<int>s;\\n        for(auto i:tokens)\\n        {\\n            if(i==\"+\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b+a);\\n            }\\n            else if(i==\"-\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b-a);\\n            }\\n            else if(i==\"/\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b/a);\\n            }\\n            else if(i==\"*\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b*a);\\n            }\\n            else s.push(stoi(i));\\n        }\\n        return s.top();\\n\\n    }\\n};`\\n\\nThanks"
                    },
                    {
                        "username": "jxgr1t",
                        "content": "[@Md_Shamim_Ahmmed](/Md_Shamim_Ahmmed) thanks man\\n"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "Hey, type cast ```int``` with ```long long``` when doing the multiplication of a & b."
                    },
                    {
                        "username": "yugalkishore59",
                        "content": "I want to know the reason for Runtime Error in my c++ code :  https://onlinegdb.com/O0nAvLx8n\\nIt is working fine in other online c++ compiler but it shows Runtime error in leetcode.\\nwhat is the cause and how can I fix this?\\n\\nRuntime Error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16"
                    },
                    {
                        "username": "rosie-i",
                        "content": "This guy has a really clear an helpful explanation of how Reverse Polish Notation works if, like me, you\\'d never encountered it before! (It does also basically explain the algorithm towards the end, so pause around 4 minutes if you want to try it yourself before that!)\\nhttps://www.youtube.com/watch?v=qN8LPIcY6K4"
                    },
                    {
                        "username": "disturbedbrown1",
                        "content": "The only tricky thing is: `Note that division between two integers should truncate toward zero.`. Took me a few minutes to understand why integer division, integer division with `math.floor` doesn\\'t work but `int()` works haha. (I use Python)"
                    },
                    {
                        "username": "Msey",
                        "content": "The main difficulty here is to knowledge of Reverse Polish Notation hehe. I\\'m not sure that you will be given the wikipedia page during the interview. Or if you ask for explaination in FAANG you know how would it look like lol. I felt like a dummy\\n\\nAll other things are very easy to implement. I\\'d say it\\'s easier than most of the easy problems"
                    },
                    {
                        "username": "Msey",
                        "content": "[@disturbedbrown1](/disturbedbrown1) Yes. The trick is in description, not implementation "
                    },
                    {
                        "username": "disturbedbrown1",
                        "content": "If we just look at the examples carefully, its simple postfix notation, and that is enough to solve the problem."
                    },
                    {
                        "username": "theAchiever",
                        "content": "This keeps on throwing emptystack exception please help.   \\n\\n public int evalRPN(String[] tokens) {\\n        Stack <Integer> stack=new Stack<>();\\n        if(tokens.length==0)\\n        return 0;\\n        for(int i=0;i<tokens.length;i++)\\n        {\\n            char ch=tokens[i].charAt(0);\\n            switch(ch)\\n            {\\n                case \\'+\\':\\n                stack.push(stack.pop()+stack.pop());\\n                break;\\n                case \\'-\\':\\n                stack.push(-stack.pop()+stack.pop());\\n                break;\\n                case \\'/\\':\\n                stack.push((int)(1.0/stack.pop()*stack.pop()));\\n                break;\\n                case \\'*\\':\\n                stack.push(stack.pop()*stack.pop());\\n                break;\\n                default:\\n                stack.push((int)i);\\n            }\\n           \\n        }\\n         return stack.pop();\\n        \\n    }\\n}"
                    },
                    {
                        "username": "ayush-tiwari26",
                        "content": "This question should be LC easy. "
                    },
                    {
                        "username": "M2rider",
                        "content": "✅The best and easiest algorithm to solve this problem is the use of stacks.\n\n 1. Start storing the elements of given string vector in a stack.\n 2. As and when you encounter a non-integer value(+,-,/,*) , put the symbol between the last two integers in the stack.\n 3. Push the answer in your stack and continue iterating through the vector string.\n 4. After the loop is over only one element will be left in the stack.\n 5. Return the element.\n\n Note: Remember to use long long instead of int as continuous additions and multiplications may lead to a very large value.\nThe time complexity of this solution will be O(n).\nn=size of the vector "
                    },
                    {
                        "username": "Sohith_Sai",
                        "content": "i got the doubt i have used long long but the function return type is in int right shouldn\\'t it raise an error as we have to return int but we are returning long long "
                    }
                ]
            },
            {
                "id": 1719330,
                "content": [
                    {
                        "username": "aryan20022003",
                        "content": "Hint : USE long long int"
                    },
                    {
                        "username": "avi__09",
                        "content": "class Solution {\\n\\n    Stack<Integer> st = new Stack<>();\\n\\n    public int evalRPN(String[] tokens) {\\n        \\n        for(int i=0; i<tokens.length; i++){\\n            \\n            String val = tokens[i];\\n            if(val.equals(\"*\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 * num1));\\n            }else if(val.equals(\"/\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 / num1));\\n            }else if(val.equals(\"+\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                System.out.println(st);\\n                st.add((int)(num2 + num1));\\n                \\n            }else if(val.equals(\"-\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 - num1));\\n            }else{\\n                st.add(Integer.parseInt(val));\\n            }\\n        }\\n        return st.pop();\\n    }\\n}\\n\\n\\nit says \"Output limit exceed\" why ?"
                    },
                    {
                        "username": "jxgr1t",
                        "content": "Help me with this TC:[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"] \\nGetting overflow \\n `int evalRPN(vector<string>& tokens) {\\n        stack<int>s;\\n        for(auto i:tokens)\\n        {\\n            if(i==\"+\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b+a);\\n            }\\n            else if(i==\"-\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b-a);\\n            }\\n            else if(i==\"/\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b/a);\\n            }\\n            else if(i==\"*\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b*a);\\n            }\\n            else s.push(stoi(i));\\n        }\\n        return s.top();\\n\\n    }\\n};`\\n\\nThanks"
                    },
                    {
                        "username": "jxgr1t",
                        "content": "[@Md_Shamim_Ahmmed](/Md_Shamim_Ahmmed) thanks man\\n"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "Hey, type cast ```int``` with ```long long``` when doing the multiplication of a & b."
                    },
                    {
                        "username": "yugalkishore59",
                        "content": "I want to know the reason for Runtime Error in my c++ code :  https://onlinegdb.com/O0nAvLx8n\\nIt is working fine in other online c++ compiler but it shows Runtime error in leetcode.\\nwhat is the cause and how can I fix this?\\n\\nRuntime Error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16"
                    },
                    {
                        "username": "rosie-i",
                        "content": "This guy has a really clear an helpful explanation of how Reverse Polish Notation works if, like me, you\\'d never encountered it before! (It does also basically explain the algorithm towards the end, so pause around 4 minutes if you want to try it yourself before that!)\\nhttps://www.youtube.com/watch?v=qN8LPIcY6K4"
                    },
                    {
                        "username": "disturbedbrown1",
                        "content": "The only tricky thing is: `Note that division between two integers should truncate toward zero.`. Took me a few minutes to understand why integer division, integer division with `math.floor` doesn\\'t work but `int()` works haha. (I use Python)"
                    },
                    {
                        "username": "Msey",
                        "content": "The main difficulty here is to knowledge of Reverse Polish Notation hehe. I\\'m not sure that you will be given the wikipedia page during the interview. Or if you ask for explaination in FAANG you know how would it look like lol. I felt like a dummy\\n\\nAll other things are very easy to implement. I\\'d say it\\'s easier than most of the easy problems"
                    },
                    {
                        "username": "Msey",
                        "content": "[@disturbedbrown1](/disturbedbrown1) Yes. The trick is in description, not implementation "
                    },
                    {
                        "username": "disturbedbrown1",
                        "content": "If we just look at the examples carefully, its simple postfix notation, and that is enough to solve the problem."
                    },
                    {
                        "username": "theAchiever",
                        "content": "This keeps on throwing emptystack exception please help.   \\n\\n public int evalRPN(String[] tokens) {\\n        Stack <Integer> stack=new Stack<>();\\n        if(tokens.length==0)\\n        return 0;\\n        for(int i=0;i<tokens.length;i++)\\n        {\\n            char ch=tokens[i].charAt(0);\\n            switch(ch)\\n            {\\n                case \\'+\\':\\n                stack.push(stack.pop()+stack.pop());\\n                break;\\n                case \\'-\\':\\n                stack.push(-stack.pop()+stack.pop());\\n                break;\\n                case \\'/\\':\\n                stack.push((int)(1.0/stack.pop()*stack.pop()));\\n                break;\\n                case \\'*\\':\\n                stack.push(stack.pop()*stack.pop());\\n                break;\\n                default:\\n                stack.push((int)i);\\n            }\\n           \\n        }\\n         return stack.pop();\\n        \\n    }\\n}"
                    },
                    {
                        "username": "ayush-tiwari26",
                        "content": "This question should be LC easy. "
                    },
                    {
                        "username": "M2rider",
                        "content": "✅The best and easiest algorithm to solve this problem is the use of stacks.\n\n 1. Start storing the elements of given string vector in a stack.\n 2. As and when you encounter a non-integer value(+,-,/,*) , put the symbol between the last two integers in the stack.\n 3. Push the answer in your stack and continue iterating through the vector string.\n 4. After the loop is over only one element will be left in the stack.\n 5. Return the element.\n\n Note: Remember to use long long instead of int as continuous additions and multiplications may lead to a very large value.\nThe time complexity of this solution will be O(n).\nn=size of the vector "
                    },
                    {
                        "username": "Sohith_Sai",
                        "content": "i got the doubt i have used long long but the function return type is in int right shouldn\\'t it raise an error as we have to return int but we are returning long long "
                    }
                ]
            },
            {
                "id": 1719311,
                "content": [
                    {
                        "username": "aryan20022003",
                        "content": "Hint : USE long long int"
                    },
                    {
                        "username": "avi__09",
                        "content": "class Solution {\\n\\n    Stack<Integer> st = new Stack<>();\\n\\n    public int evalRPN(String[] tokens) {\\n        \\n        for(int i=0; i<tokens.length; i++){\\n            \\n            String val = tokens[i];\\n            if(val.equals(\"*\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 * num1));\\n            }else if(val.equals(\"/\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 / num1));\\n            }else if(val.equals(\"+\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                System.out.println(st);\\n                st.add((int)(num2 + num1));\\n                \\n            }else if(val.equals(\"-\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 - num1));\\n            }else{\\n                st.add(Integer.parseInt(val));\\n            }\\n        }\\n        return st.pop();\\n    }\\n}\\n\\n\\nit says \"Output limit exceed\" why ?"
                    },
                    {
                        "username": "jxgr1t",
                        "content": "Help me with this TC:[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"] \\nGetting overflow \\n `int evalRPN(vector<string>& tokens) {\\n        stack<int>s;\\n        for(auto i:tokens)\\n        {\\n            if(i==\"+\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b+a);\\n            }\\n            else if(i==\"-\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b-a);\\n            }\\n            else if(i==\"/\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b/a);\\n            }\\n            else if(i==\"*\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b*a);\\n            }\\n            else s.push(stoi(i));\\n        }\\n        return s.top();\\n\\n    }\\n};`\\n\\nThanks"
                    },
                    {
                        "username": "jxgr1t",
                        "content": "[@Md_Shamim_Ahmmed](/Md_Shamim_Ahmmed) thanks man\\n"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "Hey, type cast ```int``` with ```long long``` when doing the multiplication of a & b."
                    },
                    {
                        "username": "yugalkishore59",
                        "content": "I want to know the reason for Runtime Error in my c++ code :  https://onlinegdb.com/O0nAvLx8n\\nIt is working fine in other online c++ compiler but it shows Runtime error in leetcode.\\nwhat is the cause and how can I fix this?\\n\\nRuntime Error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16"
                    },
                    {
                        "username": "rosie-i",
                        "content": "This guy has a really clear an helpful explanation of how Reverse Polish Notation works if, like me, you\\'d never encountered it before! (It does also basically explain the algorithm towards the end, so pause around 4 minutes if you want to try it yourself before that!)\\nhttps://www.youtube.com/watch?v=qN8LPIcY6K4"
                    },
                    {
                        "username": "disturbedbrown1",
                        "content": "The only tricky thing is: `Note that division between two integers should truncate toward zero.`. Took me a few minutes to understand why integer division, integer division with `math.floor` doesn\\'t work but `int()` works haha. (I use Python)"
                    },
                    {
                        "username": "Msey",
                        "content": "The main difficulty here is to knowledge of Reverse Polish Notation hehe. I\\'m not sure that you will be given the wikipedia page during the interview. Or if you ask for explaination in FAANG you know how would it look like lol. I felt like a dummy\\n\\nAll other things are very easy to implement. I\\'d say it\\'s easier than most of the easy problems"
                    },
                    {
                        "username": "Msey",
                        "content": "[@disturbedbrown1](/disturbedbrown1) Yes. The trick is in description, not implementation "
                    },
                    {
                        "username": "disturbedbrown1",
                        "content": "If we just look at the examples carefully, its simple postfix notation, and that is enough to solve the problem."
                    },
                    {
                        "username": "theAchiever",
                        "content": "This keeps on throwing emptystack exception please help.   \\n\\n public int evalRPN(String[] tokens) {\\n        Stack <Integer> stack=new Stack<>();\\n        if(tokens.length==0)\\n        return 0;\\n        for(int i=0;i<tokens.length;i++)\\n        {\\n            char ch=tokens[i].charAt(0);\\n            switch(ch)\\n            {\\n                case \\'+\\':\\n                stack.push(stack.pop()+stack.pop());\\n                break;\\n                case \\'-\\':\\n                stack.push(-stack.pop()+stack.pop());\\n                break;\\n                case \\'/\\':\\n                stack.push((int)(1.0/stack.pop()*stack.pop()));\\n                break;\\n                case \\'*\\':\\n                stack.push(stack.pop()*stack.pop());\\n                break;\\n                default:\\n                stack.push((int)i);\\n            }\\n           \\n        }\\n         return stack.pop();\\n        \\n    }\\n}"
                    },
                    {
                        "username": "ayush-tiwari26",
                        "content": "This question should be LC easy. "
                    },
                    {
                        "username": "M2rider",
                        "content": "✅The best and easiest algorithm to solve this problem is the use of stacks.\n\n 1. Start storing the elements of given string vector in a stack.\n 2. As and when you encounter a non-integer value(+,-,/,*) , put the symbol between the last two integers in the stack.\n 3. Push the answer in your stack and continue iterating through the vector string.\n 4. After the loop is over only one element will be left in the stack.\n 5. Return the element.\n\n Note: Remember to use long long instead of int as continuous additions and multiplications may lead to a very large value.\nThe time complexity of this solution will be O(n).\nn=size of the vector "
                    },
                    {
                        "username": "Sohith_Sai",
                        "content": "i got the doubt i have used long long but the function return type is in int right shouldn\\'t it raise an error as we have to return int but we are returning long long "
                    }
                ]
            },
            {
                "id": 1719310,
                "content": [
                    {
                        "username": "aryan20022003",
                        "content": "Hint : USE long long int"
                    },
                    {
                        "username": "avi__09",
                        "content": "class Solution {\\n\\n    Stack<Integer> st = new Stack<>();\\n\\n    public int evalRPN(String[] tokens) {\\n        \\n        for(int i=0; i<tokens.length; i++){\\n            \\n            String val = tokens[i];\\n            if(val.equals(\"*\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 * num1));\\n            }else if(val.equals(\"/\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 / num1));\\n            }else if(val.equals(\"+\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                System.out.println(st);\\n                st.add((int)(num2 + num1));\\n                \\n            }else if(val.equals(\"-\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 - num1));\\n            }else{\\n                st.add(Integer.parseInt(val));\\n            }\\n        }\\n        return st.pop();\\n    }\\n}\\n\\n\\nit says \"Output limit exceed\" why ?"
                    },
                    {
                        "username": "jxgr1t",
                        "content": "Help me with this TC:[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"] \\nGetting overflow \\n `int evalRPN(vector<string>& tokens) {\\n        stack<int>s;\\n        for(auto i:tokens)\\n        {\\n            if(i==\"+\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b+a);\\n            }\\n            else if(i==\"-\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b-a);\\n            }\\n            else if(i==\"/\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b/a);\\n            }\\n            else if(i==\"*\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b*a);\\n            }\\n            else s.push(stoi(i));\\n        }\\n        return s.top();\\n\\n    }\\n};`\\n\\nThanks"
                    },
                    {
                        "username": "jxgr1t",
                        "content": "[@Md_Shamim_Ahmmed](/Md_Shamim_Ahmmed) thanks man\\n"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "Hey, type cast ```int``` with ```long long``` when doing the multiplication of a & b."
                    },
                    {
                        "username": "yugalkishore59",
                        "content": "I want to know the reason for Runtime Error in my c++ code :  https://onlinegdb.com/O0nAvLx8n\\nIt is working fine in other online c++ compiler but it shows Runtime error in leetcode.\\nwhat is the cause and how can I fix this?\\n\\nRuntime Error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16"
                    },
                    {
                        "username": "rosie-i",
                        "content": "This guy has a really clear an helpful explanation of how Reverse Polish Notation works if, like me, you\\'d never encountered it before! (It does also basically explain the algorithm towards the end, so pause around 4 minutes if you want to try it yourself before that!)\\nhttps://www.youtube.com/watch?v=qN8LPIcY6K4"
                    },
                    {
                        "username": "disturbedbrown1",
                        "content": "The only tricky thing is: `Note that division between two integers should truncate toward zero.`. Took me a few minutes to understand why integer division, integer division with `math.floor` doesn\\'t work but `int()` works haha. (I use Python)"
                    },
                    {
                        "username": "Msey",
                        "content": "The main difficulty here is to knowledge of Reverse Polish Notation hehe. I\\'m not sure that you will be given the wikipedia page during the interview. Or if you ask for explaination in FAANG you know how would it look like lol. I felt like a dummy\\n\\nAll other things are very easy to implement. I\\'d say it\\'s easier than most of the easy problems"
                    },
                    {
                        "username": "Msey",
                        "content": "[@disturbedbrown1](/disturbedbrown1) Yes. The trick is in description, not implementation "
                    },
                    {
                        "username": "disturbedbrown1",
                        "content": "If we just look at the examples carefully, its simple postfix notation, and that is enough to solve the problem."
                    },
                    {
                        "username": "theAchiever",
                        "content": "This keeps on throwing emptystack exception please help.   \\n\\n public int evalRPN(String[] tokens) {\\n        Stack <Integer> stack=new Stack<>();\\n        if(tokens.length==0)\\n        return 0;\\n        for(int i=0;i<tokens.length;i++)\\n        {\\n            char ch=tokens[i].charAt(0);\\n            switch(ch)\\n            {\\n                case \\'+\\':\\n                stack.push(stack.pop()+stack.pop());\\n                break;\\n                case \\'-\\':\\n                stack.push(-stack.pop()+stack.pop());\\n                break;\\n                case \\'/\\':\\n                stack.push((int)(1.0/stack.pop()*stack.pop()));\\n                break;\\n                case \\'*\\':\\n                stack.push(stack.pop()*stack.pop());\\n                break;\\n                default:\\n                stack.push((int)i);\\n            }\\n           \\n        }\\n         return stack.pop();\\n        \\n    }\\n}"
                    },
                    {
                        "username": "ayush-tiwari26",
                        "content": "This question should be LC easy. "
                    },
                    {
                        "username": "M2rider",
                        "content": "✅The best and easiest algorithm to solve this problem is the use of stacks.\n\n 1. Start storing the elements of given string vector in a stack.\n 2. As and when you encounter a non-integer value(+,-,/,*) , put the symbol between the last two integers in the stack.\n 3. Push the answer in your stack and continue iterating through the vector string.\n 4. After the loop is over only one element will be left in the stack.\n 5. Return the element.\n\n Note: Remember to use long long instead of int as continuous additions and multiplications may lead to a very large value.\nThe time complexity of this solution will be O(n).\nn=size of the vector "
                    },
                    {
                        "username": "Sohith_Sai",
                        "content": "i got the doubt i have used long long but the function return type is in int right shouldn\\'t it raise an error as we have to return int but we are returning long long "
                    }
                ]
            },
            {
                "id": 1719209,
                "content": [
                    {
                        "username": "aryan20022003",
                        "content": "Hint : USE long long int"
                    },
                    {
                        "username": "avi__09",
                        "content": "class Solution {\\n\\n    Stack<Integer> st = new Stack<>();\\n\\n    public int evalRPN(String[] tokens) {\\n        \\n        for(int i=0; i<tokens.length; i++){\\n            \\n            String val = tokens[i];\\n            if(val.equals(\"*\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 * num1));\\n            }else if(val.equals(\"/\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 / num1));\\n            }else if(val.equals(\"+\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                System.out.println(st);\\n                st.add((int)(num2 + num1));\\n                \\n            }else if(val.equals(\"-\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 - num1));\\n            }else{\\n                st.add(Integer.parseInt(val));\\n            }\\n        }\\n        return st.pop();\\n    }\\n}\\n\\n\\nit says \"Output limit exceed\" why ?"
                    },
                    {
                        "username": "jxgr1t",
                        "content": "Help me with this TC:[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"] \\nGetting overflow \\n `int evalRPN(vector<string>& tokens) {\\n        stack<int>s;\\n        for(auto i:tokens)\\n        {\\n            if(i==\"+\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b+a);\\n            }\\n            else if(i==\"-\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b-a);\\n            }\\n            else if(i==\"/\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b/a);\\n            }\\n            else if(i==\"*\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b*a);\\n            }\\n            else s.push(stoi(i));\\n        }\\n        return s.top();\\n\\n    }\\n};`\\n\\nThanks"
                    },
                    {
                        "username": "jxgr1t",
                        "content": "[@Md_Shamim_Ahmmed](/Md_Shamim_Ahmmed) thanks man\\n"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "Hey, type cast ```int``` with ```long long``` when doing the multiplication of a & b."
                    },
                    {
                        "username": "yugalkishore59",
                        "content": "I want to know the reason for Runtime Error in my c++ code :  https://onlinegdb.com/O0nAvLx8n\\nIt is working fine in other online c++ compiler but it shows Runtime error in leetcode.\\nwhat is the cause and how can I fix this?\\n\\nRuntime Error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16"
                    },
                    {
                        "username": "rosie-i",
                        "content": "This guy has a really clear an helpful explanation of how Reverse Polish Notation works if, like me, you\\'d never encountered it before! (It does also basically explain the algorithm towards the end, so pause around 4 minutes if you want to try it yourself before that!)\\nhttps://www.youtube.com/watch?v=qN8LPIcY6K4"
                    },
                    {
                        "username": "disturbedbrown1",
                        "content": "The only tricky thing is: `Note that division between two integers should truncate toward zero.`. Took me a few minutes to understand why integer division, integer division with `math.floor` doesn\\'t work but `int()` works haha. (I use Python)"
                    },
                    {
                        "username": "Msey",
                        "content": "The main difficulty here is to knowledge of Reverse Polish Notation hehe. I\\'m not sure that you will be given the wikipedia page during the interview. Or if you ask for explaination in FAANG you know how would it look like lol. I felt like a dummy\\n\\nAll other things are very easy to implement. I\\'d say it\\'s easier than most of the easy problems"
                    },
                    {
                        "username": "Msey",
                        "content": "[@disturbedbrown1](/disturbedbrown1) Yes. The trick is in description, not implementation "
                    },
                    {
                        "username": "disturbedbrown1",
                        "content": "If we just look at the examples carefully, its simple postfix notation, and that is enough to solve the problem."
                    },
                    {
                        "username": "theAchiever",
                        "content": "This keeps on throwing emptystack exception please help.   \\n\\n public int evalRPN(String[] tokens) {\\n        Stack <Integer> stack=new Stack<>();\\n        if(tokens.length==0)\\n        return 0;\\n        for(int i=0;i<tokens.length;i++)\\n        {\\n            char ch=tokens[i].charAt(0);\\n            switch(ch)\\n            {\\n                case \\'+\\':\\n                stack.push(stack.pop()+stack.pop());\\n                break;\\n                case \\'-\\':\\n                stack.push(-stack.pop()+stack.pop());\\n                break;\\n                case \\'/\\':\\n                stack.push((int)(1.0/stack.pop()*stack.pop()));\\n                break;\\n                case \\'*\\':\\n                stack.push(stack.pop()*stack.pop());\\n                break;\\n                default:\\n                stack.push((int)i);\\n            }\\n           \\n        }\\n         return stack.pop();\\n        \\n    }\\n}"
                    },
                    {
                        "username": "ayush-tiwari26",
                        "content": "This question should be LC easy. "
                    },
                    {
                        "username": "M2rider",
                        "content": "✅The best and easiest algorithm to solve this problem is the use of stacks.\n\n 1. Start storing the elements of given string vector in a stack.\n 2. As and when you encounter a non-integer value(+,-,/,*) , put the symbol between the last two integers in the stack.\n 3. Push the answer in your stack and continue iterating through the vector string.\n 4. After the loop is over only one element will be left in the stack.\n 5. Return the element.\n\n Note: Remember to use long long instead of int as continuous additions and multiplications may lead to a very large value.\nThe time complexity of this solution will be O(n).\nn=size of the vector "
                    },
                    {
                        "username": "Sohith_Sai",
                        "content": "i got the doubt i have used long long but the function return type is in int right shouldn\\'t it raise an error as we have to return int but we are returning long long "
                    }
                ]
            },
            {
                "id": 1719193,
                "content": [
                    {
                        "username": "aryan20022003",
                        "content": "Hint : USE long long int"
                    },
                    {
                        "username": "avi__09",
                        "content": "class Solution {\\n\\n    Stack<Integer> st = new Stack<>();\\n\\n    public int evalRPN(String[] tokens) {\\n        \\n        for(int i=0; i<tokens.length; i++){\\n            \\n            String val = tokens[i];\\n            if(val.equals(\"*\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 * num1));\\n            }else if(val.equals(\"/\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 / num1));\\n            }else if(val.equals(\"+\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                System.out.println(st);\\n                st.add((int)(num2 + num1));\\n                \\n            }else if(val.equals(\"-\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 - num1));\\n            }else{\\n                st.add(Integer.parseInt(val));\\n            }\\n        }\\n        return st.pop();\\n    }\\n}\\n\\n\\nit says \"Output limit exceed\" why ?"
                    },
                    {
                        "username": "jxgr1t",
                        "content": "Help me with this TC:[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"] \\nGetting overflow \\n `int evalRPN(vector<string>& tokens) {\\n        stack<int>s;\\n        for(auto i:tokens)\\n        {\\n            if(i==\"+\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b+a);\\n            }\\n            else if(i==\"-\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b-a);\\n            }\\n            else if(i==\"/\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b/a);\\n            }\\n            else if(i==\"*\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b*a);\\n            }\\n            else s.push(stoi(i));\\n        }\\n        return s.top();\\n\\n    }\\n};`\\n\\nThanks"
                    },
                    {
                        "username": "jxgr1t",
                        "content": "[@Md_Shamim_Ahmmed](/Md_Shamim_Ahmmed) thanks man\\n"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "Hey, type cast ```int``` with ```long long``` when doing the multiplication of a & b."
                    },
                    {
                        "username": "yugalkishore59",
                        "content": "I want to know the reason for Runtime Error in my c++ code :  https://onlinegdb.com/O0nAvLx8n\\nIt is working fine in other online c++ compiler but it shows Runtime error in leetcode.\\nwhat is the cause and how can I fix this?\\n\\nRuntime Error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16"
                    },
                    {
                        "username": "rosie-i",
                        "content": "This guy has a really clear an helpful explanation of how Reverse Polish Notation works if, like me, you\\'d never encountered it before! (It does also basically explain the algorithm towards the end, so pause around 4 minutes if you want to try it yourself before that!)\\nhttps://www.youtube.com/watch?v=qN8LPIcY6K4"
                    },
                    {
                        "username": "disturbedbrown1",
                        "content": "The only tricky thing is: `Note that division between two integers should truncate toward zero.`. Took me a few minutes to understand why integer division, integer division with `math.floor` doesn\\'t work but `int()` works haha. (I use Python)"
                    },
                    {
                        "username": "Msey",
                        "content": "The main difficulty here is to knowledge of Reverse Polish Notation hehe. I\\'m not sure that you will be given the wikipedia page during the interview. Or if you ask for explaination in FAANG you know how would it look like lol. I felt like a dummy\\n\\nAll other things are very easy to implement. I\\'d say it\\'s easier than most of the easy problems"
                    },
                    {
                        "username": "Msey",
                        "content": "[@disturbedbrown1](/disturbedbrown1) Yes. The trick is in description, not implementation "
                    },
                    {
                        "username": "disturbedbrown1",
                        "content": "If we just look at the examples carefully, its simple postfix notation, and that is enough to solve the problem."
                    },
                    {
                        "username": "theAchiever",
                        "content": "This keeps on throwing emptystack exception please help.   \\n\\n public int evalRPN(String[] tokens) {\\n        Stack <Integer> stack=new Stack<>();\\n        if(tokens.length==0)\\n        return 0;\\n        for(int i=0;i<tokens.length;i++)\\n        {\\n            char ch=tokens[i].charAt(0);\\n            switch(ch)\\n            {\\n                case \\'+\\':\\n                stack.push(stack.pop()+stack.pop());\\n                break;\\n                case \\'-\\':\\n                stack.push(-stack.pop()+stack.pop());\\n                break;\\n                case \\'/\\':\\n                stack.push((int)(1.0/stack.pop()*stack.pop()));\\n                break;\\n                case \\'*\\':\\n                stack.push(stack.pop()*stack.pop());\\n                break;\\n                default:\\n                stack.push((int)i);\\n            }\\n           \\n        }\\n         return stack.pop();\\n        \\n    }\\n}"
                    },
                    {
                        "username": "ayush-tiwari26",
                        "content": "This question should be LC easy. "
                    },
                    {
                        "username": "M2rider",
                        "content": "✅The best and easiest algorithm to solve this problem is the use of stacks.\n\n 1. Start storing the elements of given string vector in a stack.\n 2. As and when you encounter a non-integer value(+,-,/,*) , put the symbol between the last two integers in the stack.\n 3. Push the answer in your stack and continue iterating through the vector string.\n 4. After the loop is over only one element will be left in the stack.\n 5. Return the element.\n\n Note: Remember to use long long instead of int as continuous additions and multiplications may lead to a very large value.\nThe time complexity of this solution will be O(n).\nn=size of the vector "
                    },
                    {
                        "username": "Sohith_Sai",
                        "content": "i got the doubt i have used long long but the function return type is in int right shouldn\\'t it raise an error as we have to return int but we are returning long long "
                    }
                ]
            },
            {
                "id": 1719172,
                "content": [
                    {
                        "username": "aryan20022003",
                        "content": "Hint : USE long long int"
                    },
                    {
                        "username": "avi__09",
                        "content": "class Solution {\\n\\n    Stack<Integer> st = new Stack<>();\\n\\n    public int evalRPN(String[] tokens) {\\n        \\n        for(int i=0; i<tokens.length; i++){\\n            \\n            String val = tokens[i];\\n            if(val.equals(\"*\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 * num1));\\n            }else if(val.equals(\"/\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 / num1));\\n            }else if(val.equals(\"+\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                System.out.println(st);\\n                st.add((int)(num2 + num1));\\n                \\n            }else if(val.equals(\"-\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 - num1));\\n            }else{\\n                st.add(Integer.parseInt(val));\\n            }\\n        }\\n        return st.pop();\\n    }\\n}\\n\\n\\nit says \"Output limit exceed\" why ?"
                    },
                    {
                        "username": "jxgr1t",
                        "content": "Help me with this TC:[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"] \\nGetting overflow \\n `int evalRPN(vector<string>& tokens) {\\n        stack<int>s;\\n        for(auto i:tokens)\\n        {\\n            if(i==\"+\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b+a);\\n            }\\n            else if(i==\"-\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b-a);\\n            }\\n            else if(i==\"/\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b/a);\\n            }\\n            else if(i==\"*\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b*a);\\n            }\\n            else s.push(stoi(i));\\n        }\\n        return s.top();\\n\\n    }\\n};`\\n\\nThanks"
                    },
                    {
                        "username": "jxgr1t",
                        "content": "[@Md_Shamim_Ahmmed](/Md_Shamim_Ahmmed) thanks man\\n"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "Hey, type cast ```int``` with ```long long``` when doing the multiplication of a & b."
                    },
                    {
                        "username": "yugalkishore59",
                        "content": "I want to know the reason for Runtime Error in my c++ code :  https://onlinegdb.com/O0nAvLx8n\\nIt is working fine in other online c++ compiler but it shows Runtime error in leetcode.\\nwhat is the cause and how can I fix this?\\n\\nRuntime Error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16"
                    },
                    {
                        "username": "rosie-i",
                        "content": "This guy has a really clear an helpful explanation of how Reverse Polish Notation works if, like me, you\\'d never encountered it before! (It does also basically explain the algorithm towards the end, so pause around 4 minutes if you want to try it yourself before that!)\\nhttps://www.youtube.com/watch?v=qN8LPIcY6K4"
                    },
                    {
                        "username": "disturbedbrown1",
                        "content": "The only tricky thing is: `Note that division between two integers should truncate toward zero.`. Took me a few minutes to understand why integer division, integer division with `math.floor` doesn\\'t work but `int()` works haha. (I use Python)"
                    },
                    {
                        "username": "Msey",
                        "content": "The main difficulty here is to knowledge of Reverse Polish Notation hehe. I\\'m not sure that you will be given the wikipedia page during the interview. Or if you ask for explaination in FAANG you know how would it look like lol. I felt like a dummy\\n\\nAll other things are very easy to implement. I\\'d say it\\'s easier than most of the easy problems"
                    },
                    {
                        "username": "Msey",
                        "content": "[@disturbedbrown1](/disturbedbrown1) Yes. The trick is in description, not implementation "
                    },
                    {
                        "username": "disturbedbrown1",
                        "content": "If we just look at the examples carefully, its simple postfix notation, and that is enough to solve the problem."
                    },
                    {
                        "username": "theAchiever",
                        "content": "This keeps on throwing emptystack exception please help.   \\n\\n public int evalRPN(String[] tokens) {\\n        Stack <Integer> stack=new Stack<>();\\n        if(tokens.length==0)\\n        return 0;\\n        for(int i=0;i<tokens.length;i++)\\n        {\\n            char ch=tokens[i].charAt(0);\\n            switch(ch)\\n            {\\n                case \\'+\\':\\n                stack.push(stack.pop()+stack.pop());\\n                break;\\n                case \\'-\\':\\n                stack.push(-stack.pop()+stack.pop());\\n                break;\\n                case \\'/\\':\\n                stack.push((int)(1.0/stack.pop()*stack.pop()));\\n                break;\\n                case \\'*\\':\\n                stack.push(stack.pop()*stack.pop());\\n                break;\\n                default:\\n                stack.push((int)i);\\n            }\\n           \\n        }\\n         return stack.pop();\\n        \\n    }\\n}"
                    },
                    {
                        "username": "ayush-tiwari26",
                        "content": "This question should be LC easy. "
                    },
                    {
                        "username": "M2rider",
                        "content": "✅The best and easiest algorithm to solve this problem is the use of stacks.\n\n 1. Start storing the elements of given string vector in a stack.\n 2. As and when you encounter a non-integer value(+,-,/,*) , put the symbol between the last two integers in the stack.\n 3. Push the answer in your stack and continue iterating through the vector string.\n 4. After the loop is over only one element will be left in the stack.\n 5. Return the element.\n\n Note: Remember to use long long instead of int as continuous additions and multiplications may lead to a very large value.\nThe time complexity of this solution will be O(n).\nn=size of the vector "
                    },
                    {
                        "username": "Sohith_Sai",
                        "content": "i got the doubt i have used long long but the function return type is in int right shouldn\\'t it raise an error as we have to return int but we are returning long long "
                    }
                ]
            },
            {
                "id": 1719161,
                "content": [
                    {
                        "username": "aryan20022003",
                        "content": "Hint : USE long long int"
                    },
                    {
                        "username": "avi__09",
                        "content": "class Solution {\\n\\n    Stack<Integer> st = new Stack<>();\\n\\n    public int evalRPN(String[] tokens) {\\n        \\n        for(int i=0; i<tokens.length; i++){\\n            \\n            String val = tokens[i];\\n            if(val.equals(\"*\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 * num1));\\n            }else if(val.equals(\"/\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 / num1));\\n            }else if(val.equals(\"+\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                System.out.println(st);\\n                st.add((int)(num2 + num1));\\n                \\n            }else if(val.equals(\"-\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 - num1));\\n            }else{\\n                st.add(Integer.parseInt(val));\\n            }\\n        }\\n        return st.pop();\\n    }\\n}\\n\\n\\nit says \"Output limit exceed\" why ?"
                    },
                    {
                        "username": "jxgr1t",
                        "content": "Help me with this TC:[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"] \\nGetting overflow \\n `int evalRPN(vector<string>& tokens) {\\n        stack<int>s;\\n        for(auto i:tokens)\\n        {\\n            if(i==\"+\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b+a);\\n            }\\n            else if(i==\"-\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b-a);\\n            }\\n            else if(i==\"/\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b/a);\\n            }\\n            else if(i==\"*\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b*a);\\n            }\\n            else s.push(stoi(i));\\n        }\\n        return s.top();\\n\\n    }\\n};`\\n\\nThanks"
                    },
                    {
                        "username": "jxgr1t",
                        "content": "[@Md_Shamim_Ahmmed](/Md_Shamim_Ahmmed) thanks man\\n"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "Hey, type cast ```int``` with ```long long``` when doing the multiplication of a & b."
                    },
                    {
                        "username": "yugalkishore59",
                        "content": "I want to know the reason for Runtime Error in my c++ code :  https://onlinegdb.com/O0nAvLx8n\\nIt is working fine in other online c++ compiler but it shows Runtime error in leetcode.\\nwhat is the cause and how can I fix this?\\n\\nRuntime Error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16"
                    },
                    {
                        "username": "rosie-i",
                        "content": "This guy has a really clear an helpful explanation of how Reverse Polish Notation works if, like me, you\\'d never encountered it before! (It does also basically explain the algorithm towards the end, so pause around 4 minutes if you want to try it yourself before that!)\\nhttps://www.youtube.com/watch?v=qN8LPIcY6K4"
                    },
                    {
                        "username": "disturbedbrown1",
                        "content": "The only tricky thing is: `Note that division between two integers should truncate toward zero.`. Took me a few minutes to understand why integer division, integer division with `math.floor` doesn\\'t work but `int()` works haha. (I use Python)"
                    },
                    {
                        "username": "Msey",
                        "content": "The main difficulty here is to knowledge of Reverse Polish Notation hehe. I\\'m not sure that you will be given the wikipedia page during the interview. Or if you ask for explaination in FAANG you know how would it look like lol. I felt like a dummy\\n\\nAll other things are very easy to implement. I\\'d say it\\'s easier than most of the easy problems"
                    },
                    {
                        "username": "Msey",
                        "content": "[@disturbedbrown1](/disturbedbrown1) Yes. The trick is in description, not implementation "
                    },
                    {
                        "username": "disturbedbrown1",
                        "content": "If we just look at the examples carefully, its simple postfix notation, and that is enough to solve the problem."
                    },
                    {
                        "username": "theAchiever",
                        "content": "This keeps on throwing emptystack exception please help.   \\n\\n public int evalRPN(String[] tokens) {\\n        Stack <Integer> stack=new Stack<>();\\n        if(tokens.length==0)\\n        return 0;\\n        for(int i=0;i<tokens.length;i++)\\n        {\\n            char ch=tokens[i].charAt(0);\\n            switch(ch)\\n            {\\n                case \\'+\\':\\n                stack.push(stack.pop()+stack.pop());\\n                break;\\n                case \\'-\\':\\n                stack.push(-stack.pop()+stack.pop());\\n                break;\\n                case \\'/\\':\\n                stack.push((int)(1.0/stack.pop()*stack.pop()));\\n                break;\\n                case \\'*\\':\\n                stack.push(stack.pop()*stack.pop());\\n                break;\\n                default:\\n                stack.push((int)i);\\n            }\\n           \\n        }\\n         return stack.pop();\\n        \\n    }\\n}"
                    },
                    {
                        "username": "ayush-tiwari26",
                        "content": "This question should be LC easy. "
                    },
                    {
                        "username": "M2rider",
                        "content": "✅The best and easiest algorithm to solve this problem is the use of stacks.\n\n 1. Start storing the elements of given string vector in a stack.\n 2. As and when you encounter a non-integer value(+,-,/,*) , put the symbol between the last two integers in the stack.\n 3. Push the answer in your stack and continue iterating through the vector string.\n 4. After the loop is over only one element will be left in the stack.\n 5. Return the element.\n\n Note: Remember to use long long instead of int as continuous additions and multiplications may lead to a very large value.\nThe time complexity of this solution will be O(n).\nn=size of the vector "
                    },
                    {
                        "username": "Sohith_Sai",
                        "content": "i got the doubt i have used long long but the function return type is in int right shouldn\\'t it raise an error as we have to return int but we are returning long long "
                    }
                ]
            },
            {
                "id": 1719129,
                "content": [
                    {
                        "username": "aryan20022003",
                        "content": "Hint : USE long long int"
                    },
                    {
                        "username": "avi__09",
                        "content": "class Solution {\\n\\n    Stack<Integer> st = new Stack<>();\\n\\n    public int evalRPN(String[] tokens) {\\n        \\n        for(int i=0; i<tokens.length; i++){\\n            \\n            String val = tokens[i];\\n            if(val.equals(\"*\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 * num1));\\n            }else if(val.equals(\"/\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 / num1));\\n            }else if(val.equals(\"+\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                System.out.println(st);\\n                st.add((int)(num2 + num1));\\n                \\n            }else if(val.equals(\"-\")){\\n                int num1 = st.pop();\\n                int num2 = st.pop();\\n                st.add((int)(num2 - num1));\\n            }else{\\n                st.add(Integer.parseInt(val));\\n            }\\n        }\\n        return st.pop();\\n    }\\n}\\n\\n\\nit says \"Output limit exceed\" why ?"
                    },
                    {
                        "username": "jxgr1t",
                        "content": "Help me with this TC:[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"] \\nGetting overflow \\n `int evalRPN(vector<string>& tokens) {\\n        stack<int>s;\\n        for(auto i:tokens)\\n        {\\n            if(i==\"+\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b+a);\\n            }\\n            else if(i==\"-\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b-a);\\n            }\\n            else if(i==\"/\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b/a);\\n            }\\n            else if(i==\"*\")\\n            {\\n                int a=s.top();s.pop();\\n                int b=s.top();s.pop();\\n                s.push(b*a);\\n            }\\n            else s.push(stoi(i));\\n        }\\n        return s.top();\\n\\n    }\\n};`\\n\\nThanks"
                    },
                    {
                        "username": "jxgr1t",
                        "content": "[@Md_Shamim_Ahmmed](/Md_Shamim_Ahmmed) thanks man\\n"
                    },
                    {
                        "username": "md_shamim_ahmad",
                        "content": "Hey, type cast ```int``` with ```long long``` when doing the multiplication of a & b."
                    },
                    {
                        "username": "yugalkishore59",
                        "content": "I want to know the reason for Runtime Error in my c++ code :  https://onlinegdb.com/O0nAvLx8n\\nIt is working fine in other online c++ compiler but it shows Runtime error in leetcode.\\nwhat is the cause and how can I fix this?\\n\\nRuntime Error\\nLine 171: Char 16: runtime error: reference binding to misaligned address 0xbebebebebebec0ba for type \\'int\\', which requires 4 byte alignment (stl_deque.h)\\n0xbebebebebebec0ba: note: pointer points here\\n<memory cannot be printed>\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_deque.h:180:16"
                    },
                    {
                        "username": "rosie-i",
                        "content": "This guy has a really clear an helpful explanation of how Reverse Polish Notation works if, like me, you\\'d never encountered it before! (It does also basically explain the algorithm towards the end, so pause around 4 minutes if you want to try it yourself before that!)\\nhttps://www.youtube.com/watch?v=qN8LPIcY6K4"
                    },
                    {
                        "username": "disturbedbrown1",
                        "content": "The only tricky thing is: `Note that division between two integers should truncate toward zero.`. Took me a few minutes to understand why integer division, integer division with `math.floor` doesn\\'t work but `int()` works haha. (I use Python)"
                    },
                    {
                        "username": "Msey",
                        "content": "The main difficulty here is to knowledge of Reverse Polish Notation hehe. I\\'m not sure that you will be given the wikipedia page during the interview. Or if you ask for explaination in FAANG you know how would it look like lol. I felt like a dummy\\n\\nAll other things are very easy to implement. I\\'d say it\\'s easier than most of the easy problems"
                    },
                    {
                        "username": "Msey",
                        "content": "[@disturbedbrown1](/disturbedbrown1) Yes. The trick is in description, not implementation "
                    },
                    {
                        "username": "disturbedbrown1",
                        "content": "If we just look at the examples carefully, its simple postfix notation, and that is enough to solve the problem."
                    },
                    {
                        "username": "theAchiever",
                        "content": "This keeps on throwing emptystack exception please help.   \\n\\n public int evalRPN(String[] tokens) {\\n        Stack <Integer> stack=new Stack<>();\\n        if(tokens.length==0)\\n        return 0;\\n        for(int i=0;i<tokens.length;i++)\\n        {\\n            char ch=tokens[i].charAt(0);\\n            switch(ch)\\n            {\\n                case \\'+\\':\\n                stack.push(stack.pop()+stack.pop());\\n                break;\\n                case \\'-\\':\\n                stack.push(-stack.pop()+stack.pop());\\n                break;\\n                case \\'/\\':\\n                stack.push((int)(1.0/stack.pop()*stack.pop()));\\n                break;\\n                case \\'*\\':\\n                stack.push(stack.pop()*stack.pop());\\n                break;\\n                default:\\n                stack.push((int)i);\\n            }\\n           \\n        }\\n         return stack.pop();\\n        \\n    }\\n}"
                    },
                    {
                        "username": "ayush-tiwari26",
                        "content": "This question should be LC easy. "
                    },
                    {
                        "username": "M2rider",
                        "content": "✅The best and easiest algorithm to solve this problem is the use of stacks.\n\n 1. Start storing the elements of given string vector in a stack.\n 2. As and when you encounter a non-integer value(+,-,/,*) , put the symbol between the last two integers in the stack.\n 3. Push the answer in your stack and continue iterating through the vector string.\n 4. After the loop is over only one element will be left in the stack.\n 5. Return the element.\n\n Note: Remember to use long long instead of int as continuous additions and multiplications may lead to a very large value.\nThe time complexity of this solution will be O(n).\nn=size of the vector "
                    },
                    {
                        "username": "Sohith_Sai",
                        "content": "i got the doubt i have used long long but the function return type is in int right shouldn\\'t it raise an error as we have to return int but we are returning long long "
                    }
                ]
            },
            {
                "id": 1719036,
                "content": [
                    {
                        "username": "dhananjaysarathe26",
                        "content": "[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"]\\nRuntime error .. overflow stack . someone hlep"
                    },
                    {
                        "username": "ShubhamSukum",
                        "content": "I changed return value too.XD\\nlong long int evalRPN(vector<string>& tokens)\\n\\nALL TEST CASES PASSED"
                    },
                    {
                        "username": "ShubhamSukum",
                        "content": "instead of int use long long int"
                    },
                    {
                        "username": "dhananjaysarathe26",
                        "content": "[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"]\\n\\nRunTime Error in executing multiplication *.. Someone pls help"
                    },
                    {
                        "username": "namanpuri",
                        "content": "Your input format is wrong \\n\\n3rd , 5th , 7th , 9th elements are empty  but in question it is given input will be valid always !"
                    },
                    {
                        "username": "Brutal7skull",
                        "content": "Did anyone think of doing this question using 3 pointers?\\n(I did, stuck at some edge cases)"
                    },
                    {
                        "username": "ghoshkoustav18",
                        "content": "https://youtu.be/pqspk3MfWts\\nevaluate-reverse-polish-notation in Java within 5 mins\\n"
                    },
                    {
                        "username": "user4851h",
                        "content": "someone help me resolving this error .\\nim getting this error:\\n\\nLine 10: Char 22: runtime error: signed integer overflow: 8 * 268435456 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:19:22\\n\\ncode: \\n\\nclass Solution {\\npublic:\\nint fun(string s,int x,int y){\\n    {\\n        if(s==\"+\")\\n            return (x+y)%1000000007;\\n        if(s==\"-\")\\n            return (y-x)%1000000007;\\n        if(s==\"*\")\\n            return (x*y)%1000000007;\\n        if(s==\"/\")\\n            return (y/x);\\n        return -1;\\n    }\\n}\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;\\n        int n=tokens.size();\\n        for(int i=0;i<n;i++){\\n            if(tokens[i]==\"+\"||tokens[i]==\"-\"||tokens[i]==\"/\"||tokens[i]==\"*\"){\\n                int x=s.top();\\n                s.pop();\\n                int y=s.top();\\n                s.pop();\\n                s.push(fun(tokens[i],x,y));    \\n            }\\n            else{\\n                s.push(stoi(tokens[i]));\\n            }\\n        }return s.top();\\n    }\\n};\\n"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Neeraj sharma](/user4851h)\\n\\nuse `long long int` in place of `int`\\n\\nand Upvote, if it helps :-)"
                    },
                    {
                        "username": "andynullwong",
                        "content": "For anyone struggling with the test case involving 6/-132 = -1 (-0.04545454545)\\n\\nMake sure that the method you are using is actually rounding towards zero, Some languages will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case).\\n\\nRegardless whether or not it is a fair \\'gotcha\\', on an interview it will be some bonus points showing mastery in the subtle differences between how Java and Javascript handles rounding for example."
                    },
                    {
                        "username": "ramney",
                        "content": "Please help me out what is mistake in this\\n\\nint evalRPN(vector<string>& tokens) {\\n\\n        stack<int> s;\\n\\n        int res = 0;\\n        for(int i = 0; i < tokens.size() ;i++)\\n        {\\n        if(tokens[i][0] == \\'+\\' || tokens[i][0] == \\'-\\' || tokens[i][0]==\\'*\\' || tokens[i][0]==\\'/\\')\\n        {\\n            int s1 =s.top();\\n            s.pop();\\n            int s2 =s.top();\\n            s.pop();\\n            if(tokens[i][0] == \\'+\\')\\n            res+=(s1)+(s2);\\n            if(tokens[i][0] == \\'-\\')\\n            res+=(s2)-(s1);\\n            if(tokens[i][0]== \\'*\\')\\n            res+=(s1)*(s2);\\n            if(tokens[i][0]==\\'/\\')\\n            res+=(s2)/(s1);\\n        } else s.push(stoi(tokens[i]));\\n        }\\n       return res; \\n    }"
                    },
                    {
                        "username": "peihao61",
                        "content": "        if(tokens[i][0] == \\'-\\')\\n        res+=(s2)-(s1);\\n\\nThis condition is a BUG when facing negative integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Ram Munde](/ramney)\\n`tokens` is 1D array but you have mentioned two subscripts while accessing data from `tokens`\\n\\nHope it helps !"
                    },
                    {
                        "username": "abhayx2910",
                        "content": "Line 17: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:26:28 i m getting this error in my code \\n                    s.top()*=a;\\nhow to resolve this error can anyone suggest\\n"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "replace all integer with long long even the return type of function"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Abhishek kumar](/abhi_shek81)\\n\\nuse `long int` in place of `int`\\n\\nand Upvote, if it helps :-)"
                    },
                    {
                        "username": "mkprajapati1614",
                        "content": "Very intuitive and straightforward `STACK` based solution.\\nKeep pushing numbers to stack and apply the operation on top 2 elements only. Then push thus obtained result back into the same stack.` Return the top element of stack at the end`"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "I think the best way is to use stack and store numbers in it and results also,\\nwhen you need to do an operation just use the top two numbers in the stack."
                    },
                    {
                        "username": "gauravkumar59829",
                        "content": "[@abdelmohaymn](/abdelmohaymn) Yes I have done it . I have also posted it in the solution section for others"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "[@gauravkumar59829](/gauravkumar59829)  replace all integer with long long even the return type of function"
                    },
                    {
                        "username": "gauravkumar59829",
                        "content": "I have done the same but it is giving overflow.\\n"
                    }
                ]
            },
            {
                "id": 1719034,
                "content": [
                    {
                        "username": "dhananjaysarathe26",
                        "content": "[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"]\\nRuntime error .. overflow stack . someone hlep"
                    },
                    {
                        "username": "ShubhamSukum",
                        "content": "I changed return value too.XD\\nlong long int evalRPN(vector<string>& tokens)\\n\\nALL TEST CASES PASSED"
                    },
                    {
                        "username": "ShubhamSukum",
                        "content": "instead of int use long long int"
                    },
                    {
                        "username": "dhananjaysarathe26",
                        "content": "[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"]\\n\\nRunTime Error in executing multiplication *.. Someone pls help"
                    },
                    {
                        "username": "namanpuri",
                        "content": "Your input format is wrong \\n\\n3rd , 5th , 7th , 9th elements are empty  but in question it is given input will be valid always !"
                    },
                    {
                        "username": "Brutal7skull",
                        "content": "Did anyone think of doing this question using 3 pointers?\\n(I did, stuck at some edge cases)"
                    },
                    {
                        "username": "ghoshkoustav18",
                        "content": "https://youtu.be/pqspk3MfWts\\nevaluate-reverse-polish-notation in Java within 5 mins\\n"
                    },
                    {
                        "username": "user4851h",
                        "content": "someone help me resolving this error .\\nim getting this error:\\n\\nLine 10: Char 22: runtime error: signed integer overflow: 8 * 268435456 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:19:22\\n\\ncode: \\n\\nclass Solution {\\npublic:\\nint fun(string s,int x,int y){\\n    {\\n        if(s==\"+\")\\n            return (x+y)%1000000007;\\n        if(s==\"-\")\\n            return (y-x)%1000000007;\\n        if(s==\"*\")\\n            return (x*y)%1000000007;\\n        if(s==\"/\")\\n            return (y/x);\\n        return -1;\\n    }\\n}\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;\\n        int n=tokens.size();\\n        for(int i=0;i<n;i++){\\n            if(tokens[i]==\"+\"||tokens[i]==\"-\"||tokens[i]==\"/\"||tokens[i]==\"*\"){\\n                int x=s.top();\\n                s.pop();\\n                int y=s.top();\\n                s.pop();\\n                s.push(fun(tokens[i],x,y));    \\n            }\\n            else{\\n                s.push(stoi(tokens[i]));\\n            }\\n        }return s.top();\\n    }\\n};\\n"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Neeraj sharma](/user4851h)\\n\\nuse `long long int` in place of `int`\\n\\nand Upvote, if it helps :-)"
                    },
                    {
                        "username": "andynullwong",
                        "content": "For anyone struggling with the test case involving 6/-132 = -1 (-0.04545454545)\\n\\nMake sure that the method you are using is actually rounding towards zero, Some languages will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case).\\n\\nRegardless whether or not it is a fair \\'gotcha\\', on an interview it will be some bonus points showing mastery in the subtle differences between how Java and Javascript handles rounding for example."
                    },
                    {
                        "username": "ramney",
                        "content": "Please help me out what is mistake in this\\n\\nint evalRPN(vector<string>& tokens) {\\n\\n        stack<int> s;\\n\\n        int res = 0;\\n        for(int i = 0; i < tokens.size() ;i++)\\n        {\\n        if(tokens[i][0] == \\'+\\' || tokens[i][0] == \\'-\\' || tokens[i][0]==\\'*\\' || tokens[i][0]==\\'/\\')\\n        {\\n            int s1 =s.top();\\n            s.pop();\\n            int s2 =s.top();\\n            s.pop();\\n            if(tokens[i][0] == \\'+\\')\\n            res+=(s1)+(s2);\\n            if(tokens[i][0] == \\'-\\')\\n            res+=(s2)-(s1);\\n            if(tokens[i][0]== \\'*\\')\\n            res+=(s1)*(s2);\\n            if(tokens[i][0]==\\'/\\')\\n            res+=(s2)/(s1);\\n        } else s.push(stoi(tokens[i]));\\n        }\\n       return res; \\n    }"
                    },
                    {
                        "username": "peihao61",
                        "content": "        if(tokens[i][0] == \\'-\\')\\n        res+=(s2)-(s1);\\n\\nThis condition is a BUG when facing negative integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Ram Munde](/ramney)\\n`tokens` is 1D array but you have mentioned two subscripts while accessing data from `tokens`\\n\\nHope it helps !"
                    },
                    {
                        "username": "abhayx2910",
                        "content": "Line 17: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:26:28 i m getting this error in my code \\n                    s.top()*=a;\\nhow to resolve this error can anyone suggest\\n"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "replace all integer with long long even the return type of function"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Abhishek kumar](/abhi_shek81)\\n\\nuse `long int` in place of `int`\\n\\nand Upvote, if it helps :-)"
                    },
                    {
                        "username": "mkprajapati1614",
                        "content": "Very intuitive and straightforward `STACK` based solution.\\nKeep pushing numbers to stack and apply the operation on top 2 elements only. Then push thus obtained result back into the same stack.` Return the top element of stack at the end`"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "I think the best way is to use stack and store numbers in it and results also,\\nwhen you need to do an operation just use the top two numbers in the stack."
                    },
                    {
                        "username": "gauravkumar59829",
                        "content": "[@abdelmohaymn](/abdelmohaymn) Yes I have done it . I have also posted it in the solution section for others"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "[@gauravkumar59829](/gauravkumar59829)  replace all integer with long long even the return type of function"
                    },
                    {
                        "username": "gauravkumar59829",
                        "content": "I have done the same but it is giving overflow.\\n"
                    }
                ]
            },
            {
                "id": 1719030,
                "content": [
                    {
                        "username": "dhananjaysarathe26",
                        "content": "[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"]\\nRuntime error .. overflow stack . someone hlep"
                    },
                    {
                        "username": "ShubhamSukum",
                        "content": "I changed return value too.XD\\nlong long int evalRPN(vector<string>& tokens)\\n\\nALL TEST CASES PASSED"
                    },
                    {
                        "username": "ShubhamSukum",
                        "content": "instead of int use long long int"
                    },
                    {
                        "username": "dhananjaysarathe26",
                        "content": "[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"]\\n\\nRunTime Error in executing multiplication *.. Someone pls help"
                    },
                    {
                        "username": "namanpuri",
                        "content": "Your input format is wrong \\n\\n3rd , 5th , 7th , 9th elements are empty  but in question it is given input will be valid always !"
                    },
                    {
                        "username": "Brutal7skull",
                        "content": "Did anyone think of doing this question using 3 pointers?\\n(I did, stuck at some edge cases)"
                    },
                    {
                        "username": "ghoshkoustav18",
                        "content": "https://youtu.be/pqspk3MfWts\\nevaluate-reverse-polish-notation in Java within 5 mins\\n"
                    },
                    {
                        "username": "user4851h",
                        "content": "someone help me resolving this error .\\nim getting this error:\\n\\nLine 10: Char 22: runtime error: signed integer overflow: 8 * 268435456 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:19:22\\n\\ncode: \\n\\nclass Solution {\\npublic:\\nint fun(string s,int x,int y){\\n    {\\n        if(s==\"+\")\\n            return (x+y)%1000000007;\\n        if(s==\"-\")\\n            return (y-x)%1000000007;\\n        if(s==\"*\")\\n            return (x*y)%1000000007;\\n        if(s==\"/\")\\n            return (y/x);\\n        return -1;\\n    }\\n}\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;\\n        int n=tokens.size();\\n        for(int i=0;i<n;i++){\\n            if(tokens[i]==\"+\"||tokens[i]==\"-\"||tokens[i]==\"/\"||tokens[i]==\"*\"){\\n                int x=s.top();\\n                s.pop();\\n                int y=s.top();\\n                s.pop();\\n                s.push(fun(tokens[i],x,y));    \\n            }\\n            else{\\n                s.push(stoi(tokens[i]));\\n            }\\n        }return s.top();\\n    }\\n};\\n"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Neeraj sharma](/user4851h)\\n\\nuse `long long int` in place of `int`\\n\\nand Upvote, if it helps :-)"
                    },
                    {
                        "username": "andynullwong",
                        "content": "For anyone struggling with the test case involving 6/-132 = -1 (-0.04545454545)\\n\\nMake sure that the method you are using is actually rounding towards zero, Some languages will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case).\\n\\nRegardless whether or not it is a fair \\'gotcha\\', on an interview it will be some bonus points showing mastery in the subtle differences between how Java and Javascript handles rounding for example."
                    },
                    {
                        "username": "ramney",
                        "content": "Please help me out what is mistake in this\\n\\nint evalRPN(vector<string>& tokens) {\\n\\n        stack<int> s;\\n\\n        int res = 0;\\n        for(int i = 0; i < tokens.size() ;i++)\\n        {\\n        if(tokens[i][0] == \\'+\\' || tokens[i][0] == \\'-\\' || tokens[i][0]==\\'*\\' || tokens[i][0]==\\'/\\')\\n        {\\n            int s1 =s.top();\\n            s.pop();\\n            int s2 =s.top();\\n            s.pop();\\n            if(tokens[i][0] == \\'+\\')\\n            res+=(s1)+(s2);\\n            if(tokens[i][0] == \\'-\\')\\n            res+=(s2)-(s1);\\n            if(tokens[i][0]== \\'*\\')\\n            res+=(s1)*(s2);\\n            if(tokens[i][0]==\\'/\\')\\n            res+=(s2)/(s1);\\n        } else s.push(stoi(tokens[i]));\\n        }\\n       return res; \\n    }"
                    },
                    {
                        "username": "peihao61",
                        "content": "        if(tokens[i][0] == \\'-\\')\\n        res+=(s2)-(s1);\\n\\nThis condition is a BUG when facing negative integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Ram Munde](/ramney)\\n`tokens` is 1D array but you have mentioned two subscripts while accessing data from `tokens`\\n\\nHope it helps !"
                    },
                    {
                        "username": "abhayx2910",
                        "content": "Line 17: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:26:28 i m getting this error in my code \\n                    s.top()*=a;\\nhow to resolve this error can anyone suggest\\n"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "replace all integer with long long even the return type of function"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Abhishek kumar](/abhi_shek81)\\n\\nuse `long int` in place of `int`\\n\\nand Upvote, if it helps :-)"
                    },
                    {
                        "username": "mkprajapati1614",
                        "content": "Very intuitive and straightforward `STACK` based solution.\\nKeep pushing numbers to stack and apply the operation on top 2 elements only. Then push thus obtained result back into the same stack.` Return the top element of stack at the end`"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "I think the best way is to use stack and store numbers in it and results also,\\nwhen you need to do an operation just use the top two numbers in the stack."
                    },
                    {
                        "username": "gauravkumar59829",
                        "content": "[@abdelmohaymn](/abdelmohaymn) Yes I have done it . I have also posted it in the solution section for others"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "[@gauravkumar59829](/gauravkumar59829)  replace all integer with long long even the return type of function"
                    },
                    {
                        "username": "gauravkumar59829",
                        "content": "I have done the same but it is giving overflow.\\n"
                    }
                ]
            },
            {
                "id": 1719019,
                "content": [
                    {
                        "username": "dhananjaysarathe26",
                        "content": "[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"]\\nRuntime error .. overflow stack . someone hlep"
                    },
                    {
                        "username": "ShubhamSukum",
                        "content": "I changed return value too.XD\\nlong long int evalRPN(vector<string>& tokens)\\n\\nALL TEST CASES PASSED"
                    },
                    {
                        "username": "ShubhamSukum",
                        "content": "instead of int use long long int"
                    },
                    {
                        "username": "dhananjaysarathe26",
                        "content": "[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"]\\n\\nRunTime Error in executing multiplication *.. Someone pls help"
                    },
                    {
                        "username": "namanpuri",
                        "content": "Your input format is wrong \\n\\n3rd , 5th , 7th , 9th elements are empty  but in question it is given input will be valid always !"
                    },
                    {
                        "username": "Brutal7skull",
                        "content": "Did anyone think of doing this question using 3 pointers?\\n(I did, stuck at some edge cases)"
                    },
                    {
                        "username": "ghoshkoustav18",
                        "content": "https://youtu.be/pqspk3MfWts\\nevaluate-reverse-polish-notation in Java within 5 mins\\n"
                    },
                    {
                        "username": "user4851h",
                        "content": "someone help me resolving this error .\\nim getting this error:\\n\\nLine 10: Char 22: runtime error: signed integer overflow: 8 * 268435456 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:19:22\\n\\ncode: \\n\\nclass Solution {\\npublic:\\nint fun(string s,int x,int y){\\n    {\\n        if(s==\"+\")\\n            return (x+y)%1000000007;\\n        if(s==\"-\")\\n            return (y-x)%1000000007;\\n        if(s==\"*\")\\n            return (x*y)%1000000007;\\n        if(s==\"/\")\\n            return (y/x);\\n        return -1;\\n    }\\n}\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;\\n        int n=tokens.size();\\n        for(int i=0;i<n;i++){\\n            if(tokens[i]==\"+\"||tokens[i]==\"-\"||tokens[i]==\"/\"||tokens[i]==\"*\"){\\n                int x=s.top();\\n                s.pop();\\n                int y=s.top();\\n                s.pop();\\n                s.push(fun(tokens[i],x,y));    \\n            }\\n            else{\\n                s.push(stoi(tokens[i]));\\n            }\\n        }return s.top();\\n    }\\n};\\n"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Neeraj sharma](/user4851h)\\n\\nuse `long long int` in place of `int`\\n\\nand Upvote, if it helps :-)"
                    },
                    {
                        "username": "andynullwong",
                        "content": "For anyone struggling with the test case involving 6/-132 = -1 (-0.04545454545)\\n\\nMake sure that the method you are using is actually rounding towards zero, Some languages will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case).\\n\\nRegardless whether or not it is a fair \\'gotcha\\', on an interview it will be some bonus points showing mastery in the subtle differences between how Java and Javascript handles rounding for example."
                    },
                    {
                        "username": "ramney",
                        "content": "Please help me out what is mistake in this\\n\\nint evalRPN(vector<string>& tokens) {\\n\\n        stack<int> s;\\n\\n        int res = 0;\\n        for(int i = 0; i < tokens.size() ;i++)\\n        {\\n        if(tokens[i][0] == \\'+\\' || tokens[i][0] == \\'-\\' || tokens[i][0]==\\'*\\' || tokens[i][0]==\\'/\\')\\n        {\\n            int s1 =s.top();\\n            s.pop();\\n            int s2 =s.top();\\n            s.pop();\\n            if(tokens[i][0] == \\'+\\')\\n            res+=(s1)+(s2);\\n            if(tokens[i][0] == \\'-\\')\\n            res+=(s2)-(s1);\\n            if(tokens[i][0]== \\'*\\')\\n            res+=(s1)*(s2);\\n            if(tokens[i][0]==\\'/\\')\\n            res+=(s2)/(s1);\\n        } else s.push(stoi(tokens[i]));\\n        }\\n       return res; \\n    }"
                    },
                    {
                        "username": "peihao61",
                        "content": "        if(tokens[i][0] == \\'-\\')\\n        res+=(s2)-(s1);\\n\\nThis condition is a BUG when facing negative integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Ram Munde](/ramney)\\n`tokens` is 1D array but you have mentioned two subscripts while accessing data from `tokens`\\n\\nHope it helps !"
                    },
                    {
                        "username": "abhayx2910",
                        "content": "Line 17: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:26:28 i m getting this error in my code \\n                    s.top()*=a;\\nhow to resolve this error can anyone suggest\\n"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "replace all integer with long long even the return type of function"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Abhishek kumar](/abhi_shek81)\\n\\nuse `long int` in place of `int`\\n\\nand Upvote, if it helps :-)"
                    },
                    {
                        "username": "mkprajapati1614",
                        "content": "Very intuitive and straightforward `STACK` based solution.\\nKeep pushing numbers to stack and apply the operation on top 2 elements only. Then push thus obtained result back into the same stack.` Return the top element of stack at the end`"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "I think the best way is to use stack and store numbers in it and results also,\\nwhen you need to do an operation just use the top two numbers in the stack."
                    },
                    {
                        "username": "gauravkumar59829",
                        "content": "[@abdelmohaymn](/abdelmohaymn) Yes I have done it . I have also posted it in the solution section for others"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "[@gauravkumar59829](/gauravkumar59829)  replace all integer with long long even the return type of function"
                    },
                    {
                        "username": "gauravkumar59829",
                        "content": "I have done the same but it is giving overflow.\\n"
                    }
                ]
            },
            {
                "id": 1719008,
                "content": [
                    {
                        "username": "dhananjaysarathe26",
                        "content": "[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"]\\nRuntime error .. overflow stack . someone hlep"
                    },
                    {
                        "username": "ShubhamSukum",
                        "content": "I changed return value too.XD\\nlong long int evalRPN(vector<string>& tokens)\\n\\nALL TEST CASES PASSED"
                    },
                    {
                        "username": "ShubhamSukum",
                        "content": "instead of int use long long int"
                    },
                    {
                        "username": "dhananjaysarathe26",
                        "content": "[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"]\\n\\nRunTime Error in executing multiplication *.. Someone pls help"
                    },
                    {
                        "username": "namanpuri",
                        "content": "Your input format is wrong \\n\\n3rd , 5th , 7th , 9th elements are empty  but in question it is given input will be valid always !"
                    },
                    {
                        "username": "Brutal7skull",
                        "content": "Did anyone think of doing this question using 3 pointers?\\n(I did, stuck at some edge cases)"
                    },
                    {
                        "username": "ghoshkoustav18",
                        "content": "https://youtu.be/pqspk3MfWts\\nevaluate-reverse-polish-notation in Java within 5 mins\\n"
                    },
                    {
                        "username": "user4851h",
                        "content": "someone help me resolving this error .\\nim getting this error:\\n\\nLine 10: Char 22: runtime error: signed integer overflow: 8 * 268435456 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:19:22\\n\\ncode: \\n\\nclass Solution {\\npublic:\\nint fun(string s,int x,int y){\\n    {\\n        if(s==\"+\")\\n            return (x+y)%1000000007;\\n        if(s==\"-\")\\n            return (y-x)%1000000007;\\n        if(s==\"*\")\\n            return (x*y)%1000000007;\\n        if(s==\"/\")\\n            return (y/x);\\n        return -1;\\n    }\\n}\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;\\n        int n=tokens.size();\\n        for(int i=0;i<n;i++){\\n            if(tokens[i]==\"+\"||tokens[i]==\"-\"||tokens[i]==\"/\"||tokens[i]==\"*\"){\\n                int x=s.top();\\n                s.pop();\\n                int y=s.top();\\n                s.pop();\\n                s.push(fun(tokens[i],x,y));    \\n            }\\n            else{\\n                s.push(stoi(tokens[i]));\\n            }\\n        }return s.top();\\n    }\\n};\\n"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Neeraj sharma](/user4851h)\\n\\nuse `long long int` in place of `int`\\n\\nand Upvote, if it helps :-)"
                    },
                    {
                        "username": "andynullwong",
                        "content": "For anyone struggling with the test case involving 6/-132 = -1 (-0.04545454545)\\n\\nMake sure that the method you are using is actually rounding towards zero, Some languages will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case).\\n\\nRegardless whether or not it is a fair \\'gotcha\\', on an interview it will be some bonus points showing mastery in the subtle differences between how Java and Javascript handles rounding for example."
                    },
                    {
                        "username": "ramney",
                        "content": "Please help me out what is mistake in this\\n\\nint evalRPN(vector<string>& tokens) {\\n\\n        stack<int> s;\\n\\n        int res = 0;\\n        for(int i = 0; i < tokens.size() ;i++)\\n        {\\n        if(tokens[i][0] == \\'+\\' || tokens[i][0] == \\'-\\' || tokens[i][0]==\\'*\\' || tokens[i][0]==\\'/\\')\\n        {\\n            int s1 =s.top();\\n            s.pop();\\n            int s2 =s.top();\\n            s.pop();\\n            if(tokens[i][0] == \\'+\\')\\n            res+=(s1)+(s2);\\n            if(tokens[i][0] == \\'-\\')\\n            res+=(s2)-(s1);\\n            if(tokens[i][0]== \\'*\\')\\n            res+=(s1)*(s2);\\n            if(tokens[i][0]==\\'/\\')\\n            res+=(s2)/(s1);\\n        } else s.push(stoi(tokens[i]));\\n        }\\n       return res; \\n    }"
                    },
                    {
                        "username": "peihao61",
                        "content": "        if(tokens[i][0] == \\'-\\')\\n        res+=(s2)-(s1);\\n\\nThis condition is a BUG when facing negative integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Ram Munde](/ramney)\\n`tokens` is 1D array but you have mentioned two subscripts while accessing data from `tokens`\\n\\nHope it helps !"
                    },
                    {
                        "username": "abhayx2910",
                        "content": "Line 17: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:26:28 i m getting this error in my code \\n                    s.top()*=a;\\nhow to resolve this error can anyone suggest\\n"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "replace all integer with long long even the return type of function"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Abhishek kumar](/abhi_shek81)\\n\\nuse `long int` in place of `int`\\n\\nand Upvote, if it helps :-)"
                    },
                    {
                        "username": "mkprajapati1614",
                        "content": "Very intuitive and straightforward `STACK` based solution.\\nKeep pushing numbers to stack and apply the operation on top 2 elements only. Then push thus obtained result back into the same stack.` Return the top element of stack at the end`"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "I think the best way is to use stack and store numbers in it and results also,\\nwhen you need to do an operation just use the top two numbers in the stack."
                    },
                    {
                        "username": "gauravkumar59829",
                        "content": "[@abdelmohaymn](/abdelmohaymn) Yes I have done it . I have also posted it in the solution section for others"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "[@gauravkumar59829](/gauravkumar59829)  replace all integer with long long even the return type of function"
                    },
                    {
                        "username": "gauravkumar59829",
                        "content": "I have done the same but it is giving overflow.\\n"
                    }
                ]
            },
            {
                "id": 1719001,
                "content": [
                    {
                        "username": "dhananjaysarathe26",
                        "content": "[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"]\\nRuntime error .. overflow stack . someone hlep"
                    },
                    {
                        "username": "ShubhamSukum",
                        "content": "I changed return value too.XD\\nlong long int evalRPN(vector<string>& tokens)\\n\\nALL TEST CASES PASSED"
                    },
                    {
                        "username": "ShubhamSukum",
                        "content": "instead of int use long long int"
                    },
                    {
                        "username": "dhananjaysarathe26",
                        "content": "[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"]\\n\\nRunTime Error in executing multiplication *.. Someone pls help"
                    },
                    {
                        "username": "namanpuri",
                        "content": "Your input format is wrong \\n\\n3rd , 5th , 7th , 9th elements are empty  but in question it is given input will be valid always !"
                    },
                    {
                        "username": "Brutal7skull",
                        "content": "Did anyone think of doing this question using 3 pointers?\\n(I did, stuck at some edge cases)"
                    },
                    {
                        "username": "ghoshkoustav18",
                        "content": "https://youtu.be/pqspk3MfWts\\nevaluate-reverse-polish-notation in Java within 5 mins\\n"
                    },
                    {
                        "username": "user4851h",
                        "content": "someone help me resolving this error .\\nim getting this error:\\n\\nLine 10: Char 22: runtime error: signed integer overflow: 8 * 268435456 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:19:22\\n\\ncode: \\n\\nclass Solution {\\npublic:\\nint fun(string s,int x,int y){\\n    {\\n        if(s==\"+\")\\n            return (x+y)%1000000007;\\n        if(s==\"-\")\\n            return (y-x)%1000000007;\\n        if(s==\"*\")\\n            return (x*y)%1000000007;\\n        if(s==\"/\")\\n            return (y/x);\\n        return -1;\\n    }\\n}\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;\\n        int n=tokens.size();\\n        for(int i=0;i<n;i++){\\n            if(tokens[i]==\"+\"||tokens[i]==\"-\"||tokens[i]==\"/\"||tokens[i]==\"*\"){\\n                int x=s.top();\\n                s.pop();\\n                int y=s.top();\\n                s.pop();\\n                s.push(fun(tokens[i],x,y));    \\n            }\\n            else{\\n                s.push(stoi(tokens[i]));\\n            }\\n        }return s.top();\\n    }\\n};\\n"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Neeraj sharma](/user4851h)\\n\\nuse `long long int` in place of `int`\\n\\nand Upvote, if it helps :-)"
                    },
                    {
                        "username": "andynullwong",
                        "content": "For anyone struggling with the test case involving 6/-132 = -1 (-0.04545454545)\\n\\nMake sure that the method you are using is actually rounding towards zero, Some languages will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case).\\n\\nRegardless whether or not it is a fair \\'gotcha\\', on an interview it will be some bonus points showing mastery in the subtle differences between how Java and Javascript handles rounding for example."
                    },
                    {
                        "username": "ramney",
                        "content": "Please help me out what is mistake in this\\n\\nint evalRPN(vector<string>& tokens) {\\n\\n        stack<int> s;\\n\\n        int res = 0;\\n        for(int i = 0; i < tokens.size() ;i++)\\n        {\\n        if(tokens[i][0] == \\'+\\' || tokens[i][0] == \\'-\\' || tokens[i][0]==\\'*\\' || tokens[i][0]==\\'/\\')\\n        {\\n            int s1 =s.top();\\n            s.pop();\\n            int s2 =s.top();\\n            s.pop();\\n            if(tokens[i][0] == \\'+\\')\\n            res+=(s1)+(s2);\\n            if(tokens[i][0] == \\'-\\')\\n            res+=(s2)-(s1);\\n            if(tokens[i][0]== \\'*\\')\\n            res+=(s1)*(s2);\\n            if(tokens[i][0]==\\'/\\')\\n            res+=(s2)/(s1);\\n        } else s.push(stoi(tokens[i]));\\n        }\\n       return res; \\n    }"
                    },
                    {
                        "username": "peihao61",
                        "content": "        if(tokens[i][0] == \\'-\\')\\n        res+=(s2)-(s1);\\n\\nThis condition is a BUG when facing negative integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Ram Munde](/ramney)\\n`tokens` is 1D array but you have mentioned two subscripts while accessing data from `tokens`\\n\\nHope it helps !"
                    },
                    {
                        "username": "abhayx2910",
                        "content": "Line 17: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:26:28 i m getting this error in my code \\n                    s.top()*=a;\\nhow to resolve this error can anyone suggest\\n"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "replace all integer with long long even the return type of function"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Abhishek kumar](/abhi_shek81)\\n\\nuse `long int` in place of `int`\\n\\nand Upvote, if it helps :-)"
                    },
                    {
                        "username": "mkprajapati1614",
                        "content": "Very intuitive and straightforward `STACK` based solution.\\nKeep pushing numbers to stack and apply the operation on top 2 elements only. Then push thus obtained result back into the same stack.` Return the top element of stack at the end`"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "I think the best way is to use stack and store numbers in it and results also,\\nwhen you need to do an operation just use the top two numbers in the stack."
                    },
                    {
                        "username": "gauravkumar59829",
                        "content": "[@abdelmohaymn](/abdelmohaymn) Yes I have done it . I have also posted it in the solution section for others"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "[@gauravkumar59829](/gauravkumar59829)  replace all integer with long long even the return type of function"
                    },
                    {
                        "username": "gauravkumar59829",
                        "content": "I have done the same but it is giving overflow.\\n"
                    }
                ]
            },
            {
                "id": 1718977,
                "content": [
                    {
                        "username": "dhananjaysarathe26",
                        "content": "[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"]\\nRuntime error .. overflow stack . someone hlep"
                    },
                    {
                        "username": "ShubhamSukum",
                        "content": "I changed return value too.XD\\nlong long int evalRPN(vector<string>& tokens)\\n\\nALL TEST CASES PASSED"
                    },
                    {
                        "username": "ShubhamSukum",
                        "content": "instead of int use long long int"
                    },
                    {
                        "username": "dhananjaysarathe26",
                        "content": "[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"]\\n\\nRunTime Error in executing multiplication *.. Someone pls help"
                    },
                    {
                        "username": "namanpuri",
                        "content": "Your input format is wrong \\n\\n3rd , 5th , 7th , 9th elements are empty  but in question it is given input will be valid always !"
                    },
                    {
                        "username": "Brutal7skull",
                        "content": "Did anyone think of doing this question using 3 pointers?\\n(I did, stuck at some edge cases)"
                    },
                    {
                        "username": "ghoshkoustav18",
                        "content": "https://youtu.be/pqspk3MfWts\\nevaluate-reverse-polish-notation in Java within 5 mins\\n"
                    },
                    {
                        "username": "user4851h",
                        "content": "someone help me resolving this error .\\nim getting this error:\\n\\nLine 10: Char 22: runtime error: signed integer overflow: 8 * 268435456 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:19:22\\n\\ncode: \\n\\nclass Solution {\\npublic:\\nint fun(string s,int x,int y){\\n    {\\n        if(s==\"+\")\\n            return (x+y)%1000000007;\\n        if(s==\"-\")\\n            return (y-x)%1000000007;\\n        if(s==\"*\")\\n            return (x*y)%1000000007;\\n        if(s==\"/\")\\n            return (y/x);\\n        return -1;\\n    }\\n}\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;\\n        int n=tokens.size();\\n        for(int i=0;i<n;i++){\\n            if(tokens[i]==\"+\"||tokens[i]==\"-\"||tokens[i]==\"/\"||tokens[i]==\"*\"){\\n                int x=s.top();\\n                s.pop();\\n                int y=s.top();\\n                s.pop();\\n                s.push(fun(tokens[i],x,y));    \\n            }\\n            else{\\n                s.push(stoi(tokens[i]));\\n            }\\n        }return s.top();\\n    }\\n};\\n"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Neeraj sharma](/user4851h)\\n\\nuse `long long int` in place of `int`\\n\\nand Upvote, if it helps :-)"
                    },
                    {
                        "username": "andynullwong",
                        "content": "For anyone struggling with the test case involving 6/-132 = -1 (-0.04545454545)\\n\\nMake sure that the method you are using is actually rounding towards zero, Some languages will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case).\\n\\nRegardless whether or not it is a fair \\'gotcha\\', on an interview it will be some bonus points showing mastery in the subtle differences between how Java and Javascript handles rounding for example."
                    },
                    {
                        "username": "ramney",
                        "content": "Please help me out what is mistake in this\\n\\nint evalRPN(vector<string>& tokens) {\\n\\n        stack<int> s;\\n\\n        int res = 0;\\n        for(int i = 0; i < tokens.size() ;i++)\\n        {\\n        if(tokens[i][0] == \\'+\\' || tokens[i][0] == \\'-\\' || tokens[i][0]==\\'*\\' || tokens[i][0]==\\'/\\')\\n        {\\n            int s1 =s.top();\\n            s.pop();\\n            int s2 =s.top();\\n            s.pop();\\n            if(tokens[i][0] == \\'+\\')\\n            res+=(s1)+(s2);\\n            if(tokens[i][0] == \\'-\\')\\n            res+=(s2)-(s1);\\n            if(tokens[i][0]== \\'*\\')\\n            res+=(s1)*(s2);\\n            if(tokens[i][0]==\\'/\\')\\n            res+=(s2)/(s1);\\n        } else s.push(stoi(tokens[i]));\\n        }\\n       return res; \\n    }"
                    },
                    {
                        "username": "peihao61",
                        "content": "        if(tokens[i][0] == \\'-\\')\\n        res+=(s2)-(s1);\\n\\nThis condition is a BUG when facing negative integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Ram Munde](/ramney)\\n`tokens` is 1D array but you have mentioned two subscripts while accessing data from `tokens`\\n\\nHope it helps !"
                    },
                    {
                        "username": "abhayx2910",
                        "content": "Line 17: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:26:28 i m getting this error in my code \\n                    s.top()*=a;\\nhow to resolve this error can anyone suggest\\n"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "replace all integer with long long even the return type of function"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Abhishek kumar](/abhi_shek81)\\n\\nuse `long int` in place of `int`\\n\\nand Upvote, if it helps :-)"
                    },
                    {
                        "username": "mkprajapati1614",
                        "content": "Very intuitive and straightforward `STACK` based solution.\\nKeep pushing numbers to stack and apply the operation on top 2 elements only. Then push thus obtained result back into the same stack.` Return the top element of stack at the end`"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "I think the best way is to use stack and store numbers in it and results also,\\nwhen you need to do an operation just use the top two numbers in the stack."
                    },
                    {
                        "username": "gauravkumar59829",
                        "content": "[@abdelmohaymn](/abdelmohaymn) Yes I have done it . I have also posted it in the solution section for others"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "[@gauravkumar59829](/gauravkumar59829)  replace all integer with long long even the return type of function"
                    },
                    {
                        "username": "gauravkumar59829",
                        "content": "I have done the same but it is giving overflow.\\n"
                    }
                ]
            },
            {
                "id": 1718975,
                "content": [
                    {
                        "username": "dhananjaysarathe26",
                        "content": "[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"]\\nRuntime error .. overflow stack . someone hlep"
                    },
                    {
                        "username": "ShubhamSukum",
                        "content": "I changed return value too.XD\\nlong long int evalRPN(vector<string>& tokens)\\n\\nALL TEST CASES PASSED"
                    },
                    {
                        "username": "ShubhamSukum",
                        "content": "instead of int use long long int"
                    },
                    {
                        "username": "dhananjaysarathe26",
                        "content": "[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"]\\n\\nRunTime Error in executing multiplication *.. Someone pls help"
                    },
                    {
                        "username": "namanpuri",
                        "content": "Your input format is wrong \\n\\n3rd , 5th , 7th , 9th elements are empty  but in question it is given input will be valid always !"
                    },
                    {
                        "username": "Brutal7skull",
                        "content": "Did anyone think of doing this question using 3 pointers?\\n(I did, stuck at some edge cases)"
                    },
                    {
                        "username": "ghoshkoustav18",
                        "content": "https://youtu.be/pqspk3MfWts\\nevaluate-reverse-polish-notation in Java within 5 mins\\n"
                    },
                    {
                        "username": "user4851h",
                        "content": "someone help me resolving this error .\\nim getting this error:\\n\\nLine 10: Char 22: runtime error: signed integer overflow: 8 * 268435456 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:19:22\\n\\ncode: \\n\\nclass Solution {\\npublic:\\nint fun(string s,int x,int y){\\n    {\\n        if(s==\"+\")\\n            return (x+y)%1000000007;\\n        if(s==\"-\")\\n            return (y-x)%1000000007;\\n        if(s==\"*\")\\n            return (x*y)%1000000007;\\n        if(s==\"/\")\\n            return (y/x);\\n        return -1;\\n    }\\n}\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;\\n        int n=tokens.size();\\n        for(int i=0;i<n;i++){\\n            if(tokens[i]==\"+\"||tokens[i]==\"-\"||tokens[i]==\"/\"||tokens[i]==\"*\"){\\n                int x=s.top();\\n                s.pop();\\n                int y=s.top();\\n                s.pop();\\n                s.push(fun(tokens[i],x,y));    \\n            }\\n            else{\\n                s.push(stoi(tokens[i]));\\n            }\\n        }return s.top();\\n    }\\n};\\n"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Neeraj sharma](/user4851h)\\n\\nuse `long long int` in place of `int`\\n\\nand Upvote, if it helps :-)"
                    },
                    {
                        "username": "andynullwong",
                        "content": "For anyone struggling with the test case involving 6/-132 = -1 (-0.04545454545)\\n\\nMake sure that the method you are using is actually rounding towards zero, Some languages will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case).\\n\\nRegardless whether or not it is a fair \\'gotcha\\', on an interview it will be some bonus points showing mastery in the subtle differences between how Java and Javascript handles rounding for example."
                    },
                    {
                        "username": "ramney",
                        "content": "Please help me out what is mistake in this\\n\\nint evalRPN(vector<string>& tokens) {\\n\\n        stack<int> s;\\n\\n        int res = 0;\\n        for(int i = 0; i < tokens.size() ;i++)\\n        {\\n        if(tokens[i][0] == \\'+\\' || tokens[i][0] == \\'-\\' || tokens[i][0]==\\'*\\' || tokens[i][0]==\\'/\\')\\n        {\\n            int s1 =s.top();\\n            s.pop();\\n            int s2 =s.top();\\n            s.pop();\\n            if(tokens[i][0] == \\'+\\')\\n            res+=(s1)+(s2);\\n            if(tokens[i][0] == \\'-\\')\\n            res+=(s2)-(s1);\\n            if(tokens[i][0]== \\'*\\')\\n            res+=(s1)*(s2);\\n            if(tokens[i][0]==\\'/\\')\\n            res+=(s2)/(s1);\\n        } else s.push(stoi(tokens[i]));\\n        }\\n       return res; \\n    }"
                    },
                    {
                        "username": "peihao61",
                        "content": "        if(tokens[i][0] == \\'-\\')\\n        res+=(s2)-(s1);\\n\\nThis condition is a BUG when facing negative integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Ram Munde](/ramney)\\n`tokens` is 1D array but you have mentioned two subscripts while accessing data from `tokens`\\n\\nHope it helps !"
                    },
                    {
                        "username": "abhayx2910",
                        "content": "Line 17: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:26:28 i m getting this error in my code \\n                    s.top()*=a;\\nhow to resolve this error can anyone suggest\\n"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "replace all integer with long long even the return type of function"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Abhishek kumar](/abhi_shek81)\\n\\nuse `long int` in place of `int`\\n\\nand Upvote, if it helps :-)"
                    },
                    {
                        "username": "mkprajapati1614",
                        "content": "Very intuitive and straightforward `STACK` based solution.\\nKeep pushing numbers to stack and apply the operation on top 2 elements only. Then push thus obtained result back into the same stack.` Return the top element of stack at the end`"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "I think the best way is to use stack and store numbers in it and results also,\\nwhen you need to do an operation just use the top two numbers in the stack."
                    },
                    {
                        "username": "gauravkumar59829",
                        "content": "[@abdelmohaymn](/abdelmohaymn) Yes I have done it . I have also posted it in the solution section for others"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "[@gauravkumar59829](/gauravkumar59829)  replace all integer with long long even the return type of function"
                    },
                    {
                        "username": "gauravkumar59829",
                        "content": "I have done the same but it is giving overflow.\\n"
                    }
                ]
            },
            {
                "id": 1718969,
                "content": [
                    {
                        "username": "dhananjaysarathe26",
                        "content": "[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"]\\nRuntime error .. overflow stack . someone hlep"
                    },
                    {
                        "username": "ShubhamSukum",
                        "content": "I changed return value too.XD\\nlong long int evalRPN(vector<string>& tokens)\\n\\nALL TEST CASES PASSED"
                    },
                    {
                        "username": "ShubhamSukum",
                        "content": "instead of int use long long int"
                    },
                    {
                        "username": "dhananjaysarathe26",
                        "content": "[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"]\\n\\nRunTime Error in executing multiplication *.. Someone pls help"
                    },
                    {
                        "username": "namanpuri",
                        "content": "Your input format is wrong \\n\\n3rd , 5th , 7th , 9th elements are empty  but in question it is given input will be valid always !"
                    },
                    {
                        "username": "Brutal7skull",
                        "content": "Did anyone think of doing this question using 3 pointers?\\n(I did, stuck at some edge cases)"
                    },
                    {
                        "username": "ghoshkoustav18",
                        "content": "https://youtu.be/pqspk3MfWts\\nevaluate-reverse-polish-notation in Java within 5 mins\\n"
                    },
                    {
                        "username": "user4851h",
                        "content": "someone help me resolving this error .\\nim getting this error:\\n\\nLine 10: Char 22: runtime error: signed integer overflow: 8 * 268435456 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:19:22\\n\\ncode: \\n\\nclass Solution {\\npublic:\\nint fun(string s,int x,int y){\\n    {\\n        if(s==\"+\")\\n            return (x+y)%1000000007;\\n        if(s==\"-\")\\n            return (y-x)%1000000007;\\n        if(s==\"*\")\\n            return (x*y)%1000000007;\\n        if(s==\"/\")\\n            return (y/x);\\n        return -1;\\n    }\\n}\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;\\n        int n=tokens.size();\\n        for(int i=0;i<n;i++){\\n            if(tokens[i]==\"+\"||tokens[i]==\"-\"||tokens[i]==\"/\"||tokens[i]==\"*\"){\\n                int x=s.top();\\n                s.pop();\\n                int y=s.top();\\n                s.pop();\\n                s.push(fun(tokens[i],x,y));    \\n            }\\n            else{\\n                s.push(stoi(tokens[i]));\\n            }\\n        }return s.top();\\n    }\\n};\\n"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Neeraj sharma](/user4851h)\\n\\nuse `long long int` in place of `int`\\n\\nand Upvote, if it helps :-)"
                    },
                    {
                        "username": "andynullwong",
                        "content": "For anyone struggling with the test case involving 6/-132 = -1 (-0.04545454545)\\n\\nMake sure that the method you are using is actually rounding towards zero, Some languages will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case).\\n\\nRegardless whether or not it is a fair \\'gotcha\\', on an interview it will be some bonus points showing mastery in the subtle differences between how Java and Javascript handles rounding for example."
                    },
                    {
                        "username": "ramney",
                        "content": "Please help me out what is mistake in this\\n\\nint evalRPN(vector<string>& tokens) {\\n\\n        stack<int> s;\\n\\n        int res = 0;\\n        for(int i = 0; i < tokens.size() ;i++)\\n        {\\n        if(tokens[i][0] == \\'+\\' || tokens[i][0] == \\'-\\' || tokens[i][0]==\\'*\\' || tokens[i][0]==\\'/\\')\\n        {\\n            int s1 =s.top();\\n            s.pop();\\n            int s2 =s.top();\\n            s.pop();\\n            if(tokens[i][0] == \\'+\\')\\n            res+=(s1)+(s2);\\n            if(tokens[i][0] == \\'-\\')\\n            res+=(s2)-(s1);\\n            if(tokens[i][0]== \\'*\\')\\n            res+=(s1)*(s2);\\n            if(tokens[i][0]==\\'/\\')\\n            res+=(s2)/(s1);\\n        } else s.push(stoi(tokens[i]));\\n        }\\n       return res; \\n    }"
                    },
                    {
                        "username": "peihao61",
                        "content": "        if(tokens[i][0] == \\'-\\')\\n        res+=(s2)-(s1);\\n\\nThis condition is a BUG when facing negative integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Ram Munde](/ramney)\\n`tokens` is 1D array but you have mentioned two subscripts while accessing data from `tokens`\\n\\nHope it helps !"
                    },
                    {
                        "username": "abhayx2910",
                        "content": "Line 17: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:26:28 i m getting this error in my code \\n                    s.top()*=a;\\nhow to resolve this error can anyone suggest\\n"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "replace all integer with long long even the return type of function"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Abhishek kumar](/abhi_shek81)\\n\\nuse `long int` in place of `int`\\n\\nand Upvote, if it helps :-)"
                    },
                    {
                        "username": "mkprajapati1614",
                        "content": "Very intuitive and straightforward `STACK` based solution.\\nKeep pushing numbers to stack and apply the operation on top 2 elements only. Then push thus obtained result back into the same stack.` Return the top element of stack at the end`"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "I think the best way is to use stack and store numbers in it and results also,\\nwhen you need to do an operation just use the top two numbers in the stack."
                    },
                    {
                        "username": "gauravkumar59829",
                        "content": "[@abdelmohaymn](/abdelmohaymn) Yes I have done it . I have also posted it in the solution section for others"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "[@gauravkumar59829](/gauravkumar59829)  replace all integer with long long even the return type of function"
                    },
                    {
                        "username": "gauravkumar59829",
                        "content": "I have done the same but it is giving overflow.\\n"
                    }
                ]
            },
            {
                "id": 1718929,
                "content": [
                    {
                        "username": "dhananjaysarathe26",
                        "content": "[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"]\\nRuntime error .. overflow stack . someone hlep"
                    },
                    {
                        "username": "ShubhamSukum",
                        "content": "I changed return value too.XD\\nlong long int evalRPN(vector<string>& tokens)\\n\\nALL TEST CASES PASSED"
                    },
                    {
                        "username": "ShubhamSukum",
                        "content": "instead of int use long long int"
                    },
                    {
                        "username": "dhananjaysarathe26",
                        "content": "[\"-128\",\"-128\",\"*\",\"-128\",\"*\",\"-128\",\"*\",\"8\",\"*\",\"-1\",\"*\"]\\n\\nRunTime Error in executing multiplication *.. Someone pls help"
                    },
                    {
                        "username": "namanpuri",
                        "content": "Your input format is wrong \\n\\n3rd , 5th , 7th , 9th elements are empty  but in question it is given input will be valid always !"
                    },
                    {
                        "username": "Brutal7skull",
                        "content": "Did anyone think of doing this question using 3 pointers?\\n(I did, stuck at some edge cases)"
                    },
                    {
                        "username": "ghoshkoustav18",
                        "content": "https://youtu.be/pqspk3MfWts\\nevaluate-reverse-polish-notation in Java within 5 mins\\n"
                    },
                    {
                        "username": "user4851h",
                        "content": "someone help me resolving this error .\\nim getting this error:\\n\\nLine 10: Char 22: runtime error: signed integer overflow: 8 * 268435456 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:19:22\\n\\ncode: \\n\\nclass Solution {\\npublic:\\nint fun(string s,int x,int y){\\n    {\\n        if(s==\"+\")\\n            return (x+y)%1000000007;\\n        if(s==\"-\")\\n            return (y-x)%1000000007;\\n        if(s==\"*\")\\n            return (x*y)%1000000007;\\n        if(s==\"/\")\\n            return (y/x);\\n        return -1;\\n    }\\n}\\n    int evalRPN(vector<string>& tokens) {\\n        stack<int> s;\\n        int n=tokens.size();\\n        for(int i=0;i<n;i++){\\n            if(tokens[i]==\"+\"||tokens[i]==\"-\"||tokens[i]==\"/\"||tokens[i]==\"*\"){\\n                int x=s.top();\\n                s.pop();\\n                int y=s.top();\\n                s.pop();\\n                s.push(fun(tokens[i],x,y));    \\n            }\\n            else{\\n                s.push(stoi(tokens[i]));\\n            }\\n        }return s.top();\\n    }\\n};\\n"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Neeraj sharma](/user4851h)\\n\\nuse `long long int` in place of `int`\\n\\nand Upvote, if it helps :-)"
                    },
                    {
                        "username": "andynullwong",
                        "content": "For anyone struggling with the test case involving 6/-132 = -1 (-0.04545454545)\\n\\nMake sure that the method you are using is actually rounding towards zero, Some languages will round to the lowest integer so it will work for all positive numbers but for negative will always be incorrect (ie: -7.0001 will round to -8 in this case).\\n\\nRegardless whether or not it is a fair \\'gotcha\\', on an interview it will be some bonus points showing mastery in the subtle differences between how Java and Javascript handles rounding for example."
                    },
                    {
                        "username": "ramney",
                        "content": "Please help me out what is mistake in this\\n\\nint evalRPN(vector<string>& tokens) {\\n\\n        stack<int> s;\\n\\n        int res = 0;\\n        for(int i = 0; i < tokens.size() ;i++)\\n        {\\n        if(tokens[i][0] == \\'+\\' || tokens[i][0] == \\'-\\' || tokens[i][0]==\\'*\\' || tokens[i][0]==\\'/\\')\\n        {\\n            int s1 =s.top();\\n            s.pop();\\n            int s2 =s.top();\\n            s.pop();\\n            if(tokens[i][0] == \\'+\\')\\n            res+=(s1)+(s2);\\n            if(tokens[i][0] == \\'-\\')\\n            res+=(s2)-(s1);\\n            if(tokens[i][0]== \\'*\\')\\n            res+=(s1)*(s2);\\n            if(tokens[i][0]==\\'/\\')\\n            res+=(s2)/(s1);\\n        } else s.push(stoi(tokens[i]));\\n        }\\n       return res; \\n    }"
                    },
                    {
                        "username": "peihao61",
                        "content": "        if(tokens[i][0] == \\'-\\')\\n        res+=(s2)-(s1);\\n\\nThis condition is a BUG when facing negative integer."
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Ram Munde](/ramney)\\n`tokens` is 1D array but you have mentioned two subscripts while accessing data from `tokens`\\n\\nHope it helps !"
                    },
                    {
                        "username": "abhayx2910",
                        "content": "Line 17: Char 28: runtime error: signed integer overflow: 268435456 * 8 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:26:28 i m getting this error in my code \\n                    s.top()*=a;\\nhow to resolve this error can anyone suggest\\n"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "replace all integer with long long even the return type of function"
                    },
                    {
                        "username": "namanpuri",
                        "content": "[@Abhishek kumar](/abhi_shek81)\\n\\nuse `long int` in place of `int`\\n\\nand Upvote, if it helps :-)"
                    },
                    {
                        "username": "mkprajapati1614",
                        "content": "Very intuitive and straightforward `STACK` based solution.\\nKeep pushing numbers to stack and apply the operation on top 2 elements only. Then push thus obtained result back into the same stack.` Return the top element of stack at the end`"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "I think the best way is to use stack and store numbers in it and results also,\\nwhen you need to do an operation just use the top two numbers in the stack."
                    },
                    {
                        "username": "gauravkumar59829",
                        "content": "[@abdelmohaymn](/abdelmohaymn) Yes I have done it . I have also posted it in the solution section for others"
                    },
                    {
                        "username": "abdelmohaymn",
                        "content": "[@gauravkumar59829](/gauravkumar59829)  replace all integer with long long even the return type of function"
                    },
                    {
                        "username": "gauravkumar59829",
                        "content": "I have done the same but it is giving overflow.\\n"
                    }
                ]
            }
        ]
    },
    {
        "title": "Count Univalue Subtrees",
        "question_content": null,
        "solutions": [],
        "discussions": [
            {
                "id": 1564899,
                "content": [
                    {
                        "username": "guestly",
                        "content": "Why is `[5,1,5,5,5,null,5]` produce 4? There are obviously 5 `5` nodes in this tree?"
                    },
                    {
                        "username": "BubbleTree",
                        "content": "[@anandmehrotra](/anandmehrotra) ugh so poorly worded in the q"
                    },
                    {
                        "username": "anandmehrotra",
                        "content": "because the tree to the right of 1 is unival. 1 breaks the unival rule where subtree has to be the same value as the root."
                    },
                    {
                        "username": "ar13101085",
                        "content": "[1,1,1,5,5,null,5]\\n\\nMy solution give output is 4. actual expected output shows 3. why 3 ? Anyone can explain?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "I am guessing only 5s at the leaf nodes are unival subtrees in this example. since there are 2 5 leaf nodes on the left and 1 5 leaf nodes on the far right, there are 3 unival subtrees"
                    },
                    {
                        "username": "pk-dev",
                        "content": "The question was to find \"subtrees\" , why are we also including the root of the tree as part of the count ?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "its just terminology, if we do not define the root tree as a subtree the answer changes by one"
                    },
                    {
                        "username": "jp2338",
                        "content": "Hi,\\nI find the problem description is way too ambiguous :( \\nHow about below tree ? `\\n[0,5,5,2,3,6,5]` \\n\\nThe expected ans is `4` , how to calculate 4, just b/c there are 4 leave nodes ??\\n![image](https://assets.leetcode.com/users/images/a9e7bcff-a4d6-4e4e-80c1-7ebde4c26212_1622568812.7831693.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/852cdb01-8fa6-45e0-8a07-5ae9363e6478_1622568718.3118403.png)\\n\\nThanks pals!"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Leaf nodes are always unival trees.. if we are considering subtree or the full tree, all the nodes have to have the same value for them to be unival tree"
                    },
                    {
                        "username": "user0168nt",
                        "content": "2, 3, 6, 5 are unival trees (only the leaf nodes here)"
                    },
                    {
                        "username": "alphasandhu",
                        "content": "![image](https://assets.leetcode.com/users/images/da7c7c07-6fb0-49a9-9c62-86b55bbbf1bd_1614552731.8569388.png)\\n"
                    },
                    {
                        "username": "bloomer",
                        "content": "Its not consistent with the example provided to count subtrees.\\nif this tree [5,1,5,5,5,null,5] is 4 counts,\\nthen [5, 1 , 5] should be 1 and not 2."
                    },
                    {
                        "username": "Daniel535",
                        "content": "leaf nodes are regarded as a single tree here. that\\'s why it is 2."
                    },
                    {
                        "username": "robotqueen",
                        "content": "The example in the description has the following tree:\\n   5\\n 1   5\\n5 5   5\\n\\nOutput: 4\\nHere there are 5 univalue subtrees:\\n5(root)-5-5\\n5-5\\n5\\nand below 1:\\n5, 5 \\n\\nTotal is 5. Am I counting it wrong somehow?\\n\\t\\t\\t\\t   \\n\\t\\t\\t\\t   \\n"
                    },
                    {
                        "username": "coder_c",
                        "content": "leaf nodes are univalue subtrees as they have null children ...so we have 3 leafnodes + left subtree with two 5\\'s = 4 , root is not considered as a part of subtrees as subtree should be a part of left and right children"
                    },
                    {
                        "username": "LixiangZhou01",
                        "content": "[5,5] --> 2 \\n[5,5,1] --> expected answer is 2  (here root 5 and left leaf 5 is counted as 1,  left leaf 5 is also counted once;  My question is since the Root node has a right leaf 1, why it should be counted?)\\n[5,1,5,5,5,null,5]  --> expected answer is 4 (left side two leaf nodes are counted as 2, right side including root, has 3 nodes, all have value 5, as per the second case, should it be counted as 3 for the right side, even though root has a left child 1, so the total would be 5)\\n\\nFor my understanding, if the third case is 4, the second test case should be 1.\\nAny explanation is welcome.   Thanks in advance."
                    },
                    {
                        "username": "user0168nt",
                        "content": "All leaf nodes (no matter what the value is) are unival trees by themselves.. if we are considering subtree with child nodes, then all nodes must have same nodes"
                    },
                    {
                        "username": "ymymym",
                        "content": "For custom test case of `[5,1,4,4,5,null,5]` the expected answer is `3`. Can some explain why this is the case?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Because leaf nodes are always unival trees and in this case, 4, 5, 5 are leaf nodes"
                    },
                    {
                        "username": "bayashi",
                        "content": "(I\\'m beginner.)\\nI can\\'t unsterstand why many solution in this problem choose DFS, not BFS or else.\\nHow to distinguish which method is better in a problem?\\nIf you asked \"why you choose DFS?\", how do you give an answer?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "dfs is roughly equivalent to bfs, but there are times you might prefer one or the other.\\n\\nFor example if the branching factor is very high, you might prefer dfs.\\n\\nFrom SO\\n```\\nIf you know a solution is not far from the root of the tree, a breadth first search (BFS) might be better.\\n\\nIf the tree is very deep and solutions are rare, depth first search (DFS) might take an extremely long time, but BFS could be faster.\\n\\nIf the tree is very wide, a BFS might need too much memory, so it might be completely impractical.\\n\\nIf solutions are frequent but located deep in the tree, BFS could be impractical.\\n\\nIf the search tree is very deep you will need to restrict the search depth for depth first search (DFS), anyway (for example with iterative deepening).\\n```\\nhttps://stackoverflow.com/a/3332994/630752"
                    }
                ]
            },
            {
                "id": 1575890,
                "content": [
                    {
                        "username": "guestly",
                        "content": "Why is `[5,1,5,5,5,null,5]` produce 4? There are obviously 5 `5` nodes in this tree?"
                    },
                    {
                        "username": "BubbleTree",
                        "content": "[@anandmehrotra](/anandmehrotra) ugh so poorly worded in the q"
                    },
                    {
                        "username": "anandmehrotra",
                        "content": "because the tree to the right of 1 is unival. 1 breaks the unival rule where subtree has to be the same value as the root."
                    },
                    {
                        "username": "ar13101085",
                        "content": "[1,1,1,5,5,null,5]\\n\\nMy solution give output is 4. actual expected output shows 3. why 3 ? Anyone can explain?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "I am guessing only 5s at the leaf nodes are unival subtrees in this example. since there are 2 5 leaf nodes on the left and 1 5 leaf nodes on the far right, there are 3 unival subtrees"
                    },
                    {
                        "username": "pk-dev",
                        "content": "The question was to find \"subtrees\" , why are we also including the root of the tree as part of the count ?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "its just terminology, if we do not define the root tree as a subtree the answer changes by one"
                    },
                    {
                        "username": "jp2338",
                        "content": "Hi,\\nI find the problem description is way too ambiguous :( \\nHow about below tree ? `\\n[0,5,5,2,3,6,5]` \\n\\nThe expected ans is `4` , how to calculate 4, just b/c there are 4 leave nodes ??\\n![image](https://assets.leetcode.com/users/images/a9e7bcff-a4d6-4e4e-80c1-7ebde4c26212_1622568812.7831693.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/852cdb01-8fa6-45e0-8a07-5ae9363e6478_1622568718.3118403.png)\\n\\nThanks pals!"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Leaf nodes are always unival trees.. if we are considering subtree or the full tree, all the nodes have to have the same value for them to be unival tree"
                    },
                    {
                        "username": "user0168nt",
                        "content": "2, 3, 6, 5 are unival trees (only the leaf nodes here)"
                    },
                    {
                        "username": "alphasandhu",
                        "content": "![image](https://assets.leetcode.com/users/images/da7c7c07-6fb0-49a9-9c62-86b55bbbf1bd_1614552731.8569388.png)\\n"
                    },
                    {
                        "username": "bloomer",
                        "content": "Its not consistent with the example provided to count subtrees.\\nif this tree [5,1,5,5,5,null,5] is 4 counts,\\nthen [5, 1 , 5] should be 1 and not 2."
                    },
                    {
                        "username": "Daniel535",
                        "content": "leaf nodes are regarded as a single tree here. that\\'s why it is 2."
                    },
                    {
                        "username": "robotqueen",
                        "content": "The example in the description has the following tree:\\n   5\\n 1   5\\n5 5   5\\n\\nOutput: 4\\nHere there are 5 univalue subtrees:\\n5(root)-5-5\\n5-5\\n5\\nand below 1:\\n5, 5 \\n\\nTotal is 5. Am I counting it wrong somehow?\\n\\t\\t\\t\\t   \\n\\t\\t\\t\\t   \\n"
                    },
                    {
                        "username": "coder_c",
                        "content": "leaf nodes are univalue subtrees as they have null children ...so we have 3 leafnodes + left subtree with two 5\\'s = 4 , root is not considered as a part of subtrees as subtree should be a part of left and right children"
                    },
                    {
                        "username": "LixiangZhou01",
                        "content": "[5,5] --> 2 \\n[5,5,1] --> expected answer is 2  (here root 5 and left leaf 5 is counted as 1,  left leaf 5 is also counted once;  My question is since the Root node has a right leaf 1, why it should be counted?)\\n[5,1,5,5,5,null,5]  --> expected answer is 4 (left side two leaf nodes are counted as 2, right side including root, has 3 nodes, all have value 5, as per the second case, should it be counted as 3 for the right side, even though root has a left child 1, so the total would be 5)\\n\\nFor my understanding, if the third case is 4, the second test case should be 1.\\nAny explanation is welcome.   Thanks in advance."
                    },
                    {
                        "username": "user0168nt",
                        "content": "All leaf nodes (no matter what the value is) are unival trees by themselves.. if we are considering subtree with child nodes, then all nodes must have same nodes"
                    },
                    {
                        "username": "ymymym",
                        "content": "For custom test case of `[5,1,4,4,5,null,5]` the expected answer is `3`. Can some explain why this is the case?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Because leaf nodes are always unival trees and in this case, 4, 5, 5 are leaf nodes"
                    },
                    {
                        "username": "bayashi",
                        "content": "(I\\'m beginner.)\\nI can\\'t unsterstand why many solution in this problem choose DFS, not BFS or else.\\nHow to distinguish which method is better in a problem?\\nIf you asked \"why you choose DFS?\", how do you give an answer?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "dfs is roughly equivalent to bfs, but there are times you might prefer one or the other.\\n\\nFor example if the branching factor is very high, you might prefer dfs.\\n\\nFrom SO\\n```\\nIf you know a solution is not far from the root of the tree, a breadth first search (BFS) might be better.\\n\\nIf the tree is very deep and solutions are rare, depth first search (DFS) might take an extremely long time, but BFS could be faster.\\n\\nIf the tree is very wide, a BFS might need too much memory, so it might be completely impractical.\\n\\nIf solutions are frequent but located deep in the tree, BFS could be impractical.\\n\\nIf the search tree is very deep you will need to restrict the search depth for depth first search (DFS), anyway (for example with iterative deepening).\\n```\\nhttps://stackoverflow.com/a/3332994/630752"
                    }
                ]
            },
            {
                "id": 1575773,
                "content": [
                    {
                        "username": "guestly",
                        "content": "Why is `[5,1,5,5,5,null,5]` produce 4? There are obviously 5 `5` nodes in this tree?"
                    },
                    {
                        "username": "BubbleTree",
                        "content": "[@anandmehrotra](/anandmehrotra) ugh so poorly worded in the q"
                    },
                    {
                        "username": "anandmehrotra",
                        "content": "because the tree to the right of 1 is unival. 1 breaks the unival rule where subtree has to be the same value as the root."
                    },
                    {
                        "username": "ar13101085",
                        "content": "[1,1,1,5,5,null,5]\\n\\nMy solution give output is 4. actual expected output shows 3. why 3 ? Anyone can explain?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "I am guessing only 5s at the leaf nodes are unival subtrees in this example. since there are 2 5 leaf nodes on the left and 1 5 leaf nodes on the far right, there are 3 unival subtrees"
                    },
                    {
                        "username": "pk-dev",
                        "content": "The question was to find \"subtrees\" , why are we also including the root of the tree as part of the count ?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "its just terminology, if we do not define the root tree as a subtree the answer changes by one"
                    },
                    {
                        "username": "jp2338",
                        "content": "Hi,\\nI find the problem description is way too ambiguous :( \\nHow about below tree ? `\\n[0,5,5,2,3,6,5]` \\n\\nThe expected ans is `4` , how to calculate 4, just b/c there are 4 leave nodes ??\\n![image](https://assets.leetcode.com/users/images/a9e7bcff-a4d6-4e4e-80c1-7ebde4c26212_1622568812.7831693.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/852cdb01-8fa6-45e0-8a07-5ae9363e6478_1622568718.3118403.png)\\n\\nThanks pals!"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Leaf nodes are always unival trees.. if we are considering subtree or the full tree, all the nodes have to have the same value for them to be unival tree"
                    },
                    {
                        "username": "user0168nt",
                        "content": "2, 3, 6, 5 are unival trees (only the leaf nodes here)"
                    },
                    {
                        "username": "alphasandhu",
                        "content": "![image](https://assets.leetcode.com/users/images/da7c7c07-6fb0-49a9-9c62-86b55bbbf1bd_1614552731.8569388.png)\\n"
                    },
                    {
                        "username": "bloomer",
                        "content": "Its not consistent with the example provided to count subtrees.\\nif this tree [5,1,5,5,5,null,5] is 4 counts,\\nthen [5, 1 , 5] should be 1 and not 2."
                    },
                    {
                        "username": "Daniel535",
                        "content": "leaf nodes are regarded as a single tree here. that\\'s why it is 2."
                    },
                    {
                        "username": "robotqueen",
                        "content": "The example in the description has the following tree:\\n   5\\n 1   5\\n5 5   5\\n\\nOutput: 4\\nHere there are 5 univalue subtrees:\\n5(root)-5-5\\n5-5\\n5\\nand below 1:\\n5, 5 \\n\\nTotal is 5. Am I counting it wrong somehow?\\n\\t\\t\\t\\t   \\n\\t\\t\\t\\t   \\n"
                    },
                    {
                        "username": "coder_c",
                        "content": "leaf nodes are univalue subtrees as they have null children ...so we have 3 leafnodes + left subtree with two 5\\'s = 4 , root is not considered as a part of subtrees as subtree should be a part of left and right children"
                    },
                    {
                        "username": "LixiangZhou01",
                        "content": "[5,5] --> 2 \\n[5,5,1] --> expected answer is 2  (here root 5 and left leaf 5 is counted as 1,  left leaf 5 is also counted once;  My question is since the Root node has a right leaf 1, why it should be counted?)\\n[5,1,5,5,5,null,5]  --> expected answer is 4 (left side two leaf nodes are counted as 2, right side including root, has 3 nodes, all have value 5, as per the second case, should it be counted as 3 for the right side, even though root has a left child 1, so the total would be 5)\\n\\nFor my understanding, if the third case is 4, the second test case should be 1.\\nAny explanation is welcome.   Thanks in advance."
                    },
                    {
                        "username": "user0168nt",
                        "content": "All leaf nodes (no matter what the value is) are unival trees by themselves.. if we are considering subtree with child nodes, then all nodes must have same nodes"
                    },
                    {
                        "username": "ymymym",
                        "content": "For custom test case of `[5,1,4,4,5,null,5]` the expected answer is `3`. Can some explain why this is the case?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Because leaf nodes are always unival trees and in this case, 4, 5, 5 are leaf nodes"
                    },
                    {
                        "username": "bayashi",
                        "content": "(I\\'m beginner.)\\nI can\\'t unsterstand why many solution in this problem choose DFS, not BFS or else.\\nHow to distinguish which method is better in a problem?\\nIf you asked \"why you choose DFS?\", how do you give an answer?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "dfs is roughly equivalent to bfs, but there are times you might prefer one or the other.\\n\\nFor example if the branching factor is very high, you might prefer dfs.\\n\\nFrom SO\\n```\\nIf you know a solution is not far from the root of the tree, a breadth first search (BFS) might be better.\\n\\nIf the tree is very deep and solutions are rare, depth first search (DFS) might take an extremely long time, but BFS could be faster.\\n\\nIf the tree is very wide, a BFS might need too much memory, so it might be completely impractical.\\n\\nIf solutions are frequent but located deep in the tree, BFS could be impractical.\\n\\nIf the search tree is very deep you will need to restrict the search depth for depth first search (DFS), anyway (for example with iterative deepening).\\n```\\nhttps://stackoverflow.com/a/3332994/630752"
                    }
                ]
            },
            {
                "id": 1575342,
                "content": [
                    {
                        "username": "guestly",
                        "content": "Why is `[5,1,5,5,5,null,5]` produce 4? There are obviously 5 `5` nodes in this tree?"
                    },
                    {
                        "username": "BubbleTree",
                        "content": "[@anandmehrotra](/anandmehrotra) ugh so poorly worded in the q"
                    },
                    {
                        "username": "anandmehrotra",
                        "content": "because the tree to the right of 1 is unival. 1 breaks the unival rule where subtree has to be the same value as the root."
                    },
                    {
                        "username": "ar13101085",
                        "content": "[1,1,1,5,5,null,5]\\n\\nMy solution give output is 4. actual expected output shows 3. why 3 ? Anyone can explain?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "I am guessing only 5s at the leaf nodes are unival subtrees in this example. since there are 2 5 leaf nodes on the left and 1 5 leaf nodes on the far right, there are 3 unival subtrees"
                    },
                    {
                        "username": "pk-dev",
                        "content": "The question was to find \"subtrees\" , why are we also including the root of the tree as part of the count ?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "its just terminology, if we do not define the root tree as a subtree the answer changes by one"
                    },
                    {
                        "username": "jp2338",
                        "content": "Hi,\\nI find the problem description is way too ambiguous :( \\nHow about below tree ? `\\n[0,5,5,2,3,6,5]` \\n\\nThe expected ans is `4` , how to calculate 4, just b/c there are 4 leave nodes ??\\n![image](https://assets.leetcode.com/users/images/a9e7bcff-a4d6-4e4e-80c1-7ebde4c26212_1622568812.7831693.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/852cdb01-8fa6-45e0-8a07-5ae9363e6478_1622568718.3118403.png)\\n\\nThanks pals!"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Leaf nodes are always unival trees.. if we are considering subtree or the full tree, all the nodes have to have the same value for them to be unival tree"
                    },
                    {
                        "username": "user0168nt",
                        "content": "2, 3, 6, 5 are unival trees (only the leaf nodes here)"
                    },
                    {
                        "username": "alphasandhu",
                        "content": "![image](https://assets.leetcode.com/users/images/da7c7c07-6fb0-49a9-9c62-86b55bbbf1bd_1614552731.8569388.png)\\n"
                    },
                    {
                        "username": "bloomer",
                        "content": "Its not consistent with the example provided to count subtrees.\\nif this tree [5,1,5,5,5,null,5] is 4 counts,\\nthen [5, 1 , 5] should be 1 and not 2."
                    },
                    {
                        "username": "Daniel535",
                        "content": "leaf nodes are regarded as a single tree here. that\\'s why it is 2."
                    },
                    {
                        "username": "robotqueen",
                        "content": "The example in the description has the following tree:\\n   5\\n 1   5\\n5 5   5\\n\\nOutput: 4\\nHere there are 5 univalue subtrees:\\n5(root)-5-5\\n5-5\\n5\\nand below 1:\\n5, 5 \\n\\nTotal is 5. Am I counting it wrong somehow?\\n\\t\\t\\t\\t   \\n\\t\\t\\t\\t   \\n"
                    },
                    {
                        "username": "coder_c",
                        "content": "leaf nodes are univalue subtrees as they have null children ...so we have 3 leafnodes + left subtree with two 5\\'s = 4 , root is not considered as a part of subtrees as subtree should be a part of left and right children"
                    },
                    {
                        "username": "LixiangZhou01",
                        "content": "[5,5] --> 2 \\n[5,5,1] --> expected answer is 2  (here root 5 and left leaf 5 is counted as 1,  left leaf 5 is also counted once;  My question is since the Root node has a right leaf 1, why it should be counted?)\\n[5,1,5,5,5,null,5]  --> expected answer is 4 (left side two leaf nodes are counted as 2, right side including root, has 3 nodes, all have value 5, as per the second case, should it be counted as 3 for the right side, even though root has a left child 1, so the total would be 5)\\n\\nFor my understanding, if the third case is 4, the second test case should be 1.\\nAny explanation is welcome.   Thanks in advance."
                    },
                    {
                        "username": "user0168nt",
                        "content": "All leaf nodes (no matter what the value is) are unival trees by themselves.. if we are considering subtree with child nodes, then all nodes must have same nodes"
                    },
                    {
                        "username": "ymymym",
                        "content": "For custom test case of `[5,1,4,4,5,null,5]` the expected answer is `3`. Can some explain why this is the case?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Because leaf nodes are always unival trees and in this case, 4, 5, 5 are leaf nodes"
                    },
                    {
                        "username": "bayashi",
                        "content": "(I\\'m beginner.)\\nI can\\'t unsterstand why many solution in this problem choose DFS, not BFS or else.\\nHow to distinguish which method is better in a problem?\\nIf you asked \"why you choose DFS?\", how do you give an answer?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "dfs is roughly equivalent to bfs, but there are times you might prefer one or the other.\\n\\nFor example if the branching factor is very high, you might prefer dfs.\\n\\nFrom SO\\n```\\nIf you know a solution is not far from the root of the tree, a breadth first search (BFS) might be better.\\n\\nIf the tree is very deep and solutions are rare, depth first search (DFS) might take an extremely long time, but BFS could be faster.\\n\\nIf the tree is very wide, a BFS might need too much memory, so it might be completely impractical.\\n\\nIf solutions are frequent but located deep in the tree, BFS could be impractical.\\n\\nIf the search tree is very deep you will need to restrict the search depth for depth first search (DFS), anyway (for example with iterative deepening).\\n```\\nhttps://stackoverflow.com/a/3332994/630752"
                    }
                ]
            },
            {
                "id": 1574991,
                "content": [
                    {
                        "username": "guestly",
                        "content": "Why is `[5,1,5,5,5,null,5]` produce 4? There are obviously 5 `5` nodes in this tree?"
                    },
                    {
                        "username": "BubbleTree",
                        "content": "[@anandmehrotra](/anandmehrotra) ugh so poorly worded in the q"
                    },
                    {
                        "username": "anandmehrotra",
                        "content": "because the tree to the right of 1 is unival. 1 breaks the unival rule where subtree has to be the same value as the root."
                    },
                    {
                        "username": "ar13101085",
                        "content": "[1,1,1,5,5,null,5]\\n\\nMy solution give output is 4. actual expected output shows 3. why 3 ? Anyone can explain?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "I am guessing only 5s at the leaf nodes are unival subtrees in this example. since there are 2 5 leaf nodes on the left and 1 5 leaf nodes on the far right, there are 3 unival subtrees"
                    },
                    {
                        "username": "pk-dev",
                        "content": "The question was to find \"subtrees\" , why are we also including the root of the tree as part of the count ?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "its just terminology, if we do not define the root tree as a subtree the answer changes by one"
                    },
                    {
                        "username": "jp2338",
                        "content": "Hi,\\nI find the problem description is way too ambiguous :( \\nHow about below tree ? `\\n[0,5,5,2,3,6,5]` \\n\\nThe expected ans is `4` , how to calculate 4, just b/c there are 4 leave nodes ??\\n![image](https://assets.leetcode.com/users/images/a9e7bcff-a4d6-4e4e-80c1-7ebde4c26212_1622568812.7831693.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/852cdb01-8fa6-45e0-8a07-5ae9363e6478_1622568718.3118403.png)\\n\\nThanks pals!"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Leaf nodes are always unival trees.. if we are considering subtree or the full tree, all the nodes have to have the same value for them to be unival tree"
                    },
                    {
                        "username": "user0168nt",
                        "content": "2, 3, 6, 5 are unival trees (only the leaf nodes here)"
                    },
                    {
                        "username": "alphasandhu",
                        "content": "![image](https://assets.leetcode.com/users/images/da7c7c07-6fb0-49a9-9c62-86b55bbbf1bd_1614552731.8569388.png)\\n"
                    },
                    {
                        "username": "bloomer",
                        "content": "Its not consistent with the example provided to count subtrees.\\nif this tree [5,1,5,5,5,null,5] is 4 counts,\\nthen [5, 1 , 5] should be 1 and not 2."
                    },
                    {
                        "username": "Daniel535",
                        "content": "leaf nodes are regarded as a single tree here. that\\'s why it is 2."
                    },
                    {
                        "username": "robotqueen",
                        "content": "The example in the description has the following tree:\\n   5\\n 1   5\\n5 5   5\\n\\nOutput: 4\\nHere there are 5 univalue subtrees:\\n5(root)-5-5\\n5-5\\n5\\nand below 1:\\n5, 5 \\n\\nTotal is 5. Am I counting it wrong somehow?\\n\\t\\t\\t\\t   \\n\\t\\t\\t\\t   \\n"
                    },
                    {
                        "username": "coder_c",
                        "content": "leaf nodes are univalue subtrees as they have null children ...so we have 3 leafnodes + left subtree with two 5\\'s = 4 , root is not considered as a part of subtrees as subtree should be a part of left and right children"
                    },
                    {
                        "username": "LixiangZhou01",
                        "content": "[5,5] --> 2 \\n[5,5,1] --> expected answer is 2  (here root 5 and left leaf 5 is counted as 1,  left leaf 5 is also counted once;  My question is since the Root node has a right leaf 1, why it should be counted?)\\n[5,1,5,5,5,null,5]  --> expected answer is 4 (left side two leaf nodes are counted as 2, right side including root, has 3 nodes, all have value 5, as per the second case, should it be counted as 3 for the right side, even though root has a left child 1, so the total would be 5)\\n\\nFor my understanding, if the third case is 4, the second test case should be 1.\\nAny explanation is welcome.   Thanks in advance."
                    },
                    {
                        "username": "user0168nt",
                        "content": "All leaf nodes (no matter what the value is) are unival trees by themselves.. if we are considering subtree with child nodes, then all nodes must have same nodes"
                    },
                    {
                        "username": "ymymym",
                        "content": "For custom test case of `[5,1,4,4,5,null,5]` the expected answer is `3`. Can some explain why this is the case?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Because leaf nodes are always unival trees and in this case, 4, 5, 5 are leaf nodes"
                    },
                    {
                        "username": "bayashi",
                        "content": "(I\\'m beginner.)\\nI can\\'t unsterstand why many solution in this problem choose DFS, not BFS or else.\\nHow to distinguish which method is better in a problem?\\nIf you asked \"why you choose DFS?\", how do you give an answer?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "dfs is roughly equivalent to bfs, but there are times you might prefer one or the other.\\n\\nFor example if the branching factor is very high, you might prefer dfs.\\n\\nFrom SO\\n```\\nIf you know a solution is not far from the root of the tree, a breadth first search (BFS) might be better.\\n\\nIf the tree is very deep and solutions are rare, depth first search (DFS) might take an extremely long time, but BFS could be faster.\\n\\nIf the tree is very wide, a BFS might need too much memory, so it might be completely impractical.\\n\\nIf solutions are frequent but located deep in the tree, BFS could be impractical.\\n\\nIf the search tree is very deep you will need to restrict the search depth for depth first search (DFS), anyway (for example with iterative deepening).\\n```\\nhttps://stackoverflow.com/a/3332994/630752"
                    }
                ]
            },
            {
                "id": 1574554,
                "content": [
                    {
                        "username": "guestly",
                        "content": "Why is `[5,1,5,5,5,null,5]` produce 4? There are obviously 5 `5` nodes in this tree?"
                    },
                    {
                        "username": "BubbleTree",
                        "content": "[@anandmehrotra](/anandmehrotra) ugh so poorly worded in the q"
                    },
                    {
                        "username": "anandmehrotra",
                        "content": "because the tree to the right of 1 is unival. 1 breaks the unival rule where subtree has to be the same value as the root."
                    },
                    {
                        "username": "ar13101085",
                        "content": "[1,1,1,5,5,null,5]\\n\\nMy solution give output is 4. actual expected output shows 3. why 3 ? Anyone can explain?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "I am guessing only 5s at the leaf nodes are unival subtrees in this example. since there are 2 5 leaf nodes on the left and 1 5 leaf nodes on the far right, there are 3 unival subtrees"
                    },
                    {
                        "username": "pk-dev",
                        "content": "The question was to find \"subtrees\" , why are we also including the root of the tree as part of the count ?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "its just terminology, if we do not define the root tree as a subtree the answer changes by one"
                    },
                    {
                        "username": "jp2338",
                        "content": "Hi,\\nI find the problem description is way too ambiguous :( \\nHow about below tree ? `\\n[0,5,5,2,3,6,5]` \\n\\nThe expected ans is `4` , how to calculate 4, just b/c there are 4 leave nodes ??\\n![image](https://assets.leetcode.com/users/images/a9e7bcff-a4d6-4e4e-80c1-7ebde4c26212_1622568812.7831693.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/852cdb01-8fa6-45e0-8a07-5ae9363e6478_1622568718.3118403.png)\\n\\nThanks pals!"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Leaf nodes are always unival trees.. if we are considering subtree or the full tree, all the nodes have to have the same value for them to be unival tree"
                    },
                    {
                        "username": "user0168nt",
                        "content": "2, 3, 6, 5 are unival trees (only the leaf nodes here)"
                    },
                    {
                        "username": "alphasandhu",
                        "content": "![image](https://assets.leetcode.com/users/images/da7c7c07-6fb0-49a9-9c62-86b55bbbf1bd_1614552731.8569388.png)\\n"
                    },
                    {
                        "username": "bloomer",
                        "content": "Its not consistent with the example provided to count subtrees.\\nif this tree [5,1,5,5,5,null,5] is 4 counts,\\nthen [5, 1 , 5] should be 1 and not 2."
                    },
                    {
                        "username": "Daniel535",
                        "content": "leaf nodes are regarded as a single tree here. that\\'s why it is 2."
                    },
                    {
                        "username": "robotqueen",
                        "content": "The example in the description has the following tree:\\n   5\\n 1   5\\n5 5   5\\n\\nOutput: 4\\nHere there are 5 univalue subtrees:\\n5(root)-5-5\\n5-5\\n5\\nand below 1:\\n5, 5 \\n\\nTotal is 5. Am I counting it wrong somehow?\\n\\t\\t\\t\\t   \\n\\t\\t\\t\\t   \\n"
                    },
                    {
                        "username": "coder_c",
                        "content": "leaf nodes are univalue subtrees as they have null children ...so we have 3 leafnodes + left subtree with two 5\\'s = 4 , root is not considered as a part of subtrees as subtree should be a part of left and right children"
                    },
                    {
                        "username": "LixiangZhou01",
                        "content": "[5,5] --> 2 \\n[5,5,1] --> expected answer is 2  (here root 5 and left leaf 5 is counted as 1,  left leaf 5 is also counted once;  My question is since the Root node has a right leaf 1, why it should be counted?)\\n[5,1,5,5,5,null,5]  --> expected answer is 4 (left side two leaf nodes are counted as 2, right side including root, has 3 nodes, all have value 5, as per the second case, should it be counted as 3 for the right side, even though root has a left child 1, so the total would be 5)\\n\\nFor my understanding, if the third case is 4, the second test case should be 1.\\nAny explanation is welcome.   Thanks in advance."
                    },
                    {
                        "username": "user0168nt",
                        "content": "All leaf nodes (no matter what the value is) are unival trees by themselves.. if we are considering subtree with child nodes, then all nodes must have same nodes"
                    },
                    {
                        "username": "ymymym",
                        "content": "For custom test case of `[5,1,4,4,5,null,5]` the expected answer is `3`. Can some explain why this is the case?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Because leaf nodes are always unival trees and in this case, 4, 5, 5 are leaf nodes"
                    },
                    {
                        "username": "bayashi",
                        "content": "(I\\'m beginner.)\\nI can\\'t unsterstand why many solution in this problem choose DFS, not BFS or else.\\nHow to distinguish which method is better in a problem?\\nIf you asked \"why you choose DFS?\", how do you give an answer?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "dfs is roughly equivalent to bfs, but there are times you might prefer one or the other.\\n\\nFor example if the branching factor is very high, you might prefer dfs.\\n\\nFrom SO\\n```\\nIf you know a solution is not far from the root of the tree, a breadth first search (BFS) might be better.\\n\\nIf the tree is very deep and solutions are rare, depth first search (DFS) might take an extremely long time, but BFS could be faster.\\n\\nIf the tree is very wide, a BFS might need too much memory, so it might be completely impractical.\\n\\nIf solutions are frequent but located deep in the tree, BFS could be impractical.\\n\\nIf the search tree is very deep you will need to restrict the search depth for depth first search (DFS), anyway (for example with iterative deepening).\\n```\\nhttps://stackoverflow.com/a/3332994/630752"
                    }
                ]
            },
            {
                "id": 1572429,
                "content": [
                    {
                        "username": "guestly",
                        "content": "Why is `[5,1,5,5,5,null,5]` produce 4? There are obviously 5 `5` nodes in this tree?"
                    },
                    {
                        "username": "BubbleTree",
                        "content": "[@anandmehrotra](/anandmehrotra) ugh so poorly worded in the q"
                    },
                    {
                        "username": "anandmehrotra",
                        "content": "because the tree to the right of 1 is unival. 1 breaks the unival rule where subtree has to be the same value as the root."
                    },
                    {
                        "username": "ar13101085",
                        "content": "[1,1,1,5,5,null,5]\\n\\nMy solution give output is 4. actual expected output shows 3. why 3 ? Anyone can explain?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "I am guessing only 5s at the leaf nodes are unival subtrees in this example. since there are 2 5 leaf nodes on the left and 1 5 leaf nodes on the far right, there are 3 unival subtrees"
                    },
                    {
                        "username": "pk-dev",
                        "content": "The question was to find \"subtrees\" , why are we also including the root of the tree as part of the count ?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "its just terminology, if we do not define the root tree as a subtree the answer changes by one"
                    },
                    {
                        "username": "jp2338",
                        "content": "Hi,\\nI find the problem description is way too ambiguous :( \\nHow about below tree ? `\\n[0,5,5,2,3,6,5]` \\n\\nThe expected ans is `4` , how to calculate 4, just b/c there are 4 leave nodes ??\\n![image](https://assets.leetcode.com/users/images/a9e7bcff-a4d6-4e4e-80c1-7ebde4c26212_1622568812.7831693.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/852cdb01-8fa6-45e0-8a07-5ae9363e6478_1622568718.3118403.png)\\n\\nThanks pals!"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Leaf nodes are always unival trees.. if we are considering subtree or the full tree, all the nodes have to have the same value for them to be unival tree"
                    },
                    {
                        "username": "user0168nt",
                        "content": "2, 3, 6, 5 are unival trees (only the leaf nodes here)"
                    },
                    {
                        "username": "alphasandhu",
                        "content": "![image](https://assets.leetcode.com/users/images/da7c7c07-6fb0-49a9-9c62-86b55bbbf1bd_1614552731.8569388.png)\\n"
                    },
                    {
                        "username": "bloomer",
                        "content": "Its not consistent with the example provided to count subtrees.\\nif this tree [5,1,5,5,5,null,5] is 4 counts,\\nthen [5, 1 , 5] should be 1 and not 2."
                    },
                    {
                        "username": "Daniel535",
                        "content": "leaf nodes are regarded as a single tree here. that\\'s why it is 2."
                    },
                    {
                        "username": "robotqueen",
                        "content": "The example in the description has the following tree:\\n   5\\n 1   5\\n5 5   5\\n\\nOutput: 4\\nHere there are 5 univalue subtrees:\\n5(root)-5-5\\n5-5\\n5\\nand below 1:\\n5, 5 \\n\\nTotal is 5. Am I counting it wrong somehow?\\n\\t\\t\\t\\t   \\n\\t\\t\\t\\t   \\n"
                    },
                    {
                        "username": "coder_c",
                        "content": "leaf nodes are univalue subtrees as they have null children ...so we have 3 leafnodes + left subtree with two 5\\'s = 4 , root is not considered as a part of subtrees as subtree should be a part of left and right children"
                    },
                    {
                        "username": "LixiangZhou01",
                        "content": "[5,5] --> 2 \\n[5,5,1] --> expected answer is 2  (here root 5 and left leaf 5 is counted as 1,  left leaf 5 is also counted once;  My question is since the Root node has a right leaf 1, why it should be counted?)\\n[5,1,5,5,5,null,5]  --> expected answer is 4 (left side two leaf nodes are counted as 2, right side including root, has 3 nodes, all have value 5, as per the second case, should it be counted as 3 for the right side, even though root has a left child 1, so the total would be 5)\\n\\nFor my understanding, if the third case is 4, the second test case should be 1.\\nAny explanation is welcome.   Thanks in advance."
                    },
                    {
                        "username": "user0168nt",
                        "content": "All leaf nodes (no matter what the value is) are unival trees by themselves.. if we are considering subtree with child nodes, then all nodes must have same nodes"
                    },
                    {
                        "username": "ymymym",
                        "content": "For custom test case of `[5,1,4,4,5,null,5]` the expected answer is `3`. Can some explain why this is the case?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Because leaf nodes are always unival trees and in this case, 4, 5, 5 are leaf nodes"
                    },
                    {
                        "username": "bayashi",
                        "content": "(I\\'m beginner.)\\nI can\\'t unsterstand why many solution in this problem choose DFS, not BFS or else.\\nHow to distinguish which method is better in a problem?\\nIf you asked \"why you choose DFS?\", how do you give an answer?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "dfs is roughly equivalent to bfs, but there are times you might prefer one or the other.\\n\\nFor example if the branching factor is very high, you might prefer dfs.\\n\\nFrom SO\\n```\\nIf you know a solution is not far from the root of the tree, a breadth first search (BFS) might be better.\\n\\nIf the tree is very deep and solutions are rare, depth first search (DFS) might take an extremely long time, but BFS could be faster.\\n\\nIf the tree is very wide, a BFS might need too much memory, so it might be completely impractical.\\n\\nIf solutions are frequent but located deep in the tree, BFS could be impractical.\\n\\nIf the search tree is very deep you will need to restrict the search depth for depth first search (DFS), anyway (for example with iterative deepening).\\n```\\nhttps://stackoverflow.com/a/3332994/630752"
                    }
                ]
            },
            {
                "id": 1574702,
                "content": [
                    {
                        "username": "guestly",
                        "content": "Why is `[5,1,5,5,5,null,5]` produce 4? There are obviously 5 `5` nodes in this tree?"
                    },
                    {
                        "username": "BubbleTree",
                        "content": "[@anandmehrotra](/anandmehrotra) ugh so poorly worded in the q"
                    },
                    {
                        "username": "anandmehrotra",
                        "content": "because the tree to the right of 1 is unival. 1 breaks the unival rule where subtree has to be the same value as the root."
                    },
                    {
                        "username": "ar13101085",
                        "content": "[1,1,1,5,5,null,5]\\n\\nMy solution give output is 4. actual expected output shows 3. why 3 ? Anyone can explain?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "I am guessing only 5s at the leaf nodes are unival subtrees in this example. since there are 2 5 leaf nodes on the left and 1 5 leaf nodes on the far right, there are 3 unival subtrees"
                    },
                    {
                        "username": "pk-dev",
                        "content": "The question was to find \"subtrees\" , why are we also including the root of the tree as part of the count ?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "its just terminology, if we do not define the root tree as a subtree the answer changes by one"
                    },
                    {
                        "username": "jp2338",
                        "content": "Hi,\\nI find the problem description is way too ambiguous :( \\nHow about below tree ? `\\n[0,5,5,2,3,6,5]` \\n\\nThe expected ans is `4` , how to calculate 4, just b/c there are 4 leave nodes ??\\n![image](https://assets.leetcode.com/users/images/a9e7bcff-a4d6-4e4e-80c1-7ebde4c26212_1622568812.7831693.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/852cdb01-8fa6-45e0-8a07-5ae9363e6478_1622568718.3118403.png)\\n\\nThanks pals!"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Leaf nodes are always unival trees.. if we are considering subtree or the full tree, all the nodes have to have the same value for them to be unival tree"
                    },
                    {
                        "username": "user0168nt",
                        "content": "2, 3, 6, 5 are unival trees (only the leaf nodes here)"
                    },
                    {
                        "username": "alphasandhu",
                        "content": "![image](https://assets.leetcode.com/users/images/da7c7c07-6fb0-49a9-9c62-86b55bbbf1bd_1614552731.8569388.png)\\n"
                    },
                    {
                        "username": "bloomer",
                        "content": "Its not consistent with the example provided to count subtrees.\\nif this tree [5,1,5,5,5,null,5] is 4 counts,\\nthen [5, 1 , 5] should be 1 and not 2."
                    },
                    {
                        "username": "Daniel535",
                        "content": "leaf nodes are regarded as a single tree here. that\\'s why it is 2."
                    },
                    {
                        "username": "robotqueen",
                        "content": "The example in the description has the following tree:\\n   5\\n 1   5\\n5 5   5\\n\\nOutput: 4\\nHere there are 5 univalue subtrees:\\n5(root)-5-5\\n5-5\\n5\\nand below 1:\\n5, 5 \\n\\nTotal is 5. Am I counting it wrong somehow?\\n\\t\\t\\t\\t   \\n\\t\\t\\t\\t   \\n"
                    },
                    {
                        "username": "coder_c",
                        "content": "leaf nodes are univalue subtrees as they have null children ...so we have 3 leafnodes + left subtree with two 5\\'s = 4 , root is not considered as a part of subtrees as subtree should be a part of left and right children"
                    },
                    {
                        "username": "LixiangZhou01",
                        "content": "[5,5] --> 2 \\n[5,5,1] --> expected answer is 2  (here root 5 and left leaf 5 is counted as 1,  left leaf 5 is also counted once;  My question is since the Root node has a right leaf 1, why it should be counted?)\\n[5,1,5,5,5,null,5]  --> expected answer is 4 (left side two leaf nodes are counted as 2, right side including root, has 3 nodes, all have value 5, as per the second case, should it be counted as 3 for the right side, even though root has a left child 1, so the total would be 5)\\n\\nFor my understanding, if the third case is 4, the second test case should be 1.\\nAny explanation is welcome.   Thanks in advance."
                    },
                    {
                        "username": "user0168nt",
                        "content": "All leaf nodes (no matter what the value is) are unival trees by themselves.. if we are considering subtree with child nodes, then all nodes must have same nodes"
                    },
                    {
                        "username": "ymymym",
                        "content": "For custom test case of `[5,1,4,4,5,null,5]` the expected answer is `3`. Can some explain why this is the case?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Because leaf nodes are always unival trees and in this case, 4, 5, 5 are leaf nodes"
                    },
                    {
                        "username": "bayashi",
                        "content": "(I\\'m beginner.)\\nI can\\'t unsterstand why many solution in this problem choose DFS, not BFS or else.\\nHow to distinguish which method is better in a problem?\\nIf you asked \"why you choose DFS?\", how do you give an answer?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "dfs is roughly equivalent to bfs, but there are times you might prefer one or the other.\\n\\nFor example if the branching factor is very high, you might prefer dfs.\\n\\nFrom SO\\n```\\nIf you know a solution is not far from the root of the tree, a breadth first search (BFS) might be better.\\n\\nIf the tree is very deep and solutions are rare, depth first search (DFS) might take an extremely long time, but BFS could be faster.\\n\\nIf the tree is very wide, a BFS might need too much memory, so it might be completely impractical.\\n\\nIf solutions are frequent but located deep in the tree, BFS could be impractical.\\n\\nIf the search tree is very deep you will need to restrict the search depth for depth first search (DFS), anyway (for example with iterative deepening).\\n```\\nhttps://stackoverflow.com/a/3332994/630752"
                    }
                ]
            },
            {
                "id": 1574326,
                "content": [
                    {
                        "username": "guestly",
                        "content": "Why is `[5,1,5,5,5,null,5]` produce 4? There are obviously 5 `5` nodes in this tree?"
                    },
                    {
                        "username": "BubbleTree",
                        "content": "[@anandmehrotra](/anandmehrotra) ugh so poorly worded in the q"
                    },
                    {
                        "username": "anandmehrotra",
                        "content": "because the tree to the right of 1 is unival. 1 breaks the unival rule where subtree has to be the same value as the root."
                    },
                    {
                        "username": "ar13101085",
                        "content": "[1,1,1,5,5,null,5]\\n\\nMy solution give output is 4. actual expected output shows 3. why 3 ? Anyone can explain?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "I am guessing only 5s at the leaf nodes are unival subtrees in this example. since there are 2 5 leaf nodes on the left and 1 5 leaf nodes on the far right, there are 3 unival subtrees"
                    },
                    {
                        "username": "pk-dev",
                        "content": "The question was to find \"subtrees\" , why are we also including the root of the tree as part of the count ?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "its just terminology, if we do not define the root tree as a subtree the answer changes by one"
                    },
                    {
                        "username": "jp2338",
                        "content": "Hi,\\nI find the problem description is way too ambiguous :( \\nHow about below tree ? `\\n[0,5,5,2,3,6,5]` \\n\\nThe expected ans is `4` , how to calculate 4, just b/c there are 4 leave nodes ??\\n![image](https://assets.leetcode.com/users/images/a9e7bcff-a4d6-4e4e-80c1-7ebde4c26212_1622568812.7831693.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/852cdb01-8fa6-45e0-8a07-5ae9363e6478_1622568718.3118403.png)\\n\\nThanks pals!"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Leaf nodes are always unival trees.. if we are considering subtree or the full tree, all the nodes have to have the same value for them to be unival tree"
                    },
                    {
                        "username": "user0168nt",
                        "content": "2, 3, 6, 5 are unival trees (only the leaf nodes here)"
                    },
                    {
                        "username": "alphasandhu",
                        "content": "![image](https://assets.leetcode.com/users/images/da7c7c07-6fb0-49a9-9c62-86b55bbbf1bd_1614552731.8569388.png)\\n"
                    },
                    {
                        "username": "bloomer",
                        "content": "Its not consistent with the example provided to count subtrees.\\nif this tree [5,1,5,5,5,null,5] is 4 counts,\\nthen [5, 1 , 5] should be 1 and not 2."
                    },
                    {
                        "username": "Daniel535",
                        "content": "leaf nodes are regarded as a single tree here. that\\'s why it is 2."
                    },
                    {
                        "username": "robotqueen",
                        "content": "The example in the description has the following tree:\\n   5\\n 1   5\\n5 5   5\\n\\nOutput: 4\\nHere there are 5 univalue subtrees:\\n5(root)-5-5\\n5-5\\n5\\nand below 1:\\n5, 5 \\n\\nTotal is 5. Am I counting it wrong somehow?\\n\\t\\t\\t\\t   \\n\\t\\t\\t\\t   \\n"
                    },
                    {
                        "username": "coder_c",
                        "content": "leaf nodes are univalue subtrees as they have null children ...so we have 3 leafnodes + left subtree with two 5\\'s = 4 , root is not considered as a part of subtrees as subtree should be a part of left and right children"
                    },
                    {
                        "username": "LixiangZhou01",
                        "content": "[5,5] --> 2 \\n[5,5,1] --> expected answer is 2  (here root 5 and left leaf 5 is counted as 1,  left leaf 5 is also counted once;  My question is since the Root node has a right leaf 1, why it should be counted?)\\n[5,1,5,5,5,null,5]  --> expected answer is 4 (left side two leaf nodes are counted as 2, right side including root, has 3 nodes, all have value 5, as per the second case, should it be counted as 3 for the right side, even though root has a left child 1, so the total would be 5)\\n\\nFor my understanding, if the third case is 4, the second test case should be 1.\\nAny explanation is welcome.   Thanks in advance."
                    },
                    {
                        "username": "user0168nt",
                        "content": "All leaf nodes (no matter what the value is) are unival trees by themselves.. if we are considering subtree with child nodes, then all nodes must have same nodes"
                    },
                    {
                        "username": "ymymym",
                        "content": "For custom test case of `[5,1,4,4,5,null,5]` the expected answer is `3`. Can some explain why this is the case?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Because leaf nodes are always unival trees and in this case, 4, 5, 5 are leaf nodes"
                    },
                    {
                        "username": "bayashi",
                        "content": "(I\\'m beginner.)\\nI can\\'t unsterstand why many solution in this problem choose DFS, not BFS or else.\\nHow to distinguish which method is better in a problem?\\nIf you asked \"why you choose DFS?\", how do you give an answer?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "dfs is roughly equivalent to bfs, but there are times you might prefer one or the other.\\n\\nFor example if the branching factor is very high, you might prefer dfs.\\n\\nFrom SO\\n```\\nIf you know a solution is not far from the root of the tree, a breadth first search (BFS) might be better.\\n\\nIf the tree is very deep and solutions are rare, depth first search (DFS) might take an extremely long time, but BFS could be faster.\\n\\nIf the tree is very wide, a BFS might need too much memory, so it might be completely impractical.\\n\\nIf solutions are frequent but located deep in the tree, BFS could be impractical.\\n\\nIf the search tree is very deep you will need to restrict the search depth for depth first search (DFS), anyway (for example with iterative deepening).\\n```\\nhttps://stackoverflow.com/a/3332994/630752"
                    }
                ]
            },
            {
                "id": 1573750,
                "content": [
                    {
                        "username": "guestly",
                        "content": "Why is `[5,1,5,5,5,null,5]` produce 4? There are obviously 5 `5` nodes in this tree?"
                    },
                    {
                        "username": "BubbleTree",
                        "content": "[@anandmehrotra](/anandmehrotra) ugh so poorly worded in the q"
                    },
                    {
                        "username": "anandmehrotra",
                        "content": "because the tree to the right of 1 is unival. 1 breaks the unival rule where subtree has to be the same value as the root."
                    },
                    {
                        "username": "ar13101085",
                        "content": "[1,1,1,5,5,null,5]\\n\\nMy solution give output is 4. actual expected output shows 3. why 3 ? Anyone can explain?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "I am guessing only 5s at the leaf nodes are unival subtrees in this example. since there are 2 5 leaf nodes on the left and 1 5 leaf nodes on the far right, there are 3 unival subtrees"
                    },
                    {
                        "username": "pk-dev",
                        "content": "The question was to find \"subtrees\" , why are we also including the root of the tree as part of the count ?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "its just terminology, if we do not define the root tree as a subtree the answer changes by one"
                    },
                    {
                        "username": "jp2338",
                        "content": "Hi,\\nI find the problem description is way too ambiguous :( \\nHow about below tree ? `\\n[0,5,5,2,3,6,5]` \\n\\nThe expected ans is `4` , how to calculate 4, just b/c there are 4 leave nodes ??\\n![image](https://assets.leetcode.com/users/images/a9e7bcff-a4d6-4e4e-80c1-7ebde4c26212_1622568812.7831693.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/852cdb01-8fa6-45e0-8a07-5ae9363e6478_1622568718.3118403.png)\\n\\nThanks pals!"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Leaf nodes are always unival trees.. if we are considering subtree or the full tree, all the nodes have to have the same value for them to be unival tree"
                    },
                    {
                        "username": "user0168nt",
                        "content": "2, 3, 6, 5 are unival trees (only the leaf nodes here)"
                    },
                    {
                        "username": "alphasandhu",
                        "content": "![image](https://assets.leetcode.com/users/images/da7c7c07-6fb0-49a9-9c62-86b55bbbf1bd_1614552731.8569388.png)\\n"
                    },
                    {
                        "username": "bloomer",
                        "content": "Its not consistent with the example provided to count subtrees.\\nif this tree [5,1,5,5,5,null,5] is 4 counts,\\nthen [5, 1 , 5] should be 1 and not 2."
                    },
                    {
                        "username": "Daniel535",
                        "content": "leaf nodes are regarded as a single tree here. that\\'s why it is 2."
                    },
                    {
                        "username": "robotqueen",
                        "content": "The example in the description has the following tree:\\n   5\\n 1   5\\n5 5   5\\n\\nOutput: 4\\nHere there are 5 univalue subtrees:\\n5(root)-5-5\\n5-5\\n5\\nand below 1:\\n5, 5 \\n\\nTotal is 5. Am I counting it wrong somehow?\\n\\t\\t\\t\\t   \\n\\t\\t\\t\\t   \\n"
                    },
                    {
                        "username": "coder_c",
                        "content": "leaf nodes are univalue subtrees as they have null children ...so we have 3 leafnodes + left subtree with two 5\\'s = 4 , root is not considered as a part of subtrees as subtree should be a part of left and right children"
                    },
                    {
                        "username": "LixiangZhou01",
                        "content": "[5,5] --> 2 \\n[5,5,1] --> expected answer is 2  (here root 5 and left leaf 5 is counted as 1,  left leaf 5 is also counted once;  My question is since the Root node has a right leaf 1, why it should be counted?)\\n[5,1,5,5,5,null,5]  --> expected answer is 4 (left side two leaf nodes are counted as 2, right side including root, has 3 nodes, all have value 5, as per the second case, should it be counted as 3 for the right side, even though root has a left child 1, so the total would be 5)\\n\\nFor my understanding, if the third case is 4, the second test case should be 1.\\nAny explanation is welcome.   Thanks in advance."
                    },
                    {
                        "username": "user0168nt",
                        "content": "All leaf nodes (no matter what the value is) are unival trees by themselves.. if we are considering subtree with child nodes, then all nodes must have same nodes"
                    },
                    {
                        "username": "ymymym",
                        "content": "For custom test case of `[5,1,4,4,5,null,5]` the expected answer is `3`. Can some explain why this is the case?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Because leaf nodes are always unival trees and in this case, 4, 5, 5 are leaf nodes"
                    },
                    {
                        "username": "bayashi",
                        "content": "(I\\'m beginner.)\\nI can\\'t unsterstand why many solution in this problem choose DFS, not BFS or else.\\nHow to distinguish which method is better in a problem?\\nIf you asked \"why you choose DFS?\", how do you give an answer?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "dfs is roughly equivalent to bfs, but there are times you might prefer one or the other.\\n\\nFor example if the branching factor is very high, you might prefer dfs.\\n\\nFrom SO\\n```\\nIf you know a solution is not far from the root of the tree, a breadth first search (BFS) might be better.\\n\\nIf the tree is very deep and solutions are rare, depth first search (DFS) might take an extremely long time, but BFS could be faster.\\n\\nIf the tree is very wide, a BFS might need too much memory, so it might be completely impractical.\\n\\nIf solutions are frequent but located deep in the tree, BFS could be impractical.\\n\\nIf the search tree is very deep you will need to restrict the search depth for depth first search (DFS), anyway (for example with iterative deepening).\\n```\\nhttps://stackoverflow.com/a/3332994/630752"
                    }
                ]
            },
            {
                "id": 1564899,
                "content": [
                    {
                        "username": "guestly",
                        "content": "Why is `[5,1,5,5,5,null,5]` produce 4? There are obviously 5 `5` nodes in this tree?"
                    },
                    {
                        "username": "BubbleTree",
                        "content": "[@anandmehrotra](/anandmehrotra) ugh so poorly worded in the q"
                    },
                    {
                        "username": "anandmehrotra",
                        "content": "because the tree to the right of 1 is unival. 1 breaks the unival rule where subtree has to be the same value as the root."
                    },
                    {
                        "username": "ar13101085",
                        "content": "[1,1,1,5,5,null,5]\\n\\nMy solution give output is 4. actual expected output shows 3. why 3 ? Anyone can explain?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "I am guessing only 5s at the leaf nodes are unival subtrees in this example. since there are 2 5 leaf nodes on the left and 1 5 leaf nodes on the far right, there are 3 unival subtrees"
                    },
                    {
                        "username": "pk-dev",
                        "content": "The question was to find \"subtrees\" , why are we also including the root of the tree as part of the count ?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "its just terminology, if we do not define the root tree as a subtree the answer changes by one"
                    },
                    {
                        "username": "jp2338",
                        "content": "Hi,\\nI find the problem description is way too ambiguous :( \\nHow about below tree ? `\\n[0,5,5,2,3,6,5]` \\n\\nThe expected ans is `4` , how to calculate 4, just b/c there are 4 leave nodes ??\\n![image](https://assets.leetcode.com/users/images/a9e7bcff-a4d6-4e4e-80c1-7ebde4c26212_1622568812.7831693.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/852cdb01-8fa6-45e0-8a07-5ae9363e6478_1622568718.3118403.png)\\n\\nThanks pals!"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Leaf nodes are always unival trees.. if we are considering subtree or the full tree, all the nodes have to have the same value for them to be unival tree"
                    },
                    {
                        "username": "user0168nt",
                        "content": "2, 3, 6, 5 are unival trees (only the leaf nodes here)"
                    },
                    {
                        "username": "alphasandhu",
                        "content": "![image](https://assets.leetcode.com/users/images/da7c7c07-6fb0-49a9-9c62-86b55bbbf1bd_1614552731.8569388.png)\\n"
                    },
                    {
                        "username": "bloomer",
                        "content": "Its not consistent with the example provided to count subtrees.\\nif this tree [5,1,5,5,5,null,5] is 4 counts,\\nthen [5, 1 , 5] should be 1 and not 2."
                    },
                    {
                        "username": "Daniel535",
                        "content": "leaf nodes are regarded as a single tree here. that\\'s why it is 2."
                    },
                    {
                        "username": "robotqueen",
                        "content": "The example in the description has the following tree:\\n   5\\n 1   5\\n5 5   5\\n\\nOutput: 4\\nHere there are 5 univalue subtrees:\\n5(root)-5-5\\n5-5\\n5\\nand below 1:\\n5, 5 \\n\\nTotal is 5. Am I counting it wrong somehow?\\n\\t\\t\\t\\t   \\n\\t\\t\\t\\t   \\n"
                    },
                    {
                        "username": "coder_c",
                        "content": "leaf nodes are univalue subtrees as they have null children ...so we have 3 leafnodes + left subtree with two 5\\'s = 4 , root is not considered as a part of subtrees as subtree should be a part of left and right children"
                    },
                    {
                        "username": "LixiangZhou01",
                        "content": "[5,5] --> 2 \\n[5,5,1] --> expected answer is 2  (here root 5 and left leaf 5 is counted as 1,  left leaf 5 is also counted once;  My question is since the Root node has a right leaf 1, why it should be counted?)\\n[5,1,5,5,5,null,5]  --> expected answer is 4 (left side two leaf nodes are counted as 2, right side including root, has 3 nodes, all have value 5, as per the second case, should it be counted as 3 for the right side, even though root has a left child 1, so the total would be 5)\\n\\nFor my understanding, if the third case is 4, the second test case should be 1.\\nAny explanation is welcome.   Thanks in advance."
                    },
                    {
                        "username": "user0168nt",
                        "content": "All leaf nodes (no matter what the value is) are unival trees by themselves.. if we are considering subtree with child nodes, then all nodes must have same nodes"
                    },
                    {
                        "username": "ymymym",
                        "content": "For custom test case of `[5,1,4,4,5,null,5]` the expected answer is `3`. Can some explain why this is the case?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Because leaf nodes are always unival trees and in this case, 4, 5, 5 are leaf nodes"
                    },
                    {
                        "username": "bayashi",
                        "content": "(I\\'m beginner.)\\nI can\\'t unsterstand why many solution in this problem choose DFS, not BFS or else.\\nHow to distinguish which method is better in a problem?\\nIf you asked \"why you choose DFS?\", how do you give an answer?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "dfs is roughly equivalent to bfs, but there are times you might prefer one or the other.\\n\\nFor example if the branching factor is very high, you might prefer dfs.\\n\\nFrom SO\\n```\\nIf you know a solution is not far from the root of the tree, a breadth first search (BFS) might be better.\\n\\nIf the tree is very deep and solutions are rare, depth first search (DFS) might take an extremely long time, but BFS could be faster.\\n\\nIf the tree is very wide, a BFS might need too much memory, so it might be completely impractical.\\n\\nIf solutions are frequent but located deep in the tree, BFS could be impractical.\\n\\nIf the search tree is very deep you will need to restrict the search depth for depth first search (DFS), anyway (for example with iterative deepening).\\n```\\nhttps://stackoverflow.com/a/3332994/630752"
                    }
                ]
            },
            {
                "id": 1575890,
                "content": [
                    {
                        "username": "guestly",
                        "content": "Why is `[5,1,5,5,5,null,5]` produce 4? There are obviously 5 `5` nodes in this tree?"
                    },
                    {
                        "username": "BubbleTree",
                        "content": "[@anandmehrotra](/anandmehrotra) ugh so poorly worded in the q"
                    },
                    {
                        "username": "anandmehrotra",
                        "content": "because the tree to the right of 1 is unival. 1 breaks the unival rule where subtree has to be the same value as the root."
                    },
                    {
                        "username": "ar13101085",
                        "content": "[1,1,1,5,5,null,5]\\n\\nMy solution give output is 4. actual expected output shows 3. why 3 ? Anyone can explain?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "I am guessing only 5s at the leaf nodes are unival subtrees in this example. since there are 2 5 leaf nodes on the left and 1 5 leaf nodes on the far right, there are 3 unival subtrees"
                    },
                    {
                        "username": "pk-dev",
                        "content": "The question was to find \"subtrees\" , why are we also including the root of the tree as part of the count ?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "its just terminology, if we do not define the root tree as a subtree the answer changes by one"
                    },
                    {
                        "username": "jp2338",
                        "content": "Hi,\\nI find the problem description is way too ambiguous :( \\nHow about below tree ? `\\n[0,5,5,2,3,6,5]` \\n\\nThe expected ans is `4` , how to calculate 4, just b/c there are 4 leave nodes ??\\n![image](https://assets.leetcode.com/users/images/a9e7bcff-a4d6-4e4e-80c1-7ebde4c26212_1622568812.7831693.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/852cdb01-8fa6-45e0-8a07-5ae9363e6478_1622568718.3118403.png)\\n\\nThanks pals!"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Leaf nodes are always unival trees.. if we are considering subtree or the full tree, all the nodes have to have the same value for them to be unival tree"
                    },
                    {
                        "username": "user0168nt",
                        "content": "2, 3, 6, 5 are unival trees (only the leaf nodes here)"
                    },
                    {
                        "username": "alphasandhu",
                        "content": "![image](https://assets.leetcode.com/users/images/da7c7c07-6fb0-49a9-9c62-86b55bbbf1bd_1614552731.8569388.png)\\n"
                    },
                    {
                        "username": "bloomer",
                        "content": "Its not consistent with the example provided to count subtrees.\\nif this tree [5,1,5,5,5,null,5] is 4 counts,\\nthen [5, 1 , 5] should be 1 and not 2."
                    },
                    {
                        "username": "Daniel535",
                        "content": "leaf nodes are regarded as a single tree here. that\\'s why it is 2."
                    },
                    {
                        "username": "robotqueen",
                        "content": "The example in the description has the following tree:\\n   5\\n 1   5\\n5 5   5\\n\\nOutput: 4\\nHere there are 5 univalue subtrees:\\n5(root)-5-5\\n5-5\\n5\\nand below 1:\\n5, 5 \\n\\nTotal is 5. Am I counting it wrong somehow?\\n\\t\\t\\t\\t   \\n\\t\\t\\t\\t   \\n"
                    },
                    {
                        "username": "coder_c",
                        "content": "leaf nodes are univalue subtrees as they have null children ...so we have 3 leafnodes + left subtree with two 5\\'s = 4 , root is not considered as a part of subtrees as subtree should be a part of left and right children"
                    },
                    {
                        "username": "LixiangZhou01",
                        "content": "[5,5] --> 2 \\n[5,5,1] --> expected answer is 2  (here root 5 and left leaf 5 is counted as 1,  left leaf 5 is also counted once;  My question is since the Root node has a right leaf 1, why it should be counted?)\\n[5,1,5,5,5,null,5]  --> expected answer is 4 (left side two leaf nodes are counted as 2, right side including root, has 3 nodes, all have value 5, as per the second case, should it be counted as 3 for the right side, even though root has a left child 1, so the total would be 5)\\n\\nFor my understanding, if the third case is 4, the second test case should be 1.\\nAny explanation is welcome.   Thanks in advance."
                    },
                    {
                        "username": "user0168nt",
                        "content": "All leaf nodes (no matter what the value is) are unival trees by themselves.. if we are considering subtree with child nodes, then all nodes must have same nodes"
                    },
                    {
                        "username": "ymymym",
                        "content": "For custom test case of `[5,1,4,4,5,null,5]` the expected answer is `3`. Can some explain why this is the case?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Because leaf nodes are always unival trees and in this case, 4, 5, 5 are leaf nodes"
                    },
                    {
                        "username": "bayashi",
                        "content": "(I\\'m beginner.)\\nI can\\'t unsterstand why many solution in this problem choose DFS, not BFS or else.\\nHow to distinguish which method is better in a problem?\\nIf you asked \"why you choose DFS?\", how do you give an answer?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "dfs is roughly equivalent to bfs, but there are times you might prefer one or the other.\\n\\nFor example if the branching factor is very high, you might prefer dfs.\\n\\nFrom SO\\n```\\nIf you know a solution is not far from the root of the tree, a breadth first search (BFS) might be better.\\n\\nIf the tree is very deep and solutions are rare, depth first search (DFS) might take an extremely long time, but BFS could be faster.\\n\\nIf the tree is very wide, a BFS might need too much memory, so it might be completely impractical.\\n\\nIf solutions are frequent but located deep in the tree, BFS could be impractical.\\n\\nIf the search tree is very deep you will need to restrict the search depth for depth first search (DFS), anyway (for example with iterative deepening).\\n```\\nhttps://stackoverflow.com/a/3332994/630752"
                    }
                ]
            },
            {
                "id": 1575773,
                "content": [
                    {
                        "username": "guestly",
                        "content": "Why is `[5,1,5,5,5,null,5]` produce 4? There are obviously 5 `5` nodes in this tree?"
                    },
                    {
                        "username": "BubbleTree",
                        "content": "[@anandmehrotra](/anandmehrotra) ugh so poorly worded in the q"
                    },
                    {
                        "username": "anandmehrotra",
                        "content": "because the tree to the right of 1 is unival. 1 breaks the unival rule where subtree has to be the same value as the root."
                    },
                    {
                        "username": "ar13101085",
                        "content": "[1,1,1,5,5,null,5]\\n\\nMy solution give output is 4. actual expected output shows 3. why 3 ? Anyone can explain?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "I am guessing only 5s at the leaf nodes are unival subtrees in this example. since there are 2 5 leaf nodes on the left and 1 5 leaf nodes on the far right, there are 3 unival subtrees"
                    },
                    {
                        "username": "pk-dev",
                        "content": "The question was to find \"subtrees\" , why are we also including the root of the tree as part of the count ?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "its just terminology, if we do not define the root tree as a subtree the answer changes by one"
                    },
                    {
                        "username": "jp2338",
                        "content": "Hi,\\nI find the problem description is way too ambiguous :( \\nHow about below tree ? `\\n[0,5,5,2,3,6,5]` \\n\\nThe expected ans is `4` , how to calculate 4, just b/c there are 4 leave nodes ??\\n![image](https://assets.leetcode.com/users/images/a9e7bcff-a4d6-4e4e-80c1-7ebde4c26212_1622568812.7831693.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/852cdb01-8fa6-45e0-8a07-5ae9363e6478_1622568718.3118403.png)\\n\\nThanks pals!"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Leaf nodes are always unival trees.. if we are considering subtree or the full tree, all the nodes have to have the same value for them to be unival tree"
                    },
                    {
                        "username": "user0168nt",
                        "content": "2, 3, 6, 5 are unival trees (only the leaf nodes here)"
                    },
                    {
                        "username": "alphasandhu",
                        "content": "![image](https://assets.leetcode.com/users/images/da7c7c07-6fb0-49a9-9c62-86b55bbbf1bd_1614552731.8569388.png)\\n"
                    },
                    {
                        "username": "bloomer",
                        "content": "Its not consistent with the example provided to count subtrees.\\nif this tree [5,1,5,5,5,null,5] is 4 counts,\\nthen [5, 1 , 5] should be 1 and not 2."
                    },
                    {
                        "username": "Daniel535",
                        "content": "leaf nodes are regarded as a single tree here. that\\'s why it is 2."
                    },
                    {
                        "username": "robotqueen",
                        "content": "The example in the description has the following tree:\\n   5\\n 1   5\\n5 5   5\\n\\nOutput: 4\\nHere there are 5 univalue subtrees:\\n5(root)-5-5\\n5-5\\n5\\nand below 1:\\n5, 5 \\n\\nTotal is 5. Am I counting it wrong somehow?\\n\\t\\t\\t\\t   \\n\\t\\t\\t\\t   \\n"
                    },
                    {
                        "username": "coder_c",
                        "content": "leaf nodes are univalue subtrees as they have null children ...so we have 3 leafnodes + left subtree with two 5\\'s = 4 , root is not considered as a part of subtrees as subtree should be a part of left and right children"
                    },
                    {
                        "username": "LixiangZhou01",
                        "content": "[5,5] --> 2 \\n[5,5,1] --> expected answer is 2  (here root 5 and left leaf 5 is counted as 1,  left leaf 5 is also counted once;  My question is since the Root node has a right leaf 1, why it should be counted?)\\n[5,1,5,5,5,null,5]  --> expected answer is 4 (left side two leaf nodes are counted as 2, right side including root, has 3 nodes, all have value 5, as per the second case, should it be counted as 3 for the right side, even though root has a left child 1, so the total would be 5)\\n\\nFor my understanding, if the third case is 4, the second test case should be 1.\\nAny explanation is welcome.   Thanks in advance."
                    },
                    {
                        "username": "user0168nt",
                        "content": "All leaf nodes (no matter what the value is) are unival trees by themselves.. if we are considering subtree with child nodes, then all nodes must have same nodes"
                    },
                    {
                        "username": "ymymym",
                        "content": "For custom test case of `[5,1,4,4,5,null,5]` the expected answer is `3`. Can some explain why this is the case?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Because leaf nodes are always unival trees and in this case, 4, 5, 5 are leaf nodes"
                    },
                    {
                        "username": "bayashi",
                        "content": "(I\\'m beginner.)\\nI can\\'t unsterstand why many solution in this problem choose DFS, not BFS or else.\\nHow to distinguish which method is better in a problem?\\nIf you asked \"why you choose DFS?\", how do you give an answer?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "dfs is roughly equivalent to bfs, but there are times you might prefer one or the other.\\n\\nFor example if the branching factor is very high, you might prefer dfs.\\n\\nFrom SO\\n```\\nIf you know a solution is not far from the root of the tree, a breadth first search (BFS) might be better.\\n\\nIf the tree is very deep and solutions are rare, depth first search (DFS) might take an extremely long time, but BFS could be faster.\\n\\nIf the tree is very wide, a BFS might need too much memory, so it might be completely impractical.\\n\\nIf solutions are frequent but located deep in the tree, BFS could be impractical.\\n\\nIf the search tree is very deep you will need to restrict the search depth for depth first search (DFS), anyway (for example with iterative deepening).\\n```\\nhttps://stackoverflow.com/a/3332994/630752"
                    }
                ]
            },
            {
                "id": 1575342,
                "content": [
                    {
                        "username": "guestly",
                        "content": "Why is `[5,1,5,5,5,null,5]` produce 4? There are obviously 5 `5` nodes in this tree?"
                    },
                    {
                        "username": "BubbleTree",
                        "content": "[@anandmehrotra](/anandmehrotra) ugh so poorly worded in the q"
                    },
                    {
                        "username": "anandmehrotra",
                        "content": "because the tree to the right of 1 is unival. 1 breaks the unival rule where subtree has to be the same value as the root."
                    },
                    {
                        "username": "ar13101085",
                        "content": "[1,1,1,5,5,null,5]\\n\\nMy solution give output is 4. actual expected output shows 3. why 3 ? Anyone can explain?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "I am guessing only 5s at the leaf nodes are unival subtrees in this example. since there are 2 5 leaf nodes on the left and 1 5 leaf nodes on the far right, there are 3 unival subtrees"
                    },
                    {
                        "username": "pk-dev",
                        "content": "The question was to find \"subtrees\" , why are we also including the root of the tree as part of the count ?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "its just terminology, if we do not define the root tree as a subtree the answer changes by one"
                    },
                    {
                        "username": "jp2338",
                        "content": "Hi,\\nI find the problem description is way too ambiguous :( \\nHow about below tree ? `\\n[0,5,5,2,3,6,5]` \\n\\nThe expected ans is `4` , how to calculate 4, just b/c there are 4 leave nodes ??\\n![image](https://assets.leetcode.com/users/images/a9e7bcff-a4d6-4e4e-80c1-7ebde4c26212_1622568812.7831693.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/852cdb01-8fa6-45e0-8a07-5ae9363e6478_1622568718.3118403.png)\\n\\nThanks pals!"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Leaf nodes are always unival trees.. if we are considering subtree or the full tree, all the nodes have to have the same value for them to be unival tree"
                    },
                    {
                        "username": "user0168nt",
                        "content": "2, 3, 6, 5 are unival trees (only the leaf nodes here)"
                    },
                    {
                        "username": "alphasandhu",
                        "content": "![image](https://assets.leetcode.com/users/images/da7c7c07-6fb0-49a9-9c62-86b55bbbf1bd_1614552731.8569388.png)\\n"
                    },
                    {
                        "username": "bloomer",
                        "content": "Its not consistent with the example provided to count subtrees.\\nif this tree [5,1,5,5,5,null,5] is 4 counts,\\nthen [5, 1 , 5] should be 1 and not 2."
                    },
                    {
                        "username": "Daniel535",
                        "content": "leaf nodes are regarded as a single tree here. that\\'s why it is 2."
                    },
                    {
                        "username": "robotqueen",
                        "content": "The example in the description has the following tree:\\n   5\\n 1   5\\n5 5   5\\n\\nOutput: 4\\nHere there are 5 univalue subtrees:\\n5(root)-5-5\\n5-5\\n5\\nand below 1:\\n5, 5 \\n\\nTotal is 5. Am I counting it wrong somehow?\\n\\t\\t\\t\\t   \\n\\t\\t\\t\\t   \\n"
                    },
                    {
                        "username": "coder_c",
                        "content": "leaf nodes are univalue subtrees as they have null children ...so we have 3 leafnodes + left subtree with two 5\\'s = 4 , root is not considered as a part of subtrees as subtree should be a part of left and right children"
                    },
                    {
                        "username": "LixiangZhou01",
                        "content": "[5,5] --> 2 \\n[5,5,1] --> expected answer is 2  (here root 5 and left leaf 5 is counted as 1,  left leaf 5 is also counted once;  My question is since the Root node has a right leaf 1, why it should be counted?)\\n[5,1,5,5,5,null,5]  --> expected answer is 4 (left side two leaf nodes are counted as 2, right side including root, has 3 nodes, all have value 5, as per the second case, should it be counted as 3 for the right side, even though root has a left child 1, so the total would be 5)\\n\\nFor my understanding, if the third case is 4, the second test case should be 1.\\nAny explanation is welcome.   Thanks in advance."
                    },
                    {
                        "username": "user0168nt",
                        "content": "All leaf nodes (no matter what the value is) are unival trees by themselves.. if we are considering subtree with child nodes, then all nodes must have same nodes"
                    },
                    {
                        "username": "ymymym",
                        "content": "For custom test case of `[5,1,4,4,5,null,5]` the expected answer is `3`. Can some explain why this is the case?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Because leaf nodes are always unival trees and in this case, 4, 5, 5 are leaf nodes"
                    },
                    {
                        "username": "bayashi",
                        "content": "(I\\'m beginner.)\\nI can\\'t unsterstand why many solution in this problem choose DFS, not BFS or else.\\nHow to distinguish which method is better in a problem?\\nIf you asked \"why you choose DFS?\", how do you give an answer?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "dfs is roughly equivalent to bfs, but there are times you might prefer one or the other.\\n\\nFor example if the branching factor is very high, you might prefer dfs.\\n\\nFrom SO\\n```\\nIf you know a solution is not far from the root of the tree, a breadth first search (BFS) might be better.\\n\\nIf the tree is very deep and solutions are rare, depth first search (DFS) might take an extremely long time, but BFS could be faster.\\n\\nIf the tree is very wide, a BFS might need too much memory, so it might be completely impractical.\\n\\nIf solutions are frequent but located deep in the tree, BFS could be impractical.\\n\\nIf the search tree is very deep you will need to restrict the search depth for depth first search (DFS), anyway (for example with iterative deepening).\\n```\\nhttps://stackoverflow.com/a/3332994/630752"
                    }
                ]
            },
            {
                "id": 1574991,
                "content": [
                    {
                        "username": "guestly",
                        "content": "Why is `[5,1,5,5,5,null,5]` produce 4? There are obviously 5 `5` nodes in this tree?"
                    },
                    {
                        "username": "BubbleTree",
                        "content": "[@anandmehrotra](/anandmehrotra) ugh so poorly worded in the q"
                    },
                    {
                        "username": "anandmehrotra",
                        "content": "because the tree to the right of 1 is unival. 1 breaks the unival rule where subtree has to be the same value as the root."
                    },
                    {
                        "username": "ar13101085",
                        "content": "[1,1,1,5,5,null,5]\\n\\nMy solution give output is 4. actual expected output shows 3. why 3 ? Anyone can explain?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "I am guessing only 5s at the leaf nodes are unival subtrees in this example. since there are 2 5 leaf nodes on the left and 1 5 leaf nodes on the far right, there are 3 unival subtrees"
                    },
                    {
                        "username": "pk-dev",
                        "content": "The question was to find \"subtrees\" , why are we also including the root of the tree as part of the count ?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "its just terminology, if we do not define the root tree as a subtree the answer changes by one"
                    },
                    {
                        "username": "jp2338",
                        "content": "Hi,\\nI find the problem description is way too ambiguous :( \\nHow about below tree ? `\\n[0,5,5,2,3,6,5]` \\n\\nThe expected ans is `4` , how to calculate 4, just b/c there are 4 leave nodes ??\\n![image](https://assets.leetcode.com/users/images/a9e7bcff-a4d6-4e4e-80c1-7ebde4c26212_1622568812.7831693.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/852cdb01-8fa6-45e0-8a07-5ae9363e6478_1622568718.3118403.png)\\n\\nThanks pals!"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Leaf nodes are always unival trees.. if we are considering subtree or the full tree, all the nodes have to have the same value for them to be unival tree"
                    },
                    {
                        "username": "user0168nt",
                        "content": "2, 3, 6, 5 are unival trees (only the leaf nodes here)"
                    },
                    {
                        "username": "alphasandhu",
                        "content": "![image](https://assets.leetcode.com/users/images/da7c7c07-6fb0-49a9-9c62-86b55bbbf1bd_1614552731.8569388.png)\\n"
                    },
                    {
                        "username": "bloomer",
                        "content": "Its not consistent with the example provided to count subtrees.\\nif this tree [5,1,5,5,5,null,5] is 4 counts,\\nthen [5, 1 , 5] should be 1 and not 2."
                    },
                    {
                        "username": "Daniel535",
                        "content": "leaf nodes are regarded as a single tree here. that\\'s why it is 2."
                    },
                    {
                        "username": "robotqueen",
                        "content": "The example in the description has the following tree:\\n   5\\n 1   5\\n5 5   5\\n\\nOutput: 4\\nHere there are 5 univalue subtrees:\\n5(root)-5-5\\n5-5\\n5\\nand below 1:\\n5, 5 \\n\\nTotal is 5. Am I counting it wrong somehow?\\n\\t\\t\\t\\t   \\n\\t\\t\\t\\t   \\n"
                    },
                    {
                        "username": "coder_c",
                        "content": "leaf nodes are univalue subtrees as they have null children ...so we have 3 leafnodes + left subtree with two 5\\'s = 4 , root is not considered as a part of subtrees as subtree should be a part of left and right children"
                    },
                    {
                        "username": "LixiangZhou01",
                        "content": "[5,5] --> 2 \\n[5,5,1] --> expected answer is 2  (here root 5 and left leaf 5 is counted as 1,  left leaf 5 is also counted once;  My question is since the Root node has a right leaf 1, why it should be counted?)\\n[5,1,5,5,5,null,5]  --> expected answer is 4 (left side two leaf nodes are counted as 2, right side including root, has 3 nodes, all have value 5, as per the second case, should it be counted as 3 for the right side, even though root has a left child 1, so the total would be 5)\\n\\nFor my understanding, if the third case is 4, the second test case should be 1.\\nAny explanation is welcome.   Thanks in advance."
                    },
                    {
                        "username": "user0168nt",
                        "content": "All leaf nodes (no matter what the value is) are unival trees by themselves.. if we are considering subtree with child nodes, then all nodes must have same nodes"
                    },
                    {
                        "username": "ymymym",
                        "content": "For custom test case of `[5,1,4,4,5,null,5]` the expected answer is `3`. Can some explain why this is the case?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Because leaf nodes are always unival trees and in this case, 4, 5, 5 are leaf nodes"
                    },
                    {
                        "username": "bayashi",
                        "content": "(I\\'m beginner.)\\nI can\\'t unsterstand why many solution in this problem choose DFS, not BFS or else.\\nHow to distinguish which method is better in a problem?\\nIf you asked \"why you choose DFS?\", how do you give an answer?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "dfs is roughly equivalent to bfs, but there are times you might prefer one or the other.\\n\\nFor example if the branching factor is very high, you might prefer dfs.\\n\\nFrom SO\\n```\\nIf you know a solution is not far from the root of the tree, a breadth first search (BFS) might be better.\\n\\nIf the tree is very deep and solutions are rare, depth first search (DFS) might take an extremely long time, but BFS could be faster.\\n\\nIf the tree is very wide, a BFS might need too much memory, so it might be completely impractical.\\n\\nIf solutions are frequent but located deep in the tree, BFS could be impractical.\\n\\nIf the search tree is very deep you will need to restrict the search depth for depth first search (DFS), anyway (for example with iterative deepening).\\n```\\nhttps://stackoverflow.com/a/3332994/630752"
                    }
                ]
            },
            {
                "id": 1574554,
                "content": [
                    {
                        "username": "guestly",
                        "content": "Why is `[5,1,5,5,5,null,5]` produce 4? There are obviously 5 `5` nodes in this tree?"
                    },
                    {
                        "username": "BubbleTree",
                        "content": "[@anandmehrotra](/anandmehrotra) ugh so poorly worded in the q"
                    },
                    {
                        "username": "anandmehrotra",
                        "content": "because the tree to the right of 1 is unival. 1 breaks the unival rule where subtree has to be the same value as the root."
                    },
                    {
                        "username": "ar13101085",
                        "content": "[1,1,1,5,5,null,5]\\n\\nMy solution give output is 4. actual expected output shows 3. why 3 ? Anyone can explain?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "I am guessing only 5s at the leaf nodes are unival subtrees in this example. since there are 2 5 leaf nodes on the left and 1 5 leaf nodes on the far right, there are 3 unival subtrees"
                    },
                    {
                        "username": "pk-dev",
                        "content": "The question was to find \"subtrees\" , why are we also including the root of the tree as part of the count ?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "its just terminology, if we do not define the root tree as a subtree the answer changes by one"
                    },
                    {
                        "username": "jp2338",
                        "content": "Hi,\\nI find the problem description is way too ambiguous :( \\nHow about below tree ? `\\n[0,5,5,2,3,6,5]` \\n\\nThe expected ans is `4` , how to calculate 4, just b/c there are 4 leave nodes ??\\n![image](https://assets.leetcode.com/users/images/a9e7bcff-a4d6-4e4e-80c1-7ebde4c26212_1622568812.7831693.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/852cdb01-8fa6-45e0-8a07-5ae9363e6478_1622568718.3118403.png)\\n\\nThanks pals!"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Leaf nodes are always unival trees.. if we are considering subtree or the full tree, all the nodes have to have the same value for them to be unival tree"
                    },
                    {
                        "username": "user0168nt",
                        "content": "2, 3, 6, 5 are unival trees (only the leaf nodes here)"
                    },
                    {
                        "username": "alphasandhu",
                        "content": "![image](https://assets.leetcode.com/users/images/da7c7c07-6fb0-49a9-9c62-86b55bbbf1bd_1614552731.8569388.png)\\n"
                    },
                    {
                        "username": "bloomer",
                        "content": "Its not consistent with the example provided to count subtrees.\\nif this tree [5,1,5,5,5,null,5] is 4 counts,\\nthen [5, 1 , 5] should be 1 and not 2."
                    },
                    {
                        "username": "Daniel535",
                        "content": "leaf nodes are regarded as a single tree here. that\\'s why it is 2."
                    },
                    {
                        "username": "robotqueen",
                        "content": "The example in the description has the following tree:\\n   5\\n 1   5\\n5 5   5\\n\\nOutput: 4\\nHere there are 5 univalue subtrees:\\n5(root)-5-5\\n5-5\\n5\\nand below 1:\\n5, 5 \\n\\nTotal is 5. Am I counting it wrong somehow?\\n\\t\\t\\t\\t   \\n\\t\\t\\t\\t   \\n"
                    },
                    {
                        "username": "coder_c",
                        "content": "leaf nodes are univalue subtrees as they have null children ...so we have 3 leafnodes + left subtree with two 5\\'s = 4 , root is not considered as a part of subtrees as subtree should be a part of left and right children"
                    },
                    {
                        "username": "LixiangZhou01",
                        "content": "[5,5] --> 2 \\n[5,5,1] --> expected answer is 2  (here root 5 and left leaf 5 is counted as 1,  left leaf 5 is also counted once;  My question is since the Root node has a right leaf 1, why it should be counted?)\\n[5,1,5,5,5,null,5]  --> expected answer is 4 (left side two leaf nodes are counted as 2, right side including root, has 3 nodes, all have value 5, as per the second case, should it be counted as 3 for the right side, even though root has a left child 1, so the total would be 5)\\n\\nFor my understanding, if the third case is 4, the second test case should be 1.\\nAny explanation is welcome.   Thanks in advance."
                    },
                    {
                        "username": "user0168nt",
                        "content": "All leaf nodes (no matter what the value is) are unival trees by themselves.. if we are considering subtree with child nodes, then all nodes must have same nodes"
                    },
                    {
                        "username": "ymymym",
                        "content": "For custom test case of `[5,1,4,4,5,null,5]` the expected answer is `3`. Can some explain why this is the case?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Because leaf nodes are always unival trees and in this case, 4, 5, 5 are leaf nodes"
                    },
                    {
                        "username": "bayashi",
                        "content": "(I\\'m beginner.)\\nI can\\'t unsterstand why many solution in this problem choose DFS, not BFS or else.\\nHow to distinguish which method is better in a problem?\\nIf you asked \"why you choose DFS?\", how do you give an answer?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "dfs is roughly equivalent to bfs, but there are times you might prefer one or the other.\\n\\nFor example if the branching factor is very high, you might prefer dfs.\\n\\nFrom SO\\n```\\nIf you know a solution is not far from the root of the tree, a breadth first search (BFS) might be better.\\n\\nIf the tree is very deep and solutions are rare, depth first search (DFS) might take an extremely long time, but BFS could be faster.\\n\\nIf the tree is very wide, a BFS might need too much memory, so it might be completely impractical.\\n\\nIf solutions are frequent but located deep in the tree, BFS could be impractical.\\n\\nIf the search tree is very deep you will need to restrict the search depth for depth first search (DFS), anyway (for example with iterative deepening).\\n```\\nhttps://stackoverflow.com/a/3332994/630752"
                    }
                ]
            },
            {
                "id": 1572429,
                "content": [
                    {
                        "username": "guestly",
                        "content": "Why is `[5,1,5,5,5,null,5]` produce 4? There are obviously 5 `5` nodes in this tree?"
                    },
                    {
                        "username": "BubbleTree",
                        "content": "[@anandmehrotra](/anandmehrotra) ugh so poorly worded in the q"
                    },
                    {
                        "username": "anandmehrotra",
                        "content": "because the tree to the right of 1 is unival. 1 breaks the unival rule where subtree has to be the same value as the root."
                    },
                    {
                        "username": "ar13101085",
                        "content": "[1,1,1,5,5,null,5]\\n\\nMy solution give output is 4. actual expected output shows 3. why 3 ? Anyone can explain?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "I am guessing only 5s at the leaf nodes are unival subtrees in this example. since there are 2 5 leaf nodes on the left and 1 5 leaf nodes on the far right, there are 3 unival subtrees"
                    },
                    {
                        "username": "pk-dev",
                        "content": "The question was to find \"subtrees\" , why are we also including the root of the tree as part of the count ?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "its just terminology, if we do not define the root tree as a subtree the answer changes by one"
                    },
                    {
                        "username": "jp2338",
                        "content": "Hi,\\nI find the problem description is way too ambiguous :( \\nHow about below tree ? `\\n[0,5,5,2,3,6,5]` \\n\\nThe expected ans is `4` , how to calculate 4, just b/c there are 4 leave nodes ??\\n![image](https://assets.leetcode.com/users/images/a9e7bcff-a4d6-4e4e-80c1-7ebde4c26212_1622568812.7831693.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/852cdb01-8fa6-45e0-8a07-5ae9363e6478_1622568718.3118403.png)\\n\\nThanks pals!"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Leaf nodes are always unival trees.. if we are considering subtree or the full tree, all the nodes have to have the same value for them to be unival tree"
                    },
                    {
                        "username": "user0168nt",
                        "content": "2, 3, 6, 5 are unival trees (only the leaf nodes here)"
                    },
                    {
                        "username": "alphasandhu",
                        "content": "![image](https://assets.leetcode.com/users/images/da7c7c07-6fb0-49a9-9c62-86b55bbbf1bd_1614552731.8569388.png)\\n"
                    },
                    {
                        "username": "bloomer",
                        "content": "Its not consistent with the example provided to count subtrees.\\nif this tree [5,1,5,5,5,null,5] is 4 counts,\\nthen [5, 1 , 5] should be 1 and not 2."
                    },
                    {
                        "username": "Daniel535",
                        "content": "leaf nodes are regarded as a single tree here. that\\'s why it is 2."
                    },
                    {
                        "username": "robotqueen",
                        "content": "The example in the description has the following tree:\\n   5\\n 1   5\\n5 5   5\\n\\nOutput: 4\\nHere there are 5 univalue subtrees:\\n5(root)-5-5\\n5-5\\n5\\nand below 1:\\n5, 5 \\n\\nTotal is 5. Am I counting it wrong somehow?\\n\\t\\t\\t\\t   \\n\\t\\t\\t\\t   \\n"
                    },
                    {
                        "username": "coder_c",
                        "content": "leaf nodes are univalue subtrees as they have null children ...so we have 3 leafnodes + left subtree with two 5\\'s = 4 , root is not considered as a part of subtrees as subtree should be a part of left and right children"
                    },
                    {
                        "username": "LixiangZhou01",
                        "content": "[5,5] --> 2 \\n[5,5,1] --> expected answer is 2  (here root 5 and left leaf 5 is counted as 1,  left leaf 5 is also counted once;  My question is since the Root node has a right leaf 1, why it should be counted?)\\n[5,1,5,5,5,null,5]  --> expected answer is 4 (left side two leaf nodes are counted as 2, right side including root, has 3 nodes, all have value 5, as per the second case, should it be counted as 3 for the right side, even though root has a left child 1, so the total would be 5)\\n\\nFor my understanding, if the third case is 4, the second test case should be 1.\\nAny explanation is welcome.   Thanks in advance."
                    },
                    {
                        "username": "user0168nt",
                        "content": "All leaf nodes (no matter what the value is) are unival trees by themselves.. if we are considering subtree with child nodes, then all nodes must have same nodes"
                    },
                    {
                        "username": "ymymym",
                        "content": "For custom test case of `[5,1,4,4,5,null,5]` the expected answer is `3`. Can some explain why this is the case?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Because leaf nodes are always unival trees and in this case, 4, 5, 5 are leaf nodes"
                    },
                    {
                        "username": "bayashi",
                        "content": "(I\\'m beginner.)\\nI can\\'t unsterstand why many solution in this problem choose DFS, not BFS or else.\\nHow to distinguish which method is better in a problem?\\nIf you asked \"why you choose DFS?\", how do you give an answer?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "dfs is roughly equivalent to bfs, but there are times you might prefer one or the other.\\n\\nFor example if the branching factor is very high, you might prefer dfs.\\n\\nFrom SO\\n```\\nIf you know a solution is not far from the root of the tree, a breadth first search (BFS) might be better.\\n\\nIf the tree is very deep and solutions are rare, depth first search (DFS) might take an extremely long time, but BFS could be faster.\\n\\nIf the tree is very wide, a BFS might need too much memory, so it might be completely impractical.\\n\\nIf solutions are frequent but located deep in the tree, BFS could be impractical.\\n\\nIf the search tree is very deep you will need to restrict the search depth for depth first search (DFS), anyway (for example with iterative deepening).\\n```\\nhttps://stackoverflow.com/a/3332994/630752"
                    }
                ]
            },
            {
                "id": 1574702,
                "content": [
                    {
                        "username": "guestly",
                        "content": "Why is `[5,1,5,5,5,null,5]` produce 4? There are obviously 5 `5` nodes in this tree?"
                    },
                    {
                        "username": "BubbleTree",
                        "content": "[@anandmehrotra](/anandmehrotra) ugh so poorly worded in the q"
                    },
                    {
                        "username": "anandmehrotra",
                        "content": "because the tree to the right of 1 is unival. 1 breaks the unival rule where subtree has to be the same value as the root."
                    },
                    {
                        "username": "ar13101085",
                        "content": "[1,1,1,5,5,null,5]\\n\\nMy solution give output is 4. actual expected output shows 3. why 3 ? Anyone can explain?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "I am guessing only 5s at the leaf nodes are unival subtrees in this example. since there are 2 5 leaf nodes on the left and 1 5 leaf nodes on the far right, there are 3 unival subtrees"
                    },
                    {
                        "username": "pk-dev",
                        "content": "The question was to find \"subtrees\" , why are we also including the root of the tree as part of the count ?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "its just terminology, if we do not define the root tree as a subtree the answer changes by one"
                    },
                    {
                        "username": "jp2338",
                        "content": "Hi,\\nI find the problem description is way too ambiguous :( \\nHow about below tree ? `\\n[0,5,5,2,3,6,5]` \\n\\nThe expected ans is `4` , how to calculate 4, just b/c there are 4 leave nodes ??\\n![image](https://assets.leetcode.com/users/images/a9e7bcff-a4d6-4e4e-80c1-7ebde4c26212_1622568812.7831693.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/852cdb01-8fa6-45e0-8a07-5ae9363e6478_1622568718.3118403.png)\\n\\nThanks pals!"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Leaf nodes are always unival trees.. if we are considering subtree or the full tree, all the nodes have to have the same value for them to be unival tree"
                    },
                    {
                        "username": "user0168nt",
                        "content": "2, 3, 6, 5 are unival trees (only the leaf nodes here)"
                    },
                    {
                        "username": "alphasandhu",
                        "content": "![image](https://assets.leetcode.com/users/images/da7c7c07-6fb0-49a9-9c62-86b55bbbf1bd_1614552731.8569388.png)\\n"
                    },
                    {
                        "username": "bloomer",
                        "content": "Its not consistent with the example provided to count subtrees.\\nif this tree [5,1,5,5,5,null,5] is 4 counts,\\nthen [5, 1 , 5] should be 1 and not 2."
                    },
                    {
                        "username": "Daniel535",
                        "content": "leaf nodes are regarded as a single tree here. that\\'s why it is 2."
                    },
                    {
                        "username": "robotqueen",
                        "content": "The example in the description has the following tree:\\n   5\\n 1   5\\n5 5   5\\n\\nOutput: 4\\nHere there are 5 univalue subtrees:\\n5(root)-5-5\\n5-5\\n5\\nand below 1:\\n5, 5 \\n\\nTotal is 5. Am I counting it wrong somehow?\\n\\t\\t\\t\\t   \\n\\t\\t\\t\\t   \\n"
                    },
                    {
                        "username": "coder_c",
                        "content": "leaf nodes are univalue subtrees as they have null children ...so we have 3 leafnodes + left subtree with two 5\\'s = 4 , root is not considered as a part of subtrees as subtree should be a part of left and right children"
                    },
                    {
                        "username": "LixiangZhou01",
                        "content": "[5,5] --> 2 \\n[5,5,1] --> expected answer is 2  (here root 5 and left leaf 5 is counted as 1,  left leaf 5 is also counted once;  My question is since the Root node has a right leaf 1, why it should be counted?)\\n[5,1,5,5,5,null,5]  --> expected answer is 4 (left side two leaf nodes are counted as 2, right side including root, has 3 nodes, all have value 5, as per the second case, should it be counted as 3 for the right side, even though root has a left child 1, so the total would be 5)\\n\\nFor my understanding, if the third case is 4, the second test case should be 1.\\nAny explanation is welcome.   Thanks in advance."
                    },
                    {
                        "username": "user0168nt",
                        "content": "All leaf nodes (no matter what the value is) are unival trees by themselves.. if we are considering subtree with child nodes, then all nodes must have same nodes"
                    },
                    {
                        "username": "ymymym",
                        "content": "For custom test case of `[5,1,4,4,5,null,5]` the expected answer is `3`. Can some explain why this is the case?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Because leaf nodes are always unival trees and in this case, 4, 5, 5 are leaf nodes"
                    },
                    {
                        "username": "bayashi",
                        "content": "(I\\'m beginner.)\\nI can\\'t unsterstand why many solution in this problem choose DFS, not BFS or else.\\nHow to distinguish which method is better in a problem?\\nIf you asked \"why you choose DFS?\", how do you give an answer?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "dfs is roughly equivalent to bfs, but there are times you might prefer one or the other.\\n\\nFor example if the branching factor is very high, you might prefer dfs.\\n\\nFrom SO\\n```\\nIf you know a solution is not far from the root of the tree, a breadth first search (BFS) might be better.\\n\\nIf the tree is very deep and solutions are rare, depth first search (DFS) might take an extremely long time, but BFS could be faster.\\n\\nIf the tree is very wide, a BFS might need too much memory, so it might be completely impractical.\\n\\nIf solutions are frequent but located deep in the tree, BFS could be impractical.\\n\\nIf the search tree is very deep you will need to restrict the search depth for depth first search (DFS), anyway (for example with iterative deepening).\\n```\\nhttps://stackoverflow.com/a/3332994/630752"
                    }
                ]
            },
            {
                "id": 1574326,
                "content": [
                    {
                        "username": "guestly",
                        "content": "Why is `[5,1,5,5,5,null,5]` produce 4? There are obviously 5 `5` nodes in this tree?"
                    },
                    {
                        "username": "BubbleTree",
                        "content": "[@anandmehrotra](/anandmehrotra) ugh so poorly worded in the q"
                    },
                    {
                        "username": "anandmehrotra",
                        "content": "because the tree to the right of 1 is unival. 1 breaks the unival rule where subtree has to be the same value as the root."
                    },
                    {
                        "username": "ar13101085",
                        "content": "[1,1,1,5,5,null,5]\\n\\nMy solution give output is 4. actual expected output shows 3. why 3 ? Anyone can explain?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "I am guessing only 5s at the leaf nodes are unival subtrees in this example. since there are 2 5 leaf nodes on the left and 1 5 leaf nodes on the far right, there are 3 unival subtrees"
                    },
                    {
                        "username": "pk-dev",
                        "content": "The question was to find \"subtrees\" , why are we also including the root of the tree as part of the count ?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "its just terminology, if we do not define the root tree as a subtree the answer changes by one"
                    },
                    {
                        "username": "jp2338",
                        "content": "Hi,\\nI find the problem description is way too ambiguous :( \\nHow about below tree ? `\\n[0,5,5,2,3,6,5]` \\n\\nThe expected ans is `4` , how to calculate 4, just b/c there are 4 leave nodes ??\\n![image](https://assets.leetcode.com/users/images/a9e7bcff-a4d6-4e4e-80c1-7ebde4c26212_1622568812.7831693.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/852cdb01-8fa6-45e0-8a07-5ae9363e6478_1622568718.3118403.png)\\n\\nThanks pals!"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Leaf nodes are always unival trees.. if we are considering subtree or the full tree, all the nodes have to have the same value for them to be unival tree"
                    },
                    {
                        "username": "user0168nt",
                        "content": "2, 3, 6, 5 are unival trees (only the leaf nodes here)"
                    },
                    {
                        "username": "alphasandhu",
                        "content": "![image](https://assets.leetcode.com/users/images/da7c7c07-6fb0-49a9-9c62-86b55bbbf1bd_1614552731.8569388.png)\\n"
                    },
                    {
                        "username": "bloomer",
                        "content": "Its not consistent with the example provided to count subtrees.\\nif this tree [5,1,5,5,5,null,5] is 4 counts,\\nthen [5, 1 , 5] should be 1 and not 2."
                    },
                    {
                        "username": "Daniel535",
                        "content": "leaf nodes are regarded as a single tree here. that\\'s why it is 2."
                    },
                    {
                        "username": "robotqueen",
                        "content": "The example in the description has the following tree:\\n   5\\n 1   5\\n5 5   5\\n\\nOutput: 4\\nHere there are 5 univalue subtrees:\\n5(root)-5-5\\n5-5\\n5\\nand below 1:\\n5, 5 \\n\\nTotal is 5. Am I counting it wrong somehow?\\n\\t\\t\\t\\t   \\n\\t\\t\\t\\t   \\n"
                    },
                    {
                        "username": "coder_c",
                        "content": "leaf nodes are univalue subtrees as they have null children ...so we have 3 leafnodes + left subtree with two 5\\'s = 4 , root is not considered as a part of subtrees as subtree should be a part of left and right children"
                    },
                    {
                        "username": "LixiangZhou01",
                        "content": "[5,5] --> 2 \\n[5,5,1] --> expected answer is 2  (here root 5 and left leaf 5 is counted as 1,  left leaf 5 is also counted once;  My question is since the Root node has a right leaf 1, why it should be counted?)\\n[5,1,5,5,5,null,5]  --> expected answer is 4 (left side two leaf nodes are counted as 2, right side including root, has 3 nodes, all have value 5, as per the second case, should it be counted as 3 for the right side, even though root has a left child 1, so the total would be 5)\\n\\nFor my understanding, if the third case is 4, the second test case should be 1.\\nAny explanation is welcome.   Thanks in advance."
                    },
                    {
                        "username": "user0168nt",
                        "content": "All leaf nodes (no matter what the value is) are unival trees by themselves.. if we are considering subtree with child nodes, then all nodes must have same nodes"
                    },
                    {
                        "username": "ymymym",
                        "content": "For custom test case of `[5,1,4,4,5,null,5]` the expected answer is `3`. Can some explain why this is the case?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Because leaf nodes are always unival trees and in this case, 4, 5, 5 are leaf nodes"
                    },
                    {
                        "username": "bayashi",
                        "content": "(I\\'m beginner.)\\nI can\\'t unsterstand why many solution in this problem choose DFS, not BFS or else.\\nHow to distinguish which method is better in a problem?\\nIf you asked \"why you choose DFS?\", how do you give an answer?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "dfs is roughly equivalent to bfs, but there are times you might prefer one or the other.\\n\\nFor example if the branching factor is very high, you might prefer dfs.\\n\\nFrom SO\\n```\\nIf you know a solution is not far from the root of the tree, a breadth first search (BFS) might be better.\\n\\nIf the tree is very deep and solutions are rare, depth first search (DFS) might take an extremely long time, but BFS could be faster.\\n\\nIf the tree is very wide, a BFS might need too much memory, so it might be completely impractical.\\n\\nIf solutions are frequent but located deep in the tree, BFS could be impractical.\\n\\nIf the search tree is very deep you will need to restrict the search depth for depth first search (DFS), anyway (for example with iterative deepening).\\n```\\nhttps://stackoverflow.com/a/3332994/630752"
                    }
                ]
            },
            {
                "id": 1573750,
                "content": [
                    {
                        "username": "guestly",
                        "content": "Why is `[5,1,5,5,5,null,5]` produce 4? There are obviously 5 `5` nodes in this tree?"
                    },
                    {
                        "username": "BubbleTree",
                        "content": "[@anandmehrotra](/anandmehrotra) ugh so poorly worded in the q"
                    },
                    {
                        "username": "anandmehrotra",
                        "content": "because the tree to the right of 1 is unival. 1 breaks the unival rule where subtree has to be the same value as the root."
                    },
                    {
                        "username": "ar13101085",
                        "content": "[1,1,1,5,5,null,5]\\n\\nMy solution give output is 4. actual expected output shows 3. why 3 ? Anyone can explain?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "I am guessing only 5s at the leaf nodes are unival subtrees in this example. since there are 2 5 leaf nodes on the left and 1 5 leaf nodes on the far right, there are 3 unival subtrees"
                    },
                    {
                        "username": "pk-dev",
                        "content": "The question was to find \"subtrees\" , why are we also including the root of the tree as part of the count ?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "its just terminology, if we do not define the root tree as a subtree the answer changes by one"
                    },
                    {
                        "username": "jp2338",
                        "content": "Hi,\\nI find the problem description is way too ambiguous :( \\nHow about below tree ? `\\n[0,5,5,2,3,6,5]` \\n\\nThe expected ans is `4` , how to calculate 4, just b/c there are 4 leave nodes ??\\n![image](https://assets.leetcode.com/users/images/a9e7bcff-a4d6-4e4e-80c1-7ebde4c26212_1622568812.7831693.png)\\n\\n\\n![image](https://assets.leetcode.com/users/images/852cdb01-8fa6-45e0-8a07-5ae9363e6478_1622568718.3118403.png)\\n\\nThanks pals!"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Leaf nodes are always unival trees.. if we are considering subtree or the full tree, all the nodes have to have the same value for them to be unival tree"
                    },
                    {
                        "username": "user0168nt",
                        "content": "2, 3, 6, 5 are unival trees (only the leaf nodes here)"
                    },
                    {
                        "username": "alphasandhu",
                        "content": "![image](https://assets.leetcode.com/users/images/da7c7c07-6fb0-49a9-9c62-86b55bbbf1bd_1614552731.8569388.png)\\n"
                    },
                    {
                        "username": "bloomer",
                        "content": "Its not consistent with the example provided to count subtrees.\\nif this tree [5,1,5,5,5,null,5] is 4 counts,\\nthen [5, 1 , 5] should be 1 and not 2."
                    },
                    {
                        "username": "Daniel535",
                        "content": "leaf nodes are regarded as a single tree here. that\\'s why it is 2."
                    },
                    {
                        "username": "robotqueen",
                        "content": "The example in the description has the following tree:\\n   5\\n 1   5\\n5 5   5\\n\\nOutput: 4\\nHere there are 5 univalue subtrees:\\n5(root)-5-5\\n5-5\\n5\\nand below 1:\\n5, 5 \\n\\nTotal is 5. Am I counting it wrong somehow?\\n\\t\\t\\t\\t   \\n\\t\\t\\t\\t   \\n"
                    },
                    {
                        "username": "coder_c",
                        "content": "leaf nodes are univalue subtrees as they have null children ...so we have 3 leafnodes + left subtree with two 5\\'s = 4 , root is not considered as a part of subtrees as subtree should be a part of left and right children"
                    },
                    {
                        "username": "LixiangZhou01",
                        "content": "[5,5] --> 2 \\n[5,5,1] --> expected answer is 2  (here root 5 and left leaf 5 is counted as 1,  left leaf 5 is also counted once;  My question is since the Root node has a right leaf 1, why it should be counted?)\\n[5,1,5,5,5,null,5]  --> expected answer is 4 (left side two leaf nodes are counted as 2, right side including root, has 3 nodes, all have value 5, as per the second case, should it be counted as 3 for the right side, even though root has a left child 1, so the total would be 5)\\n\\nFor my understanding, if the third case is 4, the second test case should be 1.\\nAny explanation is welcome.   Thanks in advance."
                    },
                    {
                        "username": "user0168nt",
                        "content": "All leaf nodes (no matter what the value is) are unival trees by themselves.. if we are considering subtree with child nodes, then all nodes must have same nodes"
                    },
                    {
                        "username": "ymymym",
                        "content": "For custom test case of `[5,1,4,4,5,null,5]` the expected answer is `3`. Can some explain why this is the case?"
                    },
                    {
                        "username": "user0168nt",
                        "content": "Because leaf nodes are always unival trees and in this case, 4, 5, 5 are leaf nodes"
                    },
                    {
                        "username": "bayashi",
                        "content": "(I\\'m beginner.)\\nI can\\'t unsterstand why many solution in this problem choose DFS, not BFS or else.\\nHow to distinguish which method is better in a problem?\\nIf you asked \"why you choose DFS?\", how do you give an answer?"
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "dfs is roughly equivalent to bfs, but there are times you might prefer one or the other.\\n\\nFor example if the branching factor is very high, you might prefer dfs.\\n\\nFrom SO\\n```\\nIf you know a solution is not far from the root of the tree, a breadth first search (BFS) might be better.\\n\\nIf the tree is very deep and solutions are rare, depth first search (DFS) might take an extremely long time, but BFS could be faster.\\n\\nIf the tree is very wide, a BFS might need too much memory, so it might be completely impractical.\\n\\nIf solutions are frequent but located deep in the tree, BFS could be impractical.\\n\\nIf the search tree is very deep you will need to restrict the search depth for depth first search (DFS), anyway (for example with iterative deepening).\\n```\\nhttps://stackoverflow.com/a/3332994/630752"
                    }
                ]
            }
        ]
    },
    {
        "title": "Intersection of Two Arrays II",
        "question_content": "<p>Given two integer arrays <code>nums1</code> and <code>nums2</code>, return <em>an array of their intersection</em>. Each element in the result must appear as many times as it shows in both arrays and you may return the result in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,2,2,1], nums2 = [2,2]\n<strong>Output:</strong> [2,2]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [4,9,5], nums2 = [9,4,9,8,4]\n<strong>Output:</strong> [4,9]\n<strong>Explanation:</strong> [9,4] is also accepted.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums1.length, nums2.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= nums1[i], nums2[i] &lt;= 1000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>What if the given array is already sorted? How would you optimize your algorithm?</li>\n\t<li>What if <code>nums1</code>&#39;s size is small compared to <code>nums2</code>&#39;s size? Which algorithm is better?</li>\n\t<li>What if elements of <code>nums2</code> are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?</li>\n</ul>\n",
        "solutions": [
            {
                "id": 1468295,
                "title": "python-2-approaches-3-follow-up-questions-clean-concise",
                "content": "**\\u2714\\uFE0F Approach 1: HashMap**\\n- Using HashMap to store occurrences of elements in the `nums1` array.\\n- Iterate `x` in `nums2` array, check if `cnt[x] > 0` then append `x` to our answer and decrease `cnt[x]` by one.\\n- To optimize the space, we ensure `len(nums1) <= len(nums2)` by swapping `nums1` with `nums2` if `len(nums1) > len(nums2)`.\\n```python\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        if len(nums1) > len(nums2): return self.intersect(nums2, nums1)\\n            \\n        cnt = Counter(nums1)\\n        ans = []\\n        for x in nums2:\\n            if cnt[x] > 0:\\n                ans.append(x)\\n                cnt[x] -= 1\\n        return ans\\n```\\nComplexity:\\n- Time: `O(M + N)`, where `M <= 1000` is length of `nums1` array, `N <= 1000` is length of `nums2` array.\\n- Space: `O(min(M, N))`\\n\\n---\\n**\\u2714\\uFE0F Approach 2: Sort then Two Pointers**\\n```python\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        nums1.sort()\\n        nums2.sort()\\n        \\n        ans = []\\n        i = j = 0\\n        while i < len(nums1) and j < len(nums2):\\n            if nums1[i] < nums2[j]:\\n                i += 1\\n            elif nums1[i] > nums2[j]:\\n                j += 1\\n            else:\\n                ans.append(nums1[i])\\n                i += 1\\n                j += 1\\n        return ans\\n```\\nComplexity:\\n- Time: `O(MlogM + NlogN)`, where `M <= 1000` is length of `nums1` array, `N <= 1000` is length of `nums2` array.\\n- Extra Space (without counting output as space): `O(sorting)`\\n\\n---\\n\\n**\\u2714\\uFE0F Follow-up Question 1:** What if the given array is already sorted? How would you optimize your algorithm?\\n- **Approach 2** is the best choice since we skip the cost of sorting.\\n- So time complexity is `O(M+N)` and the space complexity is `O(1)`.\\n\\n---\\n**\\u2714\\uFE0F Follow-up Question 2:** What if `nums1`\\'s size is small compared to `nums2`\\'s size? Which algorithm is better?\\n- **Approach 1** is the best choice.\\n- Time complexity is `O(M+N)` and the space complexity is `O(M)`, where `M` is length of `nums1`, `N` is length of `nums2`.\\n\\n---\\n**\\u2714\\uFE0F Follow-up Question 3:** What if elements of `nums2` are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?\\n- If `nums1` fits into the memory, we can use **Approach 1** which stores all elements of `nums1` in the HashMap. Then, we can sequentially load and process `nums2`.\\n- If neither `nums1` nor `nums2` fits into the memory, we split the numeric range into numeric sub-ranges that fit into the memory.\\n\\t- We modify **Approach 1** to count only elements which belong to the given numeric sub-range.\\n\\t- We process each numeric sub-ranges one by one, util we process all numeric sub-ranges.\\n\\t- For example: \\n\\t\\t- Input constraint:\\n\\t\\t\\t- `1 <= nums1.length, nums2.length <= 10^10`.\\n\\t\\t\\t- `0 <= nums1[i], nums2[i] < 10^5`\\n\\t\\t\\t- Our memory can store up to `1000` elements.\\n\\t\\t- Then we split numeric range into numeric sub-ranges `[0...999]`, `[1000...1999]`, ..., `[99000...99999]`, then call **Approach 1** to process 100 numeric sub-ranges.\\n\\nIf you think this **post is useful**, I\\'m happy if you **give a vote**. Any **questions or discussions are welcome!** Thank a lot.",
                "solutionTags": [],
                "code": "```python\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        if len(nums1) > len(nums2): return self.intersect(nums2, nums1)\\n            \\n        cnt = Counter(nums1)\\n        ans = []\\n        for x in nums2:\\n            if cnt[x] > 0:\\n                ans.append(x)\\n                cnt[x] -= 1\\n        return ans\\n```\n```python\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        nums1.sort()\\n        nums2.sort()\\n        \\n        ans = []\\n        i = j = 0\\n        while i < len(nums1) and j < len(nums2):\\n            if nums1[i] < nums2[j]:\\n                i += 1\\n            elif nums1[i] > nums2[j]:\\n                j += 1\\n            else:\\n                ans.append(nums1[i])\\n                i += 1\\n                j += 1\\n        return ans\\n```",
                "codeTag": "Java"
            },
            {
                "id": 846181,
                "title": "c-solutions-1-map-2-two-pointer-with-sort",
                "content": "If you think my solution is helpful,Please give me a reputation : ) \\n```\\nclass Solution {// Using Map & without sort\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        map<int,int>freq;\\n        vector<int>ans;\\n        for(int i = 0;i<nums1.size();i++){\\n            freq[nums1[i]]++;\\n        }\\n        for(int i = 0;i<nums2.size();i++){\\n            if (freq[nums2[i]] > 0){\\n                freq[nums2[i]]--; \\n                ans.push_back(nums2[i]);\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```\\n\\n```\\nclass Solution {// Two pointer ( i , j ) with sort\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        sort(nums1.begin(), nums1.end());\\n        sort(nums2.begin(), nums2.end());\\n        int i = 0, j = 0;\\n        vector<int> res;\\n        while(i < nums1.size() && j < nums2.size()){\\n            if(nums1[i] == nums2[j]){\\n                res.push_back(nums1[i]);\\n                i++;\\n\\t\\t\\t\\tj++;\\n            }\\n            else if(nums1[i] < nums2[j]){\\n                i++;\\n            }\\n            else if(nums1[i] > nums2[j]){\\n                j++;\\n            }\\n        }\\n        return res;\\n    }\\n};\\n```\\n",
                "solutionTags": [
                    "C",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution {// Using Map & without sort\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        map<int,int>freq;\\n        vector<int>ans;\\n        for(int i = 0;i<nums1.size();i++){\\n            freq[nums1[i]]++;\\n        }\\n        for(int i = 0;i<nums2.size();i++){\\n            if (freq[nums2[i]] > 0){\\n                freq[nums2[i]]--; \\n                ans.push_back(nums2[i]);\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```\n```\\nclass Solution {// Two pointer ( i , j ) with sort\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        sort(nums1.begin(), nums1.end());\\n        sort(nums2.begin(), nums2.end());\\n        int i = 0, j = 0;\\n        vector<int> res;\\n        while(i < nums1.size() && j < nums2.size()){\\n            if(nums1[i] == nums2[j]){\\n                res.push_back(nums1[i]);\\n                i++;\\n\\t\\t\\t\\tj++;\\n            }\\n            else if(nums1[i] < nums2[j]){\\n                i++;\\n            }\\n            else if(nums1[i] > nums2[j]){\\n                j++;\\n            }\\n        }\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 82247,
                "title": "three-python-solutions",
                "content": "**two pointers:**\\n\\n    class Solution(object):\\n        def intersect(self, nums1, nums2):\\n\\n            nums1, nums2 = sorted(nums1), sorted(nums2)\\n            pt1 = pt2 = 0\\n            res = []\\n\\n            while True:\\n                try:\\n                    if nums1[pt1] > nums2[pt2]:\\n                        pt2 += 1\\n                    elif nums1[pt1] < nums2[pt2]:\\n                        pt1 += 1\\n                    else:\\n                        res.append(nums1[pt1])\\n                        pt1 += 1\\n                        pt2 += 1\\n                except IndexError:\\n                    break\\n\\n            return res\\n\\n**use `dictionary` to count:**\\n\\n    class Solution(object):\\n        def intersect(self, nums1, nums2):\\n\\n            counts = {}\\n            res = []\\n\\n            for num in nums1:\\n                counts[num] = counts.get(num, 0) + 1\\n\\n            for num in nums2:\\n                if num in counts and counts[num] > 0:\\n                    res.append(num)\\n                    counts[num] -= 1\\n\\n            return res\\n\\n**use `Counter` to make it cleaner:**\\n\\n    class Solution(object):\\n        def intersect(self, nums1, nums2):\\n    \\n            counts = collections.Counter(nums1)\\n            res = []\\n\\n            for num in nums2:\\n                if counts[num] > 0:\\n                    res += num,\\n                    counts[num] -= 1\\n\\n            return res",
                "solutionTags": [
                    "Python"
                ],
                "code": "class Solution(object):\\n        def intersect(self, nums1, nums2):\\n\\n            nums1, nums2 = sorted(nums1), sorted(nums2)\\n            pt1 = pt2 = 0\\n            res = []\\n\\n            while True:\\n                try:\\n                    if nums1[pt1] > nums2[pt2]:\\n                        pt2 += 1\\n                    elif nums1[pt1] < nums2[pt2]:\\n                        pt1 += 1\\n                    else:\\n                        res.append(nums1[pt1])\\n                        pt1 += 1\\n                        pt2 += 1\\n                except IndexError:\\n                    break\\n\\n            return res\\n\\n**use `dictionary` to count:**\\n\\n    class Solution(object):\\n        def intersect(self, nums1, nums2):\\n\\n            counts = {}",
                "codeTag": "Java"
            },
            {
                "id": 282372,
                "title": "java-solution-with-all-3-follow-up-questions",
                "content": "The first question is relatively easy, create a hashmap base on number frequency of nums1(whichever one is longer). Then for every element of nums2, look upon the hashmap. If we found an intersection, deduct by 1 to avoid duplicate. \\n```\\npublic int[] intersect(int[] nums1, int[] nums2) {\\n        HashMap<Integer, Integer> map = new HashMap<>();\\n        for(int i : nums1){\\n            int freq = map.getOrDefault(i, 0);\\n            map.put(i, freq + 1);\\n        }\\n        ArrayList<Integer> list = new ArrayList<>();\\n        for(int i : nums2){\\n            if(map.get(i) != null && map.get(i) > 0){\\n                list.add(i);\\n                map.put(i, map.get(i) - 1);\\n            }\\n        }\\n        int[] ret = new int[list.size()]; \\n        for(int i = 0; i < list.size();i++){\\n            ret[i] = list.get(i);\\n        }\\n        return ret;\\n    }\\n```\\nThis solution is O(N + M) time complexity, O(N) for iterate one of the array to create a hashmap and O(M) to iterate the other array. O(N) space to store such hashmap.\\n\\nFollow Up:\\n**What if the given array is already sorted? How would you optimize your algorithm?**\\n    Classic two pointer iteration, i points to nums1 and j points to nums2. Because a sorted array is in ascending order, so if nums1[i] > nums[j], we need to increment j, and vice versa. Only when nums1[i] == nums[j], we add it to the result array. Time Complexity O(max(N, M)). Worst case, for example, would be nums1 = {100}, and nums2 = {1, 2, ..., 100 }. We will always iterate the longest array. The example code is below(I sorted it so it could go through OJ):\\n```\\npublic int[] intersect(int[] nums1, int[] nums2) {\\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        int n = nums1.length, m = nums2.length;\\n        int i = 0, j = 0;\\n        List<Integer> list = new ArrayList<>();\\n        while(i < n && j < m){\\n            int a = nums1[i], b= nums2[j];\\n            if(a == b){\\n                list.add(a);\\n                i++;\\n                j++;\\n            }else if(a < b){\\n                i++;\\n            }else{\\n                j++;\\n            }\\n        }\\n        int[] ret = new int[list.size()];\\n        for(int k = 0; k < list.size();k++) ret[k] = list.get(k);\\n        return ret;\\n    }\\n```\\n**What if nums1\\'s size is small compared to nums2\\'s size? Which algorithm is better?**\\nThis one is a bit tricky. Let\\'s say nums1 is K size. Then we should do **binary search** for every element in nums1. Each lookup is O(log N), and if we do K times, we have O(K log N). \\nIf K this is small enough, O(K log N) < O(max(N, M)). Otherwise, we have to use the previous two pointers method.\\nlet\\'s say A = [1, 2, 2, 2, 2, 2, 2, 2, 1], B = [2, 2]. For each element in B, we start a binary search in A. To deal with duplicate entry, once you find an entry, all the duplicate element is around that that index, so you can do linear search scan afterward. \\n\\nTime complexity, O(K(logN) + N). Plus N is worst case scenario which you have to linear scan every element in A. But on average, that shouldn\\'t be the case. so I\\'d say the Time complexity is O(K(logN) + c), c (constant) is number of linear scan you did.\\n\\n**What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?**\\nThis one is open-ended. But Map-Reduce I believe is a good answer.",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\npublic int[] intersect(int[] nums1, int[] nums2) {\\n        HashMap<Integer, Integer> map = new HashMap<>();\\n        for(int i : nums1){\\n            int freq = map.getOrDefault(i, 0);\\n            map.put(i, freq + 1);\\n        }\\n        ArrayList<Integer> list = new ArrayList<>();\\n        for(int i : nums2){\\n            if(map.get(i) != null && map.get(i) > 0){\\n                list.add(i);\\n                map.put(i, map.get(i) - 1);\\n            }\\n        }\\n        int[] ret = new int[list.size()]; \\n        for(int i = 0; i < list.size();i++){\\n            ret[i] = list.get(i);\\n        }\\n        return ret;\\n    }\\n```\n```\\npublic int[] intersect(int[] nums1, int[] nums2) {\\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        int n = nums1.length, m = nums2.length;\\n        int i = 0, j = 0;\\n        List<Integer> list = new ArrayList<>();\\n        while(i < n && j < m){\\n            int a = nums1[i], b= nums2[j];\\n            if(a == b){\\n                list.add(a);\\n                i++;\\n                j++;\\n            }else if(a < b){\\n                i++;\\n            }else{\\n                j++;\\n            }\\n        }\\n        int[] ret = new int[list.size()];\\n        for(int k = 0; k < list.size();k++) ret[k] = list.get(k);\\n        return ret;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 82241,
                "title": "ac-solution-using-java-hashmap",
                "content": "    public class Solution {\\n        public int[] intersect(int[] nums1, int[] nums2) {\\n            HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();\\n            ArrayList<Integer> result = new ArrayList<Integer>();\\n            for(int i = 0; i < nums1.length; i++)\\n            {\\n                if(map.containsKey(nums1[i])) map.put(nums1[i], map.get(nums1[i])+1);\\n                else map.put(nums1[i], 1);\\n            }\\n        \\n            for(int i = 0; i < nums2.length; i++)\\n            {\\n                if(map.containsKey(nums2[i]) && map.get(nums2[i]) > 0)\\n                {\\n                    result.add(nums2[i]);\\n                    map.put(nums2[i], map.get(nums2[i])-1);\\n                }\\n            }\\n        \\n           int[] r = new int[result.size()];\\n           for(int i = 0; i < result.size(); i++)\\n           {\\n               r[i] = result.get(i);\\n           }\\n        \\n           return r;\\n        }\\n    }",
                "solutionTags": [],
                "code": "class Solution {\\n        public int[] intersect(int[] nums1, int[] nums2) {\\n            HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();\\n            ArrayList<Integer> result = new ArrayList<Integer>();\\n            for(int i = 0; i < nums1.length; i++)\\n            {\\n                if(map.containsKey(nums1[i])) map.put(nums1[i], map.get(nums1[i])+1);\\n                else map.put(nums1[i], 1);\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 82269,
                "title": "short-python-c",
                "content": "Python\\n-\\n\\n    def intersect(self, nums1, nums2):\\n        a, b = map(collections.Counter, (nums1, nums2))\\n        return list((a & b).elements())\\n\\nVariations:\\n\\n    def intersect(self, nums1, nums2):\\n        C = collections.Counter\\n        return list((C(nums1) & C(nums2)).elements())\\n        \\n    def intersect(self, nums1, nums2):\\n        return list((collections.Counter(nums1) & collections.Counter(nums2)).elements())\\n\\n---\\n\\nC++\\n-\\n\\n    vector<int> intersect(vector<int>& a, vector<int>& b) {\\n        sort(a.begin(), a.end());\\n        sort(b.begin(), b.end());\\n        a.erase(set_intersection(a.begin(), a.end(), b.begin(), b.end(), a.begin()), a.end());\\n        return a;\\n    }\\n\\nAnother:\\n\\n    vector<int> intersect(vector<int>& a, vector<int>& b) {\\n        unordered_map<int, int> ctr;\\n        for (int i : a)\\n            ctr[i]++;\\n        vector<int> out;\\n        for (int i : b)\\n            if (ctr[i]-- > 0)\\n                out.push_back(i);\\n        return out;\\n    }",
                "solutionTags": [
                    "C++",
                    "Python"
                ],
                "code": "Python\\n-\\n\\n    def intersect(self, nums1, nums2):\\n        a, b = map(collections.Counter, (nums1, nums2))\\n        return list((a & b).elements())\\n\\nVariations:\\n\\n    def intersect(self, nums1, nums2):\\n        C = collections.Counter\\n        return list((C(nums1) & C(nums2)).elements())\\n        \\n    def intersect(self, nums1, nums2):\\n        return list((collections.Counter(nums1) & collections.Counter(nums2)).elements())\\n\\n---\\n\\nC++\\n-\\n\\n    vector<int> intersect(vector<int>& a, vector<int>& b) {\\n        sort(a.begin(), a.end());\\n        sort(b.begin(), b.end());\\n        a.erase(set_intersection(a.begin(), a.end(), b.begin(), b.end(), a.begin()), a.end());\\n        return a;\\n    }\\n\\nAnother:\\n\\n    vector<int> intersect(vector<int>& a, vector<int>& b) {\\n        unordered_map<int, int> ctr;\\n        for (int i : a)\\n            ctr[i]++;\\n        vector<int> out;\\n        for (int i : b)\\n            if (ctr[i]-- > 0)\\n                out.push_back(i);\\n        return out;\\n    }",
                "codeTag": "Python3"
            },
            {
                "id": 2477252,
                "title": "very-easy-100-fully-explained-java-c-python-python3-hashmap-two-pointers",
                "content": "# **Java Solution (Two-Pointers Approach):**\\n```\\n// Runtime: 1 ms, faster than 99.13% of Java online submissions for Intersection of Two Arrays II.\\n// Memory Usage: 42.5 MB, less than 92.71% of Java online submissions for Intersection of Two Arrays II.\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        // Sort both the arrays first...\\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        // Create an array list...\\n        ArrayList<Integer> arr = new ArrayList<Integer>();\\n        // Use two pointers i and j for the two arrays and initialize both with zero.\\n        int i = 0, j = 0;\\n        while(i < nums1.length && j < nums2.length){\\n            // If nums1[i] is less than nums2[j]...\\n            // Leave the smaller element and go to next(greater) element in nums1...\\n            if(nums1[i] < nums2[j]) {\\n                i++;\\n            }\\n            // If nums1[i] is greater than nums2[j]...\\n            // Go to next(greater) element in nums2 array...\\n            else if(nums1[i] > nums2[j]){\\n                j++;\\n            }\\n            // If both the elements intersected...\\n            // Add this element to arr & increment both i and j.\\n            else{\\n                arr.add(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        // Create a output list to store the output...\\n        int[] output = new int[arr.size()];\\n        int k = 0;\\n        while(k < arr.size()){\\n            output[k] = arr.get(k);\\n            k++;\\n        }\\n        return output;\\n    }\\n}\\n```\\n\\n# **C++ Solution (Using Hash map):**\\n```\\n// Runtime: 3 ms, faster than 96.43% of C++ online submissions for Intersection of Two Arrays II.\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        // If the size of nums1 is greater than nums2, swap them...\\n        if(nums1.size() > nums2.size()) {\\n            swap(nums1, nums2);\\n        }\\n        // Create a hashmap to find out the intersection of two arrays...\\n        unordered_map<int,int> map;\\n        // Store the count of each element of one array using the Hash map...\\n        for(auto val: nums1) {\\n            map[val]++;\\n        }\\n        int idx = 0;\\n        // Traverse through the nums2 array....\\n        for(auto val: nums2) {\\n            // For each element in nums2, check if count of that element in nums1 is positive or not...\\n            // If count of nums2[idx] in array nums1 is positive, then add this element(nums2[idx]) in result array...\\n            if(map[val] > 0){\\n                nums1[idx++] = val;\\n                // Decrease the count of this element in Hash map.\\n                --map[val];\\n            }\\n        }\\n        return vector<int>(nums1.begin(), nums1.begin()+idx);\\n    }\\n};\\n```\\n\\n# **Python Solution (Two-Pointers Approach):**\\n```\\n# Runtime: 23 ms, faster than 89.65% of Python online submissions for Intersection of Two Arrays II.\\n# Memory Usage: 11.4 MB, less than 87.45% of Python online submissions for Intersection of Two Arrays II.\\nclass Solution(object):\\n    def intersect(self, nums1, nums2):\\n        # Sort both the arrays first...\\n        sortedArr1 = sorted(nums1)\\n        sortedArr2 = sorted(nums2)\\n        # Use two pointers i and j for the two arrays and initialize both with zero.\\n        i = 0\\n        j = 0\\n        # Create a output list to store the output...\\n        output = []\\n        while i < len(sortedArr1) and j < len(sortedArr2):\\n            # If sortedArr1[i] is less than sortedArr2[j]...\\n            # Leave the smaller element and go to next(greater) element in nums1...\\n            if sortedArr1[i] < sortedArr2[j]:\\n                i += 1\\n            # If sortedArr1[i] is greater than sortedArr2[j]...\\n            # Go to next(greater) element in nums2 array...\\n            elif sortedArr2[j] < sortedArr1[i]:\\n                j += 1\\n            # If both the elements intersected...\\n            # Add this element to output & increment both i and j.\\n            else:\\n                output.append(sortedArr1[i])\\n                i += 1\\n                j += 1\\n        return output       # Return the output array...\\n```\\n                    \\n# **Python3 Solution (Two-Pointers Approach):**\\n```\\n# Runtime: 51 ms, faster than 92.91% of Python3 online submissions for Intersection of Two Arrays II.\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        # Sort both the arrays first...\\n        sortedArr1 = sorted(nums1)\\n        sortedArr2 = sorted(nums2)\\n        # Use two pointers i and j for the two arrays and initialize both with zero.\\n        i = 0\\n        j = 0\\n        # Create a output list to store the output...\\n        output = []\\n        while i < len(sortedArr1) and j < len(sortedArr2):\\n            # If sortedArr1[i] is less than sortedArr2[j]...\\n            # Leave the smaller element and go to next(greater) element in nums1...\\n            if sortedArr1[i] < sortedArr2[j]:\\n                i += 1\\n            # If sortedArr1[i] is greater than sortedArr2[j]...\\n            # Go to next(greater) element in nums2 array...\\n            elif sortedArr2[j] < sortedArr1[i]:\\n                j += 1\\n            # If both the elements intersected...\\n            # Add this element to output & increment both i and j.\\n            else:\\n                output.append(sortedArr1[i])\\n                i += 1\\n                j += 1\\n        return output       # Return the output array...\\n```\\n**I am working hard for you guys...\\nPlease upvote if you found any help with this code...**",
                "solutionTags": [
                    "Java",
                    "Python",
                    "Python3",
                    "C",
                    "Array",
                    "Hash Table",
                    "Two Pointers"
                ],
                "code": "```\\n// Runtime: 1 ms, faster than 99.13% of Java online submissions for Intersection of Two Arrays II.\\n// Memory Usage: 42.5 MB, less than 92.71% of Java online submissions for Intersection of Two Arrays II.\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        // Sort both the arrays first...\\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        // Create an array list...\\n        ArrayList<Integer> arr = new ArrayList<Integer>();\\n        // Use two pointers i and j for the two arrays and initialize both with zero.\\n        int i = 0, j = 0;\\n        while(i < nums1.length && j < nums2.length){\\n            // If nums1[i] is less than nums2[j]...\\n            // Leave the smaller element and go to next(greater) element in nums1...\\n            if(nums1[i] < nums2[j]) {\\n                i++;\\n            }\\n            // If nums1[i] is greater than nums2[j]...\\n            // Go to next(greater) element in nums2 array...\\n            else if(nums1[i] > nums2[j]){\\n                j++;\\n            }\\n            // If both the elements intersected...\\n            // Add this element to arr & increment both i and j.\\n            else{\\n                arr.add(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        // Create a output list to store the output...\\n        int[] output = new int[arr.size()];\\n        int k = 0;\\n        while(k < arr.size()){\\n            output[k] = arr.get(k);\\n            k++;\\n        }\\n        return output;\\n    }\\n}\\n```\n```\\n// Runtime: 3 ms, faster than 96.43% of C++ online submissions for Intersection of Two Arrays II.\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        // If the size of nums1 is greater than nums2, swap them...\\n        if(nums1.size() > nums2.size()) {\\n            swap(nums1, nums2);\\n        }\\n        // Create a hashmap to find out the intersection of two arrays...\\n        unordered_map<int,int> map;\\n        // Store the count of each element of one array using the Hash map...\\n        for(auto val: nums1) {\\n            map[val]++;\\n        }\\n        int idx = 0;\\n        // Traverse through the nums2 array....\\n        for(auto val: nums2) {\\n            // For each element in nums2, check if count of that element in nums1 is positive or not...\\n            // If count of nums2[idx] in array nums1 is positive, then add this element(nums2[idx]) in result array...\\n            if(map[val] > 0){\\n                nums1[idx++] = val;\\n                // Decrease the count of this element in Hash map.\\n                --map[val];\\n            }\\n        }\\n        return vector<int>(nums1.begin(), nums1.begin()+idx);\\n    }\\n};\\n```\n```\\n# Runtime: 23 ms, faster than 89.65% of Python online submissions for Intersection of Two Arrays II.\\n# Memory Usage: 11.4 MB, less than 87.45% of Python online submissions for Intersection of Two Arrays II.\\nclass Solution(object):\\n    def intersect(self, nums1, nums2):\\n        # Sort both the arrays first...\\n        sortedArr1 = sorted(nums1)\\n        sortedArr2 = sorted(nums2)\\n        # Use two pointers i and j for the two arrays and initialize both with zero.\\n        i = 0\\n        j = 0\\n        # Create a output list to store the output...\\n        output = []\\n        while i < len(sortedArr1) and j < len(sortedArr2):\\n            # If sortedArr1[i] is less than sortedArr2[j]...\\n            # Leave the smaller element and go to next(greater) element in nums1...\\n            if sortedArr1[i] < sortedArr2[j]:\\n                i += 1\\n            # If sortedArr1[i] is greater than sortedArr2[j]...\\n            # Go to next(greater) element in nums2 array...\\n            elif sortedArr2[j] < sortedArr1[i]:\\n                j += 1\\n            # If both the elements intersected...\\n            # Add this element to output & increment both i and j.\\n            else:\\n                output.append(sortedArr1[i])\\n                i += 1\\n                j += 1\\n        return output       # Return the output array...\\n```\n```\\n# Runtime: 51 ms, faster than 92.91% of Python3 online submissions for Intersection of Two Arrays II.\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        # Sort both the arrays first...\\n        sortedArr1 = sorted(nums1)\\n        sortedArr2 = sorted(nums2)\\n        # Use two pointers i and j for the two arrays and initialize both with zero.\\n        i = 0\\n        j = 0\\n        # Create a output list to store the output...\\n        output = []\\n        while i < len(sortedArr1) and j < len(sortedArr2):\\n            # If sortedArr1[i] is less than sortedArr2[j]...\\n            # Leave the smaller element and go to next(greater) element in nums1...\\n            if sortedArr1[i] < sortedArr2[j]:\\n                i += 1\\n            # If sortedArr1[i] is greater than sortedArr2[j]...\\n            # Go to next(greater) element in nums2 array...\\n            elif sortedArr2[j] < sortedArr1[i]:\\n                j += 1\\n            # If both the elements intersected...\\n            # Add this element to output & increment both i and j.\\n            else:\\n                output.append(sortedArr1[i])\\n                i += 1\\n                j += 1\\n        return output       # Return the output array...\\n```",
                "codeTag": "Java"
            },
            {
                "id": 954800,
                "title": "java-solution-with-explanation-and-pictures",
                "content": "```\\npublic int[] intersect(int[] nums1, int[] nums2) {\\n\\tArrays.sort(nums1);\\n\\tArrays.sort(nums2);\\n\\tint top = 0;\\n\\tint bottom = 0;\\n\\tList<Integer> h = new ArrayList<>();\\n\\n\\twhile (true){\\n\\t\\tif (top >= nums1.length || bottom >= nums2.length){\\n\\t\\t\\tbreak;\\n\\t\\t}\\n\\t\\tif (nums1[top] == nums2[bottom]){\\n\\t\\t\\th.add(nums1[top]);\\n\\t\\t\\ttop ++;\\n\\t\\t\\tbottom ++;\\n\\t\\t}\\n\\t\\telse if (nums1[top] < nums2[bottom]){\\n\\t\\t\\ttop ++;\\n\\t\\t}\\n\\t\\telse if (nums1[top] > nums2[bottom]){\\n\\t\\t\\tbottom ++;\\n\\t\\t}\\n\\t}\\n\\n\\tint[] g = new int[h.size()];\\n\\tfor (int i = 0; i < h.size(); i++) {\\n\\t\\tg[i] = h.get(i);\\n\\t}\\n\\treturn g;\\n}\\n```\\n\\nAn example on how this works:\\n\\nfirst sort both arrays\\n![image](https://assets.leetcode.com/users/images/c46e7462-f6d8-4c7c-8060-7c247ab0f14e_1606749635.014068.png)\\n\\nThen compare the first two items \\n![image](https://assets.leetcode.com/users/images/8acc63ff-b1ee-4a09-8a1f-9fb5883ef43f_1606751823.8832223.png)\\n\\n\\nSince they are not equal we will have to move one of the pointers, top or bottom. We will move the bottom pointer. The reason we are moving the bottom pointer is `bottom[0] < top[0]`, and this works because both the arrays are sorted.\\n![image](https://assets.leetcode.com/users/images/4b78c1c4-f191-427a-8d4a-e2b6b79817a1_1606750256.1911736.png)\\n\\nSince `top[0] = bottom[1]` we can add the item to the end array. Now we have to incrament the top counter and bottom counter by one.\\n![image](https://assets.leetcode.com/users/images/69b578d7-c8df-4214-b909-ab4e756131c5_1606750591.901871.png)\\n\\n`top[1] != bottom[2]` and `top[1] < bottom[2]` so we add one to the top counter.\\n![image](https://assets.leetcode.com/users/images/3b79be0c-60d2-4e2f-a61b-c20a47232131_1606750855.6892686.png)\\n\\n`top[2] = bottom[2]` so we add the item, `4` to the end array. To end this part we add one to the top counter and bottom counter.\\n![image](https://assets.leetcode.com/users/images/2704966c-083e-464a-a0b5-b4c414bcb86c_1606751064.5167634.png)\\n\\n`top[3] != bottom[3]` and `top[3] > bottom[3]` so we add one to the bottom counter.\\n![image](https://assets.leetcode.com/users/images/8505773a-54e3-4ccb-99f9-0b0f61658071_1606751215.7158778.png)\\n\\n`top[3] = bottom[4]` so we add the item to the end array. Now we add one to each counter, bottom and top.\\n![image](https://assets.leetcode.com/users/images/31fb6b6c-c49b-4dbc-bf5c-a61555686a7e_1606751363.7848818.png)\\n\\n`top[4] != bottom[5]` and `top[4] < bottom[5]` so we add one to the top counter.\\n![image](https://assets.leetcode.com/users/images/b3b0bd9d-cad1-4bcb-852f-b5f0a25a22c6_1606751516.2833507.png)\\n\\n`top[5] = bottom[5]` so we add the item, `7` to the end array. Now we add one to the top and bottom counter.\\n![image](https://assets.leetcode.com/users/images/925f8f4a-8496-4bf3-ae55-254f06601a6e_1606751644.8628895.png)\\n\\nBut now the only problem is on the top counter we have run out of items, because of this we break out of the loop and return the value.\\n\\n\\n\\n",
                "solutionTags": [
                    "Java",
                    "Array",
                    "Sorting"
                ],
                "code": "```\\npublic int[] intersect(int[] nums1, int[] nums2) {\\n\\tArrays.sort(nums1);\\n\\tArrays.sort(nums2);\\n\\tint top = 0;\\n\\tint bottom = 0;\\n\\tList<Integer> h = new ArrayList<>();\\n\\n\\twhile (true){\\n\\t\\tif (top >= nums1.length || bottom >= nums2.length){\\n\\t\\t\\tbreak;\\n\\t\\t}\\n\\t\\tif (nums1[top] == nums2[bottom]){\\n\\t\\t\\th.add(nums1[top]);\\n\\t\\t\\ttop ++;\\n\\t\\t\\tbottom ++;\\n\\t\\t}\\n\\t\\telse if (nums1[top] < nums2[bottom]){\\n\\t\\t\\ttop ++;\\n\\t\\t}\\n\\t\\telse if (nums1[top] > nums2[bottom]){\\n\\t\\t\\tbottom ++;\\n\\t\\t}\\n\\t}\\n\\n\\tint[] g = new int[h.size()];\\n\\tfor (int i = 0; i < h.size(); i++) {\\n\\t\\tg[i] = h.get(i);\\n\\t}\\n\\treturn g;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 82263,
                "title": "c-hash-table-solution-and-sort-two-pointers-solution-with-time-and-space-complexity",
                "content": "m: nums1.size     n: nums2.size\\n\\nHash table solution: \\nTime: O(m + n)   Space: O(m + n)\\n\\n    class Solution {\\n    public:\\n        vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n            unordered_map<int, int> dict;\\n            vector<int> res;\\n            for(int i = 0; i < (int)nums1.size(); i++) dict[nums1[i]]++;\\n            for(int i = 0; i < (int)nums2.size(); i++)\\n                if(--dict[nums2[i]] >= 0) res.push_back(nums2[i]);\\n            return res;\\n        }\\n    };\\n\\nHash table solution2:\\nTime: O(m + n)    Space: O(m)\\n\\n    class Solution {\\n    public:\\n        vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n            unordered_map<int, int> dict;\\n            vector<int> res;\\n            for(int i = 0; i < (int)nums1.size(); i++) dict[nums1[i]]++;\\n            for(int i = 0; i < (int)nums2.size(); i++)\\n                if(dict.find(nums2[i]) != dict.end() && --dict[nums2[i]] >= 0) res.push_back(nums2[i]);\\n            return res;\\n        }\\n    };\\n\\nSort and two pointers Solution:\\nTime: O(max(m, n) log(max(m, n)))   Space: O(m + n)\\n\\n    class Solution {\\n    public:\\n        vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n            sort(nums1.begin(), nums1.end());\\n            sort(nums2.begin(), nums2.end());\\n            int n1 = (int)nums1.size(), n2 = (int)nums2.size();\\n            int i1 = 0, i2 = 0;\\n            vector<int> res;\\n            while(i1 < n1 && i2 < n2){\\n                if(nums1[i1] == nums2[i2]) {\\n                    res.push_back(nums1[i1]);\\n                    i1++;\\n                    i2++;\\n                }\\n                else if(nums1[i1] > nums2[i2]){\\n                    i2++;\\n                }\\n                else{\\n                    i1++;\\n                }\\n            }\\n            return res;\\n        }\\n    };",
                "solutionTags": [
                    "C++",
                    "Two Pointers"
                ],
                "code": "class Solution {\\n    public:\\n        vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n            unordered_map<int, int> dict;\\n            vector<int> res;\\n            for(int i = 0; i < (int)nums1.size(); i++) dict[nums1[i]]++;\\n            for(int i = 0; i < (int)nums2.size(); i++)\\n                if(--dict[nums2[i]] >= 0) res.push_back(nums2[i]);\\n            return res;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 242050,
                "title": "javascript-solution-hashmap",
                "content": "```javascript\\nvar intersect = function(nums1, nums2) {\\n    const map = new Map();\\n    for (const n of nums1) {\\n        if (map.has(n)) {\\n            map.set(n, map.get(n) + 1);\\n        } else {\\n            map.set(n, 1);\\n        }\\n    }\\n    const result = [];\\n    for (const n of nums2) {\\n        if (map.has(n) && map.get(n) > 0) {\\n            result.push(n);\\n            map.set(n, map.get(n) - 1);\\n        }\\n    }\\n    return result;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```javascript\\nvar intersect = function(nums1, nums2) {\\n    const map = new Map();\\n    for (const n of nums1) {\\n        if (map.has(n)) {\\n            map.set(n, map.get(n) + 1);\\n        } else {\\n            map.set(n, 1);\\n        }\\n    }\\n    const result = [];\\n    for (const n of nums2) {\\n        if (map.has(n) && map.get(n) > 0) {\\n            result.push(n);\\n            map.set(n, map.get(n) - 1);\\n        }\\n    }\\n    return result;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 82257,
                "title": "swift-two-pointers-solution-with-illustration",
                "content": "```\\nfunc intersect(_ nums1: [Int], _ nums2: [Int]) -> [Int] {\\n    var nums1 = nums1.sorted()\\n    var nums2 = nums2.sorted()\\n    var res = [Int]()\\n    var i = 0, j = 0\\n    \\n    while i < nums1.count && j < nums2.count {\\n        if nums1[i] == nums2[j] {\\n            res.append(nums1[i])\\n            i += 1 ; j += 1\\n        } else if nums1[i] < nums2[j] {\\n            i += 1\\n        } else {\\n            j += 1\\n        }\\n    }\\n    return res\\n}\\n```\\n![](https://assets.leetcode.com/static_assets/posts/intersect.gif)",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\nfunc intersect(_ nums1: [Int], _ nums2: [Int]) -> [Int] {\\n    var nums1 = nums1.sorted()\\n    var nums2 = nums2.sorted()\\n    var res = [Int]()\\n    var i = 0, j = 0\\n    \\n    while i < nums1.count && j < nums2.count {\\n        if nums1[i] == nums2[j] {\\n            res.append(nums1[i])\\n            i += 1 ; j += 1\\n        } else if nums1[i] < nums2[j] {\\n            i += 1\\n        } else {\\n            j += 1\\n        }\\n    }\\n    return res\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 82271,
                "title": "solution-with-three-follow-ups",
                "content": "Compared to 349. Intersection of Two Arrays, which uses a hash to flag if element exists, we turn to use a hash to count how many elements exist.\\n\\n```ruby\\n  def intersect(nums1, nums2)\\n    hash = nums1.reduce(Hash.new(0)) {|ha, num| ha[num] += 1; ha }\\n\\n    nums2.reduce([]) do |ar, num|\\n      if hash[num] > 0\\n        hash[num] -= 1\\n        ar << num\\n      else\\n        ar\\n      end\\n    end\\n  end\\n```\\n\\n- - -\\n\\n*Q. What if the given array is already sorted? How would you optimize your algorithm?*\\n\\nIf both arrays are sorted, I would use **two pointers** to iterate, which somehow resembles the `merge` process in merge sort.\\n\\n*Q. What if nums1's size is small compared to nums2's size? Which algorithm is better?*\\n\\nSuppose lengths of two arrays are `N` and `M`, the time complexity of my solution is `O(N+M)` and the space complexity if `O(N)` considering the hash. So it's better to use the smaller array to construct the counter hash. \\n\\nWell, as we are calculating the intersection of two arrays, the order of array doesn't matter. We are totally free to swap to arrays.\\n\\n*Q. What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?*\\n\\nDivide and conquer. Repeat the process frequently: Slice `nums2` to fit into memory, process (calculate intersections), and write partial results to memory.",
                "solutionTags": [
                    "Ruby"
                ],
                "code": "```ruby\\n  def intersect(nums1, nums2)\\n    hash = nums1.reduce(Hash.new(0)) {|ha, num| ha[num] += 1; ha }\\n\\n    nums2.reduce([]) do |ar, num|\\n      if hash[num] > 0\\n        hash[num] -= 1\\n        ar << num\\n      else\\n        ar\\n      end\\n    end\\n  end\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 82373,
                "title": "a-dictionary-based-solution-in-python",
                "content": "class Solution(object):\\n\\n    def intersect(self, nums1, nums2):\\n        \"\"\"\\n        :type nums1: List[int]\\n        :type nums2: List[int]\\n        :rtype: List[int]\\n        \"\"\"\\n        dict1 = dict()\\n        for i in nums1:\\n            if i not in dict1:\\n                dict1[i] = 1\\n            else:\\n                dict1[i] += 1\\n        ret = []\\n        for i in nums2:\\n            if i in dict1 and dict1[i]>0:\\n                ret.append(i)\\n                dict1[i] -= 1\\n        return ret",
                "solutionTags": [],
                "code": "class Solution(object):\\n\\n    def intersect(self, nums1, nums2):\\n        \"\"\"\\n        :type nums1: List[int]\\n        :type nums2: List[int]\\n        :rtype: List[int]\\n        \"\"\"\\n        dict1 = dict()\\n        for i in nums1:\\n            if i not in dict1:\\n                dict1[i] = 1\\n            else:\\n                dict1[i] += 1\\n        ret = []\\n        for i in nums2:\\n            if i in dict1 and dict1[i]>0:\\n                ret.append(i)\\n                dict1[i] -= 1\\n        return ret",
                "codeTag": "Java"
            },
            {
                "id": 82240,
                "title": "2-lines-in-python",
                "content": "    from collections import Counter\\n    \\n    class Solution(object):\\n        def intersect(self, nums1, nums2):\\n            c1, c2 = Counter(nums1), Counter(nums2)\\n            return sum([[num] * min(c1[num], c2[num]) for num in c1 & c2], [])",
                "solutionTags": [],
                "code": "    from collections import Counter\\n    \\n    class Solution(object):\\n        def intersect(self, nums1, nums2):\\n            c1, c2 = Counter(nums1), Counter(nums2)\\n            return sum([[num] * min(c1[num], c2[num]) for num in c1 & c2], [])",
                "codeTag": "Java"
            },
            {
                "id": 3001494,
                "title": "simple-java-beats-100-easy-to-understand",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nFirst, we need to understand what is **intersection**? In this problem, it simply means **common elements** between the given two arrays.\\nThe problem can be solved in many ways but we have to find the **efficient** solution.\\nWe can use a Hash-Map and an Arraylist to optimize code. Let\\'s look at some examples.\\n\\n    Example1: nums1 = {1,2,3} and nums2 = {4,5,6}\\n    Since, there are no common elements,\\n    We have to return en empty array in this case, {}.\\n\\n    Example2: nums1 = {1,1,2,3} and nums2 = {1,1,3,4}\\n    Since, 1 appear two times and 3 appear 1 time.\\n    So, we will return {1,1,3}.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\nWe can follow the steps below to better understand the solution:\\n\\n    1. Create a Hash-Map to store the elements of nums1.\\n    2. Create an Array-List to store the common elements.\\n    3. Traverse nums1 to add elements in HashMap.\\n    4. Traverse nums2 to check for common elements and add in ArrayList.\\nTraverse the ArrayList, to store the elements into an array. (Since, we have to return an array in this function).\\n\\nFollow the code below to understand the solution.\\n\\n            **If this solution helped you, give it an up-vote to help others** \\n\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n\\n    HashMap<Integer, Integer> map = new HashMap<>(); // It will store elements of nums1.\\n    ArrayList<Integer> list = new ArrayList<>(); // It will store common elements of nums1 and nums2.\\n\\n        //declare i so that it can be used further. (saves space)\\n        int i; \\n        \\n        //traverse the array nums1, store element in Key and store its frequency in Value.        \\n        for(i = 0; i < nums1.length; i++)\\n        {\\n            // If map doesn\\'t contain nums1[i] initially, the default value 0+1.\\n            // If map contain nums1[i] then increase its freq by 1.\\n            map.put(nums1[i], map.getOrDefault(nums1[i], 0)+1);\\n        }\\n\\n        //traverse the array nums2 and check for common elements.\\n        for(i = 0; i < nums2.length; i++)\\n        {\\n            // We need to check two conditions:\\n            // 1. map should contain nums2[i] element.\\n            // 2. freq of nums2[i] element must be greater than 1.\\n            if(map.containsKey(nums2[i]) && map.get(nums2[i]) > 0)\\n            {                \\n                list.add(nums2[i]);                         // add it to arraylist.\\n                map.put(nums2[i], map.get(nums2[i])-1);     // decrease its freq in map.\\n            }\\n        }\\n        // create a new array of list size.\\n        int [] arr = new int[list.size()];\\n\\n        \\n        // traverse the list and add elements in the array.\\n        for(i = 0; i < list.size(); i++)\\n        {\\n            arr[i] = list.get(i);\\n        }\\n        \\n        // finally, return the resultant array.\\n        return arr;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n\\n    HashMap<Integer, Integer> map = new HashMap<>(); // It will store elements of nums1.\\n    ArrayList<Integer> list = new ArrayList<>(); // It will store common elements of nums1 and nums2.\\n\\n        //declare i so that it can be used further. (saves space)\\n        int i; \\n        \\n        //traverse the array nums1, store element in Key and store its frequency in Value.        \\n        for(i = 0; i < nums1.length; i++)\\n        {\\n            // If map doesn\\'t contain nums1[i] initially, the default value 0+1.\\n            // If map contain nums1[i] then increase its freq by 1.\\n            map.put(nums1[i], map.getOrDefault(nums1[i], 0)+1);\\n        }\\n\\n        //traverse the array nums2 and check for common elements.\\n        for(i = 0; i < nums2.length; i++)\\n        {\\n            // We need to check two conditions:\\n            // 1. map should contain nums2[i] element.\\n            // 2. freq of nums2[i] element must be greater than 1.\\n            if(map.containsKey(nums2[i]) && map.get(nums2[i]) > 0)\\n            {                \\n                list.add(nums2[i]);                         // add it to arraylist.\\n                map.put(nums2[i], map.get(nums2[i])-1);     // decrease its freq in map.\\n            }\\n        }\\n        // create a new array of list size.\\n        int [] arr = new int[list.size()];\\n\\n        \\n        // traverse the list and add elements in the array.\\n        for(i = 0; i < list.size(); i++)\\n        {\\n            arr[i] = list.get(i);\\n        }\\n        \\n        // finally, return the resultant array.\\n        return arr;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3344284,
                "title": "100-beats-java-solutions-clean-and-easy-to-understand-code-look-at-once",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n# *BEST approach its reduced space complexity*\\n\\n# Complexity\\n- Time complexity: O(nlogn)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        int l1 = nums1.length;\\n        int l2 = nums2.length;\\n        int i = 0, j = 0, k = 0;\\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        while( i < l1 && j < l2)\\n        {\\n            if(nums1[i] < nums2[j])\\n            {\\n                i++;\\n            }\\n            else if(nums1[i] > nums2[j])\\n            {\\n                j++;\\n            }\\n            else\\n            {\\n                nums1[k++] = nums1[i++];\\n                j++;\\n            }\\n        }\\n        return Arrays.copyOfRange(nums1,0,k);\\n    }\\n}\\n```\\nplease upvote this for better solution of other questions\\n![download.jfif](https://assets.leetcode.com/users/images/074ebb73-72ec-409b-a062-d5cbce8e6823_1679842441.4871864.jpeg)\\n\\n",
                "solutionTags": [
                    "Java",
                    "Two Pointers",
                    "Binary Search",
                    "Sorting"
                ],
                "code": "```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        int l1 = nums1.length;\\n        int l2 = nums2.length;\\n        int i = 0, j = 0, k = 0;\\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        while( i < l1 && j < l2)\\n        {\\n            if(nums1[i] < nums2[j])\\n            {\\n                i++;\\n            }\\n            else if(nums1[i] > nums2[j])\\n            {\\n                j++;\\n            }\\n            else\\n            {\\n                nums1[k++] = nums1[i++];\\n                j++;\\n            }\\n        }\\n        return Arrays.copyOfRange(nums1,0,k);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 82281,
                "title": "two-c-solutions-hashtable-sort-binary-search-time-space-complexity-analyzed",
                "content": "Let **m**=nums1.size(), and **n**=nums2.size()\\n\\n**Solution 1: hashtable** (using unordered_map).\\n\\n - time complexity: max(O(m), O(n))\\n - space complexity: choose one O(m) or O(n)   <--- So choose the\\n   smaller one if you can\\n\\n\\n----------\\n\\n\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        if(nums1.size() > nums2.size()) return intersect(nums2, nums1);\\n        vector<int> ret;\\n        unordered_map<int,int> map1;\\n        for(int num:nums1) map1[num]++;\\n        for(int num:nums2) {\\n            if(map1.find(num)!=map1.end() && map1[num]>0) {\\n                ret.push_back(num);\\n                map1[num]--;\\n            }\\n        }\\n        return ret;\\n    }\\n\\n\\n**Solution 2: sort + binary search**\\n\\n - time complexity: max(O(mlgm), O(nlgn), **O(mlgn)**)  or max(O(mlgm),\\n   O(nlgn), **O(nlgm)**)\\n - O(mlgm) <-- sort first array\\n - O(nlgn) <--- sort second array\\n - O(mlgn) <--- for each element in nums1, do binary search in nums2\\n - O(nlgm) <--- for each element in nums2, do binary search in nums1\\n - space complexity: depends on the space complexity used in your\\n   sorting algorithm, bounded by max(O(m), O(n))\\n\\n----------\\n\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ret;\\n        if(nums1.empty() || nums2.empty()) return ret;\\n        sort(nums1.begin(), nums1.end());\\n        sort(nums2.begin(), nums2.end());\\n        int j=0;\\n        for(int i=0; i<nums1.size(); ) {\\n            int index = lower_bound(nums2, nums1[i]);\\n            int count2 = 0;\\n            while(index<nums2.size() && nums2[index]==nums1[i]) {\\n                count2++; \\n                index++;\\n            }\\n            int count1 = 0;\\n            while(nums1[j]==nums1[i]) {\\n                count1++;\\n                j++;\\n            }\\n            ret.insert(ret.end(),min(count1,count2),nums1[i]);\\n            i=j;\\n        } \\n        return ret;\\n    }\\n\\n    int lower_bound(const vector<int>& nums, int target) {\\n        int l=0, r=nums.size()-1;\\n        while(l<r) {\\n            int m=l+(r-l)/2;\\n            if(nums[m]<target) {l=m+1;}\\n            else {r=m;}\\n        }\\n        return r;\\n    }\\n\\n\\n----------\\n\\nSo if two arrays are already sorted, and say m is much smaller than n, \\nwe should choose the algorithm that for each element \\nin nums1, do binary search in nums2, \\nso that the complexity is O(mlgn). \\nIn this case, if memory is limited and nums2 is stored \\nin disk, partition it and send portions of nums2 piece \\nby piece. keep a pointer for nums1 indicating the\\ncurrent position, and it should be working fine~",
                "solutionTags": [
                    "Hash Table",
                    "Sorting",
                    "Binary Tree"
                ],
                "code": "Let **m**=nums1.size(), and **n**=nums2.size()\\n\\n**Solution 1: hashtable** (using unordered_map).\\n\\n - time complexity: max(O(m), O(n))\\n - space complexity: choose one O(m) or O(n)   <--- So choose the\\n   smaller one if you can\\n\\n\\n----------\\n\\n\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        if(nums1.size() > nums2.size()) return intersect(nums2, nums1);\\n        vector<int> ret;\\n        unordered_map<int,int> map1;\\n        for(int num:nums1) map1[num]++;\\n        for(int num:nums2) {\\n            if(map1.find(num)!=map1.end() && map1[num]>0) {\\n                ret.push_back(num);\\n                map1[num]--;\\n            }\\n        }\\n        return ret;\\n    }\\n\\n\\n**Solution 2: sort + binary search**\\n\\n - time complexity: max(O(mlgm), O(nlgn), **O(mlgn)**)  or max(O(mlgm),\\n   O(nlgn), **O(nlgm)**)\\n - O(mlgm) <-- sort first array\\n - O(nlgn) <--- sort second array\\n - O(mlgn) <--- for each element in nums1, do binary search in nums2\\n - O(nlgm) <--- for each element in nums2, do binary search in nums1\\n - space complexity: depends on the space complexity used in your\\n   sorting algorithm, bounded by max(O(m), O(n))\\n\\n----------\\n\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ret;\\n        if(nums1.empty() || nums2.empty()) return ret;\\n        sort(nums1.begin(), nums1.end());\\n        sort(nums2.begin(), nums2.end());\\n        int j=0;\\n        for(int i=0; i<nums1.size(); ) {\\n            int index = lower_bound(nums2, nums1[i]);\\n            int count2 = 0;\\n            while(index<nums2.size() && nums2[index]==nums1[i]) {\\n                count2++; \\n                index++;\\n            }\\n            int count1 = 0;\\n            while(nums1[j]==nums1[i]) {\\n                count1++;\\n                j++;\\n            }\\n            ret.insert(ret.end(),min(count1,count2),nums1[i]);\\n            i=j;\\n        } \\n        return ret;\\n    }\\n\\n    int lower_bound(const vector<int>& nums, int target) {\\n        int l=0, r=nums.size()-1;\\n        while(l<r) {\\n            int m=l+(r-l)/2;\\n            if(nums[m]<target) {l=m+1;}\\n            else {r=m;}\\n        }\\n        return r;\\n    }\\n\\n\\n----------\\n\\nSo if two arrays are already sorted, and say m is much smaller than n, \\nwe should choose the algorithm that for each element \\nin nums1, do binary search in nums2, \\nso that the complexity is O(mlgn). \\nIn this case, if memory is limited and nums2 is stored \\nin disk, partition it and send portions of nums2 piece \\nby piece. keep a pointer for nums1 indicating the\\ncurrent position, and it should be working fine~",
                "codeTag": "Unknown"
            },
            {
                "id": 82238,
                "title": "4ms-java-solution",
                "content": "            Arrays.sort(nums1);\\n            Arrays.sort(nums2);\\n            int pnt1 = 0;\\n            int pnt2 = 0;\\n            ArrayList<Integer> myList = new ArrayList<Integer>();\\n            while((pnt1 < nums1.length) &&(pnt2< nums2.length)){\\n                if(nums1[pnt1]<nums2[pnt2]){\\n                    pnt1++;\\n                }\\n                else{\\n                    if(nums1[pnt1]>nums2[pnt2]){\\n                        pnt2++;\\n                    }\\n                    else{\\n                        myList.add(nums1[pnt1]);\\n                        pnt1++;\\n                        pnt2++;\\n                    }\\n                }\\n            }\\n            int[] res = new int[myList.size()];\\n            for(int i = 0; i<res.length; i++){\\n                res[i] = (Integer)myList.get(i);\\n            }\\n            return res;",
                "solutionTags": [],
                "code": "            Arrays.sort(nums1);\\n            Arrays.sort(nums2);\\n            int pnt1 = 0;\\n            int pnt2 = 0;\\n            ArrayList<Integer> myList = new ArrayList<Integer>();\\n            while((pnt1 < nums1.length) &&(pnt2< nums2.length)){\\n                if(nums1[pnt1]<nums2[pnt2]){\\n                    pnt1++;\\n                }\\n                else{\\n                    if(nums1[pnt1]>nums2[pnt2]){\\n                        pnt2++;\\n                    }\\n                    else{\\n                        myList.add(nums1[pnt1]);\\n                        pnt1++;\\n                        pnt2++;\\n                    }\\n                }\\n            }\\n            int[] res = new int[myList.size()];\\n            for(int i = 0; i<res.length; i++){\\n                res[i] = (Integer)myList.get(i);\\n            }\\n            return res;",
                "codeTag": "Unknown"
            },
            {
                "id": 82319,
                "title": "javascript-solution-with-reduce-and-filter",
                "content": "```javascript\\nvar intersect = function(nums1, nums2) {\\n    // track how often each number occurs in first list\\n    var store = nums1.reduce(function(map, n) {\\n        map[n] = (map[n] + 1) || 1;\\n        \\n        return map;\\n    }, {});\\n    \\n    // filter out numbers from second list based on\\n    // how often they occurred in the first list\\n    return nums2.filter(function(n) {\\n        if (store[n]) {\\n            store[n]--;\\n            \\n            return true;\\n        } else {\\n            return false;\\n        }\\n    });\\n};\\n```",
                "solutionTags": [],
                "code": "```javascript\\nvar intersect = function(nums1, nums2) {\\n    // track how often each number occurs in first list\\n    var store = nums1.reduce(function(map, n) {\\n        map[n] = (map[n] + 1) || 1;\\n        \\n        return map;\\n    }, {});\\n    \\n    // filter out numbers from second list based on\\n    // how often they occurred in the first list\\n    return nums2.filter(function(n) {\\n        if (store[n]) {\\n            store[n]--;\\n            \\n            return true;\\n        } else {\\n            return false;\\n        }\\n    });\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1175501,
                "title": "simple-easy-c-hashmap-solution",
                "content": "**AN UPVOTE WOULD BE HIGHLY APPRECIATED !!!**\\n\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        int n1 = nums1.size();\\n        int n2 = nums2.size();\\n        \\n        unordered_map<int, int> hash;\\n        \\n        vector<int> ans;\\n        \\n        for(int i=0; i<n1; i++) {\\n            hash[nums1[i]]++;\\n        }\\n        \\n        for(int i=0; i<n2; i++) {\\n            if(--hash[nums2[i]] >= 0) {\\n                ans.push_back(nums2[i]);\\n            }\\n        }\\n        \\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        int n1 = nums1.size();\\n        int n2 = nums2.size();\\n        \\n        unordered_map<int, int> hash;\\n        \\n        vector<int> ans;\\n        \\n        for(int i=0; i<n1; i++) {\\n            hash[nums1[i]]++;\\n        }\\n        \\n        for(int i=0; i<n2; i++) {\\n            if(--hash[nums2[i]] >= 0) {\\n                ans.push_back(nums2[i]);\\n            }\\n        }\\n        \\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1231807,
                "title": "easy-two-pointer-method-python",
                "content": "```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        \\n        nums1.sort()\\n        nums2.sort()\\n        \\n        \\n        one=0\\n        two=0\\n        \\n        ans=[]\\n        \\n        while one < len(nums1) and two < len(nums2):\\n            \\n            if nums1[one] < nums2[two]:\\n                one+=1\\n            elif nums2[two] < nums1[one]:\\n                two+=1\\n            else:\\n                \\n                ans.append(nums1[one])\\n                one+=1\\n                two+=1\\n        return ans\\n```\\n\\nif you like do upvote",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        \\n        nums1.sort()\\n        nums2.sort()\\n        \\n        \\n        one=0\\n        two=0\\n        \\n        ans=[]\\n        \\n        while one < len(nums1) and two < len(nums2):\\n            \\n            if nums1[one] < nums2[two]:\\n                one+=1\\n            elif nums2[two] < nums1[one]:\\n                two+=1\\n            else:\\n                \\n                ans.append(nums1[one])\\n                one+=1\\n                two+=1\\n        return ans\\n```",
                "codeTag": "Java"
            },
            {
                "id": 82405,
                "title": "simple-java-solution",
                "content": "    public class Solution {\\n        public int[] intersect(int[] nums1, int[] nums2) {\\n            if(nums1.length==0)\\n                return nums1;\\n            if(nums2.length==0)\\n                return nums2;\\n            Arrays.sort(nums1);\\n            Arrays.sort(nums2);\\n            int i=0,j=0,k=0;\\n            while(i<nums1.length && j<nums2.length){\\n                if(nums1[i]<nums2[j] )\\n                    i++;\\n                else if(nums2[j]<nums1[i])\\n                    j++;\\n                else if(nums1[i]==nums2[j]){\\n                    nums1[k++]=nums1[i];\\n                    i++;            \\n                    j++;\\n                }\\n            }\\n            return Arrays.copyOfRange(nums1, 0, k);\\n        }\\n    }",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n        public int[] intersect(int[] nums1, int[] nums2) {\\n            if(nums1.length==0)\\n                return nums1;\\n            if(nums2.length==0)\\n                return nums2;\\n            Arrays.sort(nums1);\\n            Arrays.sort(nums2);\\n            int i=0,j=0,k=0;\\n            while(i<nums1.length && j<nums2.length){\\n                if(nums1[i]<nums2[j] )\\n                    i++;\\n                else if(nums2[j]<nums1[i])\\n                    j++;\\n                else if(nums1[i]==nums2[j]){\\n                    nums1[k++]=nums1[i];\\n                    i++;            \\n                    j++;\\n                }",
                "codeTag": "Java"
            },
            {
                "id": 1628033,
                "title": "2-easy-java-solutions-100-faster",
                "content": "**Upvote if you Got It** \\uD83D\\uDE42\\n\\n**Code 1 -> O(nlogn) time without extra space**\\n\\nclass Solution {\\n\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        int i=0,j=0,k=0;\\n        while(i<nums1.length && j<nums2.length){\\n            if(nums1[i]==nums2[j]){\\n                nums1[k++] = nums1[i];\\n                i++;j++;\\n            }\\n            else if(nums1[i]>nums2[j])\\n                j++;\\n            else\\n                i++;\\n        }\\n        return Arrays.copyOfRange(nums1,0,k);\\n    }\\n}\\n\\n**Code 1 -> O(n) time and extra space 100% faster** \\nclass Solution {\\n\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        int map[] = new int[1001];\\n        int res[] = new int[1001];\\n        int count = 0;\\n        for(int i:nums1)\\n            map[i]++;\\n        for(int i:nums2){\\n            if(map[i]>0){\\n                res[count++]=i;\\n                map[i]--;\\n            }\\n        }\\n        return Arrays.copyOfRange(res,0,count);\\n    }\\n}",
                "solutionTags": [
                    "Java",
                    "Two Pointers"
                ],
                "code": "class Solution {\\n\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        int i=0,j=0,k=0;\\n        while(i<nums1.length && j<nums2.length){\\n            if(nums1[i]==nums2[j]){\\n                nums1[k++] = nums1[i];\\n                i++;j++;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 1468526,
                "title": "c-simple-and-easy-solution-0-ms-faster-than-100",
                "content": "**Idea:**\\nWe use an `unordered_map` to count the frequency of each number in `nums1`.\\nThen, while iterating `nums2`, we count how many numbers we have in common.\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int, int> freq;\\n        vector<int> res;\\n        \\n        for (auto num : nums1) freq[num]++;\\n        \\n        for (auto num : nums2) {\\n            if (freq[num]) {\\n                res.push_back(num);\\n                freq[num]--;\\n            }\\n        }\\n        \\n        return res;\\n    }\\n};\\n```\\n**Like it? please upvote!**",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int, int> freq;\\n        vector<int> res;\\n        \\n        for (auto num : nums1) freq[num]++;\\n        \\n        for (auto num : nums2) {\\n            if (freq[num]) {\\n                res.push_back(num);\\n                freq[num]--;\\n            }\\n        }\\n        \\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1468288,
                "title": "python-oneliner-follow-up-explained",
                "content": "Similar to problem **0349**, but here we can use hash-table with number of occurrences or in python we can use `Counter` function.  The idea is to use intersection of counters, using `&` symbol and then just take each symbol with correct frequency. Then we use `chain(*)` to create list.\\n\\n#### Complexity\\nIt is `O(n + m)` for time and space where `n` and `m` are sizes of `nums` and `nums2`.\\n\\n#### Code\\n```python\\nclass Solution:\\n    def intersect(self, nums1, nums2):\\n        return chain(*[[i]*j for i, j in (Counter(nums1) & Counter(nums2)).items()])\\n```\\n\\n#### Follow-up\\nIf our data is sorted, we can use two pointers approach, complexity will be `O(m+n)` and with additional `O(1)` memory, if we do not consider answer as memory. If one of arrays is much bigger than another, we can use binary search with complexity `O(n log m)`. (note, that BS is quite tricky here, because we need to handle duplicates, we need to find the left-most matching number. Next time we perform binary search, the low should start from previously found index + 1). If `nums2` is stored on disk, then we can put `nums1` into hash table and use chunks of `nums1`. If `nums1` is also big, we need to sort them, using external sort and use two pointers.\\n\\nIf you have any questions, feel free to ask. If you like solution and explanations, please **Upvote!**\\n",
                "solutionTags": [],
                "code": "```python\\nclass Solution:\\n    def intersect(self, nums1, nums2):\\n        return chain(*[[i]*j for i, j in (Counter(nums1) & Counter(nums2)).items()])\\n```",
                "codeTag": "Java"
            },
            {
                "id": 428034,
                "title": "python-easy-to-read-99-5-time-100-space",
                "content": "Only 4 small tricks:\\n1. Use [collections.Counter ](https://docs.python.org/3.8/library/collections.html#collections.Counter).\\n2. Use the fact that ```dict1.keys() & dict2.keys()``` returns the keys common to dict1 and dict2\\n3. Use the fact that ```[x] * n``` gives an array ```[x, x, ..., x]``` of length n\\n4. Use the ```extend``` method of lists\\n\\n```\\nimport collections\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:           \\n        c1 = collections.Counter(nums1)\\n        c2 = collections.Counter(nums2)\\n        output = []\\n        for key in c1.keys() & c2.keys():\\n            output.extend([key]*min(c1[key], c2[key]))\\n        \\n        return output\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```dict1.keys() & dict2.keys()```\n```[x] * n```\n```[x, x, ..., x]```\n```extend```\n```\\nimport collections\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:           \\n        c1 = collections.Counter(nums1)\\n        c2 = collections.Counter(nums2)\\n        output = []\\n        for key in c1.keys() & c2.keys():\\n            output.extend([key]*min(c1[key], c2[key]))\\n        \\n        return output\\n```",
                "codeTag": "Java"
            },
            {
                "id": 310695,
                "title": "javascript-solution-beat-99-64-speed-and-95-memory-easy-understanding",
                "content": "```\\nvar intersect = function(nums1, nums2) {\\n    obj = {};\\n    result = [];\\n    for(let i of nums1){\\n        obj[i] = obj[i] ? obj[i]+1 : 1\\n    }\\n    for(let i of nums2){\\n        if(obj[i]){\\n            obj[i]--\\n            result.push(i)\\n        }\\n    }\\n    return result\\n};\\n\\n//Even Better Solution with less memory usage\\n\\nvar intersect = function(nums1, nums2) {\\n    let a1 = nums1.sort((a,b)=> a-b);\\n    let a2 = nums2.sort((a,b)=> a-b);\\n    let result = [];\\n    while(a1.length && a2.length){\\n        if(a1[0] === a2[0]){\\n            result.push(a1.shift());\\n            a2.shift();\\n        } \\n        else if(a1[0] > a2[0]){\\n            a2.shift();\\n        }else{\\n            a1.shift();\\n        }\\n    }\\n    return result\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar intersect = function(nums1, nums2) {\\n    obj = {};\\n    result = [];\\n    for(let i of nums1){\\n        obj[i] = obj[i] ? obj[i]+1 : 1\\n    }\\n    for(let i of nums2){\\n        if(obj[i]){\\n            obj[i]--\\n            result.push(i)\\n        }\\n    }\\n    return result\\n};\\n\\n//Even Better Solution with less memory usage\\n\\nvar intersect = function(nums1, nums2) {\\n    let a1 = nums1.sort((a,b)=> a-b);\\n    let a2 = nums2.sort((a,b)=> a-b);\\n    let result = [];\\n    while(a1.length && a2.length){\\n        if(a1[0] === a2[0]){\\n            result.push(a1.shift());\\n            a2.shift();\\n        } \\n        else if(a1[0] > a2[0]){\\n            a2.shift();\\n        }else{\\n            a1.shift();\\n        }\\n    }\\n    return result\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 82447,
                "title": "straightforward-python-solution-based-on-sort",
                "content": "    class Solution(object):\\n        def intersect(self, nums1, nums2):\\n            \"\"\"\\n            :type nums1: List[int]\\n            :type nums2: List[int]\\n            :rtype: List[int]\\n            \"\"\"\\n            nums1.sort()\\n            nums2.sort()\\n            res = []\\n            a = 0\\n            b = 0\\n            while a < len(nums1) and b < len(nums2):\\n                if nums1[a] == nums2[b]:\\n                    res.append(nums1[a])\\n                    a += 1\\n                    b += 1\\n                elif nums1[a] < nums2[b]:\\n                    a += 1\\n                else:\\n                    b += 1\\n            return res",
                "solutionTags": [],
                "code": "    class Solution(object):\\n        def intersect(self, nums1, nums2):\\n            \"\"\"\\n            :type nums1: List[int]\\n            :type nums2: List[int]\\n            :rtype: List[int]\\n            \"\"\"\\n            nums1.sort()\\n            nums2.sort()\\n            res = []\\n            a = 0\\n            b = 0\\n            while a < len(nums1) and b < len(nums2):\\n                if nums1[a] == nums2[b]:\\n                    res.append(nums1[a])\\n                    a += 1\\n                    b += 1\\n                elif nums1[a] < nums2[b]:\\n                    a += 1\\n                else:\\n                    b += 1\\n            return res",
                "codeTag": "Java"
            },
            {
                "id": 3438183,
                "title": "beats-100-0ms-c-solution",
                "content": "# Complexity\\n- Time complexity: O(nlogn)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n\\n        vector<int>res;\\n        int n=nums1.size(),m=nums2.size();\\n        int i=0,j=0;\\n        while(i<n && j<m) {\\n            if(nums1[i]==nums2[j]) {\\n                res.push_back(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n            else if(nums1[i]<nums2[j]) i++;\\n            else j++;\\n        }\\n        return res;\\n    }\\n};\\n```\\nPlease UpVote \\uD83E\\uDD7A\\uD83D\\uDE4F",
                "solutionTags": [
                    "C++",
                    "Sorting"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n\\n        vector<int>res;\\n        int n=nums1.size(),m=nums2.size();\\n        int i=0,j=0;\\n        while(i<n && j<m) {\\n            if(nums1[i]==nums2[j]) {\\n                res.push_back(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n            else if(nums1[i]<nums2[j]) i++;\\n            else j++;\\n        }\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2560367,
                "title": "3-approaches-o-n2-o-n-log-n-o-n",
                "content": "**please upvote if you like**\\nO(n2) using simple loops and extra space\\n```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        ArrayList<Integer>l=new ArrayList<>();\\n        for(int i=0;i<nums1.length;i++){\\n            for(int j=0;j<nums2.length;j++){\\n                if(nums1[i]==nums2[j]){\\n                    l.add(nums2[j]);\\n                    nums2[j]=Integer.MAX_VALUE;\\n                    break;\\n                }\\n            }\\n        }\\n        int k=0;\\n        int arr[]= new int [l.size()];   \\n        for(int m: l){   // creating array\\n            arr[k++]=m;\\n        }\\n        return arr;\\n    }\\n}\\n```\\nO(n log n) with no extra space\\n```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        int i=0,j=0,k=0;\\n        while(i<nums1.length && j<nums2.length){\\n            if(nums1[i]==nums2[j]){\\n               nums1[k++]=nums1[i]; \\n                i++;\\n                j++;\\n            }\\n           else if(nums1[i]<nums2[j]){\\n                i++;\\n            }\\n            else{\\n                j++;\\n            }\\n            \\n        }\\n        return Arrays.copyOfRange(nums1,0,k);\\n    }\\n}\\n```\\nO(n)-100% faster solution\\n```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        int arr[]=new int[1001];\\n        int ans[]=new int[1001];\\n        int count=0;\\n        for(int i:nums1){\\n            arr[i]++;\\n        }\\n        for(int i :nums2){\\n            if(arr[i]>0){\\n                ans[count++]=i;\\n                arr[i]--;\\n            }\\n        }\\n        return Arrays.copyOfRange(ans,0,count);\\n    }\\n}\\n```\\n\\n",
                "solutionTags": [
                    "Java",
                    "Two Pointers",
                    "Binary Tree"
                ],
                "code": "```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        ArrayList<Integer>l=new ArrayList<>();\\n        for(int i=0;i<nums1.length;i++){\\n            for(int j=0;j<nums2.length;j++){\\n                if(nums1[i]==nums2[j]){\\n                    l.add(nums2[j]);\\n                    nums2[j]=Integer.MAX_VALUE;\\n                    break;\\n                }\\n            }\\n        }\\n        int k=0;\\n        int arr[]= new int [l.size()];   \\n        for(int m: l){   // creating array\\n            arr[k++]=m;\\n        }\\n        return arr;\\n    }\\n}\\n```\n```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        int i=0,j=0,k=0;\\n        while(i<nums1.length && j<nums2.length){\\n            if(nums1[i]==nums2[j]){\\n               nums1[k++]=nums1[i]; \\n                i++;\\n                j++;\\n            }\\n           else if(nums1[i]<nums2[j]){\\n                i++;\\n            }\\n            else{\\n                j++;\\n            }\\n            \\n        }\\n        return Arrays.copyOfRange(nums1,0,k);\\n    }\\n}\\n```\n```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        int arr[]=new int[1001];\\n        int ans[]=new int[1001];\\n        int count=0;\\n        for(int i:nums1){\\n            arr[i]++;\\n        }\\n        for(int i :nums2){\\n            if(arr[i]>0){\\n                ans[count++]=i;\\n                arr[i]--;\\n            }\\n        }\\n        return Arrays.copyOfRange(ans,0,count);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1269590,
                "title": "c-two-soln-unorderd-map-sort-simple-o-n",
                "content": "**Solution 1 -->> using maps (extra space but O(n) time**\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        //using unorderd_map to store  and frequency of one vector \\n        unordered_map<int,int>m;\\n        vector<int>out;\\n        for(auto val:nums1)\\n        {\\n            m[val]++;\\n        }\\n        //if val from 2nd vector is present in map then\\n        //put it in output vector\\n        //also decrease the count\\n        for(auto val:nums2)\\n        {\\n            if(m[val]>0)\\n            {\\n                out.push_back(val);\\n                m[val]--;\\n            }\\n        }\\n        return out;\\n        \\n    }\\n};\\n```\\n**Solution 2 -->> using sort (no extra space but space O(nlogn)**\\n```\\nclass Solution {\\npublic:\\n    //sort both the vectors\\n    //we iterate over both vectors using two pointers p1 and p2 until any pointer points to         memory location which is out of bound  \\n    //if we found elements pointed by both pointers are equal then insert into vector and           increment both the pointers\\n    //if they are not equal , then increment that pointer which points to lower value\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int>out;\\n        \\n        sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        \\n        int p1=0,p2=0;\\n        \\n        while(p1<nums1.size() && p2<nums2.size())\\n        {\\n            if(nums1[p1]==nums2[p2])\\n            {\\n                out.push_back(nums1[p1]);\\n                p1++;\\n                p2++;\\n            }\\n            //incrementing that pointer which points to lower value because if we increment other pointer ,we might loss some values\\n            else if(nums1[p1]<nums2[p2])\\n            {\\n                p1++;\\n            }\\n            else\\n            {\\n                p2++;\\n            }\\n        }\\n        return out;\\n        \\n    }\\n};\\n```\\nIf you find any issue in understanding the solutions then comment below, will try to help you.\\nIf you found my solution useful.\\nSo please do upvote and encourage me to document all leetcode problems\\uD83D\\uDE03\\nHappy Coding :)\\n",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        //using unorderd_map to store  and frequency of one vector \\n        unordered_map<int,int>m;\\n        vector<int>out;\\n        for(auto val:nums1)\\n        {\\n            m[val]++;\\n        }\\n        //if val from 2nd vector is present in map then\\n        //put it in output vector\\n        //also decrease the count\\n        for(auto val:nums2)\\n        {\\n            if(m[val]>0)\\n            {\\n                out.push_back(val);\\n                m[val]--;\\n            }\\n        }\\n        return out;\\n        \\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    //sort both the vectors\\n    //we iterate over both vectors using two pointers p1 and p2 until any pointer points to         memory location which is out of bound  \\n    //if we found elements pointed by both pointers are equal then insert into vector and           increment both the pointers\\n    //if they are not equal , then increment that pointer which points to lower value\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int>out;\\n        \\n        sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        \\n        int p1=0,p2=0;\\n        \\n        while(p1<nums1.size() && p2<nums2.size())\\n        {\\n            if(nums1[p1]==nums2[p2])\\n            {\\n                out.push_back(nums1[p1]);\\n                p1++;\\n                p2++;\\n            }\\n            //incrementing that pointer which points to lower value because if we increment other pointer ,we might loss some values\\n            else if(nums1[p1]<nums2[p2])\\n            {\\n                p1++;\\n            }\\n            else\\n            {\\n                p2++;\\n            }\\n        }\\n        return out;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1468756,
                "title": "simple-javascript-solution",
                "content": "```\\nvar intersect = function(nums1, nums2) {\\n\\t// sort the arrays\\n    nums1.sort((a,b) => a-b), nums2.sort((a,b) => a-b);\\n\\t\\n    let i = 0,\\n        j = 0,\\n        result = [];\\n    \\n    while(i<nums1.length && j<nums2.length) {\\n        if(nums1[i] < nums2[j]){\\n            i++;\\n        } else if(nums1[i] > nums2[j]) {\\n            j++;\\n        } else {\\n            result.push(nums1[i]);\\n            i++;\\n            j++;\\n        }\\n    }\\n    \\n    return result;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar intersect = function(nums1, nums2) {\\n\\t// sort the arrays\\n    nums1.sort((a,b) => a-b), nums2.sort((a,b) => a-b);\\n\\t\\n    let i = 0,\\n        j = 0,\\n        result = [];\\n    \\n    while(i<nums1.length && j<nums2.length) {\\n        if(nums1[i] < nums2[j]){\\n            i++;\\n        } else if(nums1[i] > nums2[j]) {\\n            j++;\\n        } else {\\n            result.push(nums1[i]);\\n            i++;\\n            j++;\\n        }\\n    }\\n    \\n    return result;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1222576,
                "title": "java-familiar-hashmap-solution-95-faster",
                "content": "```\\nimport java.util.ArrayList;\\nimport java.util.HashMap;\\n\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        ArrayList<Integer> al = new ArrayList<>();\\n        HashMap<Integer, Integer> map = new HashMap<>();\\n        for (int i : nums1) map.put(i, map.getOrDefault(i, 0) + 1);\\n        for (int i : nums2) {\\n            if (map.getOrDefault(i, 0) != 0) {\\n                al.add(i);\\n                map.put(i, map.getOrDefault(i, 1) - 1);\\n            }\\n        }\\n        int[] arr = new int[al.size()];\\n        int k = 0;\\n        for (int i : al) arr[k++] = i;\\n        return arr;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nimport java.util.ArrayList;\\nimport java.util.HashMap;\\n\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        ArrayList<Integer> al = new ArrayList<>();\\n        HashMap<Integer, Integer> map = new HashMap<>();\\n        for (int i : nums1) map.put(i, map.getOrDefault(i, 0) + 1);\\n        for (int i : nums2) {\\n            if (map.getOrDefault(i, 0) != 0) {\\n                al.add(i);\\n                map.put(i, map.getOrDefault(i, 1) - 1);\\n            }\\n        }\\n        int[] arr = new int[al.size()];\\n        int k = 0;\\n        for (int i : al) arr[k++] = i;\\n        return arr;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 699256,
                "title": "python-simple-2-pointer-solution",
                "content": "```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        ## RC ##\\n        ## APPROACH : 2 POINTER ##\\n        \\n\\t\\t## TIME COMPLEXITY : O(NlogN) ##\\n\\t\\t## SPACE COMPLEXITY : O(1) ##\\n\\n        i = 0\\n        j = 0\\n        res = []\\n        nums1.sort()\\n        nums2.sort()\\n        while( i < len(nums1) and j < len(nums2) ):\\n            if nums1[i] < nums2[j]:\\n                i += 1\\n                continue\\n            if nums1[i] > nums2[j]:\\n                j += 1\\n                continue\\n            res.append(nums1[i])\\n            i += 1\\n            j += 1\\n        return res\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        ## RC ##\\n        ## APPROACH : 2 POINTER ##\\n        \\n\\t\\t## TIME COMPLEXITY : O(NlogN) ##\\n\\t\\t## SPACE COMPLEXITY : O(1) ##\\n\\n        i = 0\\n        j = 0\\n        res = []\\n        nums1.sort()\\n        nums2.sort()\\n        while( i < len(nums1) and j < len(nums2) ):\\n            if nums1[i] < nums2[j]:\\n                i += 1\\n                continue\\n            if nums1[i] > nums2[j]:\\n                j += 1\\n                continue\\n            res.append(nums1[i])\\n            i += 1\\n            j += 1\\n        return res\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1785178,
                "title": "python-simple-python-solution-by-counting-element-in-both-list",
                "content": "# If It is Useful to Understand Please Upvote Me \\uD83D\\uDE4F\\uD83D\\uDE4F\\n\\tclass Solution:\\n\\t\\tdef intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n\\n\\t\\t\\tresult = []\\n\\n\\t\\t\\tfor i in nums1:\\n\\t\\t\\t\\tif i in nums2 and i not in result:\\n\\t\\t\\t\\t\\tresult = result  + [i]*min(nums1.count(i),nums2.count(i))\\n\\n\\t\\t\\treturn result",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "# If It is Useful to Understand Please Upvote Me \\uD83D\\uDE4F\\uD83D\\uDE4F\\n\\tclass Solution:\\n\\t\\tdef intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n\\n\\t\\t\\tresult = []\\n\\n\\t\\t\\tfor i in nums1:\\n\\t\\t\\t\\tif i in nums2 and i not in result:\\n\\t\\t\\t\\t\\tresult = result  + [i]*min(nums1.count(i),nums2.count(i))\\n\\n\\t\\t\\treturn result",
                "codeTag": "Java"
            },
            {
                "id": 1403296,
                "title": "java-2ms-solution-w-detailed-explanation-and-comments",
                "content": "\\tpublic int[] intersect(int[] nums1, int[] nums2) {\\n        //  VARIABLES:\\n        //      map     ->      For each number in nums1[] we store it\\'s occurence\\n        //      list    ->      We represent our array to return as a lisit initially\\n        //                      so we can dynamically add elements and we do not know how many\\n        //                      we might need to add.\\n        HashMap<Integer,Integer> map = new HashMap<>();\\n        List<Integer> list = new ArrayList<>();\\n        \\n        \\n        //  In our first loop, we will build a map where the key is a number in nums1[]\\n        //  and the value is how many times it occurs in nums1[]\\n        for ( int i = 0 ; i < nums1.length; i++){\\n            if(map.containsKey(nums1[i])) map.put(nums1[i],map.get(nums1[i])+1);\\n            else map.put(nums1[i],1);\\n        }\\n        \\n        //  With this map, we can now inspect nums2[]. Anytime we see a number in nums2[]\\n        //  that is a key in map and has a positive value, we know we can add this key to our list\\n        //  When we add an element to our list, we need to reduce the value in our map by 1, \\n        //  since we only want to add this to our list the same amount of times it occurs in BOTH\\n        //  nums1[] and nums2[].\\n        for (int i = 0 ; i <nums2.length; i++){\\n            if(map.containsKey(nums2[i]) && map.get(nums2[i]) > 0){\\n                map.put(nums2[i],map.get(nums2[i])-1);\\n                list.add(nums2[i]);\\n            } \\n        }\\n        \\n        \\n        //  Now we just turn our list into an array and return.\\n        int[] res = new int[list.size()];\\n        for (int i = 0 ; i <list.size(); i++){\\n            res[i] = list.get(i);\\n        }\\n        \\n        return res;\\n        \\n    }",
                "solutionTags": [
                    "Java",
                    "Array"
                ],
                "code": "\\tpublic int[] intersect(int[] nums1, int[] nums2) {\\n        //  VARIABLES:\\n        //      map     ->      For each number in nums1[] we store it\\'s occurence\\n        //      list    ->      We represent our array to return as a lisit initially\\n        //                      so we can dynamically add elements and we do not know how many\\n        //                      we might need to add.\\n        HashMap<Integer,Integer> map = new HashMap<>();\\n        List<Integer> list = new ArrayList<>();\\n        \\n        \\n        //  In our first loop, we will build a map where the key is a number in nums1[]\\n        //  and the value is how many times it occurs in nums1[]\\n        for ( int i = 0 ; i < nums1.length; i++){\\n            if(map.containsKey(nums1[i])) map.put(nums1[i],map.get(nums1[i])+1);\\n            else map.put(nums1[i],1);\\n        }\\n        \\n        //  With this map, we can now inspect nums2[]. Anytime we see a number in nums2[]\\n        //  that is a key in map and has a positive value, we know we can add this key to our list\\n        //  When we add an element to our list, we need to reduce the value in our map by 1, \\n        //  since we only want to add this to our list the same amount of times it occurs in BOTH\\n        //  nums1[] and nums2[].\\n        for (int i = 0 ; i <nums2.length; i++){\\n            if(map.containsKey(nums2[i]) && map.get(nums2[i]) > 0){\\n                map.put(nums2[i],map.get(nums2[i])-1);\\n                list.add(nums2[i]);\\n            } \\n        }\\n        \\n        \\n        //  Now we just turn our list into an array and return.\\n        int[] res = new int[list.size()];\\n        for (int i = 0 ; i <list.size(); i++){\\n            res[i] = list.get(i);\\n        }\\n        \\n        return res;\\n        \\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 82444,
                "title": "python-o-n-simple-solution",
                "content": "    def intersect(self, nums1, nums2):\\n            n1_dict = dict()\\n            result = []\\n            for n1 in nums1:\\n                n1_dict[n1] = n1_dict.get(n1, 0) + 1\\n            for n2 in nums2:\\n                if n2 in n1_dict and n1_dict.get(n2, 0) > 0:\\n                    result.append(n2)\\n                    n1_dict[n2] -= 1\\n            return result",
                "solutionTags": [
                    "Python"
                ],
                "code": "    def intersect(self, nums1, nums2):\\n            n1_dict = dict()\\n            result = []\\n            for n1 in nums1:\\n                n1_dict[n1] = n1_dict.get(n1, 0) + 1\\n            for n2 in nums2:\\n                if n2 in n1_dict and n1_dict.get(n2, 0) > 0:\\n                    result.append(n2)\\n                    n1_dict[n2] -= 1\\n            return result",
                "codeTag": "Python3"
            },
            {
                "id": 2791214,
                "title": "c-solutions",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        sort(nums1.begin(), nums1.end());\\n        sort(nums2.begin(), nums2.end());\\n        int n1 = (int)nums1.size(), n2 = (int)nums2.size();\\n        int i1 = 0, i2 = 0;\\n        vector<int> res;\\n        while(i1 < n1 && i2 < n2){\\n            if(nums1[i1] == nums2[i2]) {\\n                res.push_back(nums1[i1]);\\n                i1++;\\n                i2++;\\n            }\\n            else if(nums1[i1] > nums2[i2]){\\n                i2++;\\n            }\\n            else{\\n                i1++;\\n            }\\n        }\\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        sort(nums1.begin(), nums1.end());\\n        sort(nums2.begin(), nums2.end());\\n        int n1 = (int)nums1.size(), n2 = (int)nums2.size();\\n        int i1 = 0, i2 = 0;\\n        vector<int> res;\\n        while(i1 < n1 && i2 < n2){\\n            if(nums1[i1] == nums2[i2]) {\\n                res.push_back(nums1[i1]);\\n                i1++;\\n                i2++;\\n            }\\n            else if(nums1[i1] > nums2[i2]){\\n                i2++;\\n            }\\n            else{\\n                i1++;\\n            }\\n        }\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 242639,
                "title": "3ms-java-solution",
                "content": "```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        Map<Integer, Integer> map = new HashMap<Integer, Integer>();\\n        int k = 0;\\n        for (int i = 0; i < nums1.length; i++) {\\n            map.put(nums1[i], map.getOrDefault(nums1[i], 0)+1);\\n        }\\n        for (int i = 0; i < nums2.length; i++) {\\n            if (map.containsKey(nums2[i]) && map.get(nums2[i]) > 0) {\\n                nums1[k] = nums2[i];\\n                k++;\\n            }\\n            map.put(nums2[i], map.getOrDefault(nums2[i], 0)-1);\\n        }\\n        return Arrays.copyOfRange(nums1, 0, k);\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Hash Table"
                ],
                "code": "```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        Map<Integer, Integer> map = new HashMap<Integer, Integer>();\\n        int k = 0;\\n        for (int i = 0; i < nums1.length; i++) {\\n            map.put(nums1[i], map.getOrDefault(nums1[i], 0)+1);\\n        }\\n        for (int i = 0; i < nums2.length; i++) {\\n            if (map.containsKey(nums2[i]) && map.get(nums2[i]) > 0) {\\n                nums1[k] = nums2[i];\\n                k++;\\n            }\\n            map.put(nums2[i], map.getOrDefault(nums2[i], 0)-1);\\n        }\\n        return Arrays.copyOfRange(nums1, 0, k);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1808056,
                "title": "java-binary-search",
                "content": "```\\n/*\\nnums1 = [1,2,2,1], nums2 = [2,2]\\n\\n1,1,2,2\\n2,2\\n\\nnums1 = [4,9,5], nums2 = [9,4,9,8,4]\\n\\n4,4,8,9,9\\n4,5,9\\n\\n\\n--\\n\\nmain idea:\\n\\nusing binary search, search for the elements of the smallest array (nums1) in the largest array (nums2)\\n\\nsort the largest array o that binary search is feasible\\nsort the smallest array so that we can seach sequentially\\n\\nif element is found,\\n\\tkeep searching to the left until we find the first occurrence of the element\\n\\n\\tadd element to the result\\n\\nwhen element is found, keep track of the last index where element was found so that next binary search ignores previous used indexes\\n\\tie. nums1 = 1,1   nums2 = 1,2,2 - output should be [1] - once we found first 1 at index 0 and next search is done as of index 1\\n\\n*/\\npublic int[] intersect(int[] nums1, int[] nums2) {\\n\\tif(nums2.length < nums1.length){\\n\\t\\treturn intersect(nums2, nums1);\\n\\t}\\n\\n\\tArrays.sort(nums1);\\n\\tArrays.sort(nums2);\\n\\n\\tList<Integer> result = new ArrayList<>();\\n\\tint leftIndex = 0;\\n\\tfor(int num: nums1){\\n\\t\\tint index = binarySearch(nums2, num, leftIndex);\\n\\n\\t\\tif(index != -1){\\n\\t\\t\\tresult.add(num);\\n\\t\\t\\tleftIndex = index + 1;\\n\\t\\t}\\n\\t}\\n\\n\\treturn result.stream().mapToInt(Integer::intValue).toArray();\\n}\\n\\nprivate int binarySearch(int[] nums, int target, int left){\\n\\tint right = nums.length - 1;\\n\\tint index = -1;\\n\\n\\twhile(left <= right){\\n\\t\\tint middle = left + (right - left) / 2;\\n\\n\\t\\tif(nums[middle] == target){\\n\\t\\t\\tindex = middle;\\n\\n\\t\\t\\tright = middle - 1;\\n\\t\\t} else if(nums[middle] > target){\\n\\t\\t\\tright = middle - 1;\\n\\t\\t} else {\\n\\t\\t\\tleft = middle + 1;\\n\\t\\t}\\n\\t}\\n\\n\\treturn index;\\n}\\n\\n```\\n",
                "solutionTags": [
                    "Java",
                    "Binary Search"
                ],
                "code": "```\\n/*\\nnums1 = [1,2,2,1], nums2 = [2,2]\\n\\n1,1,2,2\\n2,2\\n\\nnums1 = [4,9,5], nums2 = [9,4,9,8,4]\\n\\n4,4,8,9,9\\n4,5,9\\n\\n\\n--\\n\\nmain idea:\\n\\nusing binary search, search for the elements of the smallest array (nums1) in the largest array (nums2)\\n\\nsort the largest array o that binary search is feasible\\nsort the smallest array so that we can seach sequentially\\n\\nif element is found,\\n\\tkeep searching to the left until we find the first occurrence of the element\\n\\n\\tadd element to the result\\n\\nwhen element is found, keep track of the last index where element was found so that next binary search ignores previous used indexes\\n\\tie. nums1 = 1,1   nums2 = 1,2,2 - output should be [1] - once we found first 1 at index 0 and next search is done as of index 1\\n\\n*/\\npublic int[] intersect(int[] nums1, int[] nums2) {\\n\\tif(nums2.length < nums1.length){\\n\\t\\treturn intersect(nums2, nums1);\\n\\t}\\n\\n\\tArrays.sort(nums1);\\n\\tArrays.sort(nums2);\\n\\n\\tList<Integer> result = new ArrayList<>();\\n\\tint leftIndex = 0;\\n\\tfor(int num: nums1){\\n\\t\\tint index = binarySearch(nums2, num, leftIndex);\\n\\n\\t\\tif(index != -1){\\n\\t\\t\\tresult.add(num);\\n\\t\\t\\tleftIndex = index + 1;\\n\\t\\t}\\n\\t}\\n\\n\\treturn result.stream().mapToInt(Integer::intValue).toArray();\\n}\\n\\nprivate int binarySearch(int[] nums, int target, int left){\\n\\tint right = nums.length - 1;\\n\\tint index = -1;\\n\\n\\twhile(left <= right){\\n\\t\\tint middle = left + (right - left) / 2;\\n\\n\\t\\tif(nums[middle] == target){\\n\\t\\t\\tindex = middle;\\n\\n\\t\\t\\tright = middle - 1;\\n\\t\\t} else if(nums[middle] > target){\\n\\t\\t\\tright = middle - 1;\\n\\t\\t} else {\\n\\t\\t\\tleft = middle + 1;\\n\\t\\t}\\n\\t}\\n\\n\\treturn index;\\n}\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1468667,
                "title": "intersection-of-two-arrays-ii-w-follow-up-answers-c-python",
                "content": "**IDEA**\\nWe use an `unordered_map` to count the frequency of each number in `nums1`.\\nThen, while iterating `nums2`, we count how many numbers we have in `common` and save it in a vector.\\nWe can use `Counter` in Python.\\n\\n**TIME COMPLEXITY - O(N + M), where N and M are sizes of nums1 & nums2**\\n\\n**SOLUTION**\\n`IN C++`\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int, int> m ;\\n        vector<int> ans ;        \\n        for (auto i : nums1) \\n            m[i]++;\\n        \\n        for (auto i : nums2) \\n        {\\n            if (m[i]) \\n            {\\n                ans.push_back(i);\\n                m[i]-- ;\\n            }\\n        }        \\n        return ans ;\\n    }\\n};\\n```\\n`IN PYTHON`\\n```\\nclass Solution(object):\\n    def intersect(self, nums1, nums2):\\n        \"\"\"\\n        :type nums1: List[int]\\n        :type nums2: List[int]\\n        :rtype: List[int]\\n        \"\"\"\\n        counts = collections.Counter(nums1)\\n        ans = []\\n        for num in nums2:\\n            if counts[num] > 0:\\n                ans += num,\\n                counts[num] -= 1\\n\\n        return ans\\n```\\n\\n**Follow Up Questions**:\\n\\n* What if the given array is already sorted? How would you optimize your algorithm?\\n\\nThen we use classic `two pointer iteration`, `i` points to `nums1` and `j` points to `nums2`. Because a sorted array is in ascending order, so if `nums1[i] > nums[j]`, we need to increment `j`, and vice versa.\\nOnly if `nums1[i] == nums2[j]` we add it to the `ans` array.\\nBecause here our time complexity will be **O(max(N, M))**\\n\\n* What if nums1\\'s size is small compared to nums2\\'s size? Which algorithm is better?\\n\\nWe can apply binary search on the bigger array (`nums2`) using the smaller array (`nums1`)\\nFor each search we do `X` times (`X` is the size of `nums1`) it takes `O(LogN)` time, making the overall complexity `O(K LogN)`. If `O(K log N) > O(max(N, M))`, we can go for 2 pointer approach.",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int, int> m ;\\n        vector<int> ans ;        \\n        for (auto i : nums1) \\n            m[i]++;\\n        \\n        for (auto i : nums2) \\n        {\\n            if (m[i]) \\n            {\\n                ans.push_back(i);\\n                m[i]-- ;\\n            }\\n        }        \\n        return ans ;\\n    }\\n};\\n```\n```\\nclass Solution(object):\\n    def intersect(self, nums1, nums2):\\n        \"\"\"\\n        :type nums1: List[int]\\n        :type nums2: List[int]\\n        :rtype: List[int]\\n        \"\"\"\\n        counts = collections.Counter(nums1)\\n        ans = []\\n        for num in nums2:\\n            if counts[num] > 0:\\n                ans += num,\\n                counts[num] -= 1\\n\\n        return ans\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3288630,
                "title": "binary-search-solution-step-wise-sol-n-with-image-illustration",
                "content": "# Intuition\\nThis can be done in O(m+n) using hash table but what if , someone ask you to do it using Binary Search only.\\n1.So we can do it by sorting both vectors and looking for one\\'s element in another by binary search.\\n2. The problem with normal binary search is it would give repeated answer.\\n3. We can improve it by when element found replace it with -1 and we have to sort it again to apply binary search for futher elements\\n4. this would be a lot of time consuming process to sort vector again and again\\n5. Can we made the vector to be remain sorted after updating just one updation of element.\\n6. Yes , we can \\n            \\n\\n# Approach\\n1. Sort both vectors\\n2. iterarte through nums2 while looking its element in nums1.\\n3. if found pushback the value in answer vectors along with updation of nums1 to avoid collision or repetation. This can be done as\\n- update nums1 element with its previos one \\n- i.e. new nums1[mid] <= nums1[mid]-1\\n- because here we are dealing with lower bound of element\\n- it makes sure the sorted property remains un affected\\n- and also the next element to serch would always be greater than the updated element\\n\\n---\\n# Illustration\\n![image.png](https://assets.leetcode.com/users/images/3868d564-12bf-4079-9f13-8f411873f037_1678646264.1383638.png)\\n        \\n      \\n\\n\\n# Complexity\\n- Time complexity:\\n- size of nums1 = n\\n- size of nums2 = m\\nsorting = nlog(n) + mlog(m)\\nserching = mlog(n)\\nTotal = O(nlog(n) + mlog(m))\\n\\n- Space complexity:\\nconstant space O(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ans;\\n        //sort nums1 and nums 2\\n        sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        for(int i = 0 ; i<nums2.size() ; i++){\\n            int s = 0 , e = nums1.size()-1 , mid , index = e;\\n            //binary serach to found lower bound\\n            while(s<=e){\\n                mid = s + (e-s)/2;\\n                if(nums1[mid] >= nums2[i]){\\n                    index = mid;\\n                    e = mid-1;\\n                }\\n                else{\\n                    s = mid+1;\\n                }\\n            }\\n//update lower bound element if found\\n            if(nums1[index] == nums2[i]){\\n                ans.push_back(nums2[i]);\\n                index == 0 ? nums1[index] = -1 : nums1[index] = nums1[index-1];\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Array",
                    "Binary Search",
                    "Sort",
                    "Sorting"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ans;\\n        //sort nums1 and nums 2\\n        sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        for(int i = 0 ; i<nums2.size() ; i++){\\n            int s = 0 , e = nums1.size()-1 , mid , index = e;\\n            //binary serach to found lower bound\\n            while(s<=e){\\n                mid = s + (e-s)/2;\\n                if(nums1[mid] >= nums2[i]){\\n                    index = mid;\\n                    e = mid-1;\\n                }\\n                else{\\n                    s = mid+1;\\n                }\\n            }\\n//update lower bound element if found\\n            if(nums1[index] == nums2[i]){\\n                ans.push_back(nums2[i]);\\n                index == 0 ? nums1[index] = -1 : nums1[index] = nums1[index-1];\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1744623,
                "title": "efficient-and-beginner-friendly-code-in-c",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2){\\n        \\n        map<int,int> mp;\\n        \\n        for(int i = 0 ; i < nums1.size() ; i++ ){\\n            mp[nums1[i]]++;\\n        }\\n        \\n        vector<int> ans;\\n        \\n        for(int i = 0 ; i < nums2.size() ; i++ ){\\n            \\n            if( mp[nums2[i]] != 0 ){\\n                mp[nums2[i]]--;\\n                ans.push_back(nums2[i]);\\n            }\\n        }\\n\\n        return ans;\\n    \\n    }\\n};\\n```\\n\\n**PLEASE UPVOTE IT IF THE ABOVE SOLUTION IS HELPFUL FOR YOU**",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2){\\n        \\n        map<int,int> mp;\\n        \\n        for(int i = 0 ; i < nums1.size() ; i++ ){\\n            mp[nums1[i]]++;\\n        }\\n        \\n        vector<int> ans;\\n        \\n        for(int i = 0 ; i < nums2.size() ; i++ ){\\n            \\n            if( mp[nums2[i]] != 0 ){\\n                mp[nums2[i]]--;\\n                ans.push_back(nums2[i]);\\n            }\\n        }\\n\\n        return ans;\\n    \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1250895,
                "title": "c-hashmaps-two-pointer-binary-search",
                "content": "**Solution 1 - Using 2 HashMaps - O(M + N)**\\n\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map <int, int> a1, a2;\\n        vector <int> intsec;\\n        \\n        for (int i: nums1) {\\n            a1[i]++;\\n        }\\n        \\n        for (int i: nums2) {\\n            a2[i]++;\\n        }\\n        \\n        for (auto itr: a1) {\\n            int n = itr.first;\\n            if (a2.count(n)) {\\n                for (int i = 0; i < min(a1[n], a2[n]); i++) {\\n                    intsec.push_back(n);\\n                }\\n            }\\n        }\\n        \\n        return intsec;\\n    }\\n};\\n```\\n\\n<hr>\\n\\n**Solution 2 - Using 1 Hashmap - O(M + N)**\\n\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map <int, int> elements;\\n        vector <int> intsec;\\n        \\n        for (int i: nums1) {\\n            elements[i]++;\\n        }\\n        \\n        for (auto item: nums2) {\\n            if (--elements[item] >= 0) {\\n                intsec.push_back(item);\\n            }\\n        }\\n        \\n        return intsec;\\n    }\\n};\\n```\\n\\n<hr>\\n\\n**Solution 3 - Two Pointers - O(mlogm + nlogn)**\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        int fst = 0, snd = 0;\\n        vector <int> intsec;\\n        \\n        sort(nums1.begin(), nums1.end());\\n        sort(nums2.begin(), nums2.end());\\n        \\n        while (fst < nums1.size() && snd < nums2.size()) {\\n            if (nums1[fst] == nums2[snd]) {\\n                intsec.push_back(nums1[fst]);\\n                fst++;\\n                snd++;\\n            } else if (nums1[fst] < nums2[snd]) {\\n                fst++;\\n            } else {\\n                snd++;\\n            }\\n        }\\n        \\n        return intsec;\\n    }\\n};\\n```\\n\\n<hr>\\n\\n**Solution 4 - Binary Search - O(nlogm) - n < m**\\n\\n```\\nclass Solution {\\npublic:\\n    \\n    int binarySearch(int target, vector <int> arr, int left, int right) {\\n        while (left < right) {\\n            int mid = (left + right) / 2;\\n            if (arr[mid] == target) {\\n                right = mid;\\n            } else if (arr[mid] > target) {\\n                right = mid;\\n            } else {\\n                left = mid + 1;\\n            }\\n        }\\n        \\n        if (left >= 0 && left < arr.size() && arr[left] == target) {\\n            return left;\\n        }\\n        \\n        return -1;\\n    }\\n    \\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        int fst = 0, snd = 0;\\n        vector <int> intsec;\\n        \\n\\t\\t// assume sorted\\n\\t\\t\\n        if (nums1.size() > nums2.size()) {\\n            vector <int> temp = nums1;\\n            nums1 = nums2;\\n            nums2 = temp;\\n        }\\n        \\n        int left = 0, right = nums2.size();\\n        for (int i = 0; i < nums1.size(); i++) {\\n            \\n            int index = binarySearch(nums1[i], nums2, left, right);\\n            \\n            if (index != -1) {\\n                left = index + 1;\\n                intsec.push_back(nums2[index]);\\n            }\\n        }\\n        \\n        return intsec;\\n    }\\n};\\n```\\n",
                "solutionTags": [
                    "C++",
                    "C",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map <int, int> a1, a2;\\n        vector <int> intsec;\\n        \\n        for (int i: nums1) {\\n            a1[i]++;\\n        }\\n        \\n        for (int i: nums2) {\\n            a2[i]++;\\n        }\\n        \\n        for (auto itr: a1) {\\n            int n = itr.first;\\n            if (a2.count(n)) {\\n                for (int i = 0; i < min(a1[n], a2[n]); i++) {\\n                    intsec.push_back(n);\\n                }\\n            }\\n        }\\n        \\n        return intsec;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map <int, int> elements;\\n        vector <int> intsec;\\n        \\n        for (int i: nums1) {\\n            elements[i]++;\\n        }\\n        \\n        for (auto item: nums2) {\\n            if (--elements[item] >= 0) {\\n                intsec.push_back(item);\\n            }\\n        }\\n        \\n        return intsec;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        int fst = 0, snd = 0;\\n        vector <int> intsec;\\n        \\n        sort(nums1.begin(), nums1.end());\\n        sort(nums2.begin(), nums2.end());\\n        \\n        while (fst < nums1.size() && snd < nums2.size()) {\\n            if (nums1[fst] == nums2[snd]) {\\n                intsec.push_back(nums1[fst]);\\n                fst++;\\n                snd++;\\n            } else if (nums1[fst] < nums2[snd]) {\\n                fst++;\\n            } else {\\n                snd++;\\n            }\\n        }\\n        \\n        return intsec;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    \\n    int binarySearch(int target, vector <int> arr, int left, int right) {\\n        while (left < right) {\\n            int mid = (left + right) / 2;\\n            if (arr[mid] == target) {\\n                right = mid;\\n            } else if (arr[mid] > target) {\\n                right = mid;\\n            } else {\\n                left = mid + 1;\\n            }\\n        }\\n        \\n        if (left >= 0 && left < arr.size() && arr[left] == target) {\\n            return left;\\n        }\\n        \\n        return -1;\\n    }\\n    \\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        int fst = 0, snd = 0;\\n        vector <int> intsec;\\n        \\n\\t\\t// assume sorted\\n\\t\\t\\n        if (nums1.size() > nums2.size()) {\\n            vector <int> temp = nums1;\\n            nums1 = nums2;\\n            nums2 = temp;\\n        }\\n        \\n        int left = 0, right = nums2.size();\\n        for (int i = 0; i < nums1.size(); i++) {\\n            \\n            int index = binarySearch(nums1[i], nums2, left, right);\\n            \\n            if (index != -1) {\\n                left = index + 1;\\n                intsec.push_back(nums2[index]);\\n            }\\n        }\\n        \\n        return intsec;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 82254,
                "title": "simple-python-solution",
                "content": "    class Solution(object):\\n    def intersect(self, nums1, nums2):\\n        result = []\\n        for i in range(len(nums1)):\\n            if nums1[i] in nums2:\\n                nums2.remove(nums1[i])\\n                result.append(nums1[i])\\n        return result",
                "solutionTags": [
                    "Python"
                ],
                "code": "    class Solution(object):\\n    def intersect(self, nums1, nums2):\\n        result = []\\n        for i in range(len(nums1)):\\n            if nums1[i] in nums2:\\n                nums2.remove(nums1[i])\\n                result.append(nums1[i])\\n        return result",
                "codeTag": "Java"
            },
            {
                "id": 923594,
                "title": "c-three-solutions-using-map-using-sort-and-using-binary-search",
                "content": "In this problem I have given solutions for with different approches ( not including brute force -  O(n^2) ).\\n1) Using Binay Search, this is often asked as a follow up, if one array is very small and other is very big.\\n\\t1) Provided explanation in the comments:\\n\\t2) I used binary search to get the count of the elements in the bigger array( as there could be duplicate elements)\\n\\t3) This would have been much simpler in case the elements in the arrays were distinct. (just simple binary search would do.\\n2) Using Sort, it can be asked in an interview that what if arrays are already sorted. (in this question since input arrays were not sorted, so I explicitly sorted them.)\\n3) Using HashMap - is it pretty straight forward, keet track of the element with frequency in a map, and exhaust the other array and build the result.\\n\\n```\\npublic class Solution {\\n    public int[] Intersect(int[] nums1, int[] nums2) {\\n        \\n        if((nums1 == null || nums1.Length == 0) || (nums2 == null || nums2.Length == 0))\\n            return new int[0];\\n        \\n        \\n        // if one array is very small and other is very large and larger array is sorted.\\n        // iterate over the smaller array and binary search on the larger array.\\n        // let us assume nums1 is small and nums2 is very large.\\n        \\n        Dictionary<int, int> nums1Map = new Dictionary<int, int>();\\n        \\n        foreach(int num in nums1)\\n        {\\n            if(nums1Map.ContainsKey(num))\\n                nums1Map[num]++;\\n            else\\n                nums1Map[num] = 1;\\n        }\\n        \\n        Array.Sort(nums2); \\n        List<int> result = new List<int>();\\n        HashSet<int> visited = new HashSet<int>();\\n        for(int i = 0; i < nums1.Length; i++)\\n        {\\n            var count = GetCountByBinarySearch(nums2, nums1[i]);\\n            if(count == 0 || visited.Contains(nums1[i])) continue;\\n            \\n            visited.Add(nums1[i]);\\n            int min = Math.Min(count, nums1Map[nums1[i]]);            \\n            while(min > 0)\\n            {\\n                result.Add(nums1[i]);\\n                min--;\\n            }\\n        }\\n        \\n        return result.ToArray();\\n    }\\n    \\n    private int GetCountByBinarySearch(int[] nums, int num)\\n    {\\n        int left = GetLeftIndex(nums, num);\\n        \\n        if(left == -1) return 0;\\n        \\n        int right = GetRightIndex(nums, num);\\n        \\n        return right - left + 1;\\n    }\\n    \\n    private int GetLeftIndex(int[] nums, int num)\\n    {\\n        int low = 0;\\n        int high = nums.Length - 1;\\n        \\n        while(low <= high)\\n        {\\n            int mid = low + (high - low)/ 2;\\n            if(nums[mid] == num && ( mid == 0 || nums[mid - 1] < num))\\n            {\\n               return mid; \\n            }                \\n            else if(nums[mid] < num)\\n            {\\n                low = mid + 1;\\n            }\\n            else if(nums[mid] >= num)\\n            {\\n                high = mid - 1;\\n            }\\n        }\\n        return -1;\\n    }\\n    \\n    private int GetRightIndex(int[] nums, int num)\\n    {\\n        int low = 0;\\n        int high = nums.Length - 1;\\n        \\n        while(low <= high)\\n        {\\n            int mid = low + (high - low)/ 2;\\n            if(nums[mid] == num && ( mid == nums.Length - 1 || nums[mid + 1] > num))\\n            {\\n               return mid; \\n            }                \\n            else if(nums[mid] <= num)\\n            {\\n                low = mid + 1;\\n            }\\n            else if(nums[mid] > num)\\n            {\\n                high = mid - 1;\\n            }\\n        }\\n        return -1;\\n    }\\n    \\n    private int[] usingSort(int[] nums1, int[] nums2)\\n    {\\n        Array.Sort(nums1);\\n        Array.Sort(nums2);\\n        \\n        List<int> result = new List<int>();\\n        \\n        int i = 0;\\n        int j = 0;\\n        \\n        \\n        while(i < nums1.Length && j < nums2.Length)\\n        {\\n            if(nums1[i] == nums2[j])\\n            {\\n                result.Add(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n            else if(nums1[i] < nums2[j])\\n            {\\n                i++;\\n            }\\n            else\\n            {\\n                j++;\\n            }\\n        }\\n        \\n        return result.ToArray();\\n    }\\n    \\n    private int[] usingmap(int[] nums1, int[] nums2)\\n    {\\n        Dictionary<int,int> map = new Dictionary<int, int>();\\n        for(int i = 0; i < nums1.Length; i++)\\n        {\\n            if(map.ContainsKey(nums1[i]))\\n                map[nums1[i]]++;\\n            else\\n                map[nums1[i]] = 1;\\n        }\\n        \\n        List<int> list = new List<int>();\\n        for(int i = 0; i < nums2.Length; i++)\\n        {\\n            if(map.ContainsKey(nums2[i]) && map[nums2[i]] > 0)\\n            {\\n                map[nums2[i]]--;\\n                list.Add(nums2[i]);\\n            }\\n                \\n        }\\n        \\n        return list.ToArray();\\n    }\\n}",
                "solutionTags": [
                    "C",
                    "C#",
                    "Binary Tree"
                ],
                "code": "class Solution {\\n    public int[] Intersect(int[] nums1, int[] nums2) {\\n        \\n        if((nums1 == null || nums1.Length == 0) || (nums2 == null || nums2.Length == 0))\\n            return new int[0];\\n        \\n        \\n        // if one array is very small and other is very large and larger array is sorted.\\n        // iterate over the smaller array and binary search on the larger array.\\n        // let us assume nums1 is small and nums2 is very large.\\n        \\n        Dictionary<int, int> nums1Map = new Dictionary<int, int>();\\n        \\n        foreach(int num in nums1)\\n        {\\n            if(nums1Map.ContainsKey(num))\\n                nums1Map[num]++;\\n            else\\n                nums1Map[num] = 1;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 395611,
                "title": "facebook-python-binary-search-approach-w-explanation-o-nlogm",
                "content": "### Context: \\nA very frequent Facebook follow up: what if only one of the inputs are super large? e.g. len(nums1) = 3, len(nums2) = 1000. Can we do better than 2-pointers which run in O(n+m) time? Answer is yes: we achieve O(nlogm) in this case, n < m. \\n\\n### Assumption: \\nnums1 and nums2 are already sorted. \\n\\n### Explanation: \\nThis approach is efficient when only one of the input is really large. Therefore, we first figure out which is the shorter array and loop through it, for every element, we binary search it on the other array. One thing to note is that the question asks to include duplicates, therefore when we binary search, we need to find the left-most matching number. Since the inputs are sorted, next time we perform a binary search, the low should start the previously found index+1. \\n\\n### Code:\\n```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        nums1.sort()\\n        nums2.sort()\\n        if len(nums1) > len(nums2): \\n            nums1, nums2 = nums2, nums1 \\n            \\n        def binarySearch(nums, low, high, target): \\n            while low < high: \\n                mid = (low+high)//2 \\n                if nums[mid] == target: \\n                    high = mid\\n                elif nums[mid] > target: \\n                    high = mid \\n                else: \\n                    low = mid+1 \\n                \\n            if 0 <= low < len(nums) and nums[low] == target: \\n                return low \\n            else: \\n                return -1\\n    \\n        res = [] \\n        low, high = 0, len(nums2) \\n        for i, x in enumerate(nums1): \\n            index = binarySearch(nums2, low, high, x)\\n            if index != -1: \\n                low = index+1 \\n                res.append(nums2[index]) \\n\\n        return res\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        nums1.sort()\\n        nums2.sort()\\n        if len(nums1) > len(nums2): \\n            nums1, nums2 = nums2, nums1 \\n            \\n        def binarySearch(nums, low, high, target): \\n            while low < high: \\n                mid = (low+high)//2 \\n                if nums[mid] == target: \\n                    high = mid\\n                elif nums[mid] > target: \\n                    high = mid \\n                else: \\n                    low = mid+1 \\n                \\n            if 0 <= low < len(nums) and nums[low] == target: \\n                return low \\n            else: \\n                return -1\\n    \\n        res = [] \\n        low, high = 0, len(nums2) \\n        for i, x in enumerate(nums1): \\n            index = binarySearch(nums2, low, high, x)\\n            if index != -1: \\n                low = index+1 \\n                res.append(nums2[index]) \\n\\n        return res\\n```",
                "codeTag": "Java"
            },
            {
                "id": 327800,
                "title": "javascript-oneliner",
                "content": "**Upvote** if you ***like*** it. **Thanks**!\\n```\\nvar intersect = (nums1, nums2) => nums1.filter(item => {if(nums2.includes(item)) return nums2.splice(nums2.indexOf(item), 1) || true;});\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar intersect = (nums1, nums2) => nums1.filter(item => {if(nums2.includes(item)) return nums2.splice(nums2.indexOf(item), 1) || true;});\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2050987,
                "title": "easy-approach",
                "content": "the solution is very clear :\\n* cache every element in nums2 as it\\'s second array , if number is not cached we make it\\'s value = 1 else we increment with 1 , so if there are [2,2,2,1,1] so it will like {2:3} {1:2}. \\n* check every element in nums1 if its exist in cahce and it\\'s value above  or equal to 1 , we push it on result array . \\n\\nit just that\\'s simple , if you like it please upovte , if you have an better solution please share. \\n\\n```\\nvar intersect = function(nums1, nums2) {\\n    let cache = {};\\n    let result=[];\\n    for (let num of nums2){\\n        if (!cache[num])cache[num]=1;\\n        else cache[num]++;\\n    }\\n    for (let num of nums1){\\n        if (cache[num]){\\n            result.push(num);\\n            cache[num]--;\\n        }\\n    }\\n    \\n    return result ;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar intersect = function(nums1, nums2) {\\n    let cache = {};\\n    let result=[];\\n    for (let num of nums2){\\n        if (!cache[num])cache[num]=1;\\n        else cache[num]++;\\n    }\\n    for (let num of nums1){\\n        if (cache[num]){\\n            result.push(num);\\n            cache[num]--;\\n        }\\n    }\\n    \\n    return result ;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1680461,
                "title": "boring-python-solutions-4-ways",
                "content": "**1. Bruteforce approach:  [Not Recommended]**\\n\\n```\\nclass Solution(object):\\n    def intersect(self, nums1, nums2):\\n\\t\\tls = []\\n\\t\\tfor i in nums1:\\n\\t\\t\\tif i in nums2:\\n\\t\\t\\t\\tls.append(i)\\n\\t\\t\\t\\tnums2.remove(i)\\n\\t\\treturn ls\\n```\\n\\t\\t\\n**2. Two Pointers approach:**\\n\\n```\\nclass Solution(object):\\n    def intersect(self, nums1, nums2):\\n\\t\\tnums1 = sorted(nums1)\\n\\t\\tnums2 = sorted(nums2)\\n\\t\\tp1 = p2 = 0\\n\\t\\tresult = []\\n\\n\\t\\twhile p1<len(nums1) and p2<len(nums2):\\n\\t\\t\\tif nums1[p1]< nums2[p2]:\\n\\t\\t\\t\\tp1 += 1\\n\\t\\t\\telif nums1[p1]>nums2[p2]:\\n\\t\\t\\t\\tp2 += 1\\n\\t\\t\\telse:\\n\\t\\t\\t\\tresult.append(nums1[p1])\\n\\t\\t\\t\\tp1 += 1\\n\\t\\t\\t\\tp2 += 1\\n\\t\\treturn result\\n```\\n\\n**3. Using `counter` from collections module:**\\n\\n```\\nclass Solution(object):\\n    def intersect(self, nums1, nums2):\\n\\t\\ta = collections.Counter(num1)\\n\\t\\tb = collections.Counter(num2)\\n\\t\\treturn list((a&b).elements())\\n```\\n\\n**4. Using `dictionary` (for counting)**\\n\\n```\\nclass Solution(object):\\n    def intersect(self, nums1, nums2):\\n\\t\\tdic = {}\\n        result = []\\n        \\n        for i in nums1:\\n            if i in dic:\\n                dic[i] += 1\\n            else:\\n                dic[i] = 1\\n        \\n        for i in nums2:\\n            if i in dic and dic[i] > 0:\\n                result.append(i)\\n                dic[i] -= 1\\n                \\n        return result\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def intersect(self, nums1, nums2):\\n\\t\\tls = []\\n\\t\\tfor i in nums1:\\n\\t\\t\\tif i in nums2:\\n\\t\\t\\t\\tls.append(i)\\n\\t\\t\\t\\tnums2.remove(i)\\n\\t\\treturn ls\\n```\n```\\nclass Solution(object):\\n    def intersect(self, nums1, nums2):\\n\\t\\tnums1 = sorted(nums1)\\n\\t\\tnums2 = sorted(nums2)\\n\\t\\tp1 = p2 = 0\\n\\t\\tresult = []\\n\\n\\t\\twhile p1<len(nums1) and p2<len(nums2):\\n\\t\\t\\tif nums1[p1]< nums2[p2]:\\n\\t\\t\\t\\tp1 += 1\\n\\t\\t\\telif nums1[p1]>nums2[p2]:\\n\\t\\t\\t\\tp2 += 1\\n\\t\\t\\telse:\\n\\t\\t\\t\\tresult.append(nums1[p1])\\n\\t\\t\\t\\tp1 += 1\\n\\t\\t\\t\\tp2 += 1\\n\\t\\treturn result\\n```\n```\\nclass Solution(object):\\n    def intersect(self, nums1, nums2):\\n\\t\\ta = collections.Counter(num1)\\n\\t\\tb = collections.Counter(num2)\\n\\t\\treturn list((a&b).elements())\\n```\n```\\nclass Solution(object):\\n    def intersect(self, nums1, nums2):\\n\\t\\tdic = {}\\n        result = []\\n        \\n        for i in nums1:\\n            if i in dic:\\n                dic[i] += 1\\n            else:\\n                dic[i] = 1\\n        \\n        for i in nums2:\\n            if i in dic and dic[i] > 0:\\n                result.append(i)\\n                dic[i] -= 1\\n                \\n        return result\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1478743,
                "title": "easy-to-understand-c-with-comments",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        \\n        vector<int>res;    //this store the result that is answer\\n\\n      //sort the both arrays\\n        sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        \\n\\t\\t//now traverse parallely both arrays: break when small array ends\\n        for(int i=0,j=0;i<nums1.size() && j<nums2.size();)\\n        {\\n\\t\\t//if element is less in array 1 : increment and move ahead\\n            if(nums1[i]<nums2[j])\\n                i++;\\n            else if(nums1[i]>nums2[j]) //similarly if element of array 2 is less increment and move ahead\\n                j++;\\n            else //this means element is equal : that\\'s what we want \\uD83D\\uDE05push it in our result and increment for finding such equals \\n            {\\n                res.push_back(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        return res; // finally return the answer that\\'s it\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        \\n        vector<int>res;    //this store the result that is answer\\n\\n      //sort the both arrays\\n        sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        \\n\\t\\t//now traverse parallely both arrays: break when small array ends\\n        for(int i=0,j=0;i<nums1.size() && j<nums2.size();)\\n        {\\n\\t\\t//if element is less in array 1 : increment and move ahead\\n            if(nums1[i]<nums2[j])\\n                i++;\\n            else if(nums1[i]>nums2[j]) //similarly if element of array 2 is less increment and move ahead\\n                j++;\\n            else //this means element is equal : that\\'s what we want \\uD83D\\uDE05push it in our result and increment for finding such equals \\n            {\\n                res.push_back(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        return res; // finally return the answer that\\'s it\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1455783,
                "title": "python-solution",
                "content": "Python solution.\\nThe thing here is, I am aware that I have to search for every element in hash1 and nums2 but the python ```in``` operator has O(n) time, and inside a for loop it makes O(len(nums2)* n).\\nTo avoid this we can use the try-except block as if i is not in hash1 will throw some error, but the try-expect block is slower than the if, but makes the sol. O(n).\\n```\\nhash1 = {}\\nresult = []\\nfor i in nums1:\\n\\tif i in hash1:\\n\\t\\thash1[i]+=1\\n\\telse:\\n\\t\\thash1[i]=1\\nfor i in nums2:\\n\\tif i in hash1 and hash1[i]>0:\\n\\t\\tresult.append(i)\\n\\t\\thash1[i]-=1\\nreturn result\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```in```\n```\\nhash1 = {}\\nresult = []\\nfor i in nums1:\\n\\tif i in hash1:\\n\\t\\thash1[i]+=1\\n\\telse:\\n\\t\\thash1[i]=1\\nfor i in nums2:\\n\\tif i in hash1 and hash1[i]>0:\\n\\t\\tresult.append(i)\\n\\t\\thash1[i]-=1\\nreturn result\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1061924,
                "title": "faster-than-100-00-of-c-online-submissions",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        vector<int> v;\\n        int i=0,j=0;\\n        while(i<nums1.size() && j<nums2.size()){\\n            if(nums1[i]<nums2[j]){\\n                i++;\\n            }else if(nums1[i]>nums2[j]){\\n                j++;\\n            }else{\\n                v.push_back(nums1[i]);\\n                i++;j++;\\n            }\\n        }\\n        return v;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        vector<int> v;\\n        int i=0,j=0;\\n        while(i<nums1.size() && j<nums2.size()){\\n            if(nums1[i]<nums2[j]){\\n                i++;\\n            }else if(nums1[i]>nums2[j]){\\n                j++;\\n            }else{\\n                v.push_back(nums1[i]);\\n                i++;j++;\\n            }\\n        }\\n        return v;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 406394,
                "title": "dumb-o-n-java-solution-but-beats-93-83-w-hashmaps-and-good-comments",
                "content": "```java\\npublic int[] intersect(int[] nums1, int[] nums2) {\\n        //for result array intersection \\n        ArrayList<Integer> res = new ArrayList<Integer>();\\n        \\n        //hash set to keep track of counts of numbers\\n        HashMap<Integer, Integer> counts = new HashMap<Integer, Integer>();\\n        \\n        //iterate through nums1\\n        for (int i = 0; i < nums1.length; i++) {\\n            //check if already in counts\\n            if (counts.containsKey(nums1[i])) {\\n                //increment count\\n                counts.put(nums1[i], counts.get(nums1[i]) + 1);\\n            } else {\\n                //need to add it\\n                counts.put(nums1[i], 1);\\n            }\\n        }\\n        \\n        //iterate through nums2\\n        for (int i = 0; i < nums2.length; i++) {\\n            //check if counts contains this number, and that count is not 0\\n            if (counts.containsKey(nums2[i]) && counts.get(nums2[i]) != 0) {\\n                //add to result\\n                res.add(nums2[i]);\\n                //decrement count\\n                counts.put(nums2[i], counts.get(nums2[i]) - 1);\\n            }\\n        }\\n        \\n        //convert arraylist to array and result\\n        int[] result = new int[res.size()];\\n        for (int i = 0; i < res.size(); i++) {\\n            result[i] = res.get(i);\\n        }\\n        return result;\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```java\\npublic int[] intersect(int[] nums1, int[] nums2) {\\n        //for result array intersection \\n        ArrayList<Integer> res = new ArrayList<Integer>();\\n        \\n        //hash set to keep track of counts of numbers\\n        HashMap<Integer, Integer> counts = new HashMap<Integer, Integer>();\\n        \\n        //iterate through nums1\\n        for (int i = 0; i < nums1.length; i++) {\\n            //check if already in counts\\n            if (counts.containsKey(nums1[i])) {\\n                //increment count\\n                counts.put(nums1[i], counts.get(nums1[i]) + 1);\\n            } else {\\n                //need to add it\\n                counts.put(nums1[i], 1);\\n            }\\n        }\\n        \\n        //iterate through nums2\\n        for (int i = 0; i < nums2.length; i++) {\\n            //check if counts contains this number, and that count is not 0\\n            if (counts.containsKey(nums2[i]) && counts.get(nums2[i]) != 0) {\\n                //add to result\\n                res.add(nums2[i]);\\n                //decrement count\\n                counts.put(nums2[i], counts.get(nums2[i]) - 1);\\n            }\\n        }\\n        \\n        //convert arraylist to array and result\\n        int[] result = new int[res.size()];\\n        for (int i = 0; i < res.size(); i++) {\\n            result[i] = res.get(i);\\n        }\\n        return result;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 134762,
                "title": "sort-the-shorter-array-and-binary-search-each-element-of-longer-array-in-the-sorted-shorter-array",
                "content": "I haven\\'t found others posting similar solutions. So here I am. The idea is similar to the sort + binary search solution of Intersection of Two Arrays I. We first perform sort on the shorter array and then binary search each element of the longer array. The reason why the shorter array should be sorted is because it shows better time complexity. Suppose both arrays have lengths of m and n and the sort is performed on the 1st array. The the sort complexity is mlogm; and the binary search step total complexity is nlogm. The combined complexity is (m + n)logm. It\\'s not hard to see it is slightly better if m is chosen as the smaller of m and n. \\n\\nNow the problem is once a longer array element is found in the shorter array, we must mark it as visited in the shorter array. We can achieve this by adding a visited array. We also need to make slight modifications on the binary search so that it always tries to find the first non-visited element equal to the target.\\n\\n```\\n# Sort the shorter array and perform binary search\\n# for each element of the longer array in the sorted shorter one\\nclass Solution:\\n    def intersect(self, nums1, nums2):\\n        \"\"\"\\n        :type nums1: List[int]\\n        :type nums2: List[int]\\n        :rtype: List[int]\\n        \"\"\"\\n        # Corner cases\\n        if nums1 is None or nums2 is None:\\n            return\\n        \\n        # Determine which one is shorter and sort the shorter array\\n        if len(nums1) <= len(nums2):\\n            short, long = nums1, nums2\\n        else:\\n            short, long = nums2, nums1       \\n        short.sort()\\n        \\n        # A visited tag for elements already paired in the shorter array\\n        visited = [False for _ in short]\\n        rlt = []\\n        for num in long:\\n            if self._binarySearch(short, num, visited):\\n                rlt.append(num)\\n        return rlt\\n    \\n    def _binarySearch(self, arr, target, visited):\\n        \"\"\"\\n        Find the first element that is equal to target but not visited before\\n        \\n        Note this is achievable as the visited flags are always set from left\\n        to right for equal elements\\n        \"\"\"\\n        if arr is None or len(arr) == 0:\\n            return False\\n        \\n        start, end = 0, len(arr) - 1\\n        while start + 1 < end:\\n            mid = start + (end - start) // 2\\n            if arr[mid] == target:\\n                if not visited[mid]:\\n                    end = mid\\n                else:\\n                    start = mid\\n            elif arr[mid] < target:\\n                start = mid\\n            else:\\n                end = mid\\n                \\n        if arr[start] == target and not visited[start]:\\n            visited[start] = True\\n            return True\\n        if arr[end] == target and not visited[end]:\\n            visited[end] = True\\n            return True\\n        \\n        return False\\n```",
                "solutionTags": [],
                "code": "```\\n# Sort the shorter array and perform binary search\\n# for each element of the longer array in the sorted shorter one\\nclass Solution:\\n    def intersect(self, nums1, nums2):\\n        \"\"\"\\n        :type nums1: List[int]\\n        :type nums2: List[int]\\n        :rtype: List[int]\\n        \"\"\"\\n        # Corner cases\\n        if nums1 is None or nums2 is None:\\n            return\\n        \\n        # Determine which one is shorter and sort the shorter array\\n        if len(nums1) <= len(nums2):\\n            short, long = nums1, nums2\\n        else:\\n            short, long = nums2, nums1       \\n        short.sort()\\n        \\n        # A visited tag for elements already paired in the shorter array\\n        visited = [False for _ in short]\\n        rlt = []\\n        for num in long:\\n            if self._binarySearch(short, num, visited):\\n                rlt.append(num)\\n        return rlt\\n    \\n    def _binarySearch(self, arr, target, visited):\\n        \"\"\"\\n        Find the first element that is equal to target but not visited before\\n        \\n        Note this is achievable as the visited flags are always set from left\\n        to right for equal elements\\n        \"\"\"\\n        if arr is None or len(arr) == 0:\\n            return False\\n        \\n        start, end = 0, len(arr) - 1\\n        while start + 1 < end:\\n            mid = start + (end - start) // 2\\n            if arr[mid] == target:\\n                if not visited[mid]:\\n                    end = mid\\n                else:\\n                    start = mid\\n            elif arr[mid] < target:\\n                start = mid\\n            else:\\n                end = mid\\n                \\n        if arr[start] == target and not visited[start]:\\n            visited[start] = True\\n            return True\\n        if arr[end] == target and not visited[end]:\\n            visited[end] = True\\n            return True\\n        \\n        return False\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3029264,
                "title": "simple-easy-to-understand-in-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        \\n        sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n\\n        vector<int> ans;\\n        if(nums1.size()==0 || nums2.size()==0) return ans;\\n        int m = nums1.size();\\n        int n = nums2.size(); \\n\\n        int i=0,j=0;\\n        while(i<m && j<n){\\n        if(nums1[i]<nums2[j]){\\n            i++;\\n        }\\n        else if(nums1[i]>nums2[j]){\\n            j++;\\n        }\\n        else{\\n            ans.push_back(nums1[i]);\\n            i++;j++;\\n        }\\n    }   \\n\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        \\n        sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n\\n        vector<int> ans;\\n        if(nums1.size()==0 || nums2.size()==0) return ans;\\n        int m = nums1.size();\\n        int n = nums2.size(); \\n\\n        int i=0,j=0;\\n        while(i<m && j<n){\\n        if(nums1[i]<nums2[j]){\\n            i++;\\n        }\\n        else if(nums1[i]>nums2[j]){\\n            j++;\\n        }\\n        else{\\n            ans.push_back(nums1[i]);\\n            i++;j++;\\n        }\\n    }   \\n\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2751640,
                "title": "java-simple-solution-with-hashmap",
                "content": "\\uD83D\\uDC69 If you like this solution, please click UpVote button. If you have any question, feel free write as a comment. Thanks :)\\n\\n```\\n public static int[] intersect(int[] nums1, int[] nums2) {\\n        if (nums1 == null || nums2 == null || nums1.length == 0 || nums2.length == 0)\\n            return null;\\n        HashMap<Integer, Integer> map = new HashMap<>();\\n        List<Integer> result = new ArrayList<>();\\n        for (int num : nums1)\\n            if (map.containsKey(num))\\n                map.put(num, map.get(num) + 1);\\n            else\\n                map.put(num, 1);\\n        for (int num : nums2) {\\n            if (map.containsKey(num) && map.get(num) > 0) {\\n                result.add(num);\\n                int freq = map.get(num);\\n                freq--;\\n                map.put(num, freq);\\n            }\\n        }\\n        return listToArray(result);\\n    }\\n\\n    private static int[] listToArray(List<Integer> list) {\\n        int[] result = new int[list.size()];\\n        for (int i = 0; i < list.size(); i++) {\\n            result[i] = list.get(i);\\n        }\\n        return result;\\n    }",
                "solutionTags": [
                    "Array"
                ],
                "code": "\\uD83D\\uDC69 If you like this solution, please click UpVote button. If you have any question, feel free write as a comment. Thanks :)\\n\\n```\\n public static int[] intersect(int[] nums1, int[] nums2) {\\n        if (nums1 == null || nums2 == null || nums1.length == 0 || nums2.length == 0)\\n            return null;\\n        HashMap<Integer, Integer> map = new HashMap<>();\\n        List<Integer> result = new ArrayList<>();\\n        for (int num : nums1)\\n            if (map.containsKey(num))\\n                map.put(num, map.get(num) + 1);\\n            else\\n                map.put(num, 1);\\n        for (int num : nums2) {\\n            if (map.containsKey(num) && map.get(num) > 0) {\\n                result.add(num);\\n                int freq = map.get(num);\\n                freq--;\\n                map.put(num, freq);\\n            }\\n        }\\n        return listToArray(result);\\n    }\\n\\n    private static int[] listToArray(List<Integer> list) {\\n        int[] result = new int[list.size()];\\n        for (int i = 0; i < list.size(); i++) {\\n            result[i] = list.get(i);\\n        }\\n        return result;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 2675054,
                "title": "binary-search-other-approaches-c-c",
                "content": "# Approach\\nWe are going to solve the bigger array and iterate through the smaller array and going to find if there is a matching element via binary search. We\\'re going to remove the matching element from the bigger array.\\n\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int>* t1 = nums1.size()<nums2.size() ? &nums1:&nums2;\\n        vector<int>* t2 = nums1.size()<nums2.size() ? &nums2:&nums1;\\n        \\n        sort(t2->begin(),t2->end());\\n        vector<int> soln;\\n\\n        for (int x: *t1) {\\n            int start=0, end = t2->size()-1;\\n            while (start<=end) {\\n                int mid = start + (end-start)/2;\\n                if (t2->at(mid) > x) end = mid-1;\\n                else if (t2->at(mid) < x) start = mid+1;\\n                else {\\n                    soln.push_back(x);\\n                    t2->erase(t2->begin()+mid, t2->begin()+mid+1);\\n                    break;\\n                }\\n            }\\n        }\\n        return soln;\\n    }\\n};\\n```\\n\\n\\nThere is another approach without binary search:\\n\\n# Approach\\nWe first sort both arrays using quicksort and then proceed to match the elements which are same in both arrays. We update the old array(to reduce space complexity) and also update the returnSize pointer so that the required protion of the returned array is accepted for answer.\\n\\nIn case you\\'re wondering what is the cmp function for, it is there for the qsort function which requires a function to compare two values for it.\\n\\n# Complexity\\n- Time complexity:\\nO(nlogn)\\n\\n- Space complexity:\\nO(n)\\n\\n\\n# C++\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n\\n        sort(nums1.begin(), nums1.end());\\n        sort(nums2.begin(), nums2.end());\\n\\n        vector<int> soln;\\n        int i{0}, j{0};\\n\\n        while (i<nums1.size() && j<nums2.size()) {\\n            if (nums1[i]==nums2[j]) {\\n                soln.push_back(nums1[i]);\\n                i++, j++;\\n            }\\n            else if (nums1[i] > nums2[j]) j++;\\n            else i++;\\n        }\\n\\n        return soln;\\n\\n    }\\n};\\n```\\n\\n*Reminder: don\\'t forget to upvote the solution*\\n\\n\\n# C\\n```\\n int cmp(const void *a, const void *b)\\n {\\n     return (*(int*)a-*(int*)b);\\n }\\n\\nint* intersect(int* nums1, int nums1Size, int* nums2, int nums2Size, int* returnSize){\\n\\n    qsort(nums1, nums1Size, sizeof(int), cmp);\\n    qsort(nums2, nums2Size, sizeof(int), cmp);\\n\\n    int i=0, j=0, count=0;\\n\\n    while (i<nums1Size && j<nums2Size)\\n    {\\n        if (nums1[i]>nums2[j]) j++;\\n\\n        else if (nums1[i]<nums2[j]) i++;\\n        \\n        else if(nums1[i]==nums2[j])\\n        {\\n            nums1[count] = nums1[i];\\n            count++;\\n            i++;\\n            j++;\\n        }\\n    }\\n\\n    *returnSize = count;\\n    return nums1;\\n}\\n```\\n\\n*Please upvote to motivate me to write more solutions*",
                "solutionTags": [
                    "C++",
                    "C",
                    "Binary Search",
                    "Sorting"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int>* t1 = nums1.size()<nums2.size() ? &nums1:&nums2;\\n        vector<int>* t2 = nums1.size()<nums2.size() ? &nums2:&nums1;\\n        \\n        sort(t2->begin(),t2->end());\\n        vector<int> soln;\\n\\n        for (int x: *t1) {\\n            int start=0, end = t2->size()-1;\\n            while (start<=end) {\\n                int mid = start + (end-start)/2;\\n                if (t2->at(mid) > x) end = mid-1;\\n                else if (t2->at(mid) < x) start = mid+1;\\n                else {\\n                    soln.push_back(x);\\n                    t2->erase(t2->begin()+mid, t2->begin()+mid+1);\\n                    break;\\n                }\\n            }\\n        }\\n        return soln;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n\\n        sort(nums1.begin(), nums1.end());\\n        sort(nums2.begin(), nums2.end());\\n\\n        vector<int> soln;\\n        int i{0}, j{0};\\n\\n        while (i<nums1.size() && j<nums2.size()) {\\n            if (nums1[i]==nums2[j]) {\\n                soln.push_back(nums1[i]);\\n                i++, j++;\\n            }\\n            else if (nums1[i] > nums2[j]) j++;\\n            else i++;\\n        }\\n\\n        return soln;\\n\\n    }\\n};\\n```\n```\\n int cmp(const void *a, const void *b)\\n {\\n     return (*(int*)a-*(int*)b);\\n }\\n\\nint* intersect(int* nums1, int nums1Size, int* nums2, int nums2Size, int* returnSize){\\n\\n    qsort(nums1, nums1Size, sizeof(int), cmp);\\n    qsort(nums2, nums2Size, sizeof(int), cmp);\\n\\n    int i=0, j=0, count=0;\\n\\n    while (i<nums1Size && j<nums2Size)\\n    {\\n        if (nums1[i]>nums2[j]) j++;\\n\\n        else if (nums1[i]<nums2[j]) i++;\\n        \\n        else if(nums1[i]==nums2[j])\\n        {\\n            nums1[count] = nums1[i];\\n            count++;\\n            i++;\\n            j++;\\n        }\\n    }\\n\\n    *returnSize = count;\\n    return nums1;\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2342987,
                "title": "java-simpliest-solution",
                "content": "```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n      if(nums1.length == 0) return nums1;\\n      if(nums2.length == 0) return nums2;\\n      Arrays.sort(nums1);\\n      Arrays.sort(nums2);\\n      int i = 0, j = 0, k = 0;\\n      while(i < nums1.length && j < nums2.length) {\\n        if(nums1[i] < nums2[j]) {\\n          i ++;\\n        }\\n        else if(nums1[i] > nums2[j]) {\\n          j ++;\\n        }\\n        else {\\n          nums1[k ++] = nums1[i];\\n          i ++;\\n          j ++;\\n        }\\n      }\\n      return Arrays.copyOfRange(nums1, 0, k);  //This method creates a copy of elements, within a specified range of the original array.\\n    }\\n}\\n```\\n\\n# PLEASE UPVOTE IF IT WAS HELPFULL\\n",
                "solutionTags": [
                    "Java",
                    "Array",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n      if(nums1.length == 0) return nums1;\\n      if(nums2.length == 0) return nums2;\\n      Arrays.sort(nums1);\\n      Arrays.sort(nums2);\\n      int i = 0, j = 0, k = 0;\\n      while(i < nums1.length && j < nums2.length) {\\n        if(nums1[i] < nums2[j]) {\\n          i ++;\\n        }\\n        else if(nums1[i] > nums2[j]) {\\n          j ++;\\n        }\\n        else {\\n          nums1[k ++] = nums1[i];\\n          i ++;\\n          j ++;\\n        }\\n      }\\n      return Arrays.copyOfRange(nums1, 0, k);  //This method creates a copy of elements, within a specified range of the original array.\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2101724,
                "title": "q-350-binary-search-c-map-why-map-easy-understandble-full-explained-readable",
                "content": "First, we **sort** the nums2 vector for using **Binary Search**\\nthen we will iterate over nums1 and try to find for every element that it is present in nums2 or not.\\nFor checkingCondition(), every element from nums1 act as target and go for find target using Binary Search in nums2.\\nIf yes then push_back in ans vector and return ans;\\n\\n#### Why  **Map**?\\nWe have to maintain a map for count the frequency for all elements in nums2.\\nifnot map then it will give wrong answer because there is present a testcase like \\nInput:\\n[1,2,2,1]\\n[2]\\nOutput:\\n[2,2]\\nExpected:\\n[2]\\nIn this for both 2\\'s in nums1 checkcondition give true Output is [2,2] \\nBut on using map we check that Is it still findable if we have found earlier?.\\nso when we find target ,decrease the corresponding value by 1 from map.\\n\\nIf still solution  getting is needy condition then you can use  and understand \\nelse try atleast once \\n**!!UPVOTE ALSO!!**\\nit\\'s easy .\\n\\n### CODE\\n```\\nclass Solution {\\npublic:\\n    bool checkcondition(vector<int>& nums2,int target,unordered_map<int,int>& mp)\\n    {\\n        int low=0,high=nums2.size()-1,mid=low+(high-low)/2;\\n        while(low<=high)\\n        {\\n            mid=low+(high-low)/2;      // whynot ?(low+high)/2;try to avoid Runtime(overflow) error always be in safe side  \\n            if(nums2[mid]==target && mp[nums2[mid]]>0)\\n            {\\n                mp[nums2[mid]]--;\\n                return true;\\n            }\\n            else if(nums2[mid]>target)\\n            {\\n                high=mid-1;\\n            }\\n            else\\n            {\\n                low=mid+1;\\n            }\\n        }\\n        return false;\\n    }\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) \\n    {\\n        unordered_map<int,int> mp;\\n        for(auto e:nums2)\\n        {\\n            mp[e]++;\\n        }\\n        vector<int> ans;\\n        sort(nums2.begin(),nums2.end());\\n        for(int i=0;i<nums1.size();i++)\\n        {\\n            if(checkcondition(nums2,nums1[i],mp))\\n            {\\n                ans.push_back(nums1[i]);\\n            }\\n        }\\n        \\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Binary Tree"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool checkcondition(vector<int>& nums2,int target,unordered_map<int,int>& mp)\\n    {\\n        int low=0,high=nums2.size()-1,mid=low+(high-low)/2;\\n        while(low<=high)\\n        {\\n            mid=low+(high-low)/2;      // whynot ?(low+high)/2;try to avoid Runtime(overflow) error always be in safe side  \\n            if(nums2[mid]==target && mp[nums2[mid]]>0)\\n            {\\n                mp[nums2[mid]]--;\\n                return true;\\n            }\\n            else if(nums2[mid]>target)\\n            {\\n                high=mid-1;\\n            }\\n            else\\n            {\\n                low=mid+1;\\n            }\\n        }\\n        return false;\\n    }\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) \\n    {\\n        unordered_map<int,int> mp;\\n        for(auto e:nums2)\\n        {\\n            mp[e]++;\\n        }\\n        vector<int> ans;\\n        sort(nums2.begin(),nums2.end());\\n        for(int i=0;i<nums1.size();i++)\\n        {\\n            if(checkcondition(nums2,nums1[i],mp))\\n            {\\n                ans.push_back(nums1[i]);\\n            }\\n        }\\n        \\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1495437,
                "title": "python-explained-easy-to-understand",
                "content": "## Solution\\nSimilar to problem 0349, but here we can use hash-table with number of occurrences or in python we can use Counter function. If our data is sorted, we can use two pointers approach, complexity will be O(m+n) and with additional O(1) memory, if we do not consider answer as memory. If one of arrays is much bigger than another, we can use binary search with complexity O(n log m). (note, that BS is quite tricky here, because we need to handle duplicates, we need to find the left-most matching number. Next time we perform binary search, the low should start from previously found index + 1). If nums2 is stored on disk, then we can put nums1 into hash table and use chunks of nums1. If nums1 is also big, we need to sort them, using external sort and use two pointers .\\n\\n## Code\\n\\n```\\nclass Solution:\\n    def intersect(self, nums1: list[int], nums2: list[int]) -> list[int]:\\n        counter1, counter2 = Counter(nums1), Counter(nums2)\\n        counter = counter1 & counter2\\n        return list(counter.elements())\\n```\\n\\nIf you are running on local machine then should import Counter\\n```from collections import Counter```\\n\\n**Please Give it a Thumbs Up , it helped you , and also you can add your queries down below.**",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Hash Table"
                ],
                "code": "```\\nclass Solution:\\n    def intersect(self, nums1: list[int], nums2: list[int]) -> list[int]:\\n        counter1, counter2 = Counter(nums1), Counter(nums2)\\n        counter = counter1 & counter2\\n        return list(counter.elements())\\n```\n```from collections import Counter```",
                "codeTag": "Java"
            },
            {
                "id": 1469235,
                "title": "4ms-c-solution",
                "content": "```\\nint* intersect(int* nums1, int nums1Size, int* nums2, int nums2Size, int* returnSize){\\n    int count1[1001] = {0},count2[1001] = {0};\\n    for(int i = 0 ; i < nums1Size ; i++){\\n        count1[nums1[i]]++;\\n    }\\n    int ptr = 0;\\n    int* ans = (int*)malloc(sizeof(int)*1001);\\n    for(int i = 0 ; i < nums2Size ; i++){\\n        if(count2[nums2[i]] < count1[nums2[i]]){\\n            count2[nums2[i]]++;\\n            ans[ptr++] = nums2[i];\\n        }\\n    }\\n    *returnSize = ptr;\\n    return ans;\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint* intersect(int* nums1, int nums1Size, int* nums2, int nums2Size, int* returnSize){\\n    int count1[1001] = {0},count2[1001] = {0};\\n    for(int i = 0 ; i < nums1Size ; i++){\\n        count1[nums1[i]]++;\\n    }\\n    int ptr = 0;\\n    int* ans = (int*)malloc(sizeof(int)*1001);\\n    for(int i = 0 ; i < nums2Size ; i++){\\n        if(count2[nums2[i]] < count1[nums2[i]]){\\n            count2[nums2[i]]++;\\n            ans[ptr++] = nums2[i];\\n        }\\n    }\\n    *returnSize = ptr;\\n    return ans;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 764868,
                "title": "java-easy-solution-2ms-98-fast",
                "content": "If you found the solution helpful , kindly upvote. :)\\n\\n```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        ArrayList<Integer> arr= new ArrayList<Integer>();\\n    \\tArrays.sort(nums1); Arrays.sort(nums2);\\n        int i=0, j=0;\\n        \\n        while(i<nums1.length && j<nums2.length)\\n        {\\n            if(nums1[i]==nums2[j])\\n            {                \\n                arr.add(nums1[i]);\\n                i++; j++; \\n            }\\n            else if(nums1[i]> nums2[j])\\n                j++;\\n            else\\n                i++;\\n        }\\n        \\n    \\tint[] res= new int[arr.size()];\\n    \\tfor(int k=0;k <res.length; k++)\\n    \\t\\tres[k]=arr.get(k);\\n    \\treturn res;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        ArrayList<Integer> arr= new ArrayList<Integer>();\\n    \\tArrays.sort(nums1); Arrays.sort(nums2);\\n        int i=0, j=0;\\n        \\n        while(i<nums1.length && j<nums2.length)\\n        {\\n            if(nums1[i]==nums2[j])\\n            {                \\n                arr.add(nums1[i]);\\n                i++; j++; \\n            }\\n            else if(nums1[i]> nums2[j])\\n                j++;\\n            else\\n                i++;\\n        }\\n        \\n    \\tint[] res= new int[arr.size()];\\n    \\tfor(int k=0;k <res.length; k++)\\n    \\t\\tres[k]=arr.get(k);\\n    \\treturn res;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 412597,
                "title": "javascript-faster-than-95-javascript-solutions",
                "content": "Runtime: 52 ms, faster than 95.30% of JavaScript online submissions for Intersection of Two Arrays II.\\nMemory Usage: 34.7 MB, less than 81.48% of JavaScript online submissions for Intersection of Two Arrays II.\\n```\\nvar intersect = function (nums1, nums2) {\\n  let solution = [];\\n  if (nums1.length < nums2.length) {\\n    return intersect(nums2, nums1);\\n  }\\n  const obj = nums1.reduce((acc, num) => {\\n    acc[num] = acc[num] + 1 || 1;\\n    return acc;\\n  }, {});\\n  for (let i = 0; i < nums2.length; i++) {\\n    if (obj[nums2[i]] !== undefined && obj[nums2[i]] > 0) {\\n      obj[nums2[i]] = obj[nums2[i]] - 1;\\n      solution.push(nums2[i]);\\n    }\\n  }\\n\\n  return solution;\\n};",
                "solutionTags": [],
                "code": "Runtime: 52 ms, faster than 95.30% of JavaScript online submissions for Intersection of Two Arrays II.\\nMemory Usage: 34.7 MB, less than 81.48% of JavaScript online submissions for Intersection of Two Arrays II.\\n```\\nvar intersect = function (nums1, nums2) {\\n  let solution = [];\\n  if (nums1.length < nums2.length) {\\n    return intersect(nums2, nums1);\\n  }\\n  const obj = nums1.reduce((acc, num) => {\\n    acc[num] = acc[num] + 1 || 1;\\n    return acc;\\n  }, {});\\n  for (let i = 0; i < nums2.length; i++) {\\n    if (obj[nums2[i]] !== undefined && obj[nums2[i]] > 0) {\\n      obj[nums2[i]] = obj[nums2[i]] - 1;\\n      solution.push(nums2[i]);\\n    }\\n  }\\n\\n  return solution;\\n};",
                "codeTag": "Unknown"
            },
            {
                "id": 235257,
                "title": "swift-solution",
                "content": "```swift\\nclass Solution {\\n    func intersect(_ nums1: [Int], _ nums2: [Int]) -> [Int] {\\n        var dict = [Int: Int]()\\n        var results = [Int]()\\n\\n        for num in nums1 {\\n            dict[num, default: 0] += 1\\n        }\\n        \\n        for num in nums2 {\\n            guard let count = dict[num], count > 0 else { continue }\\n            results.append(num)\\n            dict[num] = count - 1\\n        }\\n        \\n        return results\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```swift\\nclass Solution {\\n    func intersect(_ nums1: [Int], _ nums2: [Int]) -> [Int] {\\n        var dict = [Int: Int]()\\n        var results = [Int]()\\n\\n        for num in nums1 {\\n            dict[num, default: 0] += 1\\n        }\\n        \\n        for num in nums2 {\\n            guard let count = dict[num], count > 0 else { continue }\\n            results.append(num)\\n            dict[num] = count - 1\\n        }\\n        \\n        return results\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 82369,
                "title": "concise-c-solution-2-line",
                "content": "    public class Solution {\\n        public int[] Intersect(int[] nums1, int[] nums2) {\\n            var map1 = nums1.GroupBy(n => n).ToDictionary(g => g.Key, g => g.Count());\\n            return nums2.Where(n => map1.ContainsKey(n) && map1[n]-- > 0).ToArray();\\n        }\\n    }",
                "solutionTags": [],
                "code": "class Solution {\\n        public int[] Intersect(int[] nums1, int[] nums2) {\\n            var map1 = nums1.GroupBy(n => n).ToDictionary(g => g.Key, g => g.Count());\\n            return nums2.Where(n => map1.ContainsKey(n) && map1[n]-- > 0).ToArray();\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 82449,
                "title": "50ms-python-solution-using-two-pointers",
                "content": "    def intersect(self, nums1, nums2):\\n        \"\"\"\\n        :type nums1: List[int]\\n        :type nums2: List[int]\\n        :rtype: List[int]\\n        \"\"\"\\n        result = []\\n        \\n        # If the lists are sorted, then the time complexity is O(N)\\n        # Otherwise it is O(NlgN)\\n        \\n        if not all(nums1[i] <= nums1[i+1] for i in range(len(nums1) - 1)):\\n            nums1.sort()\\n        if not all(nums2[i] <= nums2[i+1] for i in range(len(nums2) - 1)):\\n            nums2.sort()\\n        \\n        # Two pointers\\n        p1, p2 = 0, 0 \\n        while p1 < len(nums1) and p2 < len(nums2):\\n            diff = nums1[p1] - nums2[p2]\\n            \\n            if diff == 0:\\n                result.append(nums1[p1])\\n                p1 += 1\\n                p2 += 1\\n\\n            elif diff < 0:\\n                p1 += 1\\n\\n            else:\\n                p2 += 1\\n        \\n        return result",
                "solutionTags": [
                    "Python",
                    "Two Pointers"
                ],
                "code": "    def intersect(self, nums1, nums2):\\n        \"\"\"\\n        :type nums1: List[int]\\n        :type nums2: List[int]\\n        :rtype: List[int]\\n        \"\"\"\\n        result = []\\n        \\n        # If the lists are sorted, then the time complexity is O(N)\\n        # Otherwise it is O(NlgN)\\n        \\n        if not all(nums1[i] <= nums1[i+1] for i in range(len(nums1) - 1)):\\n            nums1.sort()\\n        if not all(nums2[i] <= nums2[i+1] for i in range(len(nums2) - 1)):\\n            nums2.sort()\\n        \\n        # Two pointers\\n        p1, p2 = 0, 0 \\n        while p1 < len(nums1) and p2 < len(nums2):\\n            diff = nums1[p1] - nums2[p2]\\n            \\n            if diff == 0:\\n                result.append(nums1[p1])\\n                p1 += 1\\n                p2 += 1\\n\\n            elif diff < 0:\\n                p1 += 1\\n\\n            else:\\n                p2 += 1\\n        \\n        return result",
                "codeTag": "Python3"
            },
            {
                "id": 82453,
                "title": "c-two-pointers-8ms",
                "content": "    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n    \\tsort(nums1.begin(),nums1.end());\\n    \\tsort(nums2.begin(),nums2.end());\\n    \\tint i1=0,i2=0;\\n    \\tint n1=nums1.size(),n2=nums2.size();\\n    \\tvector<int>res;\\n    \\twhile(i1<n1&&i2<n2) {\\n    \\t\\tif(nums1[i1]==nums2[i2]) {\\n    \\t\\t\\tres.push_back(nums1[i1]);\\n    \\t\\t\\ti1++,i2++;\\n    \\t\\t} \\n    \\t\\telse if(nums1[i1]>nums2[i2]) {\\n    \\t\\t\\ti2++;\\n    \\t\\t} \\n    \\t\\telse {\\n    \\t\\t\\ti1++;\\n    \\t\\t}\\n    \\t}\\n    \\treturn res;\\n    }",
                "solutionTags": [],
                "code": "    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n    \\tsort(nums1.begin(),nums1.end());\\n    \\tsort(nums2.begin(),nums2.end());\\n    \\tint i1=0,i2=0;\\n    \\tint n1=nums1.size(),n2=nums2.size();\\n    \\tvector<int>res;\\n    \\twhile(i1<n1&&i2<n2) {\\n    \\t\\tif(nums1[i1]==nums2[i2]) {\\n    \\t\\t\\tres.push_back(nums1[i1]);\\n    \\t\\t\\ti1++,i2++;\\n    \\t\\t} \\n    \\t\\telse if(nums1[i1]>nums2[i2]) {\\n    \\t\\t\\ti2++;\\n    \\t\\t} \\n    \\t\\telse {\\n    \\t\\t\\ti1++;\\n    \\t\\t}\\n    \\t}\\n    \\treturn res;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 3397590,
                "title": "simple-c-hash-map-easy-to-understand",
                "content": "\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n1. First we have to find the array whose size is smaller.\\n2. By using the unordered_map we calculate the frequency/ count for every element of an array.(i.e smaller in size)\\n3. Then we find the element of second array(i.e greater in size) in unordered_map:\\n- If it is found in  unordered_map we push that element of an array in vector(ans) and decrement the frequency/count of that element in unordered_map. \\n- We also check freq > 0 then push the element into vector(ans) and decrement the frequency by 1.\\n\\n***NOTE***: If above both condition are true then only we push the element in the vector. \\n\\n# Complexity\\n- Time complexity: O(m + n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(m + n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        \\n        vector<int>ans; // answer vector \\n\\n        if(nums1.size() > nums2.size()) return intersect(nums2, nums1);\\n        unordered_map<int, int>mp;\\n        \\n        for(int i = 0; i < nums1.size(); i++)\\n        {\\n            mp[nums1[i]]++; // here we count the frequency for every element \\n        }\\n\\n        for(int j = 0; j < nums2.size(); j++)\\n        {//if the element is found in the unordered_map we decrement the count by 1 and push that element in output vector along with checking the condition that count > 0;\\n            if(mp.find(nums2[j]) != mp.end() && mp[nums2[j]] > 0)\\n            {\\n                ans.push_back(nums2[j]);\\n                mp[nums2[j]]--;\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Hash Table"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        \\n        vector<int>ans; // answer vector \\n\\n        if(nums1.size() > nums2.size()) return intersect(nums2, nums1);\\n        unordered_map<int, int>mp;\\n        \\n        for(int i = 0; i < nums1.size(); i++)\\n        {\\n            mp[nums1[i]]++; // here we count the frequency for every element \\n        }\\n\\n        for(int j = 0; j < nums2.size(); j++)\\n        {//if the element is found in the unordered_map we decrement the count by 1 and push that element in output vector along with checking the condition that count > 0;\\n            if(mp.find(nums2[j]) != mp.end() && mp[nums2[j]] > 0)\\n            {\\n                ans.push_back(nums2[j]);\\n                mp[nums2[j]]--;\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2758971,
                "title": "c-easy-solution",
                "content": "```\\n        vector<int> ans;\\n        sort(a.begin(),a.end());\\n        sort(b.begin(),b.end());\\n        \\n        int i=0,j=0;\\n        int n=a.size();\\n        int m=b.size();\\n        \\n        while(i<n && j<m)\\n        {\\n            if(a[i]==b[j])\\n            {\\n                ans.push_back(a[i]);\\n                i++;\\n                j++;\\n            }\\n            else if(a[i]>b[j])\\n            {\\n                j++;\\n            }\\n            else\\n            {\\n                i++;\\n            }\\n        }\\n      return ans;        \\n\\n```",
                "solutionTags": [],
                "code": "```\\n        vector<int> ans;\\n        sort(a.begin(),a.end());\\n        sort(b.begin(),b.end());\\n        \\n        int i=0,j=0;\\n        int n=a.size();\\n        int m=b.size();\\n        \\n        while(i<n && j<m)\\n        {\\n            if(a[i]==b[j])\\n            {\\n                ans.push_back(a[i]);\\n                i++;\\n                j++;\\n            }\\n            else if(a[i]>b[j])\\n            {\\n                j++;\\n            }\\n            else\\n            {\\n                i++;\\n            }\\n        }\\n      return ans;        \\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2202773,
                "title": "python3-solution-using-counters-faster-than-90",
                "content": "```\\nfrom collections import Counter\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        counter = Counter(nums1)\\n        \\n        result = []\\n        for i in nums2:\\n            k = counter.get(i)\\n            if k!=None and k > 0:\\n                counter[i]-=1\\n                result.append(i)\\n        \\n        return result\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nfrom collections import Counter\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        counter = Counter(nums1)\\n        \\n        result = []\\n        for i in nums2:\\n            k = counter.get(i)\\n            if k!=None and k > 0:\\n                counter[i]-=1\\n                result.append(i)\\n        \\n        return result\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1941637,
                "title": "python-100-faster-than-other-solution-leetcode-350",
                "content": "Please Upvote if you like it...\\n\\n```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        dict1 = {}\\n        for i in nums1:\\n            if i in dict1:\\n                dict1[i] +=1\\n            else:\\n                dict1[i] = 1\\n        res = []\\n        for i in nums2:\\n            if i in dict1 and dict1[i]>0:\\n                res.append(i)\\n                dict1[i] -=1\\n        return res\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        dict1 = {}\\n        for i in nums1:\\n            if i in dict1:\\n                dict1[i] +=1\\n            else:\\n                dict1[i] = 1\\n        res = []\\n        for i in nums2:\\n            if i in dict1 and dict1[i]>0:\\n                res.append(i)\\n                dict1[i] -=1\\n        return res\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1757307,
                "title": "3-ways-java-solution-wrost-to-best-approches",
                "content": "```\\n//1. Using HashMap || 8ms\\n\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        HashMap<Integer, Integer> mp = new HashMap<>();\\n        for(int i=0;i<nums1.length;i++)\\n        {\\n            if(mp.containsKey(nums1[i])){\\n                mp.put(nums1[i],mp.get(nums1[i])+1);\\n            }\\n            else\\n                 mp.put(nums1[i],1);\\n        }\\n       \\n        ArrayList<Integer> ans=new ArrayList<>();\\n        for(int i=0;i<nums2.length;i++)\\n        {\\n            if(mp.containsKey(nums2[i]) && mp.get(nums2[i])>0){\\n                ans.add(nums2[i]);\\n                mp.put(nums2[i],mp.get(nums2[i])-1);\\n            }\\n        }\\n        \\n        return ans.stream().mapToInt(i -> i).toArray();\\n    }\\n}\\n\\n\\n//2. Using Two-Pointer || 2ms\\n\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        \\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        ArrayList<Integer> list=new ArrayList();\\n        int m=nums1.length-1,n=nums2.length-1;\\n        while(m>-1 && n>-1)\\n        {\\n            if(nums1[m]<nums2[n])\\n            {n--;}\\n            else if(nums1[m]>nums2[n])\\n            {m--;}\\n            else\\n            {\\n                list.add(nums1[m--]);\\n                n--;\\n            }\\n        }\\n        int ttt=list.size();\\n        int arr[]=new int[ttt];\\n        for(int k=0;k<ttt;k++)\\n            arr[k]=list.get(k);\\n        return arr;\\n    }\\n}\\n\\n//3. Using ArrayList Only || 0-1ms\\n\\n    class Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        int max = 1000;\\n        int[] numbers = new int[max + 1];\\n        ArrayList<Integer> List = new ArrayList<>();\\n        for (int num : nums1) {\\n            numbers[num]++;\\n        }\\n        for (int num : nums2) {\\n            if (numbers[num] > 0) {\\n                List.add(num);\\n                numbers[num]--;\\n            }\\n        }\\n        int[] ansArr = new int[List.size()];\\n        for (int i = 0; i < List.size(); i++) {\\n            ansArr[i] = List.get(i);\\n        }\\n        return ansArr;\\n    }\\n    }\\n\\t```\\n\\t\\n\\t**Please upvote, if you liked my post.**",
                "solutionTags": [
                    "Array",
                    "Two Pointers"
                ],
                "code": "```\\n//1. Using HashMap || 8ms\\n\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        HashMap<Integer, Integer> mp = new HashMap<>();\\n        for(int i=0;i<nums1.length;i++)\\n        {\\n            if(mp.containsKey(nums1[i])){\\n                mp.put(nums1[i],mp.get(nums1[i])+1);\\n            }\\n            else\\n                 mp.put(nums1[i],1);\\n        }\\n       \\n        ArrayList<Integer> ans=new ArrayList<>();\\n        for(int i=0;i<nums2.length;i++)\\n        {\\n            if(mp.containsKey(nums2[i]) && mp.get(nums2[i])>0){\\n                ans.add(nums2[i]);\\n                mp.put(nums2[i],mp.get(nums2[i])-1);\\n            }\\n        }\\n        \\n        return ans.stream().mapToInt(i -> i).toArray();\\n    }\\n}\\n\\n\\n//2. Using Two-Pointer || 2ms\\n\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        \\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        ArrayList<Integer> list=new ArrayList();\\n        int m=nums1.length-1,n=nums2.length-1;\\n        while(m>-1 && n>-1)\\n        {\\n            if(nums1[m]<nums2[n])\\n            {n--;}\\n            else if(nums1[m]>nums2[n])\\n            {m--;}\\n            else\\n            {\\n                list.add(nums1[m--]);\\n                n--;\\n            }\\n        }\\n        int ttt=list.size();\\n        int arr[]=new int[ttt];\\n        for(int k=0;k<ttt;k++)\\n            arr[k]=list.get(k);\\n        return arr;\\n    }\\n}\\n\\n//3. Using ArrayList Only || 0-1ms\\n\\n    class Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        int max = 1000;\\n        int[] numbers = new int[max + 1];\\n        ArrayList<Integer> List = new ArrayList<>();\\n        for (int num : nums1) {\\n            numbers[num]++;\\n        }\\n        for (int num : nums2) {\\n            if (numbers[num] > 0) {\\n                List.add(num);\\n                numbers[num]--;\\n            }\\n        }\\n        int[] ansArr = new int[List.size()];\\n        for (int i = 0; i < List.size(); i++) {\\n            ansArr[i] = List.get(i);\\n        }\\n        return ansArr;\\n    }\\n    }\\n\\t```",
                "codeTag": "Java"
            },
            {
                "id": 1520469,
                "title": "c-3-approaches-with-comments",
                "content": "1)Binary Search: \\n\\n```\\nclass Solution {\\npublic:\\n    int binsearch(vector<int>a,int key){    // Binary Search Algorithm\\n        int l=0,u=a.size()-1,mid;\\n        while(l<=u){\\n            mid=l+(u-l)/2;\\n            if(a[mid]==key) return mid;\\n            else if(a[mid]>key) u=mid-1;\\n            else l=mid+1;\\n        }\\n        return -1;\\n    }\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n\\t\\n\\t// if nums1 is larger than nums2 then swap\\n        if(nums1.size()>nums2.size()) return intersect(nums2,nums1);\\n\\t\\t\\n        vector<int>arr;\\n        sort(nums2.begin(),nums2.end());  // sort the larger vector for binaryu search\\n        for(auto i:nums1){\\n            int index=binsearch(nums2,i);\\n            if(index>=0){\\n                arr.push_back(i);\\n                nums2.erase(nums2.begin()+index);  // delete the pushed element\\n            }\\n        }\\n        return arr;\\n    }\\n};\\n```\\n\\n2) Two-Pointer:\\n\\n```\\nclass Solution {\\npublic:\\n    \\n    // two-pointer and sorting\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int>arr;\\n        int m=nums1.size(),n=nums2.size(),i=0,j=0;\\n        sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        while(i<m && j<n){\\n            if(nums1[i]==nums2[j]){   // if both elements in the vector are equal push and increment i and j\\n                arr.push_back(nums1[i]);\\n                i++,j++;\\n            }\\n            else if(nums1[i]<nums2[j]) i++;  // if nums1 element < nums2 element then increment i else j\\n            else j++;\\n        }\\n        return arr;\\n    }\\n};\\n```\\n\\n3)Hashing:\\n\\n```\\nclass Solution {\\npublic:\\n    \\n    // Hashing\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int>arr;\\n        map<int,int>mp;\\n        if(nums1.size()>nums2.size()){\\n            vector<int>tmp=nums1;\\n            nums1=nums2;\\n            nums2=tmp;\\n        }\\n        for(int i:nums1) mp[i]++;\\n        for(int j:nums2){\\n            if(mp.find(j)!=mp.end() && mp[j]>0){\\n                arr.push_back(j);\\n                mp[j]--;\\n            }\\n        }\\n        return arr;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Two Pointers",
                    "Binary Tree"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int binsearch(vector<int>a,int key){    // Binary Search Algorithm\\n        int l=0,u=a.size()-1,mid;\\n        while(l<=u){\\n            mid=l+(u-l)/2;\\n            if(a[mid]==key) return mid;\\n            else if(a[mid]>key) u=mid-1;\\n            else l=mid+1;\\n        }\\n        return -1;\\n    }\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n\\t\\n\\t// if nums1 is larger than nums2 then swap\\n        if(nums1.size()>nums2.size()) return intersect(nums2,nums1);\\n\\t\\t\\n        vector<int>arr;\\n        sort(nums2.begin(),nums2.end());  // sort the larger vector for binaryu search\\n        for(auto i:nums1){\\n            int index=binsearch(nums2,i);\\n            if(index>=0){\\n                arr.push_back(i);\\n                nums2.erase(nums2.begin()+index);  // delete the pushed element\\n            }\\n        }\\n        return arr;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    \\n    // two-pointer and sorting\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int>arr;\\n        int m=nums1.size(),n=nums2.size(),i=0,j=0;\\n        sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        while(i<m && j<n){\\n            if(nums1[i]==nums2[j]){   // if both elements in the vector are equal push and increment i and j\\n                arr.push_back(nums1[i]);\\n                i++,j++;\\n            }\\n            else if(nums1[i]<nums2[j]) i++;  // if nums1 element < nums2 element then increment i else j\\n            else j++;\\n        }\\n        return arr;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    \\n    // Hashing\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int>arr;\\n        map<int,int>mp;\\n        if(nums1.size()>nums2.size()){\\n            vector<int>tmp=nums1;\\n            nums1=nums2;\\n            nums2=tmp;\\n        }\\n        for(int i:nums1) mp[i]++;\\n        for(int j:nums2){\\n            if(mp.find(j)!=mp.end() && mp[j]>0){\\n                arr.push_back(j);\\n                mp[j]--;\\n            }\\n        }\\n        return arr;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1468338,
                "title": "python-elegant-clean-and-simplest-one-liner-faster-than-99-18-memory-less-than-98-others",
                "content": "All solutions are O(m+n) time.  Please feel free to ask questions or give suggestions. **Upvote** if you liked any of the solutions.\\n\\n**Solution 1**: Elegant and very simple, but lazy evaluation (Memory better than 90%)\\n\\nAlways a great idea to read docs : ). Intersection returns the minimum of corresponding counts and the elements method returns a generator which would have resulted in the corresponding counts.\\nhttps://docs.python.org/3/library/collections.html#collections.Counter\\n```\\ndef intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n\\t# Find common values (with counts) using intersection on Counters and then use the elements method to get list of elements where they are repeated count times\\n\\treturn (Counter(nums1) & Counter(nums2)).elements()\\n```\\n\\n**Solution 2**: Using List comprehension, faster than 99.18% of solutions\\n```\\ndef intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n    counts1 = Counter(nums1)\\n    counts2 = Counter(nums2)\\n\\t\\t\\n\\t# Repeat each value in counts1(either works), its minimum count number of times\\n    return [key for key in counts1 for _ in range(min(counts1[key], counts2[key]))]\\n```\\n**Size Disparity**: If sometimes nums2 has very few unique elements compared to nums1, could be modified to:\\n```\\ndef intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n    counts1 = Counter(nums1)\\n    counts2 = Counter(nums2)\\n\\t\\t\\n\\tsmaller = counts1 if len(counts1)<=len(counts2) else counts2\\n\\t\\n\\t# Repeat each value in the smaller list, its minimum count number of times\\n    return [key for key in smaller for _ in range(min(counts1[key], counts2[key]))]\\n```\\n\\n**Solution 3**:  Combination of the 2 approaches using itertools.chain (Memory - 90%, Speed-87%)\\n```\\ndef intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n\\t# Each value in the intersection of the 2 lists is repeated its intersection-count number of times in its own list\\n\\t# All of these are combined into a list and then used to generate an iterator\\n    return chain.from_iterable([[val]*count for val, count in (Counter(nums1) & Counter(nums2)).items()])\\n```\\n\\n**Solution 4**: O(min(m,n)) space, single pass, less memory than 98% of solutions\\n\\n```\\ndef intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        \\n\\t# Make nums1 the smaller one\\n     if len(nums2)<len(nums1):\\n        nums1, nums2 = nums2, nums1\\n            \\n     out = []\\n     # Get counts for the smaller list\\n     counts1 = Counter(nums1)\\n     for val in nums2:\\n         # We have unused references of val that were seen in nums1\\n         if val in counts1 and counts1[val]:\\n             counts1[val] -= 1\\n             out.append(val)\\n\\t\\t\\n     return out\\n```\\n\\n**Solution For Sorted lists**: Optimum memory, Single pass\\n```\\ndef intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n\\t\"\"\" Assumes nums1 and nums2 are sorted \"\"\"\\n\\t out = []\\n     i = j = 0\\n     while i<len(nums1) and j<len(nums2):\\n         if (val1:= nums1[i])==(val2:= nums2[j]):\\n\\t\\t\\t# Indices where element stops repeating\\n            next_i = next((k for k in range(i+1, len(nums1)) if nums1[k]!=val1), len(nums1))\\n            next_j = next((k for k in range(j+1, len(nums2)) if nums2[k]!=val1), len(nums2))\\n \\n            out.extend([val1]*min(next_i-i, next_j-j))\\n\\t\\t\\t\\t\\n            i = next_i\\n            j = next_j\\n         elif val1<val2:\\n\\t\\t\\t# Index in nums1 where element stops being smaller than value at index j in nums2\\n            i = next((k for k in range(i+1, len(nums1)) if nums1[k]>=val2), len(nums1))\\n         else:\\n\\t\\t\\t# Index in nums2 where element stops being smaller than value at index i in nums1\\n            j = next((k for k in range(j+1, len(nums2)) if nums2[k]>=val1), len(nums1))\\n        \\n    return out\\n```\\n\\n\\n",
                "solutionTags": [],
                "code": "```\\ndef intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n\\t# Find common values (with counts) using intersection on Counters and then use the elements method to get list of elements where they are repeated count times\\n\\treturn (Counter(nums1) & Counter(nums2)).elements()\\n```\n```\\ndef intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n    counts1 = Counter(nums1)\\n    counts2 = Counter(nums2)\\n\\t\\t\\n\\t# Repeat each value in counts1(either works), its minimum count number of times\\n    return [key for key in counts1 for _ in range(min(counts1[key], counts2[key]))]\\n```\n```\\ndef intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n    counts1 = Counter(nums1)\\n    counts2 = Counter(nums2)\\n\\t\\t\\n\\tsmaller = counts1 if len(counts1)<=len(counts2) else counts2\\n\\t\\n\\t# Repeat each value in the smaller list, its minimum count number of times\\n    return [key for key in smaller for _ in range(min(counts1[key], counts2[key]))]\\n```\n```\\ndef intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n\\t# Each value in the intersection of the 2 lists is repeated its intersection-count number of times in its own list\\n\\t# All of these are combined into a list and then used to generate an iterator\\n    return chain.from_iterable([[val]*count for val, count in (Counter(nums1) & Counter(nums2)).items()])\\n```\n```\\ndef intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        \\n\\t# Make nums1 the smaller one\\n     if len(nums2)<len(nums1):\\n        nums1, nums2 = nums2, nums1\\n            \\n     out = []\\n     # Get counts for the smaller list\\n     counts1 = Counter(nums1)\\n     for val in nums2:\\n         # We have unused references of val that were seen in nums1\\n         if val in counts1 and counts1[val]:\\n             counts1[val] -= 1\\n             out.append(val)\\n\\t\\t\\n     return out\\n```\n```\\ndef intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n\\t\"\"\" Assumes nums1 and nums2 are sorted \"\"\"\\n\\t out = []\\n     i = j = 0\\n     while i<len(nums1) and j<len(nums2):\\n         if (val1:= nums1[i])==(val2:= nums2[j]):\\n\\t\\t\\t# Indices where element stops repeating\\n            next_i = next((k for k in range(i+1, len(nums1)) if nums1[k]!=val1), len(nums1))\\n            next_j = next((k for k in range(j+1, len(nums2)) if nums2[k]!=val1), len(nums2))\\n \\n            out.extend([val1]*min(next_i-i, next_j-j))\\n\\t\\t\\t\\t\\n            i = next_i\\n            j = next_j\\n         elif val1<val2:\\n\\t\\t\\t# Index in nums1 where element stops being smaller than value at index j in nums2\\n            i = next((k for k in range(i+1, len(nums1)) if nums1[k]>=val2), len(nums1))\\n         else:\\n\\t\\t\\t# Index in nums2 where element stops being smaller than value at index i in nums1\\n            j = next((k for k in range(j+1, len(nums2)) if nums2[k]>=val1), len(nums1))\\n        \\n    return out\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 1464986,
                "title": "3-solutions-brute-hashmap-sort-2-pointer-c",
                "content": "Approach 1: Brute Force (Using two For Loops) || Time = O(n^2), Space = O(n)\\n**In an interview, always start with brute force/ naive approach, even if you know the optimal solution for a better impression on the interviewer (if you have sufficient time!)\\n```\\nvector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int>answer;\\n        int n1 = nums1.size();\\n        int n2 = nums2.size();\\n        for(int i = 0; i < n1; i++) {\\n            for(int j = 0; j < n2; j++) {\\n                if(nums1[i] == nums2[j]){\\n                    answer.push_back(nums1[i]);  //If there\\'s a common element, we\\'ll add in an aditional vector.\\n                    nums2.erase(nums2.begin() + j); // we\\'ll remove the common element from the vector so that we don\\'t count it twice\\n                    n2 -= 1; //as we removed the element, size of that vector will also be reduced\\n                    break; // this is done because one element of one vector can only match with one element of another vector\\n                }\\n            }\\n        }\\n        return answer; \\n    }\\n\\t\\n---------------------------------------------------------------------------------------\\n\\nApproach 2: (Using Hashtable) || Time = O(n), Space = O(n)\\nHere, we\\'re gonna iterate through any one of two vectors & store all the values in hashmap.\\nNow, we\\'re gonna check which element from the second vector is actually present inside the hashmap which means a match(intersection) and we\\'ll store that particular element in the additional vector and then remove that element from hashmap.\\n\\nvector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int, int>map; \\n        vector<int>answer; //additional vector to store and finally return the output\\n        for(int i = 0; i < nums1.size(); i++) {\\n            map[nums1[i]]++; //\\n        }\\n        for(int i = 0; i < nums2.size(); i++) {\\n            if(map[nums2[i]]) {\\n                answer.push_back(nums2[i]);\\n                map[nums2[i]]--;\\n            }\\n        }\\n        return answer;\\n    }\\n\\t\\n-------------------------------------------------------------------------------------\\n\\nApproach 3:(Two pointer method, Condition: Vectors/Arrays must be sorted)\\nTime = O(n) since its given the follow up of the same question, Space  = O(n) or O(1) if we don\\'t return the array.\\n\\nWhenever input arrays are sorted, always try to use 2 pointer method, cause it\\'ll definitely decrease the time complexity.\\nTake 2 pointers pointing to starting values of each vector and just compare the values.\\nIF one value is smaller/greater than the other, increment the pointer accordingly, and \\nIF the two values are equal, then store that value in the additional array and increment both pointers since we don\\'t want any duplicates.\\n\\nvector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        sort(nums1.begin(), nums1.end());\\n        sort(nums2.begin(), nums2.end());   \\n        vector<int>answer;\\n        int i = 0, j = 0;\\n        while(i < nums1.size() && j < nums2.size()) {\\n            if(nums1[i] < nums2[j]){\\n                i++;\\n            }\\n            else if(nums1[i] > nums2[j]) {\\n                j++;\\n            }\\n            else {\\n                answer.push_back(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        return answer;\\n    }\\n\\t\\n---------------------------------------------------\\nPlease share your feedback and i suggest everyone to please share your solutions in the discussion section as well cause it\\'ll be very beneficial for the community. Thanks.\\n\\n",
                "solutionTags": [
                    "C",
                    "Two Pointers"
                ],
                "code": "Approach 1: Brute Force (Using two For Loops) || Time = O(n^2), Space = O(n)\\n**In an interview, always start with brute force/ naive approach, even if you know the optimal solution for a better impression on the interviewer (if you have sufficient time!)\\n```\\nvector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int>answer;\\n        int n1 = nums1.size();\\n        int n2 = nums2.size();\\n        for(int i = 0; i < n1; i++) {\\n            for(int j = 0; j < n2; j++) {\\n                if(nums1[i] == nums2[j]){\\n                    answer.push_back(nums1[i]);  //If there\\'s a common element, we\\'ll add in an aditional vector.\\n                    nums2.erase(nums2.begin() + j); // we\\'ll remove the common element from the vector so that we don\\'t count it twice\\n                    n2 -= 1; //as we removed the element, size of that vector will also be reduced\\n                    break; // this is done because one element of one vector can only match with one element of another vector\\n                }\\n            }\\n        }\\n        return answer; \\n    }\\n\\t\\n---------------------------------------------------------------------------------------\\n\\nApproach 2: (Using Hashtable) || Time = O(n), Space = O(n)\\nHere, we\\'re gonna iterate through any one of two vectors & store all the values in hashmap.\\nNow, we\\'re gonna check which element from the second vector is actually present inside the hashmap which means a match(intersection) and we\\'ll store that particular element in the additional vector and then remove that element from hashmap.\\n\\nvector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int, int>map; \\n        vector<int>answer; //additional vector to store and finally return the output\\n        for(int i = 0; i < nums1.size(); i++) {\\n            map[nums1[i]]++; //\\n        }\\n        for(int i = 0; i < nums2.size(); i++) {\\n            if(map[nums2[i]]) {\\n                answer.push_back(nums2[i]);\\n                map[nums2[i]]--;\\n            }\\n        }\\n        return answer;\\n    }\\n\\t\\n-------------------------------------------------------------------------------------\\n\\nApproach 3:(Two pointer method, Condition: Vectors/Arrays must be sorted)\\nTime = O(n) since its given the follow up of the same question, Space  = O(n) or O(1) if we don\\'t return the array.\\n\\nWhenever input arrays are sorted, always try to use 2 pointer method, cause it\\'ll definitely decrease the time complexity.\\nTake 2 pointers pointing to starting values of each vector and just compare the values.\\nIF one value is smaller/greater than the other, increment the pointer accordingly, and \\nIF the two values are equal, then store that value in the additional array and increment both pointers since we don\\'t want any duplicates.\\n\\nvector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        sort(nums1.begin(), nums1.end());\\n        sort(nums2.begin(), nums2.end());   \\n        vector<int>answer;\\n        int i = 0, j = 0;\\n        while(i < nums1.size() && j < nums2.size()) {\\n            if(nums1[i] < nums2[j]){\\n                i++;\\n            }\\n            else if(nums1[i] > nums2[j]) {\\n                j++;\\n            }\\n            else {\\n                answer.push_back(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        return answer;\\n    }\\n\\t\\n---------------------------------------------------\\nPlease share your feedback and i suggest everyone to please share your solutions in the discussion section as well cause it\\'ll be very beneficial for the community. Thanks.\\n\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 1315842,
                "title": "simplest-c-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        vector <int> res;\\n        int n1=nums1.size();\\n        int n2=nums2.size();\\n        int i=n1,j=n2;\\n        while(i>0 && j>0)\\n        {\\n            int a=nums1[i-1];\\n            int b=nums2[j-1];\\n            if(a==b)\\n            {\\n                res.push_back(a);\\n                i--;\\n                j--;\\n            }\\n            else if(a>b)\\n            {\\n                i--;\\n            }\\n            else\\n                j--;\\n        }\\n        \\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "Two Pointers",
                    "Sorting"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        vector <int> res;\\n        int n1=nums1.size();\\n        int n2=nums2.size();\\n        int i=n1,j=n2;\\n        while(i>0 && j>0)\\n        {\\n            int a=nums1[i-1];\\n            int b=nums2[j-1];\\n            if(a==b)\\n            {\\n                res.push_back(a);\\n                i--;\\n                j--;\\n            }\\n            else if(a>b)\\n            {\\n                i--;\\n            }\\n            else\\n                j--;\\n        }\\n        \\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 986753,
                "title": "c-solution-faster-than-92-18-of-c-online-submissions",
                "content": "# PLEASE UPVOTE IF YOU LIKE IT.\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        sort(nums1.begin(), nums1.end());\\n        sort(nums2.begin(), nums2.end());\\n        vector<int> res;\\n        int i=0, j=0;\\n        while(i<nums1.size() && j<nums2.size()){\\n            if(nums1[i]<nums2[j]){\\n                i++;\\n            }\\n            if(nums1[i]>nums2[j]){\\n                j++;\\n            }\\n            else if(nums1[i]==nums2[j]){\\n                res.push_back(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        return res;\\n    }\\n};\\n```\\n",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        sort(nums1.begin(), nums1.end());\\n        sort(nums2.begin(), nums2.end());\\n        vector<int> res;\\n        int i=0, j=0;\\n        while(i<nums1.size() && j<nums2.size()){\\n            if(nums1[i]<nums2[j]){\\n                i++;\\n            }\\n            if(nums1[i]>nums2[j]){\\n                j++;\\n            }\\n            else if(nums1[i]==nums2[j]){\\n                res.push_back(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 713120,
                "title": "go-simple",
                "content": "```go\\nfunc intersect(nums1 []int, nums2 []int) []int {\\n    set := make(map[int]int)\\n    for _, v := range nums1 {\\n        set[v]++\\n    }\\n    \\n    res := make([]int, 0)\\n    for _, v := range nums2 {\\n        if set[v] > 0 {\\n            res = append(res, v)\\n            set[v]--\\n        }\\n    }\\n    \\n    return res\\n}\\n```",
                "solutionTags": [],
                "code": "```go\\nfunc intersect(nums1 []int, nums2 []int) []int {\\n    set := make(map[int]int)\\n    for _, v := range nums1 {\\n        set[v]++\\n    }\\n    \\n    res := make([]int, 0)\\n    for _, v := range nums2 {\\n        if set[v] > 0 {\\n            res = append(res, v)\\n            set[v]--\\n        }\\n    }\\n    \\n    return res\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 293188,
                "title": "javascript-solution",
                "content": "```\\nvar intersect = function(nums1, nums2) {\\n    const count = {};\\n    \\n    for (let i = 0; i < nums1.length; i++) {\\n        const curr = nums1[i];\\n        if (count[curr] == null) count[curr] = 1;\\n        else count[curr]++;\\n    }\\n    \\n    const result = [];\\n\\n    for (let i = 0; i < nums2.length; i++) {\\n        const curr = nums2[i];\\n        if (count[curr] > 0) {\\n            result.push(curr);\\n            count[curr]--;\\n        }\\n    }\\n    \\n    return result;\\n};\\n\\n```",
                "solutionTags": [],
                "code": "```\\nvar intersect = function(nums1, nums2) {\\n    const count = {};\\n    \\n    for (let i = 0; i < nums1.length; i++) {\\n        const curr = nums1[i];\\n        if (count[curr] == null) count[curr] = 1;\\n        else count[curr]++;\\n    }\\n    \\n    const result = [];\\n\\n    for (let i = 0; i < nums2.length; i++) {\\n        const curr = nums2[i];\\n        if (count[curr] > 0) {\\n            result.push(curr);\\n            count[curr]--;\\n        }\\n    }\\n    \\n    return result;\\n};\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 202492,
                "title": "c-binary-search",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> res;\\n      \\n        // if the arrays are sorted\\n        sort(nums1.begin(), nums1.end());\\n        sort(nums2.begin(), nums2.end());\\n        \\n        //if nums1\\'s size is small compared to nums2\\'s size? Which algorithm is better?\\n        //binary search\\n        vector<int> shorter, longer;\\n        \\n        if(nums1.size() <= nums2.size()){\\n            shorter = nums1;\\n            longer = nums2;\\n        }else{\\n            shorter = nums2;\\n            longer = nums1;            \\n        }\\n        \\n        int leftInd = 0;\\n        int rightInd = longer.size() - 1;\\n        int ind;\\n        \\n        for(int i = 0; i < shorter.size(); ++i){\\n            ind = binarySearch(longer, leftInd, rightInd, shorter[i]);\\n            if(ind != -1){\\n                res.push_back(shorter[i]);\\n                leftInd = ind + 1;\\n            }\\n          }\\n        \\n        return res;\\n    }\\n    \\n    int binarySearch(vector<int> &nums, int start, int end, int target){\\n        //int start = 0, end = nums.size() - 1;\\n        \\n        while(start <= end){\\n            int mid = start + (end - start) / 2;\\n            if(nums[mid] == target){\\n                while(mid > start && nums[mid-1] == target) --mid;\\n                return mid;\\n            }     \\n            else if(nums[mid] < target){\\n                start = mid + 1;\\n            }else{\\n                end = mid - 1;\\n            }         \\n        }\\n        return -1;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> res;\\n      \\n        // if the arrays are sorted\\n        sort(nums1.begin(), nums1.end());\\n        sort(nums2.begin(), nums2.end());\\n        \\n        //if nums1\\'s size is small compared to nums2\\'s size? Which algorithm is better?\\n        //binary search\\n        vector<int> shorter, longer;\\n        \\n        if(nums1.size() <= nums2.size()){\\n            shorter = nums1;\\n            longer = nums2;\\n        }else{\\n            shorter = nums2;\\n            longer = nums1;            \\n        }\\n        \\n        int leftInd = 0;\\n        int rightInd = longer.size() - 1;\\n        int ind;\\n        \\n        for(int i = 0; i < shorter.size(); ++i){\\n            ind = binarySearch(longer, leftInd, rightInd, shorter[i]);\\n            if(ind != -1){\\n                res.push_back(shorter[i]);\\n                leftInd = ind + 1;\\n            }\\n          }\\n        \\n        return res;\\n    }\\n    \\n    int binarySearch(vector<int> &nums, int start, int end, int target){\\n        //int start = 0, end = nums.size() - 1;\\n        \\n        while(start <= end){\\n            int mid = start + (end - start) / 2;\\n            if(nums[mid] == target){\\n                while(mid > start && nums[mid-1] == target) --mid;\\n                return mid;\\n            }     \\n            else if(nums[mid] < target){\\n                start = mid + 1;\\n            }else{\\n                end = mid - 1;\\n            }         \\n        }\\n        return -1;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 82235,
                "title": "javascript-hashmap-o-n-solution",
                "content": "```\\nvar intersect = function(nums1, nums2) {\\n    var map = {};\\n    var result = [];\\n    for(let i = 0; i < nums1.length; i++){\\n        map[nums1[i]] = (map[nums1[i]]||0) + 1; \\n    }\\n    for(let i = 0; i < nums2.length; i++){\\n        if(map[nums2[i]] > 0){\\n            map[nums2[i]]--;\\n            result.push(nums2[i]);\\n        }\\n    }\\n    return result;\\n};",
                "solutionTags": [],
                "code": "```\\nvar intersect = function(nums1, nums2) {\\n    var map = {};\\n    var result = [];\\n    for(let i = 0; i < nums1.length; i++){\\n        map[nums1[i]] = (map[nums1[i]]||0) + 1; \\n    }\\n    for(let i = 0; i < nums2.length; i++){\\n        if(map[nums2[i]] > 0){\\n            map[nums2[i]]--;\\n            result.push(nums2[i]);\\n        }\\n    }\\n    return result;\\n};",
                "codeTag": "Unknown"
            },
            {
                "id": 82274,
                "title": "5ms-o-mlogn-binary-search-solution",
                "content": "Just a little tweaks on the BS solution from Intersection of Two Arrays I.\\n\\nIn this problem, elements in the intersection does not have to be unique, so we have to make sure that when we apply binary search on B, it does not return the same value it has found previously. \\n\\nFor example, for A = [1,2,2], B = [2,2], when we search for the second 2, binary search has to return the second 2 on B. If we still use the same algo in the previous problem, the algorithm will return the wrong result for A = [1,2,2], B = [1,2] => intersect = [2,2]. Because both 2s in A can be found in B.\\n\\nTo tackle this, I maintain a lower bound on B, and every time we found a target value on B, we increase the lower bound so that for the next duplicate value, it does not search for that same element again.\\n\\n    public int[] intersect(int[] A, int[] B) {\\n        if (A.length == 0 || B.length == 0) return new int[0];\\n        if (A.length > B.length) return intersect(B, A);  // apply bs on bigger array\\n        List<Integer> list = new ArrayList<>();\\n        Arrays.sort(A);\\n        Arrays.sort(B);\\n        \\n        int lowerBound = 0;  // lower bound for binary search\\n        for (int i = 0; i < A.length; i++) {\\n            int index = binarySearch(B, lowerBound, A[i]);\\n            if (index < B.length && B[index] == A[i]) {  // found on B\\n                list.add(A[i]);\\n                lowerBound = index + 1;\\n            }\\n        }\\n\\n        // adding result from list to final int[]\\n        int[] res = new int[list.size()];\\n        int i = 0;\\n        for (int n : list)  res[i++] = n;\\n        return res;\\n    }\\n\\n    private int binarySearch(int[] A, int lo, int target) {\\n        int L = lo, R = A.length-1;\\n        while (L < R) {\\n            int M = L + (R - L) / 2;\\n            if (A[M] < target)  L = M + 1;\\n            else                R = M;\\n        }\\n        return L;\\n    }",
                "solutionTags": [],
                "code": "Just a little tweaks on the BS solution from Intersection of Two Arrays I.\\n\\nIn this problem, elements in the intersection does not have to be unique, so we have to make sure that when we apply binary search on B, it does not return the same value it has found previously. \\n\\nFor example, for A = [1,2,2], B = [2,2], when we search for the second 2, binary search has to return the second 2 on B. If we still use the same algo in the previous problem, the algorithm will return the wrong result for A = [1,2,2], B = [1,2] => intersect = [2,2]. Because both 2s in A can be found in B.\\n\\nTo tackle this, I maintain a lower bound on B, and every time we found a target value on B, we increase the lower bound so that for the next duplicate value, it does not search for that same element again.\\n\\n    public int[] intersect(int[] A, int[] B) {\\n        if (A.length == 0 || B.length == 0) return new int[0];\\n        if (A.length > B.length) return intersect(B, A);  // apply bs on bigger array\\n        List<Integer> list = new ArrayList<>();\\n        Arrays.sort(A);\\n        Arrays.sort(B);\\n        \\n        int lowerBound = 0;  // lower bound for binary search\\n        for (int i = 0; i < A.length; i++) {\\n            int index = binarySearch(B, lowerBound, A[i]);\\n            if (index < B.length && B[index] == A[i]) {  // found on B\\n                list.add(A[i]);\\n                lowerBound = index + 1;\\n            }\\n        }\\n\\n        // adding result from list to final int[]\\n        int[] res = new int[list.size()];\\n        int i = 0;\\n        for (int n : list)  res[i++] = n;\\n        return res;\\n    }\\n\\n    private int binarySearch(int[] A, int lo, int target) {\\n        int L = lo, R = A.length-1;\\n        while (L < R) {\\n            int M = L + (R - L) / 2;\\n            if (A[M] < target)  L = M + 1;\\n            else                R = M;\\n        }\\n        return L;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 3249477,
                "title": "c-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        \\n        vector<int> ans;\\n        sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        int i=0;\\n        int j=0;\\n        while(i<nums1.size() && j<nums2.size())\\n        {\\n            if(nums1[i]==nums2[j])\\n            {\\n                ans.push_back(nums1[i]);\\n                i++,j++;\\n            }\\n            else if(nums1[i]>nums2[j])\\n                j++;\\n            else if(nums1[i]<nums2[j])\\n                i++;\\n        }\\n        return ans;\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        \\n        vector<int> ans;\\n        sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        int i=0;\\n        int j=0;\\n        while(i<nums1.size() && j<nums2.size())\\n        {\\n            if(nums1[i]==nums2[j])\\n            {\\n                ans.push_back(nums1[i]);\\n                i++,j++;\\n            }\\n            else if(nums1[i]>nums2[j])\\n                j++;\\n            else if(nums1[i]<nums2[j])\\n                i++;\\n        }\\n        return ans;\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3246323,
                "title": "350-solution-with-step-by-step-explanation",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nThis problem asks us to find the intersection of two integer arrays nums1 and nums2. In this case, the intersection of two arrays means the elements that are common to both arrays. Furthermore, each element should appear as many times as it shows in both arrays. We are also required to return the result in any order.\\n\\nWe can solve this problem by using a hash map to count the frequency of each number in one of the arrays (let\\'s say nums1). Then we can loop through the other array (nums2) and check if the current number exists in the hash map. If it does, we decrement the frequency of that number in the hash map and add it to our result array.\\n\\nHere\\'s the step-by-step explanation of the algorithm:\\n\\n1. Create a hash map to count the frequency of each number in nums1.\\n2. Create an empty list result to store the intersection of the two arrays.\\n3. Loop through each element num in nums2.\\n4. If num exists in the hash map and its frequency is greater than 0, add it to the result list and decrement its frequency in the hash map.\\n5. Return the result list.\\n\\nThe time complexity of this algorithm is O(m + n), where m and n are the lengths of nums1 and nums2, respectively. This is because we iterate through both arrays only once. The space complexity is O(min(m, n)), because we store the frequency of each number in the hash map, and the size of the hash map is limited by the size of the smaller array.\\n\\n# Complexity\\n- Time complexity:\\n69.37%\\n\\n- Space complexity:\\n78.71%\\n\\n# Code\\n```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        # Create a hash map to count the frequency of each number in nums1\\n        freq_map = {}\\n        for num in nums1:\\n            freq_map[num] = freq_map.get(num, 0) + 1\\n        \\n        # Create an empty list to store the intersection of the two arrays\\n        result = []\\n        \\n        # Loop through each element in nums2\\n        for num in nums2:\\n            # If num exists in the hash map and its frequency is greater than 0\\n            if num in freq_map and freq_map[num] > 0:\\n                # Add it to the result list and decrement its frequency in the hash map\\n                result.append(num)\\n                freq_map[num] -= 1\\n        \\n        # Return the result list\\n        return result\\n\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Array",
                    "Hash Table",
                    "Binary Search"
                ],
                "code": "```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        # Create a hash map to count the frequency of each number in nums1\\n        freq_map = {}\\n        for num in nums1:\\n            freq_map[num] = freq_map.get(num, 0) + 1\\n        \\n        # Create an empty list to store the intersection of the two arrays\\n        result = []\\n        \\n        # Loop through each element in nums2\\n        for num in nums2:\\n            # If num exists in the hash map and its frequency is greater than 0\\n            if num in freq_map and freq_map[num] > 0:\\n                # Add it to the result list and decrement its frequency in the hash map\\n                result.append(num)\\n                freq_map[num] -= 1\\n        \\n        # Return the result list\\n        return result\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3117102,
                "title": "accepted-short-simple-best-method-easy-to-understand",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int,int> mp1, mp2;\\n        vector<int> ans;\\n        for(int i=0;i<nums1.size();i++)\\n            mp1[nums1[i]]++;\\n        \\n        for(int i=0;i<nums2.size();i++)\\n            mp2[nums2[i]]++;\\n        for(auto a:mp1)\\n        {\\n            int x=a.first;\\n            int y=a.second;\\n            int c=min(y, mp2[x]);\\n            while(c--)\\n            {\\n                ans.push_back(x);\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```\\nPlease **UPVOTE** if it helps \\u2764\\uFE0F\\uD83D\\uDE0A\\nThank You and Happy To Help You!!",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int,int> mp1, mp2;\\n        vector<int> ans;\\n        for(int i=0;i<nums1.size();i++)\\n            mp1[nums1[i]]++;\\n        \\n        for(int i=0;i<nums2.size();i++)\\n            mp2[nums2[i]]++;\\n        for(auto a:mp1)\\n        {\\n            int x=a.first;\\n            int y=a.second;\\n            int c=min(y, mp2[x]);\\n            while(c--)\\n            {\\n                ans.push_back(x);\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3114063,
                "title": "python3",
                "content": "# Code\\n```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        l = []\\n        a = Counter(nums1)\\n        b = Counter(nums2)\\n        for i,j in a.items():\\n            if i in b:\\n                l+=[i]*min(j,b[i])\\n        return l\\n\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        l = []\\n        a = Counter(nums1)\\n        b = Counter(nums2)\\n        for i,j in a.items():\\n            if i in b:\\n                l+=[i]*min(j,b[i])\\n        return l\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2793707,
                "title": "4-line-of-code-with-3-approach-in-c-0ms-runtime",
                "content": "**STL**\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> res;\\n        sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        auto it = set_intersection(nums1.begin(),nums1.end(),nums2.begin(),nums2.end(),back_inserter(res));\\n        return res;\\n    }\\n};\\n```\\n**Hashmap**\\n\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        map<int,int> mp;\\n        vector<int> res;\\n        for(auto i : nums1) mp[i]++;\\n        for(auto i : nums2){\\n            if(mp[i] > 0){\\n                mp[i]--;\\n                res.push_back(i);\\n            }\\n        }\\n        return res;\\n    }\\n};\\n```\\n**Two Pointers**\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& a, vector<int>& b) {\\n        sort(a.begin(),a.end());\\n        sort(b.begin(),b.end());\\n        vector<int> res;\\n        int i=0,j =0;\\n        while(i < a.size() and j < b.size()){\\n            if(a[i] == b[j]){\\n                res.push_back(a[i]);\\n                i++,j++;\\n            }else if(a[i] < b[j]){\\n                i++;\\n            }else j++;\\n        }\\n        return res;\\n    }\\n};\\n```\\n<br>\\nPlease do upvote this post.\\n\\n![image](https://assets.leetcode.com/users/images/5ce11bf6-0db9-4239-bbb9-dfe5d76443f3_1666346629.9681695.gif)",
                "solutionTags": [
                    "C++",
                    "C",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> res;\\n        sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        auto it = set_intersection(nums1.begin(),nums1.end(),nums2.begin(),nums2.end(),back_inserter(res));\\n        return res;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        map<int,int> mp;\\n        vector<int> res;\\n        for(auto i : nums1) mp[i]++;\\n        for(auto i : nums2){\\n            if(mp[i] > 0){\\n                mp[i]--;\\n                res.push_back(i);\\n            }\\n        }\\n        return res;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& a, vector<int>& b) {\\n        sort(a.begin(),a.end());\\n        sort(b.begin(),b.end());\\n        vector<int> res;\\n        int i=0,j =0;\\n        while(i < a.size() and j < b.size()){\\n            if(a[i] == b[j]){\\n                res.push_back(a[i]);\\n                i++,j++;\\n            }else if(a[i] < b[j]){\\n                i++;\\n            }else j++;\\n        }\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2683964,
                "title": "90-faster-o-n-hashmap",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& arr1, vector<int>& arr2) {\\n        int n1 = arr1.size();\\n        int n2 = arr2.size();\\n        unordered_map<int,int> mp;\\n        for(int i = 0;i<n1;i++) mp[arr1[i]]++;\\n        vector<int> ans;\\n        for(int i = 0;i<n2;i++){\\n            if(mp.find(arr2[i]) != mp.end() && mp[arr2[i]] > 0){\\n                ans.emplace_back(arr2[i]);\\n                mp[arr2[i]]--;\\n            }\\n        }\\n        return ans;\\n        \\n    }\\n};\\n```\\n\\nIf you liked the solution please do upvote \\uD83D\\uDE42",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& arr1, vector<int>& arr2) {\\n        int n1 = arr1.size();\\n        int n2 = arr2.size();\\n        unordered_map<int,int> mp;\\n        for(int i = 0;i<n1;i++) mp[arr1[i]]++;\\n        vector<int> ans;\\n        for(int i = 0;i<n2;i++){\\n            if(mp.find(arr2[i]) != mp.end() && mp[arr2[i]] > 0){\\n                ans.emplace_back(arr2[i]);\\n                mp[arr2[i]]--;\\n            }\\n        }\\n        return ans;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2505772,
                "title": "easy-python3-code",
                "content": "Code :\\n```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        ans=[]\\n        for i in nums1:\\n            if i in nums2:\\n                ans.append(i)\\n                nums2.remove(i)\\n        return ans\\n```\\n\\nEasy and understandle solution",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        ans=[]\\n        for i in nums1:\\n            if i in nums2:\\n                ans.append(i)\\n                nums2.remove(i)\\n        return ans\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2387210,
                "title": "c-solution-easy-and-simple",
                "content": "class Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n\\t\\n\\t    // make sure to dry run for better understanding\\n        sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n\\n        int n1 = nums1.size();\\n        int n2 = nums2.size();\\n        int i=0;\\n        int j=0;\\n        \\n        vector<int>ans;\\n\\n        while(i<n1 && j<n2){\\n            if(nums1[i] > nums2[j])\\n                j++;\\n            else if(nums1[i] < nums2[j]) \\n                i++;\\n            else\\n            {\\n                ans.push_back(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        return ans;\\n    }\\n};",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "class Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n\\t\\n\\t    // make sure to dry run for better understanding\\n        sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n\\n        int n1 = nums1.size();\\n        int n2 = nums2.size();\\n        int i=0;\\n        int j=0;\\n        \\n        vector<int>ans;\\n\\n        while(i<n1 && j<n2){\\n            if(nums1[i] > nums2[j])\\n                j++;\\n            else if(nums1[i] < nums2[j]) \\n                i++;\\n            else\\n            {\\n                ans.push_back(nums1[i]);\\n                i++;\\n                j++;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 2288534,
                "title": "very-easy-solution-using-c-explained-in-hindi",
                "content": "Hindi Explination: Phle ek nayaVector banao, iss vector mai apan log answer store krke isse return krega. Abb sbse phle apan num1 & num2 array ko sort krega jisse comparison easy hojayega dono mai. Abb while loop lagayenge `while(p1<nums1.size() && p2<nums2.size())` isse apan bolenge ki agar size se bada hota hai toh bahar niklo. Abb if condition ka use krke dono arrays mai iterate krenge aur agar num1 & num2 mai element same hua toh uss wale ith element `num1[i]` ko apne wale vector mai save krr lenge.\\nPhir just kuch condition ko match krne ke liyee else if & else kause krenge ....\\n```\\n            else if(nums1[p1]<nums2[p2])\\n            {\\n                p1++;\\n            }\\n            else\\n            {\\n                p2++;\\n            }\\n```\\n\\nAnd baadme sbse last mai saare elements jo vector mai stored hai unko print karwa denge.\\n\\n**Code: **\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector <int> ans;\\n        sort (nums1.begin(),nums1.end());\\n        sort (nums2.begin(),nums2.end());\\n        \\n        int p1=0,p2=0;\\n        while (p1<nums1.size() && p2<nums2.size()){\\n            if (nums1[p1]==nums2[p2]){\\n                ans.push_back(nums1[p1]);\\n                p1++;\\n                p2++;\\n            }\\n            else if(nums1[p1]<nums2[p2])\\n            {\\n                p1++;\\n            }\\n            else\\n            {\\n                p2++;\\n            }\\n        }\\n        return ans;\\n        \\n    }\\n};\\n```\\n\\n\\n**Kindly upvote if you think this explaination was useful**",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\n            else if(nums1[p1]<nums2[p2])\\n            {\\n                p1++;\\n            }\\n            else\\n            {\\n                p2++;\\n            }\\n```\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector <int> ans;\\n        sort (nums1.begin(),nums1.end());\\n        sort (nums2.begin(),nums2.end());\\n        \\n        int p1=0,p2=0;\\n        while (p1<nums1.size() && p2<nums2.size()){\\n            if (nums1[p1]==nums2[p2]){\\n                ans.push_back(nums1[p1]);\\n                p1++;\\n                p2++;\\n            }\\n            else if(nums1[p1]<nums2[p2])\\n            {\\n                p1++;\\n            }\\n            else\\n            {\\n                p2++;\\n            }\\n        }\\n        return ans;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2284526,
                "title": "java-solution-2-approaches",
                "content": "**Approach 1 - Using HashMap**\\n```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        ArrayList<Integer> list = new ArrayList<>();\\n        HashMap<Integer, Integer> map = new HashMap<>();\\n        for (int n1 : nums1) {\\n            if(map.containsKey(n1))\\n                map.put(n1, map.get(n1) + 1);\\n            else\\n                map.put(n1, 1);\\n        }\\n        \\n        for (int n2 : nums2) {\\n            if (map.containsKey(n2) && map.get(n2) > 0) {\\n                list.add(n2);\\n                map.put(n2, map.get(n2) - 1);\\n            }\\n        }\\n        \\n        int ans[] = new int[list.size()];\\n        int i = 0;\\n        for (int ele : list) {\\n            ans[i++] = ele;\\n        }\\n        return ans;\\n    }\\n}\\n```\\nComplexity:\\n\\nTime: O(M + N), where M <= 1000 is length of nums1 array, N <= 1000 is length of nums2 array.\\nSpace: O(min(M, N))\\n\\n**Approach 2 - Sorting then Using Two Pointers**\\n```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        ArrayList<Integer> list = new ArrayList<>();\\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        int i = 0, j = 0;\\n        while (i < nums1.length && j < nums2.length) {\\n            if (nums1[i] < nums2[j]) \\n                i++;\\n            else if (nums1[i] > nums2[j])\\n                j++;\\n            else {\\n                list.add(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        \\n        int ans[] = new int[list.size()];\\n        int index = 0;\\n        for (int ele : list) {\\n            ans[index++] = ele;\\n        }\\n        return ans;\\n    }\\n}\\n```\\nComplexity:\\n\\nTime: O(MlogM + NlogN), where M <= 1000 is length of nums1 array, N <= 1000 is length of nums2 array.\\nExtra Space (without counting output as space): O(sorting)\\n",
                "solutionTags": [
                    "Java",
                    "Two Pointers",
                    "Sorting"
                ],
                "code": "```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        ArrayList<Integer> list = new ArrayList<>();\\n        HashMap<Integer, Integer> map = new HashMap<>();\\n        for (int n1 : nums1) {\\n            if(map.containsKey(n1))\\n                map.put(n1, map.get(n1) + 1);\\n            else\\n                map.put(n1, 1);\\n        }\\n        \\n        for (int n2 : nums2) {\\n            if (map.containsKey(n2) && map.get(n2) > 0) {\\n                list.add(n2);\\n                map.put(n2, map.get(n2) - 1);\\n            }\\n        }\\n        \\n        int ans[] = new int[list.size()];\\n        int i = 0;\\n        for (int ele : list) {\\n            ans[i++] = ele;\\n        }\\n        return ans;\\n    }\\n}\\n```\n```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        ArrayList<Integer> list = new ArrayList<>();\\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        int i = 0, j = 0;\\n        while (i < nums1.length && j < nums2.length) {\\n            if (nums1[i] < nums2[j]) \\n                i++;\\n            else if (nums1[i] > nums2[j])\\n                j++;\\n            else {\\n                list.add(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        \\n        int ans[] = new int[list.size()];\\n        int index = 0;\\n        for (int ele : list) {\\n            ans[index++] = ele;\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2272214,
                "title": "c-two-easy-solutions-first-using-binary-search-second-using-hash-table",
                "content": "# First approch using [Binary Search]\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& v1, vector<int>& v2) {\\n          vector<int>ans;\\n  \\n     \\n        sort(v2.begin(),v2.end());\\n        for(int i =0  ;i<v1.size() ; i++)\\n        {\\n            int var=lower_bound(v2.begin(),v2.end(),v1[i])-v2.begin();\\n            \\n            \\n            if(var<v2.size() && v2[var]==v1[i])\\n            {\\n                \\n                \\n                auto it=v2.begin()+var;\\n                \\n                 ans.push_back(v1[i]);\\n           \\n                  v2.erase(it);\\n             \\n                \\n            }\\n            \\n            \\n            \\n        }\\n     \\n        return ans;\\n    }\\n};\\n```\\n# Second approch using [Hash Map]\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& v1, vector<int>& v2) {\\n          vector<int>ans;\\n          map<int,int> m;\\n     \\n       \\n        for(int i =0  ;i<v1.size() ; i++)\\n        {\\n           \\n            m[v1[i]]++;  \\n        }\\n      for(int  i=0 ; i<v2.size();i++)\\n      {\\n          if(m[v2[i]]!=0)\\n          {\\n              ans.push_back(v2[i]);\\n              m[v2[i]]--;\\n              \\n          }\\n      }\\n        return ans;\\n    }\\n};\\n```\\n\\n***Please upvote if you found it helpful  ***\\n",
                "solutionTags": [
                    "C++",
                    "C",
                    "Hash Table",
                    "Sorting",
                    "Binary Tree"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& v1, vector<int>& v2) {\\n          vector<int>ans;\\n  \\n     \\n        sort(v2.begin(),v2.end());\\n        for(int i =0  ;i<v1.size() ; i++)\\n        {\\n            int var=lower_bound(v2.begin(),v2.end(),v1[i])-v2.begin();\\n            \\n            \\n            if(var<v2.size() && v2[var]==v1[i])\\n            {\\n                \\n                \\n                auto it=v2.begin()+var;\\n                \\n                 ans.push_back(v1[i]);\\n           \\n                  v2.erase(it);\\n             \\n                \\n            }\\n            \\n            \\n            \\n        }\\n     \\n        return ans;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& v1, vector<int>& v2) {\\n          vector<int>ans;\\n          map<int,int> m;\\n     \\n       \\n        for(int i =0  ;i<v1.size() ; i++)\\n        {\\n           \\n            m[v1[i]]++;  \\n        }\\n      for(int  i=0 ; i<v2.size();i++)\\n      {\\n          if(m[v2[i]]!=0)\\n          {\\n              ans.push_back(v2[i]);\\n              m[v2[i]]--;\\n              \\n          }\\n      }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1655086,
                "title": "java-solution-with-0-n-faster-than-98-1-easy-to-understand",
                "content": "public int[] intersect(int[] nums1, int[] nums2) {\\n            List<Integer> newList= new ArrayList<>();\\n        int[] count = new int[1001];\\n\\t\\t//Counting the array elements repetition and storing in another array\\n        for(int item:nums1) {\\n            count[item]++;\\n        }\\n//looping and adding into new list\\n        for(int i:nums2) {\\n            if (count[i] != 0) {\\n                count[i]--;\\n                newList.add(i);\\n            }\\n        }\\n        int[] arr=new int[newList.size()];\\n        int i=0;\\n        for(int x:newList){\\n                arr[i++]=x;\\n            }\\n            return arr;\\n\\n    }",
                "solutionTags": [
                    "Java"
                ],
                "code": "public int[] intersect(int[] nums1, int[] nums2) {\\n            List<Integer> newList= new ArrayList<>();\\n        int[] count = new int[1001];\\n\\t\\t//Counting the array elements repetition and storing in another array\\n        for(int item:nums1) {\\n            count[item]++;\\n        }\\n//looping and adding into new list\\n        for(int i:nums2) {\\n            if (count[i] != 0) {\\n                count[i]--;\\n                newList.add(i);\\n            }\\n        }\\n        int[] arr=new int[newList.size()];\\n        int i=0;\\n        for(int x:newList){\\n                arr[i++]=x;\\n            }\\n            return arr;\\n\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 1200963,
                "title": "java-solution-100",
                "content": "```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        int [] arr = new int [1001];\\n        List<Integer> res = new ArrayList<>();\\n        for(int i = 0; i < nums1.length; i++){\\n            arr[nums1[i]]++;\\n        }\\n        \\n        for(int i = 0; i < nums2.length; i++){\\n            if(arr[nums2[i]] != 0){\\n                res.add(nums2[i]);\\n                arr[nums2[i]]--;\\n            }\\n        }\\n        int [] retVal = new int [res.size()];\\n        for(int i = 0; i < res.size(); i++){\\n            retVal[i] = res.get(i);\\n        }\\n        return retVal;\\n    }\\n}\\n\\n\\n\\n\\n\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        int i = 0;\\n        int j = 0;\\n        List<Integer> list = new ArrayList<>();\\n        while(i < nums1.length && j < nums2.length){\\n            if(nums1[i] < nums2[j]){\\n                i++;\\n            }\\n            else if (nums1[i] > nums2[j]){\\n                j++;\\n            }else{\\n                list.add(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        int [] res = new int [list.size()];\\n        for(int k = 0; k < list.size(); k++){\\n            res[k] = list.get(k);\\n        }\\n        return res;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        int [] arr = new int [1001];\\n        List<Integer> res = new ArrayList<>();\\n        for(int i = 0; i < nums1.length; i++){\\n            arr[nums1[i]]++;\\n        }\\n        \\n        for(int i = 0; i < nums2.length; i++){\\n            if(arr[nums2[i]] != 0){\\n                res.add(nums2[i]);\\n                arr[nums2[i]]--;\\n            }\\n        }\\n        int [] retVal = new int [res.size()];\\n        for(int i = 0; i < res.size(); i++){\\n            retVal[i] = res.get(i);\\n        }\\n        return retVal;\\n    }\\n}\\n\\n\\n\\n\\n\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        int i = 0;\\n        int j = 0;\\n        List<Integer> list = new ArrayList<>();\\n        while(i < nums1.length && j < nums2.length){\\n            if(nums1[i] < nums2[j]){\\n                i++;\\n            }\\n            else if (nums1[i] > nums2[j]){\\n                j++;\\n            }else{\\n                list.add(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        int [] res = new int [list.size()];\\n        for(int k = 0; k < list.size(); k++){\\n            res[k] = list.get(k);\\n        }\\n        return res;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 775912,
                "title": "java-easy-to-understand-with-explanation",
                "content": "## Two pointer Approach:\\nSteps:\\n1. We add the elements, common in both the arrays, into the list. (List because we don\\'t know how long is this intersection going to be)\\n2. We convert this list to an int[] array.\\n\\n\\n(If there is a better way to convert the list to int[] array, kindly comment and let me know)\\n```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        \\n        List<Integer> ans = new ArrayList<>();\\n        \\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        \\n        int i = 0;\\n        int j = 0;\\n        \\n        while(i < nums1.length && j < nums2.length)\\n        {\\n            if(nums1[i] == nums2[j])\\n            {\\n                ans.add(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n            else if(nums1[i] < nums2[j])\\n            {\\n                i++;\\n            }\\n            else\\n            {\\n                j++;\\n            }    \\n            \\n        }\\n        \\n        int[] arr = new int[ans.size()];\\n        int k = 0;\\n        for(int num: ans)\\n            arr[k++] = num;\\n        return arr;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        \\n        List<Integer> ans = new ArrayList<>();\\n        \\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        \\n        int i = 0;\\n        int j = 0;\\n        \\n        while(i < nums1.length && j < nums2.length)\\n        {\\n            if(nums1[i] == nums2[j])\\n            {\\n                ans.add(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n            else if(nums1[i] < nums2[j])\\n            {\\n                i++;\\n            }\\n            else\\n            {\\n                j++;\\n            }    \\n            \\n        }\\n        \\n        int[] arr = new int[ans.size()];\\n        int k = 0;\\n        for(int num: ans)\\n            arr[k++] = num;\\n        return arr;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 135886,
                "title": "simple-c-o-n-solution",
                "content": "    public int[] Intersect(int[] nums1, int[] nums2) {\\n        Dictionary<int, int> dic = new Dictionary<int, int>();\\n        List<int> lst = new List<int>();\\n        \\n        foreach(int n in nums1)\\n        {\\n            if(dic.ContainsKey(n))\\n                dic[n] += 1;\\n            else\\n                dic.Add(n, 1);\\n        }\\n        \\n        foreach(int n in nums2)\\n        {\\n            if(dic.ContainsKey(n) && dic[n] > 0)\\n            {\\n                lst.Add(n);\\n                dic[n]--;\\n            }\\n        }\\n        \\n        return lst.ToArray();\\n    }",
                "solutionTags": [],
                "code": "    public int[] Intersect(int[] nums1, int[] nums2) {\\n        Dictionary<int, int> dic = new Dictionary<int, int>();\\n        List<int> lst = new List<int>();\\n        \\n        foreach(int n in nums1)\\n        {\\n            if(dic.ContainsKey(n))\\n                dic[n] += 1;\\n            else\\n                dic.Add(n, 1);\\n        }\\n        \\n        foreach(int n in nums2)\\n        {\\n            if(dic.ContainsKey(n) && dic[n] > 0)\\n            {\\n                lst.Add(n);\\n                dic[n]--;\\n            }\\n        }\\n        \\n        return lst.ToArray();\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 82278,
                "title": "swift-solution-binary-search-two-pointers-hashmap",
                "content": "```\\nclass Solution {\\n    func intersect_TwoPointers(_ nums1: [Int], _ nums2: [Int]) -> [Int] {\\n        let nums1 = nums1.sorted()\\n        let nums2 = nums2.sorted()\\n        let n1 = nums1.count\\n        let n2 = nums2.count\\n        var i1 = 0\\n        var i2 = 0\\n        var result = [Int]()\\n        \\n        while i1 < n1 && i2 < n2 {\\n            if nums1[i1] == nums2[i2] {\\n                result.append(nums1[i1])\\n                i1 += 1\\n                i2 += 1\\n            } else if nums1[i1] > nums2[i2] {\\n                i2 += 1\\n            } else {\\n                i1 += 1\\n            }\\n        }\\n        \\n        return result\\n    }\\n    \\n    func intersect_HashMap(_ nums1: [Int], _ nums2: [Int]) -> [Int] {\\n        var map = [Int: Int]()\\n        var result = [Int]()\\n        \\n        for i in 0..<nums1.count {\\n            if let value = map[nums1[i]] {\\n                map[nums1[i]] = value + 1\\n            } else {\\n                map[nums1[i]] = 1\\n            }\\n        }\\n        for i in 0..<nums2.count {\\n            if let value = map[nums2[i]] {\\n                map[nums2[i]] = value - 1\\n                if value - 1 >= 0 {\\n                    result.append(nums2[i])\\n                }\\n            }\\n        }\\n        \\n        return result\\n    }\\n    \\n    func intersect_BinarySearch(_ nums1: [Int], _ nums2: [Int]) -> [Int] {\\n        if nums1.count == 0 || nums2.count == 0 {\\n            return []\\n        }\\n        \\n        let nums1 = nums1.sorted()\\n        let nums2 = nums2.sorted()\\n        var result = [Int]()\\n        var left = 0\\n        \\n        for i in 0..<nums1.count {\\n            if left >= nums2.count {\\n                break\\n            }\\n            left = binarySearch(left, nums1[i], nums2)\\n            if left < nums2.count && nums1[i] == nums2[left] {\\n                result.append(nums1[i])\\n                left += 1\\n            }\\n        }\\n        \\n        return result\\n    }\\n    \\n    private func binarySearch(_ left: Int, _ num: Int, _ nums: [Int]) -> Int {\\n        var left = left\\n        var right = nums.count - 1\\n        var middle = 0\\n        \\n        while left < right {\\n            middle = (left + right) / 2\\n            if nums[left] == num {\\n                return left\\n            }\\n            if nums[middle] < num {\\n                left = middle + 1\\n            } else if nums[middle] > num {\\n                right = middle\\n            } else {\\n                if middle - 1 >= left && nums[middle - 1] == num {\\n                    right = middle - 1\\n                } else {\\n                    return middle\\n                }\\n            }\\n        }\\n        \\n        return left\\n    }\\n}\\n```",
                "solutionTags": [
                    "Swift",
                    "Hash Table",
                    "Two Pointers",
                    "Binary Search"
                ],
                "code": "```\\nclass Solution {\\n    func intersect_TwoPointers(_ nums1: [Int], _ nums2: [Int]) -> [Int] {\\n        let nums1 = nums1.sorted()\\n        let nums2 = nums2.sorted()\\n        let n1 = nums1.count\\n        let n2 = nums2.count\\n        var i1 = 0\\n        var i2 = 0\\n        var result = [Int]()\\n        \\n        while i1 < n1 && i2 < n2 {\\n            if nums1[i1] == nums2[i2] {\\n                result.append(nums1[i1])\\n                i1 += 1\\n                i2 += 1\\n            } else if nums1[i1] > nums2[i2] {\\n                i2 += 1\\n            } else {\\n                i1 += 1\\n            }\\n        }\\n        \\n        return result\\n    }\\n    \\n    func intersect_HashMap(_ nums1: [Int], _ nums2: [Int]) -> [Int] {\\n        var map = [Int: Int]()\\n        var result = [Int]()\\n        \\n        for i in 0..<nums1.count {\\n            if let value = map[nums1[i]] {\\n                map[nums1[i]] = value + 1\\n            } else {\\n                map[nums1[i]] = 1\\n            }\\n        }\\n        for i in 0..<nums2.count {\\n            if let value = map[nums2[i]] {\\n                map[nums2[i]] = value - 1\\n                if value - 1 >= 0 {\\n                    result.append(nums2[i])\\n                }\\n            }\\n        }\\n        \\n        return result\\n    }\\n    \\n    func intersect_BinarySearch(_ nums1: [Int], _ nums2: [Int]) -> [Int] {\\n        if nums1.count == 0 || nums2.count == 0 {\\n            return []\\n        }\\n        \\n        let nums1 = nums1.sorted()\\n        let nums2 = nums2.sorted()\\n        var result = [Int]()\\n        var left = 0\\n        \\n        for i in 0..<nums1.count {\\n            if left >= nums2.count {\\n                break\\n            }\\n            left = binarySearch(left, nums1[i], nums2)\\n            if left < nums2.count && nums1[i] == nums2[left] {\\n                result.append(nums1[i])\\n                left += 1\\n            }\\n        }\\n        \\n        return result\\n    }\\n    \\n    private func binarySearch(_ left: Int, _ num: Int, _ nums: [Int]) -> Int {\\n        var left = left\\n        var right = nums.count - 1\\n        var middle = 0\\n        \\n        while left < right {\\n            middle = (left + right) / 2\\n            if nums[left] == num {\\n                return left\\n            }\\n            if nums[middle] < num {\\n                left = middle + 1\\n            } else if nums[middle] > num {\\n                right = middle\\n            } else {\\n                if middle - 1 >= left && nums[middle - 1] == num {\\n                    right = middle - 1\\n                } else {\\n                    return middle\\n                }\\n            }\\n        }\\n        \\n        return left\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 82289,
                "title": "solution-to-first-follow-up-question",
                "content": "What if the given array is already sorted? How would you optimize your algorithm?\\n\\nIf both the arrays are sorted, we can use two pointers technique. Run time would be O(n+m) with O(1) space complexity. \\n\\nCode would look something like below\\n```\\n        i = 0\\n        j = 0\\n        res = []\\n        while i < len(nums1) and j < len(nums2):\\n            if nums1[i] < nums2[j]:\\n                i += 1\\n            elif nums1[i] > nums2[j]:\\n                j += 1\\n            else:\\n                res.append(nums1[i])\\n                i += 1\\n                j += 1\\n        \\n        return res \\n```",
                "solutionTags": [],
                "code": "```\\n        i = 0\\n        j = 0\\n        res = []\\n        while i < len(nums1) and j < len(nums2):\\n            if nums1[i] < nums2[j]:\\n                i += 1\\n            elif nums1[i] > nums2[j]:\\n                j += 1\\n            else:\\n                res.append(nums1[i])\\n                i += 1\\n                j += 1\\n        \\n        return res \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3806047,
                "title": "python-3-3-solutions-1-line-solution-counters-2-pointers",
                "content": "```python3 []\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        return (Counter(nums1) & Counter(nums2)).elements()\\n```\\n```python3 []\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        res, cnt1, cnt2 = [], Counter(nums1), Counter(nums2)\\n        for n, k in cnt1.items():\\n            if n in cnt2:\\n                res.extend([n]*min(k, cnt2[n]))\\n        return res\\n```\\n```python3 []\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        nums1.sort()\\n        nums2.sort()\\n\\n        res = []\\n        i, j = 0, 0\\n        while i < len(nums1) and j < len(nums2):\\n            if nums1[i] < nums2[j]:\\n                i +=1\\n            elif nums1[i] > nums2[j]:\\n                j +=1\\n            else:\\n                res.append(nums1[i])\\n                i +=1\\n                j +=1\\n\\n        return res\\n```\\n",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```python3 []\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        return (Counter(nums1) & Counter(nums2)).elements()\\n```\n```python3 []\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        res, cnt1, cnt2 = [], Counter(nums1), Counter(nums2)\\n        for n, k in cnt1.items():\\n            if n in cnt2:\\n                res.extend([n]*min(k, cnt2[n]))\\n        return res\\n```\n```python3 []\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        nums1.sort()\\n        nums2.sort()\\n\\n        res = []\\n        i, j = 0, 0\\n        while i < len(nums1) and j < len(nums2):\\n            if nums1[i] < nums2[j]:\\n                i +=1\\n            elif nums1[i] > nums2[j]:\\n                j +=1\\n            else:\\n                res.append(nums1[i])\\n                i +=1\\n                j +=1\\n\\n        return res\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3248460,
                "title": "solution-using-two-pointer-approach",
                "content": "# Intuition :\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nWe need to return the intersection of two arrays, i.e. all the common elements that these both arrays share.\\nThis problem can be  solved through simple comparison using two pointer approach.\\n\\n# Approach :\\n<!-- Describe your approach to solving the problem. -->\\nTo begin solving the problem we\\'ll first sort both the arrays to make future comparisons.\\nthen we\\'ll place two pointers each at the strating of the two arrays to make the final comparisons and we\\'ll store the final result in the array ans.\\n# Complexity :\\n- Time complexity: nearly $$O(n*log(n))$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n\\n- Space complexity : No extra space was used so $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        sort(nums1.begin(), nums1.end());\\n        sort(nums2.begin(), nums2.end());\\n        int i = 0, j = 0;\\n        vector<int> ans;\\n        while(i < nums1.size() && j < nums2.size()){\\n            if(nums1[i] == nums2[j]){\\n                ans.push_back(nums1[i]);\\n                i++;\\n\\t\\t\\t\\tj++;\\n            }\\n            else if(nums1[i] < nums2[j]){\\n                i++;\\n            }\\n            else if(nums1[i] > nums2[j]){\\n                j++;\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```\\n\\n---\\n\\n\\n\\n**PLEASE UPVOTE IF YOU LIKED THE SOLUTION :)**\\n\\n![ezgif.com-optimize.gif](https://assets.leetcode.com/users/images/f4a2a471-52f5-4b2e-a989-2a0d7dadfac1_1677775052.7804227.gif)\\n\\n\\n\\n",
                "solutionTags": [
                    "C++",
                    "Two Pointers",
                    "Sorting"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        sort(nums1.begin(), nums1.end());\\n        sort(nums2.begin(), nums2.end());\\n        int i = 0, j = 0;\\n        vector<int> ans;\\n        while(i < nums1.size() && j < nums2.size()){\\n            if(nums1[i] == nums2[j]){\\n                ans.push_back(nums1[i]);\\n                i++;\\n\\t\\t\\t\\tj++;\\n            }\\n            else if(nums1[i] < nums2[j]){\\n                i++;\\n            }\\n            else if(nums1[i] > nums2[j]){\\n                j++;\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3186673,
                "title": "python-clean-simple-solution",
                "content": "\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n- Here firstly we are sorting both of the list.\\n- then we are adding infinity to end of the list in both.\\n- Now we need to ust compare elements from start of both the list.\\n- If both are same so move 1 ahead in both of the list and add it to our ans.\\n- else check which one has smaller value move that list ahead by 1.\\n\\nI personally felt many problems you can solve easily if you are familier with merge sort application here by while loop of that is similar to that one.\\n\\n> so, if you can relate items than you can learn anything.\\n\\n# Complexity\\n- Time complexity: $$O(max(mlogm, nlogn))$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(min(m, n))$$ \\nbecause we are keeping a list to store intersection so in worst case all elements can have same value.\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        nums1.sort()\\n        nums2.sort()\\n\\n        n1 = len(nums1)\\n        n2 = len(nums2)\\n\\n        nums1.append(inf)\\n        nums2.append(inf)\\n\\n        i = j = 0\\n        ans = []\\n        while i != n1 and j != n2:\\n            if nums1[i] == nums2[j]:\\n                ans.append(nums1[i])\\n                i += 1\\n                j += 1\\n            elif nums1[i] < nums2[j]:\\n                i += 1\\n            else:\\n                j+=1\\n        return ans\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        nums1.sort()\\n        nums2.sort()\\n\\n        n1 = len(nums1)\\n        n2 = len(nums2)\\n\\n        nums1.append(inf)\\n        nums2.append(inf)\\n\\n        i = j = 0\\n        ans = []\\n        while i != n1 and j != n2:\\n            if nums1[i] == nums2[j]:\\n                ans.append(nums1[i])\\n                i += 1\\n                j += 1\\n            elif nums1[i] < nums2[j]:\\n                i += 1\\n            else:\\n                j+=1\\n        return ans\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3039889,
                "title": "c-beats-100-hash-table-array-easy-to-understand",
                "content": "# Proof beats\\n![image.png](https://assets.leetcode.com/users/images/8cdd1bac-ffb3-4962-b60d-6679a5d8e81d_1673516299.3264258.png)\\n\\n# Approach 1\\n- **For each element of the first array**, we **count how many times it occurs**, and enter the data into a **hash table**.\\n- Now we will iterate over the elements of the second array. If **the current element is in the hash table**, then **we put it in the answer**, after which we decrement. If the result of the decrement is 0, then the element can be removed from the hash table.\\n\\n# Code\\n```C++ []\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int, int> m;\\n        for (int i = 0; i < nums1.size(); i++) {\\n            m[nums1[i]]++;\\n        }\\n        vector<int> result;\\n        for (int i = 0; i < nums2.size(); i++) {\\n            if (m.find(nums2[i]) != m.end()) {\\n                result.push_back(nums2[i]);\\n                m[nums2[i]]--;\\n                if (m[nums2[i]] == 0) {\\n                    m.erase(nums2[i]);\\n                }\\n            }\\n        }\\n        return result;\\n    }\\n};\\n```\\n\\n# Approach 2\\n- Since **the constraint on element values** ```0 <= nums1[i], nums2[i] <= 1000```, then **instead of a hash table**, it is enough to have **an array of size 1001**.\\n\\n# Code\\n```C++ []\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> table(1001, 0);\\n        for (int i = 0; i < nums1.size(); i++) {\\n            table[nums1[i]]++;\\n        }\\n        vector<int> result;\\n        for (int i = 0; i < nums2.size(); i++) {\\n            if (table[nums2[i]] != 0) {\\n                result.push_back(nums2[i]);\\n                table[nums2[i]]--;\\n            }\\n        }\\n        return result;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Hash Table"
                ],
                "code": "```C++ []\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int, int> m;\\n        for (int i = 0; i < nums1.size(); i++) {\\n            m[nums1[i]]++;\\n        }\\n        vector<int> result;\\n        for (int i = 0; i < nums2.size(); i++) {\\n            if (m.find(nums2[i]) != m.end()) {\\n                result.push_back(nums2[i]);\\n                m[nums2[i]]--;\\n                if (m[nums2[i]] == 0) {\\n                    m.erase(nums2[i]);\\n                }\\n            }\\n        }\\n        return result;\\n    }\\n};\\n```\n```0 <= nums1[i], nums2[i] <= 1000```\n```C++ []\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> table(1001, 0);\\n        for (int i = 0; i < nums1.size(); i++) {\\n            table[nums1[i]]++;\\n        }\\n        vector<int> result;\\n        for (int i = 0; i < nums2.size(); i++) {\\n            if (table[nums2[i]] != 0) {\\n                result.push_back(nums2[i]);\\n                table[nums2[i]]--;\\n            }\\n        }\\n        return result;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2935903,
                "title": "solved-using-c-with-detailed-explanation-of-the-approaches-discussed",
                "content": "# Intuition\\nAfter seeing the problem first thing that came in my mind was hashmap. But there is another aprroach to solve this problem which is better. I have discussed both of them here.\\n\\n# Approach 1 (Hashmap)\\nSimply traverse nums1 and store the elements and their frequency as a key value pair respectively. After traversing the first array traverse the second array and check if it\\'s frequency in the hashmap is greater than zero or not (which signifies the element is present in array 1 too). If freq > 0 then push the element into output array and decrement the frequency by 1 (to make sure that the element is pushed into the output array minimum number of times of it\\'s frequency in both the arrays).\\n\\n# Complexity\\n- Time complexity: O(m + n)\\n\\n- Space complexity: O(m + n)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> res;\\n        unordered_map<int, int> m;\\n        for (int i = 0; i < nums1.size(); i++) m[nums1[i]]++;\\n        for (int i = 0; i < nums2.size(); i++){\\n            if (m[nums2[i]] > 0){\\n                res.push_back(nums2[i]);\\n                m[nums2[i]]--;\\n            }\\n        }\\n        return res;\\n    }\\n};\\n```\\n# Approach 2 (Create auxilliary array of size 1001)\\nSimply create an array of size 1001() with default value initialized as 0 whose ith index represents the freq of ith element in the nums1. Traverse the nums1 and update the frequency of respective element found while traversing. After traversing thr nums1 traverse nums2 and for each element check it\\'s frequency, if freq > 0 (which signifies the element is present in nums1 too) then push it into the output array and decrement the frequency by 1(to make sure that the element is pushed into the output array minimum number of times of it\\'s frequency in both the arrays). \\n\\n# Complexity\\n- Time complexity: O(m + n)\\n\\n- Space complexity: O(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> res;\\n        int arr[1001] = {0};\\n        for (int i = 0; i < nums1.size(); i++) arr[nums1[i]]++;\\n        for (int i = 0; i < nums2.size(); i++){\\n            if (arr[nums2[i]] != 0){\\n                res.push_back(nums2[i]);\\n                arr[nums2[i]]--;\\n            }\\n        }\\n        return res;\\n    }\\n};\\n```\\n",
                "solutionTags": [
                    "C++",
                    "Array",
                    "Hash Table"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> res;\\n        unordered_map<int, int> m;\\n        for (int i = 0; i < nums1.size(); i++) m[nums1[i]]++;\\n        for (int i = 0; i < nums2.size(); i++){\\n            if (m[nums2[i]] > 0){\\n                res.push_back(nums2[i]);\\n                m[nums2[i]]--;\\n            }\\n        }\\n        return res;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> res;\\n        int arr[1001] = {0};\\n        for (int i = 0; i < nums1.size(); i++) arr[nums1[i]]++;\\n        for (int i = 0; i < nums2.size(); i++){\\n            if (arr[nums2[i]] != 0){\\n                res.push_back(nums2[i]);\\n                arr[nums2[i]]--;\\n            }\\n        }\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2767853,
                "title": "in-n-time-complexity",
                "content": "```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        dc=defaultdict(lambda:0)\\n        for a in nums1:\\n            dc[a]+=1\\n        dc2=defaultdict(lambda:0)\\n        for b in nums2:\\n            dc2[b]+=1\\n        ans=[]\\n        for a in dc:\\n            if(dc2[a]>0):\\n                ans+=[a]*min(dc[a],dc2[a])\\n        return ans\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        dc=defaultdict(lambda:0)\\n        for a in nums1:\\n            dc[a]+=1\\n        dc2=defaultdict(lambda:0)\\n        for b in nums2:\\n            dc2[b]+=1\\n        ans=[]\\n        for a in dc:\\n            if(dc2[a]>0):\\n                ans+=[a]*min(dc[a],dc2[a])\\n        return ans\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2682351,
                "title": "easy-java-solution-with-o-n-k-time-and-space-complexity",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nIntuition is to use a frequency array seeing the constraints. The max size of any array element is <=1000 that means a frequency array occupying not much space. And the traversing the array also becomes time-efficient due to the small constraints.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nApproach:\\n- First traverse both arrays and store the frequency of their elements in respective freq[] arrays of sizes 1001 each (since constraint is at 1000). \\n- Next, traverse and integer i from 0 to 1001 in a resulting frequency array freqres[] which is also of the size 1001.\\n     - At each iteration do the operation: freqres[i] = Math.min(freq1[i], freq2[i])\\n     - Also, keep track of the sum of the values of the freqres array in a variable \"size\", as this will be the size of the final array res[].\\n- Next, intitialize a pointer as 0 and start traversal of the freqres[] array, where for each non-zero element of freqres[]:\\n    - Keep decrementing the freqres[i] until zero\\n    - and for each decrementing iteration, keep incrementing the pointer \\n    - while storing \"i\" in res[pointer] where, res[] is the resulting array.\\n\\n# Complexity\\n- Time complexity:\\n    - Since we can have larger constraints, the time complexity will depend on number of same elements and the range of elements. Which is **O(n+k)**, where n is max(nums1.length, nums2,length), and k is the range of data.\\n\\n\\n- Space complexity:\\n    - In terms of \\'n\\' and \\'k\\', it will be **O(n+k)** as well.\\n\\n# Code\\n```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        int freq1[] = new int[1001];\\n        int freq2[] = new int[1001];\\n        for(int i=0;i<nums1.length;i++){\\n            freq1[nums1[i]]++;\\n        }\\n        for(int i=0;i<nums2.length;i++){\\n            freq2[nums2[i]]++;\\n        }\\n        int freqres[] = new int[1001];\\n        int size=0;\\n        for(int i=0;i<1001;i++){\\n            freqres[i] = Math.min(freq1[i],freq2[i]);\\n            size+=freqres[i];\\n        }\\n        int res[] = new int[size];\\n        int pointer = 0;\\n        for(int i=0;i<1001;i++){\\n            while(freqres[i]!=0){\\n                res[pointer] = i;\\n                pointer++;\\n                freqres[i]--;\\n            }\\n        }\\n        return res;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Array"
                ],
                "code": "```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        int freq1[] = new int[1001];\\n        int freq2[] = new int[1001];\\n        for(int i=0;i<nums1.length;i++){\\n            freq1[nums1[i]]++;\\n        }\\n        for(int i=0;i<nums2.length;i++){\\n            freq2[nums2[i]]++;\\n        }\\n        int freqres[] = new int[1001];\\n        int size=0;\\n        for(int i=0;i<1001;i++){\\n            freqres[i] = Math.min(freq1[i],freq2[i]);\\n            size+=freqres[i];\\n        }\\n        int res[] = new int[size];\\n        int pointer = 0;\\n        for(int i=0;i<1001;i++){\\n            while(freqres[i]!=0){\\n                res[pointer] = i;\\n                pointer++;\\n                freqres[i]--;\\n            }\\n        }\\n        return res;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2154281,
                "title": "javascript-tips-for-binary-search",
                "content": "**Intro**\\n\\nWe can solve it by **sorting** then binary search, but there might be a small problem:\\n```\\nnums1=[4,4,5,9]\\nnums2=[4,8,9,9]\\n```\\nThe answer should be `[4,9]`. However,\\nif we search for each `i` of `nums1` in `nums2`, we\\'ll get `[4,4,9]`.\\nif we search for each `j` of `nums2` in `nums1`, we\\'ll get `[4,9,9]`.\\n.\\nThat\\'s due to **elements may get REPEATEDLY searched**. For example, `nums1[0]` finds `nums2` has 4 in index 0, and soon after `num1[1]` finds that too, but actually `nums2` only has a SINGLE 4 for pairing. \\nTo avoid that, we have to do some **MARK on elements in `nums2`**.\\n.\\n**Method**\\n\\nWe can set it to be `-Infinity` to prevent it\\'s WRONGLY captured again. (`x`=-Infinity)\\nSince we\\'ve sorted both arrays, this MINIMUM value won\\'t affect the range of binary-searching.\\n\\n```\\nnums1[0]=4, nums2=[4,8,9,9] -> Find 4 in nums2[0], output=[4]\\nnums1[1]=4, nums2=[x,8,9,9] -> No pair, output=[4]\\nnums1[2]=5, nums2=[x,8,9,9] -> No pair, output=[4]\\nnums1[3]=9, nums2=[x,8,9,9] -> Find 9 in nums2[2], output=[4,9]\\n```\\n\\n**Full Codes**\\n\\n```\\nvar intersect = function(nums1, nums2) {\\n    nums1.sort((a,b)=>a-b); nums2.sort((a,b)=>a-b);\\n    let output=[];\\n    for(let i=0; i<nums1.length; i++){\\n        if(binary(nums1[i])){\\n\\t\\t\\toutput.push(nums1[i]);\\n\\t\\t}\\n    }\\n    return output;\\n    \\n    function binary(n){\\n        let l=0, r=nums2.length-1;\\n        while(l<r){\\n            let mid=l+Math.floor((r-l)/2);\\n            if(nums2[mid]<n){\\n\\t\\t\\t\\tl=mid+1;\\n\\t\\t\\t}else{\\n\\t\\t\\t\\tr=mid;\\n\\t\\t\\t}\\n        }\\n        if(nums2[l]==n){\\n            nums2[l]=-Infinity; return true;\\n        }\\n        return false;\\n    }\\n};\\n```\\n\\nThanks for your reading and **up-voting** :)\\n\\n**\\u2B50 Check [HERE](https://github.com/Lynn19950915/LeetCode_King) for my full Leetcode Notes ~**\\n",
                "solutionTags": [
                    "JavaScript",
                    "Sorting",
                    "Binary Tree"
                ],
                "code": "```\\nnums1=[4,4,5,9]\\nnums2=[4,8,9,9]\\n```\n```\\nnums1[0]=4, nums2=[4,8,9,9] -> Find 4 in nums2[0], output=[4]\\nnums1[1]=4, nums2=[x,8,9,9] -> No pair, output=[4]\\nnums1[2]=5, nums2=[x,8,9,9] -> No pair, output=[4]\\nnums1[3]=9, nums2=[x,8,9,9] -> Find 9 in nums2[2], output=[4,9]\\n```\n```\\nvar intersect = function(nums1, nums2) {\\n    nums1.sort((a,b)=>a-b); nums2.sort((a,b)=>a-b);\\n    let output=[];\\n    for(let i=0; i<nums1.length; i++){\\n        if(binary(nums1[i])){\\n\\t\\t\\toutput.push(nums1[i]);\\n\\t\\t}\\n    }\\n    return output;\\n    \\n    function binary(n){\\n        let l=0, r=nums2.length-1;\\n        while(l<r){\\n            let mid=l+Math.floor((r-l)/2);\\n            if(nums2[mid]<n){\\n\\t\\t\\t\\tl=mid+1;\\n\\t\\t\\t}else{\\n\\t\\t\\t\\tr=mid;\\n\\t\\t\\t}\\n        }\\n        if(nums2[l]==n){\\n            nums2[l]=-Infinity; return true;\\n        }\\n        return false;\\n    }\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2036264,
                "title": "python-beats-98-multiple-solutions-one-liner-two-liners-simple-clean-use-dictionary",
                "content": "**Original Solution:  Straigtforward intuitive solution using dictionary and list multiplication**\\n```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        dict1, dict2 = Counter(nums1), Counter(nums2)\\n        res = []\\n        for key in dict1:\\n            if key in dict1 and key in dict2:\\n                res += [key] * min(dict1[key], dict2[key])\\n        return res\\n```\\n\\n     \\n**Solution 2:  Clean up solution 1 using list comprehension**\\n```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        d1, d2 = Counter(nums1), Counter(nums2)\\n        return [num for num in d1 & d2 for count in range(min(d1[num], d2[num]))]\\n```\\n\\nThis can also easily become a one-liner solution as below,  but it is not an optimization considering readability. \\n```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        return [num for num in Counter(nums1) & Counter(nums2) for count in range(min(Counter(nums2)[num], Counter(nums2)[num]))]\\n```\\n\\n \\n**Solution 3: Bitwise operation on dictionaries**\\n```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        dict1, dict2 = Counter(nums1), Counter(nums2)\\n        return list((dict1 & dict2).elements())       \\n```\\n\\n_________________________________________________________\\nI am a total beginner, writing these all out to help myself, and hopefully also help anyone out there who is like me at the same time. \\n\\nPlease upvote\\u2B06\\uFE0F if you find this helpful or worth-reading in anyway.  Your upvote is more than just supportive to me. \\uD83D\\uDE33\\uD83E\\uDD13\\uD83E\\uDD70\\n\\nIf you find this is not helpful, needs improvement, or questionable, would you please leave a quick comment below to point out the problem before you decide to downvote?  It will be very very helpful for me to learn as a beginner. \\n\\nThank you very much either way \\uD83E\\uDD13.",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        dict1, dict2 = Counter(nums1), Counter(nums2)\\n        res = []\\n        for key in dict1:\\n            if key in dict1 and key in dict2:\\n                res += [key] * min(dict1[key], dict2[key])\\n        return res\\n```\n```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        d1, d2 = Counter(nums1), Counter(nums2)\\n        return [num for num in d1 & d2 for count in range(min(d1[num], d2[num]))]\\n```\n```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        return [num for num in Counter(nums1) & Counter(nums2) for count in range(min(Counter(nums2)[num], Counter(nums2)[num]))]\\n```\n```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        dict1, dict2 = Counter(nums1), Counter(nums2)\\n        return list((dict1 & dict2).elements())       \\n```",
                "codeTag": "Java"
            },
            {
                "id": 1966544,
                "title": "c-100-faster-easily-understandable",
                "content": "```\\nclass Solution\\n{\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) \\n    {\\n        vector<int> res;\\n        unordered_map<int, int> myMap;\\n        for(const auto &item : nums1)\\n            myMap[item]++;\\n        for(const auto &item : nums2)\\n        {\\n            if(myMap[item] > 0)\\n            {\\n                res.push_back(item);\\n                myMap[item]--;\\n            }\\n        }\\n        return res;\\n    }\\n};\\n```\\n**Please upvote if you like it :).**",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution\\n{\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) \\n    {\\n        vector<int> res;\\n        unordered_map<int, int> myMap;\\n        for(const auto &item : nums1)\\n            myMap[item]++;\\n        for(const auto &item : nums2)\\n        {\\n            if(myMap[item] > 0)\\n            {\\n                res.push_back(item);\\n                myMap[item]--;\\n            }\\n        }\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1869462,
                "title": "most-easy-soln-without-hashmap",
                "content": "***easy SOLN  \\nup vote if you Understand it***\\n\\n\\n\\n```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        ArrayList < Integer> l= new ArrayList<>();  //creating arraylist \\n        \\n        Arrays.sort( nums1); // sort both the array\\n        Arrays.sort(nums2);\\n        \\n        int i=0 ,j=0;\\n           while(i < nums1.length && j < nums2.length) {  //then compare elements of both arrays \\n            if(nums1[i] == nums2[j]) {\\n                l.add(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n            else if(nums1[i] < nums2[j]) {  \\n                i++;\\n            }\\n            else {\\n                j++;\\n            }\\n        }\\n        int k=0;\\n        int arr[]= new int [l.size()];   \\n        for(int m: l){   // creating array\\n            arr[k++]=m;\\n        }\\n        return arr;\\n    }\\n}\\n```\\n# DRY RUN FOR BETTER UNDERSTANDING",
                "solutionTags": [
                    "Java",
                    "Array"
                ],
                "code": "```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        ArrayList < Integer> l= new ArrayList<>();  //creating arraylist \\n        \\n        Arrays.sort( nums1); // sort both the array\\n        Arrays.sort(nums2);\\n        \\n        int i=0 ,j=0;\\n           while(i < nums1.length && j < nums2.length) {  //then compare elements of both arrays \\n            if(nums1[i] == nums2[j]) {\\n                l.add(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n            else if(nums1[i] < nums2[j]) {  \\n                i++;\\n            }\\n            else {\\n                j++;\\n            }\\n        }\\n        int k=0;\\n        int arr[]= new int [l.size()];   \\n        for(int m: l){   // creating array\\n            arr[k++]=m;\\n        }\\n        return arr;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1172491,
                "title": "python-easy-to-understand",
                "content": "```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        ret=[]\\n        if len(nums1)>=len(nums2):\\n            long = nums1\\n            short = nums2\\n        else:\\n            long = nums2\\n            short = nums1\\n        \\n        for i in short:\\n            if i in long:\\n                ret.append(i)\\n                long.remove(i)\\n        return ret\\n```\\nRuntime: 56 ms, faster than 24.05% of Python3 online submissions for Intersection of Two Arrays II.\\nMemory Usage: 14.4 MB, less than 40.27% of Python3 online submissions for Intersection of Two Arrays II.",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        ret=[]\\n        if len(nums1)>=len(nums2):\\n            long = nums1\\n            short = nums2\\n        else:\\n            long = nums2\\n            short = nums1\\n        \\n        for i in short:\\n            if i in long:\\n                ret.append(i)\\n                long.remove(i)\\n        return ret\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1171477,
                "title": "javascript-solution-using-an-object",
                "content": "```\\nconst intersect = (n1, n2) => {\\n  const seen = {};\\n  const res = [];\\n  for (let n of n1) {\\n    if (!seen[n]) seen[n] = 0;\\n    seen[n]++;\\n  }\\n\\n  for (let n of n2) {\\n    if (seen[n] > 0) {\\n      res.push(n);\\n      seen[n]--;\\n    }\\n  }\\n  return res;\\n};\\n```\\nTime: O(n + m)\\nSpace: O(n)",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nconst intersect = (n1, n2) => {\\n  const seen = {};\\n  const res = [];\\n  for (let n of n1) {\\n    if (!seen[n]) seen[n] = 0;\\n    seen[n]++;\\n  }\\n\\n  for (let n of n2) {\\n    if (seen[n] > 0) {\\n      res.push(n);\\n      seen[n]--;\\n    }\\n  }\\n  return res;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1105689,
                "title": "simple-python-solution-beats-95-online-subs",
                "content": "Absolutely simple solution. All I did was I just sort both the arrays and then compared them by each element. Suppose if nums[i]<nums[j] I just incremented i+=1  and vice versa(j+=1)\\nThats all the logic\\n\\n\\n        Runtime: 40 ms, faster than 95.91% of Python3 online submissions for Intersection of Two Arrays II.\\n        Memory Usage: 14.4 MB, less than 42.68% of Python3 online submissions for Intersection of Two Arrays II.\\n        result = []\\n        \\n        nums1.sort()\\n        nums2.sort()\\n        i = 0\\n        j = 0\\n        \\n        \\n        \\n        while i < len(nums1) and j < len(nums2):\\n            if nums1[i]==nums2[j]:\\n                result.append(nums1[i])\\n                i+=1\\n                j+=1\\n                \\n            elif nums1[i]<nums2[j]:\\n                i+=1\\n                \\n            else:\\n                j+=1\\n                \\n        return result\\n\\t\\t\\n**UPVOTE IF YOU FIND IT HELPFUL**",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "Absolutely simple solution. All I did was I just sort both the arrays and then compared them by each element. Suppose if nums[i]<nums[j] I just incremented i+=1  and vice versa(j+=1)\\nThats all the logic\\n\\n\\n        Runtime: 40 ms, faster than 95.91% of Python3 online submissions for Intersection of Two Arrays II.\\n        Memory Usage: 14.4 MB, less than 42.68% of Python3 online submissions for Intersection of Two Arrays II.\\n        result = []\\n        \\n        nums1.sort()\\n        nums2.sort()\\n        i = 0\\n        j = 0\\n        \\n        \\n        \\n        while i < len(nums1) and j < len(nums2):\\n            if nums1[i]==nums2[j]:\\n                result.append(nums1[i])\\n                i+=1\\n                j+=1\\n                \\n            elif nums1[i]<nums2[j]:\\n                i+=1\\n                \\n            else:\\n                j+=1\\n                \\n        return result\\n\\t\\t\\n**UPVOTE IF YOU FIND IT HELPFUL**",
                "codeTag": "Unknown"
            },
            {
                "id": 376166,
                "title": "javascript",
                "content": "```\\nvar intersect = function(nums1, nums2) {\\n    \\n    const hash = {}, ar = []\\n    \\n    nums2.forEach(num => {\\n        hash[num] ? hash[num]++ : hash[num] = 1\\n    })\\n    \\n    for (let i = 0; i < nums1.length; i++){\\n        if (hash[nums1[i]] > 0){\\n            ar.push(nums1[i])\\n            hash[nums1[i]]--\\n        }\\n    }\\n    return ar\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nvar intersect = function(nums1, nums2) {\\n    \\n    const hash = {}, ar = []\\n    \\n    nums2.forEach(num => {\\n        hash[num] ? hash[num]++ : hash[num] = 1\\n    })\\n    \\n    for (let i = 0; i < nums1.length; i++){\\n        if (hash[nums1[i]] > 0){\\n            ar.push(nums1[i])\\n            hash[nums1[i]]--\\n        }\\n    }\\n    return ar\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 324321,
                "title": "1-line-python",
                "content": "```python\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        return [*(collections.Counter(nums1) & collections.Counter(nums2)).elements()]\\n```\\n\\n```python\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        nums1.sort()\\n        nums2.sort()\\n        r = []\\n        i = j = 0\\n        while i < len(nums1) and j < len(nums2):\\n            if nums1[i] == nums2[j]:\\n                r.append(nums1[i])\\n                i += 1\\n                j += 1\\n            elif nums1[i] < nums2[j]:\\n                i += 1\\n            else:\\n                j += 1\\n        return r\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```python\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        return [*(collections.Counter(nums1) & collections.Counter(nums2)).elements()]\\n```\n```python\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        nums1.sort()\\n        nums2.sort()\\n        r = []\\n        i = j = 0\\n        while i < len(nums1) and j < len(nums2):\\n            if nums1[i] == nums2[j]:\\n                r.append(nums1[i])\\n                i += 1\\n                j += 1\\n            elif nums1[i] < nums2[j]:\\n                i += 1\\n            else:\\n                j += 1\\n        return r\\n```",
                "codeTag": "Java"
            },
            {
                "id": 136353,
                "title": "follow-up-solutions",
                "content": "Default solution: `O(max(a, b))` memory and `O(a + b)` time. \\n```Python\\nfrom collections import defaultdict\\n\\nclass Solution:\\n    def intersect(self, nums1, nums2):\\n        nums1_frequencies = defaultdict(int)\\n        for num in nums1:\\n            nums1_frequencies[num] += 1\\n            \\n        result = []\\n        for num in nums2:\\n            if nums1_frequencies[num] > 0:\\n                result.append(num)\\n                nums1_frequencies[num] -= 1\\n                \\n        return result\\n```\\nWhat if nums1\\'s size is small compared to nums2\\'s size?\\nWe could simply swap the larger for the smaller array, leaving us with `O(min(a, b))` memory and still `O(a + b)` time.\\n```Python\\nfrom collections import Counter\\n\\nclass Solution:\\n    def intersect(self, nums1, nums2):\\n        if len(nums1) > len(nums2):\\n            return self.intersect(nums2, nums1)\\n        \\n        nums1_counts = Counter(nums1)\\n       \\n        result = []\\n        for num in nums2:\\n            if num in nums1_counts and nums1_counts[num] > 0:\\n                result.append(num)\\n                nums1_counts[num] -= 1\\n                \\n        return result\\n```\\nNow, what if the arrays were sorted? We could use cursor aproach. Leaving us with `O(1)` memory (without result array) and `O(a + b)` time.\\n```Python\\nclass Solution:\\n    def intersect(self, nums1, nums2):\\n        nums1.sort()\\n        nums2.sort()\\n        \\n        result = []\\n        i = 0\\n        j = 0\\n        while i < len(nums1) and j < len(nums2):\\n            if nums1[i] == nums2[j]:\\n                result.append(nums1[i])\\n                i += 1\\n                j += 1\\n                \\n            elif nums1[i] > nums2[j]:\\n                j += 1\\n            \\n            else:\\n                i += 1\\n                \\n        return result\\n```\\nWhat if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?\\nWe could use the above aproach with added complexity of swapping few MB or even GB chunks from disk into memory. Because at any point in time we don\\'t need the while `nums1` or the `nums2` array.",
                "solutionTags": [],
                "code": "```Python\\nfrom collections import defaultdict\\n\\nclass Solution:\\n    def intersect(self, nums1, nums2):\\n        nums1_frequencies = defaultdict(int)\\n        for num in nums1:\\n            nums1_frequencies[num] += 1\\n            \\n        result = []\\n        for num in nums2:\\n            if nums1_frequencies[num] > 0:\\n                result.append(num)\\n                nums1_frequencies[num] -= 1\\n                \\n        return result\\n```\n```Python\\nfrom collections import Counter\\n\\nclass Solution:\\n    def intersect(self, nums1, nums2):\\n        if len(nums1) > len(nums2):\\n            return self.intersect(nums2, nums1)\\n        \\n        nums1_counts = Counter(nums1)\\n       \\n        result = []\\n        for num in nums2:\\n            if num in nums1_counts and nums1_counts[num] > 0:\\n                result.append(num)\\n                nums1_counts[num] -= 1\\n                \\n        return result\\n```\n```Python\\nclass Solution:\\n    def intersect(self, nums1, nums2):\\n        nums1.sort()\\n        nums2.sort()\\n        \\n        result = []\\n        i = 0\\n        j = 0\\n        while i < len(nums1) and j < len(nums2):\\n            if nums1[i] == nums2[j]:\\n                result.append(nums1[i])\\n                i += 1\\n                j += 1\\n                \\n            elif nums1[i] > nums2[j]:\\n                j += 1\\n            \\n            else:\\n                i += 1\\n                \\n        return result\\n```",
                "codeTag": "Java"
            },
            {
                "id": 82244,
                "title": "my-two-pointers-solution-and-the-answers-of-the-follow-up-questions",
                "content": "What if the given array is already sorted? How would you optimize your algorithm?\\n==>two pointers\\n\\nWhat if nums1's size is small compared to nums2's size? Which algorithm is better?\\n==>hash map\\n\\nWhat if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?\\n==> binary search\\n\\n\\n```\\n\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        ArrayList<Integer> ret = new ArrayList<>();\\n        for(int i = 0, j = 0; i < nums1.length && j < nums2.length; ){\\n            if(nums1[i] < nums2[j]){\\n                i++;\\n            }else if(nums1[i] > nums2[j]){\\n                j++;\\n            }else{\\n                ret.add(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        int[] myret = new int[ret.size()];\\n        int index = 0;\\n        for(int num : ret){\\n            myret[index++] = num;\\n        }\\n        return myret;\\n    }\\n\\n```",
                "solutionTags": [],
                "code": "```\\n\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        ArrayList<Integer> ret = new ArrayList<>();\\n        for(int i = 0, j = 0; i < nums1.length && j < nums2.length; ){\\n            if(nums1[i] < nums2[j]){\\n                i++;\\n            }else if(nums1[i] > nums2[j]){\\n                j++;\\n            }else{\\n                ret.add(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        int[] myret = new int[ret.size()];\\n        int index = 0;\\n        for(int num : ret){\\n            myret[index++] = num;\\n        }\\n        return myret;\\n    }\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 82325,
                "title": "java-3ms",
                "content": "```\\npublic class Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        \\n        int i = 0;\\n        int iL = nums1.length;\\n        \\n        int j = 0;\\n        int jL = nums2.length;\\n        \\n        int counter = 0;\\n        int[] results = new int [iL < jL ? iL : jL];\\n        \\n        while (i < iL && j < jL) {\\n            if (nums1[i] == nums2[j]) {\\n                results[counter++] = nums1[i];\\n                i++;\\n                j++;\\n            } else if (nums1[i] > nums2[j]) {\\n                j++;\\n            } else {\\n                i++;\\n            }\\n        }\\n        return Arrays.copyOf(results, counter);\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic class Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        \\n        int i = 0;\\n        int iL = nums1.length;\\n        \\n        int j = 0;\\n        int jL = nums2.length;\\n        \\n        int counter = 0;\\n        int[] results = new int [iL < jL ? iL : jL];\\n        \\n        while (i < iL && j < jL) {\\n            if (nums1[i] == nums2[j]) {\\n                results[counter++] = nums1[i];\\n                i++;\\n                j++;\\n            } else if (nums1[i] > nums2[j]) {\\n                j++;\\n            } else {\\n                i++;\\n            }\\n        }\\n        return Arrays.copyOf(results, counter);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 82439,
                "title": "compact-python-solution",
                "content": "    class Solution(object):\\n        def intersect(self, nums1, nums2):\\n            c1 = collections.Counter(nums1)\\n            c2 = collections.Counter(nums2)\\n            result = []\\n            for n in c1:\\n                if n in c2:\\n                    result += [n] * min(c1[n], c2[n])\\n            return result",
                "solutionTags": [],
                "code": "    class Solution(object):\\n        def intersect(self, nums1, nums2):\\n            c1 = collections.Counter(nums1)\\n            c2 = collections.Counter(nums2)\\n            result = []\\n            for n in c1:\\n                if n in c2:\\n                    result += [n] * min(c1[n], c2[n])\\n            return result",
                "codeTag": "Java"
            },
            {
                "id": 82450,
                "title": "java-o-m-n-using-hash-list",
                "content": "-Hash nums1 into the hashtable and increase values.\\n\\n-Put nums2 into the array list and decrease values in hashtable.\\n\\n-Convert ArrayList to array of integers.\\n\\n    public class Solution {\\n      public int[] intersect(int[] nums1, int[] nums2) {\\n        HashMap<Integer, Integer> s = new HashMap<>();\\n        List<Integer> l = new ArrayList<Integer>();\\n        for (int i:nums1) \\n            if (!s.containsKey(i)) s.put(i,1);\\n            else s.put(i,s.get(i)+1);\\n        for (int i:nums2) if(s.containsKey(i) && s.get(i) > 0) {\\n            l.add(i);\\n            s.put(i,s.get(i)-1);\\n        }\\n        int[] result = new int[l.size()];\\n        for (int i = 0; i < l.size();i++) {\\n            result[i] = l.get(i);  \\n        }\\n        return result;\\n      }\\n    }",
                "solutionTags": [],
                "code": "class Solution {\\n      public int[] intersect(int[] nums1, int[] nums2) {\\n        HashMap<Integer, Integer> s = new HashMap<>();\\n        List<Integer> l = new ArrayList<Integer>();\\n        for (int i:nums1) \\n            if (!s.containsKey(i)) s.put(i,1);\\n            else s.put(i,s.get(i)+1);\\n        for (int i:nums2) if(s.containsKey(i) && s.get(i) > 0) {\\n            l.add(i);\\n            s.put(i,s.get(i)-1);\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 3601678,
                "title": "simple-java-solution",
                "content": "# Code\\n```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        ArrayList<Integer> arr = new ArrayList<Integer>();\\n        int i = 0, j = 0;\\n\\n        while(i < nums1.length && j < nums2.length){\\n            if(nums1[i] < nums2[j]) {\\n                i++;\\n            }\\n            else if(nums1[i] > nums2[j]){\\n                j++;\\n            }\\n            else{\\n                arr.add(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        \\n        int[] output = new int[arr.size()];\\n        int k = 0;\\n        while(k < arr.size()){\\n            output[k] = arr.get(k);\\n            k++;\\n        }\\n        return output;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Array",
                    "Two Pointers",
                    "Sorting"
                ],
                "code": "```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        ArrayList<Integer> arr = new ArrayList<Integer>();\\n        int i = 0, j = 0;\\n\\n        while(i < nums1.length && j < nums2.length){\\n            if(nums1[i] < nums2[j]) {\\n                i++;\\n            }\\n            else if(nums1[i] > nums2[j]){\\n                j++;\\n            }\\n            else{\\n                arr.add(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        \\n        int[] output = new int[arr.size()];\\n        int k = 0;\\n        while(k < arr.size()){\\n            output[k] = arr.get(k);\\n            k++;\\n        }\\n        return output;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3506894,
                "title": "intersection-of-two-arrays-ii-solution-in-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(n^3)\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nO(1)\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        int i=0, j=0, flag=0;\\n        while(i<nums1.size())\\n        {\\n            flag=0;\\n            for(j=0 ; j<nums2.size() ; j++)\\n            {\\n                if(nums1[i]==nums2[j])\\n                {\\n                    nums2.erase(nums2.begin()+j);\\n                    flag=1;\\n                    i++;\\n                    break;\\n                }\\n            }\\n            if(flag==0)\\n            {\\n                nums1.erase(nums1.begin()+i);\\n            }\\n        }\\n        return nums1;\\n    }\\n};\\n```\\n![upvote new.jpg](https://assets.leetcode.com/users/images/4fe941f0-f0e1-48bf-a1eb-baa979c393ab_1683689794.7242205.jpeg)\\n",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        int i=0, j=0, flag=0;\\n        while(i<nums1.size())\\n        {\\n            flag=0;\\n            for(j=0 ; j<nums2.size() ; j++)\\n            {\\n                if(nums1[i]==nums2[j])\\n                {\\n                    nums2.erase(nums2.begin()+j);\\n                    flag=1;\\n                    i++;\\n                    break;\\n                }\\n            }\\n            if(flag==0)\\n            {\\n                nums1.erase(nums1.begin()+i);\\n            }\\n        }\\n        return nums1;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3500873,
                "title": "features-of-arraylist",
                "content": "##### **Intuition**\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        List<Integer> list = new ArrayList<>();\\n        List<Integer> intersection = new ArrayList<>();\\n\\n        for (int num : nums1) {\\n            list.add(num);\\n        }\\n\\n        for (int num : nums2) {\\n            if (list.contains(num)) {\\n                intersection.add(num);\\n                int x = list.indexOf(num);\\n                list.remove(x);\\n                \\n            }\\n        }\\n\\n        int[] ans = new int[intersection.size()];\\n        for (int i = 0; i < intersection.size(); i++) {\\n            ans[i] = intersection.get(i);\\n        }\\n\\n        return ans;\\n    }\\n}\\n\\n```",
                "solutionTags": [
                    "Java",
                    "Array"
                ],
                "code": "```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        List<Integer> list = new ArrayList<>();\\n        List<Integer> intersection = new ArrayList<>();\\n\\n        for (int num : nums1) {\\n            list.add(num);\\n        }\\n\\n        for (int num : nums2) {\\n            if (list.contains(num)) {\\n                intersection.add(num);\\n                int x = list.indexOf(num);\\n                list.remove(x);\\n                \\n            }\\n        }\\n\\n        int[] ans = new int[intersection.size()];\\n        for (int i = 0; i < intersection.size(); i++) {\\n            ans[i] = intersection.get(i);\\n        }\\n\\n        return ans;\\n    }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3307860,
                "title": "simple-loop-and-if-else-solution-python3",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        list1=[]\\n        if len(nums1)>len(nums2):\\n            for i in range(len(nums2)):\\n                if nums2[i] in nums1:\\n                    nums1.remove(nums2[i])\\n                    list1.append(nums2[i])\\n        else:\\n            for i in range(len(nums1)):\\n                if nums1[i] in nums2:\\n                    nums2.remove(nums1[i])\\n                    list1.append(nums1[i])\\n        return list1\\n\\n\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        list1=[]\\n        if len(nums1)>len(nums2):\\n            for i in range(len(nums2)):\\n                if nums2[i] in nums1:\\n                    nums1.remove(nums2[i])\\n                    list1.append(nums2[i])\\n        else:\\n            for i in range(len(nums1)):\\n                if nums1[i] in nums2:\\n                    nums2.remove(nums1[i])\\n                    list1.append(nums1[i])\\n        return list1\\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3228354,
                "title": "most-efficient-hashtable",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:O(n)-----> please upvote me\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:o(n)----->it would help me alot\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        d={}\\n        for i in nums1:\\n            if i not in d:\\n                d[i]=1\\n            else:\\n                d[i]+=1\\n        list1=[]\\n        for i in nums2:\\n            if i in d and d[i]>0:\\n                list1.append(i)\\n                d[i]-=1\\n        return list1\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        d={}\\n        for i in nums1:\\n            if i not in d:\\n                d[i]=1\\n            else:\\n                d[i]+=1\\n        list1=[]\\n        for i in nums2:\\n            if i in d and d[i]>0:\\n                list1.append(i)\\n                d[i]-=1\\n        return list1\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3228348,
                "title": "powerful-hashtable",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        d=Counter(nums1)\\n        list1=[]\\n        for i in nums2:\\n            if i in d and d[i]>0:\\n                list1.append(i)\\n                d[i]-=1\\n        return list1\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        d=Counter(nums1)\\n        list1=[]\\n        for i in nums2:\\n            if i in d and d[i]>0:\\n                list1.append(i)\\n                d[i]-=1\\n        return list1\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3069620,
                "title": "java-2ms",
                "content": "\\n\\n# Complexity\\n- Time complexity:O(M+N)  :M->size of first array,N->size of 2nd array\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n\\n\\n# Code\\n```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        HashMap<Integer,Integer>map=new HashMap<Integer,Integer>();\\n        ArrayList<Integer> ans = new ArrayList<>();\\n          \\n            \\n            for(int i:nums1){\\n                if(map.containsKey(i)){\\n                    map.put(i, map.get(i)+1);\\n                }\\n                else{\\n                    map.put(i,1);\\n                }\\n            }\\n            \\n            for(int i:nums2){\\n                if(map.containsKey(i)&&map.get(i)>0){\\n                map.put(i, map.get(i) - 1);\\n                     ans.add(i);\\n                       \\n                }\\n            }\\n        \\n        \\n        int [] arr = new int[ans.size()];\\n\\n        for(int i=0;i<arr.length;i++){\\n            arr[i]= ans.get(i);\\n        }\\n     \\n        return arr;\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        HashMap<Integer,Integer>map=new HashMap<Integer,Integer>();\\n        ArrayList<Integer> ans = new ArrayList<>();\\n          \\n            \\n            for(int i:nums1){\\n                if(map.containsKey(i)){\\n                    map.put(i, map.get(i)+1);\\n                }\\n                else{\\n                    map.put(i,1);\\n                }\\n            }\\n            \\n            for(int i:nums2){\\n                if(map.containsKey(i)&&map.get(i)>0){\\n                map.put(i, map.get(i) - 1);\\n                     ans.add(i);\\n                       \\n                }\\n            }\\n        \\n        \\n        int [] arr = new int[ans.size()];\\n\\n        for(int i=0;i<arr.length;i++){\\n            arr[i]= ans.get(i);\\n        }\\n     \\n        return arr;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2992743,
                "title": "c-simple-solution",
                "content": "# Code\\n```\\npublic class Solution {\\n    public int[] Intersect(int[] nums1, int[] nums2) {\\n\\n        Dictionary<int,int> d = new Dictionary<int,int>();\\n        foreach(int elem in nums1)\\n        {\\n            if(d.ContainsKey(elem))\\n            {\\n                d[elem]++;\\n            }\\n            else\\n                d.Add(elem,1);\\n        }\\n        List<int> list = new List<int>();\\n        foreach(int elem in nums2)\\n        {\\n            if(d.ContainsKey(elem))\\n            {\\n                list.Add(elem);\\n                d[elem]--;\\n                if(d[elem] == 0)\\n                    d.Remove(elem);\\n            }\\n        }\\n        int[] n = new int[list.Count];\\n        int i=0;\\n        foreach(int elem in list)\\n        {\\n            n[i] = elem;\\n            i++;\\n        }\\n\\n        return n;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public int[] Intersect(int[] nums1, int[] nums2) {\\n\\n        Dictionary<int,int> d = new Dictionary<int,int>();\\n        foreach(int elem in nums1)\\n        {\\n            if(d.ContainsKey(elem))\\n            {\\n                d[elem]++;\\n            }\\n            else\\n                d.Add(elem,1);\\n        }\\n        List<int> list = new List<int>();\\n        foreach(int elem in nums2)\\n        {\\n            if(d.ContainsKey(elem))\\n            {\\n                list.Add(elem);\\n                d[elem]--;\\n                if(d[elem] == 0)\\n                    d.Remove(elem);\\n            }\\n        }\\n        int[] n = new int[list.Count];\\n        int i=0;\\n        foreach(int elem in list)\\n        {\\n            n[i] = elem;\\n            i++;\\n        }\\n\\n        return n;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2750053,
                "title": "c-easy-to-understand",
                "content": "\\n# Upvote if helps\\n# Code\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ans;\\n        if(nums1.size()==0 || nums2.size()==0) return ans;\\n        unordered_map<int,int> freq;\\n        for(int i=0;i<nums1.size();i++){\\n            freq[nums1[i]]++;\\n        }\\n        for(int i=0;i<nums2.size();i++){\\n            if(freq.find(nums2[i])!=freq.end() && freq[nums2[i]]){\\n                freq[nums2[i]]--;\\n                ans.push_back(nums2[i]);\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Array",
                    "Hash Table",
                    "Union Find"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ans;\\n        if(nums1.size()==0 || nums2.size()==0) return ans;\\n        unordered_map<int,int> freq;\\n        for(int i=0;i<nums1.size();i++){\\n            freq[nums1[i]]++;\\n        }\\n        for(int i=0;i<nums2.size();i++){\\n            if(freq.find(nums2[i])!=freq.end() && freq[nums2[i]]){\\n                freq[nums2[i]]--;\\n                ans.push_back(nums2[i]);\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2650267,
                "title": "python-o-n-2-o-nlogn-o-n",
                "content": "# **1. BRUTE FORCE - O(N^2)**\\n\\nFor an element in first array, go through the second array to find that same element.\\n\\nAlso, to make sure we have a correct output, we also store the count of each element in second array beforehand.\\n\\nSo, as soon as both elements are same, we only add that element in output if the count if  > 0. If it is already 0, that means -\\n\\n\\t1. Either that element is not present at all in second array\\n\\t2. Or it was present but matched with a same element from first array previously\\n\\n```\\ndef intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n            # Output that we want to return\\n            output = []\\n            \\n            # To keep the count of each element of nums2\\n            count = [0] * 1001\\n            for num in nums2: count[num] += 1\\n                \\n            # For each element in first array\\n            for num1 in nums1:\\n                # Go through each element in second array\\n                for num2 in nums2:\\n                    # If both numbers are same and count is more than 0\\n                    if (num1 == num2) and (count[num2] > 0):\\n                        # Append the number to the output list\\n                        output.append(num1)\\n                        # Also, decrement its count\\n                        count[num2] -=1\\n                        # Break out of this inner loop as we found the matching element for num1\\n                        break\\n            \\n            \\n            return output\\n```\\n\\n# **2. BINARY SEARCH - O(NLogN)**\\n\\nInstead of looping the whole second array each time, why not we sort it first and then use Binary Search on it to find the element.\\n\\n```\\ndef intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n            # Output that we want to return\\n            output = []\\n            \\n            # To keep the count of each element of nums2\\n            count = [0] * 1001\\n            for num in nums2: count[num] += 1\\n            \\n            # Sort the second array\\n            nums2.sort()\\n                \\n            # For each element in first array\\n            for num1 in nums1:\\n                # Binary Search the second array\\n                start = 0\\n                end = len(nums2) - 1\\n                \\n                while start <= end:\\n                    mid = start + (end - start) // 2\\n                    if nums2[mid] == num1 and count[num1] > 0:\\n                        output.append(num1)\\n                        count[num1] -= 1\\n                        break\\n                    if nums2[mid] < num1: start = mid + 1\\n                    else: end = mid - 1\\n            \\n            \\n            return output\\n```\\n\\n# **3. TWO POINTERS - O(NLogN)**\\n\\n```\\ndef intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n            # Output that we want to return\\n            output = []\\n            \\n            # Sort Both lists\\n            nums1.sort()\\n            nums2.sort()\\n            \\n            # Now for each element in first array\\n            i,j = 0,0\\n            \\n            # Since both are sorted, we can start from beginning of both lists\\n            while i < len(nums1) and j < len(nums2):\\n                # If ith element of nums1 is smaller than jth element of num2\\n                # Then we need to increment i because we are looking for same elements\\n                if nums1[i] < nums2[j]: i += 1\\n                # If ith element of nums1 is larger than jth element of num2\\n                # Then we need to increment j because we are looking for same elements\\n                elif nums1[i] > nums2[j] : j += 1\\n                # Otherwise, we found two same elements so we can append that element in output list\\n                else:\\n                    output.append(nums1[i])\\n                    # And also incremebt both indices because we are done with ith and jth elements\\n                    i += 1\\n                    j += 1\\n            \\n            return output\\n```\\n\\n# **4. ONE PASS - O(N)**\\n\\nWhy bother about searching at all if we already have the counts available? \\n\\nAs mentioned above, a count of 0 or less than 0 means -\\n\\n\\t1. Either that element is not present at all in second array\\n\\t2. Or it was present but matched with a same element from first array previously\\n\\nSo in both the cases, we don\\'t need to do anything. We only care about the case when count of an element is > 0. And if it > 0 then ofcourse the element is present in nums2. Why are we bothering about searching in that case?\\n\\n```\\ndef intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n            # Output that we want to return\\n            output = []\\n            \\n            # To keep the count of each element in nums2\\n            count = [0] * 1001\\n            for num in nums2: count[num] += 1\\n                \\n            # Now for each element in first array\\n            for num in nums1:\\n                # If count of that element is > 0 we can include it\\n                if count[num] > 0:\\n                    output.append(num)\\n                    # Reduce its count by 1 as we included this element once in the output\\n                    count[num] -= 1\\n  \\n            return output\\n```\\n\\n# **5. ONE PASS #2 - O(N)**\\n\\nWhy not use the Counter to count occurances of only the elements present in nums2 instead of creating a 1000 length array for each test case?\\n\\n![image](https://assets.leetcode.com/users/images/70bfcd18-9208-44d0-8ad5-40e80b92b81c_1664702442.3835392.png)\\n\\n\\n```\\ndef intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n            # Output that we want to return\\n            output = []\\n            \\n            # To keep the count of each element in nums2\\n            count = Counter(nums2)\\n            \\n            # Now for each element in first array\\n            for num in nums1:\\n                # If count of that element is > 0 we can include it\\n                if num in count and count[num] > 0:\\n                    output.append(num)\\n                    # Reduce its count by 1 as we included this element once in the output\\n                    count[num] -= 1\\n     \\n            return output\\n```",
                "solutionTags": [
                    "Python",
                    "Binary Search",
                    "Binary Tree"
                ],
                "code": "```\\ndef intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n            # Output that we want to return\\n            output = []\\n            \\n            # To keep the count of each element of nums2\\n            count = [0] * 1001\\n            for num in nums2: count[num] += 1\\n                \\n            # For each element in first array\\n            for num1 in nums1:\\n                # Go through each element in second array\\n                for num2 in nums2:\\n                    # If both numbers are same and count is more than 0\\n                    if (num1 == num2) and (count[num2] > 0):\\n                        # Append the number to the output list\\n                        output.append(num1)\\n                        # Also, decrement its count\\n                        count[num2] -=1\\n                        # Break out of this inner loop as we found the matching element for num1\\n                        break\\n            \\n            \\n            return output\\n```\n```\\ndef intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n            # Output that we want to return\\n            output = []\\n            \\n            # To keep the count of each element of nums2\\n            count = [0] * 1001\\n            for num in nums2: count[num] += 1\\n            \\n            # Sort the second array\\n            nums2.sort()\\n                \\n            # For each element in first array\\n            for num1 in nums1:\\n                # Binary Search the second array\\n                start = 0\\n                end = len(nums2) - 1\\n                \\n                while start <= end:\\n                    mid = start + (end - start) // 2\\n                    if nums2[mid] == num1 and count[num1] > 0:\\n                        output.append(num1)\\n                        count[num1] -= 1\\n                        break\\n                    if nums2[mid] < num1: start = mid + 1\\n                    else: end = mid - 1\\n            \\n            \\n            return output\\n```\n```\\ndef intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n            # Output that we want to return\\n            output = []\\n            \\n            # Sort Both lists\\n            nums1.sort()\\n            nums2.sort()\\n            \\n            # Now for each element in first array\\n            i,j = 0,0\\n            \\n            # Since both are sorted, we can start from beginning of both lists\\n            while i < len(nums1) and j < len(nums2):\\n                # If ith element of nums1 is smaller than jth element of num2\\n                # Then we need to increment i because we are looking for same elements\\n                if nums1[i] < nums2[j]: i += 1\\n                # If ith element of nums1 is larger than jth element of num2\\n                # Then we need to increment j because we are looking for same elements\\n                elif nums1[i] > nums2[j] : j += 1\\n                # Otherwise, we found two same elements so we can append that element in output list\\n                else:\\n                    output.append(nums1[i])\\n                    # And also incremebt both indices because we are done with ith and jth elements\\n                    i += 1\\n                    j += 1\\n            \\n            return output\\n```\n```\\ndef intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n            # Output that we want to return\\n            output = []\\n            \\n            # To keep the count of each element in nums2\\n            count = [0] * 1001\\n            for num in nums2: count[num] += 1\\n                \\n            # Now for each element in first array\\n            for num in nums1:\\n                # If count of that element is > 0 we can include it\\n                if count[num] > 0:\\n                    output.append(num)\\n                    # Reduce its count by 1 as we included this element once in the output\\n                    count[num] -= 1\\n  \\n            return output\\n```\n```\\ndef intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n            # Output that we want to return\\n            output = []\\n            \\n            # To keep the count of each element in nums2\\n            count = Counter(nums2)\\n            \\n            # Now for each element in first array\\n            for num in nums1:\\n                # If count of that element is > 0 we can include it\\n                if num in count and count[num] > 0:\\n                    output.append(num)\\n                    # Reduce its count by 1 as we included this element once in the output\\n                    count[num] -= 1\\n     \\n            return output\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 2595333,
                "title": "simple-python3-solution-faster-using-collections",
                "content": "***UPVOTE*** if it is helpful\\n```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        c1 = collections.Counter(nums1)\\n        c2 = collections.Counter(nums2)\\n        \\n        res = []\\n        for key in c1:\\n            if key in c2:\\n                res+= [key]*(min(c1[key],c2[key]))\\n        return res\\n```\\n\\n",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        c1 = collections.Counter(nums1)\\n        c2 = collections.Counter(nums2)\\n        \\n        res = []\\n        for key in c1:\\n            if key in c2:\\n                res+= [key]*(min(c1[key],c2[key]))\\n        return res\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2514826,
                "title": "8ms-solution-using-unordered-map",
                "content": "\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int, int> m;\\n        vector<int> res;\\n        for(int i=0; i<nums1.size(); i++){\\n            m[nums1[i]]++;\\n        }\\n        \\n        for(int &i: nums2){\\n            if(m[i]){\\n                res.push_back(i);\\n                m[i]--;\\n            }\\n        }\\n        return res;\\n    }\\n};\\n```\\n",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int, int> m;\\n        vector<int> res;\\n        for(int i=0; i<nums1.size(); i++){\\n            m[nums1[i]]++;\\n        }\\n        \\n        for(int &i: nums2){\\n            if(m[i]){\\n                res.push_back(i);\\n                m[i]--;\\n            }\\n        }\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2426081,
                "title": "kotlin-solution-without-intarray-and-arraylist",
                "content": "```\\nclass Solution {\\n    fun intersect(nums1: IntArray, nums2: IntArray): IntArray {\\n        \\n        val cnt = IntArray(1001){0}\\n        val list = ArrayList<Int>()\\n        \\n        nums1.forEach{\\n            cnt[it]++\\n        }\\n        \\n        nums2.forEach{\\n            if(cnt[it]>=1){\\n                list.add(it)\\n                cnt[it]--\\n            }\\n        }\\n        \\n        return list.toIntArray()\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Kotlin",
                    "Array"
                ],
                "code": "```\\nclass Solution {\\n    fun intersect(nums1: IntArray, nums2: IntArray): IntArray {\\n        \\n        val cnt = IntArray(1001){0}\\n        val list = ArrayList<Int>()\\n        \\n        nums1.forEach{\\n            cnt[it]++\\n        }\\n        \\n        nums2.forEach{\\n            if(cnt[it]>=1){\\n                list.add(it)\\n                cnt[it]--\\n            }\\n        }\\n        \\n        return list.toIntArray()\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2418499,
                "title": "c-all-approaches-complexity-analysis",
                "content": "**Approach 1:\\nUsing HashMap -**\\n***Compleixty Analysis :*** \\uD83D\\uDCCA\\uD83D\\uDCC8\\n***TC : O(N)\\nSC:O(N)  [where N > M]***\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int,int>m;\\n        for(auto &x:nums1){\\n            m[x]++;\\n        }\\n        vector<int>res;\\n        for(auto &x:nums2){\\n            if(m.find(x)!=m.end()){\\n                res.push_back(x);\\n                m[x]--;\\n                if(m[x]==0)m.erase(x);\\n            }\\n        }\\n        return res;\\n    }\\n};\\n```\\n**Approach 2:\\nUsing Sorting :** \\n***Complexity Analysis :*** \\uD83D\\uDCC8\\uD83D\\uDCCA\\n***TC : O(NlogN)\\nSC: O(1)  [ where N>M ]***\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        sort(begin(nums1),end(nums1));\\n        sort(begin(nums2),end(nums2));\\n        int i=0,j=0,n=nums1.size(),m=nums2.size();\\n        vector<int>ans;\\n        while(i<n&&j<m){\\n            if(nums1[i]==nums2[j]){\\n                ans.push_back(nums1[i]);\\n                i++;\\n                j++;\\n            }else{\\n                if(nums1[i]>nums2[j])\\n                    j++;\\n                else\\n                    i++;\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```\\n**UPVOTE IF YOU LIKE** \\uD83D\\uDE0A\\u2714",
                "solutionTags": [
                    "C",
                    "Array",
                    "Sorting"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        unordered_map<int,int>m;\\n        for(auto &x:nums1){\\n            m[x]++;\\n        }\\n        vector<int>res;\\n        for(auto &x:nums2){\\n            if(m.find(x)!=m.end()){\\n                res.push_back(x);\\n                m[x]--;\\n                if(m[x]==0)m.erase(x);\\n            }\\n        }\\n        return res;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        sort(begin(nums1),end(nums1));\\n        sort(begin(nums2),end(nums2));\\n        int i=0,j=0,n=nums1.size(),m=nums2.size();\\n        vector<int>ans;\\n        while(i<n&&j<m){\\n            if(nums1[i]==nums2[j]){\\n                ans.push_back(nums1[i]);\\n                i++;\\n                j++;\\n            }else{\\n                if(nums1[i]>nums2[j])\\n                    j++;\\n                else\\n                    i++;\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2237042,
                "title": "beginner-friendly-java-javascript-python-solution",
                "content": "**Java**\\n```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        List<Integer> list = new ArrayList<>();\\n        int i=0, j=0;\\n        while(i < nums1.length && j < nums2.length){\\n            if(nums1[i] < nums2[j]) i++;\\n            else if(nums2[j] < nums1[i])  j++;\\n            else{\\n                list.add(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        int[] arr = new int[list.size()];\\n        for(int k=0; k<arr.length; k++){\\n            arr[k] = list.get(k);\\n        }\\n        return arr;\\n    }\\n}\\n```\\n**JavaScript**\\n```\\nvar intersect = function(nums1, nums2) {\\n    nums1.sort((a,b) => a-b)\\n    nums2.sort((a,b) => a-b)\\n    let arr = []\\n    let i=0, j=0\\n    while(i<nums1.length && j<nums2.length){\\n        if(nums1[i] < nums2[j]) i++\\n        else if(nums2[j] < nums1[i])    j++\\n        else{\\n            arr.push(nums1[i])\\n            i++\\n            j++\\n        }\\n    }\\n    return arr\\n};\\n```\\n**Python**\\n```\\nclass Solution(object):\\n    def intersect(self, nums1, nums2):\\n        nums1.sort()\\n        nums2.sort()\\n        arr = []\\n        i, j = 0, 0\\n        while i < len(nums1) and j < len(nums2):\\n            if nums1[i] < nums2[j]:\\n                i += 1\\n            elif nums2[j] < nums1[i]:\\n                j += 1\\n            else:\\n                arr.append(nums1[i])\\n                i += 1\\n                j += 1\\n        return arr\\n```",
                "solutionTags": [
                    "Java",
                    "Python",
                    "JavaScript"
                ],
                "code": "```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        Arrays.sort(nums1);\\n        Arrays.sort(nums2);\\n        List<Integer> list = new ArrayList<>();\\n        int i=0, j=0;\\n        while(i < nums1.length && j < nums2.length){\\n            if(nums1[i] < nums2[j]) i++;\\n            else if(nums2[j] < nums1[i])  j++;\\n            else{\\n                list.add(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        int[] arr = new int[list.size()];\\n        for(int k=0; k<arr.length; k++){\\n            arr[k] = list.get(k);\\n        }\\n        return arr;\\n    }\\n}\\n```\n```\\nvar intersect = function(nums1, nums2) {\\n    nums1.sort((a,b) => a-b)\\n    nums2.sort((a,b) => a-b)\\n    let arr = []\\n    let i=0, j=0\\n    while(i<nums1.length && j<nums2.length){\\n        if(nums1[i] < nums2[j]) i++\\n        else if(nums2[j] < nums1[i])    j++\\n        else{\\n            arr.push(nums1[i])\\n            i++\\n            j++\\n        }\\n    }\\n    return arr\\n};\\n```\n```\\nclass Solution(object):\\n    def intersect(self, nums1, nums2):\\n        nums1.sort()\\n        nums2.sort()\\n        arr = []\\n        i, j = 0, 0\\n        while i < len(nums1) and j < len(nums2):\\n            if nums1[i] < nums2[j]:\\n                i += 1\\n            elif nums2[j] < nums1[i]:\\n                j += 1\\n            else:\\n                arr.append(nums1[i])\\n                i += 1\\n                j += 1\\n        return arr\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2175739,
                "title": "1ms-solution-java",
                "content": "\\n\\n\\n\\tclass Solution {\\n\\t\\tpublic int[] intersect(int[] nums1, int[] nums2) {\\n\\t\\t\\tList<Integer> list = new ArrayList<>();\\n\\t\\t\\tint[] count = new int[1001];\\n\\t\\t\\t// point out the variables present in nums1;\\n\\t\\t\\tfor (int i : nums1) {\\n\\t\\t\\t\\tcount[i]++;\\n\\t\\t\\t}\\n\\t\\t\\tfor (int i : nums2) {\\n\\t\\t\\t// if nums2 variable is alredy present in nums1, add it to the ans \\n\\t\\t\\t\\tif (count[i]-- > 0) { // marked the position as 1 less as it is already in the Answer List for this time\\n\\t\\t\\t\\t\\tlist.add(i);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\t//convert List into int[];\\n\\t\\t\\tint[] ans = new int[list.size()];\\n\\t\\t\\tint x = 0;\\n\\t\\t\\tfor (int i : list) {\\n\\t\\t\\t\\tans[x++] = i;\\n\\t\\t\\t}\\n\\t\\t\\treturn ans;\\n\\t\\t}\\n\\t}",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n\\t\\tpublic int[] intersect(int[] nums1, int[] nums2) {\\n\\t\\t\\tList<Integer> list = new ArrayList<>();\\n\\t\\t\\tint[] count = new int[1001];\\n\\t\\t\\t// point out the variables present in nums1;\\n\\t\\t\\tfor (int i : nums1) {\\n\\t\\t\\t\\tcount[i]++;\\n\\t\\t\\t}",
                "codeTag": "Java"
            },
            {
                "id": 2107304,
                "title": "c-use-hashmap-to-find-intersaction-explained-with-comments",
                "content": "**Please do upvote if you like the solution:)**\\n\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ans;\\n        unordered_map<int, int> mpp;\\n        \\n        //count frequency of nums1 elements\\n        for(int i=0; i<nums1.size(); i++)\\n            mpp[nums1[i]]++;\\n        \\n        //find if nums2 element present in nums1 using map\\n        //if matched=> then we will decrease its frequency by 1\\n            for(int i=0; i<nums2.size(); i++){\\n                if(mpp[nums2[i]] > 0){    //element\\'s frequency should not be 0\\n                    ans.push_back(nums2[i]);\\n                    mpp[nums2[i]]--;    //decrease frequency\\n                }     \\n            }\\n        \\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ans;\\n        unordered_map<int, int> mpp;\\n        \\n        //count frequency of nums1 elements\\n        for(int i=0; i<nums1.size(); i++)\\n            mpp[nums1[i]]++;\\n        \\n        //find if nums2 element present in nums1 using map\\n        //if matched=> then we will decrease its frequency by 1\\n            for(int i=0; i<nums2.size(); i++){\\n                if(mpp[nums2[i]] > 0){    //element\\'s frequency should not be 0\\n                    ans.push_back(nums2[i]);\\n                    mpp[nums2[i]]--;    //decrease frequency\\n                }     \\n            }\\n        \\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2041283,
                "title": "1ms-99-50-faster-simple-java-solution",
                "content": "java code is:\\n\\n```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        int f[]=new int[1001];\\n        for(int num : nums1)f[num]++;\\n        List<Integer>list=new ArrayList<>();\\n        for(int num : nums2)\\n            if(--f[num]>=0)list.add(num);\\n        int ans[]=new int[list.size()];\\n        for(int i=0;i<list.size();i++)ans[i]=list.get(i);\\n        return ans;\\n    }\\n}\\n# ```\\n# Time : O(n) linear\\n# Space : O(1) constant\\n# \\n# Please Upvote if this is helpful",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int[] intersect(int[] nums1, int[] nums2) {\\n        int f[]=new int[1001];\\n        for(int num : nums1)f[num]++;\\n        List<Integer>list=new ArrayList<>();\\n        for(int num : nums2)\\n            if(--f[num]>=0)list.add(num);\\n        int ans[]=new int[list.size()];\\n        for(int i=0;i<list.size();i++)ans[i]=list.get(i);\\n        return ans;\\n    }\\n}\\n# ```",
                "codeTag": "Java"
            },
            {
                "id": 1975754,
                "title": "python-one-liner-counter-intersection-operation",
                "content": "### Explanation\\n\\nPython\\'s `collections.Counter` object allows us to obtain a mapping of the unique numbers in the given list to the number of times it appears in the list. Using the implemented intersection operator (&), we can then efficiently perform the intersection operation between two Counter objects, and return the corresponding elements.\\n\\n```python\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        return list((Counter(nums1)&Counter(nums2)).elements())\\n```\\n\\nPlease upvote if this has helped you! Appreciate any comments as well :)",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```python\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        return list((Counter(nums1)&Counter(nums2)).elements())\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1899598,
                "title": "easy-solution-using-c-map-hashmap-two-pointers-sorting",
                "content": "```\\nFirst Approach Using HashMap:\\n\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        map<int,int>hash;\\n        vector<int>result;\\n        for(int i=0;i<nums1.size();i++){\\n            hash[nums1[i]]++;\\n        }\\n        for(int i=0;i<nums2.size();i++){\\n            if(hash.find(nums2[i])!=hash.end()){\\n                hash[nums2[i]]--;\\n                result.push_back(nums2[i]);\\n                if(hash[nums2[i]]==0){\\n                    hash.erase(nums2[i]);\\n                }\\n            }\\n        }\\n        return result;\\n    }\\n};\\n\\nSecond Approach Using Two pointers and Sorting:\\n\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n      sort(nums1.begin(),nums1.end());\\n      sort(nums2.begin(),nums2.end());\\n        vector<int>result;\\n        int i=0, j=0, n=nums1.size(), m=nums2.size();\\n        while(i<n && j<m){\\n            if(nums1[i]==nums2[j]){\\n                result.push_back(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n            else if(nums1[i]<nums2[j]){\\n                i++;\\n            }\\n            else if(nums2[j]<nums1[i]){\\n                j++;\\n            }\\n        }\\n        return result;\\n    }\\n};\\n// If the solution helped you, then don\\'t forget to upvote!!",
                "solutionTags": [
                    "C"
                ],
                "code": "class Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        map<int,int>hash;\\n        vector<int>result;\\n        for(int i=0;i<nums1.size();i++){\\n            hash[nums1[i]]++;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 1847561,
                "title": "easy-python-sol-using-binary-search",
                "content": "we iterate through the nums1 array and check that element is present inside in nums2 using binary search and if it is present we add that to our ans and we remove the element indicating that we already used that element\\nand the overal tc would be O(nlogm) n for iterating (num1 length ==n) and logm for performing bs(num2 length==m)\\n```\\n        def bs(low,high,key):\\n            while low<=high:\\n                mid=(low+high)//2\\n                if nums2[mid]==key:\\n                    return True\\n                elif nums2[mid]>key:\\n                    high=mid-1\\n                else:\\n                    low=mid+1\\n            return False\\n        nums2.sort()\\n        s=[]\\n        for i in nums1:\\n            if bs(0,len(nums2)-1,i):\\n                s.append(i)\\n                nums2.remove(i)\\n        return s\\n```\\n\\n*IF U FIND THIS POST AS USEFUL PLEASE UPVOTE*",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Binary Tree"
                ],
                "code": "```\\n        def bs(low,high,key):\\n            while low<=high:\\n                mid=(low+high)//2\\n                if nums2[mid]==key:\\n                    return True\\n                elif nums2[mid]>key:\\n                    high=mid-1\\n                else:\\n                    low=mid+1\\n            return False\\n        nums2.sort()\\n        s=[]\\n        for i in nums1:\\n            if bs(0,len(nums2)-1,i):\\n                s.append(i)\\n                nums2.remove(i)\\n        return s\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 1777832,
                "title": "best-solution-using-two-pointers-easy-understanding",
                "content": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        \\n        int i=0,j=0;\\n        int n=nums1.size();\\n        int m=nums2.size();\\n        \\n        vector<int> ans;\\n        \\n        while(i<n && j<m){\\n            if(nums1[i] > nums2[j]){\\n                j++;\\n            }\\n            else if(nums1[i] < nums2[j]){\\n                i++;\\n            }\\n            else{\\n                ans.push_back(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        \\n        return ans;\\n    }\\n};\\n```\\n\\n# ****PLEASE UPVOTE",
                "solutionTags": [
                    "C",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        \\n        int i=0,j=0;\\n        int n=nums1.size();\\n        int m=nums2.size();\\n        \\n        vector<int> ans;\\n        \\n        while(i<n && j<m){\\n            if(nums1[i] > nums2[j]){\\n                j++;\\n            }\\n            else if(nums1[i] < nums2[j]){\\n                i++;\\n            }\\n            else{\\n                ans.push_back(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        \\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1774333,
                "title": "go-solution",
                "content": "== Using nums1 for answer ==\\nRuntime: 0 ms, faster than 100.00% of Go online submissions for Intersection of Two Arrays II.\\nMemory Usage: 2.6 MB, less than 99.84% of Go online submissions for Intersection of Two Arrays II.\\n```\\nfunc intersect(nums1 []int, nums2 []int) []int {\\n\\n\\tindex := 0\\n\\tlen1 := len(nums1)\\n\\tlen2 := len(nums2)\\n\\n\\tfor i := 0; i < len1; i++ {\\n\\t\\tfor j := index; j < len2; j++ {\\n            \\n\\t\\t\\tif nums1[i] == nums2[j] {\\n\\t\\t\\t\\tnums1[index] = nums1[i]\\n\\t\\t\\t\\tnums2[index], nums2[j] = nums2[j], nums2[index]\\n\\t\\t\\t\\tindex++\\n\\t\\t\\t\\tbreak\\n\\t\\t\\t}\\n            \\n\\t\\t}\\n\\t}\\n\\n\\treturn nums1[:index]\\n}\\n```\\n== Create integer array for answer ==\\nRuntime: 0 ms, faster than 100.00% of Go online submissions for Intersection of Two Arrays II.\\nMemory Usage: 2.7 MB, less than 99.84% of Go online submissions for Intersection of Two Arrays II.\\n```\\nfunc intersect(nums1 []int, nums2 []int) []int {\\n\\n\\tres := []int{}\\n\\nloop:\\n\\tfor _, n1 := range nums1 {\\n\\t\\tfor j, n2 := range nums2 {\\n\\n\\t\\t\\tif n1 == n2 {\\n\\t\\t\\t\\tres = append(ans, n2)\\n\\n\\t\\t\\t\\tif len(nums2) > 0 {\\n\\t\\t\\t\\t\\tnums2 = append(nums2[:j], nums2[j+1:]...)\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tbreak loop\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tbreak\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\t}\\n\\n\\treturn res\\n}\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```\\nfunc intersect(nums1 []int, nums2 []int) []int {\\n\\n\\tindex := 0\\n\\tlen1 := len(nums1)\\n\\tlen2 := len(nums2)\\n\\n\\tfor i := 0; i < len1; i++ {\\n\\t\\tfor j := index; j < len2; j++ {\\n            \\n\\t\\t\\tif nums1[i] == nums2[j] {\\n\\t\\t\\t\\tnums1[index] = nums1[i]\\n\\t\\t\\t\\tnums2[index], nums2[j] = nums2[j], nums2[index]\\n\\t\\t\\t\\tindex++\\n\\t\\t\\t\\tbreak\\n\\t\\t\\t}\\n            \\n\\t\\t}\\n\\t}\\n\\n\\treturn nums1[:index]\\n}\\n```\n```\\nfunc intersect(nums1 []int, nums2 []int) []int {\\n\\n\\tres := []int{}\\n\\nloop:\\n\\tfor _, n1 := range nums1 {\\n\\t\\tfor j, n2 := range nums2 {\\n\\n\\t\\t\\tif n1 == n2 {\\n\\t\\t\\t\\tres = append(ans, n2)\\n\\n\\t\\t\\t\\tif len(nums2) > 0 {\\n\\t\\t\\t\\t\\tnums2 = append(nums2[:j], nums2[j+1:]...)\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tbreak loop\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tbreak\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\t}\\n\\n\\treturn res\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1708716,
                "title": "cpp-solution-map",
                "content": "I here Used ***map*** to store the first array element count and then corresponding to count get intersection from the second array .\\n***TC : O(n)***\\n```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        map<int,int>m;\\n        for(int i=0;i<nums1.size();i++)\\n        {\\n            m[nums1[i]]++;\\n        }\\n        vector<int>ans;\\n        for(int i=0;i<nums2.size();i++)\\n        {\\n            if(m[nums2[i]]!=0)\\n            {\\n                ans.push_back(nums2[i]);\\n                m[nums2[i]]--;\\n            }\\n        } \\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        map<int,int>m;\\n        for(int i=0;i<nums1.size();i++)\\n        {\\n            m[nums1[i]]++;\\n        }\\n        vector<int>ans;\\n        for(int i=0;i<nums2.size();i++)\\n        {\\n            if(m[nums2[i]]!=0)\\n            {\\n                ans.push_back(nums2[i]);\\n                m[nums2[i]]--;\\n            }\\n        } \\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1669802,
                "title": "easiest-python-solution",
                "content": "```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        re = []\\n        if len(nums1)<len(nums2):\\n            for i in nums1:\\n                if i in nums2:\\n                    re.append(i)\\n                    nums2.remove(i)\\n        else:\\n            for i in nums2:\\n                if i in nums1:\\n                    re.append(i)\\n                    nums1.remove(i)\\n        return re\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        re = []\\n        if len(nums1)<len(nums2):\\n            for i in nums1:\\n                if i in nums2:\\n                    re.append(i)\\n                    nums2.remove(i)\\n        else:\\n            for i in nums2:\\n                if i in nums1:\\n                    re.append(i)\\n                    nums1.remove(i)\\n        return re\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1666103,
                "title": "optimized-c-solution-with-explanation-intersection-of-two-arrays-ii-faster-than-90-submission",
                "content": "class Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        \\n        vector<int>result; // Creating a new vector to store the output.\\n        \\n        sort(nums1.begin(), nums1.end()); // Sorting the first array.\\n        sort(nums2.begin(), nums2.end()); // Sorting the second array.\\n        \\n        /* \\n           If both arrays only contain one element then return any of the one array element.\\n           If both arrays are empty then return {}.\\n        */\\n        \\n        // Start of if statement:\\n        if(nums1.size() == 1 && nums2.size() == 1)\\n        {\\n            if(nums1[0] == nums2[0])\\n            {\\n                return {nums1[0]};\\n            }\\n            \\n            else \\n            {\\n                return {};\\n            }\\n            \\n        }\\n        // End of if statement.\\n        \\n        /* \\n           Now we will use two variables to check whether the first element of the first array is equal or not.\\n           If equal then push it at the back of the result array and increment both the arrays.\\n           If the first element is less than the first element of the second array then increment the first array \\n           otherwise increment the second array.        \\n        */\\n        \\n        int i = 0, j = 0;\\n        \\n        // Start of while loop:\\n        while (i < nums1.size() && j < nums2.size())\\n        {\\n            if(nums1[i] == nums2[j])\\n            {\\n                result.push_back(nums1[i]);\\n                i++;\\n                j++;\\n            }\\n            \\n            else if(nums1[i] < nums2[j])\\n            {\\n                i++;\\n            }\\n            \\n            else\\n            {\\n                j++;\\n            }\\n        }\\n        // End of while loop.\\n        \\n        return result; // Return the result.\\n    }\\n};",
                "solutionTags": [
                    "C"
                ],
                "code": "class Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        \\n        vector<int>result; // Creating a new vector to store the output.\\n        \\n        sort(nums1.begin(), nums1.end()); // Sorting the first array.\\n        sort(nums2.begin(), nums2.end()); // Sorting the second array.\\n        \\n        /* \\n           If both arrays only contain one element then return any of the one array element.\\n           If both arrays are empty then return {}",
                "codeTag": "Java"
            },
            {
                "id": 1579388,
                "title": "python-sol-o-n-m-using-one-dictionary",
                "content": "```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        res = []\\n        dic = {}\\n        for i in nums1:\\n            if i in dic:\\n                dic[i] += 1\\n            else:\\n                dic[i] = 1\\n        for j in nums2:\\n            if j in dic and dic[j] != 0:\\n                res.append(j)\\n                dic[j] -= 1\\n        return res\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        res = []\\n        dic = {}\\n        for i in nums1:\\n            if i in dic:\\n                dic[i] += 1\\n            else:\\n                dic[i] = 1\\n        for j in nums2:\\n            if j in dic and dic[j] != 0:\\n                res.append(j)\\n                dic[j] -= 1\\n        return res\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1541039,
                "title": "easy-python-solution-using-collections",
                "content": "\"\"\"\\n\\t\\t\\n        \\n        c1 = collections.Counter(nums1)\\n        c2 = collections.Counter(nums2)\\n\\t\\t\\n\\t\\tres = []\\n        \\n        for k in c1.keys():\\n            if k in c2.keys():\\n                for i in range(min(c1[k],c2[k])):\\n                    res.append(k)\\n        \\n        return res\\n\"\"\"\\nUpvote if you like!",
                "solutionTags": [
                    "Python3"
                ],
                "code": "\"\"\"\\n\\t\\t\\n        \\n        c1 = collections.Counter(nums1)\\n        c2 = collections.Counter(nums2)\\n\\t\\t\\n\\t\\tres = []\\n        \\n        for k in c1.keys():\\n            if k in c2.keys():\\n                for i in range(min(c1[k],c2[k])):\\n                    res.append(k)\\n        \\n        return res\\n\"\"\"\\nUpvote if you like!",
                "codeTag": "Unknown"
            },
            {
                "id": 1499973,
                "title": "a-simply-python-solution",
                "content": "Here is my simple solution in Python. It may not be the fastest but it is quite easy to understand:\\n\\n```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        result = []\\n        for num in nums1:\\n            if num in nums2:\\n                result.append(num)\\n                nums2.remove(num)\\n        return result\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:\\n        result = []\\n        for num in nums1:\\n            if num in nums2:\\n                result.append(num)\\n                nums2.remove(num)\\n        return result\\n```",
                "codeTag": "Java"
            }
        ],
        "discussions": [
            {
                "id": 1564547,
                "content": [
                    {
                        "username": "vishalhemnani",
                        "content": "> What if elements of nums2 are stored on disk, and the memory is\\n> limited such that you cannot load all elements into the memory at\\n> once?\\n\\n- If only nums2 cannot fit in memory, put all elements of nums1 into a HashMap, read chunks of array that fit into the memory, and record the intersections.\\n\\n- If both nums1 and nums2 are so huge that neither fit into the memory, sort them individually (external sort), then read 2 elements from each array at a time in memory, record intersections."
                    },
                    {
                        "username": "cde282306",
                        "content": " ans=[]\\n        i,j=0,0\\n        while j<len(nums1) or i<len(nums2):\\n            print(i,j)\\n            if nums1[j]!=nums2[i]:\\n                if i<len(nums2):\\n                    i+=1\\n                \\n            elif nums1[j]==nums2[i]:\\n                ans.append(nums1[x])\\n                i=0\\n                if j<len(nums1):\\n                    j+=1\\n                \\n        return ans\\n\\ncould you please explain to me why my where my list index out of the range\\n"
                    },
                    {
                        "username": "stong2351",
                        "content": "I still don\\'t quite under the question. Can someone give me more examples? I don\\'t want to look at the answers."
                    },
                    {
                        "username": "mahi2208",
                        "content": "A little too late for this reply but for future strugglers:\\nThe easiest way to describe intersection is \"common elements\" between the two lists. \\ne.g.  nums1 = [1,2,3,4,5] \\n        nums2 = [2,3,4,6,8,9]\\n        intersection = [2,3,4]\\n\\n        nums1 = [2,2,3,3,5] \\n        nums2 = [2,3,4,3,2,9]\\n        intersection = [2,2,3,3] OR [2,3,2,3] OR [3,3,2,2] and so on. (order does \\n        not matter in this question as long as all the required elements are there)\\n\\n        nums1 = [1,2,2,1] \\n        nums2 = [2]\\n        intersection = [2] (the only common element is 2 here since its only present 1 time in nums2. If nums2 was [2,2] then result would be [2,2])\\n\\nI hope this helps!\\n  "
                    },
                    {
                        "username": "karankumar560k",
                        "content": "for getting a preview of the intersection you can search for the weinn diagram of the intersection basically we have to find the common points between the array"
                    },
                    {
                        "username": "user4279q",
                        "content": "Basically it actually means that the intersection elements of the arrays should appear the minimum of the amounts of times the element appears in both arrays. For example [2,3,3] and [2,2,3]. Then the answer would be [2,3]. Because in arr1 there aren\\'t 2 \"2\"s so it appears once(min(2, 1)). Same goes for the \\'3\\'. I know this Is late but just in case somebody didn\\'t understand the question :)"
                    },
                    {
                        "username": "candypuff1216",
                        "content": "What does \"Each element in the result should appear as many times as it shows in both arrays.\" mean, exactly?\\n\\nDoes it mean that in arrays `[4, 9, 5]` and `[9, 4, 9, 8, 4]` that the numbers `[4, 9]` appear at least once in both arrays?\\n\\nAdditionally, \"the result can be in any order.\" Does that mean that even in a list like `[5, 4, 6, 7, 8]` and `[5, 6, 9, 10, 0]` that the output can be `[5, 6]` or `[6, 5]`?\\n\\nI feel kinda dumb for asking this but I\\'m trying really hard to solve this myself before I approach the answers."
                    },
                    {
                        "username": "gayatrisoni",
                        "content": "yes, the order does not matter. So you can print array in any order [5, 6] or [6, 5]."
                    },
                    {
                        "username": "hiumair",
                        "content": "Is it just me, who tried to solve it with the intersection with exact order... \\nSomething like, find common substring between two strings.\\nI was wondering how come its an easy problem!!\\n\\nif order is not mandatory, its just finding common elements.\\n\\n**Update:** err while typing, I remembered the defination of finding union vs intersections between sets!! studied like 16 years ago :( \\nStill leaving this comment for clarity of someone else. \\n\\n*any ideas how to avoid such misunderstanding in interview. *"
                    },
                    {
                        "username": "ilya-pro",
                        "content": "I\\'m also tried to solve with keeping order... (( And also thought like \"why it\\'s an easy problem?\". Also I\\'ve been used a binary search with greedy modification (if intersection of one item was found). Too much for such simple task. I think, that additional example will be good for clarified"
                    },
                    {
                        "username": "deezyto",
                        "content": "1) Find out which array has a shorter length\\n2) Record each of its digits as a key in the map as number => count\\n3) Iterate over the larger array and check whether its number is contained in the map\\nIf the number is contained in the map, reduce count to number\\nby 1, if count after reduction = 0, remove the number from the map\\nWe add the found number to the result array"
                    },
                    {
                        "username": "aniket_b",
                        "content": "The question is easy than what it seems from description and sample example test case. i suggest to add one more test case example something like below:\\nnums1: [1,2,3,4]\\nnums2: [3,5,4,]\\nExpected answer : [3,4]\\nThis would help people understand it number need not be contiguous in any of the array\\'s"
                    },
                    {
                        "username": "Philno",
                        "content": "I know in the Set thoery `intersection` means the common elements, but given the examples in description, I thought it was to find the common subarray. Until I modified Example 2, `nums2 = [9,4,9,8,4]`, to `nums2 = [9,4,8,9,4]` and realized it gave the same output."
                    },
                    {
                        "username": "itmakesh31",
                        "content": "The question would have been much clear if it would have been like \"Find common elements between 2 arrays\"."
                    },
                    {
                        "username": "IlyaChernikov",
                        "content": "Yes, the description is vague and I\\'ve reported it"
                    },
                    {
                        "username": "jgabriel98",
                        "content": "for the input:\\n[1,2,2,1]\\n[2,2,2]\\n\\nthe obvious output would be [2,2] (or am i getting the question wrong?)\\n\\nbut the leetcode Judge says that the expected output is [2,2,2]:\\n![image](https://assets.leetcode.com/users/jgabriel98/image_1587535028.png)\\n\\n\\nthis make me question what is the criteria for intersection definition, in this question"
                    },
                    {
                        "username": "Aniketprajapati",
                        "content": "your vector is empty see the expected answer its {2,2} only\\n"
                    },
                    {
                        "username": "Coder0622",
                        "content": "On bottom right box, the expected answer is [2, 2]."
                    },
                    {
                        "username": "starfoe",
                        "content": "As suggested by solution1, if two arrays are of diff size, we should build the map for the smaller one.\\nI don\\'t quite understand the reason. \\n\\nSay `Array a` has `m` elements and `Array b` has `n` elements. Lets suppose that we are going to build a map for `a` and iterate over `b`. The complexity of building the map is `O(m)`, and iterating over `b` will cost `O(n)`. Because the cost of looking up in a dict is always `O(1)`, the total complexity is `O(m) + O(n)*1`\\n\\nIf we build the map for `b`, the total complexity is `O(n) + O(m)*1`, which is the sum of the cost of building the map for `b` and iteration over `a`. \\n\\nI didn\\'t see any difference in the two costs above. So I was a bit confused why we prefer to build the map for the smaller one and iterate over the larger one. Do I miss something like details in the underlying implementation or some other consideration off my radar?"
                    },
                    {
                        "username": "pathak_1511",
                        "content": "Because we can save space if we only push smaller array into the map.\\nExample for worst case scenario, suppose we have nums1 size = 1000 and nums2 size = 1, then if you push bigger array then your space complexity is greater than if you push the nums2 element in the hashmap."
                    },
                    {
                        "username": "vinaykumar7686",
                        "content": "Is there anyone who can answer all the follow up questions?"
                    }
                ]
            },
            {
                "id": 1566817,
                "content": [
                    {
                        "username": "vishalhemnani",
                        "content": "> What if elements of nums2 are stored on disk, and the memory is\\n> limited such that you cannot load all elements into the memory at\\n> once?\\n\\n- If only nums2 cannot fit in memory, put all elements of nums1 into a HashMap, read chunks of array that fit into the memory, and record the intersections.\\n\\n- If both nums1 and nums2 are so huge that neither fit into the memory, sort them individually (external sort), then read 2 elements from each array at a time in memory, record intersections."
                    },
                    {
                        "username": "cde282306",
                        "content": " ans=[]\\n        i,j=0,0\\n        while j<len(nums1) or i<len(nums2):\\n            print(i,j)\\n            if nums1[j]!=nums2[i]:\\n                if i<len(nums2):\\n                    i+=1\\n                \\n            elif nums1[j]==nums2[i]:\\n                ans.append(nums1[x])\\n                i=0\\n                if j<len(nums1):\\n                    j+=1\\n                \\n        return ans\\n\\ncould you please explain to me why my where my list index out of the range\\n"
                    },
                    {
                        "username": "stong2351",
                        "content": "I still don\\'t quite under the question. Can someone give me more examples? I don\\'t want to look at the answers."
                    },
                    {
                        "username": "mahi2208",
                        "content": "A little too late for this reply but for future strugglers:\\nThe easiest way to describe intersection is \"common elements\" between the two lists. \\ne.g.  nums1 = [1,2,3,4,5] \\n        nums2 = [2,3,4,6,8,9]\\n        intersection = [2,3,4]\\n\\n        nums1 = [2,2,3,3,5] \\n        nums2 = [2,3,4,3,2,9]\\n        intersection = [2,2,3,3] OR [2,3,2,3] OR [3,3,2,2] and so on. (order does \\n        not matter in this question as long as all the required elements are there)\\n\\n        nums1 = [1,2,2,1] \\n        nums2 = [2]\\n        intersection = [2] (the only common element is 2 here since its only present 1 time in nums2. If nums2 was [2,2] then result would be [2,2])\\n\\nI hope this helps!\\n  "
                    },
                    {
                        "username": "karankumar560k",
                        "content": "for getting a preview of the intersection you can search for the weinn diagram of the intersection basically we have to find the common points between the array"
                    },
                    {
                        "username": "user4279q",
                        "content": "Basically it actually means that the intersection elements of the arrays should appear the minimum of the amounts of times the element appears in both arrays. For example [2,3,3] and [2,2,3]. Then the answer would be [2,3]. Because in arr1 there aren\\'t 2 \"2\"s so it appears once(min(2, 1)). Same goes for the \\'3\\'. I know this Is late but just in case somebody didn\\'t understand the question :)"
                    },
                    {
                        "username": "candypuff1216",
                        "content": "What does \"Each element in the result should appear as many times as it shows in both arrays.\" mean, exactly?\\n\\nDoes it mean that in arrays `[4, 9, 5]` and `[9, 4, 9, 8, 4]` that the numbers `[4, 9]` appear at least once in both arrays?\\n\\nAdditionally, \"the result can be in any order.\" Does that mean that even in a list like `[5, 4, 6, 7, 8]` and `[5, 6, 9, 10, 0]` that the output can be `[5, 6]` or `[6, 5]`?\\n\\nI feel kinda dumb for asking this but I\\'m trying really hard to solve this myself before I approach the answers."
                    },
                    {
                        "username": "gayatrisoni",
                        "content": "yes, the order does not matter. So you can print array in any order [5, 6] or [6, 5]."
                    },
                    {
                        "username": "hiumair",
                        "content": "Is it just me, who tried to solve it with the intersection with exact order... \\nSomething like, find common substring between two strings.\\nI was wondering how come its an easy problem!!\\n\\nif order is not mandatory, its just finding common elements.\\n\\n**Update:** err while typing, I remembered the defination of finding union vs intersections between sets!! studied like 16 years ago :( \\nStill leaving this comment for clarity of someone else. \\n\\n*any ideas how to avoid such misunderstanding in interview. *"
                    },
                    {
                        "username": "ilya-pro",
                        "content": "I\\'m also tried to solve with keeping order... (( And also thought like \"why it\\'s an easy problem?\". Also I\\'ve been used a binary search with greedy modification (if intersection of one item was found). Too much for such simple task. I think, that additional example will be good for clarified"
                    },
                    {
                        "username": "deezyto",
                        "content": "1) Find out which array has a shorter length\\n2) Record each of its digits as a key in the map as number => count\\n3) Iterate over the larger array and check whether its number is contained in the map\\nIf the number is contained in the map, reduce count to number\\nby 1, if count after reduction = 0, remove the number from the map\\nWe add the found number to the result array"
                    },
                    {
                        "username": "aniket_b",
                        "content": "The question is easy than what it seems from description and sample example test case. i suggest to add one more test case example something like below:\\nnums1: [1,2,3,4]\\nnums2: [3,5,4,]\\nExpected answer : [3,4]\\nThis would help people understand it number need not be contiguous in any of the array\\'s"
                    },
                    {
                        "username": "Philno",
                        "content": "I know in the Set thoery `intersection` means the common elements, but given the examples in description, I thought it was to find the common subarray. Until I modified Example 2, `nums2 = [9,4,9,8,4]`, to `nums2 = [9,4,8,9,4]` and realized it gave the same output."
                    },
                    {
                        "username": "itmakesh31",
                        "content": "The question would have been much clear if it would have been like \"Find common elements between 2 arrays\"."
                    },
                    {
                        "username": "IlyaChernikov",
                        "content": "Yes, the description is vague and I\\'ve reported it"
                    },
                    {
                        "username": "jgabriel98",
                        "content": "for the input:\\n[1,2,2,1]\\n[2,2,2]\\n\\nthe obvious output would be [2,2] (or am i getting the question wrong?)\\n\\nbut the leetcode Judge says that the expected output is [2,2,2]:\\n![image](https://assets.leetcode.com/users/jgabriel98/image_1587535028.png)\\n\\n\\nthis make me question what is the criteria for intersection definition, in this question"
                    },
                    {
                        "username": "Aniketprajapati",
                        "content": "your vector is empty see the expected answer its {2,2} only\\n"
                    },
                    {
                        "username": "Coder0622",
                        "content": "On bottom right box, the expected answer is [2, 2]."
                    },
                    {
                        "username": "starfoe",
                        "content": "As suggested by solution1, if two arrays are of diff size, we should build the map for the smaller one.\\nI don\\'t quite understand the reason. \\n\\nSay `Array a` has `m` elements and `Array b` has `n` elements. Lets suppose that we are going to build a map for `a` and iterate over `b`. The complexity of building the map is `O(m)`, and iterating over `b` will cost `O(n)`. Because the cost of looking up in a dict is always `O(1)`, the total complexity is `O(m) + O(n)*1`\\n\\nIf we build the map for `b`, the total complexity is `O(n) + O(m)*1`, which is the sum of the cost of building the map for `b` and iteration over `a`. \\n\\nI didn\\'t see any difference in the two costs above. So I was a bit confused why we prefer to build the map for the smaller one and iterate over the larger one. Do I miss something like details in the underlying implementation or some other consideration off my radar?"
                    },
                    {
                        "username": "pathak_1511",
                        "content": "Because we can save space if we only push smaller array into the map.\\nExample for worst case scenario, suppose we have nums1 size = 1000 and nums2 size = 1, then if you push bigger array then your space complexity is greater than if you push the nums2 element in the hashmap."
                    },
                    {
                        "username": "vinaykumar7686",
                        "content": "Is there anyone who can answer all the follow up questions?"
                    }
                ]
            },
            {
                "id": 1572088,
                "content": [
                    {
                        "username": "vishalhemnani",
                        "content": "> What if elements of nums2 are stored on disk, and the memory is\\n> limited such that you cannot load all elements into the memory at\\n> once?\\n\\n- If only nums2 cannot fit in memory, put all elements of nums1 into a HashMap, read chunks of array that fit into the memory, and record the intersections.\\n\\n- If both nums1 and nums2 are so huge that neither fit into the memory, sort them individually (external sort), then read 2 elements from each array at a time in memory, record intersections."
                    },
                    {
                        "username": "cde282306",
                        "content": " ans=[]\\n        i,j=0,0\\n        while j<len(nums1) or i<len(nums2):\\n            print(i,j)\\n            if nums1[j]!=nums2[i]:\\n                if i<len(nums2):\\n                    i+=1\\n                \\n            elif nums1[j]==nums2[i]:\\n                ans.append(nums1[x])\\n                i=0\\n                if j<len(nums1):\\n                    j+=1\\n                \\n        return ans\\n\\ncould you please explain to me why my where my list index out of the range\\n"
                    },
                    {
                        "username": "stong2351",
                        "content": "I still don\\'t quite under the question. Can someone give me more examples? I don\\'t want to look at the answers."
                    },
                    {
                        "username": "mahi2208",
                        "content": "A little too late for this reply but for future strugglers:\\nThe easiest way to describe intersection is \"common elements\" between the two lists. \\ne.g.  nums1 = [1,2,3,4,5] \\n        nums2 = [2,3,4,6,8,9]\\n        intersection = [2,3,4]\\n\\n        nums1 = [2,2,3,3,5] \\n        nums2 = [2,3,4,3,2,9]\\n        intersection = [2,2,3,3] OR [2,3,2,3] OR [3,3,2,2] and so on. (order does \\n        not matter in this question as long as all the required elements are there)\\n\\n        nums1 = [1,2,2,1] \\n        nums2 = [2]\\n        intersection = [2] (the only common element is 2 here since its only present 1 time in nums2. If nums2 was [2,2] then result would be [2,2])\\n\\nI hope this helps!\\n  "
                    },
                    {
                        "username": "karankumar560k",
                        "content": "for getting a preview of the intersection you can search for the weinn diagram of the intersection basically we have to find the common points between the array"
                    },
                    {
                        "username": "user4279q",
                        "content": "Basically it actually means that the intersection elements of the arrays should appear the minimum of the amounts of times the element appears in both arrays. For example [2,3,3] and [2,2,3]. Then the answer would be [2,3]. Because in arr1 there aren\\'t 2 \"2\"s so it appears once(min(2, 1)). Same goes for the \\'3\\'. I know this Is late but just in case somebody didn\\'t understand the question :)"
                    },
                    {
                        "username": "candypuff1216",
                        "content": "What does \"Each element in the result should appear as many times as it shows in both arrays.\" mean, exactly?\\n\\nDoes it mean that in arrays `[4, 9, 5]` and `[9, 4, 9, 8, 4]` that the numbers `[4, 9]` appear at least once in both arrays?\\n\\nAdditionally, \"the result can be in any order.\" Does that mean that even in a list like `[5, 4, 6, 7, 8]` and `[5, 6, 9, 10, 0]` that the output can be `[5, 6]` or `[6, 5]`?\\n\\nI feel kinda dumb for asking this but I\\'m trying really hard to solve this myself before I approach the answers."
                    },
                    {
                        "username": "gayatrisoni",
                        "content": "yes, the order does not matter. So you can print array in any order [5, 6] or [6, 5]."
                    },
                    {
                        "username": "hiumair",
                        "content": "Is it just me, who tried to solve it with the intersection with exact order... \\nSomething like, find common substring between two strings.\\nI was wondering how come its an easy problem!!\\n\\nif order is not mandatory, its just finding common elements.\\n\\n**Update:** err while typing, I remembered the defination of finding union vs intersections between sets!! studied like 16 years ago :( \\nStill leaving this comment for clarity of someone else. \\n\\n*any ideas how to avoid such misunderstanding in interview. *"
                    },
                    {
                        "username": "ilya-pro",
                        "content": "I\\'m also tried to solve with keeping order... (( And also thought like \"why it\\'s an easy problem?\". Also I\\'ve been used a binary search with greedy modification (if intersection of one item was found). Too much for such simple task. I think, that additional example will be good for clarified"
                    },
                    {
                        "username": "deezyto",
                        "content": "1) Find out which array has a shorter length\\n2) Record each of its digits as a key in the map as number => count\\n3) Iterate over the larger array and check whether its number is contained in the map\\nIf the number is contained in the map, reduce count to number\\nby 1, if count after reduction = 0, remove the number from the map\\nWe add the found number to the result array"
                    },
                    {
                        "username": "aniket_b",
                        "content": "The question is easy than what it seems from description and sample example test case. i suggest to add one more test case example something like below:\\nnums1: [1,2,3,4]\\nnums2: [3,5,4,]\\nExpected answer : [3,4]\\nThis would help people understand it number need not be contiguous in any of the array\\'s"
                    },
                    {
                        "username": "Philno",
                        "content": "I know in the Set thoery `intersection` means the common elements, but given the examples in description, I thought it was to find the common subarray. Until I modified Example 2, `nums2 = [9,4,9,8,4]`, to `nums2 = [9,4,8,9,4]` and realized it gave the same output."
                    },
                    {
                        "username": "itmakesh31",
                        "content": "The question would have been much clear if it would have been like \"Find common elements between 2 arrays\"."
                    },
                    {
                        "username": "IlyaChernikov",
                        "content": "Yes, the description is vague and I\\'ve reported it"
                    },
                    {
                        "username": "jgabriel98",
                        "content": "for the input:\\n[1,2,2,1]\\n[2,2,2]\\n\\nthe obvious output would be [2,2] (or am i getting the question wrong?)\\n\\nbut the leetcode Judge says that the expected output is [2,2,2]:\\n![image](https://assets.leetcode.com/users/jgabriel98/image_1587535028.png)\\n\\n\\nthis make me question what is the criteria for intersection definition, in this question"
                    },
                    {
                        "username": "Aniketprajapati",
                        "content": "your vector is empty see the expected answer its {2,2} only\\n"
                    },
                    {
                        "username": "Coder0622",
                        "content": "On bottom right box, the expected answer is [2, 2]."
                    },
                    {
                        "username": "starfoe",
                        "content": "As suggested by solution1, if two arrays are of diff size, we should build the map for the smaller one.\\nI don\\'t quite understand the reason. \\n\\nSay `Array a` has `m` elements and `Array b` has `n` elements. Lets suppose that we are going to build a map for `a` and iterate over `b`. The complexity of building the map is `O(m)`, and iterating over `b` will cost `O(n)`. Because the cost of looking up in a dict is always `O(1)`, the total complexity is `O(m) + O(n)*1`\\n\\nIf we build the map for `b`, the total complexity is `O(n) + O(m)*1`, which is the sum of the cost of building the map for `b` and iteration over `a`. \\n\\nI didn\\'t see any difference in the two costs above. So I was a bit confused why we prefer to build the map for the smaller one and iterate over the larger one. Do I miss something like details in the underlying implementation or some other consideration off my radar?"
                    },
                    {
                        "username": "pathak_1511",
                        "content": "Because we can save space if we only push smaller array into the map.\\nExample for worst case scenario, suppose we have nums1 size = 1000 and nums2 size = 1, then if you push bigger array then your space complexity is greater than if you push the nums2 element in the hashmap."
                    },
                    {
                        "username": "vinaykumar7686",
                        "content": "Is there anyone who can answer all the follow up questions?"
                    }
                ]
            },
            {
                "id": 1574646,
                "content": [
                    {
                        "username": "vishalhemnani",
                        "content": "> What if elements of nums2 are stored on disk, and the memory is\\n> limited such that you cannot load all elements into the memory at\\n> once?\\n\\n- If only nums2 cannot fit in memory, put all elements of nums1 into a HashMap, read chunks of array that fit into the memory, and record the intersections.\\n\\n- If both nums1 and nums2 are so huge that neither fit into the memory, sort them individually (external sort), then read 2 elements from each array at a time in memory, record intersections."
                    },
                    {
                        "username": "cde282306",
                        "content": " ans=[]\\n        i,j=0,0\\n        while j<len(nums1) or i<len(nums2):\\n            print(i,j)\\n            if nums1[j]!=nums2[i]:\\n                if i<len(nums2):\\n                    i+=1\\n                \\n            elif nums1[j]==nums2[i]:\\n                ans.append(nums1[x])\\n                i=0\\n                if j<len(nums1):\\n                    j+=1\\n                \\n        return ans\\n\\ncould you please explain to me why my where my list index out of the range\\n"
                    },
                    {
                        "username": "stong2351",
                        "content": "I still don\\'t quite under the question. Can someone give me more examples? I don\\'t want to look at the answers."
                    },
                    {
                        "username": "mahi2208",
                        "content": "A little too late for this reply but for future strugglers:\\nThe easiest way to describe intersection is \"common elements\" between the two lists. \\ne.g.  nums1 = [1,2,3,4,5] \\n        nums2 = [2,3,4,6,8,9]\\n        intersection = [2,3,4]\\n\\n        nums1 = [2,2,3,3,5] \\n        nums2 = [2,3,4,3,2,9]\\n        intersection = [2,2,3,3] OR [2,3,2,3] OR [3,3,2,2] and so on. (order does \\n        not matter in this question as long as all the required elements are there)\\n\\n        nums1 = [1,2,2,1] \\n        nums2 = [2]\\n        intersection = [2] (the only common element is 2 here since its only present 1 time in nums2. If nums2 was [2,2] then result would be [2,2])\\n\\nI hope this helps!\\n  "
                    },
                    {
                        "username": "karankumar560k",
                        "content": "for getting a preview of the intersection you can search for the weinn diagram of the intersection basically we have to find the common points between the array"
                    },
                    {
                        "username": "user4279q",
                        "content": "Basically it actually means that the intersection elements of the arrays should appear the minimum of the amounts of times the element appears in both arrays. For example [2,3,3] and [2,2,3]. Then the answer would be [2,3]. Because in arr1 there aren\\'t 2 \"2\"s so it appears once(min(2, 1)). Same goes for the \\'3\\'. I know this Is late but just in case somebody didn\\'t understand the question :)"
                    },
                    {
                        "username": "candypuff1216",
                        "content": "What does \"Each element in the result should appear as many times as it shows in both arrays.\" mean, exactly?\\n\\nDoes it mean that in arrays `[4, 9, 5]` and `[9, 4, 9, 8, 4]` that the numbers `[4, 9]` appear at least once in both arrays?\\n\\nAdditionally, \"the result can be in any order.\" Does that mean that even in a list like `[5, 4, 6, 7, 8]` and `[5, 6, 9, 10, 0]` that the output can be `[5, 6]` or `[6, 5]`?\\n\\nI feel kinda dumb for asking this but I\\'m trying really hard to solve this myself before I approach the answers."
                    },
                    {
                        "username": "gayatrisoni",
                        "content": "yes, the order does not matter. So you can print array in any order [5, 6] or [6, 5]."
                    },
                    {
                        "username": "hiumair",
                        "content": "Is it just me, who tried to solve it with the intersection with exact order... \\nSomething like, find common substring between two strings.\\nI was wondering how come its an easy problem!!\\n\\nif order is not mandatory, its just finding common elements.\\n\\n**Update:** err while typing, I remembered the defination of finding union vs intersections between sets!! studied like 16 years ago :( \\nStill leaving this comment for clarity of someone else. \\n\\n*any ideas how to avoid such misunderstanding in interview. *"
                    },
                    {
                        "username": "ilya-pro",
                        "content": "I\\'m also tried to solve with keeping order... (( And also thought like \"why it\\'s an easy problem?\". Also I\\'ve been used a binary search with greedy modification (if intersection of one item was found). Too much for such simple task. I think, that additional example will be good for clarified"
                    },
                    {
                        "username": "deezyto",
                        "content": "1) Find out which array has a shorter length\\n2) Record each of its digits as a key in the map as number => count\\n3) Iterate over the larger array and check whether its number is contained in the map\\nIf the number is contained in the map, reduce count to number\\nby 1, if count after reduction = 0, remove the number from the map\\nWe add the found number to the result array"
                    },
                    {
                        "username": "aniket_b",
                        "content": "The question is easy than what it seems from description and sample example test case. i suggest to add one more test case example something like below:\\nnums1: [1,2,3,4]\\nnums2: [3,5,4,]\\nExpected answer : [3,4]\\nThis would help people understand it number need not be contiguous in any of the array\\'s"
                    },
                    {
                        "username": "Philno",
                        "content": "I know in the Set thoery `intersection` means the common elements, but given the examples in description, I thought it was to find the common subarray. Until I modified Example 2, `nums2 = [9,4,9,8,4]`, to `nums2 = [9,4,8,9,4]` and realized it gave the same output."
                    },
                    {
                        "username": "itmakesh31",
                        "content": "The question would have been much clear if it would have been like \"Find common elements between 2 arrays\"."
                    },
                    {
                        "username": "IlyaChernikov",
                        "content": "Yes, the description is vague and I\\'ve reported it"
                    },
                    {
                        "username": "jgabriel98",
                        "content": "for the input:\\n[1,2,2,1]\\n[2,2,2]\\n\\nthe obvious output would be [2,2] (or am i getting the question wrong?)\\n\\nbut the leetcode Judge says that the expected output is [2,2,2]:\\n![image](https://assets.leetcode.com/users/jgabriel98/image_1587535028.png)\\n\\n\\nthis make me question what is the criteria for intersection definition, in this question"
                    },
                    {
                        "username": "Aniketprajapati",
                        "content": "your vector is empty see the expected answer its {2,2} only\\n"
                    },
                    {
                        "username": "Coder0622",
                        "content": "On bottom right box, the expected answer is [2, 2]."
                    },
                    {
                        "username": "starfoe",
                        "content": "As suggested by solution1, if two arrays are of diff size, we should build the map for the smaller one.\\nI don\\'t quite understand the reason. \\n\\nSay `Array a` has `m` elements and `Array b` has `n` elements. Lets suppose that we are going to build a map for `a` and iterate over `b`. The complexity of building the map is `O(m)`, and iterating over `b` will cost `O(n)`. Because the cost of looking up in a dict is always `O(1)`, the total complexity is `O(m) + O(n)*1`\\n\\nIf we build the map for `b`, the total complexity is `O(n) + O(m)*1`, which is the sum of the cost of building the map for `b` and iteration over `a`. \\n\\nI didn\\'t see any difference in the two costs above. So I was a bit confused why we prefer to build the map for the smaller one and iterate over the larger one. Do I miss something like details in the underlying implementation or some other consideration off my radar?"
                    },
                    {
                        "username": "pathak_1511",
                        "content": "Because we can save space if we only push smaller array into the map.\\nExample for worst case scenario, suppose we have nums1 size = 1000 and nums2 size = 1, then if you push bigger array then your space complexity is greater than if you push the nums2 element in the hashmap."
                    },
                    {
                        "username": "vinaykumar7686",
                        "content": "Is there anyone who can answer all the follow up questions?"
                    }
                ]
            },
            {
                "id": 1729575,
                "content": [
                    {
                        "username": "vishalhemnani",
                        "content": "> What if elements of nums2 are stored on disk, and the memory is\\n> limited such that you cannot load all elements into the memory at\\n> once?\\n\\n- If only nums2 cannot fit in memory, put all elements of nums1 into a HashMap, read chunks of array that fit into the memory, and record the intersections.\\n\\n- If both nums1 and nums2 are so huge that neither fit into the memory, sort them individually (external sort), then read 2 elements from each array at a time in memory, record intersections."
                    },
                    {
                        "username": "cde282306",
                        "content": " ans=[]\\n        i,j=0,0\\n        while j<len(nums1) or i<len(nums2):\\n            print(i,j)\\n            if nums1[j]!=nums2[i]:\\n                if i<len(nums2):\\n                    i+=1\\n                \\n            elif nums1[j]==nums2[i]:\\n                ans.append(nums1[x])\\n                i=0\\n                if j<len(nums1):\\n                    j+=1\\n                \\n        return ans\\n\\ncould you please explain to me why my where my list index out of the range\\n"
                    },
                    {
                        "username": "stong2351",
                        "content": "I still don\\'t quite under the question. Can someone give me more examples? I don\\'t want to look at the answers."
                    },
                    {
                        "username": "mahi2208",
                        "content": "A little too late for this reply but for future strugglers:\\nThe easiest way to describe intersection is \"common elements\" between the two lists. \\ne.g.  nums1 = [1,2,3,4,5] \\n        nums2 = [2,3,4,6,8,9]\\n        intersection = [2,3,4]\\n\\n        nums1 = [2,2,3,3,5] \\n        nums2 = [2,3,4,3,2,9]\\n        intersection = [2,2,3,3] OR [2,3,2,3] OR [3,3,2,2] and so on. (order does \\n        not matter in this question as long as all the required elements are there)\\n\\n        nums1 = [1,2,2,1] \\n        nums2 = [2]\\n        intersection = [2] (the only common element is 2 here since its only present 1 time in nums2. If nums2 was [2,2] then result would be [2,2])\\n\\nI hope this helps!\\n  "
                    },
                    {
                        "username": "karankumar560k",
                        "content": "for getting a preview of the intersection you can search for the weinn diagram of the intersection basically we have to find the common points between the array"
                    },
                    {
                        "username": "user4279q",
                        "content": "Basically it actually means that the intersection elements of the arrays should appear the minimum of the amounts of times the element appears in both arrays. For example [2,3,3] and [2,2,3]. Then the answer would be [2,3]. Because in arr1 there aren\\'t 2 \"2\"s so it appears once(min(2, 1)). Same goes for the \\'3\\'. I know this Is late but just in case somebody didn\\'t understand the question :)"
                    },
                    {
                        "username": "candypuff1216",
                        "content": "What does \"Each element in the result should appear as many times as it shows in both arrays.\" mean, exactly?\\n\\nDoes it mean that in arrays `[4, 9, 5]` and `[9, 4, 9, 8, 4]` that the numbers `[4, 9]` appear at least once in both arrays?\\n\\nAdditionally, \"the result can be in any order.\" Does that mean that even in a list like `[5, 4, 6, 7, 8]` and `[5, 6, 9, 10, 0]` that the output can be `[5, 6]` or `[6, 5]`?\\n\\nI feel kinda dumb for asking this but I\\'m trying really hard to solve this myself before I approach the answers."
                    },
                    {
                        "username": "gayatrisoni",
                        "content": "yes, the order does not matter. So you can print array in any order [5, 6] or [6, 5]."
                    },
                    {
                        "username": "hiumair",
                        "content": "Is it just me, who tried to solve it with the intersection with exact order... \\nSomething like, find common substring between two strings.\\nI was wondering how come its an easy problem!!\\n\\nif order is not mandatory, its just finding common elements.\\n\\n**Update:** err while typing, I remembered the defination of finding union vs intersections between sets!! studied like 16 years ago :( \\nStill leaving this comment for clarity of someone else. \\n\\n*any ideas how to avoid such misunderstanding in interview. *"
                    },
                    {
                        "username": "ilya-pro",
                        "content": "I\\'m also tried to solve with keeping order... (( And also thought like \"why it\\'s an easy problem?\". Also I\\'ve been used a binary search with greedy modification (if intersection of one item was found). Too much for such simple task. I think, that additional example will be good for clarified"
                    },
                    {
                        "username": "deezyto",
                        "content": "1) Find out which array has a shorter length\\n2) Record each of its digits as a key in the map as number => count\\n3) Iterate over the larger array and check whether its number is contained in the map\\nIf the number is contained in the map, reduce count to number\\nby 1, if count after reduction = 0, remove the number from the map\\nWe add the found number to the result array"
                    },
                    {
                        "username": "aniket_b",
                        "content": "The question is easy than what it seems from description and sample example test case. i suggest to add one more test case example something like below:\\nnums1: [1,2,3,4]\\nnums2: [3,5,4,]\\nExpected answer : [3,4]\\nThis would help people understand it number need not be contiguous in any of the array\\'s"
                    },
                    {
                        "username": "Philno",
                        "content": "I know in the Set thoery `intersection` means the common elements, but given the examples in description, I thought it was to find the common subarray. Until I modified Example 2, `nums2 = [9,4,9,8,4]`, to `nums2 = [9,4,8,9,4]` and realized it gave the same output."
                    },
                    {
                        "username": "itmakesh31",
                        "content": "The question would have been much clear if it would have been like \"Find common elements between 2 arrays\"."
                    },
                    {
                        "username": "IlyaChernikov",
                        "content": "Yes, the description is vague and I\\'ve reported it"
                    },
                    {
                        "username": "jgabriel98",
                        "content": "for the input:\\n[1,2,2,1]\\n[2,2,2]\\n\\nthe obvious output would be [2,2] (or am i getting the question wrong?)\\n\\nbut the leetcode Judge says that the expected output is [2,2,2]:\\n![image](https://assets.leetcode.com/users/jgabriel98/image_1587535028.png)\\n\\n\\nthis make me question what is the criteria for intersection definition, in this question"
                    },
                    {
                        "username": "Aniketprajapati",
                        "content": "your vector is empty see the expected answer its {2,2} only\\n"
                    },
                    {
                        "username": "Coder0622",
                        "content": "On bottom right box, the expected answer is [2, 2]."
                    },
                    {
                        "username": "starfoe",
                        "content": "As suggested by solution1, if two arrays are of diff size, we should build the map for the smaller one.\\nI don\\'t quite understand the reason. \\n\\nSay `Array a` has `m` elements and `Array b` has `n` elements. Lets suppose that we are going to build a map for `a` and iterate over `b`. The complexity of building the map is `O(m)`, and iterating over `b` will cost `O(n)`. Because the cost of looking up in a dict is always `O(1)`, the total complexity is `O(m) + O(n)*1`\\n\\nIf we build the map for `b`, the total complexity is `O(n) + O(m)*1`, which is the sum of the cost of building the map for `b` and iteration over `a`. \\n\\nI didn\\'t see any difference in the two costs above. So I was a bit confused why we prefer to build the map for the smaller one and iterate over the larger one. Do I miss something like details in the underlying implementation or some other consideration off my radar?"
                    },
                    {
                        "username": "pathak_1511",
                        "content": "Because we can save space if we only push smaller array into the map.\\nExample for worst case scenario, suppose we have nums1 size = 1000 and nums2 size = 1, then if you push bigger array then your space complexity is greater than if you push the nums2 element in the hashmap."
                    },
                    {
                        "username": "vinaykumar7686",
                        "content": "Is there anyone who can answer all the follow up questions?"
                    }
                ]
            },
            {
                "id": 1855238,
                "content": [
                    {
                        "username": "vishalhemnani",
                        "content": "> What if elements of nums2 are stored on disk, and the memory is\\n> limited such that you cannot load all elements into the memory at\\n> once?\\n\\n- If only nums2 cannot fit in memory, put all elements of nums1 into a HashMap, read chunks of array that fit into the memory, and record the intersections.\\n\\n- If both nums1 and nums2 are so huge that neither fit into the memory, sort them individually (external sort), then read 2 elements from each array at a time in memory, record intersections."
                    },
                    {
                        "username": "cde282306",
                        "content": " ans=[]\\n        i,j=0,0\\n        while j<len(nums1) or i<len(nums2):\\n            print(i,j)\\n            if nums1[j]!=nums2[i]:\\n                if i<len(nums2):\\n                    i+=1\\n                \\n            elif nums1[j]==nums2[i]:\\n                ans.append(nums1[x])\\n                i=0\\n                if j<len(nums1):\\n                    j+=1\\n                \\n        return ans\\n\\ncould you please explain to me why my where my list index out of the range\\n"
                    },
                    {
                        "username": "stong2351",
                        "content": "I still don\\'t quite under the question. Can someone give me more examples? I don\\'t want to look at the answers."
                    },
                    {
                        "username": "mahi2208",
                        "content": "A little too late for this reply but for future strugglers:\\nThe easiest way to describe intersection is \"common elements\" between the two lists. \\ne.g.  nums1 = [1,2,3,4,5] \\n        nums2 = [2,3,4,6,8,9]\\n        intersection = [2,3,4]\\n\\n        nums1 = [2,2,3,3,5] \\n        nums2 = [2,3,4,3,2,9]\\n        intersection = [2,2,3,3] OR [2,3,2,3] OR [3,3,2,2] and so on. (order does \\n        not matter in this question as long as all the required elements are there)\\n\\n        nums1 = [1,2,2,1] \\n        nums2 = [2]\\n        intersection = [2] (the only common element is 2 here since its only present 1 time in nums2. If nums2 was [2,2] then result would be [2,2])\\n\\nI hope this helps!\\n  "
                    },
                    {
                        "username": "karankumar560k",
                        "content": "for getting a preview of the intersection you can search for the weinn diagram of the intersection basically we have to find the common points between the array"
                    },
                    {
                        "username": "user4279q",
                        "content": "Basically it actually means that the intersection elements of the arrays should appear the minimum of the amounts of times the element appears in both arrays. For example [2,3,3] and [2,2,3]. Then the answer would be [2,3]. Because in arr1 there aren\\'t 2 \"2\"s so it appears once(min(2, 1)). Same goes for the \\'3\\'. I know this Is late but just in case somebody didn\\'t understand the question :)"
                    },
                    {
                        "username": "candypuff1216",
                        "content": "What does \"Each element in the result should appear as many times as it shows in both arrays.\" mean, exactly?\\n\\nDoes it mean that in arrays `[4, 9, 5]` and `[9, 4, 9, 8, 4]` that the numbers `[4, 9]` appear at least once in both arrays?\\n\\nAdditionally, \"the result can be in any order.\" Does that mean that even in a list like `[5, 4, 6, 7, 8]` and `[5, 6, 9, 10, 0]` that the output can be `[5, 6]` or `[6, 5]`?\\n\\nI feel kinda dumb for asking this but I\\'m trying really hard to solve this myself before I approach the answers."
                    },
                    {
                        "username": "gayatrisoni",
                        "content": "yes, the order does not matter. So you can print array in any order [5, 6] or [6, 5]."
                    },
                    {
                        "username": "hiumair",
                        "content": "Is it just me, who tried to solve it with the intersection with exact order... \\nSomething like, find common substring between two strings.\\nI was wondering how come its an easy problem!!\\n\\nif order is not mandatory, its just finding common elements.\\n\\n**Update:** err while typing, I remembered the defination of finding union vs intersections between sets!! studied like 16 years ago :( \\nStill leaving this comment for clarity of someone else. \\n\\n*any ideas how to avoid such misunderstanding in interview. *"
                    },
                    {
                        "username": "ilya-pro",
                        "content": "I\\'m also tried to solve with keeping order... (( And also thought like \"why it\\'s an easy problem?\". Also I\\'ve been used a binary search with greedy modification (if intersection of one item was found). Too much for such simple task. I think, that additional example will be good for clarified"
                    },
                    {
                        "username": "deezyto",
                        "content": "1) Find out which array has a shorter length\\n2) Record each of its digits as a key in the map as number => count\\n3) Iterate over the larger array and check whether its number is contained in the map\\nIf the number is contained in the map, reduce count to number\\nby 1, if count after reduction = 0, remove the number from the map\\nWe add the found number to the result array"
                    },
                    {
                        "username": "aniket_b",
                        "content": "The question is easy than what it seems from description and sample example test case. i suggest to add one more test case example something like below:\\nnums1: [1,2,3,4]\\nnums2: [3,5,4,]\\nExpected answer : [3,4]\\nThis would help people understand it number need not be contiguous in any of the array\\'s"
                    },
                    {
                        "username": "Philno",
                        "content": "I know in the Set thoery `intersection` means the common elements, but given the examples in description, I thought it was to find the common subarray. Until I modified Example 2, `nums2 = [9,4,9,8,4]`, to `nums2 = [9,4,8,9,4]` and realized it gave the same output."
                    },
                    {
                        "username": "itmakesh31",
                        "content": "The question would have been much clear if it would have been like \"Find common elements between 2 arrays\"."
                    },
                    {
                        "username": "IlyaChernikov",
                        "content": "Yes, the description is vague and I\\'ve reported it"
                    },
                    {
                        "username": "jgabriel98",
                        "content": "for the input:\\n[1,2,2,1]\\n[2,2,2]\\n\\nthe obvious output would be [2,2] (or am i getting the question wrong?)\\n\\nbut the leetcode Judge says that the expected output is [2,2,2]:\\n![image](https://assets.leetcode.com/users/jgabriel98/image_1587535028.png)\\n\\n\\nthis make me question what is the criteria for intersection definition, in this question"
                    },
                    {
                        "username": "Aniketprajapati",
                        "content": "your vector is empty see the expected answer its {2,2} only\\n"
                    },
                    {
                        "username": "Coder0622",
                        "content": "On bottom right box, the expected answer is [2, 2]."
                    },
                    {
                        "username": "starfoe",
                        "content": "As suggested by solution1, if two arrays are of diff size, we should build the map for the smaller one.\\nI don\\'t quite understand the reason. \\n\\nSay `Array a` has `m` elements and `Array b` has `n` elements. Lets suppose that we are going to build a map for `a` and iterate over `b`. The complexity of building the map is `O(m)`, and iterating over `b` will cost `O(n)`. Because the cost of looking up in a dict is always `O(1)`, the total complexity is `O(m) + O(n)*1`\\n\\nIf we build the map for `b`, the total complexity is `O(n) + O(m)*1`, which is the sum of the cost of building the map for `b` and iteration over `a`. \\n\\nI didn\\'t see any difference in the two costs above. So I was a bit confused why we prefer to build the map for the smaller one and iterate over the larger one. Do I miss something like details in the underlying implementation or some other consideration off my radar?"
                    },
                    {
                        "username": "pathak_1511",
                        "content": "Because we can save space if we only push smaller array into the map.\\nExample for worst case scenario, suppose we have nums1 size = 1000 and nums2 size = 1, then if you push bigger array then your space complexity is greater than if you push the nums2 element in the hashmap."
                    },
                    {
                        "username": "vinaykumar7686",
                        "content": "Is there anyone who can answer all the follow up questions?"
                    }
                ]
            },
            {
                "id": 1574479,
                "content": [
                    {
                        "username": "vishalhemnani",
                        "content": "> What if elements of nums2 are stored on disk, and the memory is\\n> limited such that you cannot load all elements into the memory at\\n> once?\\n\\n- If only nums2 cannot fit in memory, put all elements of nums1 into a HashMap, read chunks of array that fit into the memory, and record the intersections.\\n\\n- If both nums1 and nums2 are so huge that neither fit into the memory, sort them individually (external sort), then read 2 elements from each array at a time in memory, record intersections."
                    },
                    {
                        "username": "cde282306",
                        "content": " ans=[]\\n        i,j=0,0\\n        while j<len(nums1) or i<len(nums2):\\n            print(i,j)\\n            if nums1[j]!=nums2[i]:\\n                if i<len(nums2):\\n                    i+=1\\n                \\n            elif nums1[j]==nums2[i]:\\n                ans.append(nums1[x])\\n                i=0\\n                if j<len(nums1):\\n                    j+=1\\n                \\n        return ans\\n\\ncould you please explain to me why my where my list index out of the range\\n"
                    },
                    {
                        "username": "stong2351",
                        "content": "I still don\\'t quite under the question. Can someone give me more examples? I don\\'t want to look at the answers."
                    },
                    {
                        "username": "mahi2208",
                        "content": "A little too late for this reply but for future strugglers:\\nThe easiest way to describe intersection is \"common elements\" between the two lists. \\ne.g.  nums1 = [1,2,3,4,5] \\n        nums2 = [2,3,4,6,8,9]\\n        intersection = [2,3,4]\\n\\n        nums1 = [2,2,3,3,5] \\n        nums2 = [2,3,4,3,2,9]\\n        intersection = [2,2,3,3] OR [2,3,2,3] OR [3,3,2,2] and so on. (order does \\n        not matter in this question as long as all the required elements are there)\\n\\n        nums1 = [1,2,2,1] \\n        nums2 = [2]\\n        intersection = [2] (the only common element is 2 here since its only present 1 time in nums2. If nums2 was [2,2] then result would be [2,2])\\n\\nI hope this helps!\\n  "
                    },
                    {
                        "username": "karankumar560k",
                        "content": "for getting a preview of the intersection you can search for the weinn diagram of the intersection basically we have to find the common points between the array"
                    },
                    {
                        "username": "user4279q",
                        "content": "Basically it actually means that the intersection elements of the arrays should appear the minimum of the amounts of times the element appears in both arrays. For example [2,3,3] and [2,2,3]. Then the answer would be [2,3]. Because in arr1 there aren\\'t 2 \"2\"s so it appears once(min(2, 1)). Same goes for the \\'3\\'. I know this Is late but just in case somebody didn\\'t understand the question :)"
                    },
                    {
                        "username": "candypuff1216",
                        "content": "What does \"Each element in the result should appear as many times as it shows in both arrays.\" mean, exactly?\\n\\nDoes it mean that in arrays `[4, 9, 5]` and `[9, 4, 9, 8, 4]` that the numbers `[4, 9]` appear at least once in both arrays?\\n\\nAdditionally, \"the result can be in any order.\" Does that mean that even in a list like `[5, 4, 6, 7, 8]` and `[5, 6, 9, 10, 0]` that the output can be `[5, 6]` or `[6, 5]`?\\n\\nI feel kinda dumb for asking this but I\\'m trying really hard to solve this myself before I approach the answers."
                    },
                    {
                        "username": "gayatrisoni",
                        "content": "yes, the order does not matter. So you can print array in any order [5, 6] or [6, 5]."
                    },
                    {
                        "username": "hiumair",
                        "content": "Is it just me, who tried to solve it with the intersection with exact order... \\nSomething like, find common substring between two strings.\\nI was wondering how come its an easy problem!!\\n\\nif order is not mandatory, its just finding common elements.\\n\\n**Update:** err while typing, I remembered the defination of finding union vs intersections between sets!! studied like 16 years ago :( \\nStill leaving this comment for clarity of someone else. \\n\\n*any ideas how to avoid such misunderstanding in interview. *"
                    },
                    {
                        "username": "ilya-pro",
                        "content": "I\\'m also tried to solve with keeping order... (( And also thought like \"why it\\'s an easy problem?\". Also I\\'ve been used a binary search with greedy modification (if intersection of one item was found). Too much for such simple task. I think, that additional example will be good for clarified"
                    },
                    {
                        "username": "deezyto",
                        "content": "1) Find out which array has a shorter length\\n2) Record each of its digits as a key in the map as number => count\\n3) Iterate over the larger array and check whether its number is contained in the map\\nIf the number is contained in the map, reduce count to number\\nby 1, if count after reduction = 0, remove the number from the map\\nWe add the found number to the result array"
                    },
                    {
                        "username": "aniket_b",
                        "content": "The question is easy than what it seems from description and sample example test case. i suggest to add one more test case example something like below:\\nnums1: [1,2,3,4]\\nnums2: [3,5,4,]\\nExpected answer : [3,4]\\nThis would help people understand it number need not be contiguous in any of the array\\'s"
                    },
                    {
                        "username": "Philno",
                        "content": "I know in the Set thoery `intersection` means the common elements, but given the examples in description, I thought it was to find the common subarray. Until I modified Example 2, `nums2 = [9,4,9,8,4]`, to `nums2 = [9,4,8,9,4]` and realized it gave the same output."
                    },
                    {
                        "username": "itmakesh31",
                        "content": "The question would have been much clear if it would have been like \"Find common elements between 2 arrays\"."
                    },
                    {
                        "username": "IlyaChernikov",
                        "content": "Yes, the description is vague and I\\'ve reported it"
                    },
                    {
                        "username": "jgabriel98",
                        "content": "for the input:\\n[1,2,2,1]\\n[2,2,2]\\n\\nthe obvious output would be [2,2] (or am i getting the question wrong?)\\n\\nbut the leetcode Judge says that the expected output is [2,2,2]:\\n![image](https://assets.leetcode.com/users/jgabriel98/image_1587535028.png)\\n\\n\\nthis make me question what is the criteria for intersection definition, in this question"
                    },
                    {
                        "username": "Aniketprajapati",
                        "content": "your vector is empty see the expected answer its {2,2} only\\n"
                    },
                    {
                        "username": "Coder0622",
                        "content": "On bottom right box, the expected answer is [2, 2]."
                    },
                    {
                        "username": "starfoe",
                        "content": "As suggested by solution1, if two arrays are of diff size, we should build the map for the smaller one.\\nI don\\'t quite understand the reason. \\n\\nSay `Array a` has `m` elements and `Array b` has `n` elements. Lets suppose that we are going to build a map for `a` and iterate over `b`. The complexity of building the map is `O(m)`, and iterating over `b` will cost `O(n)`. Because the cost of looking up in a dict is always `O(1)`, the total complexity is `O(m) + O(n)*1`\\n\\nIf we build the map for `b`, the total complexity is `O(n) + O(m)*1`, which is the sum of the cost of building the map for `b` and iteration over `a`. \\n\\nI didn\\'t see any difference in the two costs above. So I was a bit confused why we prefer to build the map for the smaller one and iterate over the larger one. Do I miss something like details in the underlying implementation or some other consideration off my radar?"
                    },
                    {
                        "username": "pathak_1511",
                        "content": "Because we can save space if we only push smaller array into the map.\\nExample for worst case scenario, suppose we have nums1 size = 1000 and nums2 size = 1, then if you push bigger array then your space complexity is greater than if you push the nums2 element in the hashmap."
                    },
                    {
                        "username": "vinaykumar7686",
                        "content": "Is there anyone who can answer all the follow up questions?"
                    }
                ]
            },
            {
                "id": 1568318,
                "content": [
                    {
                        "username": "vishalhemnani",
                        "content": "> What if elements of nums2 are stored on disk, and the memory is\\n> limited such that you cannot load all elements into the memory at\\n> once?\\n\\n- If only nums2 cannot fit in memory, put all elements of nums1 into a HashMap, read chunks of array that fit into the memory, and record the intersections.\\n\\n- If both nums1 and nums2 are so huge that neither fit into the memory, sort them individually (external sort), then read 2 elements from each array at a time in memory, record intersections."
                    },
                    {
                        "username": "cde282306",
                        "content": " ans=[]\\n        i,j=0,0\\n        while j<len(nums1) or i<len(nums2):\\n            print(i,j)\\n            if nums1[j]!=nums2[i]:\\n                if i<len(nums2):\\n                    i+=1\\n                \\n            elif nums1[j]==nums2[i]:\\n                ans.append(nums1[x])\\n                i=0\\n                if j<len(nums1):\\n                    j+=1\\n                \\n        return ans\\n\\ncould you please explain to me why my where my list index out of the range\\n"
                    },
                    {
                        "username": "stong2351",
                        "content": "I still don\\'t quite under the question. Can someone give me more examples? I don\\'t want to look at the answers."
                    },
                    {
                        "username": "mahi2208",
                        "content": "A little too late for this reply but for future strugglers:\\nThe easiest way to describe intersection is \"common elements\" between the two lists. \\ne.g.  nums1 = [1,2,3,4,5] \\n        nums2 = [2,3,4,6,8,9]\\n        intersection = [2,3,4]\\n\\n        nums1 = [2,2,3,3,5] \\n        nums2 = [2,3,4,3,2,9]\\n        intersection = [2,2,3,3] OR [2,3,2,3] OR [3,3,2,2] and so on. (order does \\n        not matter in this question as long as all the required elements are there)\\n\\n        nums1 = [1,2,2,1] \\n        nums2 = [2]\\n        intersection = [2] (the only common element is 2 here since its only present 1 time in nums2. If nums2 was [2,2] then result would be [2,2])\\n\\nI hope this helps!\\n  "
                    },
                    {
                        "username": "karankumar560k",
                        "content": "for getting a preview of the intersection you can search for the weinn diagram of the intersection basically we have to find the common points between the array"
                    },
                    {
                        "username": "user4279q",
                        "content": "Basically it actually means that the intersection elements of the arrays should appear the minimum of the amounts of times the element appears in both arrays. For example [2,3,3] and [2,2,3]. Then the answer would be [2,3]. Because in arr1 there aren\\'t 2 \"2\"s so it appears once(min(2, 1)). Same goes for the \\'3\\'. I know this Is late but just in case somebody didn\\'t understand the question :)"
                    },
                    {
                        "username": "candypuff1216",
                        "content": "What does \"Each element in the result should appear as many times as it shows in both arrays.\" mean, exactly?\\n\\nDoes it mean that in arrays `[4, 9, 5]` and `[9, 4, 9, 8, 4]` that the numbers `[4, 9]` appear at least once in both arrays?\\n\\nAdditionally, \"the result can be in any order.\" Does that mean that even in a list like `[5, 4, 6, 7, 8]` and `[5, 6, 9, 10, 0]` that the output can be `[5, 6]` or `[6, 5]`?\\n\\nI feel kinda dumb for asking this but I\\'m trying really hard to solve this myself before I approach the answers."
                    },
                    {
                        "username": "gayatrisoni",
                        "content": "yes, the order does not matter. So you can print array in any order [5, 6] or [6, 5]."
                    },
                    {
                        "username": "hiumair",
                        "content": "Is it just me, who tried to solve it with the intersection with exact order... \\nSomething like, find common substring between two strings.\\nI was wondering how come its an easy problem!!\\n\\nif order is not mandatory, its just finding common elements.\\n\\n**Update:** err while typing, I remembered the defination of finding union vs intersections between sets!! studied like 16 years ago :( \\nStill leaving this comment for clarity of someone else. \\n\\n*any ideas how to avoid such misunderstanding in interview. *"
                    },
                    {
                        "username": "ilya-pro",
                        "content": "I\\'m also tried to solve with keeping order... (( And also thought like \"why it\\'s an easy problem?\". Also I\\'ve been used a binary search with greedy modification (if intersection of one item was found). Too much for such simple task. I think, that additional example will be good for clarified"
                    },
                    {
                        "username": "deezyto",
                        "content": "1) Find out which array has a shorter length\\n2) Record each of its digits as a key in the map as number => count\\n3) Iterate over the larger array and check whether its number is contained in the map\\nIf the number is contained in the map, reduce count to number\\nby 1, if count after reduction = 0, remove the number from the map\\nWe add the found number to the result array"
                    },
                    {
                        "username": "aniket_b",
                        "content": "The question is easy than what it seems from description and sample example test case. i suggest to add one more test case example something like below:\\nnums1: [1,2,3,4]\\nnums2: [3,5,4,]\\nExpected answer : [3,4]\\nThis would help people understand it number need not be contiguous in any of the array\\'s"
                    },
                    {
                        "username": "Philno",
                        "content": "I know in the Set thoery `intersection` means the common elements, but given the examples in description, I thought it was to find the common subarray. Until I modified Example 2, `nums2 = [9,4,9,8,4]`, to `nums2 = [9,4,8,9,4]` and realized it gave the same output."
                    },
                    {
                        "username": "itmakesh31",
                        "content": "The question would have been much clear if it would have been like \"Find common elements between 2 arrays\"."
                    },
                    {
                        "username": "IlyaChernikov",
                        "content": "Yes, the description is vague and I\\'ve reported it"
                    },
                    {
                        "username": "jgabriel98",
                        "content": "for the input:\\n[1,2,2,1]\\n[2,2,2]\\n\\nthe obvious output would be [2,2] (or am i getting the question wrong?)\\n\\nbut the leetcode Judge says that the expected output is [2,2,2]:\\n![image](https://assets.leetcode.com/users/jgabriel98/image_1587535028.png)\\n\\n\\nthis make me question what is the criteria for intersection definition, in this question"
                    },
                    {
                        "username": "Aniketprajapati",
                        "content": "your vector is empty see the expected answer its {2,2} only\\n"
                    },
                    {
                        "username": "Coder0622",
                        "content": "On bottom right box, the expected answer is [2, 2]."
                    },
                    {
                        "username": "starfoe",
                        "content": "As suggested by solution1, if two arrays are of diff size, we should build the map for the smaller one.\\nI don\\'t quite understand the reason. \\n\\nSay `Array a` has `m` elements and `Array b` has `n` elements. Lets suppose that we are going to build a map for `a` and iterate over `b`. The complexity of building the map is `O(m)`, and iterating over `b` will cost `O(n)`. Because the cost of looking up in a dict is always `O(1)`, the total complexity is `O(m) + O(n)*1`\\n\\nIf we build the map for `b`, the total complexity is `O(n) + O(m)*1`, which is the sum of the cost of building the map for `b` and iteration over `a`. \\n\\nI didn\\'t see any difference in the two costs above. So I was a bit confused why we prefer to build the map for the smaller one and iterate over the larger one. Do I miss something like details in the underlying implementation or some other consideration off my radar?"
                    },
                    {
                        "username": "pathak_1511",
                        "content": "Because we can save space if we only push smaller array into the map.\\nExample for worst case scenario, suppose we have nums1 size = 1000 and nums2 size = 1, then if you push bigger array then your space complexity is greater than if you push the nums2 element in the hashmap."
                    },
                    {
                        "username": "vinaykumar7686",
                        "content": "Is there anyone who can answer all the follow up questions?"
                    }
                ]
            },
            {
                "id": 1573282,
                "content": [
                    {
                        "username": "vishalhemnani",
                        "content": "> What if elements of nums2 are stored on disk, and the memory is\\n> limited such that you cannot load all elements into the memory at\\n> once?\\n\\n- If only nums2 cannot fit in memory, put all elements of nums1 into a HashMap, read chunks of array that fit into the memory, and record the intersections.\\n\\n- If both nums1 and nums2 are so huge that neither fit into the memory, sort them individually (external sort), then read 2 elements from each array at a time in memory, record intersections."
                    },
                    {
                        "username": "cde282306",
                        "content": " ans=[]\\n        i,j=0,0\\n        while j<len(nums1) or i<len(nums2):\\n            print(i,j)\\n            if nums1[j]!=nums2[i]:\\n                if i<len(nums2):\\n                    i+=1\\n                \\n            elif nums1[j]==nums2[i]:\\n                ans.append(nums1[x])\\n                i=0\\n                if j<len(nums1):\\n                    j+=1\\n                \\n        return ans\\n\\ncould you please explain to me why my where my list index out of the range\\n"
                    },
                    {
                        "username": "stong2351",
                        "content": "I still don\\'t quite under the question. Can someone give me more examples? I don\\'t want to look at the answers."
                    },
                    {
                        "username": "mahi2208",
                        "content": "A little too late for this reply but for future strugglers:\\nThe easiest way to describe intersection is \"common elements\" between the two lists. \\ne.g.  nums1 = [1,2,3,4,5] \\n        nums2 = [2,3,4,6,8,9]\\n        intersection = [2,3,4]\\n\\n        nums1 = [2,2,3,3,5] \\n        nums2 = [2,3,4,3,2,9]\\n        intersection = [2,2,3,3] OR [2,3,2,3] OR [3,3,2,2] and so on. (order does \\n        not matter in this question as long as all the required elements are there)\\n\\n        nums1 = [1,2,2,1] \\n        nums2 = [2]\\n        intersection = [2] (the only common element is 2 here since its only present 1 time in nums2. If nums2 was [2,2] then result would be [2,2])\\n\\nI hope this helps!\\n  "
                    },
                    {
                        "username": "karankumar560k",
                        "content": "for getting a preview of the intersection you can search for the weinn diagram of the intersection basically we have to find the common points between the array"
                    },
                    {
                        "username": "user4279q",
                        "content": "Basically it actually means that the intersection elements of the arrays should appear the minimum of the amounts of times the element appears in both arrays. For example [2,3,3] and [2,2,3]. Then the answer would be [2,3]. Because in arr1 there aren\\'t 2 \"2\"s so it appears once(min(2, 1)). Same goes for the \\'3\\'. I know this Is late but just in case somebody didn\\'t understand the question :)"
                    },
                    {
                        "username": "candypuff1216",
                        "content": "What does \"Each element in the result should appear as many times as it shows in both arrays.\" mean, exactly?\\n\\nDoes it mean that in arrays `[4, 9, 5]` and `[9, 4, 9, 8, 4]` that the numbers `[4, 9]` appear at least once in both arrays?\\n\\nAdditionally, \"the result can be in any order.\" Does that mean that even in a list like `[5, 4, 6, 7, 8]` and `[5, 6, 9, 10, 0]` that the output can be `[5, 6]` or `[6, 5]`?\\n\\nI feel kinda dumb for asking this but I\\'m trying really hard to solve this myself before I approach the answers."
                    },
                    {
                        "username": "gayatrisoni",
                        "content": "yes, the order does not matter. So you can print array in any order [5, 6] or [6, 5]."
                    },
                    {
                        "username": "hiumair",
                        "content": "Is it just me, who tried to solve it with the intersection with exact order... \\nSomething like, find common substring between two strings.\\nI was wondering how come its an easy problem!!\\n\\nif order is not mandatory, its just finding common elements.\\n\\n**Update:** err while typing, I remembered the defination of finding union vs intersections between sets!! studied like 16 years ago :( \\nStill leaving this comment for clarity of someone else. \\n\\n*any ideas how to avoid such misunderstanding in interview. *"
                    },
                    {
                        "username": "ilya-pro",
                        "content": "I\\'m also tried to solve with keeping order... (( And also thought like \"why it\\'s an easy problem?\". Also I\\'ve been used a binary search with greedy modification (if intersection of one item was found). Too much for such simple task. I think, that additional example will be good for clarified"
                    },
                    {
                        "username": "deezyto",
                        "content": "1) Find out which array has a shorter length\\n2) Record each of its digits as a key in the map as number => count\\n3) Iterate over the larger array and check whether its number is contained in the map\\nIf the number is contained in the map, reduce count to number\\nby 1, if count after reduction = 0, remove the number from the map\\nWe add the found number to the result array"
                    },
                    {
                        "username": "aniket_b",
                        "content": "The question is easy than what it seems from description and sample example test case. i suggest to add one more test case example something like below:\\nnums1: [1,2,3,4]\\nnums2: [3,5,4,]\\nExpected answer : [3,4]\\nThis would help people understand it number need not be contiguous in any of the array\\'s"
                    },
                    {
                        "username": "Philno",
                        "content": "I know in the Set thoery `intersection` means the common elements, but given the examples in description, I thought it was to find the common subarray. Until I modified Example 2, `nums2 = [9,4,9,8,4]`, to `nums2 = [9,4,8,9,4]` and realized it gave the same output."
                    },
                    {
                        "username": "itmakesh31",
                        "content": "The question would have been much clear if it would have been like \"Find common elements between 2 arrays\"."
                    },
                    {
                        "username": "IlyaChernikov",
                        "content": "Yes, the description is vague and I\\'ve reported it"
                    },
                    {
                        "username": "jgabriel98",
                        "content": "for the input:\\n[1,2,2,1]\\n[2,2,2]\\n\\nthe obvious output would be [2,2] (or am i getting the question wrong?)\\n\\nbut the leetcode Judge says that the expected output is [2,2,2]:\\n![image](https://assets.leetcode.com/users/jgabriel98/image_1587535028.png)\\n\\n\\nthis make me question what is the criteria for intersection definition, in this question"
                    },
                    {
                        "username": "Aniketprajapati",
                        "content": "your vector is empty see the expected answer its {2,2} only\\n"
                    },
                    {
                        "username": "Coder0622",
                        "content": "On bottom right box, the expected answer is [2, 2]."
                    },
                    {
                        "username": "starfoe",
                        "content": "As suggested by solution1, if two arrays are of diff size, we should build the map for the smaller one.\\nI don\\'t quite understand the reason. \\n\\nSay `Array a` has `m` elements and `Array b` has `n` elements. Lets suppose that we are going to build a map for `a` and iterate over `b`. The complexity of building the map is `O(m)`, and iterating over `b` will cost `O(n)`. Because the cost of looking up in a dict is always `O(1)`, the total complexity is `O(m) + O(n)*1`\\n\\nIf we build the map for `b`, the total complexity is `O(n) + O(m)*1`, which is the sum of the cost of building the map for `b` and iteration over `a`. \\n\\nI didn\\'t see any difference in the two costs above. So I was a bit confused why we prefer to build the map for the smaller one and iterate over the larger one. Do I miss something like details in the underlying implementation or some other consideration off my radar?"
                    },
                    {
                        "username": "pathak_1511",
                        "content": "Because we can save space if we only push smaller array into the map.\\nExample for worst case scenario, suppose we have nums1 size = 1000 and nums2 size = 1, then if you push bigger array then your space complexity is greater than if you push the nums2 element in the hashmap."
                    },
                    {
                        "username": "vinaykumar7686",
                        "content": "Is there anyone who can answer all the follow up questions?"
                    }
                ]
            },
            {
                "id": 1574060,
                "content": [
                    {
                        "username": "vishalhemnani",
                        "content": "> What if elements of nums2 are stored on disk, and the memory is\\n> limited such that you cannot load all elements into the memory at\\n> once?\\n\\n- If only nums2 cannot fit in memory, put all elements of nums1 into a HashMap, read chunks of array that fit into the memory, and record the intersections.\\n\\n- If both nums1 and nums2 are so huge that neither fit into the memory, sort them individually (external sort), then read 2 elements from each array at a time in memory, record intersections."
                    },
                    {
                        "username": "cde282306",
                        "content": " ans=[]\\n        i,j=0,0\\n        while j<len(nums1) or i<len(nums2):\\n            print(i,j)\\n            if nums1[j]!=nums2[i]:\\n                if i<len(nums2):\\n                    i+=1\\n                \\n            elif nums1[j]==nums2[i]:\\n                ans.append(nums1[x])\\n                i=0\\n                if j<len(nums1):\\n                    j+=1\\n                \\n        return ans\\n\\ncould you please explain to me why my where my list index out of the range\\n"
                    },
                    {
                        "username": "stong2351",
                        "content": "I still don\\'t quite under the question. Can someone give me more examples? I don\\'t want to look at the answers."
                    },
                    {
                        "username": "mahi2208",
                        "content": "A little too late for this reply but for future strugglers:\\nThe easiest way to describe intersection is \"common elements\" between the two lists. \\ne.g.  nums1 = [1,2,3,4,5] \\n        nums2 = [2,3,4,6,8,9]\\n        intersection = [2,3,4]\\n\\n        nums1 = [2,2,3,3,5] \\n        nums2 = [2,3,4,3,2,9]\\n        intersection = [2,2,3,3] OR [2,3,2,3] OR [3,3,2,2] and so on. (order does \\n        not matter in this question as long as all the required elements are there)\\n\\n        nums1 = [1,2,2,1] \\n        nums2 = [2]\\n        intersection = [2] (the only common element is 2 here since its only present 1 time in nums2. If nums2 was [2,2] then result would be [2,2])\\n\\nI hope this helps!\\n  "
                    },
                    {
                        "username": "karankumar560k",
                        "content": "for getting a preview of the intersection you can search for the weinn diagram of the intersection basically we have to find the common points between the array"
                    },
                    {
                        "username": "user4279q",
                        "content": "Basically it actually means that the intersection elements of the arrays should appear the minimum of the amounts of times the element appears in both arrays. For example [2,3,3] and [2,2,3]. Then the answer would be [2,3]. Because in arr1 there aren\\'t 2 \"2\"s so it appears once(min(2, 1)). Same goes for the \\'3\\'. I know this Is late but just in case somebody didn\\'t understand the question :)"
                    },
                    {
                        "username": "candypuff1216",
                        "content": "What does \"Each element in the result should appear as many times as it shows in both arrays.\" mean, exactly?\\n\\nDoes it mean that in arrays `[4, 9, 5]` and `[9, 4, 9, 8, 4]` that the numbers `[4, 9]` appear at least once in both arrays?\\n\\nAdditionally, \"the result can be in any order.\" Does that mean that even in a list like `[5, 4, 6, 7, 8]` and `[5, 6, 9, 10, 0]` that the output can be `[5, 6]` or `[6, 5]`?\\n\\nI feel kinda dumb for asking this but I\\'m trying really hard to solve this myself before I approach the answers."
                    },
                    {
                        "username": "gayatrisoni",
                        "content": "yes, the order does not matter. So you can print array in any order [5, 6] or [6, 5]."
                    },
                    {
                        "username": "hiumair",
                        "content": "Is it just me, who tried to solve it with the intersection with exact order... \\nSomething like, find common substring between two strings.\\nI was wondering how come its an easy problem!!\\n\\nif order is not mandatory, its just finding common elements.\\n\\n**Update:** err while typing, I remembered the defination of finding union vs intersections between sets!! studied like 16 years ago :( \\nStill leaving this comment for clarity of someone else. \\n\\n*any ideas how to avoid such misunderstanding in interview. *"
                    },
                    {
                        "username": "ilya-pro",
                        "content": "I\\'m also tried to solve with keeping order... (( And also thought like \"why it\\'s an easy problem?\". Also I\\'ve been used a binary search with greedy modification (if intersection of one item was found). Too much for such simple task. I think, that additional example will be good for clarified"
                    },
                    {
                        "username": "deezyto",
                        "content": "1) Find out which array has a shorter length\\n2) Record each of its digits as a key in the map as number => count\\n3) Iterate over the larger array and check whether its number is contained in the map\\nIf the number is contained in the map, reduce count to number\\nby 1, if count after reduction = 0, remove the number from the map\\nWe add the found number to the result array"
                    },
                    {
                        "username": "aniket_b",
                        "content": "The question is easy than what it seems from description and sample example test case. i suggest to add one more test case example something like below:\\nnums1: [1,2,3,4]\\nnums2: [3,5,4,]\\nExpected answer : [3,4]\\nThis would help people understand it number need not be contiguous in any of the array\\'s"
                    },
                    {
                        "username": "Philno",
                        "content": "I know in the Set thoery `intersection` means the common elements, but given the examples in description, I thought it was to find the common subarray. Until I modified Example 2, `nums2 = [9,4,9,8,4]`, to `nums2 = [9,4,8,9,4]` and realized it gave the same output."
                    },
                    {
                        "username": "itmakesh31",
                        "content": "The question would have been much clear if it would have been like \"Find common elements between 2 arrays\"."
                    },
                    {
                        "username": "IlyaChernikov",
                        "content": "Yes, the description is vague and I\\'ve reported it"
                    },
                    {
                        "username": "jgabriel98",
                        "content": "for the input:\\n[1,2,2,1]\\n[2,2,2]\\n\\nthe obvious output would be [2,2] (or am i getting the question wrong?)\\n\\nbut the leetcode Judge says that the expected output is [2,2,2]:\\n![image](https://assets.leetcode.com/users/jgabriel98/image_1587535028.png)\\n\\n\\nthis make me question what is the criteria for intersection definition, in this question"
                    },
                    {
                        "username": "Aniketprajapati",
                        "content": "your vector is empty see the expected answer its {2,2} only\\n"
                    },
                    {
                        "username": "Coder0622",
                        "content": "On bottom right box, the expected answer is [2, 2]."
                    },
                    {
                        "username": "starfoe",
                        "content": "As suggested by solution1, if two arrays are of diff size, we should build the map for the smaller one.\\nI don\\'t quite understand the reason. \\n\\nSay `Array a` has `m` elements and `Array b` has `n` elements. Lets suppose that we are going to build a map for `a` and iterate over `b`. The complexity of building the map is `O(m)`, and iterating over `b` will cost `O(n)`. Because the cost of looking up in a dict is always `O(1)`, the total complexity is `O(m) + O(n)*1`\\n\\nIf we build the map for `b`, the total complexity is `O(n) + O(m)*1`, which is the sum of the cost of building the map for `b` and iteration over `a`. \\n\\nI didn\\'t see any difference in the two costs above. So I was a bit confused why we prefer to build the map for the smaller one and iterate over the larger one. Do I miss something like details in the underlying implementation or some other consideration off my radar?"
                    },
                    {
                        "username": "pathak_1511",
                        "content": "Because we can save space if we only push smaller array into the map.\\nExample for worst case scenario, suppose we have nums1 size = 1000 and nums2 size = 1, then if you push bigger array then your space complexity is greater than if you push the nums2 element in the hashmap."
                    },
                    {
                        "username": "vinaykumar7686",
                        "content": "Is there anyone who can answer all the follow up questions?"
                    }
                ]
            },
            {
                "id": 1564547,
                "content": [
                    {
                        "username": "vishalhemnani",
                        "content": "> What if elements of nums2 are stored on disk, and the memory is\\n> limited such that you cannot load all elements into the memory at\\n> once?\\n\\n- If only nums2 cannot fit in memory, put all elements of nums1 into a HashMap, read chunks of array that fit into the memory, and record the intersections.\\n\\n- If both nums1 and nums2 are so huge that neither fit into the memory, sort them individually (external sort), then read 2 elements from each array at a time in memory, record intersections."
                    },
                    {
                        "username": "cde282306",
                        "content": " ans=[]\\n        i,j=0,0\\n        while j<len(nums1) or i<len(nums2):\\n            print(i,j)\\n            if nums1[j]!=nums2[i]:\\n                if i<len(nums2):\\n                    i+=1\\n                \\n            elif nums1[j]==nums2[i]:\\n                ans.append(nums1[x])\\n                i=0\\n                if j<len(nums1):\\n                    j+=1\\n                \\n        return ans\\n\\ncould you please explain to me why my where my list index out of the range\\n"
                    },
                    {
                        "username": "stong2351",
                        "content": "I still don\\'t quite under the question. Can someone give me more examples? I don\\'t want to look at the answers."
                    },
                    {
                        "username": "mahi2208",
                        "content": "A little too late for this reply but for future strugglers:\\nThe easiest way to describe intersection is \"common elements\" between the two lists. \\ne.g.  nums1 = [1,2,3,4,5] \\n        nums2 = [2,3,4,6,8,9]\\n        intersection = [2,3,4]\\n\\n        nums1 = [2,2,3,3,5] \\n        nums2 = [2,3,4,3,2,9]\\n        intersection = [2,2,3,3] OR [2,3,2,3] OR [3,3,2,2] and so on. (order does \\n        not matter in this question as long as all the required elements are there)\\n\\n        nums1 = [1,2,2,1] \\n        nums2 = [2]\\n        intersection = [2] (the only common element is 2 here since its only present 1 time in nums2. If nums2 was [2,2] then result would be [2,2])\\n\\nI hope this helps!\\n  "
                    },
                    {
                        "username": "karankumar560k",
                        "content": "for getting a preview of the intersection you can search for the weinn diagram of the intersection basically we have to find the common points between the array"
                    },
                    {
                        "username": "user4279q",
                        "content": "Basically it actually means that the intersection elements of the arrays should appear the minimum of the amounts of times the element appears in both arrays. For example [2,3,3] and [2,2,3]. Then the answer would be [2,3]. Because in arr1 there aren\\'t 2 \"2\"s so it appears once(min(2, 1)). Same goes for the \\'3\\'. I know this Is late but just in case somebody didn\\'t understand the question :)"
                    },
                    {
                        "username": "candypuff1216",
                        "content": "What does \"Each element in the result should appear as many times as it shows in both arrays.\" mean, exactly?\\n\\nDoes it mean that in arrays `[4, 9, 5]` and `[9, 4, 9, 8, 4]` that the numbers `[4, 9]` appear at least once in both arrays?\\n\\nAdditionally, \"the result can be in any order.\" Does that mean that even in a list like `[5, 4, 6, 7, 8]` and `[5, 6, 9, 10, 0]` that the output can be `[5, 6]` or `[6, 5]`?\\n\\nI feel kinda dumb for asking this but I\\'m trying really hard to solve this myself before I approach the answers."
                    },
                    {
                        "username": "gayatrisoni",
                        "content": "yes, the order does not matter. So you can print array in any order [5, 6] or [6, 5]."
                    },
                    {
                        "username": "hiumair",
                        "content": "Is it just me, who tried to solve it with the intersection with exact order... \\nSomething like, find common substring between two strings.\\nI was wondering how come its an easy problem!!\\n\\nif order is not mandatory, its just finding common elements.\\n\\n**Update:** err while typing, I remembered the defination of finding union vs intersections between sets!! studied like 16 years ago :( \\nStill leaving this comment for clarity of someone else. \\n\\n*any ideas how to avoid such misunderstanding in interview. *"
                    },
                    {
                        "username": "ilya-pro",
                        "content": "I\\'m also tried to solve with keeping order... (( And also thought like \"why it\\'s an easy problem?\". Also I\\'ve been used a binary search with greedy modification (if intersection of one item was found). Too much for such simple task. I think, that additional example will be good for clarified"
                    },
                    {
                        "username": "deezyto",
                        "content": "1) Find out which array has a shorter length\\n2) Record each of its digits as a key in the map as number => count\\n3) Iterate over the larger array and check whether its number is contained in the map\\nIf the number is contained in the map, reduce count to number\\nby 1, if count after reduction = 0, remove the number from the map\\nWe add the found number to the result array"
                    },
                    {
                        "username": "aniket_b",
                        "content": "The question is easy than what it seems from description and sample example test case. i suggest to add one more test case example something like below:\\nnums1: [1,2,3,4]\\nnums2: [3,5,4,]\\nExpected answer : [3,4]\\nThis would help people understand it number need not be contiguous in any of the array\\'s"
                    },
                    {
                        "username": "Philno",
                        "content": "I know in the Set thoery `intersection` means the common elements, but given the examples in description, I thought it was to find the common subarray. Until I modified Example 2, `nums2 = [9,4,9,8,4]`, to `nums2 = [9,4,8,9,4]` and realized it gave the same output."
                    },
                    {
                        "username": "itmakesh31",
                        "content": "The question would have been much clear if it would have been like \"Find common elements between 2 arrays\"."
                    },
                    {
                        "username": "IlyaChernikov",
                        "content": "Yes, the description is vague and I\\'ve reported it"
                    },
                    {
                        "username": "jgabriel98",
                        "content": "for the input:\\n[1,2,2,1]\\n[2,2,2]\\n\\nthe obvious output would be [2,2] (or am i getting the question wrong?)\\n\\nbut the leetcode Judge says that the expected output is [2,2,2]:\\n![image](https://assets.leetcode.com/users/jgabriel98/image_1587535028.png)\\n\\n\\nthis make me question what is the criteria for intersection definition, in this question"
                    },
                    {
                        "username": "Aniketprajapati",
                        "content": "your vector is empty see the expected answer its {2,2} only\\n"
                    },
                    {
                        "username": "Coder0622",
                        "content": "On bottom right box, the expected answer is [2, 2]."
                    },
                    {
                        "username": "starfoe",
                        "content": "As suggested by solution1, if two arrays are of diff size, we should build the map for the smaller one.\\nI don\\'t quite understand the reason. \\n\\nSay `Array a` has `m` elements and `Array b` has `n` elements. Lets suppose that we are going to build a map for `a` and iterate over `b`. The complexity of building the map is `O(m)`, and iterating over `b` will cost `O(n)`. Because the cost of looking up in a dict is always `O(1)`, the total complexity is `O(m) + O(n)*1`\\n\\nIf we build the map for `b`, the total complexity is `O(n) + O(m)*1`, which is the sum of the cost of building the map for `b` and iteration over `a`. \\n\\nI didn\\'t see any difference in the two costs above. So I was a bit confused why we prefer to build the map for the smaller one and iterate over the larger one. Do I miss something like details in the underlying implementation or some other consideration off my radar?"
                    },
                    {
                        "username": "pathak_1511",
                        "content": "Because we can save space if we only push smaller array into the map.\\nExample for worst case scenario, suppose we have nums1 size = 1000 and nums2 size = 1, then if you push bigger array then your space complexity is greater than if you push the nums2 element in the hashmap."
                    },
                    {
                        "username": "vinaykumar7686",
                        "content": "Is there anyone who can answer all the follow up questions?"
                    }
                ]
            },
            {
                "id": 1566817,
                "content": [
                    {
                        "username": "vishalhemnani",
                        "content": "> What if elements of nums2 are stored on disk, and the memory is\\n> limited such that you cannot load all elements into the memory at\\n> once?\\n\\n- If only nums2 cannot fit in memory, put all elements of nums1 into a HashMap, read chunks of array that fit into the memory, and record the intersections.\\n\\n- If both nums1 and nums2 are so huge that neither fit into the memory, sort them individually (external sort), then read 2 elements from each array at a time in memory, record intersections."
                    },
                    {
                        "username": "cde282306",
                        "content": " ans=[]\\n        i,j=0,0\\n        while j<len(nums1) or i<len(nums2):\\n            print(i,j)\\n            if nums1[j]!=nums2[i]:\\n                if i<len(nums2):\\n                    i+=1\\n                \\n            elif nums1[j]==nums2[i]:\\n                ans.append(nums1[x])\\n                i=0\\n                if j<len(nums1):\\n                    j+=1\\n                \\n        return ans\\n\\ncould you please explain to me why my where my list index out of the range\\n"
                    },
                    {
                        "username": "stong2351",
                        "content": "I still don\\'t quite under the question. Can someone give me more examples? I don\\'t want to look at the answers."
                    },
                    {
                        "username": "mahi2208",
                        "content": "A little too late for this reply but for future strugglers:\\nThe easiest way to describe intersection is \"common elements\" between the two lists. \\ne.g.  nums1 = [1,2,3,4,5] \\n        nums2 = [2,3,4,6,8,9]\\n        intersection = [2,3,4]\\n\\n        nums1 = [2,2,3,3,5] \\n        nums2 = [2,3,4,3,2,9]\\n        intersection = [2,2,3,3] OR [2,3,2,3] OR [3,3,2,2] and so on. (order does \\n        not matter in this question as long as all the required elements are there)\\n\\n        nums1 = [1,2,2,1] \\n        nums2 = [2]\\n        intersection = [2] (the only common element is 2 here since its only present 1 time in nums2. If nums2 was [2,2] then result would be [2,2])\\n\\nI hope this helps!\\n  "
                    },
                    {
                        "username": "karankumar560k",
                        "content": "for getting a preview of the intersection you can search for the weinn diagram of the intersection basically we have to find the common points between the array"
                    },
                    {
                        "username": "user4279q",
                        "content": "Basically it actually means that the intersection elements of the arrays should appear the minimum of the amounts of times the element appears in both arrays. For example [2,3,3] and [2,2,3]. Then the answer would be [2,3]. Because in arr1 there aren\\'t 2 \"2\"s so it appears once(min(2, 1)). Same goes for the \\'3\\'. I know this Is late but just in case somebody didn\\'t understand the question :)"
                    },
                    {
                        "username": "candypuff1216",
                        "content": "What does \"Each element in the result should appear as many times as it shows in both arrays.\" mean, exactly?\\n\\nDoes it mean that in arrays `[4, 9, 5]` and `[9, 4, 9, 8, 4]` that the numbers `[4, 9]` appear at least once in both arrays?\\n\\nAdditionally, \"the result can be in any order.\" Does that mean that even in a list like `[5, 4, 6, 7, 8]` and `[5, 6, 9, 10, 0]` that the output can be `[5, 6]` or `[6, 5]`?\\n\\nI feel kinda dumb for asking this but I\\'m trying really hard to solve this myself before I approach the answers."
                    },
                    {
                        "username": "gayatrisoni",
                        "content": "yes, the order does not matter. So you can print array in any order [5, 6] or [6, 5]."
                    },
                    {
                        "username": "hiumair",
                        "content": "Is it just me, who tried to solve it with the intersection with exact order... \\nSomething like, find common substring between two strings.\\nI was wondering how come its an easy problem!!\\n\\nif order is not mandatory, its just finding common elements.\\n\\n**Update:** err while typing, I remembered the defination of finding union vs intersections between sets!! studied like 16 years ago :( \\nStill leaving this comment for clarity of someone else. \\n\\n*any ideas how to avoid such misunderstanding in interview. *"
                    },
                    {
                        "username": "ilya-pro",
                        "content": "I\\'m also tried to solve with keeping order... (( And also thought like \"why it\\'s an easy problem?\". Also I\\'ve been used a binary search with greedy modification (if intersection of one item was found). Too much for such simple task. I think, that additional example will be good for clarified"
                    },
                    {
                        "username": "deezyto",
                        "content": "1) Find out which array has a shorter length\\n2) Record each of its digits as a key in the map as number => count\\n3) Iterate over the larger array and check whether its number is contained in the map\\nIf the number is contained in the map, reduce count to number\\nby 1, if count after reduction = 0, remove the number from the map\\nWe add the found number to the result array"
                    },
                    {
                        "username": "aniket_b",
                        "content": "The question is easy than what it seems from description and sample example test case. i suggest to add one more test case example something like below:\\nnums1: [1,2,3,4]\\nnums2: [3,5,4,]\\nExpected answer : [3,4]\\nThis would help people understand it number need not be contiguous in any of the array\\'s"
                    },
                    {
                        "username": "Philno",
                        "content": "I know in the Set thoery `intersection` means the common elements, but given the examples in description, I thought it was to find the common subarray. Until I modified Example 2, `nums2 = [9,4,9,8,4]`, to `nums2 = [9,4,8,9,4]` and realized it gave the same output."
                    },
                    {
                        "username": "itmakesh31",
                        "content": "The question would have been much clear if it would have been like \"Find common elements between 2 arrays\"."
                    },
                    {
                        "username": "IlyaChernikov",
                        "content": "Yes, the description is vague and I\\'ve reported it"
                    },
                    {
                        "username": "jgabriel98",
                        "content": "for the input:\\n[1,2,2,1]\\n[2,2,2]\\n\\nthe obvious output would be [2,2] (or am i getting the question wrong?)\\n\\nbut the leetcode Judge says that the expected output is [2,2,2]:\\n![image](https://assets.leetcode.com/users/jgabriel98/image_1587535028.png)\\n\\n\\nthis make me question what is the criteria for intersection definition, in this question"
                    },
                    {
                        "username": "Aniketprajapati",
                        "content": "your vector is empty see the expected answer its {2,2} only\\n"
                    },
                    {
                        "username": "Coder0622",
                        "content": "On bottom right box, the expected answer is [2, 2]."
                    },
                    {
                        "username": "starfoe",
                        "content": "As suggested by solution1, if two arrays are of diff size, we should build the map for the smaller one.\\nI don\\'t quite understand the reason. \\n\\nSay `Array a` has `m` elements and `Array b` has `n` elements. Lets suppose that we are going to build a map for `a` and iterate over `b`. The complexity of building the map is `O(m)`, and iterating over `b` will cost `O(n)`. Because the cost of looking up in a dict is always `O(1)`, the total complexity is `O(m) + O(n)*1`\\n\\nIf we build the map for `b`, the total complexity is `O(n) + O(m)*1`, which is the sum of the cost of building the map for `b` and iteration over `a`. \\n\\nI didn\\'t see any difference in the two costs above. So I was a bit confused why we prefer to build the map for the smaller one and iterate over the larger one. Do I miss something like details in the underlying implementation or some other consideration off my radar?"
                    },
                    {
                        "username": "pathak_1511",
                        "content": "Because we can save space if we only push smaller array into the map.\\nExample for worst case scenario, suppose we have nums1 size = 1000 and nums2 size = 1, then if you push bigger array then your space complexity is greater than if you push the nums2 element in the hashmap."
                    },
                    {
                        "username": "vinaykumar7686",
                        "content": "Is there anyone who can answer all the follow up questions?"
                    }
                ]
            },
            {
                "id": 1572088,
                "content": [
                    {
                        "username": "vishalhemnani",
                        "content": "> What if elements of nums2 are stored on disk, and the memory is\\n> limited such that you cannot load all elements into the memory at\\n> once?\\n\\n- If only nums2 cannot fit in memory, put all elements of nums1 into a HashMap, read chunks of array that fit into the memory, and record the intersections.\\n\\n- If both nums1 and nums2 are so huge that neither fit into the memory, sort them individually (external sort), then read 2 elements from each array at a time in memory, record intersections."
                    },
                    {
                        "username": "cde282306",
                        "content": " ans=[]\\n        i,j=0,0\\n        while j<len(nums1) or i<len(nums2):\\n            print(i,j)\\n            if nums1[j]!=nums2[i]:\\n                if i<len(nums2):\\n                    i+=1\\n                \\n            elif nums1[j]==nums2[i]:\\n                ans.append(nums1[x])\\n                i=0\\n                if j<len(nums1):\\n                    j+=1\\n                \\n        return ans\\n\\ncould you please explain to me why my where my list index out of the range\\n"
                    },
                    {
                        "username": "stong2351",
                        "content": "I still don\\'t quite under the question. Can someone give me more examples? I don\\'t want to look at the answers."
                    },
                    {
                        "username": "mahi2208",
                        "content": "A little too late for this reply but for future strugglers:\\nThe easiest way to describe intersection is \"common elements\" between the two lists. \\ne.g.  nums1 = [1,2,3,4,5] \\n        nums2 = [2,3,4,6,8,9]\\n        intersection = [2,3,4]\\n\\n        nums1 = [2,2,3,3,5] \\n        nums2 = [2,3,4,3,2,9]\\n        intersection = [2,2,3,3] OR [2,3,2,3] OR [3,3,2,2] and so on. (order does \\n        not matter in this question as long as all the required elements are there)\\n\\n        nums1 = [1,2,2,1] \\n        nums2 = [2]\\n        intersection = [2] (the only common element is 2 here since its only present 1 time in nums2. If nums2 was [2,2] then result would be [2,2])\\n\\nI hope this helps!\\n  "
                    },
                    {
                        "username": "karankumar560k",
                        "content": "for getting a preview of the intersection you can search for the weinn diagram of the intersection basically we have to find the common points between the array"
                    },
                    {
                        "username": "user4279q",
                        "content": "Basically it actually means that the intersection elements of the arrays should appear the minimum of the amounts of times the element appears in both arrays. For example [2,3,3] and [2,2,3]. Then the answer would be [2,3]. Because in arr1 there aren\\'t 2 \"2\"s so it appears once(min(2, 1)). Same goes for the \\'3\\'. I know this Is late but just in case somebody didn\\'t understand the question :)"
                    },
                    {
                        "username": "candypuff1216",
                        "content": "What does \"Each element in the result should appear as many times as it shows in both arrays.\" mean, exactly?\\n\\nDoes it mean that in arrays `[4, 9, 5]` and `[9, 4, 9, 8, 4]` that the numbers `[4, 9]` appear at least once in both arrays?\\n\\nAdditionally, \"the result can be in any order.\" Does that mean that even in a list like `[5, 4, 6, 7, 8]` and `[5, 6, 9, 10, 0]` that the output can be `[5, 6]` or `[6, 5]`?\\n\\nI feel kinda dumb for asking this but I\\'m trying really hard to solve this myself before I approach the answers."
                    },
                    {
                        "username": "gayatrisoni",
                        "content": "yes, the order does not matter. So you can print array in any order [5, 6] or [6, 5]."
                    },
                    {
                        "username": "hiumair",
                        "content": "Is it just me, who tried to solve it with the intersection with exact order... \\nSomething like, find common substring between two strings.\\nI was wondering how come its an easy problem!!\\n\\nif order is not mandatory, its just finding common elements.\\n\\n**Update:** err while typing, I remembered the defination of finding union vs intersections between sets!! studied like 16 years ago :( \\nStill leaving this comment for clarity of someone else. \\n\\n*any ideas how to avoid such misunderstanding in interview. *"
                    },
                    {
                        "username": "ilya-pro",
                        "content": "I\\'m also tried to solve with keeping order... (( And also thought like \"why it\\'s an easy problem?\". Also I\\'ve been used a binary search with greedy modification (if intersection of one item was found). Too much for such simple task. I think, that additional example will be good for clarified"
                    },
                    {
                        "username": "deezyto",
                        "content": "1) Find out which array has a shorter length\\n2) Record each of its digits as a key in the map as number => count\\n3) Iterate over the larger array and check whether its number is contained in the map\\nIf the number is contained in the map, reduce count to number\\nby 1, if count after reduction = 0, remove the number from the map\\nWe add the found number to the result array"
                    },
                    {
                        "username": "aniket_b",
                        "content": "The question is easy than what it seems from description and sample example test case. i suggest to add one more test case example something like below:\\nnums1: [1,2,3,4]\\nnums2: [3,5,4,]\\nExpected answer : [3,4]\\nThis would help people understand it number need not be contiguous in any of the array\\'s"
                    },
                    {
                        "username": "Philno",
                        "content": "I know in the Set thoery `intersection` means the common elements, but given the examples in description, I thought it was to find the common subarray. Until I modified Example 2, `nums2 = [9,4,9,8,4]`, to `nums2 = [9,4,8,9,4]` and realized it gave the same output."
                    },
                    {
                        "username": "itmakesh31",
                        "content": "The question would have been much clear if it would have been like \"Find common elements between 2 arrays\"."
                    },
                    {
                        "username": "IlyaChernikov",
                        "content": "Yes, the description is vague and I\\'ve reported it"
                    },
                    {
                        "username": "jgabriel98",
                        "content": "for the input:\\n[1,2,2,1]\\n[2,2,2]\\n\\nthe obvious output would be [2,2] (or am i getting the question wrong?)\\n\\nbut the leetcode Judge says that the expected output is [2,2,2]:\\n![image](https://assets.leetcode.com/users/jgabriel98/image_1587535028.png)\\n\\n\\nthis make me question what is the criteria for intersection definition, in this question"
                    },
                    {
                        "username": "Aniketprajapati",
                        "content": "your vector is empty see the expected answer its {2,2} only\\n"
                    },
                    {
                        "username": "Coder0622",
                        "content": "On bottom right box, the expected answer is [2, 2]."
                    },
                    {
                        "username": "starfoe",
                        "content": "As suggested by solution1, if two arrays are of diff size, we should build the map for the smaller one.\\nI don\\'t quite understand the reason. \\n\\nSay `Array a` has `m` elements and `Array b` has `n` elements. Lets suppose that we are going to build a map for `a` and iterate over `b`. The complexity of building the map is `O(m)`, and iterating over `b` will cost `O(n)`. Because the cost of looking up in a dict is always `O(1)`, the total complexity is `O(m) + O(n)*1`\\n\\nIf we build the map for `b`, the total complexity is `O(n) + O(m)*1`, which is the sum of the cost of building the map for `b` and iteration over `a`. \\n\\nI didn\\'t see any difference in the two costs above. So I was a bit confused why we prefer to build the map for the smaller one and iterate over the larger one. Do I miss something like details in the underlying implementation or some other consideration off my radar?"
                    },
                    {
                        "username": "pathak_1511",
                        "content": "Because we can save space if we only push smaller array into the map.\\nExample for worst case scenario, suppose we have nums1 size = 1000 and nums2 size = 1, then if you push bigger array then your space complexity is greater than if you push the nums2 element in the hashmap."
                    },
                    {
                        "username": "vinaykumar7686",
                        "content": "Is there anyone who can answer all the follow up questions?"
                    }
                ]
            },
            {
                "id": 1574646,
                "content": [
                    {
                        "username": "vishalhemnani",
                        "content": "> What if elements of nums2 are stored on disk, and the memory is\\n> limited such that you cannot load all elements into the memory at\\n> once?\\n\\n- If only nums2 cannot fit in memory, put all elements of nums1 into a HashMap, read chunks of array that fit into the memory, and record the intersections.\\n\\n- If both nums1 and nums2 are so huge that neither fit into the memory, sort them individually (external sort), then read 2 elements from each array at a time in memory, record intersections."
                    },
                    {
                        "username": "cde282306",
                        "content": " ans=[]\\n        i,j=0,0\\n        while j<len(nums1) or i<len(nums2):\\n            print(i,j)\\n            if nums1[j]!=nums2[i]:\\n                if i<len(nums2):\\n                    i+=1\\n                \\n            elif nums1[j]==nums2[i]:\\n                ans.append(nums1[x])\\n                i=0\\n                if j<len(nums1):\\n                    j+=1\\n                \\n        return ans\\n\\ncould you please explain to me why my where my list index out of the range\\n"
                    },
                    {
                        "username": "stong2351",
                        "content": "I still don\\'t quite under the question. Can someone give me more examples? I don\\'t want to look at the answers."
                    },
                    {
                        "username": "mahi2208",
                        "content": "A little too late for this reply but for future strugglers:\\nThe easiest way to describe intersection is \"common elements\" between the two lists. \\ne.g.  nums1 = [1,2,3,4,5] \\n        nums2 = [2,3,4,6,8,9]\\n        intersection = [2,3,4]\\n\\n        nums1 = [2,2,3,3,5] \\n        nums2 = [2,3,4,3,2,9]\\n        intersection = [2,2,3,3] OR [2,3,2,3] OR [3,3,2,2] and so on. (order does \\n        not matter in this question as long as all the required elements are there)\\n\\n        nums1 = [1,2,2,1] \\n        nums2 = [2]\\n        intersection = [2] (the only common element is 2 here since its only present 1 time in nums2. If nums2 was [2,2] then result would be [2,2])\\n\\nI hope this helps!\\n  "
                    },
                    {
                        "username": "karankumar560k",
                        "content": "for getting a preview of the intersection you can search for the weinn diagram of the intersection basically we have to find the common points between the array"
                    },
                    {
                        "username": "user4279q",
                        "content": "Basically it actually means that the intersection elements of the arrays should appear the minimum of the amounts of times the element appears in both arrays. For example [2,3,3] and [2,2,3]. Then the answer would be [2,3]. Because in arr1 there aren\\'t 2 \"2\"s so it appears once(min(2, 1)). Same goes for the \\'3\\'. I know this Is late but just in case somebody didn\\'t understand the question :)"
                    },
                    {
                        "username": "candypuff1216",
                        "content": "What does \"Each element in the result should appear as many times as it shows in both arrays.\" mean, exactly?\\n\\nDoes it mean that in arrays `[4, 9, 5]` and `[9, 4, 9, 8, 4]` that the numbers `[4, 9]` appear at least once in both arrays?\\n\\nAdditionally, \"the result can be in any order.\" Does that mean that even in a list like `[5, 4, 6, 7, 8]` and `[5, 6, 9, 10, 0]` that the output can be `[5, 6]` or `[6, 5]`?\\n\\nI feel kinda dumb for asking this but I\\'m trying really hard to solve this myself before I approach the answers."
                    },
                    {
                        "username": "gayatrisoni",
                        "content": "yes, the order does not matter. So you can print array in any order [5, 6] or [6, 5]."
                    },
                    {
                        "username": "hiumair",
                        "content": "Is it just me, who tried to solve it with the intersection with exact order... \\nSomething like, find common substring between two strings.\\nI was wondering how come its an easy problem!!\\n\\nif order is not mandatory, its just finding common elements.\\n\\n**Update:** err while typing, I remembered the defination of finding union vs intersections between sets!! studied like 16 years ago :( \\nStill leaving this comment for clarity of someone else. \\n\\n*any ideas how to avoid such misunderstanding in interview. *"
                    },
                    {
                        "username": "ilya-pro",
                        "content": "I\\'m also tried to solve with keeping order... (( And also thought like \"why it\\'s an easy problem?\". Also I\\'ve been used a binary search with greedy modification (if intersection of one item was found). Too much for such simple task. I think, that additional example will be good for clarified"
                    },
                    {
                        "username": "deezyto",
                        "content": "1) Find out which array has a shorter length\\n2) Record each of its digits as a key in the map as number => count\\n3) Iterate over the larger array and check whether its number is contained in the map\\nIf the number is contained in the map, reduce count to number\\nby 1, if count after reduction = 0, remove the number from the map\\nWe add the found number to the result array"
                    },
                    {
                        "username": "aniket_b",
                        "content": "The question is easy than what it seems from description and sample example test case. i suggest to add one more test case example something like below:\\nnums1: [1,2,3,4]\\nnums2: [3,5,4,]\\nExpected answer : [3,4]\\nThis would help people understand it number need not be contiguous in any of the array\\'s"
                    },
                    {
                        "username": "Philno",
                        "content": "I know in the Set thoery `intersection` means the common elements, but given the examples in description, I thought it was to find the common subarray. Until I modified Example 2, `nums2 = [9,4,9,8,4]`, to `nums2 = [9,4,8,9,4]` and realized it gave the same output."
                    },
                    {
                        "username": "itmakesh31",
                        "content": "The question would have been much clear if it would have been like \"Find common elements between 2 arrays\"."
                    },
                    {
                        "username": "IlyaChernikov",
                        "content": "Yes, the description is vague and I\\'ve reported it"
                    },
                    {
                        "username": "jgabriel98",
                        "content": "for the input:\\n[1,2,2,1]\\n[2,2,2]\\n\\nthe obvious output would be [2,2] (or am i getting the question wrong?)\\n\\nbut the leetcode Judge says that the expected output is [2,2,2]:\\n![image](https://assets.leetcode.com/users/jgabriel98/image_1587535028.png)\\n\\n\\nthis make me question what is the criteria for intersection definition, in this question"
                    },
                    {
                        "username": "Aniketprajapati",
                        "content": "your vector is empty see the expected answer its {2,2} only\\n"
                    },
                    {
                        "username": "Coder0622",
                        "content": "On bottom right box, the expected answer is [2, 2]."
                    },
                    {
                        "username": "starfoe",
                        "content": "As suggested by solution1, if two arrays are of diff size, we should build the map for the smaller one.\\nI don\\'t quite understand the reason. \\n\\nSay `Array a` has `m` elements and `Array b` has `n` elements. Lets suppose that we are going to build a map for `a` and iterate over `b`. The complexity of building the map is `O(m)`, and iterating over `b` will cost `O(n)`. Because the cost of looking up in a dict is always `O(1)`, the total complexity is `O(m) + O(n)*1`\\n\\nIf we build the map for `b`, the total complexity is `O(n) + O(m)*1`, which is the sum of the cost of building the map for `b` and iteration over `a`. \\n\\nI didn\\'t see any difference in the two costs above. So I was a bit confused why we prefer to build the map for the smaller one and iterate over the larger one. Do I miss something like details in the underlying implementation or some other consideration off my radar?"
                    },
                    {
                        "username": "pathak_1511",
                        "content": "Because we can save space if we only push smaller array into the map.\\nExample for worst case scenario, suppose we have nums1 size = 1000 and nums2 size = 1, then if you push bigger array then your space complexity is greater than if you push the nums2 element in the hashmap."
                    },
                    {
                        "username": "vinaykumar7686",
                        "content": "Is there anyone who can answer all the follow up questions?"
                    }
                ]
            },
            {
                "id": 1729575,
                "content": [
                    {
                        "username": "vishalhemnani",
                        "content": "> What if elements of nums2 are stored on disk, and the memory is\\n> limited such that you cannot load all elements into the memory at\\n> once?\\n\\n- If only nums2 cannot fit in memory, put all elements of nums1 into a HashMap, read chunks of array that fit into the memory, and record the intersections.\\n\\n- If both nums1 and nums2 are so huge that neither fit into the memory, sort them individually (external sort), then read 2 elements from each array at a time in memory, record intersections."
                    },
                    {
                        "username": "cde282306",
                        "content": " ans=[]\\n        i,j=0,0\\n        while j<len(nums1) or i<len(nums2):\\n            print(i,j)\\n            if nums1[j]!=nums2[i]:\\n                if i<len(nums2):\\n                    i+=1\\n                \\n            elif nums1[j]==nums2[i]:\\n                ans.append(nums1[x])\\n                i=0\\n                if j<len(nums1):\\n                    j+=1\\n                \\n        return ans\\n\\ncould you please explain to me why my where my list index out of the range\\n"
                    },
                    {
                        "username": "stong2351",
                        "content": "I still don\\'t quite under the question. Can someone give me more examples? I don\\'t want to look at the answers."
                    },
                    {
                        "username": "mahi2208",
                        "content": "A little too late for this reply but for future strugglers:\\nThe easiest way to describe intersection is \"common elements\" between the two lists. \\ne.g.  nums1 = [1,2,3,4,5] \\n        nums2 = [2,3,4,6,8,9]\\n        intersection = [2,3,4]\\n\\n        nums1 = [2,2,3,3,5] \\n        nums2 = [2,3,4,3,2,9]\\n        intersection = [2,2,3,3] OR [2,3,2,3] OR [3,3,2,2] and so on. (order does \\n        not matter in this question as long as all the required elements are there)\\n\\n        nums1 = [1,2,2,1] \\n        nums2 = [2]\\n        intersection = [2] (the only common element is 2 here since its only present 1 time in nums2. If nums2 was [2,2] then result would be [2,2])\\n\\nI hope this helps!\\n  "
                    },
                    {
                        "username": "karankumar560k",
                        "content": "for getting a preview of the intersection you can search for the weinn diagram of the intersection basically we have to find the common points between the array"
                    },
                    {
                        "username": "user4279q",
                        "content": "Basically it actually means that the intersection elements of the arrays should appear the minimum of the amounts of times the element appears in both arrays. For example [2,3,3] and [2,2,3]. Then the answer would be [2,3]. Because in arr1 there aren\\'t 2 \"2\"s so it appears once(min(2, 1)). Same goes for the \\'3\\'. I know this Is late but just in case somebody didn\\'t understand the question :)"
                    },
                    {
                        "username": "candypuff1216",
                        "content": "What does \"Each element in the result should appear as many times as it shows in both arrays.\" mean, exactly?\\n\\nDoes it mean that in arrays `[4, 9, 5]` and `[9, 4, 9, 8, 4]` that the numbers `[4, 9]` appear at least once in both arrays?\\n\\nAdditionally, \"the result can be in any order.\" Does that mean that even in a list like `[5, 4, 6, 7, 8]` and `[5, 6, 9, 10, 0]` that the output can be `[5, 6]` or `[6, 5]`?\\n\\nI feel kinda dumb for asking this but I\\'m trying really hard to solve this myself before I approach the answers."
                    },
                    {
                        "username": "gayatrisoni",
                        "content": "yes, the order does not matter. So you can print array in any order [5, 6] or [6, 5]."
                    },
                    {
                        "username": "hiumair",
                        "content": "Is it just me, who tried to solve it with the intersection with exact order... \\nSomething like, find common substring between two strings.\\nI was wondering how come its an easy problem!!\\n\\nif order is not mandatory, its just finding common elements.\\n\\n**Update:** err while typing, I remembered the defination of finding union vs intersections between sets!! studied like 16 years ago :( \\nStill leaving this comment for clarity of someone else. \\n\\n*any ideas how to avoid such misunderstanding in interview. *"
                    },
                    {
                        "username": "ilya-pro",
                        "content": "I\\'m also tried to solve with keeping order... (( And also thought like \"why it\\'s an easy problem?\". Also I\\'ve been used a binary search with greedy modification (if intersection of one item was found). Too much for such simple task. I think, that additional example will be good for clarified"
                    },
                    {
                        "username": "deezyto",
                        "content": "1) Find out which array has a shorter length\\n2) Record each of its digits as a key in the map as number => count\\n3) Iterate over the larger array and check whether its number is contained in the map\\nIf the number is contained in the map, reduce count to number\\nby 1, if count after reduction = 0, remove the number from the map\\nWe add the found number to the result array"
                    },
                    {
                        "username": "aniket_b",
                        "content": "The question is easy than what it seems from description and sample example test case. i suggest to add one more test case example something like below:\\nnums1: [1,2,3,4]\\nnums2: [3,5,4,]\\nExpected answer : [3,4]\\nThis would help people understand it number need not be contiguous in any of the array\\'s"
                    },
                    {
                        "username": "Philno",
                        "content": "I know in the Set thoery `intersection` means the common elements, but given the examples in description, I thought it was to find the common subarray. Until I modified Example 2, `nums2 = [9,4,9,8,4]`, to `nums2 = [9,4,8,9,4]` and realized it gave the same output."
                    },
                    {
                        "username": "itmakesh31",
                        "content": "The question would have been much clear if it would have been like \"Find common elements between 2 arrays\"."
                    },
                    {
                        "username": "IlyaChernikov",
                        "content": "Yes, the description is vague and I\\'ve reported it"
                    },
                    {
                        "username": "jgabriel98",
                        "content": "for the input:\\n[1,2,2,1]\\n[2,2,2]\\n\\nthe obvious output would be [2,2] (or am i getting the question wrong?)\\n\\nbut the leetcode Judge says that the expected output is [2,2,2]:\\n![image](https://assets.leetcode.com/users/jgabriel98/image_1587535028.png)\\n\\n\\nthis make me question what is the criteria for intersection definition, in this question"
                    },
                    {
                        "username": "Aniketprajapati",
                        "content": "your vector is empty see the expected answer its {2,2} only\\n"
                    },
                    {
                        "username": "Coder0622",
                        "content": "On bottom right box, the expected answer is [2, 2]."
                    },
                    {
                        "username": "starfoe",
                        "content": "As suggested by solution1, if two arrays are of diff size, we should build the map for the smaller one.\\nI don\\'t quite understand the reason. \\n\\nSay `Array a` has `m` elements and `Array b` has `n` elements. Lets suppose that we are going to build a map for `a` and iterate over `b`. The complexity of building the map is `O(m)`, and iterating over `b` will cost `O(n)`. Because the cost of looking up in a dict is always `O(1)`, the total complexity is `O(m) + O(n)*1`\\n\\nIf we build the map for `b`, the total complexity is `O(n) + O(m)*1`, which is the sum of the cost of building the map for `b` and iteration over `a`. \\n\\nI didn\\'t see any difference in the two costs above. So I was a bit confused why we prefer to build the map for the smaller one and iterate over the larger one. Do I miss something like details in the underlying implementation or some other consideration off my radar?"
                    },
                    {
                        "username": "pathak_1511",
                        "content": "Because we can save space if we only push smaller array into the map.\\nExample for worst case scenario, suppose we have nums1 size = 1000 and nums2 size = 1, then if you push bigger array then your space complexity is greater than if you push the nums2 element in the hashmap."
                    },
                    {
                        "username": "vinaykumar7686",
                        "content": "Is there anyone who can answer all the follow up questions?"
                    }
                ]
            },
            {
                "id": 1855238,
                "content": [
                    {
                        "username": "vishalhemnani",
                        "content": "> What if elements of nums2 are stored on disk, and the memory is\\n> limited such that you cannot load all elements into the memory at\\n> once?\\n\\n- If only nums2 cannot fit in memory, put all elements of nums1 into a HashMap, read chunks of array that fit into the memory, and record the intersections.\\n\\n- If both nums1 and nums2 are so huge that neither fit into the memory, sort them individually (external sort), then read 2 elements from each array at a time in memory, record intersections."
                    },
                    {
                        "username": "cde282306",
                        "content": " ans=[]\\n        i,j=0,0\\n        while j<len(nums1) or i<len(nums2):\\n            print(i,j)\\n            if nums1[j]!=nums2[i]:\\n                if i<len(nums2):\\n                    i+=1\\n                \\n            elif nums1[j]==nums2[i]:\\n                ans.append(nums1[x])\\n                i=0\\n                if j<len(nums1):\\n                    j+=1\\n                \\n        return ans\\n\\ncould you please explain to me why my where my list index out of the range\\n"
                    },
                    {
                        "username": "stong2351",
                        "content": "I still don\\'t quite under the question. Can someone give me more examples? I don\\'t want to look at the answers."
                    },
                    {
                        "username": "mahi2208",
                        "content": "A little too late for this reply but for future strugglers:\\nThe easiest way to describe intersection is \"common elements\" between the two lists. \\ne.g.  nums1 = [1,2,3,4,5] \\n        nums2 = [2,3,4,6,8,9]\\n        intersection = [2,3,4]\\n\\n        nums1 = [2,2,3,3,5] \\n        nums2 = [2,3,4,3,2,9]\\n        intersection = [2,2,3,3] OR [2,3,2,3] OR [3,3,2,2] and so on. (order does \\n        not matter in this question as long as all the required elements are there)\\n\\n        nums1 = [1,2,2,1] \\n        nums2 = [2]\\n        intersection = [2] (the only common element is 2 here since its only present 1 time in nums2. If nums2 was [2,2] then result would be [2,2])\\n\\nI hope this helps!\\n  "
                    },
                    {
                        "username": "karankumar560k",
                        "content": "for getting a preview of the intersection you can search for the weinn diagram of the intersection basically we have to find the common points between the array"
                    },
                    {
                        "username": "user4279q",
                        "content": "Basically it actually means that the intersection elements of the arrays should appear the minimum of the amounts of times the element appears in both arrays. For example [2,3,3] and [2,2,3]. Then the answer would be [2,3]. Because in arr1 there aren\\'t 2 \"2\"s so it appears once(min(2, 1)). Same goes for the \\'3\\'. I know this Is late but just in case somebody didn\\'t understand the question :)"
                    },
                    {
                        "username": "candypuff1216",
                        "content": "What does \"Each element in the result should appear as many times as it shows in both arrays.\" mean, exactly?\\n\\nDoes it mean that in arrays `[4, 9, 5]` and `[9, 4, 9, 8, 4]` that the numbers `[4, 9]` appear at least once in both arrays?\\n\\nAdditionally, \"the result can be in any order.\" Does that mean that even in a list like `[5, 4, 6, 7, 8]` and `[5, 6, 9, 10, 0]` that the output can be `[5, 6]` or `[6, 5]`?\\n\\nI feel kinda dumb for asking this but I\\'m trying really hard to solve this myself before I approach the answers."
                    },
                    {
                        "username": "gayatrisoni",
                        "content": "yes, the order does not matter. So you can print array in any order [5, 6] or [6, 5]."
                    },
                    {
                        "username": "hiumair",
                        "content": "Is it just me, who tried to solve it with the intersection with exact order... \\nSomething like, find common substring between two strings.\\nI was wondering how come its an easy problem!!\\n\\nif order is not mandatory, its just finding common elements.\\n\\n**Update:** err while typing, I remembered the defination of finding union vs intersections between sets!! studied like 16 years ago :( \\nStill leaving this comment for clarity of someone else. \\n\\n*any ideas how to avoid such misunderstanding in interview. *"
                    },
                    {
                        "username": "ilya-pro",
                        "content": "I\\'m also tried to solve with keeping order... (( And also thought like \"why it\\'s an easy problem?\". Also I\\'ve been used a binary search with greedy modification (if intersection of one item was found). Too much for such simple task. I think, that additional example will be good for clarified"
                    },
                    {
                        "username": "deezyto",
                        "content": "1) Find out which array has a shorter length\\n2) Record each of its digits as a key in the map as number => count\\n3) Iterate over the larger array and check whether its number is contained in the map\\nIf the number is contained in the map, reduce count to number\\nby 1, if count after reduction = 0, remove the number from the map\\nWe add the found number to the result array"
                    },
                    {
                        "username": "aniket_b",
                        "content": "The question is easy than what it seems from description and sample example test case. i suggest to add one more test case example something like below:\\nnums1: [1,2,3,4]\\nnums2: [3,5,4,]\\nExpected answer : [3,4]\\nThis would help people understand it number need not be contiguous in any of the array\\'s"
                    },
                    {
                        "username": "Philno",
                        "content": "I know in the Set thoery `intersection` means the common elements, but given the examples in description, I thought it was to find the common subarray. Until I modified Example 2, `nums2 = [9,4,9,8,4]`, to `nums2 = [9,4,8,9,4]` and realized it gave the same output."
                    },
                    {
                        "username": "itmakesh31",
                        "content": "The question would have been much clear if it would have been like \"Find common elements between 2 arrays\"."
                    },
                    {
                        "username": "IlyaChernikov",
                        "content": "Yes, the description is vague and I\\'ve reported it"
                    },
                    {
                        "username": "jgabriel98",
                        "content": "for the input:\\n[1,2,2,1]\\n[2,2,2]\\n\\nthe obvious output would be [2,2] (or am i getting the question wrong?)\\n\\nbut the leetcode Judge says that the expected output is [2,2,2]:\\n![image](https://assets.leetcode.com/users/jgabriel98/image_1587535028.png)\\n\\n\\nthis make me question what is the criteria for intersection definition, in this question"
                    },
                    {
                        "username": "Aniketprajapati",
                        "content": "your vector is empty see the expected answer its {2,2} only\\n"
                    },
                    {
                        "username": "Coder0622",
                        "content": "On bottom right box, the expected answer is [2, 2]."
                    },
                    {
                        "username": "starfoe",
                        "content": "As suggested by solution1, if two arrays are of diff size, we should build the map for the smaller one.\\nI don\\'t quite understand the reason. \\n\\nSay `Array a` has `m` elements and `Array b` has `n` elements. Lets suppose that we are going to build a map for `a` and iterate over `b`. The complexity of building the map is `O(m)`, and iterating over `b` will cost `O(n)`. Because the cost of looking up in a dict is always `O(1)`, the total complexity is `O(m) + O(n)*1`\\n\\nIf we build the map for `b`, the total complexity is `O(n) + O(m)*1`, which is the sum of the cost of building the map for `b` and iteration over `a`. \\n\\nI didn\\'t see any difference in the two costs above. So I was a bit confused why we prefer to build the map for the smaller one and iterate over the larger one. Do I miss something like details in the underlying implementation or some other consideration off my radar?"
                    },
                    {
                        "username": "pathak_1511",
                        "content": "Because we can save space if we only push smaller array into the map.\\nExample for worst case scenario, suppose we have nums1 size = 1000 and nums2 size = 1, then if you push bigger array then your space complexity is greater than if you push the nums2 element in the hashmap."
                    },
                    {
                        "username": "vinaykumar7686",
                        "content": "Is there anyone who can answer all the follow up questions?"
                    }
                ]
            },
            {
                "id": 1574479,
                "content": [
                    {
                        "username": "vishalhemnani",
                        "content": "> What if elements of nums2 are stored on disk, and the memory is\\n> limited such that you cannot load all elements into the memory at\\n> once?\\n\\n- If only nums2 cannot fit in memory, put all elements of nums1 into a HashMap, read chunks of array that fit into the memory, and record the intersections.\\n\\n- If both nums1 and nums2 are so huge that neither fit into the memory, sort them individually (external sort), then read 2 elements from each array at a time in memory, record intersections."
                    },
                    {
                        "username": "cde282306",
                        "content": " ans=[]\\n        i,j=0,0\\n        while j<len(nums1) or i<len(nums2):\\n            print(i,j)\\n            if nums1[j]!=nums2[i]:\\n                if i<len(nums2):\\n                    i+=1\\n                \\n            elif nums1[j]==nums2[i]:\\n                ans.append(nums1[x])\\n                i=0\\n                if j<len(nums1):\\n                    j+=1\\n                \\n        return ans\\n\\ncould you please explain to me why my where my list index out of the range\\n"
                    },
                    {
                        "username": "stong2351",
                        "content": "I still don\\'t quite under the question. Can someone give me more examples? I don\\'t want to look at the answers."
                    },
                    {
                        "username": "mahi2208",
                        "content": "A little too late for this reply but for future strugglers:\\nThe easiest way to describe intersection is \"common elements\" between the two lists. \\ne.g.  nums1 = [1,2,3,4,5] \\n        nums2 = [2,3,4,6,8,9]\\n        intersection = [2,3,4]\\n\\n        nums1 = [2,2,3,3,5] \\n        nums2 = [2,3,4,3,2,9]\\n        intersection = [2,2,3,3] OR [2,3,2,3] OR [3,3,2,2] and so on. (order does \\n        not matter in this question as long as all the required elements are there)\\n\\n        nums1 = [1,2,2,1] \\n        nums2 = [2]\\n        intersection = [2] (the only common element is 2 here since its only present 1 time in nums2. If nums2 was [2,2] then result would be [2,2])\\n\\nI hope this helps!\\n  "
                    },
                    {
                        "username": "karankumar560k",
                        "content": "for getting a preview of the intersection you can search for the weinn diagram of the intersection basically we have to find the common points between the array"
                    },
                    {
                        "username": "user4279q",
                        "content": "Basically it actually means that the intersection elements of the arrays should appear the minimum of the amounts of times the element appears in both arrays. For example [2,3,3] and [2,2,3]. Then the answer would be [2,3]. Because in arr1 there aren\\'t 2 \"2\"s so it appears once(min(2, 1)). Same goes for the \\'3\\'. I know this Is late but just in case somebody didn\\'t understand the question :)"
                    },
                    {
                        "username": "candypuff1216",
                        "content": "What does \"Each element in the result should appear as many times as it shows in both arrays.\" mean, exactly?\\n\\nDoes it mean that in arrays `[4, 9, 5]` and `[9, 4, 9, 8, 4]` that the numbers `[4, 9]` appear at least once in both arrays?\\n\\nAdditionally, \"the result can be in any order.\" Does that mean that even in a list like `[5, 4, 6, 7, 8]` and `[5, 6, 9, 10, 0]` that the output can be `[5, 6]` or `[6, 5]`?\\n\\nI feel kinda dumb for asking this but I\\'m trying really hard to solve this myself before I approach the answers."
                    },
                    {
                        "username": "gayatrisoni",
                        "content": "yes, the order does not matter. So you can print array in any order [5, 6] or [6, 5]."
                    },
                    {
                        "username": "hiumair",
                        "content": "Is it just me, who tried to solve it with the intersection with exact order... \\nSomething like, find common substring between two strings.\\nI was wondering how come its an easy problem!!\\n\\nif order is not mandatory, its just finding common elements.\\n\\n**Update:** err while typing, I remembered the defination of finding union vs intersections between sets!! studied like 16 years ago :( \\nStill leaving this comment for clarity of someone else. \\n\\n*any ideas how to avoid such misunderstanding in interview. *"
                    },
                    {
                        "username": "ilya-pro",
                        "content": "I\\'m also tried to solve with keeping order... (( And also thought like \"why it\\'s an easy problem?\". Also I\\'ve been used a binary search with greedy modification (if intersection of one item was found). Too much for such simple task. I think, that additional example will be good for clarified"
                    },
                    {
                        "username": "deezyto",
                        "content": "1) Find out which array has a shorter length\\n2) Record each of its digits as a key in the map as number => count\\n3) Iterate over the larger array and check whether its number is contained in the map\\nIf the number is contained in the map, reduce count to number\\nby 1, if count after reduction = 0, remove the number from the map\\nWe add the found number to the result array"
                    },
                    {
                        "username": "aniket_b",
                        "content": "The question is easy than what it seems from description and sample example test case. i suggest to add one more test case example something like below:\\nnums1: [1,2,3,4]\\nnums2: [3,5,4,]\\nExpected answer : [3,4]\\nThis would help people understand it number need not be contiguous in any of the array\\'s"
                    },
                    {
                        "username": "Philno",
                        "content": "I know in the Set thoery `intersection` means the common elements, but given the examples in description, I thought it was to find the common subarray. Until I modified Example 2, `nums2 = [9,4,9,8,4]`, to `nums2 = [9,4,8,9,4]` and realized it gave the same output."
                    },
                    {
                        "username": "itmakesh31",
                        "content": "The question would have been much clear if it would have been like \"Find common elements between 2 arrays\"."
                    },
                    {
                        "username": "IlyaChernikov",
                        "content": "Yes, the description is vague and I\\'ve reported it"
                    },
                    {
                        "username": "jgabriel98",
                        "content": "for the input:\\n[1,2,2,1]\\n[2,2,2]\\n\\nthe obvious output would be [2,2] (or am i getting the question wrong?)\\n\\nbut the leetcode Judge says that the expected output is [2,2,2]:\\n![image](https://assets.leetcode.com/users/jgabriel98/image_1587535028.png)\\n\\n\\nthis make me question what is the criteria for intersection definition, in this question"
                    },
                    {
                        "username": "Aniketprajapati",
                        "content": "your vector is empty see the expected answer its {2,2} only\\n"
                    },
                    {
                        "username": "Coder0622",
                        "content": "On bottom right box, the expected answer is [2, 2]."
                    },
                    {
                        "username": "starfoe",
                        "content": "As suggested by solution1, if two arrays are of diff size, we should build the map for the smaller one.\\nI don\\'t quite understand the reason. \\n\\nSay `Array a` has `m` elements and `Array b` has `n` elements. Lets suppose that we are going to build a map for `a` and iterate over `b`. The complexity of building the map is `O(m)`, and iterating over `b` will cost `O(n)`. Because the cost of looking up in a dict is always `O(1)`, the total complexity is `O(m) + O(n)*1`\\n\\nIf we build the map for `b`, the total complexity is `O(n) + O(m)*1`, which is the sum of the cost of building the map for `b` and iteration over `a`. \\n\\nI didn\\'t see any difference in the two costs above. So I was a bit confused why we prefer to build the map for the smaller one and iterate over the larger one. Do I miss something like details in the underlying implementation or some other consideration off my radar?"
                    },
                    {
                        "username": "pathak_1511",
                        "content": "Because we can save space if we only push smaller array into the map.\\nExample for worst case scenario, suppose we have nums1 size = 1000 and nums2 size = 1, then if you push bigger array then your space complexity is greater than if you push the nums2 element in the hashmap."
                    },
                    {
                        "username": "vinaykumar7686",
                        "content": "Is there anyone who can answer all the follow up questions?"
                    }
                ]
            },
            {
                "id": 1568318,
                "content": [
                    {
                        "username": "vishalhemnani",
                        "content": "> What if elements of nums2 are stored on disk, and the memory is\\n> limited such that you cannot load all elements into the memory at\\n> once?\\n\\n- If only nums2 cannot fit in memory, put all elements of nums1 into a HashMap, read chunks of array that fit into the memory, and record the intersections.\\n\\n- If both nums1 and nums2 are so huge that neither fit into the memory, sort them individually (external sort), then read 2 elements from each array at a time in memory, record intersections."
                    },
                    {
                        "username": "cde282306",
                        "content": " ans=[]\\n        i,j=0,0\\n        while j<len(nums1) or i<len(nums2):\\n            print(i,j)\\n            if nums1[j]!=nums2[i]:\\n                if i<len(nums2):\\n                    i+=1\\n                \\n            elif nums1[j]==nums2[i]:\\n                ans.append(nums1[x])\\n                i=0\\n                if j<len(nums1):\\n                    j+=1\\n                \\n        return ans\\n\\ncould you please explain to me why my where my list index out of the range\\n"
                    },
                    {
                        "username": "stong2351",
                        "content": "I still don\\'t quite under the question. Can someone give me more examples? I don\\'t want to look at the answers."
                    },
                    {
                        "username": "mahi2208",
                        "content": "A little too late for this reply but for future strugglers:\\nThe easiest way to describe intersection is \"common elements\" between the two lists. \\ne.g.  nums1 = [1,2,3,4,5] \\n        nums2 = [2,3,4,6,8,9]\\n        intersection = [2,3,4]\\n\\n        nums1 = [2,2,3,3,5] \\n        nums2 = [2,3,4,3,2,9]\\n        intersection = [2,2,3,3] OR [2,3,2,3] OR [3,3,2,2] and so on. (order does \\n        not matter in this question as long as all the required elements are there)\\n\\n        nums1 = [1,2,2,1] \\n        nums2 = [2]\\n        intersection = [2] (the only common element is 2 here since its only present 1 time in nums2. If nums2 was [2,2] then result would be [2,2])\\n\\nI hope this helps!\\n  "
                    },
                    {
                        "username": "karankumar560k",
                        "content": "for getting a preview of the intersection you can search for the weinn diagram of the intersection basically we have to find the common points between the array"
                    },
                    {
                        "username": "user4279q",
                        "content": "Basically it actually means that the intersection elements of the arrays should appear the minimum of the amounts of times the element appears in both arrays. For example [2,3,3] and [2,2,3]. Then the answer would be [2,3]. Because in arr1 there aren\\'t 2 \"2\"s so it appears once(min(2, 1)). Same goes for the \\'3\\'. I know this Is late but just in case somebody didn\\'t understand the question :)"
                    },
                    {
                        "username": "candypuff1216",
                        "content": "What does \"Each element in the result should appear as many times as it shows in both arrays.\" mean, exactly?\\n\\nDoes it mean that in arrays `[4, 9, 5]` and `[9, 4, 9, 8, 4]` that the numbers `[4, 9]` appear at least once in both arrays?\\n\\nAdditionally, \"the result can be in any order.\" Does that mean that even in a list like `[5, 4, 6, 7, 8]` and `[5, 6, 9, 10, 0]` that the output can be `[5, 6]` or `[6, 5]`?\\n\\nI feel kinda dumb for asking this but I\\'m trying really hard to solve this myself before I approach the answers."
                    },
                    {
                        "username": "gayatrisoni",
                        "content": "yes, the order does not matter. So you can print array in any order [5, 6] or [6, 5]."
                    },
                    {
                        "username": "hiumair",
                        "content": "Is it just me, who tried to solve it with the intersection with exact order... \\nSomething like, find common substring between two strings.\\nI was wondering how come its an easy problem!!\\n\\nif order is not mandatory, its just finding common elements.\\n\\n**Update:** err while typing, I remembered the defination of finding union vs intersections between sets!! studied like 16 years ago :( \\nStill leaving this comment for clarity of someone else. \\n\\n*any ideas how to avoid such misunderstanding in interview. *"
                    },
                    {
                        "username": "ilya-pro",
                        "content": "I\\'m also tried to solve with keeping order... (( And also thought like \"why it\\'s an easy problem?\". Also I\\'ve been used a binary search with greedy modification (if intersection of one item was found). Too much for such simple task. I think, that additional example will be good for clarified"
                    },
                    {
                        "username": "deezyto",
                        "content": "1) Find out which array has a shorter length\\n2) Record each of its digits as a key in the map as number => count\\n3) Iterate over the larger array and check whether its number is contained in the map\\nIf the number is contained in the map, reduce count to number\\nby 1, if count after reduction = 0, remove the number from the map\\nWe add the found number to the result array"
                    },
                    {
                        "username": "aniket_b",
                        "content": "The question is easy than what it seems from description and sample example test case. i suggest to add one more test case example something like below:\\nnums1: [1,2,3,4]\\nnums2: [3,5,4,]\\nExpected answer : [3,4]\\nThis would help people understand it number need not be contiguous in any of the array\\'s"
                    },
                    {
                        "username": "Philno",
                        "content": "I know in the Set thoery `intersection` means the common elements, but given the examples in description, I thought it was to find the common subarray. Until I modified Example 2, `nums2 = [9,4,9,8,4]`, to `nums2 = [9,4,8,9,4]` and realized it gave the same output."
                    },
                    {
                        "username": "itmakesh31",
                        "content": "The question would have been much clear if it would have been like \"Find common elements between 2 arrays\"."
                    },
                    {
                        "username": "IlyaChernikov",
                        "content": "Yes, the description is vague and I\\'ve reported it"
                    },
                    {
                        "username": "jgabriel98",
                        "content": "for the input:\\n[1,2,2,1]\\n[2,2,2]\\n\\nthe obvious output would be [2,2] (or am i getting the question wrong?)\\n\\nbut the leetcode Judge says that the expected output is [2,2,2]:\\n![image](https://assets.leetcode.com/users/jgabriel98/image_1587535028.png)\\n\\n\\nthis make me question what is the criteria for intersection definition, in this question"
                    },
                    {
                        "username": "Aniketprajapati",
                        "content": "your vector is empty see the expected answer its {2,2} only\\n"
                    },
                    {
                        "username": "Coder0622",
                        "content": "On bottom right box, the expected answer is [2, 2]."
                    },
                    {
                        "username": "starfoe",
                        "content": "As suggested by solution1, if two arrays are of diff size, we should build the map for the smaller one.\\nI don\\'t quite understand the reason. \\n\\nSay `Array a` has `m` elements and `Array b` has `n` elements. Lets suppose that we are going to build a map for `a` and iterate over `b`. The complexity of building the map is `O(m)`, and iterating over `b` will cost `O(n)`. Because the cost of looking up in a dict is always `O(1)`, the total complexity is `O(m) + O(n)*1`\\n\\nIf we build the map for `b`, the total complexity is `O(n) + O(m)*1`, which is the sum of the cost of building the map for `b` and iteration over `a`. \\n\\nI didn\\'t see any difference in the two costs above. So I was a bit confused why we prefer to build the map for the smaller one and iterate over the larger one. Do I miss something like details in the underlying implementation or some other consideration off my radar?"
                    },
                    {
                        "username": "pathak_1511",
                        "content": "Because we can save space if we only push smaller array into the map.\\nExample for worst case scenario, suppose we have nums1 size = 1000 and nums2 size = 1, then if you push bigger array then your space complexity is greater than if you push the nums2 element in the hashmap."
                    },
                    {
                        "username": "vinaykumar7686",
                        "content": "Is there anyone who can answer all the follow up questions?"
                    }
                ]
            },
            {
                "id": 1573282,
                "content": [
                    {
                        "username": "vishalhemnani",
                        "content": "> What if elements of nums2 are stored on disk, and the memory is\\n> limited such that you cannot load all elements into the memory at\\n> once?\\n\\n- If only nums2 cannot fit in memory, put all elements of nums1 into a HashMap, read chunks of array that fit into the memory, and record the intersections.\\n\\n- If both nums1 and nums2 are so huge that neither fit into the memory, sort them individually (external sort), then read 2 elements from each array at a time in memory, record intersections."
                    },
                    {
                        "username": "cde282306",
                        "content": " ans=[]\\n        i,j=0,0\\n        while j<len(nums1) or i<len(nums2):\\n            print(i,j)\\n            if nums1[j]!=nums2[i]:\\n                if i<len(nums2):\\n                    i+=1\\n                \\n            elif nums1[j]==nums2[i]:\\n                ans.append(nums1[x])\\n                i=0\\n                if j<len(nums1):\\n                    j+=1\\n                \\n        return ans\\n\\ncould you please explain to me why my where my list index out of the range\\n"
                    },
                    {
                        "username": "stong2351",
                        "content": "I still don\\'t quite under the question. Can someone give me more examples? I don\\'t want to look at the answers."
                    },
                    {
                        "username": "mahi2208",
                        "content": "A little too late for this reply but for future strugglers:\\nThe easiest way to describe intersection is \"common elements\" between the two lists. \\ne.g.  nums1 = [1,2,3,4,5] \\n        nums2 = [2,3,4,6,8,9]\\n        intersection = [2,3,4]\\n\\n        nums1 = [2,2,3,3,5] \\n        nums2 = [2,3,4,3,2,9]\\n        intersection = [2,2,3,3] OR [2,3,2,3] OR [3,3,2,2] and so on. (order does \\n        not matter in this question as long as all the required elements are there)\\n\\n        nums1 = [1,2,2,1] \\n        nums2 = [2]\\n        intersection = [2] (the only common element is 2 here since its only present 1 time in nums2. If nums2 was [2,2] then result would be [2,2])\\n\\nI hope this helps!\\n  "
                    },
                    {
                        "username": "karankumar560k",
                        "content": "for getting a preview of the intersection you can search for the weinn diagram of the intersection basically we have to find the common points between the array"
                    },
                    {
                        "username": "user4279q",
                        "content": "Basically it actually means that the intersection elements of the arrays should appear the minimum of the amounts of times the element appears in both arrays. For example [2,3,3] and [2,2,3]. Then the answer would be [2,3]. Because in arr1 there aren\\'t 2 \"2\"s so it appears once(min(2, 1)). Same goes for the \\'3\\'. I know this Is late but just in case somebody didn\\'t understand the question :)"
                    },
                    {
                        "username": "candypuff1216",
                        "content": "What does \"Each element in the result should appear as many times as it shows in both arrays.\" mean, exactly?\\n\\nDoes it mean that in arrays `[4, 9, 5]` and `[9, 4, 9, 8, 4]` that the numbers `[4, 9]` appear at least once in both arrays?\\n\\nAdditionally, \"the result can be in any order.\" Does that mean that even in a list like `[5, 4, 6, 7, 8]` and `[5, 6, 9, 10, 0]` that the output can be `[5, 6]` or `[6, 5]`?\\n\\nI feel kinda dumb for asking this but I\\'m trying really hard to solve this myself before I approach the answers."
                    },
                    {
                        "username": "gayatrisoni",
                        "content": "yes, the order does not matter. So you can print array in any order [5, 6] or [6, 5]."
                    },
                    {
                        "username": "hiumair",
                        "content": "Is it just me, who tried to solve it with the intersection with exact order... \\nSomething like, find common substring between two strings.\\nI was wondering how come its an easy problem!!\\n\\nif order is not mandatory, its just finding common elements.\\n\\n**Update:** err while typing, I remembered the defination of finding union vs intersections between sets!! studied like 16 years ago :( \\nStill leaving this comment for clarity of someone else. \\n\\n*any ideas how to avoid such misunderstanding in interview. *"
                    },
                    {
                        "username": "ilya-pro",
                        "content": "I\\'m also tried to solve with keeping order... (( And also thought like \"why it\\'s an easy problem?\". Also I\\'ve been used a binary search with greedy modification (if intersection of one item was found). Too much for such simple task. I think, that additional example will be good for clarified"
                    },
                    {
                        "username": "deezyto",
                        "content": "1) Find out which array has a shorter length\\n2) Record each of its digits as a key in the map as number => count\\n3) Iterate over the larger array and check whether its number is contained in the map\\nIf the number is contained in the map, reduce count to number\\nby 1, if count after reduction = 0, remove the number from the map\\nWe add the found number to the result array"
                    },
                    {
                        "username": "aniket_b",
                        "content": "The question is easy than what it seems from description and sample example test case. i suggest to add one more test case example something like below:\\nnums1: [1,2,3,4]\\nnums2: [3,5,4,]\\nExpected answer : [3,4]\\nThis would help people understand it number need not be contiguous in any of the array\\'s"
                    },
                    {
                        "username": "Philno",
                        "content": "I know in the Set thoery `intersection` means the common elements, but given the examples in description, I thought it was to find the common subarray. Until I modified Example 2, `nums2 = [9,4,9,8,4]`, to `nums2 = [9,4,8,9,4]` and realized it gave the same output."
                    },
                    {
                        "username": "itmakesh31",
                        "content": "The question would have been much clear if it would have been like \"Find common elements between 2 arrays\"."
                    },
                    {
                        "username": "IlyaChernikov",
                        "content": "Yes, the description is vague and I\\'ve reported it"
                    },
                    {
                        "username": "jgabriel98",
                        "content": "for the input:\\n[1,2,2,1]\\n[2,2,2]\\n\\nthe obvious output would be [2,2] (or am i getting the question wrong?)\\n\\nbut the leetcode Judge says that the expected output is [2,2,2]:\\n![image](https://assets.leetcode.com/users/jgabriel98/image_1587535028.png)\\n\\n\\nthis make me question what is the criteria for intersection definition, in this question"
                    },
                    {
                        "username": "Aniketprajapati",
                        "content": "your vector is empty see the expected answer its {2,2} only\\n"
                    },
                    {
                        "username": "Coder0622",
                        "content": "On bottom right box, the expected answer is [2, 2]."
                    },
                    {
                        "username": "starfoe",
                        "content": "As suggested by solution1, if two arrays are of diff size, we should build the map for the smaller one.\\nI don\\'t quite understand the reason. \\n\\nSay `Array a` has `m` elements and `Array b` has `n` elements. Lets suppose that we are going to build a map for `a` and iterate over `b`. The complexity of building the map is `O(m)`, and iterating over `b` will cost `O(n)`. Because the cost of looking up in a dict is always `O(1)`, the total complexity is `O(m) + O(n)*1`\\n\\nIf we build the map for `b`, the total complexity is `O(n) + O(m)*1`, which is the sum of the cost of building the map for `b` and iteration over `a`. \\n\\nI didn\\'t see any difference in the two costs above. So I was a bit confused why we prefer to build the map for the smaller one and iterate over the larger one. Do I miss something like details in the underlying implementation or some other consideration off my radar?"
                    },
                    {
                        "username": "pathak_1511",
                        "content": "Because we can save space if we only push smaller array into the map.\\nExample for worst case scenario, suppose we have nums1 size = 1000 and nums2 size = 1, then if you push bigger array then your space complexity is greater than if you push the nums2 element in the hashmap."
                    },
                    {
                        "username": "vinaykumar7686",
                        "content": "Is there anyone who can answer all the follow up questions?"
                    }
                ]
            },
            {
                "id": 1574060,
                "content": [
                    {
                        "username": "vishalhemnani",
                        "content": "> What if elements of nums2 are stored on disk, and the memory is\\n> limited such that you cannot load all elements into the memory at\\n> once?\\n\\n- If only nums2 cannot fit in memory, put all elements of nums1 into a HashMap, read chunks of array that fit into the memory, and record the intersections.\\n\\n- If both nums1 and nums2 are so huge that neither fit into the memory, sort them individually (external sort), then read 2 elements from each array at a time in memory, record intersections."
                    },
                    {
                        "username": "cde282306",
                        "content": " ans=[]\\n        i,j=0,0\\n        while j<len(nums1) or i<len(nums2):\\n            print(i,j)\\n            if nums1[j]!=nums2[i]:\\n                if i<len(nums2):\\n                    i+=1\\n                \\n            elif nums1[j]==nums2[i]:\\n                ans.append(nums1[x])\\n                i=0\\n                if j<len(nums1):\\n                    j+=1\\n                \\n        return ans\\n\\ncould you please explain to me why my where my list index out of the range\\n"
                    },
                    {
                        "username": "stong2351",
                        "content": "I still don\\'t quite under the question. Can someone give me more examples? I don\\'t want to look at the answers."
                    },
                    {
                        "username": "mahi2208",
                        "content": "A little too late for this reply but for future strugglers:\\nThe easiest way to describe intersection is \"common elements\" between the two lists. \\ne.g.  nums1 = [1,2,3,4,5] \\n        nums2 = [2,3,4,6,8,9]\\n        intersection = [2,3,4]\\n\\n        nums1 = [2,2,3,3,5] \\n        nums2 = [2,3,4,3,2,9]\\n        intersection = [2,2,3,3] OR [2,3,2,3] OR [3,3,2,2] and so on. (order does \\n        not matter in this question as long as all the required elements are there)\\n\\n        nums1 = [1,2,2,1] \\n        nums2 = [2]\\n        intersection = [2] (the only common element is 2 here since its only present 1 time in nums2. If nums2 was [2,2] then result would be [2,2])\\n\\nI hope this helps!\\n  "
                    },
                    {
                        "username": "karankumar560k",
                        "content": "for getting a preview of the intersection you can search for the weinn diagram of the intersection basically we have to find the common points between the array"
                    },
                    {
                        "username": "user4279q",
                        "content": "Basically it actually means that the intersection elements of the arrays should appear the minimum of the amounts of times the element appears in both arrays. For example [2,3,3] and [2,2,3]. Then the answer would be [2,3]. Because in arr1 there aren\\'t 2 \"2\"s so it appears once(min(2, 1)). Same goes for the \\'3\\'. I know this Is late but just in case somebody didn\\'t understand the question :)"
                    },
                    {
                        "username": "candypuff1216",
                        "content": "What does \"Each element in the result should appear as many times as it shows in both arrays.\" mean, exactly?\\n\\nDoes it mean that in arrays `[4, 9, 5]` and `[9, 4, 9, 8, 4]` that the numbers `[4, 9]` appear at least once in both arrays?\\n\\nAdditionally, \"the result can be in any order.\" Does that mean that even in a list like `[5, 4, 6, 7, 8]` and `[5, 6, 9, 10, 0]` that the output can be `[5, 6]` or `[6, 5]`?\\n\\nI feel kinda dumb for asking this but I\\'m trying really hard to solve this myself before I approach the answers."
                    },
                    {
                        "username": "gayatrisoni",
                        "content": "yes, the order does not matter. So you can print array in any order [5, 6] or [6, 5]."
                    },
                    {
                        "username": "hiumair",
                        "content": "Is it just me, who tried to solve it with the intersection with exact order... \\nSomething like, find common substring between two strings.\\nI was wondering how come its an easy problem!!\\n\\nif order is not mandatory, its just finding common elements.\\n\\n**Update:** err while typing, I remembered the defination of finding union vs intersections between sets!! studied like 16 years ago :( \\nStill leaving this comment for clarity of someone else. \\n\\n*any ideas how to avoid such misunderstanding in interview. *"
                    },
                    {
                        "username": "ilya-pro",
                        "content": "I\\'m also tried to solve with keeping order... (( And also thought like \"why it\\'s an easy problem?\". Also I\\'ve been used a binary search with greedy modification (if intersection of one item was found). Too much for such simple task. I think, that additional example will be good for clarified"
                    },
                    {
                        "username": "deezyto",
                        "content": "1) Find out which array has a shorter length\\n2) Record each of its digits as a key in the map as number => count\\n3) Iterate over the larger array and check whether its number is contained in the map\\nIf the number is contained in the map, reduce count to number\\nby 1, if count after reduction = 0, remove the number from the map\\nWe add the found number to the result array"
                    },
                    {
                        "username": "aniket_b",
                        "content": "The question is easy than what it seems from description and sample example test case. i suggest to add one more test case example something like below:\\nnums1: [1,2,3,4]\\nnums2: [3,5,4,]\\nExpected answer : [3,4]\\nThis would help people understand it number need not be contiguous in any of the array\\'s"
                    },
                    {
                        "username": "Philno",
                        "content": "I know in the Set thoery `intersection` means the common elements, but given the examples in description, I thought it was to find the common subarray. Until I modified Example 2, `nums2 = [9,4,9,8,4]`, to `nums2 = [9,4,8,9,4]` and realized it gave the same output."
                    },
                    {
                        "username": "itmakesh31",
                        "content": "The question would have been much clear if it would have been like \"Find common elements between 2 arrays\"."
                    },
                    {
                        "username": "IlyaChernikov",
                        "content": "Yes, the description is vague and I\\'ve reported it"
                    },
                    {
                        "username": "jgabriel98",
                        "content": "for the input:\\n[1,2,2,1]\\n[2,2,2]\\n\\nthe obvious output would be [2,2] (or am i getting the question wrong?)\\n\\nbut the leetcode Judge says that the expected output is [2,2,2]:\\n![image](https://assets.leetcode.com/users/jgabriel98/image_1587535028.png)\\n\\n\\nthis make me question what is the criteria for intersection definition, in this question"
                    },
                    {
                        "username": "Aniketprajapati",
                        "content": "your vector is empty see the expected answer its {2,2} only\\n"
                    },
                    {
                        "username": "Coder0622",
                        "content": "On bottom right box, the expected answer is [2, 2]."
                    },
                    {
                        "username": "starfoe",
                        "content": "As suggested by solution1, if two arrays are of diff size, we should build the map for the smaller one.\\nI don\\'t quite understand the reason. \\n\\nSay `Array a` has `m` elements and `Array b` has `n` elements. Lets suppose that we are going to build a map for `a` and iterate over `b`. The complexity of building the map is `O(m)`, and iterating over `b` will cost `O(n)`. Because the cost of looking up in a dict is always `O(1)`, the total complexity is `O(m) + O(n)*1`\\n\\nIf we build the map for `b`, the total complexity is `O(n) + O(m)*1`, which is the sum of the cost of building the map for `b` and iteration over `a`. \\n\\nI didn\\'t see any difference in the two costs above. So I was a bit confused why we prefer to build the map for the smaller one and iterate over the larger one. Do I miss something like details in the underlying implementation or some other consideration off my radar?"
                    },
                    {
                        "username": "pathak_1511",
                        "content": "Because we can save space if we only push smaller array into the map.\\nExample for worst case scenario, suppose we have nums1 size = 1000 and nums2 size = 1, then if you push bigger array then your space complexity is greater than if you push the nums2 element in the hashmap."
                    },
                    {
                        "username": "vinaykumar7686",
                        "content": "Is there anyone who can answer all the follow up questions?"
                    }
                ]
            },
            {
                "id": 1569376,
                "content": [
                    {
                        "username": "Oaixoul",
                        "content": "Maybe try partitioning the smaller sized array and load each partition into separate maps (if there is still not enough memory of loading multiple such maps) - say we have mapA, mapB and mapC available on disk, and now our program knows that we have a list of maps that records the items from the smaller sized array.\\n\\nNow let\\'s read the larger sized array by chunks and keep checking/updating entries from our pre-recorded maps - apparently we will terminate the check whenever we checked all our maps, or we found an entry that indicates the occurrence(s) of the target value.\\n\\nFurthermore, if we have, say a thousand of millions such maps (lol really!?), we can even deleting maps or merging maps as we reduce the sizes of the entries of the pre-recorded maps, in order to reduce the workload done in a single check process.\\n\\nEven more, if we have some insights of the bounds of the items from a single array (not necessarily both, but one), we can construct our query maps in a bucket manner to record this bounded array, so that doing binary search on the target map to search for an occurrence from another array is possibly faster."
                    },
                    {
                        "username": "helloearth",
                        "content": "\\tnew_array = []\\n\\tfor i in l1:\\n\\t\\tif i in l2:\\n\\t\\t\\tnew_array.append(i)\\n\\t\\t\\tl2.remove(i)\\n\\treturn new_array"
                    },
                    {
                        "username": "JellyDG",
                        "content": "Sometimes the return type is really like a pain in ass.\\n\\nSo, what the best way you think."
                    },
                    {
                        "username": "_Epsilon",
                        "content": "What should be the answers to the follow up questions??\\n\\n1 . What if the given array is already sorted? How would you optimize your algorithm?\\n* Two pointer approach to move in respective array while checking for equality.\\n\\n2. What if nums1\\'s size is small compared to nums2\\'s size? Which algorithm is better?\\n* Dictionary of elements present in num1 will be the used as a frequency table or hashtable to optimize the space\\n\\n3. What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?\\n* Cache map again ?? or maybe sliding window ??i dont know for this one ..\\nHelp here"
                    },
                    {
                        "username": "vivekky57",
                        "content": "What if nums1\\'s size is small compared to nums2\\'s size? Which algorithm is better?\\ncan any tell me which algo is better?"
                    },
                    {
                        "username": "JAshMe",
                        "content": "I think creating a hash map for num1 and then iterating over num2 to find the common elements would be a better algorithm, since the space complexity would be very less."
                    },
                    {
                        "username": "ronaldabellano",
                        "content": "I don\\'t know how tell if there is a big difference or there is something there because for what I tested I traverse through the array and break once a match is found."
                    },
                    {
                        "username": "Wang1993",
                        "content": "The follow up question \"What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?\"\\n\\nDoes anybody have any thought about it? I once took this question during the interview. I answered really bad so I hope to know if there is any good solution. Thanks!"
                    },
                    {
                        "username": "chenymcan",
                        "content": "return list((collections.Counter(nums1) & collections.Counter(nums2)).elements())"
                    },
                    {
                        "username": "dixitk13",
                        "content": "A bit confused to find this question under binary search, when it deals more with arrays and how you can find the intersection of \"simple arrays\". "
                    },
                    {
                        "username": "yingdi",
                        "content": "Anyone has good answer for follow up question? Thanks"
                    }
                ]
            },
            {
                "id": 1572049,
                "content": [
                    {
                        "username": "Oaixoul",
                        "content": "Maybe try partitioning the smaller sized array and load each partition into separate maps (if there is still not enough memory of loading multiple such maps) - say we have mapA, mapB and mapC available on disk, and now our program knows that we have a list of maps that records the items from the smaller sized array.\\n\\nNow let\\'s read the larger sized array by chunks and keep checking/updating entries from our pre-recorded maps - apparently we will terminate the check whenever we checked all our maps, or we found an entry that indicates the occurrence(s) of the target value.\\n\\nFurthermore, if we have, say a thousand of millions such maps (lol really!?), we can even deleting maps or merging maps as we reduce the sizes of the entries of the pre-recorded maps, in order to reduce the workload done in a single check process.\\n\\nEven more, if we have some insights of the bounds of the items from a single array (not necessarily both, but one), we can construct our query maps in a bucket manner to record this bounded array, so that doing binary search on the target map to search for an occurrence from another array is possibly faster."
                    },
                    {
                        "username": "helloearth",
                        "content": "\\tnew_array = []\\n\\tfor i in l1:\\n\\t\\tif i in l2:\\n\\t\\t\\tnew_array.append(i)\\n\\t\\t\\tl2.remove(i)\\n\\treturn new_array"
                    },
                    {
                        "username": "JellyDG",
                        "content": "Sometimes the return type is really like a pain in ass.\\n\\nSo, what the best way you think."
                    },
                    {
                        "username": "_Epsilon",
                        "content": "What should be the answers to the follow up questions??\\n\\n1 . What if the given array is already sorted? How would you optimize your algorithm?\\n* Two pointer approach to move in respective array while checking for equality.\\n\\n2. What if nums1\\'s size is small compared to nums2\\'s size? Which algorithm is better?\\n* Dictionary of elements present in num1 will be the used as a frequency table or hashtable to optimize the space\\n\\n3. What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?\\n* Cache map again ?? or maybe sliding window ??i dont know for this one ..\\nHelp here"
                    },
                    {
                        "username": "vivekky57",
                        "content": "What if nums1\\'s size is small compared to nums2\\'s size? Which algorithm is better?\\ncan any tell me which algo is better?"
                    },
                    {
                        "username": "JAshMe",
                        "content": "I think creating a hash map for num1 and then iterating over num2 to find the common elements would be a better algorithm, since the space complexity would be very less."
                    },
                    {
                        "username": "ronaldabellano",
                        "content": "I don\\'t know how tell if there is a big difference or there is something there because for what I tested I traverse through the array and break once a match is found."
                    },
                    {
                        "username": "Wang1993",
                        "content": "The follow up question \"What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?\"\\n\\nDoes anybody have any thought about it? I once took this question during the interview. I answered really bad so I hope to know if there is any good solution. Thanks!"
                    },
                    {
                        "username": "chenymcan",
                        "content": "return list((collections.Counter(nums1) & collections.Counter(nums2)).elements())"
                    },
                    {
                        "username": "dixitk13",
                        "content": "A bit confused to find this question under binary search, when it deals more with arrays and how you can find the intersection of \"simple arrays\". "
                    },
                    {
                        "username": "yingdi",
                        "content": "Anyone has good answer for follow up question? Thanks"
                    }
                ]
            },
            {
                "id": 1571623,
                "content": [
                    {
                        "username": "Oaixoul",
                        "content": "Maybe try partitioning the smaller sized array and load each partition into separate maps (if there is still not enough memory of loading multiple such maps) - say we have mapA, mapB and mapC available on disk, and now our program knows that we have a list of maps that records the items from the smaller sized array.\\n\\nNow let\\'s read the larger sized array by chunks and keep checking/updating entries from our pre-recorded maps - apparently we will terminate the check whenever we checked all our maps, or we found an entry that indicates the occurrence(s) of the target value.\\n\\nFurthermore, if we have, say a thousand of millions such maps (lol really!?), we can even deleting maps or merging maps as we reduce the sizes of the entries of the pre-recorded maps, in order to reduce the workload done in a single check process.\\n\\nEven more, if we have some insights of the bounds of the items from a single array (not necessarily both, but one), we can construct our query maps in a bucket manner to record this bounded array, so that doing binary search on the target map to search for an occurrence from another array is possibly faster."
                    },
                    {
                        "username": "helloearth",
                        "content": "\\tnew_array = []\\n\\tfor i in l1:\\n\\t\\tif i in l2:\\n\\t\\t\\tnew_array.append(i)\\n\\t\\t\\tl2.remove(i)\\n\\treturn new_array"
                    },
                    {
                        "username": "JellyDG",
                        "content": "Sometimes the return type is really like a pain in ass.\\n\\nSo, what the best way you think."
                    },
                    {
                        "username": "_Epsilon",
                        "content": "What should be the answers to the follow up questions??\\n\\n1 . What if the given array is already sorted? How would you optimize your algorithm?\\n* Two pointer approach to move in respective array while checking for equality.\\n\\n2. What if nums1\\'s size is small compared to nums2\\'s size? Which algorithm is better?\\n* Dictionary of elements present in num1 will be the used as a frequency table or hashtable to optimize the space\\n\\n3. What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?\\n* Cache map again ?? or maybe sliding window ??i dont know for this one ..\\nHelp here"
                    },
                    {
                        "username": "vivekky57",
                        "content": "What if nums1\\'s size is small compared to nums2\\'s size? Which algorithm is better?\\ncan any tell me which algo is better?"
                    },
                    {
                        "username": "JAshMe",
                        "content": "I think creating a hash map for num1 and then iterating over num2 to find the common elements would be a better algorithm, since the space complexity would be very less."
                    },
                    {
                        "username": "ronaldabellano",
                        "content": "I don\\'t know how tell if there is a big difference or there is something there because for what I tested I traverse through the array and break once a match is found."
                    },
                    {
                        "username": "Wang1993",
                        "content": "The follow up question \"What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?\"\\n\\nDoes anybody have any thought about it? I once took this question during the interview. I answered really bad so I hope to know if there is any good solution. Thanks!"
                    },
                    {
                        "username": "chenymcan",
                        "content": "return list((collections.Counter(nums1) & collections.Counter(nums2)).elements())"
                    },
                    {
                        "username": "dixitk13",
                        "content": "A bit confused to find this question under binary search, when it deals more with arrays and how you can find the intersection of \"simple arrays\". "
                    },
                    {
                        "username": "yingdi",
                        "content": "Anyone has good answer for follow up question? Thanks"
                    }
                ]
            },
            {
                "id": 1866301,
                "content": [
                    {
                        "username": "Oaixoul",
                        "content": "Maybe try partitioning the smaller sized array and load each partition into separate maps (if there is still not enough memory of loading multiple such maps) - say we have mapA, mapB and mapC available on disk, and now our program knows that we have a list of maps that records the items from the smaller sized array.\\n\\nNow let\\'s read the larger sized array by chunks and keep checking/updating entries from our pre-recorded maps - apparently we will terminate the check whenever we checked all our maps, or we found an entry that indicates the occurrence(s) of the target value.\\n\\nFurthermore, if we have, say a thousand of millions such maps (lol really!?), we can even deleting maps or merging maps as we reduce the sizes of the entries of the pre-recorded maps, in order to reduce the workload done in a single check process.\\n\\nEven more, if we have some insights of the bounds of the items from a single array (not necessarily both, but one), we can construct our query maps in a bucket manner to record this bounded array, so that doing binary search on the target map to search for an occurrence from another array is possibly faster."
                    },
                    {
                        "username": "helloearth",
                        "content": "\\tnew_array = []\\n\\tfor i in l1:\\n\\t\\tif i in l2:\\n\\t\\t\\tnew_array.append(i)\\n\\t\\t\\tl2.remove(i)\\n\\treturn new_array"
                    },
                    {
                        "username": "JellyDG",
                        "content": "Sometimes the return type is really like a pain in ass.\\n\\nSo, what the best way you think."
                    },
                    {
                        "username": "_Epsilon",
                        "content": "What should be the answers to the follow up questions??\\n\\n1 . What if the given array is already sorted? How would you optimize your algorithm?\\n* Two pointer approach to move in respective array while checking for equality.\\n\\n2. What if nums1\\'s size is small compared to nums2\\'s size? Which algorithm is better?\\n* Dictionary of elements present in num1 will be the used as a frequency table or hashtable to optimize the space\\n\\n3. What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?\\n* Cache map again ?? or maybe sliding window ??i dont know for this one ..\\nHelp here"
                    },
                    {
                        "username": "vivekky57",
                        "content": "What if nums1\\'s size is small compared to nums2\\'s size? Which algorithm is better?\\ncan any tell me which algo is better?"
                    },
                    {
                        "username": "JAshMe",
                        "content": "I think creating a hash map for num1 and then iterating over num2 to find the common elements would be a better algorithm, since the space complexity would be very less."
                    },
                    {
                        "username": "ronaldabellano",
                        "content": "I don\\'t know how tell if there is a big difference or there is something there because for what I tested I traverse through the array and break once a match is found."
                    },
                    {
                        "username": "Wang1993",
                        "content": "The follow up question \"What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?\"\\n\\nDoes anybody have any thought about it? I once took this question during the interview. I answered really bad so I hope to know if there is any good solution. Thanks!"
                    },
                    {
                        "username": "chenymcan",
                        "content": "return list((collections.Counter(nums1) & collections.Counter(nums2)).elements())"
                    },
                    {
                        "username": "dixitk13",
                        "content": "A bit confused to find this question under binary search, when it deals more with arrays and how you can find the intersection of \"simple arrays\". "
                    },
                    {
                        "username": "yingdi",
                        "content": "Anyone has good answer for follow up question? Thanks"
                    }
                ]
            },
            {
                "id": 1714151,
                "content": [
                    {
                        "username": "Oaixoul",
                        "content": "Maybe try partitioning the smaller sized array and load each partition into separate maps (if there is still not enough memory of loading multiple such maps) - say we have mapA, mapB and mapC available on disk, and now our program knows that we have a list of maps that records the items from the smaller sized array.\\n\\nNow let\\'s read the larger sized array by chunks and keep checking/updating entries from our pre-recorded maps - apparently we will terminate the check whenever we checked all our maps, or we found an entry that indicates the occurrence(s) of the target value.\\n\\nFurthermore, if we have, say a thousand of millions such maps (lol really!?), we can even deleting maps or merging maps as we reduce the sizes of the entries of the pre-recorded maps, in order to reduce the workload done in a single check process.\\n\\nEven more, if we have some insights of the bounds of the items from a single array (not necessarily both, but one), we can construct our query maps in a bucket manner to record this bounded array, so that doing binary search on the target map to search for an occurrence from another array is possibly faster."
                    },
                    {
                        "username": "helloearth",
                        "content": "\\tnew_array = []\\n\\tfor i in l1:\\n\\t\\tif i in l2:\\n\\t\\t\\tnew_array.append(i)\\n\\t\\t\\tl2.remove(i)\\n\\treturn new_array"
                    },
                    {
                        "username": "JellyDG",
                        "content": "Sometimes the return type is really like a pain in ass.\\n\\nSo, what the best way you think."
                    },
                    {
                        "username": "_Epsilon",
                        "content": "What should be the answers to the follow up questions??\\n\\n1 . What if the given array is already sorted? How would you optimize your algorithm?\\n* Two pointer approach to move in respective array while checking for equality.\\n\\n2. What if nums1\\'s size is small compared to nums2\\'s size? Which algorithm is better?\\n* Dictionary of elements present in num1 will be the used as a frequency table or hashtable to optimize the space\\n\\n3. What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?\\n* Cache map again ?? or maybe sliding window ??i dont know for this one ..\\nHelp here"
                    },
                    {
                        "username": "vivekky57",
                        "content": "What if nums1\\'s size is small compared to nums2\\'s size? Which algorithm is better?\\ncan any tell me which algo is better?"
                    },
                    {
                        "username": "JAshMe",
                        "content": "I think creating a hash map for num1 and then iterating over num2 to find the common elements would be a better algorithm, since the space complexity would be very less."
                    },
                    {
                        "username": "ronaldabellano",
                        "content": "I don\\'t know how tell if there is a big difference or there is something there because for what I tested I traverse through the array and break once a match is found."
                    },
                    {
                        "username": "Wang1993",
                        "content": "The follow up question \"What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?\"\\n\\nDoes anybody have any thought about it? I once took this question during the interview. I answered really bad so I hope to know if there is any good solution. Thanks!"
                    },
                    {
                        "username": "chenymcan",
                        "content": "return list((collections.Counter(nums1) & collections.Counter(nums2)).elements())"
                    },
                    {
                        "username": "dixitk13",
                        "content": "A bit confused to find this question under binary search, when it deals more with arrays and how you can find the intersection of \"simple arrays\". "
                    },
                    {
                        "username": "yingdi",
                        "content": "Anyone has good answer for follow up question? Thanks"
                    }
                ]
            },
            {
                "id": 1572670,
                "content": [
                    {
                        "username": "Oaixoul",
                        "content": "Maybe try partitioning the smaller sized array and load each partition into separate maps (if there is still not enough memory of loading multiple such maps) - say we have mapA, mapB and mapC available on disk, and now our program knows that we have a list of maps that records the items from the smaller sized array.\\n\\nNow let\\'s read the larger sized array by chunks and keep checking/updating entries from our pre-recorded maps - apparently we will terminate the check whenever we checked all our maps, or we found an entry that indicates the occurrence(s) of the target value.\\n\\nFurthermore, if we have, say a thousand of millions such maps (lol really!?), we can even deleting maps or merging maps as we reduce the sizes of the entries of the pre-recorded maps, in order to reduce the workload done in a single check process.\\n\\nEven more, if we have some insights of the bounds of the items from a single array (not necessarily both, but one), we can construct our query maps in a bucket manner to record this bounded array, so that doing binary search on the target map to search for an occurrence from another array is possibly faster."
                    },
                    {
                        "username": "helloearth",
                        "content": "\\tnew_array = []\\n\\tfor i in l1:\\n\\t\\tif i in l2:\\n\\t\\t\\tnew_array.append(i)\\n\\t\\t\\tl2.remove(i)\\n\\treturn new_array"
                    },
                    {
                        "username": "JellyDG",
                        "content": "Sometimes the return type is really like a pain in ass.\\n\\nSo, what the best way you think."
                    },
                    {
                        "username": "_Epsilon",
                        "content": "What should be the answers to the follow up questions??\\n\\n1 . What if the given array is already sorted? How would you optimize your algorithm?\\n* Two pointer approach to move in respective array while checking for equality.\\n\\n2. What if nums1\\'s size is small compared to nums2\\'s size? Which algorithm is better?\\n* Dictionary of elements present in num1 will be the used as a frequency table or hashtable to optimize the space\\n\\n3. What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?\\n* Cache map again ?? or maybe sliding window ??i dont know for this one ..\\nHelp here"
                    },
                    {
                        "username": "vivekky57",
                        "content": "What if nums1\\'s size is small compared to nums2\\'s size? Which algorithm is better?\\ncan any tell me which algo is better?"
                    },
                    {
                        "username": "JAshMe",
                        "content": "I think creating a hash map for num1 and then iterating over num2 to find the common elements would be a better algorithm, since the space complexity would be very less."
                    },
                    {
                        "username": "ronaldabellano",
                        "content": "I don\\'t know how tell if there is a big difference or there is something there because for what I tested I traverse through the array and break once a match is found."
                    },
                    {
                        "username": "Wang1993",
                        "content": "The follow up question \"What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?\"\\n\\nDoes anybody have any thought about it? I once took this question during the interview. I answered really bad so I hope to know if there is any good solution. Thanks!"
                    },
                    {
                        "username": "chenymcan",
                        "content": "return list((collections.Counter(nums1) & collections.Counter(nums2)).elements())"
                    },
                    {
                        "username": "dixitk13",
                        "content": "A bit confused to find this question under binary search, when it deals more with arrays and how you can find the intersection of \"simple arrays\". "
                    },
                    {
                        "username": "yingdi",
                        "content": "Anyone has good answer for follow up question? Thanks"
                    }
                ]
            },
            {
                "id": 1572442,
                "content": [
                    {
                        "username": "Oaixoul",
                        "content": "Maybe try partitioning the smaller sized array and load each partition into separate maps (if there is still not enough memory of loading multiple such maps) - say we have mapA, mapB and mapC available on disk, and now our program knows that we have a list of maps that records the items from the smaller sized array.\\n\\nNow let\\'s read the larger sized array by chunks and keep checking/updating entries from our pre-recorded maps - apparently we will terminate the check whenever we checked all our maps, or we found an entry that indicates the occurrence(s) of the target value.\\n\\nFurthermore, if we have, say a thousand of millions such maps (lol really!?), we can even deleting maps or merging maps as we reduce the sizes of the entries of the pre-recorded maps, in order to reduce the workload done in a single check process.\\n\\nEven more, if we have some insights of the bounds of the items from a single array (not necessarily both, but one), we can construct our query maps in a bucket manner to record this bounded array, so that doing binary search on the target map to search for an occurrence from another array is possibly faster."
                    },
                    {
                        "username": "helloearth",
                        "content": "\\tnew_array = []\\n\\tfor i in l1:\\n\\t\\tif i in l2:\\n\\t\\t\\tnew_array.append(i)\\n\\t\\t\\tl2.remove(i)\\n\\treturn new_array"
                    },
                    {
                        "username": "JellyDG",
                        "content": "Sometimes the return type is really like a pain in ass.\\n\\nSo, what the best way you think."
                    },
                    {
                        "username": "_Epsilon",
                        "content": "What should be the answers to the follow up questions??\\n\\n1 . What if the given array is already sorted? How would you optimize your algorithm?\\n* Two pointer approach to move in respective array while checking for equality.\\n\\n2. What if nums1\\'s size is small compared to nums2\\'s size? Which algorithm is better?\\n* Dictionary of elements present in num1 will be the used as a frequency table or hashtable to optimize the space\\n\\n3. What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?\\n* Cache map again ?? or maybe sliding window ??i dont know for this one ..\\nHelp here"
                    },
                    {
                        "username": "vivekky57",
                        "content": "What if nums1\\'s size is small compared to nums2\\'s size? Which algorithm is better?\\ncan any tell me which algo is better?"
                    },
                    {
                        "username": "JAshMe",
                        "content": "I think creating a hash map for num1 and then iterating over num2 to find the common elements would be a better algorithm, since the space complexity would be very less."
                    },
                    {
                        "username": "ronaldabellano",
                        "content": "I don\\'t know how tell if there is a big difference or there is something there because for what I tested I traverse through the array and break once a match is found."
                    },
                    {
                        "username": "Wang1993",
                        "content": "The follow up question \"What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?\"\\n\\nDoes anybody have any thought about it? I once took this question during the interview. I answered really bad so I hope to know if there is any good solution. Thanks!"
                    },
                    {
                        "username": "chenymcan",
                        "content": "return list((collections.Counter(nums1) & collections.Counter(nums2)).elements())"
                    },
                    {
                        "username": "dixitk13",
                        "content": "A bit confused to find this question under binary search, when it deals more with arrays and how you can find the intersection of \"simple arrays\". "
                    },
                    {
                        "username": "yingdi",
                        "content": "Anyone has good answer for follow up question? Thanks"
                    }
                ]
            },
            {
                "id": 1572261,
                "content": [
                    {
                        "username": "Oaixoul",
                        "content": "Maybe try partitioning the smaller sized array and load each partition into separate maps (if there is still not enough memory of loading multiple such maps) - say we have mapA, mapB and mapC available on disk, and now our program knows that we have a list of maps that records the items from the smaller sized array.\\n\\nNow let\\'s read the larger sized array by chunks and keep checking/updating entries from our pre-recorded maps - apparently we will terminate the check whenever we checked all our maps, or we found an entry that indicates the occurrence(s) of the target value.\\n\\nFurthermore, if we have, say a thousand of millions such maps (lol really!?), we can even deleting maps or merging maps as we reduce the sizes of the entries of the pre-recorded maps, in order to reduce the workload done in a single check process.\\n\\nEven more, if we have some insights of the bounds of the items from a single array (not necessarily both, but one), we can construct our query maps in a bucket manner to record this bounded array, so that doing binary search on the target map to search for an occurrence from another array is possibly faster."
                    },
                    {
                        "username": "helloearth",
                        "content": "\\tnew_array = []\\n\\tfor i in l1:\\n\\t\\tif i in l2:\\n\\t\\t\\tnew_array.append(i)\\n\\t\\t\\tl2.remove(i)\\n\\treturn new_array"
                    },
                    {
                        "username": "JellyDG",
                        "content": "Sometimes the return type is really like a pain in ass.\\n\\nSo, what the best way you think."
                    },
                    {
                        "username": "_Epsilon",
                        "content": "What should be the answers to the follow up questions??\\n\\n1 . What if the given array is already sorted? How would you optimize your algorithm?\\n* Two pointer approach to move in respective array while checking for equality.\\n\\n2. What if nums1\\'s size is small compared to nums2\\'s size? Which algorithm is better?\\n* Dictionary of elements present in num1 will be the used as a frequency table or hashtable to optimize the space\\n\\n3. What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?\\n* Cache map again ?? or maybe sliding window ??i dont know for this one ..\\nHelp here"
                    },
                    {
                        "username": "vivekky57",
                        "content": "What if nums1\\'s size is small compared to nums2\\'s size? Which algorithm is better?\\ncan any tell me which algo is better?"
                    },
                    {
                        "username": "JAshMe",
                        "content": "I think creating a hash map for num1 and then iterating over num2 to find the common elements would be a better algorithm, since the space complexity would be very less."
                    },
                    {
                        "username": "ronaldabellano",
                        "content": "I don\\'t know how tell if there is a big difference or there is something there because for what I tested I traverse through the array and break once a match is found."
                    },
                    {
                        "username": "Wang1993",
                        "content": "The follow up question \"What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?\"\\n\\nDoes anybody have any thought about it? I once took this question during the interview. I answered really bad so I hope to know if there is any good solution. Thanks!"
                    },
                    {
                        "username": "chenymcan",
                        "content": "return list((collections.Counter(nums1) & collections.Counter(nums2)).elements())"
                    },
                    {
                        "username": "dixitk13",
                        "content": "A bit confused to find this question under binary search, when it deals more with arrays and how you can find the intersection of \"simple arrays\". "
                    },
                    {
                        "username": "yingdi",
                        "content": "Anyone has good answer for follow up question? Thanks"
                    }
                ]
            },
            {
                "id": 1571948,
                "content": [
                    {
                        "username": "Oaixoul",
                        "content": "Maybe try partitioning the smaller sized array and load each partition into separate maps (if there is still not enough memory of loading multiple such maps) - say we have mapA, mapB and mapC available on disk, and now our program knows that we have a list of maps that records the items from the smaller sized array.\\n\\nNow let\\'s read the larger sized array by chunks and keep checking/updating entries from our pre-recorded maps - apparently we will terminate the check whenever we checked all our maps, or we found an entry that indicates the occurrence(s) of the target value.\\n\\nFurthermore, if we have, say a thousand of millions such maps (lol really!?), we can even deleting maps or merging maps as we reduce the sizes of the entries of the pre-recorded maps, in order to reduce the workload done in a single check process.\\n\\nEven more, if we have some insights of the bounds of the items from a single array (not necessarily both, but one), we can construct our query maps in a bucket manner to record this bounded array, so that doing binary search on the target map to search for an occurrence from another array is possibly faster."
                    },
                    {
                        "username": "helloearth",
                        "content": "\\tnew_array = []\\n\\tfor i in l1:\\n\\t\\tif i in l2:\\n\\t\\t\\tnew_array.append(i)\\n\\t\\t\\tl2.remove(i)\\n\\treturn new_array"
                    },
                    {
                        "username": "JellyDG",
                        "content": "Sometimes the return type is really like a pain in ass.\\n\\nSo, what the best way you think."
                    },
                    {
                        "username": "_Epsilon",
                        "content": "What should be the answers to the follow up questions??\\n\\n1 . What if the given array is already sorted? How would you optimize your algorithm?\\n* Two pointer approach to move in respective array while checking for equality.\\n\\n2. What if nums1\\'s size is small compared to nums2\\'s size? Which algorithm is better?\\n* Dictionary of elements present in num1 will be the used as a frequency table or hashtable to optimize the space\\n\\n3. What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?\\n* Cache map again ?? or maybe sliding window ??i dont know for this one ..\\nHelp here"
                    },
                    {
                        "username": "vivekky57",
                        "content": "What if nums1\\'s size is small compared to nums2\\'s size? Which algorithm is better?\\ncan any tell me which algo is better?"
                    },
                    {
                        "username": "JAshMe",
                        "content": "I think creating a hash map for num1 and then iterating over num2 to find the common elements would be a better algorithm, since the space complexity would be very less."
                    },
                    {
                        "username": "ronaldabellano",
                        "content": "I don\\'t know how tell if there is a big difference or there is something there because for what I tested I traverse through the array and break once a match is found."
                    },
                    {
                        "username": "Wang1993",
                        "content": "The follow up question \"What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?\"\\n\\nDoes anybody have any thought about it? I once took this question during the interview. I answered really bad so I hope to know if there is any good solution. Thanks!"
                    },
                    {
                        "username": "chenymcan",
                        "content": "return list((collections.Counter(nums1) & collections.Counter(nums2)).elements())"
                    },
                    {
                        "username": "dixitk13",
                        "content": "A bit confused to find this question under binary search, when it deals more with arrays and how you can find the intersection of \"simple arrays\". "
                    },
                    {
                        "username": "yingdi",
                        "content": "Anyone has good answer for follow up question? Thanks"
                    }
                ]
            },
            {
                "id": 1571934,
                "content": [
                    {
                        "username": "Oaixoul",
                        "content": "Maybe try partitioning the smaller sized array and load each partition into separate maps (if there is still not enough memory of loading multiple such maps) - say we have mapA, mapB and mapC available on disk, and now our program knows that we have a list of maps that records the items from the smaller sized array.\\n\\nNow let\\'s read the larger sized array by chunks and keep checking/updating entries from our pre-recorded maps - apparently we will terminate the check whenever we checked all our maps, or we found an entry that indicates the occurrence(s) of the target value.\\n\\nFurthermore, if we have, say a thousand of millions such maps (lol really!?), we can even deleting maps or merging maps as we reduce the sizes of the entries of the pre-recorded maps, in order to reduce the workload done in a single check process.\\n\\nEven more, if we have some insights of the bounds of the items from a single array (not necessarily both, but one), we can construct our query maps in a bucket manner to record this bounded array, so that doing binary search on the target map to search for an occurrence from another array is possibly faster."
                    },
                    {
                        "username": "helloearth",
                        "content": "\\tnew_array = []\\n\\tfor i in l1:\\n\\t\\tif i in l2:\\n\\t\\t\\tnew_array.append(i)\\n\\t\\t\\tl2.remove(i)\\n\\treturn new_array"
                    },
                    {
                        "username": "JellyDG",
                        "content": "Sometimes the return type is really like a pain in ass.\\n\\nSo, what the best way you think."
                    },
                    {
                        "username": "_Epsilon",
                        "content": "What should be the answers to the follow up questions??\\n\\n1 . What if the given array is already sorted? How would you optimize your algorithm?\\n* Two pointer approach to move in respective array while checking for equality.\\n\\n2. What if nums1\\'s size is small compared to nums2\\'s size? Which algorithm is better?\\n* Dictionary of elements present in num1 will be the used as a frequency table or hashtable to optimize the space\\n\\n3. What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?\\n* Cache map again ?? or maybe sliding window ??i dont know for this one ..\\nHelp here"
                    },
                    {
                        "username": "vivekky57",
                        "content": "What if nums1\\'s size is small compared to nums2\\'s size? Which algorithm is better?\\ncan any tell me which algo is better?"
                    },
                    {
                        "username": "JAshMe",
                        "content": "I think creating a hash map for num1 and then iterating over num2 to find the common elements would be a better algorithm, since the space complexity would be very less."
                    },
                    {
                        "username": "ronaldabellano",
                        "content": "I don\\'t know how tell if there is a big difference or there is something there because for what I tested I traverse through the array and break once a match is found."
                    },
                    {
                        "username": "Wang1993",
                        "content": "The follow up question \"What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?\"\\n\\nDoes anybody have any thought about it? I once took this question during the interview. I answered really bad so I hope to know if there is any good solution. Thanks!"
                    },
                    {
                        "username": "chenymcan",
                        "content": "return list((collections.Counter(nums1) & collections.Counter(nums2)).elements())"
                    },
                    {
                        "username": "dixitk13",
                        "content": "A bit confused to find this question under binary search, when it deals more with arrays and how you can find the intersection of \"simple arrays\". "
                    },
                    {
                        "username": "yingdi",
                        "content": "Anyone has good answer for follow up question? Thanks"
                    }
                ]
            },
            {
                "id": 2020414,
                "content": [
                    {
                        "username": "Nitya100",
                        "content": "Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]\\nOutput: [4,9]\\n\\nBut as per question it should [4,4,9,9] right?"
                    },
                    {
                        "username": "Undefeated22",
                        "content": "e\\n"
                    },
                    {
                        "username": "newvaruntanwar",
                        "content": "The \"intersection\" here doesn\\'t mean that we have to find the largest common subarray in the two arrays.\\nIt means that we have to find all the common elements in two arrays."
                    },
                    {
                        "username": "AKSHAY_GOLE",
                        "content": "Hi all,\\n\\nI have written this code and I have not good understanding of time complexity. Can anyone please explain the time complexity of this code? \\nI think its O(n), because we are using a for loop.\\n\\n    def intersection(self, nums1, nums2):\\n        dict_nums1 = Counter(nums1)\\n        dict_nums2 = Counter(nums2)\\n\\n        result = []\\n\\n        for i in dict_nums2:\\n            if dict_nums1.get(i, 0):\\n                if dict_nums1[i] >= dict_nums2[i]:\\n                    result = result + ([i] * dict_nums2[i])\\n                else:\\n                    result = result + ([i] * dict_nums1[i])\\n\\n        return result"
                    },
                    {
                        "username": "aimzz2704",
                        "content": "Why is this under Binary Search??\\n"
                    },
                    {
                        "username": "ukarianapphbdts",
                        "content": "I used unordered set originally, but realized I cannot use if (set.count()==1) then result.push_back(...) because set.count() could equal to some integer that is greater than 1, so I started to use unordered map, but it seems like I'm having error when I use map.contains(), can someone help me spot where it went wrong?\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\n        vector<int> result;\n        int l1 = nums1.size();\n        int i;\n        int j;\n        if (l1 <= l2) {\n            unordered_map<int,int> map;\n            unordered_set<int> set(nums1.begin(), nums1.end()); // set = nums1\n            for (int index = 0; index < l2; index ++) {\n                j = nums2[index];\n                if (map.contains(j)) {\n                    result.push_back(j);\n                    set.erase(j);\n                }\n            }\n        } else { // l2 <l1\n            unordered_set<int>set (nums2.begin(), nums2.end());\n            for (int index = 0; index < l1; index ++) {\n                i = nums1[index];\n                if (map.contains(i)) { \n                    result.push_back(i);\n                    set.erase(i);\n                }\n            }\n        }\n    return result;\n    }   "
                    },
                    {
                        "username": "aguirre_roman",
                        "content": "Problem too hard to be easy."
                    },
                    {
                        "username": "WE_VIBING",
                        "content": "For anyone wondering in the future, they defined \"intersection\" as elements that appear in nums1 and nums2, regardless of their order. "
                    },
                    {
                        "username": "MeloWang0308",
                        "content": "The given examples are misleading. \\nFor example we have [1,2,1,2] as nums1, [2,2] as nums3.\\n\\nBased on the examples we will think that the expected result should be [2], but actually the expected result is [2, 2]"
                    },
                    {
                        "username": "astha23sinha",
                        "content": "Unable to submit solution. Is anyone facing similar issue? When I am running my solution,it shows accepted but when I am submitting it,it shows wrong answer."
                    }
                ]
            },
            {
                "id": 1981911,
                "content": [
                    {
                        "username": "Nitya100",
                        "content": "Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]\\nOutput: [4,9]\\n\\nBut as per question it should [4,4,9,9] right?"
                    },
                    {
                        "username": "Undefeated22",
                        "content": "e\\n"
                    },
                    {
                        "username": "newvaruntanwar",
                        "content": "The \"intersection\" here doesn\\'t mean that we have to find the largest common subarray in the two arrays.\\nIt means that we have to find all the common elements in two arrays."
                    },
                    {
                        "username": "AKSHAY_GOLE",
                        "content": "Hi all,\\n\\nI have written this code and I have not good understanding of time complexity. Can anyone please explain the time complexity of this code? \\nI think its O(n), because we are using a for loop.\\n\\n    def intersection(self, nums1, nums2):\\n        dict_nums1 = Counter(nums1)\\n        dict_nums2 = Counter(nums2)\\n\\n        result = []\\n\\n        for i in dict_nums2:\\n            if dict_nums1.get(i, 0):\\n                if dict_nums1[i] >= dict_nums2[i]:\\n                    result = result + ([i] * dict_nums2[i])\\n                else:\\n                    result = result + ([i] * dict_nums1[i])\\n\\n        return result"
                    },
                    {
                        "username": "aimzz2704",
                        "content": "Why is this under Binary Search??\\n"
                    },
                    {
                        "username": "ukarianapphbdts",
                        "content": "I used unordered set originally, but realized I cannot use if (set.count()==1) then result.push_back(...) because set.count() could equal to some integer that is greater than 1, so I started to use unordered map, but it seems like I'm having error when I use map.contains(), can someone help me spot where it went wrong?\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\n        vector<int> result;\n        int l1 = nums1.size();\n        int i;\n        int j;\n        if (l1 <= l2) {\n            unordered_map<int,int> map;\n            unordered_set<int> set(nums1.begin(), nums1.end()); // set = nums1\n            for (int index = 0; index < l2; index ++) {\n                j = nums2[index];\n                if (map.contains(j)) {\n                    result.push_back(j);\n                    set.erase(j);\n                }\n            }\n        } else { // l2 <l1\n            unordered_set<int>set (nums2.begin(), nums2.end());\n            for (int index = 0; index < l1; index ++) {\n                i = nums1[index];\n                if (map.contains(i)) { \n                    result.push_back(i);\n                    set.erase(i);\n                }\n            }\n        }\n    return result;\n    }   "
                    },
                    {
                        "username": "aguirre_roman",
                        "content": "Problem too hard to be easy."
                    },
                    {
                        "username": "WE_VIBING",
                        "content": "For anyone wondering in the future, they defined \"intersection\" as elements that appear in nums1 and nums2, regardless of their order. "
                    },
                    {
                        "username": "MeloWang0308",
                        "content": "The given examples are misleading. \\nFor example we have [1,2,1,2] as nums1, [2,2] as nums3.\\n\\nBased on the examples we will think that the expected result should be [2], but actually the expected result is [2, 2]"
                    },
                    {
                        "username": "astha23sinha",
                        "content": "Unable to submit solution. Is anyone facing similar issue? When I am running my solution,it shows accepted but when I am submitting it,it shows wrong answer."
                    }
                ]
            },
            {
                "id": 1950205,
                "content": [
                    {
                        "username": "Nitya100",
                        "content": "Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]\\nOutput: [4,9]\\n\\nBut as per question it should [4,4,9,9] right?"
                    },
                    {
                        "username": "Undefeated22",
                        "content": "e\\n"
                    },
                    {
                        "username": "newvaruntanwar",
                        "content": "The \"intersection\" here doesn\\'t mean that we have to find the largest common subarray in the two arrays.\\nIt means that we have to find all the common elements in two arrays."
                    },
                    {
                        "username": "AKSHAY_GOLE",
                        "content": "Hi all,\\n\\nI have written this code and I have not good understanding of time complexity. Can anyone please explain the time complexity of this code? \\nI think its O(n), because we are using a for loop.\\n\\n    def intersection(self, nums1, nums2):\\n        dict_nums1 = Counter(nums1)\\n        dict_nums2 = Counter(nums2)\\n\\n        result = []\\n\\n        for i in dict_nums2:\\n            if dict_nums1.get(i, 0):\\n                if dict_nums1[i] >= dict_nums2[i]:\\n                    result = result + ([i] * dict_nums2[i])\\n                else:\\n                    result = result + ([i] * dict_nums1[i])\\n\\n        return result"
                    },
                    {
                        "username": "aimzz2704",
                        "content": "Why is this under Binary Search??\\n"
                    },
                    {
                        "username": "ukarianapphbdts",
                        "content": "I used unordered set originally, but realized I cannot use if (set.count()==1) then result.push_back(...) because set.count() could equal to some integer that is greater than 1, so I started to use unordered map, but it seems like I'm having error when I use map.contains(), can someone help me spot where it went wrong?\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\n        vector<int> result;\n        int l1 = nums1.size();\n        int i;\n        int j;\n        if (l1 <= l2) {\n            unordered_map<int,int> map;\n            unordered_set<int> set(nums1.begin(), nums1.end()); // set = nums1\n            for (int index = 0; index < l2; index ++) {\n                j = nums2[index];\n                if (map.contains(j)) {\n                    result.push_back(j);\n                    set.erase(j);\n                }\n            }\n        } else { // l2 <l1\n            unordered_set<int>set (nums2.begin(), nums2.end());\n            for (int index = 0; index < l1; index ++) {\n                i = nums1[index];\n                if (map.contains(i)) { \n                    result.push_back(i);\n                    set.erase(i);\n                }\n            }\n        }\n    return result;\n    }   "
                    },
                    {
                        "username": "aguirre_roman",
                        "content": "Problem too hard to be easy."
                    },
                    {
                        "username": "WE_VIBING",
                        "content": "For anyone wondering in the future, they defined \"intersection\" as elements that appear in nums1 and nums2, regardless of their order. "
                    },
                    {
                        "username": "MeloWang0308",
                        "content": "The given examples are misleading. \\nFor example we have [1,2,1,2] as nums1, [2,2] as nums3.\\n\\nBased on the examples we will think that the expected result should be [2], but actually the expected result is [2, 2]"
                    },
                    {
                        "username": "astha23sinha",
                        "content": "Unable to submit solution. Is anyone facing similar issue? When I am running my solution,it shows accepted but when I am submitting it,it shows wrong answer."
                    }
                ]
            },
            {
                "id": 1939208,
                "content": [
                    {
                        "username": "Nitya100",
                        "content": "Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]\\nOutput: [4,9]\\n\\nBut as per question it should [4,4,9,9] right?"
                    },
                    {
                        "username": "Undefeated22",
                        "content": "e\\n"
                    },
                    {
                        "username": "newvaruntanwar",
                        "content": "The \"intersection\" here doesn\\'t mean that we have to find the largest common subarray in the two arrays.\\nIt means that we have to find all the common elements in two arrays."
                    },
                    {
                        "username": "AKSHAY_GOLE",
                        "content": "Hi all,\\n\\nI have written this code and I have not good understanding of time complexity. Can anyone please explain the time complexity of this code? \\nI think its O(n), because we are using a for loop.\\n\\n    def intersection(self, nums1, nums2):\\n        dict_nums1 = Counter(nums1)\\n        dict_nums2 = Counter(nums2)\\n\\n        result = []\\n\\n        for i in dict_nums2:\\n            if dict_nums1.get(i, 0):\\n                if dict_nums1[i] >= dict_nums2[i]:\\n                    result = result + ([i] * dict_nums2[i])\\n                else:\\n                    result = result + ([i] * dict_nums1[i])\\n\\n        return result"
                    },
                    {
                        "username": "aimzz2704",
                        "content": "Why is this under Binary Search??\\n"
                    },
                    {
                        "username": "ukarianapphbdts",
                        "content": "I used unordered set originally, but realized I cannot use if (set.count()==1) then result.push_back(...) because set.count() could equal to some integer that is greater than 1, so I started to use unordered map, but it seems like I'm having error when I use map.contains(), can someone help me spot where it went wrong?\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\n        vector<int> result;\n        int l1 = nums1.size();\n        int i;\n        int j;\n        if (l1 <= l2) {\n            unordered_map<int,int> map;\n            unordered_set<int> set(nums1.begin(), nums1.end()); // set = nums1\n            for (int index = 0; index < l2; index ++) {\n                j = nums2[index];\n                if (map.contains(j)) {\n                    result.push_back(j);\n                    set.erase(j);\n                }\n            }\n        } else { // l2 <l1\n            unordered_set<int>set (nums2.begin(), nums2.end());\n            for (int index = 0; index < l1; index ++) {\n                i = nums1[index];\n                if (map.contains(i)) { \n                    result.push_back(i);\n                    set.erase(i);\n                }\n            }\n        }\n    return result;\n    }   "
                    },
                    {
                        "username": "aguirre_roman",
                        "content": "Problem too hard to be easy."
                    },
                    {
                        "username": "WE_VIBING",
                        "content": "For anyone wondering in the future, they defined \"intersection\" as elements that appear in nums1 and nums2, regardless of their order. "
                    },
                    {
                        "username": "MeloWang0308",
                        "content": "The given examples are misleading. \\nFor example we have [1,2,1,2] as nums1, [2,2] as nums3.\\n\\nBased on the examples we will think that the expected result should be [2], but actually the expected result is [2, 2]"
                    },
                    {
                        "username": "astha23sinha",
                        "content": "Unable to submit solution. Is anyone facing similar issue? When I am running my solution,it shows accepted but when I am submitting it,it shows wrong answer."
                    }
                ]
            },
            {
                "id": 1916558,
                "content": [
                    {
                        "username": "Nitya100",
                        "content": "Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]\\nOutput: [4,9]\\n\\nBut as per question it should [4,4,9,9] right?"
                    },
                    {
                        "username": "Undefeated22",
                        "content": "e\\n"
                    },
                    {
                        "username": "newvaruntanwar",
                        "content": "The \"intersection\" here doesn\\'t mean that we have to find the largest common subarray in the two arrays.\\nIt means that we have to find all the common elements in two arrays."
                    },
                    {
                        "username": "AKSHAY_GOLE",
                        "content": "Hi all,\\n\\nI have written this code and I have not good understanding of time complexity. Can anyone please explain the time complexity of this code? \\nI think its O(n), because we are using a for loop.\\n\\n    def intersection(self, nums1, nums2):\\n        dict_nums1 = Counter(nums1)\\n        dict_nums2 = Counter(nums2)\\n\\n        result = []\\n\\n        for i in dict_nums2:\\n            if dict_nums1.get(i, 0):\\n                if dict_nums1[i] >= dict_nums2[i]:\\n                    result = result + ([i] * dict_nums2[i])\\n                else:\\n                    result = result + ([i] * dict_nums1[i])\\n\\n        return result"
                    },
                    {
                        "username": "aimzz2704",
                        "content": "Why is this under Binary Search??\\n"
                    },
                    {
                        "username": "ukarianapphbdts",
                        "content": "I used unordered set originally, but realized I cannot use if (set.count()==1) then result.push_back(...) because set.count() could equal to some integer that is greater than 1, so I started to use unordered map, but it seems like I'm having error when I use map.contains(), can someone help me spot where it went wrong?\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\n        vector<int> result;\n        int l1 = nums1.size();\n        int i;\n        int j;\n        if (l1 <= l2) {\n            unordered_map<int,int> map;\n            unordered_set<int> set(nums1.begin(), nums1.end()); // set = nums1\n            for (int index = 0; index < l2; index ++) {\n                j = nums2[index];\n                if (map.contains(j)) {\n                    result.push_back(j);\n                    set.erase(j);\n                }\n            }\n        } else { // l2 <l1\n            unordered_set<int>set (nums2.begin(), nums2.end());\n            for (int index = 0; index < l1; index ++) {\n                i = nums1[index];\n                if (map.contains(i)) { \n                    result.push_back(i);\n                    set.erase(i);\n                }\n            }\n        }\n    return result;\n    }   "
                    },
                    {
                        "username": "aguirre_roman",
                        "content": "Problem too hard to be easy."
                    },
                    {
                        "username": "WE_VIBING",
                        "content": "For anyone wondering in the future, they defined \"intersection\" as elements that appear in nums1 and nums2, regardless of their order. "
                    },
                    {
                        "username": "MeloWang0308",
                        "content": "The given examples are misleading. \\nFor example we have [1,2,1,2] as nums1, [2,2] as nums3.\\n\\nBased on the examples we will think that the expected result should be [2], but actually the expected result is [2, 2]"
                    },
                    {
                        "username": "astha23sinha",
                        "content": "Unable to submit solution. Is anyone facing similar issue? When I am running my solution,it shows accepted but when I am submitting it,it shows wrong answer."
                    }
                ]
            },
            {
                "id": 1905609,
                "content": [
                    {
                        "username": "Nitya100",
                        "content": "Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]\\nOutput: [4,9]\\n\\nBut as per question it should [4,4,9,9] right?"
                    },
                    {
                        "username": "Undefeated22",
                        "content": "e\\n"
                    },
                    {
                        "username": "newvaruntanwar",
                        "content": "The \"intersection\" here doesn\\'t mean that we have to find the largest common subarray in the two arrays.\\nIt means that we have to find all the common elements in two arrays."
                    },
                    {
                        "username": "AKSHAY_GOLE",
                        "content": "Hi all,\\n\\nI have written this code and I have not good understanding of time complexity. Can anyone please explain the time complexity of this code? \\nI think its O(n), because we are using a for loop.\\n\\n    def intersection(self, nums1, nums2):\\n        dict_nums1 = Counter(nums1)\\n        dict_nums2 = Counter(nums2)\\n\\n        result = []\\n\\n        for i in dict_nums2:\\n            if dict_nums1.get(i, 0):\\n                if dict_nums1[i] >= dict_nums2[i]:\\n                    result = result + ([i] * dict_nums2[i])\\n                else:\\n                    result = result + ([i] * dict_nums1[i])\\n\\n        return result"
                    },
                    {
                        "username": "aimzz2704",
                        "content": "Why is this under Binary Search??\\n"
                    },
                    {
                        "username": "ukarianapphbdts",
                        "content": "I used unordered set originally, but realized I cannot use if (set.count()==1) then result.push_back(...) because set.count() could equal to some integer that is greater than 1, so I started to use unordered map, but it seems like I'm having error when I use map.contains(), can someone help me spot where it went wrong?\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\n        vector<int> result;\n        int l1 = nums1.size();\n        int i;\n        int j;\n        if (l1 <= l2) {\n            unordered_map<int,int> map;\n            unordered_set<int> set(nums1.begin(), nums1.end()); // set = nums1\n            for (int index = 0; index < l2; index ++) {\n                j = nums2[index];\n                if (map.contains(j)) {\n                    result.push_back(j);\n                    set.erase(j);\n                }\n            }\n        } else { // l2 <l1\n            unordered_set<int>set (nums2.begin(), nums2.end());\n            for (int index = 0; index < l1; index ++) {\n                i = nums1[index];\n                if (map.contains(i)) { \n                    result.push_back(i);\n                    set.erase(i);\n                }\n            }\n        }\n    return result;\n    }   "
                    },
                    {
                        "username": "aguirre_roman",
                        "content": "Problem too hard to be easy."
                    },
                    {
                        "username": "WE_VIBING",
                        "content": "For anyone wondering in the future, they defined \"intersection\" as elements that appear in nums1 and nums2, regardless of their order. "
                    },
                    {
                        "username": "MeloWang0308",
                        "content": "The given examples are misleading. \\nFor example we have [1,2,1,2] as nums1, [2,2] as nums3.\\n\\nBased on the examples we will think that the expected result should be [2], but actually the expected result is [2, 2]"
                    },
                    {
                        "username": "astha23sinha",
                        "content": "Unable to submit solution. Is anyone facing similar issue? When I am running my solution,it shows accepted but when I am submitting it,it shows wrong answer."
                    }
                ]
            },
            {
                "id": 1838931,
                "content": [
                    {
                        "username": "Nitya100",
                        "content": "Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]\\nOutput: [4,9]\\n\\nBut as per question it should [4,4,9,9] right?"
                    },
                    {
                        "username": "Undefeated22",
                        "content": "e\\n"
                    },
                    {
                        "username": "newvaruntanwar",
                        "content": "The \"intersection\" here doesn\\'t mean that we have to find the largest common subarray in the two arrays.\\nIt means that we have to find all the common elements in two arrays."
                    },
                    {
                        "username": "AKSHAY_GOLE",
                        "content": "Hi all,\\n\\nI have written this code and I have not good understanding of time complexity. Can anyone please explain the time complexity of this code? \\nI think its O(n), because we are using a for loop.\\n\\n    def intersection(self, nums1, nums2):\\n        dict_nums1 = Counter(nums1)\\n        dict_nums2 = Counter(nums2)\\n\\n        result = []\\n\\n        for i in dict_nums2:\\n            if dict_nums1.get(i, 0):\\n                if dict_nums1[i] >= dict_nums2[i]:\\n                    result = result + ([i] * dict_nums2[i])\\n                else:\\n                    result = result + ([i] * dict_nums1[i])\\n\\n        return result"
                    },
                    {
                        "username": "aimzz2704",
                        "content": "Why is this under Binary Search??\\n"
                    },
                    {
                        "username": "ukarianapphbdts",
                        "content": "I used unordered set originally, but realized I cannot use if (set.count()==1) then result.push_back(...) because set.count() could equal to some integer that is greater than 1, so I started to use unordered map, but it seems like I'm having error when I use map.contains(), can someone help me spot where it went wrong?\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\n        vector<int> result;\n        int l1 = nums1.size();\n        int i;\n        int j;\n        if (l1 <= l2) {\n            unordered_map<int,int> map;\n            unordered_set<int> set(nums1.begin(), nums1.end()); // set = nums1\n            for (int index = 0; index < l2; index ++) {\n                j = nums2[index];\n                if (map.contains(j)) {\n                    result.push_back(j);\n                    set.erase(j);\n                }\n            }\n        } else { // l2 <l1\n            unordered_set<int>set (nums2.begin(), nums2.end());\n            for (int index = 0; index < l1; index ++) {\n                i = nums1[index];\n                if (map.contains(i)) { \n                    result.push_back(i);\n                    set.erase(i);\n                }\n            }\n        }\n    return result;\n    }   "
                    },
                    {
                        "username": "aguirre_roman",
                        "content": "Problem too hard to be easy."
                    },
                    {
                        "username": "WE_VIBING",
                        "content": "For anyone wondering in the future, they defined \"intersection\" as elements that appear in nums1 and nums2, regardless of their order. "
                    },
                    {
                        "username": "MeloWang0308",
                        "content": "The given examples are misleading. \\nFor example we have [1,2,1,2] as nums1, [2,2] as nums3.\\n\\nBased on the examples we will think that the expected result should be [2], but actually the expected result is [2, 2]"
                    },
                    {
                        "username": "astha23sinha",
                        "content": "Unable to submit solution. Is anyone facing similar issue? When I am running my solution,it shows accepted but when I am submitting it,it shows wrong answer."
                    }
                ]
            },
            {
                "id": 1834466,
                "content": [
                    {
                        "username": "Nitya100",
                        "content": "Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]\\nOutput: [4,9]\\n\\nBut as per question it should [4,4,9,9] right?"
                    },
                    {
                        "username": "Undefeated22",
                        "content": "e\\n"
                    },
                    {
                        "username": "newvaruntanwar",
                        "content": "The \"intersection\" here doesn\\'t mean that we have to find the largest common subarray in the two arrays.\\nIt means that we have to find all the common elements in two arrays."
                    },
                    {
                        "username": "AKSHAY_GOLE",
                        "content": "Hi all,\\n\\nI have written this code and I have not good understanding of time complexity. Can anyone please explain the time complexity of this code? \\nI think its O(n), because we are using a for loop.\\n\\n    def intersection(self, nums1, nums2):\\n        dict_nums1 = Counter(nums1)\\n        dict_nums2 = Counter(nums2)\\n\\n        result = []\\n\\n        for i in dict_nums2:\\n            if dict_nums1.get(i, 0):\\n                if dict_nums1[i] >= dict_nums2[i]:\\n                    result = result + ([i] * dict_nums2[i])\\n                else:\\n                    result = result + ([i] * dict_nums1[i])\\n\\n        return result"
                    },
                    {
                        "username": "aimzz2704",
                        "content": "Why is this under Binary Search??\\n"
                    },
                    {
                        "username": "ukarianapphbdts",
                        "content": "I used unordered set originally, but realized I cannot use if (set.count()==1) then result.push_back(...) because set.count() could equal to some integer that is greater than 1, so I started to use unordered map, but it seems like I'm having error when I use map.contains(), can someone help me spot where it went wrong?\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\n        vector<int> result;\n        int l1 = nums1.size();\n        int i;\n        int j;\n        if (l1 <= l2) {\n            unordered_map<int,int> map;\n            unordered_set<int> set(nums1.begin(), nums1.end()); // set = nums1\n            for (int index = 0; index < l2; index ++) {\n                j = nums2[index];\n                if (map.contains(j)) {\n                    result.push_back(j);\n                    set.erase(j);\n                }\n            }\n        } else { // l2 <l1\n            unordered_set<int>set (nums2.begin(), nums2.end());\n            for (int index = 0; index < l1; index ++) {\n                i = nums1[index];\n                if (map.contains(i)) { \n                    result.push_back(i);\n                    set.erase(i);\n                }\n            }\n        }\n    return result;\n    }   "
                    },
                    {
                        "username": "aguirre_roman",
                        "content": "Problem too hard to be easy."
                    },
                    {
                        "username": "WE_VIBING",
                        "content": "For anyone wondering in the future, they defined \"intersection\" as elements that appear in nums1 and nums2, regardless of their order. "
                    },
                    {
                        "username": "MeloWang0308",
                        "content": "The given examples are misleading. \\nFor example we have [1,2,1,2] as nums1, [2,2] as nums3.\\n\\nBased on the examples we will think that the expected result should be [2], but actually the expected result is [2, 2]"
                    },
                    {
                        "username": "astha23sinha",
                        "content": "Unable to submit solution. Is anyone facing similar issue? When I am running my solution,it shows accepted but when I am submitting it,it shows wrong answer."
                    }
                ]
            },
            {
                "id": 1823150,
                "content": [
                    {
                        "username": "Nitya100",
                        "content": "Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]\\nOutput: [4,9]\\n\\nBut as per question it should [4,4,9,9] right?"
                    },
                    {
                        "username": "Undefeated22",
                        "content": "e\\n"
                    },
                    {
                        "username": "newvaruntanwar",
                        "content": "The \"intersection\" here doesn\\'t mean that we have to find the largest common subarray in the two arrays.\\nIt means that we have to find all the common elements in two arrays."
                    },
                    {
                        "username": "AKSHAY_GOLE",
                        "content": "Hi all,\\n\\nI have written this code and I have not good understanding of time complexity. Can anyone please explain the time complexity of this code? \\nI think its O(n), because we are using a for loop.\\n\\n    def intersection(self, nums1, nums2):\\n        dict_nums1 = Counter(nums1)\\n        dict_nums2 = Counter(nums2)\\n\\n        result = []\\n\\n        for i in dict_nums2:\\n            if dict_nums1.get(i, 0):\\n                if dict_nums1[i] >= dict_nums2[i]:\\n                    result = result + ([i] * dict_nums2[i])\\n                else:\\n                    result = result + ([i] * dict_nums1[i])\\n\\n        return result"
                    },
                    {
                        "username": "aimzz2704",
                        "content": "Why is this under Binary Search??\\n"
                    },
                    {
                        "username": "ukarianapphbdts",
                        "content": "I used unordered set originally, but realized I cannot use if (set.count()==1) then result.push_back(...) because set.count() could equal to some integer that is greater than 1, so I started to use unordered map, but it seems like I'm having error when I use map.contains(), can someone help me spot where it went wrong?\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\n        vector<int> result;\n        int l1 = nums1.size();\n        int i;\n        int j;\n        if (l1 <= l2) {\n            unordered_map<int,int> map;\n            unordered_set<int> set(nums1.begin(), nums1.end()); // set = nums1\n            for (int index = 0; index < l2; index ++) {\n                j = nums2[index];\n                if (map.contains(j)) {\n                    result.push_back(j);\n                    set.erase(j);\n                }\n            }\n        } else { // l2 <l1\n            unordered_set<int>set (nums2.begin(), nums2.end());\n            for (int index = 0; index < l1; index ++) {\n                i = nums1[index];\n                if (map.contains(i)) { \n                    result.push_back(i);\n                    set.erase(i);\n                }\n            }\n        }\n    return result;\n    }   "
                    },
                    {
                        "username": "aguirre_roman",
                        "content": "Problem too hard to be easy."
                    },
                    {
                        "username": "WE_VIBING",
                        "content": "For anyone wondering in the future, they defined \"intersection\" as elements that appear in nums1 and nums2, regardless of their order. "
                    },
                    {
                        "username": "MeloWang0308",
                        "content": "The given examples are misleading. \\nFor example we have [1,2,1,2] as nums1, [2,2] as nums3.\\n\\nBased on the examples we will think that the expected result should be [2], but actually the expected result is [2, 2]"
                    },
                    {
                        "username": "astha23sinha",
                        "content": "Unable to submit solution. Is anyone facing similar issue? When I am running my solution,it shows accepted but when I am submitting it,it shows wrong answer."
                    }
                ]
            },
            {
                "id": 1818124,
                "content": [
                    {
                        "username": "Nitya100",
                        "content": "Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]\\nOutput: [4,9]\\n\\nBut as per question it should [4,4,9,9] right?"
                    },
                    {
                        "username": "Undefeated22",
                        "content": "e\\n"
                    },
                    {
                        "username": "newvaruntanwar",
                        "content": "The \"intersection\" here doesn\\'t mean that we have to find the largest common subarray in the two arrays.\\nIt means that we have to find all the common elements in two arrays."
                    },
                    {
                        "username": "AKSHAY_GOLE",
                        "content": "Hi all,\\n\\nI have written this code and I have not good understanding of time complexity. Can anyone please explain the time complexity of this code? \\nI think its O(n), because we are using a for loop.\\n\\n    def intersection(self, nums1, nums2):\\n        dict_nums1 = Counter(nums1)\\n        dict_nums2 = Counter(nums2)\\n\\n        result = []\\n\\n        for i in dict_nums2:\\n            if dict_nums1.get(i, 0):\\n                if dict_nums1[i] >= dict_nums2[i]:\\n                    result = result + ([i] * dict_nums2[i])\\n                else:\\n                    result = result + ([i] * dict_nums1[i])\\n\\n        return result"
                    },
                    {
                        "username": "aimzz2704",
                        "content": "Why is this under Binary Search??\\n"
                    },
                    {
                        "username": "ukarianapphbdts",
                        "content": "I used unordered set originally, but realized I cannot use if (set.count()==1) then result.push_back(...) because set.count() could equal to some integer that is greater than 1, so I started to use unordered map, but it seems like I'm having error when I use map.contains(), can someone help me spot where it went wrong?\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\n        vector<int> result;\n        int l1 = nums1.size();\n        int i;\n        int j;\n        if (l1 <= l2) {\n            unordered_map<int,int> map;\n            unordered_set<int> set(nums1.begin(), nums1.end()); // set = nums1\n            for (int index = 0; index < l2; index ++) {\n                j = nums2[index];\n                if (map.contains(j)) {\n                    result.push_back(j);\n                    set.erase(j);\n                }\n            }\n        } else { // l2 <l1\n            unordered_set<int>set (nums2.begin(), nums2.end());\n            for (int index = 0; index < l1; index ++) {\n                i = nums1[index];\n                if (map.contains(i)) { \n                    result.push_back(i);\n                    set.erase(i);\n                }\n            }\n        }\n    return result;\n    }   "
                    },
                    {
                        "username": "aguirre_roman",
                        "content": "Problem too hard to be easy."
                    },
                    {
                        "username": "WE_VIBING",
                        "content": "For anyone wondering in the future, they defined \"intersection\" as elements that appear in nums1 and nums2, regardless of their order. "
                    },
                    {
                        "username": "MeloWang0308",
                        "content": "The given examples are misleading. \\nFor example we have [1,2,1,2] as nums1, [2,2] as nums3.\\n\\nBased on the examples we will think that the expected result should be [2], but actually the expected result is [2, 2]"
                    },
                    {
                        "username": "astha23sinha",
                        "content": "Unable to submit solution. Is anyone facing similar issue? When I am running my solution,it shows accepted but when I am submitting it,it shows wrong answer."
                    }
                ]
            },
            {
                "id": 1802280,
                "content": [
                    {
                        "username": "Gautampd73",
                        "content": "Why can\\'t we just use set and do Intersection using retainAll() ? "
                    },
                    {
                        "username": "rajxsv",
                        "content": "Check this Test Case :\\nnums1 =\\n[1,2,2,3,4,5,6,7]\\nnums2 =\\n[10,20,30,3,4,5,100,200,500,7]\\n\\nCurrect Output - [3,4,5,7] \\nwhy not - [3,4,5] ??\\n\\nAlthough intersection in general should mean exactly a sub array should be equal they don\\'t really define their definition of intersection in the problem statement."
                    },
                    {
                        "username": "Akash_3121",
                        "content": "In the Example 1 they given as\\nExample 1:\\n\\nInput: nums1 = [1,2,2,1], nums2 = [2,2]\\nOutput: [2,2]\\n\\nbut in one of the test case it is mentioned as :\\nInput\\nnums1 =\\n[1,2,2,1]\\nnums2 =\\n[2]\\nOutput\\n[2,2]\\nExpected\\n[2]\\n\\ncan someone explain please!!"
                    },
                    {
                        "username": "princeokeke",
                        "content": "i noticed the same thing just now \\nand honestly its really confusing\\n"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/61i-qpZSfyg"
                    },
                    {
                        "username": "Deepak_8811",
                        "content": "       sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        vector<int>ans;\\n        int n=nums1.size();\\n        int m=nums2.size();\\n        int i=0,j=0;\\n        while(i<n&&j<m){\\n            if(nums1[i]<nums2[j]){\\n                i++;\\n            }\\n            else if(nums1[i]>nums2[j]){\\n                j++;\\n            }\\n            else{\\n                ans.push_back(nums2[j]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        return ans;\\n"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "haldkar_shubham",
                        "content": "This is a python code with explanation, approach and algorithm. \\n\\nhttps://siteinvokers.com/the-intersection-of-two-arrays-ii-leet-code/"
                    },
                    {
                        "username": "csseifms",
                        "content": " `Arrays.sort(nums2);\n     for(int i:nums1){\n            int index = Arrays.binarySearch(nums2,i);\n            if(index >= 0 && index < nums2.length){\n                nums2[index] = -1;\n                output[szPointer++] = i;\n            }\n     }`\n\nWhat's wrong with my solution?!"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || Beats 100% || Easy to Understand.\\nhttps://leetcode.com/problems/intersection-of-two-arrays-ii/solutions/3001494/simple-java-beats-100-easy-to-understand/"
                    },
                    {
                        "username": "ashley-yuanyuan",
                        "content": "At best I was only able to come up with a 4ms solution using java hashmap, and expected O(m+n) runtime, m and n being the sizes of the two lists. Can anyone share with me how they\\'ve optimized their solution? Any help would be greatly appreciated"
                    }
                ]
            },
            {
                "id": 1792919,
                "content": [
                    {
                        "username": "Gautampd73",
                        "content": "Why can\\'t we just use set and do Intersection using retainAll() ? "
                    },
                    {
                        "username": "rajxsv",
                        "content": "Check this Test Case :\\nnums1 =\\n[1,2,2,3,4,5,6,7]\\nnums2 =\\n[10,20,30,3,4,5,100,200,500,7]\\n\\nCurrect Output - [3,4,5,7] \\nwhy not - [3,4,5] ??\\n\\nAlthough intersection in general should mean exactly a sub array should be equal they don\\'t really define their definition of intersection in the problem statement."
                    },
                    {
                        "username": "Akash_3121",
                        "content": "In the Example 1 they given as\\nExample 1:\\n\\nInput: nums1 = [1,2,2,1], nums2 = [2,2]\\nOutput: [2,2]\\n\\nbut in one of the test case it is mentioned as :\\nInput\\nnums1 =\\n[1,2,2,1]\\nnums2 =\\n[2]\\nOutput\\n[2,2]\\nExpected\\n[2]\\n\\ncan someone explain please!!"
                    },
                    {
                        "username": "princeokeke",
                        "content": "i noticed the same thing just now \\nand honestly its really confusing\\n"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/61i-qpZSfyg"
                    },
                    {
                        "username": "Deepak_8811",
                        "content": "       sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        vector<int>ans;\\n        int n=nums1.size();\\n        int m=nums2.size();\\n        int i=0,j=0;\\n        while(i<n&&j<m){\\n            if(nums1[i]<nums2[j]){\\n                i++;\\n            }\\n            else if(nums1[i]>nums2[j]){\\n                j++;\\n            }\\n            else{\\n                ans.push_back(nums2[j]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        return ans;\\n"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "haldkar_shubham",
                        "content": "This is a python code with explanation, approach and algorithm. \\n\\nhttps://siteinvokers.com/the-intersection-of-two-arrays-ii-leet-code/"
                    },
                    {
                        "username": "csseifms",
                        "content": " `Arrays.sort(nums2);\n     for(int i:nums1){\n            int index = Arrays.binarySearch(nums2,i);\n            if(index >= 0 && index < nums2.length){\n                nums2[index] = -1;\n                output[szPointer++] = i;\n            }\n     }`\n\nWhat's wrong with my solution?!"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || Beats 100% || Easy to Understand.\\nhttps://leetcode.com/problems/intersection-of-two-arrays-ii/solutions/3001494/simple-java-beats-100-easy-to-understand/"
                    },
                    {
                        "username": "ashley-yuanyuan",
                        "content": "At best I was only able to come up with a 4ms solution using java hashmap, and expected O(m+n) runtime, m and n being the sizes of the two lists. Can anyone share with me how they\\'ve optimized their solution? Any help would be greatly appreciated"
                    }
                ]
            },
            {
                "id": 1787123,
                "content": [
                    {
                        "username": "Gautampd73",
                        "content": "Why can\\'t we just use set and do Intersection using retainAll() ? "
                    },
                    {
                        "username": "rajxsv",
                        "content": "Check this Test Case :\\nnums1 =\\n[1,2,2,3,4,5,6,7]\\nnums2 =\\n[10,20,30,3,4,5,100,200,500,7]\\n\\nCurrect Output - [3,4,5,7] \\nwhy not - [3,4,5] ??\\n\\nAlthough intersection in general should mean exactly a sub array should be equal they don\\'t really define their definition of intersection in the problem statement."
                    },
                    {
                        "username": "Akash_3121",
                        "content": "In the Example 1 they given as\\nExample 1:\\n\\nInput: nums1 = [1,2,2,1], nums2 = [2,2]\\nOutput: [2,2]\\n\\nbut in one of the test case it is mentioned as :\\nInput\\nnums1 =\\n[1,2,2,1]\\nnums2 =\\n[2]\\nOutput\\n[2,2]\\nExpected\\n[2]\\n\\ncan someone explain please!!"
                    },
                    {
                        "username": "princeokeke",
                        "content": "i noticed the same thing just now \\nand honestly its really confusing\\n"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/61i-qpZSfyg"
                    },
                    {
                        "username": "Deepak_8811",
                        "content": "       sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        vector<int>ans;\\n        int n=nums1.size();\\n        int m=nums2.size();\\n        int i=0,j=0;\\n        while(i<n&&j<m){\\n            if(nums1[i]<nums2[j]){\\n                i++;\\n            }\\n            else if(nums1[i]>nums2[j]){\\n                j++;\\n            }\\n            else{\\n                ans.push_back(nums2[j]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        return ans;\\n"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "haldkar_shubham",
                        "content": "This is a python code with explanation, approach and algorithm. \\n\\nhttps://siteinvokers.com/the-intersection-of-two-arrays-ii-leet-code/"
                    },
                    {
                        "username": "csseifms",
                        "content": " `Arrays.sort(nums2);\n     for(int i:nums1){\n            int index = Arrays.binarySearch(nums2,i);\n            if(index >= 0 && index < nums2.length){\n                nums2[index] = -1;\n                output[szPointer++] = i;\n            }\n     }`\n\nWhat's wrong with my solution?!"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || Beats 100% || Easy to Understand.\\nhttps://leetcode.com/problems/intersection-of-two-arrays-ii/solutions/3001494/simple-java-beats-100-easy-to-understand/"
                    },
                    {
                        "username": "ashley-yuanyuan",
                        "content": "At best I was only able to come up with a 4ms solution using java hashmap, and expected O(m+n) runtime, m and n being the sizes of the two lists. Can anyone share with me how they\\'ve optimized their solution? Any help would be greatly appreciated"
                    }
                ]
            },
            {
                "id": 1769796,
                "content": [
                    {
                        "username": "Gautampd73",
                        "content": "Why can\\'t we just use set and do Intersection using retainAll() ? "
                    },
                    {
                        "username": "rajxsv",
                        "content": "Check this Test Case :\\nnums1 =\\n[1,2,2,3,4,5,6,7]\\nnums2 =\\n[10,20,30,3,4,5,100,200,500,7]\\n\\nCurrect Output - [3,4,5,7] \\nwhy not - [3,4,5] ??\\n\\nAlthough intersection in general should mean exactly a sub array should be equal they don\\'t really define their definition of intersection in the problem statement."
                    },
                    {
                        "username": "Akash_3121",
                        "content": "In the Example 1 they given as\\nExample 1:\\n\\nInput: nums1 = [1,2,2,1], nums2 = [2,2]\\nOutput: [2,2]\\n\\nbut in one of the test case it is mentioned as :\\nInput\\nnums1 =\\n[1,2,2,1]\\nnums2 =\\n[2]\\nOutput\\n[2,2]\\nExpected\\n[2]\\n\\ncan someone explain please!!"
                    },
                    {
                        "username": "princeokeke",
                        "content": "i noticed the same thing just now \\nand honestly its really confusing\\n"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/61i-qpZSfyg"
                    },
                    {
                        "username": "Deepak_8811",
                        "content": "       sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        vector<int>ans;\\n        int n=nums1.size();\\n        int m=nums2.size();\\n        int i=0,j=0;\\n        while(i<n&&j<m){\\n            if(nums1[i]<nums2[j]){\\n                i++;\\n            }\\n            else if(nums1[i]>nums2[j]){\\n                j++;\\n            }\\n            else{\\n                ans.push_back(nums2[j]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        return ans;\\n"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "haldkar_shubham",
                        "content": "This is a python code with explanation, approach and algorithm. \\n\\nhttps://siteinvokers.com/the-intersection-of-two-arrays-ii-leet-code/"
                    },
                    {
                        "username": "csseifms",
                        "content": " `Arrays.sort(nums2);\n     for(int i:nums1){\n            int index = Arrays.binarySearch(nums2,i);\n            if(index >= 0 && index < nums2.length){\n                nums2[index] = -1;\n                output[szPointer++] = i;\n            }\n     }`\n\nWhat's wrong with my solution?!"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || Beats 100% || Easy to Understand.\\nhttps://leetcode.com/problems/intersection-of-two-arrays-ii/solutions/3001494/simple-java-beats-100-easy-to-understand/"
                    },
                    {
                        "username": "ashley-yuanyuan",
                        "content": "At best I was only able to come up with a 4ms solution using java hashmap, and expected O(m+n) runtime, m and n being the sizes of the two lists. Can anyone share with me how they\\'ve optimized their solution? Any help would be greatly appreciated"
                    }
                ]
            },
            {
                "id": 1766841,
                "content": [
                    {
                        "username": "Gautampd73",
                        "content": "Why can\\'t we just use set and do Intersection using retainAll() ? "
                    },
                    {
                        "username": "rajxsv",
                        "content": "Check this Test Case :\\nnums1 =\\n[1,2,2,3,4,5,6,7]\\nnums2 =\\n[10,20,30,3,4,5,100,200,500,7]\\n\\nCurrect Output - [3,4,5,7] \\nwhy not - [3,4,5] ??\\n\\nAlthough intersection in general should mean exactly a sub array should be equal they don\\'t really define their definition of intersection in the problem statement."
                    },
                    {
                        "username": "Akash_3121",
                        "content": "In the Example 1 they given as\\nExample 1:\\n\\nInput: nums1 = [1,2,2,1], nums2 = [2,2]\\nOutput: [2,2]\\n\\nbut in one of the test case it is mentioned as :\\nInput\\nnums1 =\\n[1,2,2,1]\\nnums2 =\\n[2]\\nOutput\\n[2,2]\\nExpected\\n[2]\\n\\ncan someone explain please!!"
                    },
                    {
                        "username": "princeokeke",
                        "content": "i noticed the same thing just now \\nand honestly its really confusing\\n"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/61i-qpZSfyg"
                    },
                    {
                        "username": "Deepak_8811",
                        "content": "       sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        vector<int>ans;\\n        int n=nums1.size();\\n        int m=nums2.size();\\n        int i=0,j=0;\\n        while(i<n&&j<m){\\n            if(nums1[i]<nums2[j]){\\n                i++;\\n            }\\n            else if(nums1[i]>nums2[j]){\\n                j++;\\n            }\\n            else{\\n                ans.push_back(nums2[j]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        return ans;\\n"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "haldkar_shubham",
                        "content": "This is a python code with explanation, approach and algorithm. \\n\\nhttps://siteinvokers.com/the-intersection-of-two-arrays-ii-leet-code/"
                    },
                    {
                        "username": "csseifms",
                        "content": " `Arrays.sort(nums2);\n     for(int i:nums1){\n            int index = Arrays.binarySearch(nums2,i);\n            if(index >= 0 && index < nums2.length){\n                nums2[index] = -1;\n                output[szPointer++] = i;\n            }\n     }`\n\nWhat's wrong with my solution?!"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || Beats 100% || Easy to Understand.\\nhttps://leetcode.com/problems/intersection-of-two-arrays-ii/solutions/3001494/simple-java-beats-100-easy-to-understand/"
                    },
                    {
                        "username": "ashley-yuanyuan",
                        "content": "At best I was only able to come up with a 4ms solution using java hashmap, and expected O(m+n) runtime, m and n being the sizes of the two lists. Can anyone share with me how they\\'ve optimized their solution? Any help would be greatly appreciated"
                    }
                ]
            },
            {
                "id": 1759624,
                "content": [
                    {
                        "username": "Gautampd73",
                        "content": "Why can\\'t we just use set and do Intersection using retainAll() ? "
                    },
                    {
                        "username": "rajxsv",
                        "content": "Check this Test Case :\\nnums1 =\\n[1,2,2,3,4,5,6,7]\\nnums2 =\\n[10,20,30,3,4,5,100,200,500,7]\\n\\nCurrect Output - [3,4,5,7] \\nwhy not - [3,4,5] ??\\n\\nAlthough intersection in general should mean exactly a sub array should be equal they don\\'t really define their definition of intersection in the problem statement."
                    },
                    {
                        "username": "Akash_3121",
                        "content": "In the Example 1 they given as\\nExample 1:\\n\\nInput: nums1 = [1,2,2,1], nums2 = [2,2]\\nOutput: [2,2]\\n\\nbut in one of the test case it is mentioned as :\\nInput\\nnums1 =\\n[1,2,2,1]\\nnums2 =\\n[2]\\nOutput\\n[2,2]\\nExpected\\n[2]\\n\\ncan someone explain please!!"
                    },
                    {
                        "username": "princeokeke",
                        "content": "i noticed the same thing just now \\nand honestly its really confusing\\n"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/61i-qpZSfyg"
                    },
                    {
                        "username": "Deepak_8811",
                        "content": "       sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        vector<int>ans;\\n        int n=nums1.size();\\n        int m=nums2.size();\\n        int i=0,j=0;\\n        while(i<n&&j<m){\\n            if(nums1[i]<nums2[j]){\\n                i++;\\n            }\\n            else if(nums1[i]>nums2[j]){\\n                j++;\\n            }\\n            else{\\n                ans.push_back(nums2[j]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        return ans;\\n"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "haldkar_shubham",
                        "content": "This is a python code with explanation, approach and algorithm. \\n\\nhttps://siteinvokers.com/the-intersection-of-two-arrays-ii-leet-code/"
                    },
                    {
                        "username": "csseifms",
                        "content": " `Arrays.sort(nums2);\n     for(int i:nums1){\n            int index = Arrays.binarySearch(nums2,i);\n            if(index >= 0 && index < nums2.length){\n                nums2[index] = -1;\n                output[szPointer++] = i;\n            }\n     }`\n\nWhat's wrong with my solution?!"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || Beats 100% || Easy to Understand.\\nhttps://leetcode.com/problems/intersection-of-two-arrays-ii/solutions/3001494/simple-java-beats-100-easy-to-understand/"
                    },
                    {
                        "username": "ashley-yuanyuan",
                        "content": "At best I was only able to come up with a 4ms solution using java hashmap, and expected O(m+n) runtime, m and n being the sizes of the two lists. Can anyone share with me how they\\'ve optimized their solution? Any help would be greatly appreciated"
                    }
                ]
            },
            {
                "id": 1752689,
                "content": [
                    {
                        "username": "Gautampd73",
                        "content": "Why can\\'t we just use set and do Intersection using retainAll() ? "
                    },
                    {
                        "username": "rajxsv",
                        "content": "Check this Test Case :\\nnums1 =\\n[1,2,2,3,4,5,6,7]\\nnums2 =\\n[10,20,30,3,4,5,100,200,500,7]\\n\\nCurrect Output - [3,4,5,7] \\nwhy not - [3,4,5] ??\\n\\nAlthough intersection in general should mean exactly a sub array should be equal they don\\'t really define their definition of intersection in the problem statement."
                    },
                    {
                        "username": "Akash_3121",
                        "content": "In the Example 1 they given as\\nExample 1:\\n\\nInput: nums1 = [1,2,2,1], nums2 = [2,2]\\nOutput: [2,2]\\n\\nbut in one of the test case it is mentioned as :\\nInput\\nnums1 =\\n[1,2,2,1]\\nnums2 =\\n[2]\\nOutput\\n[2,2]\\nExpected\\n[2]\\n\\ncan someone explain please!!"
                    },
                    {
                        "username": "princeokeke",
                        "content": "i noticed the same thing just now \\nand honestly its really confusing\\n"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/61i-qpZSfyg"
                    },
                    {
                        "username": "Deepak_8811",
                        "content": "       sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        vector<int>ans;\\n        int n=nums1.size();\\n        int m=nums2.size();\\n        int i=0,j=0;\\n        while(i<n&&j<m){\\n            if(nums1[i]<nums2[j]){\\n                i++;\\n            }\\n            else if(nums1[i]>nums2[j]){\\n                j++;\\n            }\\n            else{\\n                ans.push_back(nums2[j]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        return ans;\\n"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "haldkar_shubham",
                        "content": "This is a python code with explanation, approach and algorithm. \\n\\nhttps://siteinvokers.com/the-intersection-of-two-arrays-ii-leet-code/"
                    },
                    {
                        "username": "csseifms",
                        "content": " `Arrays.sort(nums2);\n     for(int i:nums1){\n            int index = Arrays.binarySearch(nums2,i);\n            if(index >= 0 && index < nums2.length){\n                nums2[index] = -1;\n                output[szPointer++] = i;\n            }\n     }`\n\nWhat's wrong with my solution?!"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || Beats 100% || Easy to Understand.\\nhttps://leetcode.com/problems/intersection-of-two-arrays-ii/solutions/3001494/simple-java-beats-100-easy-to-understand/"
                    },
                    {
                        "username": "ashley-yuanyuan",
                        "content": "At best I was only able to come up with a 4ms solution using java hashmap, and expected O(m+n) runtime, m and n being the sizes of the two lists. Can anyone share with me how they\\'ve optimized their solution? Any help would be greatly appreciated"
                    }
                ]
            },
            {
                "id": 1748665,
                "content": [
                    {
                        "username": "Gautampd73",
                        "content": "Why can\\'t we just use set and do Intersection using retainAll() ? "
                    },
                    {
                        "username": "rajxsv",
                        "content": "Check this Test Case :\\nnums1 =\\n[1,2,2,3,4,5,6,7]\\nnums2 =\\n[10,20,30,3,4,5,100,200,500,7]\\n\\nCurrect Output - [3,4,5,7] \\nwhy not - [3,4,5] ??\\n\\nAlthough intersection in general should mean exactly a sub array should be equal they don\\'t really define their definition of intersection in the problem statement."
                    },
                    {
                        "username": "Akash_3121",
                        "content": "In the Example 1 they given as\\nExample 1:\\n\\nInput: nums1 = [1,2,2,1], nums2 = [2,2]\\nOutput: [2,2]\\n\\nbut in one of the test case it is mentioned as :\\nInput\\nnums1 =\\n[1,2,2,1]\\nnums2 =\\n[2]\\nOutput\\n[2,2]\\nExpected\\n[2]\\n\\ncan someone explain please!!"
                    },
                    {
                        "username": "princeokeke",
                        "content": "i noticed the same thing just now \\nand honestly its really confusing\\n"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/61i-qpZSfyg"
                    },
                    {
                        "username": "Deepak_8811",
                        "content": "       sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        vector<int>ans;\\n        int n=nums1.size();\\n        int m=nums2.size();\\n        int i=0,j=0;\\n        while(i<n&&j<m){\\n            if(nums1[i]<nums2[j]){\\n                i++;\\n            }\\n            else if(nums1[i]>nums2[j]){\\n                j++;\\n            }\\n            else{\\n                ans.push_back(nums2[j]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        return ans;\\n"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "haldkar_shubham",
                        "content": "This is a python code with explanation, approach and algorithm. \\n\\nhttps://siteinvokers.com/the-intersection-of-two-arrays-ii-leet-code/"
                    },
                    {
                        "username": "csseifms",
                        "content": " `Arrays.sort(nums2);\n     for(int i:nums1){\n            int index = Arrays.binarySearch(nums2,i);\n            if(index >= 0 && index < nums2.length){\n                nums2[index] = -1;\n                output[szPointer++] = i;\n            }\n     }`\n\nWhat's wrong with my solution?!"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || Beats 100% || Easy to Understand.\\nhttps://leetcode.com/problems/intersection-of-two-arrays-ii/solutions/3001494/simple-java-beats-100-easy-to-understand/"
                    },
                    {
                        "username": "ashley-yuanyuan",
                        "content": "At best I was only able to come up with a 4ms solution using java hashmap, and expected O(m+n) runtime, m and n being the sizes of the two lists. Can anyone share with me how they\\'ve optimized their solution? Any help would be greatly appreciated"
                    }
                ]
            },
            {
                "id": 1742524,
                "content": [
                    {
                        "username": "Gautampd73",
                        "content": "Why can\\'t we just use set and do Intersection using retainAll() ? "
                    },
                    {
                        "username": "rajxsv",
                        "content": "Check this Test Case :\\nnums1 =\\n[1,2,2,3,4,5,6,7]\\nnums2 =\\n[10,20,30,3,4,5,100,200,500,7]\\n\\nCurrect Output - [3,4,5,7] \\nwhy not - [3,4,5] ??\\n\\nAlthough intersection in general should mean exactly a sub array should be equal they don\\'t really define their definition of intersection in the problem statement."
                    },
                    {
                        "username": "Akash_3121",
                        "content": "In the Example 1 they given as\\nExample 1:\\n\\nInput: nums1 = [1,2,2,1], nums2 = [2,2]\\nOutput: [2,2]\\n\\nbut in one of the test case it is mentioned as :\\nInput\\nnums1 =\\n[1,2,2,1]\\nnums2 =\\n[2]\\nOutput\\n[2,2]\\nExpected\\n[2]\\n\\ncan someone explain please!!"
                    },
                    {
                        "username": "princeokeke",
                        "content": "i noticed the same thing just now \\nand honestly its really confusing\\n"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/61i-qpZSfyg"
                    },
                    {
                        "username": "Deepak_8811",
                        "content": "       sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        vector<int>ans;\\n        int n=nums1.size();\\n        int m=nums2.size();\\n        int i=0,j=0;\\n        while(i<n&&j<m){\\n            if(nums1[i]<nums2[j]){\\n                i++;\\n            }\\n            else if(nums1[i]>nums2[j]){\\n                j++;\\n            }\\n            else{\\n                ans.push_back(nums2[j]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        return ans;\\n"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "haldkar_shubham",
                        "content": "This is a python code with explanation, approach and algorithm. \\n\\nhttps://siteinvokers.com/the-intersection-of-two-arrays-ii-leet-code/"
                    },
                    {
                        "username": "csseifms",
                        "content": " `Arrays.sort(nums2);\n     for(int i:nums1){\n            int index = Arrays.binarySearch(nums2,i);\n            if(index >= 0 && index < nums2.length){\n                nums2[index] = -1;\n                output[szPointer++] = i;\n            }\n     }`\n\nWhat's wrong with my solution?!"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || Beats 100% || Easy to Understand.\\nhttps://leetcode.com/problems/intersection-of-two-arrays-ii/solutions/3001494/simple-java-beats-100-easy-to-understand/"
                    },
                    {
                        "username": "ashley-yuanyuan",
                        "content": "At best I was only able to come up with a 4ms solution using java hashmap, and expected O(m+n) runtime, m and n being the sizes of the two lists. Can anyone share with me how they\\'ve optimized their solution? Any help would be greatly appreciated"
                    }
                ]
            },
            {
                "id": 1733601,
                "content": [
                    {
                        "username": "Gautampd73",
                        "content": "Why can\\'t we just use set and do Intersection using retainAll() ? "
                    },
                    {
                        "username": "rajxsv",
                        "content": "Check this Test Case :\\nnums1 =\\n[1,2,2,3,4,5,6,7]\\nnums2 =\\n[10,20,30,3,4,5,100,200,500,7]\\n\\nCurrect Output - [3,4,5,7] \\nwhy not - [3,4,5] ??\\n\\nAlthough intersection in general should mean exactly a sub array should be equal they don\\'t really define their definition of intersection in the problem statement."
                    },
                    {
                        "username": "Akash_3121",
                        "content": "In the Example 1 they given as\\nExample 1:\\n\\nInput: nums1 = [1,2,2,1], nums2 = [2,2]\\nOutput: [2,2]\\n\\nbut in one of the test case it is mentioned as :\\nInput\\nnums1 =\\n[1,2,2,1]\\nnums2 =\\n[2]\\nOutput\\n[2,2]\\nExpected\\n[2]\\n\\ncan someone explain please!!"
                    },
                    {
                        "username": "princeokeke",
                        "content": "i noticed the same thing just now \\nand honestly its really confusing\\n"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/61i-qpZSfyg"
                    },
                    {
                        "username": "Deepak_8811",
                        "content": "       sort(nums1.begin(),nums1.end());\\n        sort(nums2.begin(),nums2.end());\\n        vector<int>ans;\\n        int n=nums1.size();\\n        int m=nums2.size();\\n        int i=0,j=0;\\n        while(i<n&&j<m){\\n            if(nums1[i]<nums2[j]){\\n                i++;\\n            }\\n            else if(nums1[i]>nums2[j]){\\n                j++;\\n            }\\n            else{\\n                ans.push_back(nums2[j]);\\n                i++;\\n                j++;\\n            }\\n        }\\n        return ans;\\n"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    },
                    {
                        "username": "haldkar_shubham",
                        "content": "This is a python code with explanation, approach and algorithm. \\n\\nhttps://siteinvokers.com/the-intersection-of-two-arrays-ii-leet-code/"
                    },
                    {
                        "username": "csseifms",
                        "content": " `Arrays.sort(nums2);\n     for(int i:nums1){\n            int index = Arrays.binarySearch(nums2,i);\n            if(index >= 0 && index < nums2.length){\n                nums2[index] = -1;\n                output[szPointer++] = i;\n            }\n     }`\n\nWhat's wrong with my solution?!"
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || Beats 100% || Easy to Understand.\\nhttps://leetcode.com/problems/intersection-of-two-arrays-ii/solutions/3001494/simple-java-beats-100-easy-to-understand/"
                    },
                    {
                        "username": "ashley-yuanyuan",
                        "content": "At best I was only able to come up with a 4ms solution using java hashmap, and expected O(m+n) runtime, m and n being the sizes of the two lists. Can anyone share with me how they\\'ve optimized their solution? Any help would be greatly appreciated"
                    }
                ]
            },
            {
                "id": 1733562,
                "content": [
                    {
                        "username": "mohamed_waseela",
                        "content": "Best Explanation:\\nhttps://youtu.be/zx-c48gtCsc"
                    },
                    {
                        "username": "likeabush",
                        "content": "hi, i\\'m a noob and i need your help. My code only works with case 2 and not with case 1. I don\\'t know why :(\\n\\nhere my code:\\n\\nhttps://gist.github.com/busc03/38d00e3473fc97e19ab7fdf7d4c0c19c"
                    },
                    {
                        "username": "shazzsamed",
                        "content": "class Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ans;\\n        int i=0,j=0;\\n        while (i<min(nums1.size(),nums2.size())){\\n            while (j<max(nums1.size(),nums2.size())){\\n                if(nums1[i]==nums2[j]){\\n                    ans.push_back(nums1[i]);\\n                    break;\\n                }\\n                j++;\\n            }\\n            i++;\\n        }\\n\\n        return ans;\\n    }\\n};\\n\\ncan someone help with what is wrong with this especially the min and max is giving me errors"
                    },
                    {
                        "username": "5f682e612e722e695f725f",
                        "content": "How to apply binary seach here ? any one?\\n"
                    },
                    {
                        "username": "yogi_k_gautam",
                        "content": "Question explanation: Intersection here means numbers common in both these arrays. But make sure not to count any number more than once. "
                    },
                    {
                        "username": "sau_rabh_s_7",
                        "content": "what is the best solution in this code...?"
                    },
                    {
                        "username": "abhikarsh",
                        "content": "using hashing.. in my opinion. it takes O(n) time, but O(n) space as well"
                    },
                    {
                        "username": "santamrc",
                        "content": "Can someone explain the working of the line,\\n`unordered_map<int,int> mp;`\\n`for(int i=0;i<nums1.size();i++) mp[nums1[i]]++;`\\n\\nHow is it incrementing a value if it is not even there in the HashMap in the first place?"
                    },
                    {
                        "username": "abhikarsh",
                        "content": "If value is not present, create it. else increment it"
                    },
                    {
                        "username": "VivekDhiman",
                        "content": "With Nested For Loop | Java | ✌️ \n\n\nclass Solution {\n    public int[] intersect(int[] nums1, int[] nums2) {\n       \n        List<Integer> res = new ArrayList<Integer>();\n\n        Arrays.sort(nums1);\n        Arrays.sort(nums2);\n\n         for(int i = 0 ; i < nums1.length ; i++){\n            for(int j = 0 ; j< nums2.length ; j++)\n            {\n                if(nums1[i] == nums2[j]){\n                  res.add(nums1[i]);\n                  nums2[j] = 0;\n                  break;\n                }\n            }\n\n        }\n        int[] result = new int[res.size()];\n        for(int i=0;i<res.size();i++)\n        {\n            result[i] = res.get(i);\n        }\nreturn result;\n    }\n}"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "#my solution\\n```\\nclass Solution {\\n  public int[] intersect(int[] nums1, int[] nums2) {\\n    List<Integer> result = new ArrayList<Integer>();\\n    Map<Integer, Integer> elementFrequency = new HashMap<Integer, Integer>();\\n\\n    // memory optimization\\n    int[] smallestNums = nums1.length <= nums2.length ? nums1 : nums2;\\n    int[] largestNums = nums1.length > nums2.length ? nums1 : nums2;\\n\\n    for (int num : smallestNums) {\\n      if (elementFrequency.containsKey(num)) {\\n        elementFrequency.put(num, elementFrequency.get(num) + 1);\\n      } else {\\n        elementFrequency.put(num, 1);\\n      }\\n    }\\n\\n    for (int num : largestNums) {\\n      if (elementFrequency.containsKey(num) && elementFrequency.get(num) > 0) {\\n        result.add(num);\\n        if (elementFrequency.get(num) == 1) {\\n          elementFrequency.remove(num);\\n        } else {\\n          elementFrequency.put(num, elementFrequency.get(num) - 1);\\n        }\\n      }\\n    }\\n    return result.stream().mapToInt(i -> i).toArray();\\n  }\\n}```"
                    },
                    {
                        "username": "vipul_dilraj_108",
                        "content": "#leetcode"
                    }
                ]
            },
            {
                "id": 1729542,
                "content": [
                    {
                        "username": "mohamed_waseela",
                        "content": "Best Explanation:\\nhttps://youtu.be/zx-c48gtCsc"
                    },
                    {
                        "username": "likeabush",
                        "content": "hi, i\\'m a noob and i need your help. My code only works with case 2 and not with case 1. I don\\'t know why :(\\n\\nhere my code:\\n\\nhttps://gist.github.com/busc03/38d00e3473fc97e19ab7fdf7d4c0c19c"
                    },
                    {
                        "username": "shazzsamed",
                        "content": "class Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ans;\\n        int i=0,j=0;\\n        while (i<min(nums1.size(),nums2.size())){\\n            while (j<max(nums1.size(),nums2.size())){\\n                if(nums1[i]==nums2[j]){\\n                    ans.push_back(nums1[i]);\\n                    break;\\n                }\\n                j++;\\n            }\\n            i++;\\n        }\\n\\n        return ans;\\n    }\\n};\\n\\ncan someone help with what is wrong with this especially the min and max is giving me errors"
                    },
                    {
                        "username": "5f682e612e722e695f725f",
                        "content": "How to apply binary seach here ? any one?\\n"
                    },
                    {
                        "username": "yogi_k_gautam",
                        "content": "Question explanation: Intersection here means numbers common in both these arrays. But make sure not to count any number more than once. "
                    },
                    {
                        "username": "sau_rabh_s_7",
                        "content": "what is the best solution in this code...?"
                    },
                    {
                        "username": "abhikarsh",
                        "content": "using hashing.. in my opinion. it takes O(n) time, but O(n) space as well"
                    },
                    {
                        "username": "santamrc",
                        "content": "Can someone explain the working of the line,\\n`unordered_map<int,int> mp;`\\n`for(int i=0;i<nums1.size();i++) mp[nums1[i]]++;`\\n\\nHow is it incrementing a value if it is not even there in the HashMap in the first place?"
                    },
                    {
                        "username": "abhikarsh",
                        "content": "If value is not present, create it. else increment it"
                    },
                    {
                        "username": "VivekDhiman",
                        "content": "With Nested For Loop | Java | ✌️ \n\n\nclass Solution {\n    public int[] intersect(int[] nums1, int[] nums2) {\n       \n        List<Integer> res = new ArrayList<Integer>();\n\n        Arrays.sort(nums1);\n        Arrays.sort(nums2);\n\n         for(int i = 0 ; i < nums1.length ; i++){\n            for(int j = 0 ; j< nums2.length ; j++)\n            {\n                if(nums1[i] == nums2[j]){\n                  res.add(nums1[i]);\n                  nums2[j] = 0;\n                  break;\n                }\n            }\n\n        }\n        int[] result = new int[res.size()];\n        for(int i=0;i<res.size();i++)\n        {\n            result[i] = res.get(i);\n        }\nreturn result;\n    }\n}"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "#my solution\\n```\\nclass Solution {\\n  public int[] intersect(int[] nums1, int[] nums2) {\\n    List<Integer> result = new ArrayList<Integer>();\\n    Map<Integer, Integer> elementFrequency = new HashMap<Integer, Integer>();\\n\\n    // memory optimization\\n    int[] smallestNums = nums1.length <= nums2.length ? nums1 : nums2;\\n    int[] largestNums = nums1.length > nums2.length ? nums1 : nums2;\\n\\n    for (int num : smallestNums) {\\n      if (elementFrequency.containsKey(num)) {\\n        elementFrequency.put(num, elementFrequency.get(num) + 1);\\n      } else {\\n        elementFrequency.put(num, 1);\\n      }\\n    }\\n\\n    for (int num : largestNums) {\\n      if (elementFrequency.containsKey(num) && elementFrequency.get(num) > 0) {\\n        result.add(num);\\n        if (elementFrequency.get(num) == 1) {\\n          elementFrequency.remove(num);\\n        } else {\\n          elementFrequency.put(num, elementFrequency.get(num) - 1);\\n        }\\n      }\\n    }\\n    return result.stream().mapToInt(i -> i).toArray();\\n  }\\n}```"
                    },
                    {
                        "username": "vipul_dilraj_108",
                        "content": "#leetcode"
                    }
                ]
            },
            {
                "id": 1729169,
                "content": [
                    {
                        "username": "mohamed_waseela",
                        "content": "Best Explanation:\\nhttps://youtu.be/zx-c48gtCsc"
                    },
                    {
                        "username": "likeabush",
                        "content": "hi, i\\'m a noob and i need your help. My code only works with case 2 and not with case 1. I don\\'t know why :(\\n\\nhere my code:\\n\\nhttps://gist.github.com/busc03/38d00e3473fc97e19ab7fdf7d4c0c19c"
                    },
                    {
                        "username": "shazzsamed",
                        "content": "class Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ans;\\n        int i=0,j=0;\\n        while (i<min(nums1.size(),nums2.size())){\\n            while (j<max(nums1.size(),nums2.size())){\\n                if(nums1[i]==nums2[j]){\\n                    ans.push_back(nums1[i]);\\n                    break;\\n                }\\n                j++;\\n            }\\n            i++;\\n        }\\n\\n        return ans;\\n    }\\n};\\n\\ncan someone help with what is wrong with this especially the min and max is giving me errors"
                    },
                    {
                        "username": "5f682e612e722e695f725f",
                        "content": "How to apply binary seach here ? any one?\\n"
                    },
                    {
                        "username": "yogi_k_gautam",
                        "content": "Question explanation: Intersection here means numbers common in both these arrays. But make sure not to count any number more than once. "
                    },
                    {
                        "username": "sau_rabh_s_7",
                        "content": "what is the best solution in this code...?"
                    },
                    {
                        "username": "abhikarsh",
                        "content": "using hashing.. in my opinion. it takes O(n) time, but O(n) space as well"
                    },
                    {
                        "username": "santamrc",
                        "content": "Can someone explain the working of the line,\\n`unordered_map<int,int> mp;`\\n`for(int i=0;i<nums1.size();i++) mp[nums1[i]]++;`\\n\\nHow is it incrementing a value if it is not even there in the HashMap in the first place?"
                    },
                    {
                        "username": "abhikarsh",
                        "content": "If value is not present, create it. else increment it"
                    },
                    {
                        "username": "VivekDhiman",
                        "content": "With Nested For Loop | Java | ✌️ \n\n\nclass Solution {\n    public int[] intersect(int[] nums1, int[] nums2) {\n       \n        List<Integer> res = new ArrayList<Integer>();\n\n        Arrays.sort(nums1);\n        Arrays.sort(nums2);\n\n         for(int i = 0 ; i < nums1.length ; i++){\n            for(int j = 0 ; j< nums2.length ; j++)\n            {\n                if(nums1[i] == nums2[j]){\n                  res.add(nums1[i]);\n                  nums2[j] = 0;\n                  break;\n                }\n            }\n\n        }\n        int[] result = new int[res.size()];\n        for(int i=0;i<res.size();i++)\n        {\n            result[i] = res.get(i);\n        }\nreturn result;\n    }\n}"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "#my solution\\n```\\nclass Solution {\\n  public int[] intersect(int[] nums1, int[] nums2) {\\n    List<Integer> result = new ArrayList<Integer>();\\n    Map<Integer, Integer> elementFrequency = new HashMap<Integer, Integer>();\\n\\n    // memory optimization\\n    int[] smallestNums = nums1.length <= nums2.length ? nums1 : nums2;\\n    int[] largestNums = nums1.length > nums2.length ? nums1 : nums2;\\n\\n    for (int num : smallestNums) {\\n      if (elementFrequency.containsKey(num)) {\\n        elementFrequency.put(num, elementFrequency.get(num) + 1);\\n      } else {\\n        elementFrequency.put(num, 1);\\n      }\\n    }\\n\\n    for (int num : largestNums) {\\n      if (elementFrequency.containsKey(num) && elementFrequency.get(num) > 0) {\\n        result.add(num);\\n        if (elementFrequency.get(num) == 1) {\\n          elementFrequency.remove(num);\\n        } else {\\n          elementFrequency.put(num, elementFrequency.get(num) - 1);\\n        }\\n      }\\n    }\\n    return result.stream().mapToInt(i -> i).toArray();\\n  }\\n}```"
                    },
                    {
                        "username": "vipul_dilraj_108",
                        "content": "#leetcode"
                    }
                ]
            },
            {
                "id": 1728884,
                "content": [
                    {
                        "username": "mohamed_waseela",
                        "content": "Best Explanation:\\nhttps://youtu.be/zx-c48gtCsc"
                    },
                    {
                        "username": "likeabush",
                        "content": "hi, i\\'m a noob and i need your help. My code only works with case 2 and not with case 1. I don\\'t know why :(\\n\\nhere my code:\\n\\nhttps://gist.github.com/busc03/38d00e3473fc97e19ab7fdf7d4c0c19c"
                    },
                    {
                        "username": "shazzsamed",
                        "content": "class Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ans;\\n        int i=0,j=0;\\n        while (i<min(nums1.size(),nums2.size())){\\n            while (j<max(nums1.size(),nums2.size())){\\n                if(nums1[i]==nums2[j]){\\n                    ans.push_back(nums1[i]);\\n                    break;\\n                }\\n                j++;\\n            }\\n            i++;\\n        }\\n\\n        return ans;\\n    }\\n};\\n\\ncan someone help with what is wrong with this especially the min and max is giving me errors"
                    },
                    {
                        "username": "5f682e612e722e695f725f",
                        "content": "How to apply binary seach here ? any one?\\n"
                    },
                    {
                        "username": "yogi_k_gautam",
                        "content": "Question explanation: Intersection here means numbers common in both these arrays. But make sure not to count any number more than once. "
                    },
                    {
                        "username": "sau_rabh_s_7",
                        "content": "what is the best solution in this code...?"
                    },
                    {
                        "username": "abhikarsh",
                        "content": "using hashing.. in my opinion. it takes O(n) time, but O(n) space as well"
                    },
                    {
                        "username": "santamrc",
                        "content": "Can someone explain the working of the line,\\n`unordered_map<int,int> mp;`\\n`for(int i=0;i<nums1.size();i++) mp[nums1[i]]++;`\\n\\nHow is it incrementing a value if it is not even there in the HashMap in the first place?"
                    },
                    {
                        "username": "abhikarsh",
                        "content": "If value is not present, create it. else increment it"
                    },
                    {
                        "username": "VivekDhiman",
                        "content": "With Nested For Loop | Java | ✌️ \n\n\nclass Solution {\n    public int[] intersect(int[] nums1, int[] nums2) {\n       \n        List<Integer> res = new ArrayList<Integer>();\n\n        Arrays.sort(nums1);\n        Arrays.sort(nums2);\n\n         for(int i = 0 ; i < nums1.length ; i++){\n            for(int j = 0 ; j< nums2.length ; j++)\n            {\n                if(nums1[i] == nums2[j]){\n                  res.add(nums1[i]);\n                  nums2[j] = 0;\n                  break;\n                }\n            }\n\n        }\n        int[] result = new int[res.size()];\n        for(int i=0;i<res.size();i++)\n        {\n            result[i] = res.get(i);\n        }\nreturn result;\n    }\n}"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "#my solution\\n```\\nclass Solution {\\n  public int[] intersect(int[] nums1, int[] nums2) {\\n    List<Integer> result = new ArrayList<Integer>();\\n    Map<Integer, Integer> elementFrequency = new HashMap<Integer, Integer>();\\n\\n    // memory optimization\\n    int[] smallestNums = nums1.length <= nums2.length ? nums1 : nums2;\\n    int[] largestNums = nums1.length > nums2.length ? nums1 : nums2;\\n\\n    for (int num : smallestNums) {\\n      if (elementFrequency.containsKey(num)) {\\n        elementFrequency.put(num, elementFrequency.get(num) + 1);\\n      } else {\\n        elementFrequency.put(num, 1);\\n      }\\n    }\\n\\n    for (int num : largestNums) {\\n      if (elementFrequency.containsKey(num) && elementFrequency.get(num) > 0) {\\n        result.add(num);\\n        if (elementFrequency.get(num) == 1) {\\n          elementFrequency.remove(num);\\n        } else {\\n          elementFrequency.put(num, elementFrequency.get(num) - 1);\\n        }\\n      }\\n    }\\n    return result.stream().mapToInt(i -> i).toArray();\\n  }\\n}```"
                    },
                    {
                        "username": "vipul_dilraj_108",
                        "content": "#leetcode"
                    }
                ]
            },
            {
                "id": 1725668,
                "content": [
                    {
                        "username": "mohamed_waseela",
                        "content": "Best Explanation:\\nhttps://youtu.be/zx-c48gtCsc"
                    },
                    {
                        "username": "likeabush",
                        "content": "hi, i\\'m a noob and i need your help. My code only works with case 2 and not with case 1. I don\\'t know why :(\\n\\nhere my code:\\n\\nhttps://gist.github.com/busc03/38d00e3473fc97e19ab7fdf7d4c0c19c"
                    },
                    {
                        "username": "shazzsamed",
                        "content": "class Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ans;\\n        int i=0,j=0;\\n        while (i<min(nums1.size(),nums2.size())){\\n            while (j<max(nums1.size(),nums2.size())){\\n                if(nums1[i]==nums2[j]){\\n                    ans.push_back(nums1[i]);\\n                    break;\\n                }\\n                j++;\\n            }\\n            i++;\\n        }\\n\\n        return ans;\\n    }\\n};\\n\\ncan someone help with what is wrong with this especially the min and max is giving me errors"
                    },
                    {
                        "username": "5f682e612e722e695f725f",
                        "content": "How to apply binary seach here ? any one?\\n"
                    },
                    {
                        "username": "yogi_k_gautam",
                        "content": "Question explanation: Intersection here means numbers common in both these arrays. But make sure not to count any number more than once. "
                    },
                    {
                        "username": "sau_rabh_s_7",
                        "content": "what is the best solution in this code...?"
                    },
                    {
                        "username": "abhikarsh",
                        "content": "using hashing.. in my opinion. it takes O(n) time, but O(n) space as well"
                    },
                    {
                        "username": "santamrc",
                        "content": "Can someone explain the working of the line,\\n`unordered_map<int,int> mp;`\\n`for(int i=0;i<nums1.size();i++) mp[nums1[i]]++;`\\n\\nHow is it incrementing a value if it is not even there in the HashMap in the first place?"
                    },
                    {
                        "username": "abhikarsh",
                        "content": "If value is not present, create it. else increment it"
                    },
                    {
                        "username": "VivekDhiman",
                        "content": "With Nested For Loop | Java | ✌️ \n\n\nclass Solution {\n    public int[] intersect(int[] nums1, int[] nums2) {\n       \n        List<Integer> res = new ArrayList<Integer>();\n\n        Arrays.sort(nums1);\n        Arrays.sort(nums2);\n\n         for(int i = 0 ; i < nums1.length ; i++){\n            for(int j = 0 ; j< nums2.length ; j++)\n            {\n                if(nums1[i] == nums2[j]){\n                  res.add(nums1[i]);\n                  nums2[j] = 0;\n                  break;\n                }\n            }\n\n        }\n        int[] result = new int[res.size()];\n        for(int i=0;i<res.size();i++)\n        {\n            result[i] = res.get(i);\n        }\nreturn result;\n    }\n}"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "#my solution\\n```\\nclass Solution {\\n  public int[] intersect(int[] nums1, int[] nums2) {\\n    List<Integer> result = new ArrayList<Integer>();\\n    Map<Integer, Integer> elementFrequency = new HashMap<Integer, Integer>();\\n\\n    // memory optimization\\n    int[] smallestNums = nums1.length <= nums2.length ? nums1 : nums2;\\n    int[] largestNums = nums1.length > nums2.length ? nums1 : nums2;\\n\\n    for (int num : smallestNums) {\\n      if (elementFrequency.containsKey(num)) {\\n        elementFrequency.put(num, elementFrequency.get(num) + 1);\\n      } else {\\n        elementFrequency.put(num, 1);\\n      }\\n    }\\n\\n    for (int num : largestNums) {\\n      if (elementFrequency.containsKey(num) && elementFrequency.get(num) > 0) {\\n        result.add(num);\\n        if (elementFrequency.get(num) == 1) {\\n          elementFrequency.remove(num);\\n        } else {\\n          elementFrequency.put(num, elementFrequency.get(num) - 1);\\n        }\\n      }\\n    }\\n    return result.stream().mapToInt(i -> i).toArray();\\n  }\\n}```"
                    },
                    {
                        "username": "vipul_dilraj_108",
                        "content": "#leetcode"
                    }
                ]
            },
            {
                "id": 1706224,
                "content": [
                    {
                        "username": "mohamed_waseela",
                        "content": "Best Explanation:\\nhttps://youtu.be/zx-c48gtCsc"
                    },
                    {
                        "username": "likeabush",
                        "content": "hi, i\\'m a noob and i need your help. My code only works with case 2 and not with case 1. I don\\'t know why :(\\n\\nhere my code:\\n\\nhttps://gist.github.com/busc03/38d00e3473fc97e19ab7fdf7d4c0c19c"
                    },
                    {
                        "username": "shazzsamed",
                        "content": "class Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ans;\\n        int i=0,j=0;\\n        while (i<min(nums1.size(),nums2.size())){\\n            while (j<max(nums1.size(),nums2.size())){\\n                if(nums1[i]==nums2[j]){\\n                    ans.push_back(nums1[i]);\\n                    break;\\n                }\\n                j++;\\n            }\\n            i++;\\n        }\\n\\n        return ans;\\n    }\\n};\\n\\ncan someone help with what is wrong with this especially the min and max is giving me errors"
                    },
                    {
                        "username": "5f682e612e722e695f725f",
                        "content": "How to apply binary seach here ? any one?\\n"
                    },
                    {
                        "username": "yogi_k_gautam",
                        "content": "Question explanation: Intersection here means numbers common in both these arrays. But make sure not to count any number more than once. "
                    },
                    {
                        "username": "sau_rabh_s_7",
                        "content": "what is the best solution in this code...?"
                    },
                    {
                        "username": "abhikarsh",
                        "content": "using hashing.. in my opinion. it takes O(n) time, but O(n) space as well"
                    },
                    {
                        "username": "santamrc",
                        "content": "Can someone explain the working of the line,\\n`unordered_map<int,int> mp;`\\n`for(int i=0;i<nums1.size();i++) mp[nums1[i]]++;`\\n\\nHow is it incrementing a value if it is not even there in the HashMap in the first place?"
                    },
                    {
                        "username": "abhikarsh",
                        "content": "If value is not present, create it. else increment it"
                    },
                    {
                        "username": "VivekDhiman",
                        "content": "With Nested For Loop | Java | ✌️ \n\n\nclass Solution {\n    public int[] intersect(int[] nums1, int[] nums2) {\n       \n        List<Integer> res = new ArrayList<Integer>();\n\n        Arrays.sort(nums1);\n        Arrays.sort(nums2);\n\n         for(int i = 0 ; i < nums1.length ; i++){\n            for(int j = 0 ; j< nums2.length ; j++)\n            {\n                if(nums1[i] == nums2[j]){\n                  res.add(nums1[i]);\n                  nums2[j] = 0;\n                  break;\n                }\n            }\n\n        }\n        int[] result = new int[res.size()];\n        for(int i=0;i<res.size();i++)\n        {\n            result[i] = res.get(i);\n        }\nreturn result;\n    }\n}"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "#my solution\\n```\\nclass Solution {\\n  public int[] intersect(int[] nums1, int[] nums2) {\\n    List<Integer> result = new ArrayList<Integer>();\\n    Map<Integer, Integer> elementFrequency = new HashMap<Integer, Integer>();\\n\\n    // memory optimization\\n    int[] smallestNums = nums1.length <= nums2.length ? nums1 : nums2;\\n    int[] largestNums = nums1.length > nums2.length ? nums1 : nums2;\\n\\n    for (int num : smallestNums) {\\n      if (elementFrequency.containsKey(num)) {\\n        elementFrequency.put(num, elementFrequency.get(num) + 1);\\n      } else {\\n        elementFrequency.put(num, 1);\\n      }\\n    }\\n\\n    for (int num : largestNums) {\\n      if (elementFrequency.containsKey(num) && elementFrequency.get(num) > 0) {\\n        result.add(num);\\n        if (elementFrequency.get(num) == 1) {\\n          elementFrequency.remove(num);\\n        } else {\\n          elementFrequency.put(num, elementFrequency.get(num) - 1);\\n        }\\n      }\\n    }\\n    return result.stream().mapToInt(i -> i).toArray();\\n  }\\n}```"
                    },
                    {
                        "username": "vipul_dilraj_108",
                        "content": "#leetcode"
                    }
                ]
            },
            {
                "id": 1706176,
                "content": [
                    {
                        "username": "mohamed_waseela",
                        "content": "Best Explanation:\\nhttps://youtu.be/zx-c48gtCsc"
                    },
                    {
                        "username": "likeabush",
                        "content": "hi, i\\'m a noob and i need your help. My code only works with case 2 and not with case 1. I don\\'t know why :(\\n\\nhere my code:\\n\\nhttps://gist.github.com/busc03/38d00e3473fc97e19ab7fdf7d4c0c19c"
                    },
                    {
                        "username": "shazzsamed",
                        "content": "class Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ans;\\n        int i=0,j=0;\\n        while (i<min(nums1.size(),nums2.size())){\\n            while (j<max(nums1.size(),nums2.size())){\\n                if(nums1[i]==nums2[j]){\\n                    ans.push_back(nums1[i]);\\n                    break;\\n                }\\n                j++;\\n            }\\n            i++;\\n        }\\n\\n        return ans;\\n    }\\n};\\n\\ncan someone help with what is wrong with this especially the min and max is giving me errors"
                    },
                    {
                        "username": "5f682e612e722e695f725f",
                        "content": "How to apply binary seach here ? any one?\\n"
                    },
                    {
                        "username": "yogi_k_gautam",
                        "content": "Question explanation: Intersection here means numbers common in both these arrays. But make sure not to count any number more than once. "
                    },
                    {
                        "username": "sau_rabh_s_7",
                        "content": "what is the best solution in this code...?"
                    },
                    {
                        "username": "abhikarsh",
                        "content": "using hashing.. in my opinion. it takes O(n) time, but O(n) space as well"
                    },
                    {
                        "username": "santamrc",
                        "content": "Can someone explain the working of the line,\\n`unordered_map<int,int> mp;`\\n`for(int i=0;i<nums1.size();i++) mp[nums1[i]]++;`\\n\\nHow is it incrementing a value if it is not even there in the HashMap in the first place?"
                    },
                    {
                        "username": "abhikarsh",
                        "content": "If value is not present, create it. else increment it"
                    },
                    {
                        "username": "VivekDhiman",
                        "content": "With Nested For Loop | Java | ✌️ \n\n\nclass Solution {\n    public int[] intersect(int[] nums1, int[] nums2) {\n       \n        List<Integer> res = new ArrayList<Integer>();\n\n        Arrays.sort(nums1);\n        Arrays.sort(nums2);\n\n         for(int i = 0 ; i < nums1.length ; i++){\n            for(int j = 0 ; j< nums2.length ; j++)\n            {\n                if(nums1[i] == nums2[j]){\n                  res.add(nums1[i]);\n                  nums2[j] = 0;\n                  break;\n                }\n            }\n\n        }\n        int[] result = new int[res.size()];\n        for(int i=0;i<res.size();i++)\n        {\n            result[i] = res.get(i);\n        }\nreturn result;\n    }\n}"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "#my solution\\n```\\nclass Solution {\\n  public int[] intersect(int[] nums1, int[] nums2) {\\n    List<Integer> result = new ArrayList<Integer>();\\n    Map<Integer, Integer> elementFrequency = new HashMap<Integer, Integer>();\\n\\n    // memory optimization\\n    int[] smallestNums = nums1.length <= nums2.length ? nums1 : nums2;\\n    int[] largestNums = nums1.length > nums2.length ? nums1 : nums2;\\n\\n    for (int num : smallestNums) {\\n      if (elementFrequency.containsKey(num)) {\\n        elementFrequency.put(num, elementFrequency.get(num) + 1);\\n      } else {\\n        elementFrequency.put(num, 1);\\n      }\\n    }\\n\\n    for (int num : largestNums) {\\n      if (elementFrequency.containsKey(num) && elementFrequency.get(num) > 0) {\\n        result.add(num);\\n        if (elementFrequency.get(num) == 1) {\\n          elementFrequency.remove(num);\\n        } else {\\n          elementFrequency.put(num, elementFrequency.get(num) - 1);\\n        }\\n      }\\n    }\\n    return result.stream().mapToInt(i -> i).toArray();\\n  }\\n}```"
                    },
                    {
                        "username": "vipul_dilraj_108",
                        "content": "#leetcode"
                    }
                ]
            },
            {
                "id": 1699291,
                "content": [
                    {
                        "username": "mohamed_waseela",
                        "content": "Best Explanation:\\nhttps://youtu.be/zx-c48gtCsc"
                    },
                    {
                        "username": "likeabush",
                        "content": "hi, i\\'m a noob and i need your help. My code only works with case 2 and not with case 1. I don\\'t know why :(\\n\\nhere my code:\\n\\nhttps://gist.github.com/busc03/38d00e3473fc97e19ab7fdf7d4c0c19c"
                    },
                    {
                        "username": "shazzsamed",
                        "content": "class Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ans;\\n        int i=0,j=0;\\n        while (i<min(nums1.size(),nums2.size())){\\n            while (j<max(nums1.size(),nums2.size())){\\n                if(nums1[i]==nums2[j]){\\n                    ans.push_back(nums1[i]);\\n                    break;\\n                }\\n                j++;\\n            }\\n            i++;\\n        }\\n\\n        return ans;\\n    }\\n};\\n\\ncan someone help with what is wrong with this especially the min and max is giving me errors"
                    },
                    {
                        "username": "5f682e612e722e695f725f",
                        "content": "How to apply binary seach here ? any one?\\n"
                    },
                    {
                        "username": "yogi_k_gautam",
                        "content": "Question explanation: Intersection here means numbers common in both these arrays. But make sure not to count any number more than once. "
                    },
                    {
                        "username": "sau_rabh_s_7",
                        "content": "what is the best solution in this code...?"
                    },
                    {
                        "username": "abhikarsh",
                        "content": "using hashing.. in my opinion. it takes O(n) time, but O(n) space as well"
                    },
                    {
                        "username": "santamrc",
                        "content": "Can someone explain the working of the line,\\n`unordered_map<int,int> mp;`\\n`for(int i=0;i<nums1.size();i++) mp[nums1[i]]++;`\\n\\nHow is it incrementing a value if it is not even there in the HashMap in the first place?"
                    },
                    {
                        "username": "abhikarsh",
                        "content": "If value is not present, create it. else increment it"
                    },
                    {
                        "username": "VivekDhiman",
                        "content": "With Nested For Loop | Java | ✌️ \n\n\nclass Solution {\n    public int[] intersect(int[] nums1, int[] nums2) {\n       \n        List<Integer> res = new ArrayList<Integer>();\n\n        Arrays.sort(nums1);\n        Arrays.sort(nums2);\n\n         for(int i = 0 ; i < nums1.length ; i++){\n            for(int j = 0 ; j< nums2.length ; j++)\n            {\n                if(nums1[i] == nums2[j]){\n                  res.add(nums1[i]);\n                  nums2[j] = 0;\n                  break;\n                }\n            }\n\n        }\n        int[] result = new int[res.size()];\n        for(int i=0;i<res.size();i++)\n        {\n            result[i] = res.get(i);\n        }\nreturn result;\n    }\n}"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "#my solution\\n```\\nclass Solution {\\n  public int[] intersect(int[] nums1, int[] nums2) {\\n    List<Integer> result = new ArrayList<Integer>();\\n    Map<Integer, Integer> elementFrequency = new HashMap<Integer, Integer>();\\n\\n    // memory optimization\\n    int[] smallestNums = nums1.length <= nums2.length ? nums1 : nums2;\\n    int[] largestNums = nums1.length > nums2.length ? nums1 : nums2;\\n\\n    for (int num : smallestNums) {\\n      if (elementFrequency.containsKey(num)) {\\n        elementFrequency.put(num, elementFrequency.get(num) + 1);\\n      } else {\\n        elementFrequency.put(num, 1);\\n      }\\n    }\\n\\n    for (int num : largestNums) {\\n      if (elementFrequency.containsKey(num) && elementFrequency.get(num) > 0) {\\n        result.add(num);\\n        if (elementFrequency.get(num) == 1) {\\n          elementFrequency.remove(num);\\n        } else {\\n          elementFrequency.put(num, elementFrequency.get(num) - 1);\\n        }\\n      }\\n    }\\n    return result.stream().mapToInt(i -> i).toArray();\\n  }\\n}```"
                    },
                    {
                        "username": "vipul_dilraj_108",
                        "content": "#leetcode"
                    }
                ]
            },
            {
                "id": 1698981,
                "content": [
                    {
                        "username": "mohamed_waseela",
                        "content": "Best Explanation:\\nhttps://youtu.be/zx-c48gtCsc"
                    },
                    {
                        "username": "likeabush",
                        "content": "hi, i\\'m a noob and i need your help. My code only works with case 2 and not with case 1. I don\\'t know why :(\\n\\nhere my code:\\n\\nhttps://gist.github.com/busc03/38d00e3473fc97e19ab7fdf7d4c0c19c"
                    },
                    {
                        "username": "shazzsamed",
                        "content": "class Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ans;\\n        int i=0,j=0;\\n        while (i<min(nums1.size(),nums2.size())){\\n            while (j<max(nums1.size(),nums2.size())){\\n                if(nums1[i]==nums2[j]){\\n                    ans.push_back(nums1[i]);\\n                    break;\\n                }\\n                j++;\\n            }\\n            i++;\\n        }\\n\\n        return ans;\\n    }\\n};\\n\\ncan someone help with what is wrong with this especially the min and max is giving me errors"
                    },
                    {
                        "username": "5f682e612e722e695f725f",
                        "content": "How to apply binary seach here ? any one?\\n"
                    },
                    {
                        "username": "yogi_k_gautam",
                        "content": "Question explanation: Intersection here means numbers common in both these arrays. But make sure not to count any number more than once. "
                    },
                    {
                        "username": "sau_rabh_s_7",
                        "content": "what is the best solution in this code...?"
                    },
                    {
                        "username": "abhikarsh",
                        "content": "using hashing.. in my opinion. it takes O(n) time, but O(n) space as well"
                    },
                    {
                        "username": "santamrc",
                        "content": "Can someone explain the working of the line,\\n`unordered_map<int,int> mp;`\\n`for(int i=0;i<nums1.size();i++) mp[nums1[i]]++;`\\n\\nHow is it incrementing a value if it is not even there in the HashMap in the first place?"
                    },
                    {
                        "username": "abhikarsh",
                        "content": "If value is not present, create it. else increment it"
                    },
                    {
                        "username": "VivekDhiman",
                        "content": "With Nested For Loop | Java | ✌️ \n\n\nclass Solution {\n    public int[] intersect(int[] nums1, int[] nums2) {\n       \n        List<Integer> res = new ArrayList<Integer>();\n\n        Arrays.sort(nums1);\n        Arrays.sort(nums2);\n\n         for(int i = 0 ; i < nums1.length ; i++){\n            for(int j = 0 ; j< nums2.length ; j++)\n            {\n                if(nums1[i] == nums2[j]){\n                  res.add(nums1[i]);\n                  nums2[j] = 0;\n                  break;\n                }\n            }\n\n        }\n        int[] result = new int[res.size()];\n        for(int i=0;i<res.size();i++)\n        {\n            result[i] = res.get(i);\n        }\nreturn result;\n    }\n}"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "#my solution\\n```\\nclass Solution {\\n  public int[] intersect(int[] nums1, int[] nums2) {\\n    List<Integer> result = new ArrayList<Integer>();\\n    Map<Integer, Integer> elementFrequency = new HashMap<Integer, Integer>();\\n\\n    // memory optimization\\n    int[] smallestNums = nums1.length <= nums2.length ? nums1 : nums2;\\n    int[] largestNums = nums1.length > nums2.length ? nums1 : nums2;\\n\\n    for (int num : smallestNums) {\\n      if (elementFrequency.containsKey(num)) {\\n        elementFrequency.put(num, elementFrequency.get(num) + 1);\\n      } else {\\n        elementFrequency.put(num, 1);\\n      }\\n    }\\n\\n    for (int num : largestNums) {\\n      if (elementFrequency.containsKey(num) && elementFrequency.get(num) > 0) {\\n        result.add(num);\\n        if (elementFrequency.get(num) == 1) {\\n          elementFrequency.remove(num);\\n        } else {\\n          elementFrequency.put(num, elementFrequency.get(num) - 1);\\n        }\\n      }\\n    }\\n    return result.stream().mapToInt(i -> i).toArray();\\n  }\\n}```"
                    },
                    {
                        "username": "vipul_dilraj_108",
                        "content": "#leetcode"
                    }
                ]
            },
            {
                "id": 1624341,
                "content": [
                    {
                        "username": "mohamed_waseela",
                        "content": "Best Explanation:\\nhttps://youtu.be/zx-c48gtCsc"
                    },
                    {
                        "username": "likeabush",
                        "content": "hi, i\\'m a noob and i need your help. My code only works with case 2 and not with case 1. I don\\'t know why :(\\n\\nhere my code:\\n\\nhttps://gist.github.com/busc03/38d00e3473fc97e19ab7fdf7d4c0c19c"
                    },
                    {
                        "username": "shazzsamed",
                        "content": "class Solution {\\npublic:\\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\\n        vector<int> ans;\\n        int i=0,j=0;\\n        while (i<min(nums1.size(),nums2.size())){\\n            while (j<max(nums1.size(),nums2.size())){\\n                if(nums1[i]==nums2[j]){\\n                    ans.push_back(nums1[i]);\\n                    break;\\n                }\\n                j++;\\n            }\\n            i++;\\n        }\\n\\n        return ans;\\n    }\\n};\\n\\ncan someone help with what is wrong with this especially the min and max is giving me errors"
                    },
                    {
                        "username": "5f682e612e722e695f725f",
                        "content": "How to apply binary seach here ? any one?\\n"
                    },
                    {
                        "username": "yogi_k_gautam",
                        "content": "Question explanation: Intersection here means numbers common in both these arrays. But make sure not to count any number more than once. "
                    },
                    {
                        "username": "sau_rabh_s_7",
                        "content": "what is the best solution in this code...?"
                    },
                    {
                        "username": "abhikarsh",
                        "content": "using hashing.. in my opinion. it takes O(n) time, but O(n) space as well"
                    },
                    {
                        "username": "santamrc",
                        "content": "Can someone explain the working of the line,\\n`unordered_map<int,int> mp;`\\n`for(int i=0;i<nums1.size();i++) mp[nums1[i]]++;`\\n\\nHow is it incrementing a value if it is not even there in the HashMap in the first place?"
                    },
                    {
                        "username": "abhikarsh",
                        "content": "If value is not present, create it. else increment it"
                    },
                    {
                        "username": "VivekDhiman",
                        "content": "With Nested For Loop | Java | ✌️ \n\n\nclass Solution {\n    public int[] intersect(int[] nums1, int[] nums2) {\n       \n        List<Integer> res = new ArrayList<Integer>();\n\n        Arrays.sort(nums1);\n        Arrays.sort(nums2);\n\n         for(int i = 0 ; i < nums1.length ; i++){\n            for(int j = 0 ; j< nums2.length ; j++)\n            {\n                if(nums1[i] == nums2[j]){\n                  res.add(nums1[i]);\n                  nums2[j] = 0;\n                  break;\n                }\n            }\n\n        }\n        int[] result = new int[res.size()];\n        for(int i=0;i<res.size();i++)\n        {\n            result[i] = res.get(i);\n        }\nreturn result;\n    }\n}"
                    },
                    {
                        "username": "wasitshafi",
                        "content": "#my solution\\n```\\nclass Solution {\\n  public int[] intersect(int[] nums1, int[] nums2) {\\n    List<Integer> result = new ArrayList<Integer>();\\n    Map<Integer, Integer> elementFrequency = new HashMap<Integer, Integer>();\\n\\n    // memory optimization\\n    int[] smallestNums = nums1.length <= nums2.length ? nums1 : nums2;\\n    int[] largestNums = nums1.length > nums2.length ? nums1 : nums2;\\n\\n    for (int num : smallestNums) {\\n      if (elementFrequency.containsKey(num)) {\\n        elementFrequency.put(num, elementFrequency.get(num) + 1);\\n      } else {\\n        elementFrequency.put(num, 1);\\n      }\\n    }\\n\\n    for (int num : largestNums) {\\n      if (elementFrequency.containsKey(num) && elementFrequency.get(num) > 0) {\\n        result.add(num);\\n        if (elementFrequency.get(num) == 1) {\\n          elementFrequency.remove(num);\\n        } else {\\n          elementFrequency.put(num, elementFrequency.get(num) - 1);\\n        }\\n      }\\n    }\\n    return result.stream().mapToInt(i -> i).toArray();\\n  }\\n}```"
                    },
                    {
                        "username": "vipul_dilraj_108",
                        "content": "#leetcode"
                    }
                ]
            }
        ]
    }
]