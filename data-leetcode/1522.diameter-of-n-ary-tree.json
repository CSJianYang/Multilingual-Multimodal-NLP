[
    {
        "title": "Diameter of N-Ary Tree",
        "question_content": null,
        "solutions": [],
        "discussions": [
            {
                "id": 1570670,
                "content": [
                    {
                        "username": "LeetCode",
                        "content": "This problem is the Daily LeetCoding Challenge for November, Week 3.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **üìå Do you want to learn the problem thoroughly?**\n  Read [**‚≠ê  LeetCode Official Solution‚≠ê**](https://leetcode.com/problems/diameter-of-n-ary-tree/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 2 approaches in the official solution</summary>\n\n  \n**Approach 1:** Distance with Height\n\n  \n**Approach 2:** Distance with Depth\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>"
                    },
                    {
                        "username": "the_it_guy",
                        "content": "I solved problem #1245 Tree Diameter using 2 BFS. However, when I ran the same code on this problem it failed for a case. Can anyone please explain what is the difference between these two problems and why they can\\'t share the same solution?\\nThanks"
                    },
                    {
                        "username": "SalvadorDali",
                        "content": "Probably the reason is due to the how you initiate the graph. In that problem all the node values were unique, here you can have all nodes with the same value which will create wrong graph if you create them based on value of nodes and not on references. Anyway here is [my solution](https://leetcode.com/problems/diameter-of-n-ary-tree/solutions/3580560/python-4-steps-with-explanation/) which kind of shares my solution to prev problem (but I do DFS)"
                    },
                    {
                        "username": "software-is-life",
                        "content": "I think this is a great question, I initially with an more brute force approach where I tracked all the children node\\'s traversals / length. Then, I applied I iterated every possible height combination between two distinct nodes. This approach was a lot less efficient than the official editorial solution.\\n\\nI really like how, with visualizing the tree with a diagram, you can see you only need to keep track of the top two heights. That drastically improves the runtime complexity. \\n\\nIf you don\\'t know the DFS traversal, first start off with the Easy \"Diameter of a binary tree\" problem."
                    }
                ]
            },
            {
                "id": 1574223,
                "content": [
                    {
                        "username": "LeetCode",
                        "content": "This problem is the Daily LeetCoding Challenge for November, Week 3.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **üìå Do you want to learn the problem thoroughly?**\n  Read [**‚≠ê  LeetCode Official Solution‚≠ê**](https://leetcode.com/problems/diameter-of-n-ary-tree/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 2 approaches in the official solution</summary>\n\n  \n**Approach 1:** Distance with Height\n\n  \n**Approach 2:** Distance with Depth\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>"
                    },
                    {
                        "username": "the_it_guy",
                        "content": "I solved problem #1245 Tree Diameter using 2 BFS. However, when I ran the same code on this problem it failed for a case. Can anyone please explain what is the difference between these two problems and why they can\\'t share the same solution?\\nThanks"
                    },
                    {
                        "username": "SalvadorDali",
                        "content": "Probably the reason is due to the how you initiate the graph. In that problem all the node values were unique, here you can have all nodes with the same value which will create wrong graph if you create them based on value of nodes and not on references. Anyway here is [my solution](https://leetcode.com/problems/diameter-of-n-ary-tree/solutions/3580560/python-4-steps-with-explanation/) which kind of shares my solution to prev problem (but I do DFS)"
                    },
                    {
                        "username": "software-is-life",
                        "content": "I think this is a great question, I initially with an more brute force approach where I tracked all the children node\\'s traversals / length. Then, I applied I iterated every possible height combination between two distinct nodes. This approach was a lot less efficient than the official editorial solution.\\n\\nI really like how, with visualizing the tree with a diagram, you can see you only need to keep track of the top two heights. That drastically improves the runtime complexity. \\n\\nIf you don\\'t know the DFS traversal, first start off with the Easy \"Diameter of a binary tree\" problem."
                    }
                ]
            },
            {
                "id": 2028716,
                "content": [
                    {
                        "username": "LeetCode",
                        "content": "This problem is the Daily LeetCoding Challenge for November, Week 3.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **üìå Do you want to learn the problem thoroughly?**\n  Read [**‚≠ê  LeetCode Official Solution‚≠ê**](https://leetcode.com/problems/diameter-of-n-ary-tree/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain these 2 approaches in the official solution</summary>\n\n  \n**Approach 1:** Distance with Height\n\n  \n**Approach 2:** Distance with Depth\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>"
                    },
                    {
                        "username": "the_it_guy",
                        "content": "I solved problem #1245 Tree Diameter using 2 BFS. However, when I ran the same code on this problem it failed for a case. Can anyone please explain what is the difference between these two problems and why they can\\'t share the same solution?\\nThanks"
                    },
                    {
                        "username": "SalvadorDali",
                        "content": "Probably the reason is due to the how you initiate the graph. In that problem all the node values were unique, here you can have all nodes with the same value which will create wrong graph if you create them based on value of nodes and not on references. Anyway here is [my solution](https://leetcode.com/problems/diameter-of-n-ary-tree/solutions/3580560/python-4-steps-with-explanation/) which kind of shares my solution to prev problem (but I do DFS)"
                    },
                    {
                        "username": "software-is-life",
                        "content": "I think this is a great question, I initially with an more brute force approach where I tracked all the children node\\'s traversals / length. Then, I applied I iterated every possible height combination between two distinct nodes. This approach was a lot less efficient than the official editorial solution.\\n\\nI really like how, with visualizing the tree with a diagram, you can see you only need to keep track of the top two heights. That drastically improves the runtime complexity. \\n\\nIf you don\\'t know the DFS traversal, first start off with the Easy \"Diameter of a binary tree\" problem."
                    }
                ]
            }
        ]
    }
]