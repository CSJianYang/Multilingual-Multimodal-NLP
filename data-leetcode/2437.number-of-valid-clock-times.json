[
    {
        "title": "Number of Valid Clock Times",
        "question_content": "You are given a string of length 5 called time, representing the current time on a digital clock in the format \"hh:mm\". The earliest possible time is \"00:00\" and the latest possible time is \"23:59\".\nIn the string time, the digits represented by the ?&nbsp;symbol are unknown, and must be replaced with a digit from 0 to 9.\nReturn an integer answer, the number of valid clock times that can be created by replacing every ?&nbsp;with a digit from 0 to 9.\n&nbsp;\nExample 1:\n\nInput: time = \"?5:00\"\nOutput: 2\nExplanation: We can replace the ? with either a 0 or 1, producing \"05:00\" or \"15:00\". Note that we cannot replace it with a 2, since the time \"25:00\" is invalid. In total, we have two choices.\n\nExample 2:\n\nInput: time = \"0?:0?\"\nOutput: 100\nExplanation: Each ? can be replaced by any digit from 0 to 9, so we have 100 total choices.\n\nExample 3:\n\nInput: time = \"??:??\"\nOutput: 1440\nExplanation: There are 24 possible choices for the hours, and 60 possible choices for the minutes. In total, we have 24 * 60 = 1440 choices.\n\n&nbsp;\nConstraints:\n\n\ttime is a valid string of length 5 in the format \"hh:mm\".\n\t\"00\" <= hh <= \"23\"\n\t\"00\" <= mm <= \"59\"\n\tSome of the digits might be replaced with '?' and need to be replaced with digits from 0 to 9.",
        "solutions": [
            {
                "id": 2706336,
                "title": "c-simple-and-easy-to-understand-solution",
                "content": "<b> Up Vote if you like the solution\\n```\\n/*\\nFor mm there is no specific condition its as simple as 10 variation for last \\'?\\' and 6 variation for second last \\'?\\'\\nFor hh, there are three cases:\\n1. when both hh are ?? => simply results in 24 variation\\n2. whne first is ? and second is not => Again two cases, when non \\'?\\' is less than 4 ( 3 variations ) & greater than equal to 4 ( only 2 variations).\\n3.When second is ? and first is not => Again two cases, if non \\'?\\' is 2 or not. if equl to 2 => 4 variations other wise 10 variations.\\n*/\\n\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int ans = 1;\\n        if(time[4] == \\'?\\') ans = ans * 10;\\n        if(time[3] == \\'?\\') ans = ans * 6;\\n        \\n        if(time[0] == \\'?\\' && time[1] == \\'?\\') ans = ans * 24;\\n        else{\\n            if(time[1] == \\'?\\'){ \\n                if(time[0] == \\'2\\' ) ans = ans * 4;\\n                else ans = ans * 10;\\n            }\\n            if(time[0] == \\'?\\'){\\n                if(time[1] < \\'4\\') ans = ans * 3;\\n                else ans = ans * 2;\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```\\n\\n<b>Here is an article of my interview experience - A Journey to FAANG Company, I recomand you to go through this to know which all resources I have used & how I cracked interview at Amazon:\\nhttps://leetcode.com/discuss/interview-experience/3171859/Journey-to-a-FAANG-Company-Amazon-or-SDE2-(L5)-or-Bangalore-or-Oct-2022-Accepted",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\n/*\\nFor mm there is no specific condition its as simple as 10 variation for last \\'?\\' and 6 variation for second last \\'?\\'\\nFor hh, there are three cases:\\n1. when both hh are ?? => simply results in 24 variation\\n2. whne first is ? and second is not => Again two cases, when non \\'?\\' is less than 4 ( 3 variations ) & greater than equal to 4 ( only 2 variations).\\n3.When second is ? and first is not => Again two cases, if non \\'?\\' is 2 or not. if equl to 2 => 4 variations other wise 10 variations.\\n*/\\n\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int ans = 1;\\n        if(time[4] == \\'?\\') ans = ans * 10;\\n        if(time[3] == \\'?\\') ans = ans * 6;\\n        \\n        if(time[0] == \\'?\\' && time[1] == \\'?\\') ans = ans * 24;\\n        else{\\n            if(time[1] == \\'?\\'){ \\n                if(time[0] == \\'2\\' ) ans = ans * 4;\\n                else ans = ans * 10;\\n            }\\n            if(time[0] == \\'?\\'){\\n                if(time[1] < \\'4\\') ans = ans * 3;\\n                else ans = ans * 2;\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706332,
                "title": "python-elegant-short-regex",
                "content": "```\\nimport re\\n\\n\\nclass Solution:\\n    \"\"\"\\n    Time:   O(1)\\n    Memory: O(1)\\n    \"\"\"\\n\\n    def countTime(self, time: str) -> int:\\n        pattern = time.replace(\\'?\\', \\'.\\')\\n        return sum(\\n            re.fullmatch(pattern, f\\'{hour:02}:{minute:02}\\') is not None\\n            for hour in range(24)\\n            for minute in range(60)\\n        )\\n```\\n\\nIf you like this solution remember to **upvote it** to let me know.\\n\\n",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nimport re\\n\\n\\nclass Solution:\\n    \"\"\"\\n    Time:   O(1)\\n    Memory: O(1)\\n    \"\"\"\\n\\n    def countTime(self, time: str) -> int:\\n        pattern = time.replace(\\'?\\', \\'.\\')\\n        return sum(\\n            re.fullmatch(pattern, f\\'{hour:02}:{minute:02}\\') is not None\\n            for hour in range(24)\\n            for minute in range(60)\\n        )\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706741,
                "title": "structural-pattern-matching",
                "content": "Minutes are easy. For hours, we there could be be 1, 2, 3, 4, 10 or 24 combinations.\\n\\n**Python 3**\\nJust for fun - using structural pattern matching.\\n```python\\nclass Solution:\\n    def countTime(self, t: str) -> int:\\n        mm = (6 if t[3] == \\'?\\' else 1) * (10 if t[4] == \\'?\\' else 1)\\n        match [t[0], t[1]]:\\n            case (\\'?\\', \\'?\\'):\\n                return mm * 24\\n            case (\\'?\\', (\\'0\\' | \\'1\\' | \\'2\\' | \\'3\\')):\\n                return mm * 3\\n            case (\\'?\\', _):\\n                return mm * 2\\n            case ((\\'0\\' | \\'1\\'), \\'?\\'):\\n                return mm * 10\\n            case (_, \\'?\\'):\\n                return mm * 4\\n        return mm\\n```\\n\\n**C++**\\n```cpp\\nint countTime(string t) {\\n    int res = 1;\\n    if (t[0] == \\'?\\')\\n        res = t[1] == \\'?\\' ? 24 : t[1] < \\'4\\' ? 3 : 2;\\n    else if (t[1] == \\'?\\')\\n        res = t[0] < \\'2\\' ? 10 : 4; \\n    return res * (t[3] == \\'?\\' ? 6 : 1) * (t[4] == \\'?\\' ? 10 : 1);\\n}\\n```",
                "solutionTags": [
                    "Python3",
                    "C"
                ],
                "code": "```python\\nclass Solution:\\n    def countTime(self, t: str) -> int:\\n        mm = (6 if t[3] == \\'?\\' else 1) * (10 if t[4] == \\'?\\' else 1)\\n        match [t[0], t[1]]:\\n            case (\\'?\\', \\'?\\'):\\n                return mm * 24\\n            case (\\'?\\', (\\'0\\' | \\'1\\' | \\'2\\' | \\'3\\')):\\n                return mm * 3\\n            case (\\'?\\', _):\\n                return mm * 2\\n            case ((\\'0\\' | \\'1\\'), \\'?\\'):\\n                return mm * 10\\n            case (_, \\'?\\'):\\n                return mm * 4\\n        return mm\\n```\n```cpp\\nint countTime(string t) {\\n    int res = 1;\\n    if (t[0] == \\'?\\')\\n        res = t[1] == \\'?\\' ? 24 : t[1] < \\'4\\' ? 3 : 2;\\n    else if (t[1] == \\'?\\')\\n        res = t[0] < \\'2\\' ? 10 : 4; \\n    return res * (t[3] == \\'?\\' ? 6 : 1) * (t[4] == \\'?\\' ? 10 : 1);\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706587,
                "title": "python-fastest-100-easiest-solution-with-detailed-comments",
                "content": "This [**solution**](https://leetcode.com/submissions/detail/823084984/) employs a set of simple conditional statements. It demonstrated **28 ms runtime (100.00%)** and used **13.8 MB memory (75.00%)**. Time complexity is constant: **O(1)**. Space complexity is constant: **O(1)**. Detailed comments are provided.\\n\\n**IF YOU LIKE THIS SOLUTION, PLEASE UPVOTE.**\\n```\\nclass Solution:\\n    \\n    def countTime(self, time: str) -> int:\\n        \\n        # [1] if all symbols are digits, there is only 1 valid time\\n        t = 1\\n        \\n        # [2] if minute digits have unknown symbols, they independently\\n        #     generate additional combinations\\n        if time[3] == \"?\": t *= 6\\n        if time[4] == \"?\": t *= 10\\n\\n        # [3] however, digits in the number of hours are not independent\\n        if time[0:2] == \"??\":\\n            t *= 24\\n        elif time[0] == \"?\" and time[1] != \"?\": \\n            t *= 2 if time[1] in [\"4\", \"5\", \"6\", \"7\", \"8\", \"9\"] else 3\\n        elif time[1] == \"?\" and time[0] != \"?\": \\n            t *= 10 if time[0] in [\"0\", \"1\"] else 4\\n        \\n        return t\\n```\\n",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    \\n    def countTime(self, time: str) -> int:\\n        \\n        # [1] if all symbols are digits, there is only 1 valid time\\n        t = 1\\n        \\n        # [2] if minute digits have unknown symbols, they independently\\n        #     generate additional combinations\\n        if time[3] == \"?\": t *= 6\\n        if time[4] == \"?\": t *= 10\\n\\n        # [3] however, digits in the number of hours are not independent\\n        if time[0:2] == \"??\":\\n            t *= 24\\n        elif time[0] == \"?\" and time[1] != \"?\": \\n            t *= 2 if time[1] in [\"4\", \"5\", \"6\", \"7\", \"8\", \"9\"] else 3\\n        elif time[1] == \"?\" and time[0] != \"?\": \\n            t *= 10 if time[0] in [\"0\", \"1\"] else 4\\n        \\n        return t\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706437,
                "title": "java-easy-to-understand",
                "content": "```\\n   public int countTime(String time) {\\n        if (time.equals(\"??:??\")) return 24 * 60;\\n        int res = 1;\\n\\n        if (time.charAt(0) == \\'?\\' && time.charAt(1) == \\'?\\') {\\n            res *= 24;\\n        } else if (time.charAt(0) == \\'?\\'){\\n            res *= (time.charAt(1) - \\'0\\' >= 4 ? 2 : 3);\\n        } else if (time.charAt(1) == \\'?\\'){\\n            res *= (time.charAt(0) - \\'0\\' >= 2 ? 4 : 10);\\n        }\\n\\n        if (time.charAt(4) == \\'?\\') res *= 10;\\n        if (time.charAt(3) == \\'?\\') res *= 6;\\n        return res;\\n    }\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\n   public int countTime(String time) {\\n        if (time.equals(\"??:??\")) return 24 * 60;\\n        int res = 1;\\n\\n        if (time.charAt(0) == \\'?\\' && time.charAt(1) == \\'?\\') {\\n            res *= 24;\\n        } else if (time.charAt(0) == \\'?\\'){\\n            res *= (time.charAt(1) - \\'0\\' >= 4 ? 2 : 3);\\n        } else if (time.charAt(1) == \\'?\\'){\\n            res *= (time.charAt(0) - \\'0\\' >= 2 ? 4 : 10);\\n        }\\n\\n        if (time.charAt(4) == \\'?\\') res *= 10;\\n        if (time.charAt(3) == \\'?\\') res *= 6;\\n        return res;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2713672,
                "title": "readability-conciseness-balance",
                "content": "##### Java\\n```java\\npublic int countTime(String time) {\\n        char hoursFirst = time.charAt(0), hoursSecond = time.charAt(1), minutesFirst = time.charAt(3), minutesSecond = time.charAt(4);\\n        int minutesChoices = (minutesFirst == \\'?\\' ? 6 : 1) * (minutesSecond == \\'?\\' ? 10 : 1), hoursChoices = 1;\\n\\n        if (hoursFirst == \\'?\\')\\n            hoursChoices = hoursSecond == \\'?\\' ? 24 : (hoursSecond - \\'0\\' >= 4) ? 2 : 3;\\n        else if (hoursSecond == \\'?\\')\\n            hoursChoices = (hoursFirst - \\'0\\' == 2) ? 4 : 10;\\n\\n        return hoursChoices * minutesChoices;\\n    }\\n```\\n\\n##### C++\\n```c++\\npublic:\\n    int countTime(string time) {\\n        char hoursFirst = time[0], hoursSecond = time[1], minutesFirst = time[3], minutesSecond = time[4];\\n        int minutesChoices = (minutesFirst == \\'?\\' ? 6 : 1) * (minutesSecond == \\'?\\' ? 10 : 1), hoursChoices = 1;\\n\\n        if (hoursFirst == \\'?\\')\\n            hoursChoices = hoursSecond == \\'?\\' ? 24 : (hoursSecond - \\'0\\' >= 4) ? 2 : 3;\\n        else if (hoursSecond == \\'?\\')\\n            hoursChoices = (hoursFirst - \\'0\\' == 2) ? 4 : 10;\\n\\n        return hoursChoices * minutesChoices;\\n    }\\n```",
                "solutionTags": [
                    "Java",
                    "C"
                ],
                "code": "```java\\npublic int countTime(String time) {\\n        char hoursFirst = time.charAt(0), hoursSecond = time.charAt(1), minutesFirst = time.charAt(3), minutesSecond = time.charAt(4);\\n        int minutesChoices = (minutesFirst == \\'?\\' ? 6 : 1) * (minutesSecond == \\'?\\' ? 10 : 1), hoursChoices = 1;\\n\\n        if (hoursFirst == \\'?\\')\\n            hoursChoices = hoursSecond == \\'?\\' ? 24 : (hoursSecond - \\'0\\' >= 4) ? 2 : 3;\\n        else if (hoursSecond == \\'?\\')\\n            hoursChoices = (hoursFirst - \\'0\\' == 2) ? 4 : 10;\\n\\n        return hoursChoices * minutesChoices;\\n    }\\n```\n```c++\\npublic:\\n    int countTime(string time) {\\n        char hoursFirst = time[0], hoursSecond = time[1], minutesFirst = time[3], minutesSecond = time[4];\\n        int minutesChoices = (minutesFirst == \\'?\\' ? 6 : 1) * (minutesSecond == \\'?\\' ? 10 : 1), hoursChoices = 1;\\n\\n        if (hoursFirst == \\'?\\')\\n            hoursChoices = hoursSecond == \\'?\\' ? 24 : (hoursSecond - \\'0\\' >= 4) ? 2 : 3;\\n        else if (hoursSecond == \\'?\\')\\n            hoursChoices = (hoursFirst - \\'0\\' == 2) ? 4 : 10;\\n\\n        return hoursChoices * minutesChoices;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2706835,
                "title": "c-case-distinction-o-1-fast-and-clean-code",
                "content": "### Approach 1: case distinction\\n\\nWe are just looking at the different possible cases.\\n\\n```cpp\\n    static int countTime(const string& time) {\\n        int ans = 1;\\n        if (time[0] == \\'?\\') {\\n            if (time[1] == \\'?\\') {\\n                ans *= 24;\\n            } else if (time[1] <= \\'3\\') {\\n                ans *= 3;\\n            } else {\\n                ans *= 2;\\n            }\\n        } else if (time[1] == \\'?\\') {\\n            ans *= time[0] < \\'2\\' ? 10 : 4;\\n        }\\n        if (time[3] == \\'?\\') ans *= 6;\\n        if (time[4] == \\'?\\') ans *= 10;\\n        return ans;\\n    }\\n```\\n\\n**Complexity Analysis**\\n  * Time complexity: $$O(1)$$\\n  * Space complexity: $$O(1)$$\\n\\n_As always: Feedback, questions, and comments are welcome. Leaving an upvote sparks  joy! :)_\\n\\n**p.s. Join us on the [LeetCode The Hard Way Discord Server](https://discord.gg/hFUyVyWy2E)!**",
                "solutionTags": [
                    "C"
                ],
                "code": "```cpp\\n    static int countTime(const string& time) {\\n        int ans = 1;\\n        if (time[0] == \\'?\\') {\\n            if (time[1] == \\'?\\') {\\n                ans *= 24;\\n            } else if (time[1] <= \\'3\\') {\\n                ans *= 3;\\n            } else {\\n                ans *= 2;\\n            }\\n        } else if (time[1] == \\'?\\') {\\n            ans *= time[0] < \\'2\\' ? 10 : 4;\\n        }\\n        if (time[3] == \\'?\\') ans *= 6;\\n        if (time[4] == \\'?\\') ans *= 10;\\n        return ans;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2706397,
                "title": "backtracking",
                "content": "# Intuition:\\nHere we can see that there is way other than putting characters from `0` to `9` at every `?` and counting the total valid ways.\\n> This gives us intuition of using `Recursion` which we will use for finding different ways and for backtracking when all ways are explored for current state.\\n\\n# For every index in string we have two choices :\\n1. If character at i\\'th index is `\\'?\\'`, then find all count of ways by replacing from 0 to 9 on it & Backtrack.\\n2. If character at i\\'th index is not \\'?\\', simple move ahead get count of next index.    \\n# C++\\t\\n\\tint countTime(string time){\\n        return solve(time, 0);\\n    }\\n\\n    int convert(string &s, int i){\\n        return (s[i] - \\'0\\') *10 + (s[i + 1] - \\'0\\');\\n    }\\n\\n    int solve(string &t, int i){\\n\\n        // Base Case for return 1, if the string is of valid format, else return 0\\n        if (i == 5){\\n            int a = convert(t, 0) , b = convert(t, 3);\\n            return a >= 0 and a <= 23 and b >= 0 and b <= 59;\\n        }\\n\\n        if (t[i] == \\'?\\'){\\n            int ways = 0;\\n                    \\n            for (char ch = \\'0\\'; ch <= \\'9\\'; ch++){\\n                t[i] = ch;\\n                ways += solve(t, i + 1);\\n            }\\n                    \\n            //Backtrack\\n            t[i] = \\'?\\';\\n            return ways;\\n        }\\n        \\n        return solve(t, i + 1);\\n    }",
                "solutionTags": [
                    "C"
                ],
                "code": "# Intuition:\\nHere we can see that there is way other than putting characters from `0` to `9` at every `?` and counting the total valid ways.\\n> This gives us intuition of using `Recursion` which we will use for finding different ways and for backtracking when all ways are explored for current state.\\n\\n# For every index in string we have two choices :\\n1. If character at i\\'th index is `\\'?\\'`, then find all count of ways by replacing from 0 to 9 on it & Backtrack.\\n2. If character at i\\'th index is not \\'?\\', simple move ahead get count of next index.    \\n# C++\\t\\n\\tint countTime(string time){\\n        return solve(time, 0);\\n    }\\n\\n    int convert(string &s, int i){\\n        return (s[i] - \\'0\\') *10 + (s[i + 1] - \\'0\\');\\n    }\\n\\n    int solve(string &t, int i){\\n\\n        // Base Case for return 1, if the string is of valid format, else return 0\\n        if (i == 5){\\n            int a = convert(t, 0) , b = convert(t, 3);\\n            return a >= 0 and a <= 23 and b >= 0 and b <= 59;\\n        }\\n\\n        if (t[i] == \\'?\\'){\\n            int ways = 0;\\n                    \\n            for (char ch = \\'0\\'; ch <= \\'9\\'; ch++){\\n                t[i] = ch;\\n                ways += solve(t, i + 1);\\n            }\\n                    \\n            //Backtrack\\n            t[i] = \\'?\\';\\n            return ways;\\n        }\\n        \\n        return solve(t, i + 1);\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 2706665,
                "title": "understandable-if-else-python-solution",
                "content": "```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        res = 1\\n\\t\\t# split hour and minute digits\\n        h1, h2, _ ,  m1, m2 = time\\n        \\n        if h1 == \"?\" and h2 == \"?\":\\n            res*=24\\n        elif h1 == \"?\":\\n            if int(h2) >=4:\\n                res*=2\\n            else:\\n                res*=3\\n                \\n        elif h2 == \"?\":\\n            if int(h1) <= 1:\\n                res*=10\\n            elif h1 == \"2\":\\n                res*=4\\n                \\n        if m1 == \"?\" and m2 == \"?\":\\n            res*=60\\n        elif m1 == \"?\":\\n            res*=6\\n        elif m2 == \"?\":\\n            res*=10\\n        \\n        return res\\n        \\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        res = 1\\n\\t\\t# split hour and minute digits\\n        h1, h2, _ ,  m1, m2 = time\\n        \\n        if h1 == \"?\" and h2 == \"?\":\\n            res*=24\\n        elif h1 == \"?\":\\n            if int(h2) >=4:\\n                res*=2\\n            else:\\n                res*=3\\n                \\n        elif h2 == \"?\":\\n            if int(h1) <= 1:\\n                res*=10\\n            elif h1 == \"2\":\\n                res*=4\\n                \\n        if m1 == \"?\" and m2 == \"?\":\\n            res*=60\\n        elif m1 == \"?\":\\n            res*=6\\n        elif m2 == \"?\":\\n            res*=10\\n        \\n        return res\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706323,
                "title": "c-brute-force",
                "content": "```\\nclass Solution \\n{\\npublic:\\n    int countTime(string time) \\n    {   \\n        int ans=1;\\n        \\n        if(time[0]==\\'?\\' && time[1]==\\'?\\') //when first both HH are ?? of (HH:MM)\\n                ans *= 24;   \\n        \\n        else\\n        {\\n            if(time[0]==\\'?\\')  //when first H is ? and second H has some value of (HH:MM)\\n            {\\n                if(time[1] < \\'4\\') \\n                    ans *= 3;\\n                else\\n                    ans *= 2;\\n            }\\n\\n            if(time[1]==\\'?\\') //when second H is ? and first H has some value of (HH:MM)\\n            {\\n                if(time[0] < \\'2\\')\\n                    ans *= 10;\\n                else\\n                    ans *= 4;\\n            }\\n        }\\n        \\n        if(time[3]==\\'?\\') //for first M of (HH:MM)\\n        {\\n            ans *= 6;\\n        }\\n\\n        if(time[4]==\\'?\\') // for second M of (HH:MM)\\n        {\\n            ans *= 10;\\n        }       \\n            \\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution \\n{\\npublic:\\n    int countTime(string time) \\n    {   \\n        int ans=1;\\n        \\n        if(time[0]==\\'?\\' && time[1]==\\'?\\') //when first both HH are ?? of (HH:MM)\\n                ans *= 24;   \\n        \\n        else\\n        {\\n            if(time[0]==\\'?\\')  //when first H is ? and second H has some value of (HH:MM)\\n            {\\n                if(time[1] < \\'4\\') \\n                    ans *= 3;\\n                else\\n                    ans *= 2;\\n            }\\n\\n            if(time[1]==\\'?\\') //when second H is ? and first H has some value of (HH:MM)\\n            {\\n                if(time[0] < \\'2\\')\\n                    ans *= 10;\\n                else\\n                    ans *= 4;\\n            }\\n        }\\n        \\n        if(time[3]==\\'?\\') //for first M of (HH:MM)\\n        {\\n            ans *= 6;\\n        }\\n\\n        if(time[4]==\\'?\\') // for second M of (HH:MM)\\n        {\\n            ans *= 10;\\n        }       \\n            \\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706329,
                "title": "java-easy-solution",
                "content": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        int a = 1;\\n        int b = 1;\\n        int c = 1;\\n        int d = 1;\\n        if(time.charAt(0)==\\'?\\') {\\n            if(time.charAt(1)==\\'0\\' || time.charAt(1)==\\'1\\' || time.charAt(1)==\\'2\\' || time.charAt(1)==\\'3\\' || time.charAt(1)==\\'?\\') a = 3;\\n            else a = 2;\\n        }\\n        if(time.charAt(1)==\\'?\\') {\\n            if(time.charAt(0)==\\'0\\') b = 10;\\n            else if(time.charAt(0)==\\'1\\') b = 10;\\n            else if(time.charAt(0)==\\'2\\') b = 4;\\n            else if(time.charAt(0)==\\'?\\') b = 8;\\n \\n        }\\n        if(time.charAt(3)==\\'?\\') {\\n            c = 6;\\n        }\\n        if(time.charAt(4)==\\'?\\') {\\n            d = 10;\\n        }\\n        \\n        \\n        return a*b*c*d;\\n    }\\n}\\n\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        int a = 1;\\n        int b = 1;\\n        int c = 1;\\n        int d = 1;\\n        if(time.charAt(0)==\\'?\\') {\\n            if(time.charAt(1)==\\'0\\' || time.charAt(1)==\\'1\\' || time.charAt(1)==\\'2\\' || time.charAt(1)==\\'3\\' || time.charAt(1)==\\'?\\') a = 3;\\n            else a = 2;\\n        }\\n        if(time.charAt(1)==\\'?\\') {\\n            if(time.charAt(0)==\\'0\\') b = 10;\\n            else if(time.charAt(0)==\\'1\\') b = 10;\\n            else if(time.charAt(0)==\\'2\\') b = 4;\\n            else if(time.charAt(0)==\\'?\\') b = 8;\\n \\n        }\\n        if(time.charAt(3)==\\'?\\') {\\n            c = 6;\\n        }\\n        if(time.charAt(4)==\\'?\\') {\\n            d = 10;\\n        }\\n        \\n        \\n        return a*b*c*d;\\n    }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2710926,
                "title": "python-5-lines-t-m-100-75",
                "content": "```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n\\n        f = lambda x,y: (x[0] == \\'?\\' or x[0] == y[0]) and (x[1] == \\'?\\' or x[1] == y[1])\\n\\n        zeros = {\\'0\\'+str(digit) for digit in range(10)}\\n\\n        hrs = zeros|{str(num) for num in range(10,24)}\\n        mns = zeros|{str(num) for num in range(10,60)}\\n\\n        return  sum(f(time[:2], h) for h in hrs) * sum(f(time[3:], m) for m in mns)\\n```\\n[https://leetcode.com/submissions/detail/823847551/](http://)\\n\\n.\\n____________\\nUPDATE:\\n@ Ajay_Reddy:  Here\\'s an annotated version:\\n\\n```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n\\n        f = lambda x,y: ((x[0] == \\'?\\' or x[0] == y[0]) and  # <-- f is a boolean function that determines\\n                         (x[1] == \\'?\\' or x[1] == y[1]))     #     whether a two-char str x is with a \\'?\\' is\\n                                                            #     possibly equal to a two-char str y when\\n                                                            #     \\'?\\' is replaced with an appropriate digit.    \\n                         \\n\\n        zeros = {\\'0\\'+str(digit) for digit in range(10)}     # <-- {\\'01\\',\\'02\\', ... , \\'09\\'}\\n\\n        hrs = zeros|{str(num) for num in range(10,24)}      # <-- {\\'01\\',\\'02\\', ... , \\'09\\', \\'10\\', ... , \\'24\\'} \\n        mns = zeros|{str(num) for num in range(10,60)}      # <-- {\\'01\\',\\'02\\', ... , \\'09\\', \\'10\\', ... , \\'60\\'}\\n\\n        return (sum([f(time[:2], h) for h in hrs]) *        # <-- determine the count of possible hrs\\n                sum([f(time[3:], m) for m in mns]))         # <-- determine the count of possible mins\\n                                                            #     return the product of these two counts",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n\\n        f = lambda x,y: (x[0] == \\'?\\' or x[0] == y[0]) and (x[1] == \\'?\\' or x[1] == y[1])\\n\\n        zeros = {\\'0\\'+str(digit) for digit in range(10)}\\n\\n        hrs = zeros|{str(num) for num in range(10,24)}\\n        mns = zeros|{str(num) for num in range(10,60)}\\n\\n        return  sum(f(time[:2], h) for h in hrs) * sum(f(time[3:], m) for m in mns)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706353,
                "title": "python-java-solution",
                "content": "\\tclass Solution:\\n\\t\\tdef countTime(self, time: str) -> int:\\n\\t\\t\\thh = 1\\n\\t\\t\\tmm = 1\\n\\t\\t\\tif time[0] == \"?\" and time[1] != \"?\":\\n\\t\\t\\t\\tif time[1] <= \"3\":\\n\\t\\t\\t\\t\\thh *= 3\\n\\t\\t\\t\\telse:\\n\\t\\t\\t\\t\\thh *= 2\\n\\t\\t\\telif time[0] != \"?\" and time[1] == \"?\":\\n\\t\\t\\t\\tif time[0] <= \"1\":\\n\\t\\t\\t\\t\\thh *= 10\\n\\t\\t\\t\\telse:\\n\\t\\t\\t\\t\\thh *= 4\\n\\t\\t\\telif time[0] == \"?\" and time[1] == \"?\":\\n\\t\\t\\t\\thh *= 24\\n\\t\\t\\tif time[3] == \"?\":\\n\\t\\t\\t\\tmm *= 6\\n\\t\\t\\tif time[4] == \"?\":\\n\\t\\t\\t\\tmm *= 10\\n\\t\\t\\treturn hh * mm\\n\\n\\n\\tclass Solution {\\n\\t\\tpublic int countTime(String time) {\\n\\t\\t\\tint hh = 1;\\n\\t\\t\\tint mm = 1;\\n\\t\\t\\tif (time.charAt(0) == \\'?\\' && time.charAt(1) != \\'?\\') {\\n\\t\\t\\t\\tif (time.charAt(1) <= \\'3\\') {\\n\\t\\t\\t\\t\\thh *= 3;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\thh *= 2;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if (time.charAt(0) != \\'?\\' && time.charAt(1) == \\'?\\') {\\n\\t\\t\\t\\tif (time.charAt(0) <= \\'1\\') {\\n\\t\\t\\t\\t\\thh *= 10;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\thh *= 4;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if (time.charAt(0) == \\'?\\' && time.charAt(1) == \\'?\\') {\\n\\t\\t\\t\\thh *= 24;\\n\\t\\t\\t}\\n\\t\\t\\tif (time.charAt(3) == \\'?\\') {\\n\\t\\t\\t\\tmm *= 6;\\n\\t\\t\\t}\\n\\t\\t\\tif (time.charAt(4) == \\'?\\') {\\n\\t\\t\\t\\tmm *= 10;\\n\\t\\t\\t}\\n\\t\\t\\treturn hh * mm;\\n\\t\\t}\\n\\t}",
                "solutionTags": [],
                "code": "class Solution:\\n\\t\\tdef countTime(self, time: str) -> int:\\n\\t\\t\\thh = 1\\n\\t\\t\\tmm = 1\\n\\t\\t\\tif time[0] == \"?\" and time[1] != \"?\":\\n\\t\\t\\t\\tif time[1] <= \"3\":\\n\\t\\t\\t\\t\\thh *= 3\\n\\t\\t\\t\\telse:\\n\\t\\t\\t\\t\\thh *= 2\\n\\t\\t\\telif time[0] != \"?\" and time[1] == \"?\":\\n\\t\\t\\t\\tif time[0] <= \"1\":\\n\\t\\t\\t\\t\\thh *= 10\\n\\t\\t\\t\\telse:\\n\\t\\t\\t\\t\\thh *= 4\\n\\t\\t\\telif time[0] == \"?\" and time[1] == \"?\":\\n\\t\\t\\t\\thh *= 24\\n\\t\\t\\tif time[3] == \"?\":\\n\\t\\t\\t\\tmm *= 6\\n\\t\\t\\tif time[4] == \"?\":\\n\\t\\t\\t\\tmm *= 10\\n\\t\\t\\treturn hh * mm\\n\\n\\n\\tclass Solution {\\n\\t\\tpublic int countTime(String time) {\\n\\t\\t\\tint hh = 1;\\n\\t\\t\\tint mm = 1;\\n\\t\\t\\tif (time.charAt(0) == \\'?\\' && time.charAt(1) != \\'?\\') {\\n\\t\\t\\t\\tif (time.charAt(1) <= \\'3\\') {\\n\\t\\t\\t\\t\\thh *= 3;\\n\\t\\t\\t\\t}",
                "codeTag": "Java"
            },
            {
                "id": 2706726,
                "title": "python-no-math-simple-pattern-check-o-1-clean-concise",
                "content": "# Code\\n```python\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        def getString2Chars(value):\\n            if value < 10:\\n                return \"0\" + str(value)\\n            return str(value)\\n        \\n        def isMatching(clock, pattern):\\n            s = getString2Chars(clock)\\n            if pattern[0] != \"?\" and s[0] != pattern[0] or pattern[1] != \"?\" and s[1] != pattern[1]:\\n                return False\\n            return True\\n            \\n        \\n        hPattern, mPattern = time.split(\":\")\\n        ans = 0\\n        hhCnt, mmCnt = 0, 0\\n        for hh in range(24):\\n            if isMatching(hh, hPattern):\\n                hhCnt += 1\\n        for mm in range(60):\\n             if isMatching(mm, mPattern):\\n                mmCnt += 1\\n        return hhCnt * mmCnt\\n```\\nComplexity:\\n- Time & Space: `O(1)`",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```python\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        def getString2Chars(value):\\n            if value < 10:\\n                return \"0\" + str(value)\\n            return str(value)\\n        \\n        def isMatching(clock, pattern):\\n            s = getString2Chars(clock)\\n            if pattern[0] != \"?\" and s[0] != pattern[0] or pattern[1] != \"?\" and s[1] != pattern[1]:\\n                return False\\n            return True\\n            \\n        \\n        hPattern, mPattern = time.split(\":\")\\n        ans = 0\\n        hhCnt, mmCnt = 0, 0\\n        for hh in range(24):\\n            if isMatching(hh, hPattern):\\n                hhCnt += 1\\n        for mm in range(60):\\n             if isMatching(mm, mPattern):\\n                mmCnt += 1\\n        return hhCnt * mmCnt\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706369,
                "title": "easy-short-efficient-clean-code",
                "content": "```\\nclass Solution {\\ntypedef long long ll;\\npublic:\\n    bool valid(const string&s){\\n        ll h=stoll(s.substr(0, 2)), m=stoll(s.substr(3, 2));\\n        return (h>=0 && h<=23 && m>=0 && m<=59);\\n    }\\n    int countTime(string&s, ll in=0) {\\n        if(in==5){\\n            return valid(s);\\n        }\\n        if(s[in]!=\\'?\\'){\\n            return countTime(s,in+1);\\n        }\\n        ll ans=0;\\n        for(ll i=0;i<=9;++i){\\n            s[in]=\\'0\\'+i;\\n            ans+=countTime(s, in+1);\\n        }\\n        s[in]=\\'?\\';\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Recursion"
                ],
                "code": "```\\nclass Solution {\\ntypedef long long ll;\\npublic:\\n    bool valid(const string&s){\\n        ll h=stoll(s.substr(0, 2)), m=stoll(s.substr(3, 2));\\n        return (h>=0 && h<=23 && m>=0 && m<=59);\\n    }\\n    int countTime(string&s, ll in=0) {\\n        if(in==5){\\n            return valid(s);\\n        }\\n        if(s[in]!=\\'?\\'){\\n            return countTime(s,in+1);\\n        }\\n        ll ans=0;\\n        for(ll i=0;i<=9;++i){\\n            s[in]=\\'0\\'+i;\\n            ans+=countTime(s, in+1);\\n        }\\n        s[in]=\\'?\\';\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2783322,
                "title": "c-solution",
                "content": "``` C++ []\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        vector<int> perm;\\n        if (time[0] == \\'?\\') {\\n            if (time[1] != \\'?\\' && time[1]-48<=3) perm.push_back(3);\\n            else if (time[1] != \\'?\\' && time[1]-48>=4) perm.push_back(2);\\n            else if (time[1] == \\'?\\') perm.push_back(24);\\n        }\\n        if (time[1] == \\'?\\') {\\n            if (time[0] != \\'?\\' && time[0]-48<=1) perm.push_back(10);\\n            else if (time[0] != \\'?\\' && time[0]-48==2) perm.push_back(4);\\n        }\\n        if (time[3] == \\'?\\') perm.push_back(6);\\n        if (time[4] == \\'?\\') perm.push_back(10);\\n        \\n        int ans = 1;\\n        for (auto x:perm) ans*=x;\\n\\n        return ans;\\n    }\\n    \\n    \\n};\\n```\\n\\n*Upvote if solution helped*",
                "solutionTags": [
                    "C++"
                ],
                "code": "``` C++ []\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        vector<int> perm;\\n        if (time[0] == \\'?\\') {\\n            if (time[1] != \\'?\\' && time[1]-48<=3) perm.push_back(3);\\n            else if (time[1] != \\'?\\' && time[1]-48>=4) perm.push_back(2);\\n            else if (time[1] == \\'?\\') perm.push_back(24);\\n        }\\n        if (time[1] == \\'?\\') {\\n            if (time[0] != \\'?\\' && time[0]-48<=1) perm.push_back(10);\\n            else if (time[0] != \\'?\\' && time[0]-48==2) perm.push_back(4);\\n        }\\n        if (time[3] == \\'?\\') perm.push_back(6);\\n        if (time[4] == \\'?\\') perm.push_back(10);\\n        \\n        int ans = 1;\\n        for (auto x:perm) ans*=x;\\n\\n        return ans;\\n    }\\n    \\n    \\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2708694,
                "title": "brute-force-generate-all-possible-times-click-at-your-own-risk",
                "content": "Just replace each \\'?\\' with all possible values (0-9) and store each string in an array and check if the time is valid\\n```\\nclass Solution {\\npublic:\\n    void helper(string time, int i , string t, vector<string>& times) {\\n        if (i == time.size()) {\\n            times.push_back(t);\\n            return;\\n        }\\n        if (time[i] == \\'?\\') {\\n            string chars = \"0123456789\";\\n            for (auto e : chars)\\n                helper(time, i + 1, t + e, times);\\n        }\\n        else\\n            helper(time, i + 1, t + time[i], times);\\n    }\\n\\t\\n\\t// returns true if time is valid\\n    bool isValid(string time) {\\n\\t\\t// get the hours\\n        int hrs;\\n\\t\\t// handling preceeding zeros\\n        if (time[0] == \\'0\\')\\n            hrs = time[1] - \\'0\\';\\n        else\\n            hrs = stoi(time.substr(0, 2));\\n\\t\\t// get the mins\\n        int mins;\\n        if (time[3] == \\'0\\')\\n            mins = time[3] - \\'0\\';\\n        else\\n            mins = stoi(time.substr(3, 2));\\n        return hrs <= 23 and mins <= 59;\\n    }\\n\\t\\n    int countTime(string time) {\\n        vector<string> times;\\n\\t\\t// generates all possible times and stores it in  arr - times.\\n        helper(time, 0, \"\", times);\\n        int res = 0;\\n        for (auto t : times) if (isValid(t)) res++;\\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "Recursion"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    void helper(string time, int i , string t, vector<string>& times) {\\n        if (i == time.size()) {\\n            times.push_back(t);\\n            return;\\n        }\\n        if (time[i] == \\'?\\') {\\n            string chars = \"0123456789\";\\n            for (auto e : chars)\\n                helper(time, i + 1, t + e, times);\\n        }\\n        else\\n            helper(time, i + 1, t + time[i], times);\\n    }\\n\\t\\n\\t// returns true if time is valid\\n    bool isValid(string time) {\\n\\t\\t// get the hours\\n        int hrs;\\n\\t\\t// handling preceeding zeros\\n        if (time[0] == \\'0\\')\\n            hrs = time[1] - \\'0\\';\\n        else\\n            hrs = stoi(time.substr(0, 2));\\n\\t\\t// get the mins\\n        int mins;\\n        if (time[3] == \\'0\\')\\n            mins = time[3] - \\'0\\';\\n        else\\n            mins = stoi(time.substr(3, 2));\\n        return hrs <= 23 and mins <= 59;\\n    }\\n\\t\\n    int countTime(string time) {\\n        vector<string> times;\\n\\t\\t// generates all possible times and stores it in  arr - times.\\n        helper(time, 0, \"\", times);\\n        int res = 0;\\n        for (auto t : times) if (isValid(t)) res++;\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706756,
                "title": "javascript-solution-81ms-array-methods",
                "content": "```\\nvar countTime = function(time) {\\n    let [hours,minutes] = time.split(\\':\\');\\n    let result = [];\\n    if(hours == \\'??\\') result.push(24);\\n    else{\\n        if(hours[0] == \\'?\\'){\\n            hours[1]>3?result.push(2):result.push(3)\\n        } \\n        if(hours[1] == \\'?\\'){\\n            hours[0]==2?result.push(4):result.push(10) \\n        }   \\n    }\\n    if(minutes[0] == \\'?\\'){\\n        result.push(6)\\n    } \\n    if(minutes[1] == \\'?\\'){\\n        result.push(10) \\n    }\\n    return result.reduce((a,b)=>a*b,1);\\n};\\n```",
                "solutionTags": [
                    "JavaScript",
                    "Greedy"
                ],
                "code": "```\\nvar countTime = function(time) {\\n    let [hours,minutes] = time.split(\\':\\');\\n    let result = [];\\n    if(hours == \\'??\\') result.push(24);\\n    else{\\n        if(hours[0] == \\'?\\'){\\n            hours[1]>3?result.push(2):result.push(3)\\n        } \\n        if(hours[1] == \\'?\\'){\\n            hours[0]==2?result.push(4):result.push(10) \\n        }   \\n    }\\n    if(minutes[0] == \\'?\\'){\\n        result.push(6)\\n    } \\n    if(minutes[1] == \\'?\\'){\\n        result.push(10) \\n    }\\n    return result.reduce((a,b)=>a*b,1);\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2706356,
                "title": "c-simple-solution-easy-to-understand",
                "content": "\\n# Approach\\nSimple Maths\\n# Complexity\\n- Time complexity:O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n     int ans=1;\\n       \\n       if(time[0]==\\'?\\' and time[1]!=\\'?\\')\\n       {\\n           if(time[1]>=\\'4\\' )\\n           ans*=2;\\n           else\\n               ans*=3;\\n       }\\n        if(time[1]==\\'?\\' )\\n        {\\n            if(time[0]==\\'1\\')\\n            ans*=10;\\n            else if(time[0]==\\'2\\')\\n            {\\n                ans*=4;\\n            }\\n            else if(time[0]==\\'0\\')\\n            {\\n                ans*=10;\\n            }\\n            else\\n            {\\n                ans*=24;\\n            }\\n        }\\n        if(time[3]==\\'?\\' and time[4]!=\\'?\\')\\n            ans*=6;\\n        if(time[4]==\\'?\\')\\n        {\\n            if(time[3]==\\'?\\')\\n            {\\n                ans*=60;\\n            }\\n            else \\n            {\\n                ans*=10;\\n            }\\n           \\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n     int ans=1;\\n       \\n       if(time[0]==\\'?\\' and time[1]!=\\'?\\')\\n       {\\n           if(time[1]>=\\'4\\' )\\n           ans*=2;\\n           else\\n               ans*=3;\\n       }\\n        if(time[1]==\\'?\\' )\\n        {\\n            if(time[0]==\\'1\\')\\n            ans*=10;\\n            else if(time[0]==\\'2\\')\\n            {\\n                ans*=4;\\n            }\\n            else if(time[0]==\\'0\\')\\n            {\\n                ans*=10;\\n            }\\n            else\\n            {\\n                ans*=24;\\n            }\\n        }\\n        if(time[3]==\\'?\\' and time[4]!=\\'?\\')\\n            ans*=6;\\n        if(time[4]==\\'?\\')\\n        {\\n            if(time[3]==\\'?\\')\\n            {\\n                ans*=60;\\n            }\\n            else \\n            {\\n                ans*=10;\\n            }\\n           \\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706349,
                "title": "python-commented",
                "content": "```\\n# 6208. Number of Valid Clock Times\\n# just generate all xx:yy\\n# and count the matches\\n\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        match = lambda s, time: all(time[i] == \\'?\\' or s[i] == time[i] for i in range(5))\\n        s = lambda i: str(i) if i >= 10 else \\'0\\' + str(i)\\n\\n        return sum(match(s(i) +\\':\\'+ s(j), time) for i in range(24) for j in range(60))\\n```",
                "solutionTags": [],
                "code": "```\\n# 6208. Number of Valid Clock Times\\n# just generate all xx:yy\\n# and count the matches\\n\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        match = lambda s, time: all(time[i] == \\'?\\' or s[i] == time[i] for i in range(5))\\n        s = lambda i: str(i) if i >= 10 else \\'0\\' + str(i)\\n\\n        return sum(match(s(i) +\\':\\'+ s(j), time) for i in range(24) for j in range(60))\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2854781,
                "title": "java-easy-solution-beats-100",
                "content": "# Intuition\\nFigure out what will be the possible cases for each *?* given.\\n\\n# Complexity\\n- Time complexity: $$O(1)$$ \\n\\n- Space complexity: $$O(1)$$\\n\\n# Code\\n```\\nclass Solution {\\n    public int countTime(String time) {\\n        int choices = 1;\\n\\n        if (time.charAt(0) == \\'?\\' && time.charAt(1) == \\'?\\') {\\n            choices *= 24;\\n        }\\n\\n        if (time.charAt(0) == \\'?\\' && time.charAt(1) != \\'?\\') {\\n            choices *= (time.charAt(1) < \\'4\\' ? 3 : 2);\\n        } \\n\\n        if (time.charAt(1) == \\'?\\' && time.charAt(0) != \\'?\\') {\\n            choices *= (time.charAt(0) < \\'2\\' ? 10 : 4);\\n        }\\n\\n        if (time.charAt(3) == \\'?\\') {\\n            choices *= 6;\\n        }\\n\\n        if (time.charAt(4) == \\'?\\') {\\n            choices *= 10;\\n        }\\n\\n        return choices;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        int choices = 1;\\n\\n        if (time.charAt(0) == \\'?\\' && time.charAt(1) == \\'?\\') {\\n            choices *= 24;\\n        }\\n\\n        if (time.charAt(0) == \\'?\\' && time.charAt(1) != \\'?\\') {\\n            choices *= (time.charAt(1) < \\'4\\' ? 3 : 2);\\n        } \\n\\n        if (time.charAt(1) == \\'?\\' && time.charAt(0) != \\'?\\') {\\n            choices *= (time.charAt(0) < \\'2\\' ? 10 : 4);\\n        }\\n\\n        if (time.charAt(3) == \\'?\\') {\\n            choices *= 6;\\n        }\\n\\n        if (time.charAt(4) == \\'?\\') {\\n            choices *= 10;\\n        }\\n\\n        return choices;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2799275,
                "title": "java-c-py-100-0-ms-faster-simple-time-space-o-1",
                "content": "# UPVOTE PLEASE \\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int countTime(String time) {\\n        if(time.equals(\"??:??\")) return 1440;\\n        int ans=1;\\n        if(time.charAt(0)==\\'?\\' && time.charAt(1)==\\'?\\') ans*=24;\\n        else if(time.charAt(0)==\\'?\\') ans*=(time.charAt(1)-\\'0\\'>=4)?2:3;\\n        else if(time.charAt(1)==\\'?\\') ans *=(time.charAt(0)-\\'0\\'>=2)?4:10;\\n        if(time.charAt(3)==\\'?\\') ans *=6;\\n        if(time.charAt(4)==\\'?\\') ans *=10;\\n        return ans;\\n    }\\n}\\n\\n\\nCPP:\\n\\nint countTime(string time) {\\n        if(time==\"??:??\") return 1440;\\n        int ans=1;\\n        if(time[0]==\\'?\\' && time[1]==\\'?\\') ans*=24;\\n        else if(time[0]==\\'?\\') ans*=(time[1]-\\'0\\'>=4)?2:3;\\n        else if(time[1]==\\'?\\') ans *=(time[0]-\\'0\\'>=2)?4:10;\\n        if(time[3]==\\'?\\') ans *=6;\\n        if(time[4]==\\'?\\') ans *=10;\\n        return ans;\\n    }\\n\\n\\nPY :\\n\\ndef countTime(self, time: str) -> int:\\n        if(time==\"??:??\"): return 1440;\\n        ans=1;\\n        if(time[0]==\\'?\\' and time[1]==\\'?\\'): ans=ans*24;\\n        elif (time[0]==\\'?\\'):  \\n            if(ord(time[1])-ord(\\'0\\')>=4): ans =  ans*2; \\n            else: ans=ans*3;\\n        elif (time[1]==\\'?\\'):  \\n            if(ord(time[0])-ord(\\'0\\')>=2): ans = ans*4;\\n            else:ans= ans*10;\\n        if(time[3]==\\'?\\'): ans = ans * 6;\\n        if(time[4]==\\'?\\'): ans = ans * 10;\\n        return ans;CPP\\n```",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        if(time.equals(\"??:??\")) return 1440;\\n        int ans=1;\\n        if(time.charAt(0)==\\'?\\' && time.charAt(1)==\\'?\\') ans*=24;\\n        else if(time.charAt(0)==\\'?\\') ans*=(time.charAt(1)-\\'0\\'>=4)?2:3;\\n        else if(time.charAt(1)==\\'?\\') ans *=(time.charAt(0)-\\'0\\'>=2)?4:10;\\n        if(time.charAt(3)==\\'?\\') ans *=6;\\n        if(time.charAt(4)==\\'?\\') ans *=10;\\n        return ans;\\n    }\\n}\\n\\n\\nCPP:\\n\\nint countTime(string time) {\\n        if(time==\"??:??\") return 1440;\\n        int ans=1;\\n        if(time[0]==\\'?\\' && time[1]==\\'?\\') ans*=24;\\n        else if(time[0]==\\'?\\') ans*=(time[1]-\\'0\\'>=4)?2:3;\\n        else if(time[1]==\\'?\\') ans *=(time[0]-\\'0\\'>=2)?4:10;\\n        if(time[3]==\\'?\\') ans *=6;\\n        if(time[4]==\\'?\\') ans *=10;\\n        return ans;\\n    }\\n\\n\\nPY :\\n\\ndef countTime(self, time: str) -> int:\\n        if(time==\"??:??\"): return 1440;\\n        ans=1;\\n        if(time[0]==\\'?\\' and time[1]==\\'?\\'): ans=ans*24;\\n        elif (time[0]==\\'?\\'):  \\n            if(ord(time[1])-ord(\\'0\\')>=4): ans =  ans*2; \\n            else: ans=ans*3;\\n        elif (time[1]==\\'?\\'):  \\n            if(ord(time[0])-ord(\\'0\\')>=2): ans = ans*4;\\n            else:ans= ans*10;\\n        if(time[3]==\\'?\\'): ans = ans * 6;\\n        if(time[4]==\\'?\\'): ans = ans * 10;\\n        return ans;CPP\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2762801,
                "title": "c-standard-combination-problem-mathematics-explained",
                "content": "# Thought Process:\\n```\\nInput: time = \"??:??\"\\nOutput: 1440\\n```\\nThe above testcase is the solution!But, how?\\nLet\\'s see couple of cases possible :-\\n\\n# *For Hours (hh)*\\n**Case 1**\\n```hh = \"??\"```\\nSince **hh[0]** and **hh[1]** both are unknown. Therefore 24 combinations are possible, hence**ans=24**\\n\\n**Case 3**\\n```hh = \"?(0-9)\" ```\\n\\n*Subcase 1* \\n```hh = \"?(0-3)\"```\\nIf **hh[1] is between 0 and 3, we can have hh[0] as 0, 1 ,2.** Therefore, 3 combinations are possible. Hence **ans=3**\\n\\n*Subcase 2* \\n```hh = \"?(4-9)\"```\\nIf **hh[1] is between 4 and 9, we can have hh[0] as 0, 1**. Therefore, 2 combinations are possible.  Hence **ans=2**\\n\\n**Case 4**\\n```hh = \"(0-1)?\"```\\nIf **hh[0] is either 0 or 1**. Therefore, 10 combinations **(? = (0-9))** are possible. Hence, **ans=10**\\n\\n**Case 5**\\n```hh = \"2?\"```\\nPossible combinations are **20,21,22,23**, therefore **ans=4**\\n\\n# *For Minutes*\\n**For mm[0] there are 6 possibilities (0-5) whereas for mm[1] there are 10 possibilities (0-9).**\\n\\n**Case 1**\\n```mm = \"??\"```\\nPossible combinations are 60. Therefore **ans2 = 60**.\\n\\n**Case 2**\\n```mm = \"?(0-9)\"```\\nPossible combinations are 6. Therefore **ans2 = 6**.\\n\\n**Case 3**\\n```mm = \"(0-5)?\"```\\nPossible combinations are 10. Therefore **ans2 = 10**.\\n\\nFinal result would be **ans * ans2**.\\n\\n```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int ans = 1, ans2 = 1;\\n        \\n        if (time[0] == \\'?\\' && time[1] == \\'?\\') ans = 24;\\n        else if (time[0] == \\'?\\' && time[1] != \\'?\\'){            \\n            if (time[1]-\\'0\\' <= 3) ans = 3;\\n            else ans = 2;\\n        }\\n        else if ((time[0] == \\'1\\' || time[0] == \\'0\\') && time[1] == \\'?\\') ans =10;\\n        else if (time[0] == \\'2\\' && time[1] == \\'?\\') ans=4;\\n        \\n        if (time[3] == \\'?\\') ans2 = 6;\\n        if (time[4] == \\'?\\') ans*=10;\\n        \\n        return ans*ans2;\\n    }\\n};\\n```\\n\\n# Complexity\\n**TC:** O(1)\\n**SC:** O(1)\\n",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nInput: time = \"??:??\"\\nOutput: 1440\\n```\n```hh = \"??\"```\n```hh = \"?(0-9)\" ```\n```hh = \"?(0-3)\"```\n```hh = \"?(4-9)\"```\n```hh = \"(0-1)?\"```\n```hh = \"2?\"```\n```mm = \"??\"```\n```mm = \"?(0-9)\"```\n```mm = \"(0-5)?\"```\n```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int ans = 1, ans2 = 1;\\n        \\n        if (time[0] == \\'?\\' && time[1] == \\'?\\') ans = 24;\\n        else if (time[0] == \\'?\\' && time[1] != \\'?\\'){            \\n            if (time[1]-\\'0\\' <= 3) ans = 3;\\n            else ans = 2;\\n        }\\n        else if ((time[0] == \\'1\\' || time[0] == \\'0\\') && time[1] == \\'?\\') ans =10;\\n        else if (time[0] == \\'2\\' && time[1] == \\'?\\') ans=4;\\n        \\n        if (time[3] == \\'?\\') ans2 = 6;\\n        if (time[4] == \\'?\\') ans*=10;\\n        \\n        return ans*ans2;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2736116,
                "title": "python-easy-to-understand",
                "content": "The trick is to generate all the possible string for hour and minutes and then find the ones that match the giving pattern.\\n\\n```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        \\n        ## generate all possible string for hour and minutes \\n        hr_str_all = [f\"{h:02}\" for h in range(24)]\\n        min_str_all = [f\"{m:02}\" for m in range(60)]\\n        \\n        ## generate pattern\\n        hr_pattern = time.split(\":\")[0].replace(\"?\", \"\\\\d\")\\n        min_pattern = time.split(\":\")[1].replace(\"?\", \"\\\\d\")\\n\\n        ## find matchs\\n        hr_num = len([h for h in hr_str_all if re.match(hr_pattern, h)])\\n        min_num = len([m for m in min_str_all if re.match(min_pattern, m)])\\n        \\n        return hr_num * min_num\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        \\n        ## generate all possible string for hour and minutes \\n        hr_str_all = [f\"{h:02}\" for h in range(24)]\\n        min_str_all = [f\"{m:02}\" for m in range(60)]\\n        \\n        ## generate pattern\\n        hr_pattern = time.split(\":\")[0].replace(\"?\", \"\\\\d\")\\n        min_pattern = time.split(\":\")[1].replace(\"?\", \"\\\\d\")\\n\\n        ## find matchs\\n        hr_num = len([h for h in hr_str_all if re.match(hr_pattern, h)])\\n        min_num = len([m for m in min_str_all if re.match(min_pattern, m)])\\n        \\n        return hr_num * min_num\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2714983,
                "title": "permutations",
                "content": "# Intuition\\nTo calculate all valid times we can multiply all the no. of possibilities of the missing digit.\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nFirst we extract all the digits.\\nThen we conditionally check what to multiply.\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: *`O(1)`*\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: *`O(1)`*\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int h1, h2, m1, m2;\\n        h1 = h2 = m1 = m2 = -1; // default -1\\n        // extracting digits\\n        if(isdigit(time[0]))\\n            h1 = time[0] - \\'0\\';\\n        if(isdigit(time[1]))\\n            h2 = time[1] - \\'0\\';\\n        if(isdigit(time[3]))\\n            m1 = time[3] - \\'0\\';\\n        if(isdigit(time[4]))\\n            m2 = time[4] - \\'0\\';\\n        \\n        int res = 1;\\n        \\n        if(h1 == -1 && h2 == -1)\\n            res *= 24;\\n        else if(h1 == -1)\\n            res *= (h2 < 4) ? 3 : 2;\\n        else if(h2 == -1)\\n            res *= (h1 < 2) ? 10 : 4;\\n        \\n        if(m1 == -1 && m2 == -1)\\n            res *= 60;\\n        else if(m1 == -1)\\n            res *= 6;\\n        else if(m2 == -1)\\n            res *= 10;\\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int h1, h2, m1, m2;\\n        h1 = h2 = m1 = m2 = -1; // default -1\\n        // extracting digits\\n        if(isdigit(time[0]))\\n            h1 = time[0] - \\'0\\';\\n        if(isdigit(time[1]))\\n            h2 = time[1] - \\'0\\';\\n        if(isdigit(time[3]))\\n            m1 = time[3] - \\'0\\';\\n        if(isdigit(time[4]))\\n            m2 = time[4] - \\'0\\';\\n        \\n        int res = 1;\\n        \\n        if(h1 == -1 && h2 == -1)\\n            res *= 24;\\n        else if(h1 == -1)\\n            res *= (h2 < 4) ? 3 : 2;\\n        else if(h2 == -1)\\n            res *= (h1 < 2) ? 10 : 4;\\n        \\n        if(m1 == -1 && m2 == -1)\\n            res *= 60;\\n        else if(m1 == -1)\\n            res *= 6;\\n        else if(m2 == -1)\\n            res *= 10;\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2714119,
                "title": "o-1-simple-and-easy-solution",
                "content": "```\\nvar countTime = function(time) {\\n    let [hours,minutes] = time.split(\\':\\');\\n    let mul = 1;\\n    if(hours == \\'??\\') mul *= 24;\\n    else{\\n        if(hours[0] == \\'?\\') hours[1] > 3 ? mul *= 2 : mul *= 3; \\n        if(hours[1] == \\'?\\') hours[0] == 2 ? mul *= 4 : mul *= 10;    \\n    }\\n    if(minutes[0] == \\'?\\') mul *= 6;\\n    if(minutes[1] == \\'?\\') mul *= 10;\\n    return mul;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar countTime = function(time) {\\n    let [hours,minutes] = time.split(\\':\\');\\n    let mul = 1;\\n    if(hours == \\'??\\') mul *= 24;\\n    else{\\n        if(hours[0] == \\'?\\') hours[1] > 3 ? mul *= 2 : mul *= 3; \\n        if(hours[1] == \\'?\\') hours[0] == 2 ? mul *= 4 : mul *= 10;    \\n    }\\n    if(minutes[0] == \\'?\\') mul *= 6;\\n    if(minutes[1] == \\'?\\') mul *= 10;\\n    return mul;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2707519,
                "title": "simple-python-solution",
                "content": "```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        \\n        ## if we have 0? then we can replace ? with 10 different values [0-9]\\n        ## if we have 1? then we can replace ? with 10 different values [0-9]\\n        ## if we have 2? then we can replace ? with 4 different values  [0-3]\\n        hr12 = {0:10, 1:10, 2:4} \\n        \\n        ## if we have ?0 we can replace ? with 3 values [0-2]\\n        hr21 = {0:3,1:3, 2:3, 3:3, 4:2, 5:2, 6:2, 7:2, 8:2, 9:2}\\n        \\n        \\n        min12 = {0:10, 1:10, 2:10, 3:10, 4:10, 5:10}\\n        min21 = {0:6, 1:6, 2:6, 3:6, 4:6, 5:6, 6:6, 7:6, 8:8, 9:6}\\n        \\n        \\n        ## calculating how many hours can be made from this structure\\n        a = 1\\n        comp1 = [time[0], time[1]]\\n        \\n        if comp1 == [\\'?\\',\"?\"]:\\n            a = 24\\n            \\n        elif comp1[0] == \\'?\\' and comp1[1]!=\"?\":\\n            a = hr21[int(comp1[1])]\\n\\n        elif comp1[0]!=\"?\" and comp1[1] == \"?\":\\n            a = hr12[int(comp1[0])]\\n            \\n            \\n        ## calculating how many minutes can be made from this structure\\n        comp2 = [time[3], time[4]]\\n        b = 1\\n        if comp2 == [\\'?\\',\"?\"]:\\n            b = 60\\n            \\n        elif comp2[0] == \\'?\\' and comp2[1]!=\"?\":\\n            b = min21[int(comp2[1])]\\n\\n        elif comp2[0]!=\"?\" and comp2[1] == \"?\":\\n            b = min12[int(comp2[0])]\\n        \\n        return a*b  ## finding total combinations\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        \\n        ## if we have 0? then we can replace ? with 10 different values [0-9]\\n        ## if we have 1? then we can replace ? with 10 different values [0-9]\\n        ## if we have 2? then we can replace ? with 4 different values  [0-3]\\n        hr12 = {0:10, 1:10, 2:4} \\n        \\n        ## if we have ?0 we can replace ? with 3 values [0-2]\\n        hr21 = {0:3,1:3, 2:3, 3:3, 4:2, 5:2, 6:2, 7:2, 8:2, 9:2}\\n        \\n        \\n        min12 = {0:10, 1:10, 2:10, 3:10, 4:10, 5:10}\\n        min21 = {0:6, 1:6, 2:6, 3:6, 4:6, 5:6, 6:6, 7:6, 8:8, 9:6}\\n        \\n        \\n        ## calculating how many hours can be made from this structure\\n        a = 1\\n        comp1 = [time[0], time[1]]\\n        \\n        if comp1 == [\\'?\\',\"?\"]:\\n            a = 24\\n            \\n        elif comp1[0] == \\'?\\' and comp1[1]!=\"?\":\\n            a = hr21[int(comp1[1])]\\n\\n        elif comp1[0]!=\"?\" and comp1[1] == \"?\":\\n            a = hr12[int(comp1[0])]\\n            \\n            \\n        ## calculating how many minutes can be made from this structure\\n        comp2 = [time[3], time[4]]\\n        b = 1\\n        if comp2 == [\\'?\\',\"?\"]:\\n            b = 60\\n            \\n        elif comp2[0] == \\'?\\' and comp2[1]!=\"?\":\\n            b = min21[int(comp2[1])]\\n\\n        elif comp2[0]!=\"?\" and comp2[1] == \"?\":\\n            b = min12[int(comp2[0])]\\n        \\n        return a*b  ## finding total combinations\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2707128,
                "title": "o-1-java-simple-and-easy-to-understand-solution",
                "content": "<iframe src=\"https://leetcode.com/playground/iE5p37HF/shared\" frameBorder=\"0\" width=\"800\" height=\"450\"></iframe>",
                "solutionTags": [],
                "code": "<iframe src=\"https://leetcode.com/playground/iE5p37HF/shared\" frameBorder=\"0\" width=\"800\" height=\"450\"></iframe>",
                "codeTag": "Unknown"
            },
            {
                "id": 2706904,
                "title": "java-easy-to-understand-simple",
                "content": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        int h = 1;\\n        int m = 1;\\n        if (time.charAt(1) == \\'?\\' && time.charAt(0) == \\'?\\') {\\n            h = 24;\\n        } else if (time.charAt(1) == \\'?\\') {\\n            int d = time.charAt(0) - \\'0\\';\\n            h = (d == 2) ? 4 : 10;\\n        } else if (time.charAt(0) == \\'?\\') {\\n            int d = time.charAt(1) - \\'0\\';\\n            if (d <= 3) {\\n                h = 3;\\n            } else {\\n                h = 2;\\n            }\\n        }\\n        \\n        if (time.charAt(3) == \\'?\\' && time.charAt(4) == \\'?\\') {\\n            m = 60;\\n        } else if (time.charAt(4) == \\'?\\') {\\n            m = 10;\\n        } else if (time.charAt(3) == \\'?\\') {\\n            m = 6;\\n        }\\n        \\n        return h * m;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        int h = 1;\\n        int m = 1;\\n        if (time.charAt(1) == \\'?\\' && time.charAt(0) == \\'?\\') {\\n            h = 24;\\n        } else if (time.charAt(1) == \\'?\\') {\\n            int d = time.charAt(0) - \\'0\\';\\n            h = (d == 2) ? 4 : 10;\\n        } else if (time.charAt(0) == \\'?\\') {\\n            int d = time.charAt(1) - \\'0\\';\\n            if (d <= 3) {\\n                h = 3;\\n            } else {\\n                h = 2;\\n            }\\n        }\\n        \\n        if (time.charAt(3) == \\'?\\' && time.charAt(4) == \\'?\\') {\\n            m = 60;\\n        } else if (time.charAt(4) == \\'?\\') {\\n            m = 10;\\n        } else if (time.charAt(3) == \\'?\\') {\\n            m = 6;\\n        }\\n        \\n        return h * m;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706651,
                "title": "c-easy-if-else-short",
                "content": "```\\nPlease upvote if you like!\\n\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int res = 1;\\n        if(time[4] == \\'?\\') res *= 10;\\n        if(time[3] == \\'?\\') res *= 6;\\n        if(time[1] ==\\'?\\' && time[0] == \\'?\\') res*=24;\\n        if(time[1] ==\\'?\\' && time[0] != \\'?\\'){\\n            if(time[0] == \\'0\\' || time[0] == \\'1\\') res*=10;\\n            else res*=4;\\n        }\\n        if(time[1] !=\\'?\\' && time[0] == \\'?\\'){\\n            if(time[1] < \\'4\\') res*=3;\\n            else res*=2;\\n        }\\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nPlease upvote if you like!\\n\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int res = 1;\\n        if(time[4] == \\'?\\') res *= 10;\\n        if(time[3] == \\'?\\') res *= 6;\\n        if(time[1] ==\\'?\\' && time[0] == \\'?\\') res*=24;\\n        if(time[1] ==\\'?\\' && time[0] != \\'?\\'){\\n            if(time[0] == \\'0\\' || time[0] == \\'1\\') res*=10;\\n            else res*=4;\\n        }\\n        if(time[1] !=\\'?\\' && time[0] == \\'?\\'){\\n            if(time[1] < \\'4\\') res*=3;\\n            else res*=2;\\n        }\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706575,
                "title": "c-easy-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        string mm,hh;\\n        mm+=time[0];\\n        mm+=time[1];\\n        hh+=time[3];\\n        hh+=time[4];\\n        int x=1,y=1;\\n        if(mm==\"??\")\\n            x=24;\\n        else if(mm[0]==\\'?\\' && (mm[1]==\\'0\\' || mm[1]==\\'1\\' || mm[1]==\\'2\\' || mm[1]==\\'3\\'))\\n        {\\n            x=3;\\n        }\\n        else if(mm[0]==\\'?\\')\\n        {\\n            x=2;          \\n        }\\n        else if(mm[1]==\\'?\\' && (mm[0]==\\'0\\' || mm[0]==\\'1\\'))\\n        {\\n            x=10;                    \\n        }\\n        else if(mm[1]==\\'?\\' && (mm[0]==\\'2\\'))\\n        {\\n            x=4;                    \\n        }     \\n        else if(mm[1]==\\'?\\')\\n        {\\n            x=0;                    \\n        } \\n                \\n        if(hh==\"??\")\\n            y=60;\\n        else if(hh[0]==\\'?\\')\\n        {\\n            y=6;\\n        }\\n        else if(hh[1]==\\'?\\')\\n        {\\n            y=10;                    \\n        }\\n        return x*y;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        string mm,hh;\\n        mm+=time[0];\\n        mm+=time[1];\\n        hh+=time[3];\\n        hh+=time[4];\\n        int x=1,y=1;\\n        if(mm==\"??\")\\n            x=24;\\n        else if(mm[0]==\\'?\\' && (mm[1]==\\'0\\' || mm[1]==\\'1\\' || mm[1]==\\'2\\' || mm[1]==\\'3\\'))\\n        {\\n            x=3;\\n        }\\n        else if(mm[0]==\\'?\\')\\n        {\\n            x=2;          \\n        }\\n        else if(mm[1]==\\'?\\' && (mm[0]==\\'0\\' || mm[0]==\\'1\\'))\\n        {\\n            x=10;                    \\n        }\\n        else if(mm[1]==\\'?\\' && (mm[0]==\\'2\\'))\\n        {\\n            x=4;                    \\n        }     \\n        else if(mm[1]==\\'?\\')\\n        {\\n            x=0;                    \\n        } \\n                \\n        if(hh==\"??\")\\n            y=60;\\n        else if(hh[0]==\\'?\\')\\n        {\\n            y=6;\\n        }\\n        else if(hh[1]==\\'?\\')\\n        {\\n            y=10;                    \\n        }\\n        return x*y;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706456,
                "title": "python-solution-with-proof-and-explanation-for-beginners",
                "content": "Conditions \\n- If first_digit is missing and second_digit is present :\\n    - If second_digit>3:\\n        then first_digit can have 2 possiblities only \"0\" and \"1\"\\n    - If second_digit<=3:\\n        then first_digit can have 3 possiblities \"0\" and \"1\" and \"2\"\\n\\n- If second_digit is missing:\\n    - If first_digit is also missing:\\n        then possiblities of first_digit and second_digit combined are 24\\n    - If first_digit is present and first_digit <=1 :\\n        then second_digit can have 10 possiblities 0-9 \\n    - If first_digit is present and first_digit ==2:\\n        then second_digit can have 4 possiblities 0-3\\n\\n- If third digit is missing: \\n    - 6 Possiblitites for third digit\\n\\n- If fourth digit is missing:\\n    - 10 Possiblities for fourth digit\\n\\n\\nFor better calculation assign 1 for digits if they are present and multiplication of all possiblities will give you answer\\n\\n```python\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        a = time[0]\\n        b = time[1]\\n        c = time[3]\\n        d = time[4]\\n        \\n        result = 1\\n        \\n        if a == \"?\" and  b != \"?\":\\n            a1 = 3 if b <= \\'3\\' else 2\\n        else:\\n            a1 = 1\\n        \\n                \\n        if b ==\"?\":\\n            if a <= \"1\":\\n                b1 = 10\\n            elif a == \"2\":\\n                b1 = 4\\n            elif a == \"?\":\\n                b1 = 24\\n        else:\\n            b1 = 1\\n                \\n                \\n        c1 = 6 if c == \"?\" else 1\\n        d1 = 10 if d == \"?\" else 1\\n        \\n        return a1 * b1 * c1 * d1\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```python\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        a = time[0]\\n        b = time[1]\\n        c = time[3]\\n        d = time[4]\\n        \\n        result = 1\\n        \\n        if a == \"?\" and  b != \"?\":\\n            a1 = 3 if b <= \\'3\\' else 2\\n        else:\\n            a1 = 1\\n        \\n                \\n        if b ==\"?\":\\n            if a <= \"1\":\\n                b1 = 10\\n            elif a == \"2\":\\n                b1 = 4\\n            elif a == \"?\":\\n                b1 = 24\\n        else:\\n            b1 = 1\\n                \\n                \\n        c1 = 6 if c == \"?\" else 1\\n        d1 = 10 if d == \"?\" else 1\\n        \\n        return a1 * b1 * c1 * d1\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706441,
                "title": "c-100-faster-3ms-easy",
                "content": "```\\nclass Solution {\\npublic:\\n    int countTime(string s) {\\n        int ans = 1;\\n        if(s[0] == \\'?\\'){\\n            if(s[1]>= \\'4\\' && s[1] <=\\'9\\' )\\n                ans*= 2;\\n            else{\\n                ans*=3;\\n            }\\n        }if(s[1] == \\'?\\' ){\\n            if( s[0] == \\'?\\')\\n                ans= 24;\\n            else if(s[0] == \\'2\\') ans*=4;\\n            else ans*=10;\\n        }\\n        if(s[3] == \\'?\\' ){\\n              ans*= 6;\\n        }\\n        if(s[4] == \\'?\\'){\\n            ans*= 10;\\n        }\\n        \\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countTime(string s) {\\n        int ans = 1;\\n        if(s[0] == \\'?\\'){\\n            if(s[1]>= \\'4\\' && s[1] <=\\'9\\' )\\n                ans*= 2;\\n            else{\\n                ans*=3;\\n            }\\n        }if(s[1] == \\'?\\' ){\\n            if( s[0] == \\'?\\')\\n                ans= 24;\\n            else if(s[0] == \\'2\\') ans*=4;\\n            else ans*=10;\\n        }\\n        if(s[3] == \\'?\\' ){\\n              ans*= 6;\\n        }\\n        if(s[4] == \\'?\\'){\\n            ans*= 10;\\n        }\\n        \\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706418,
                "title": "implemented-what-mentioned-shortest-c",
                "content": "```\\n\\tint countTime(string time) {\\n        string s1=time.substr(0,2);\\n        string s2=time.substr(3);\\n        \\n        int a=1,b=1;\\n        // Hours\\n        if(s1==\"??\") a=24;\\n        else if(s1[0]==\\'?\\') a=s1[1]<=\\'3\\'?3:2;\\n        else if(s1[1]==\\'?\\') a=s1[0]==\\'2\\'?4:10;\\n       \\n        // Minutes\\n        if(s2==\"??\") b=60;\\n        else if(s2[0]==\\'?\\') b=6;\\n        else if(s2[1]==\\'?\\') b=10;\\n         \\n        return a*b;\\n        \\n    }\\n```",
                "solutionTags": [
                    "C",
                    "Brainteaser"
                ],
                "code": "```\\n\\tint countTime(string time) {\\n        string s1=time.substr(0,2);\\n        string s2=time.substr(3);\\n        \\n        int a=1,b=1;\\n        // Hours\\n        if(s1==\"??\") a=24;\\n        else if(s1[0]==\\'?\\') a=s1[1]<=\\'3\\'?3:2;\\n        else if(s1[1]==\\'?\\') a=s1[0]==\\'2\\'?4:10;\\n       \\n        // Minutes\\n        if(s2==\"??\") b=60;\\n        else if(s2[0]==\\'?\\') b=6;\\n        else if(s2[1]==\\'?\\') b=10;\\n         \\n        return a*b;\\n        \\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2706366,
                "title": "simple-java-solution-10-lines-code",
                "content": "\\n# Code\\n```\\nclass Solution {\\n    public int countTime(String t) {\\n        int c=1;\\n        if(t.charAt(0)==\\'?\\'){\\n            if(t.charAt(1)>=\\'4\\'&&t.charAt(1)<=\\'9\\') c*=2;\\n            else c*=3;\\n        }\\n        if(t.charAt(1)==\\'?\\'){\\n            if(t.charAt(0)==\\'?\\') c=24;\\n            else if(t.charAt(0)==\\'2\\') c*=4;\\n            else c*=10;\\n        }\\n        if(t.charAt(3)==\\'?\\') c*=6;\\n        if(t.charAt(4)==\\'?\\') c*=10;\\n        return c;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String t) {\\n        int c=1;\\n        if(t.charAt(0)==\\'?\\'){\\n            if(t.charAt(1)>=\\'4\\'&&t.charAt(1)<=\\'9\\') c*=2;\\n            else c*=3;\\n        }\\n        if(t.charAt(1)==\\'?\\'){\\n            if(t.charAt(0)==\\'?\\') c=24;\\n            else if(t.charAt(0)==\\'2\\') c*=4;\\n            else c*=10;\\n        }\\n        if(t.charAt(3)==\\'?\\') c*=6;\\n        if(t.charAt(4)==\\'?\\') c*=10;\\n        return c;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706362,
                "title": "javascript-easy",
                "content": "```\\n\\nvar countTime = function(time) {\\n  let hrChoices = 1;\\n  if (time[0] == \\'?\\' && time[1] == \\'?\\') {\\n    hrChoices = 24;\\n  } else if (time[0] == \\'?\\') {\\n    hrChoices = time[1] <= \\'3\\' ? 3 : 2;\\n  } else if (time[1] == \\'?\\') {\\n    hrChoices = time[0] == \\'2\\' ? 4 : 10;\\n  }\\n\\n  let minChoices = 1\\n\\n  if (time[3] == \\'?\\' && time[4] == \\'?\\') {\\n    minChoices = 60;\\n  } else if (time[3] == \\'?\\') {\\n    minChoices = 6;\\n  } else if (time[4] == \\'?\\') {\\n    minChoices = 10;\\n  }\\n\\n  return hrChoices * minChoices;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n\\nvar countTime = function(time) {\\n  let hrChoices = 1;\\n  if (time[0] == \\'?\\' && time[1] == \\'?\\') {\\n    hrChoices = 24;\\n  } else if (time[0] == \\'?\\') {\\n    hrChoices = time[1] <= \\'3\\' ? 3 : 2;\\n  } else if (time[1] == \\'?\\') {\\n    hrChoices = time[0] == \\'2\\' ? 4 : 10;\\n  }\\n\\n  let minChoices = 1\\n\\n  if (time[3] == \\'?\\' && time[4] == \\'?\\') {\\n    minChoices = 60;\\n  } else if (time[3] == \\'?\\') {\\n    minChoices = 6;\\n  } else if (time[4] == \\'?\\') {\\n    minChoices = 10;\\n  }\\n\\n  return hrChoices * minChoices;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3725340,
                "title": "beats-97-60",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def countTime(self, t: str) -> int:\\n        mm = (6 if t[3] == \\'?\\' else 1) * (10 if t[4] == \\'?\\' else 1)\\n        match [t[0],t[1]]:\\n            case (\\'?\\',\\'?\\'):\\n                return mm * 24\\n            case (\\'?\\', (\\'0\\'|\\'1\\'|\\'2\\'|\\'3\\')):\\n                return mm * 3\\n            case (\\'?\\',_):\\n                return mm * 2\\n            case ((\\'0\\'|\\'1\\', \\'?\\')):\\n                return mm * 10\\n            case (_, \\'?\\'):\\n                return mm * 4\\n        return mm\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countTime(self, t: str) -> int:\\n        mm = (6 if t[3] == \\'?\\' else 1) * (10 if t[4] == \\'?\\' else 1)\\n        match [t[0],t[1]]:\\n            case (\\'?\\',\\'?\\'):\\n                return mm * 24\\n            case (\\'?\\', (\\'0\\'|\\'1\\'|\\'2\\'|\\'3\\')):\\n                return mm * 3\\n            case (\\'?\\',_):\\n                return mm * 2\\n            case ((\\'0\\'|\\'1\\', \\'?\\')):\\n                return mm * 10\\n            case (_, \\'?\\'):\\n                return mm * 4\\n        return mm\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3504850,
                "title": "lc-2437-e-python3-a-plain-solution",
                "content": "Just write the process as requested.\\n\\n```Python3 []\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        hh, mm = time[:2], time[3:]\\n        if hh[0] != \\'?\\' and hh[1] != \\'?\\':\\n            h_cnt = 1\\n        elif hh[0] == \\'?\\' and hh[1] != \\'?\\':\\n            h_cnt = 2 if int(hh[1]) > 3 else 3\\n        elif hh[0] != \\'?\\' and hh[1] == \\'?\\':\\n            h_cnt = 10 if int(hh[0]) < 2 else 4\\n        else:\\n            h_cnt = 24\\n\\n        if mm[0] != \\'?\\' and mm[1] != \\'?\\':\\n            m_cnt = 1\\n        elif mm[0] == \\'?\\' and mm[1] != \\'?\\':\\n            m_cnt = 6\\n        elif mm[0] != \\'?\\' and mm[1] == \\'?\\':\\n            m_cnt = 10\\n        else:\\n            m_cnt = 60\\n\\n        return h_cnt * m_cnt\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```Python3 []\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        hh, mm = time[:2], time[3:]\\n        if hh[0] != \\'?\\' and hh[1] != \\'?\\':\\n            h_cnt = 1\\n        elif hh[0] == \\'?\\' and hh[1] != \\'?\\':\\n            h_cnt = 2 if int(hh[1]) > 3 else 3\\n        elif hh[0] != \\'?\\' and hh[1] == \\'?\\':\\n            h_cnt = 10 if int(hh[0]) < 2 else 4\\n        else:\\n            h_cnt = 24\\n\\n        if mm[0] != \\'?\\' and mm[1] != \\'?\\':\\n            m_cnt = 1\\n        elif mm[0] == \\'?\\' and mm[1] != \\'?\\':\\n            m_cnt = 6\\n        elif mm[0] != \\'?\\' and mm[1] == \\'?\\':\\n            m_cnt = 10\\n        else:\\n            m_cnt = 60\\n\\n        return h_cnt * m_cnt\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3471204,
                "title": "simple-solution-in-kotlin-with-notes-and-simplifications",
                "content": "# Description\\n - **Code works great**\\n# Code\\n```\\nclass Solution {\\n    fun countTime(time: String): Int {\\n        var result = 1\\n\\n        //===== All symbols unknown =====//\\n        if (time == \"??:??\")\\n            return 24*60\\n\\n\\n        //===== Hour(s) unknown =====//\\n        \\n        // h1h2 unknown\\n        if (time[0] == \\'?\\' && time[1] == \\'?\\')\\n            result *= 24\\n        // h1 unknown\\n        else if (time[0] == \\'?\\')\\n            result *= if (time[1] == \\'0\\'\\n                    || time[1] == \\'1\\'\\n                    || time[1] == \\'2\\'\\n                    || time[1] == \\'3\\') 3 else 2\\n        // h2 unknown\\n        else if (time[1] == \\'?\\')\\n            result *= if (time[0] == \\'0\\' || time[0] == \\'1\\') 10 else 4 \\n\\n\\n        //===== Minute(s) unknown =====//\\n        \\n        // m1m2 unknown\\n        if (time[3] == \\'?\\' && time[4] == \\'?\\')\\n            result *= 60\\n        // m1 unknown\\n        else if (time[3] == \\'?\\')\\n            result *= 6\\n        // m2 unknown\\n        else if (time[4] == \\'?\\')\\n            result *= 10\\n        \\n\\n        // Result\\n        return result\\n    }\\n}\\n```\\n\\n---\\n\\n# Offtop:\\n(The code above works! The text below is about an unsuccessful option)\\nThere is one solution that doesn\\'t work. Can you explain why?\\n\\nLook at part of my true beautiful code version:\\n```\\n// h1 unknown\\n        else if (time[0] == \\'?\\')\\n            result *= if (time[1].toInt() < 4) 3 else 2\\n// h2 unknown\\nelse if (time[1] == \\'?\\')\\n            result *= if (time[0].toInt() < 2) 10 else 4 \\n```\\n**Idk why e.g. in case \"?2:54\"  this code don\\'t work in h1 part**\\nBut if compare over each char (time[1] == \\'1\\' etc.) - it\\'s work   xD\\nIn h2 part the same stupidity  ^_^\\n\\nActually, for this, I wrote a comparison with each symbol and now the solution is 100% correct, \"surprise\"\\n```\\n// h2 unknown\\n        else if (time[1] == \\'?\\')\\n            result *= if (time[0] == \\'0\\' || time[0] == \\'1\\') 10 else 4 \\n```\\n---\\n![Screenshot 2023-05-01 at 00-32-56 Number of Valid Clock Times - LeetCode.png](https://assets.leetcode.com/users/images/9bd836ff-79e5-44ed-9282-0b1b1ee38eaa_1682890409.2968547.png)\\n\\nMaybe the tests are stupid?\\n**If you can explain to me what is wrong, I will be grateful!**  \\u2764\\uFE0F",
                "solutionTags": [
                    "Kotlin"
                ],
                "code": "```\\nclass Solution {\\n    fun countTime(time: String): Int {\\n        var result = 1\\n\\n        //===== All symbols unknown =====//\\n        if (time == \"??:??\")\\n            return 24*60\\n\\n\\n        //===== Hour(s) unknown =====//\\n        \\n        // h1h2 unknown\\n        if (time[0] == \\'?\\' && time[1] == \\'?\\')\\n            result *= 24\\n        // h1 unknown\\n        else if (time[0] == \\'?\\')\\n            result *= if (time[1] == \\'0\\'\\n                    || time[1] == \\'1\\'\\n                    || time[1] == \\'2\\'\\n                    || time[1] == \\'3\\') 3 else 2\\n        // h2 unknown\\n        else if (time[1] == \\'?\\')\\n            result *= if (time[0] == \\'0\\' || time[0] == \\'1\\') 10 else 4 \\n\\n\\n        //===== Minute(s) unknown =====//\\n        \\n        // m1m2 unknown\\n        if (time[3] == \\'?\\' && time[4] == \\'?\\')\\n            result *= 60\\n        // m1 unknown\\n        else if (time[3] == \\'?\\')\\n            result *= 6\\n        // m2 unknown\\n        else if (time[4] == \\'?\\')\\n            result *= 10\\n        \\n\\n        // Result\\n        return result\\n    }\\n}\\n```\n```\\n// h1 unknown\\n        else if (time[0] == \\'?\\')\\n            result *= if (time[1].toInt() < 4) 3 else 2\\n// h2 unknown\\nelse if (time[1] == \\'?\\')\\n            result *= if (time[0].toInt() < 2) 10 else 4 \\n```\n```\\n// h2 unknown\\n        else if (time[1] == \\'?\\')\\n            result *= if (time[0] == \\'0\\' || time[0] == \\'1\\') 10 else 4 \\n```",
                "codeTag": "Java"
            },
            {
                "id": 2747431,
                "title": "shit-why-not",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nfunction countTime(time: string): number {\\n  let startingValue = 1\\n  time.split(\\':\\').forEach((h, i) => {\\n    if (h === \\'??\\') {\\n      if (i === 0) { // hours\\n        startingValue = 24\\n      } else { // minutes\\n        startingValue *= 60\\n      }\\n      time = time.replace(\\'??\\', \\'00\\')\\n    }\\n  })\\n\\n  return time.split(\\'\\').reduce<number>((acc, curr, i): number => {\\n    if (curr === \\'?\\') {\\n      switch(i) {\\n        case 0:\\n          if (Number(time[1]) >= 4) {\\n            return acc *= 2\\n          } else {\\n            return acc *= 3\\n          }\\n        case 1:\\n          if (Number(time[0]) === 2)  {\\n            return acc *= 4\\n          } else {\\n            return acc *= 10\\n          }\\n        case 3:\\n          return acc *= 6\\n        default: \\n          return acc *= 10\\n      }\\n    }\\n\\n    return acc\\n  }, startingValue)\\n};\\n```",
                "solutionTags": [
                    "TypeScript"
                ],
                "code": "```\\nfunction countTime(time: string): number {\\n  let startingValue = 1\\n  time.split(\\':\\').forEach((h, i) => {\\n    if (h === \\'??\\') {\\n      if (i === 0) { // hours\\n        startingValue = 24\\n      } else { // minutes\\n        startingValue *= 60\\n      }\\n      time = time.replace(\\'??\\', \\'00\\')\\n    }\\n  })\\n\\n  return time.split(\\'\\').reduce<number>((acc, curr, i): number => {\\n    if (curr === \\'?\\') {\\n      switch(i) {\\n        case 0:\\n          if (Number(time[1]) >= 4) {\\n            return acc *= 2\\n          } else {\\n            return acc *= 3\\n          }\\n        case 1:\\n          if (Number(time[0]) === 2)  {\\n            return acc *= 4\\n          } else {\\n            return acc *= 10\\n          }\\n        case 3:\\n          return acc *= 6\\n        default: \\n          return acc *= 10\\n      }\\n    }\\n\\n    return acc\\n  }, startingValue)\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2730855,
                "title": "elixir-pattern-matching-solution",
                "content": "```elixir\\ndefmodule Solution do\\n  @spec count_time(time :: String.t()) :: integer\\n  def count_time(time) do\\n    [hh, mm] = String.split(time, \":\") |> Enum.map(&String.to_charlist/1)\\n    count_hh(hh) * count_mm(mm)\\n  end\\n\\n  def count_hh([??, ??]), do: 24\\n\\n  def count_hh([??, h]) do\\n    if h in ?0..?3, do: 3, else: 2\\n  end\\n\\n  def count_hh([?2, ??]), do: 4\\n  def count_hh([_, ??]), do: 10\\n  def count_hh(_), do: 1\\n\\n  def count_mm([??, ??]), do: 60\\n  def count_mm([??, _]), do: 6\\n  def count_mm([_, ??]), do: 10\\n  def count_mm(_), do: 1\\nend\\n```",
                "solutionTags": [
                    "Elixir"
                ],
                "code": "```elixir\\ndefmodule Solution do\\n  @spec count_time(time :: String.t()) :: integer\\n  def count_time(time) do\\n    [hh, mm] = String.split(time, \":\") |> Enum.map(&String.to_charlist/1)\\n    count_hh(hh) * count_mm(mm)\\n  end\\n\\n  def count_hh([??, ??]), do: 24\\n\\n  def count_hh([??, h]) do\\n    if h in ?0..?3, do: 3, else: 2\\n  end\\n\\n  def count_hh([?2, ??]), do: 4\\n  def count_hh([_, ??]), do: 10\\n  def count_hh(_), do: 1\\n\\n  def count_mm([??, ??]), do: 60\\n  def count_mm([??, _]), do: 6\\n  def count_mm([_, ??]), do: 10\\n  def count_mm(_), do: 1\\nend\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 2723625,
                "title": "java-solution-0ms-runtime-faster-than-100",
                "content": "```java \\nclass Solution {\\n    public int countTime(String time) {\\n        int hr=0;\\n        if(time.charAt(0)==\\'?\\')\\n        {\\n            if(time.charAt(1)!=\\'?\\')\\n            {\\n                if(time.charAt(1)>\\'3\\')\\n                    hr+=2;\\n                else\\n                    hr+=3;\\n            }\\n            else\\n                hr+=24;\\n        }\\n        else if(time.charAt(1)==\\'?\\')\\n        {\\n            if(time.charAt(0)==\\'2\\')\\n                hr+=4;\\n            else\\n                hr+=10;\\n        }\\n        \\n        int min = 0;\\n        if(time.charAt(3)==\\'?\\')\\n            min+=6;\\n        if(time.charAt(4)==\\'?\\')\\n            min= Math.max(min,1)*10;\\n        return Math.max(hr,1)*Math.max(1,min);\\n    }\\n}",
                "solutionTags": [
                    "String"
                ],
                "code": "class Solution {\\n    public int countTime(String time) {\\n        int hr=0;\\n        if(time.charAt(0)==\\'?\\')\\n        {\\n            if(time.charAt(1)!=\\'?\\')\\n            {\\n                if(time.charAt(1)>\\'3\\')\\n                    hr+=2;\\n                else\\n                    hr+=3;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 2710246,
                "title": "easiest-c-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int choice = 1;\\n        //For Hours\\n        if(time[0] == \\'?\\' && time[1] == \\'?\\') choice *= 24;//0 ---> 23\\n        //For h1\\n        else if(time[0] == \\'?\\' && time[1] <= \\'3\\') choice *= 3;  // 0,1,2\\n        else if(time[0] == \\'?\\' && time[1] > \\'3\\') choice *= 2;   // 0,1\\n        //For h2\\n        if(time[1] == \\'?\\' && (time[0] == \\'0\\' || time[0] == \\'1\\')) choice *= 10; // 0 ---> 9\\n         if(time[1] == \\'?\\' && time[0] == \\'2\\') choice *= 4;       // 0,1,2,3\\n         //For Minutes\\n         if(time[3] == \\'?\\' && time[4] == \\'?\\') choice *= 60;      // 0 ----> 59\\n         //For m1\\n         else if(time[3] == \\'?\\' && time[4] != \\'?\\') choice *= 6;  // 0,1,2,3,4,5\\n         else if(time[3] != \\'?\\' && time[4] == \\'?\\') choice *= 10; // 0 ---> 9\\n         \\n         return choice;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int choice = 1;\\n        //For Hours\\n        if(time[0] == \\'?\\' && time[1] == \\'?\\') choice *= 24;//0 ---> 23\\n        //For h1\\n        else if(time[0] == \\'?\\' && time[1] <= \\'3\\') choice *= 3;  // 0,1,2\\n        else if(time[0] == \\'?\\' && time[1] > \\'3\\') choice *= 2;   // 0,1\\n        //For h2\\n        if(time[1] == \\'?\\' && (time[0] == \\'0\\' || time[0] == \\'1\\')) choice *= 10; // 0 ---> 9\\n         if(time[1] == \\'?\\' && time[0] == \\'2\\') choice *= 4;       // 0,1,2,3\\n         //For Minutes\\n         if(time[3] == \\'?\\' && time[4] == \\'?\\') choice *= 60;      // 0 ----> 59\\n         //For m1\\n         else if(time[3] == \\'?\\' && time[4] != \\'?\\') choice *= 6;  // 0,1,2,3,4,5\\n         else if(time[3] != \\'?\\' && time[4] == \\'?\\') choice *= 10; // 0 ---> 9\\n         \\n         return choice;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2708765,
                "title": "python-easy-four-nested-loops-and-string-comparison",
                "content": "```python\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        h1 = range(3) if time[0] == \\'?\\' else [int(time[0])]\\n        h2 = range(10) if time[1] == \\'?\\' else [int(time[1])]\\n        m1 = range(6) if time[3] == \\'?\\' else [int(time[3])]\\n        m2 = range(10) if time[4] == \\'?\\' else [int(time[4])]\\n        total = 0\\n        for h in h1:\\n            for hh in h2:\\n                for m in m1:\\n                    for mm in m2:\\n                        if f\"{h}{hh}:{m}{mm}\" <= \"23:59\":\\n                            total += 1\\n        return total\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```python\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        h1 = range(3) if time[0] == \\'?\\' else [int(time[0])]\\n        h2 = range(10) if time[1] == \\'?\\' else [int(time[1])]\\n        m1 = range(6) if time[3] == \\'?\\' else [int(time[3])]\\n        m2 = range(10) if time[4] == \\'?\\' else [int(time[4])]\\n        total = 0\\n        for h in h1:\\n            for hh in h2:\\n                for m in m1:\\n                    for mm in m2:\\n                        if f\"{h}{hh}:{m}{mm}\" <= \"23:59\":\\n                            total += 1\\n        return total\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2708532,
                "title": "c-recursive-solution-o-10-4-worst-t-c-neat-clean-code",
                "content": "```\\n#include <string>\\nclass Solution {\\npublic:\\n    \\n    int recur(int i, string &time, int n){\\n        \\n        if(i >= n){\\n            int a = 0, b = 0;\\n            \\n            int f = time[0] - \\'0\\';\\n            int ff = time[1] - \\'0\\';\\n            int g = time[3] - \\'0\\';\\n            int gg = time[4] - \\'0\\';\\n        \\n            int d = f*10 + ff;\\n            int e = g*10 + gg;\\n            \\n            return (d >= 0 && d<=23 && e>=0 && e<=59);\\n        }\\n        \\n        if(time[i] == \\'?\\'){\\n            int cnt = 0;\\n            for(int j = 0; j<10; j++){\\n                time[i] = char(\\'0\\' + j);\\n                cnt += recur(i + 1, time, n);\\n                time[i] = \\'?\\';\\n            }\\n            return cnt;\\n        }\\n        \\n        return recur(i + 1, time, n);\\n    }\\n    \\n    int countTime(string time) {\\n        int n = time.length();\\n        return recur(0, time, n);\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\n#include <string>\\nclass Solution {\\npublic:\\n    \\n    int recur(int i, string &time, int n){\\n        \\n        if(i >= n){\\n            int a = 0, b = 0;\\n            \\n            int f = time[0] - \\'0\\';\\n            int ff = time[1] - \\'0\\';\\n            int g = time[3] - \\'0\\';\\n            int gg = time[4] - \\'0\\';\\n        \\n            int d = f*10 + ff;\\n            int e = g*10 + gg;\\n            \\n            return (d >= 0 && d<=23 && e>=0 && e<=59);\\n        }\\n        \\n        if(time[i] == \\'?\\'){\\n            int cnt = 0;\\n            for(int j = 0; j<10; j++){\\n                time[i] = char(\\'0\\' + j);\\n                cnt += recur(i + 1, time, n);\\n                time[i] = \\'?\\';\\n            }\\n            return cnt;\\n        }\\n        \\n        return recur(i + 1, time, n);\\n    }\\n    \\n    int countTime(string time) {\\n        int n = time.length();\\n        return recur(0, time, n);\\n    }\\n};\\n```",
                "codeTag": "C++"
            },
            {
                "id": 2708195,
                "title": "c-easy-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int res=1;\\n        if(time[0]==\\'?\\' && time[1]==\\'?\\')    res *= 24;\\n        else if(time[0]==\\'?\\')\\n        {\\n            if(time[1]<\\'4\\')   res *= 3;\\n            else if(time[1]>=\\'4\\' && time[1]<=\\'9\\') res *= 2;\\n        }\\n        else if(time[1]==\\'?\\')\\n        {\\n            if(time[0]==\\'0\\' || time[0]==\\'1\\')    res *= 10;\\n            else if(time[0]==\\'2\\')   res *= 4;\\n        }\\n        \\n        if(time[3]==\\'?\\' && time[4]==\\'?\\')    res *= 60;\\n        else if(time[3]==\\'?\\')   res *= 6;\\n        else if(time[4]==\\'?\\')   res *= 10;\\n        \\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int res=1;\\n        if(time[0]==\\'?\\' && time[1]==\\'?\\')    res *= 24;\\n        else if(time[0]==\\'?\\')\\n        {\\n            if(time[1]<\\'4\\')   res *= 3;\\n            else if(time[1]>=\\'4\\' && time[1]<=\\'9\\') res *= 2;\\n        }\\n        else if(time[1]==\\'?\\')\\n        {\\n            if(time[0]==\\'0\\' || time[0]==\\'1\\')    res *= 10;\\n            else if(time[0]==\\'2\\')   res *= 4;\\n        }\\n        \\n        if(time[3]==\\'?\\' && time[4]==\\'?\\')    res *= 60;\\n        else if(time[3]==\\'?\\')   res *= 6;\\n        else if(time[4]==\\'?\\')   res *= 10;\\n        \\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2707889,
                "title": "2437-javascript-ugly-solution-with-array-85-119-ms",
                "content": "```\\nvar countTime = function(time) {\\n    let arr = time.split(\":\").join(\"\");\\n    let base = [2, 10, 6, 10];\\n    let valid = 1;\\n    let i = 0;\\n    \\n    //  reset base, when \"??:xx\" | \"?0~3:xx\" | \"2?:xx\"\\n    if(arr[0] === \\'?\\'){\\n        if(arr[1] === \\'?\\'){\\n            valid = 24;\\n            i = 2;\\n        }\\n        else if(+arr[1] <= 3)\\n            base[0] = 3;\\n    }\\n    else if( (arr[1] === \\'?\\') && (+arr[0] === 2) )\\n        base[1] = 4;\\n    \\n    while(i < base.length){\\n        if(arr[i] === \\'?\\')\\n            valid *= base[i];\\n        i++;\\n    }\\n    \\n    return valid;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar countTime = function(time) {\\n    let arr = time.split(\":\").join(\"\");\\n    let base = [2, 10, 6, 10];\\n    let valid = 1;\\n    let i = 0;\\n    \\n    //  reset base, when \"??:xx\" | \"?0~3:xx\" | \"2?:xx\"\\n    if(arr[0] === \\'?\\'){\\n        if(arr[1] === \\'?\\'){\\n            valid = 24;\\n            i = 2;\\n        }\\n        else if(+arr[1] <= 3)\\n            base[0] = 3;\\n    }\\n    else if( (arr[1] === \\'?\\') && (+arr[0] === 2) )\\n        base[1] = 4;\\n    \\n    while(i < base.length){\\n        if(arr[i] === \\'?\\')\\n            valid *= base[i];\\n        i++;\\n    }\\n    \\n    return valid;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2707498,
                "title": "c-implementation-easy-solution-100-fast-and-clean-code",
                "content": "```\\nclass Solution {\\npublic:\\n    int countTime(string time) \\n    {\\n        int ans=1;\\n\\t\\t//If first & second position are empty then the time will be in every hour that\\'s why multiplying by 24\\n        if(time[0]==\\'?\\' && time[1]==\\'?\\')\\n        {\\n            ans*=24;            \\n        }\\n\\t\\t//If only first position is empty then we check 2nd digit if it is greater than 3 beacuse time will only be upto 23:59\\n        else if(time[0]==\\'?\\')\\n        {\\n            if(time[1]>\\'3\\') ans*=2;\\n            else ans*=3;\\n        }\\n\\t\\t//If second position is empty then we check first position if it is less than 2 \\n        else if(time[1]==\\'?\\') \\n        {\\n            if(time[0]<\\'2\\') ans*=10;\\n            else ans*=4;\\n        }\\n\\t\\t//If fourth position is empty we have 6 values possible 0,1,2,3,4,5 beacuse time in minutes is till 23:59\\n        if(time[3]==\\'?\\') ans*=6;\\n\\t\\t//If last position is empty then we have all 10 values possible\\n        if(time[4]==\\'?\\') ans*=10;\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countTime(string time) \\n    {\\n        int ans=1;\\n\\t\\t//If first & second position are empty then the time will be in every hour that\\'s why multiplying by 24\\n        if(time[0]==\\'?\\' && time[1]==\\'?\\')\\n        {\\n            ans*=24;            \\n        }\\n\\t\\t//If only first position is empty then we check 2nd digit if it is greater than 3 beacuse time will only be upto 23:59\\n        else if(time[0]==\\'?\\')\\n        {\\n            if(time[1]>\\'3\\') ans*=2;\\n            else ans*=3;\\n        }\\n\\t\\t//If second position is empty then we check first position if it is less than 2 \\n        else if(time[1]==\\'?\\') \\n        {\\n            if(time[0]<\\'2\\') ans*=10;\\n            else ans*=4;\\n        }\\n\\t\\t//If fourth position is empty we have 6 values possible 0,1,2,3,4,5 beacuse time in minutes is till 23:59\\n        if(time[3]==\\'?\\') ans*=6;\\n\\t\\t//If last position is empty then we have all 10 values possible\\n        if(time[4]==\\'?\\') ans*=10;\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2707463,
                "title": "simple-easy-understandable",
                "content": "\\'\\'\\'\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        \\n        int ans=1;\\n            if(time[0]==\\'?\\' && time[1]==\\'?\\'){\\n                ans*=24;\\n            }\\n            else if(time[0]==\\'?\\'){//  only index 0 \\n                    if(time[1]<\\'4\\'){\\n                        ans*=3;\\n                    }\\n                    else{\\n                        ans*=2;\\n                    }   \\n            }\\n            else if(time[1]==\\'?\\'){\\n               if(time[0]==\\'0\\'||time[0]==\\'1\\') {\\n                   ans*=10;\\n               }\\n                if(time[0]==\\'2\\'){\\n                    ans*=4;\\n                }\\n            }\\n        \\n        if(time[3]==\\'?\\'&& time[4]==\\'?\\'){\\n            ans*=60;\\n        }\\n        else if(time[3]==\\'?\\'){\\n            ans*=6;\\n        }\\n        else if(time[4]==\\'?\\'){\\n            ans*=10;\\n        }\\n            \\n        \\n       return ans; \\n    }\\n};\\n\\'\\'\\'",
                "solutionTags": [
                    "C"
                ],
                "code": "class Solution {\\npublic:\\n    int countTime(string time) {\\n        \\n        int ans=1;\\n            if(time[0]==\\'?\\' && time[1]==\\'?\\'){\\n                ans*=24;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 2707258,
                "title": "rust-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nuse std::collections::HashSet;\\n\\nimpl Solution {\\n    pub fn count_time(time: String) -> i32 {\\n        let time = time.chars().collect::<Vec<char>>();\\n        let mut data = time.clone();\\n        let mut s = HashSet::<String>::new();\\n\\n        for c1 in \\'0\\'..=\\'9\\' {\\n            if time[0] == \\'?\\' { data[0] = c1; } \\n            for c2 in \\'0\\'..=\\'9\\' {\\n                if time[1] == \\'?\\' { data[1] = c2; }\\n                for c3 in \\'0\\'..=\\'9\\' {\\n                    if time[3] == \\'?\\' { data[3] = c3; }\\n                    for c4 in \\'0\\'..=\\'9\\' {\\n                        if time[4] == \\'?\\' { data[4] = c4; }\\n                        let a = (data[0] as u8 - \\'0\\' as u8) * 10 + data[1] as u8 - \\'0\\' as u8;\\n                        let b = (data[3] as u8 - \\'0\\' as u8) * 10 + data[4] as u8 - \\'0\\' as u8;\\n                        if a <= 23 && b <= 59 { s.insert(data.iter().collect()); }\\n                    }\\n                }\\n            }\\n        }\\n\\n        s.len() as _\\n    }\\n}\\n```",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```\\nuse std::collections::HashSet;\\n\\nimpl Solution {\\n    pub fn count_time(time: String) -> i32 {\\n        let time = time.chars().collect::<Vec<char>>();\\n        let mut data = time.clone();\\n        let mut s = HashSet::<String>::new();\\n\\n        for c1 in \\'0\\'..=\\'9\\' {\\n            if time[0] == \\'?\\' { data[0] = c1; } \\n            for c2 in \\'0\\'..=\\'9\\' {\\n                if time[1] == \\'?\\' { data[1] = c2; }\\n                for c3 in \\'0\\'..=\\'9\\' {\\n                    if time[3] == \\'?\\' { data[3] = c3; }\\n                    for c4 in \\'0\\'..=\\'9\\' {\\n                        if time[4] == \\'?\\' { data[4] = c4; }\\n                        let a = (data[0] as u8 - \\'0\\' as u8) * 10 + data[1] as u8 - \\'0\\' as u8;\\n                        let b = (data[3] as u8 - \\'0\\' as u8) * 10 + data[4] as u8 - \\'0\\' as u8;\\n                        if a <= 23 && b <= 59 { s.insert(data.iter().collect()); }\\n                    }\\n                }\\n            }\\n        }\\n\\n        s.len() as _\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2707179,
                "title": "easiest-solution-in-c-with-if-else-100-o-1",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\nint countTime(string s) {\\n    int ans1=1;\\n    int ans2=1;\\n    if(s[0]==\\'?\\' and s[1]==\\'?\\'){\\n        ans1*=24;\\n    }\\n    else if(s[0]==\\'?\\' and s[1]!=\\'?\\'){\\n        if(s[1]<=\\'3\\') \\n            ans1*=3;\\n        if(s[1]>\\'3\\') \\n        ans1*=2;\\n    }   \\n    if(s[0]!=\\'?\\' and s[1]==\\'?\\'){\\n        if(s[0]==\\'2\\')\\n            ans1*=4;\\n        else\\n            ans1*=10;\\n    }\\n    if(s[3]==\\'?\\' and s[4]==\\'?\\'){\\n        ans2*=60;\\n    }\\n    else if(s[3]==\\'?\\' and s[4]!=\\'?\\')\\n        ans2*=6;\\n    if(s[3]!=\\'?\\' and s[4]==\\'?\\'){\\n        ans2*=10;\\n    }\\n    return ans1*ans2;\\n}\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\nint countTime(string s) {\\n    int ans1=1;\\n    int ans2=1;\\n    if(s[0]==\\'?\\' and s[1]==\\'?\\'){\\n        ans1*=24;\\n    }\\n    else if(s[0]==\\'?\\' and s[1]!=\\'?\\'){\\n        if(s[1]<=\\'3\\') \\n            ans1*=3;\\n        if(s[1]>\\'3\\') \\n        ans1*=2;\\n    }   \\n    if(s[0]!=\\'?\\' and s[1]==\\'?\\'){\\n        if(s[0]==\\'2\\')\\n            ans1*=4;\\n        else\\n            ans1*=10;\\n    }\\n    if(s[3]==\\'?\\' and s[4]==\\'?\\'){\\n        ans2*=60;\\n    }\\n    else if(s[3]==\\'?\\' and s[4]!=\\'?\\')\\n        ans2*=6;\\n    if(s[3]!=\\'?\\' and s[4]==\\'?\\'){\\n        ans2*=10;\\n    }\\n    return ans1*ans2;\\n}\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2707105,
                "title": "c-clean-solution",
                "content": "```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        string hr = time.substr(0,2),mn = time.substr(3);\\n        int res = 1;\\n        if(hr[0] == \\'?\\' and hr[1]==\\'?\\'){\\n            res = 24;\\n        }else if(hr[0] == \\'?\\'){\\n            res = hr[1] <=\\'3\\'?3:2;\\n        }else if(hr[1] == \\'?\\'){\\n            res = hr[0] < \\'2\\'?10:4;\\n        }\\n        \\n        if(mn[0] == \\'?\\' and mn[1] == \\'?\\'){\\n            res*=60;\\n        }else if(mn[0] ==\\'?\\'){\\n            res*=6;\\n        }else if(mn[1] == \\'?\\'){\\n            res*=10;\\n        }\\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        string hr = time.substr(0,2),mn = time.substr(3);\\n        int res = 1;\\n        if(hr[0] == \\'?\\' and hr[1]==\\'?\\'){\\n            res = 24;\\n        }else if(hr[0] == \\'?\\'){\\n            res = hr[1] <=\\'3\\'?3:2;\\n        }else if(hr[1] == \\'?\\'){\\n            res = hr[0] < \\'2\\'?10:4;\\n        }\\n        \\n        if(mn[0] == \\'?\\' and mn[1] == \\'?\\'){\\n            res*=60;\\n        }else if(mn[0] ==\\'?\\'){\\n            res*=6;\\n        }else if(mn[1] == \\'?\\'){\\n            res*=10;\\n        }\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706919,
                "title": "java-solution",
                "content": "Time : h1h2:m1m2\\ne.g. 03:54 means h1 =0 , h2 = 3, m1 = 5, and m2 =4\\n```\\nclass Solution {\\n    public int countTime(String time) {\\n        int ans = 1;\\n       \\n        int h1 = time.charAt(0) - \\'0\\';\\n        int h2 = time.charAt(1) - \\'0\\';\\n        int m1 = time.charAt(3) - \\'0\\';\\n        int m2 = time.charAt(4) - \\'0\\';\\n        \\n        //h1\\n        if(isQuestionMark(h1)) {\\n            if(isQuestionMark(h2)) {\\n                ans = 24;\\n            } else if(h2 >= 4) {\\n                ans = 2;\\n            } else {\\n                ans = 3;\\n            }\\n        }   \\n        //h2 \\n        if(isQuestionMark(h2) && !isQuestionMark(h1)) {\\n            if(h1 == 2){\\n                ans *= 4;\\n            } else {\\n                ans *= 10;\\n            }\\n        }\\n        \\n        //m1\\n        if(isQuestionMark(m1))\\n            ans *= 6;\\n\\t\\t//m2\\n        if(isQuestionMark(m2))\\n            ans *= 10;\\n        \\n        return ans;\\n    }\\n\\n    public boolean isQuestionMark (int h1) {\\n        if(h1 > 9  || h1 < 0) {\\n            return true;\\n        } \\n        return false;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "String"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        int ans = 1;\\n       \\n        int h1 = time.charAt(0) - \\'0\\';\\n        int h2 = time.charAt(1) - \\'0\\';\\n        int m1 = time.charAt(3) - \\'0\\';\\n        int m2 = time.charAt(4) - \\'0\\';\\n        \\n        //h1\\n        if(isQuestionMark(h1)) {\\n            if(isQuestionMark(h2)) {\\n                ans = 24;\\n            } else if(h2 >= 4) {\\n                ans = 2;\\n            } else {\\n                ans = 3;\\n            }\\n        }   \\n        //h2 \\n        if(isQuestionMark(h2) && !isQuestionMark(h1)) {\\n            if(h1 == 2){\\n                ans *= 4;\\n            } else {\\n                ans *= 10;\\n            }\\n        }\\n        \\n        //m1\\n        if(isQuestionMark(m1))\\n            ans *= 6;\\n\\t\\t//m2\\n        if(isQuestionMark(m2))\\n            ans *= 10;\\n        \\n        return ans;\\n    }\\n\\n    public boolean isQuestionMark (int h1) {\\n        if(h1 > 9  || h1 < 0) {\\n            return true;\\n        } \\n        return false;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706886,
                "title": "c-o-1",
                "content": "```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int a = 1, b = 1, c = 1, d = 1;\\n        if(time[0] == \\'?\\')\\n        {\\n            if(time[1] - \\'0\\' <= 3 || time[1] == \\'?\\')\\n              a = 3;\\n            else a = 2;\\n        }\\n        if(time[1] == \\'?\\')\\n        {\\n            if(time[0] - \\'0\\' == 2)\\n                b = 4;\\n            else if(time[0] == \\'?\\')\\n                b = 8; // for ?? : mm we can have 24 options, so in the end we will multiply a*b (ie, 3*8) to get 24 choices\\n            else b = 10;\\n        }\\n        if(time[3] == \\'?\\')\\n        {\\n            c = 6;\\n        }\\n        if(time[4] == \\'?\\')\\n        {\\n            d = 10;\\n        }\\n        return a*b*c*d;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int a = 1, b = 1, c = 1, d = 1;\\n        if(time[0] == \\'?\\')\\n        {\\n            if(time[1] - \\'0\\' <= 3 || time[1] == \\'?\\')\\n              a = 3;\\n            else a = 2;\\n        }\\n        if(time[1] == \\'?\\')\\n        {\\n            if(time[0] - \\'0\\' == 2)\\n                b = 4;\\n            else if(time[0] == \\'?\\')\\n                b = 8; // for ?? : mm we can have 24 options, so in the end we will multiply a*b (ie, 3*8) to get 24 choices\\n            else b = 10;\\n        }\\n        if(time[3] == \\'?\\')\\n        {\\n            c = 6;\\n        }\\n        if(time[4] == \\'?\\')\\n        {\\n            d = 10;\\n        }\\n        return a*b*c*d;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706702,
                "title": "simple-python-solution",
                "content": "```\\n\\n```class Solution:\\n    def countTime(self, time: str) -> int:\\n        count=0\\n        for i in range(1440):\\n            hh=i//60\\n            mm=i%60\\n            \\n            s=f\"{hh:02}:{mm:02}\"\\n                \\n            good=True\\n            for a,b in zip(time,s):\\n                if a!=b and a!=\"?\":\\n                    good=False\\n                    \\n            if good:\\n                count+=1\\n                \\n        return count",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2706674,
                "title": "java-easy-solution-0ms",
                "content": "\\n\\tclass Solution {\\n\\t\\tpublic int countTime(String time) {\\n\\t\\t\\tint hh = 1;\\n\\t\\t\\tint mm = 1;\\n\\t\\t\\t  if (time.charAt(0) == \\'?\\' && time.charAt(1) != \\'?\\') {\\n\\t\\t\\t\\tif (time.charAt(1) <= \\'3\\')\\n\\t\\t\\t\\t\\thh *= 3;\\n\\t\\t\\t\\t else \\n\\t\\t\\t\\t\\thh *= 2;\\n\\n\\t\\t\\t  } \\n\\t\\t\\t\\telse if (time.charAt(0) != \\'?\\' && time.charAt(1) == \\'?\\') {\\n\\t\\t\\t\\t\\tif (time.charAt(0) <= \\'1\\') \\n\\t\\t\\t\\t\\t\\thh *= 10;\\n\\t\\t\\t\\t\\t else \\n\\t\\t\\t\\t\\t\\thh *= 4;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse if (time.charAt(0) == \\'?\\' && time.charAt(1) == \\'?\\') \\n\\t\\t\\t\\t\\thh *= 24;\\n\\n\\t\\t\\t\\tif (time.charAt(3) == \\'?\\') \\n\\t\\t\\t\\t\\tmm *= 6;\\n\\n\\t\\t\\t\\tif (time.charAt(4) == \\'?\\') \\n\\t\\t\\t\\t\\tmm *= 10;\\n\\n\\t\\t\\treturn hh * mm;\\n\\t\\t}\\n\\t}",
                "solutionTags": [],
                "code": "class Solution {\\n\\t\\tpublic int countTime(String time) {\\n\\t\\t\\tint hh = 1;\\n\\t\\t\\tint mm = 1;\\n\\t\\t\\t  if (time.charAt(0) == \\'?\\' && time.charAt(1) != \\'?\\') {\\n\\t\\t\\t\\tif (time.charAt(1) <= \\'3\\')\\n\\t\\t\\t\\t\\thh *= 3;\\n\\t\\t\\t\\t else \\n\\t\\t\\t\\t\\thh *= 2;\\n\\n\\t\\t\\t  }",
                "codeTag": "Java"
            },
            {
                "id": 2706630,
                "title": "easy-c-solution-logic-building",
                "content": "**Upvote if it helps u :)**\\n```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        vector<int> v;\\n        int mul=1;\\n        int x = time[1] - \\'0\\';\\n        int y = time[0] -\\'0\\';\\n        \\n     \\n       if(time[0]==\\'?\\' && time[1] == \\'?\\'){\\n           v.push_back(24);\\n       }\\n        else if(time[0] == \\'?\\' && x>3){\\n            v.push_back(2);\\n        }\\n        else if(y==2 && time[1]==\\'?\\'){\\n            v.push_back(4);\\n        }\\n        else if(time[0] ==\\'?\\' && x<=3){\\n            v.push_back(3);\\n        }\\n        else if(time[1]==\\'?\\'){\\n            v.push_back(10);\\n        }\\n        \\n        if(time[3] ==\\'?\\' && time[4] ==\\'?\\'){\\n            v.push_back(60);\\n        }\\n        else if(time[3]==\\'?\\'){\\n            v.push_back(6);\\n        }\\n        else if(time[4]==\\'?\\'){\\n            v.push_back(10);\\n        }\\n        \\n        \\n        for(auto it: v){\\n            mul *=it;\\n        }\\n        \\n        return mul;\\n    }\\n};\\n\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        vector<int> v;\\n        int mul=1;\\n        int x = time[1] - \\'0\\';\\n        int y = time[0] -\\'0\\';\\n        \\n     \\n       if(time[0]==\\'?\\' && time[1] == \\'?\\'){\\n           v.push_back(24);\\n       }\\n        else if(time[0] == \\'?\\' && x>3){\\n            v.push_back(2);\\n        }\\n        else if(y==2 && time[1]==\\'?\\'){\\n            v.push_back(4);\\n        }\\n        else if(time[0] ==\\'?\\' && x<=3){\\n            v.push_back(3);\\n        }\\n        else if(time[1]==\\'?\\'){\\n            v.push_back(10);\\n        }\\n        \\n        if(time[3] ==\\'?\\' && time[4] ==\\'?\\'){\\n            v.push_back(60);\\n        }\\n        else if(time[3]==\\'?\\'){\\n            v.push_back(6);\\n        }\\n        else if(time[4]==\\'?\\'){\\n            v.push_back(10);\\n        }\\n        \\n        \\n        for(auto it: v){\\n            mul *=it;\\n        }\\n        \\n        return mul;\\n    }\\n};\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706613,
                "title": "c-easy",
                "content": "\\n# Code\\n```\\nclass Solution \\n{\\npublic:\\n    int countTime(string time) \\n    {   \\n        int ans=1;\\n        \\n        if(time[0]==\\'?\\' && time[1]==\\'?\\') //when first both HH are ?? of (HH:MM)\\n                ans *= 24;   \\n        \\n        else\\n        {\\n            if(time[0]==\\'?\\')  //when first H is ? and second H has some value of (HH:MM)\\n            {\\n                if(time[1] < \\'4\\') \\n                    ans *= 3;\\n                else\\n                    ans *= 2;\\n            }\\n\\n            if(time[1]==\\'?\\') //when second H is ? and first H has some value of (HH:MM)\\n            {\\n                if(time[0] < \\'2\\')\\n                    ans *= 10;\\n                else\\n                    ans *= 4;\\n            }\\n        }\\n        \\n        if(time[3]==\\'?\\') //for first M of (HH:MM)\\n        {\\n            ans *= 6;\\n        }\\n\\n        if(time[4]==\\'?\\') // for second M of (HH:MM)\\n        {\\n            ans *= 10;\\n        }       \\n            \\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution \\n{\\npublic:\\n    int countTime(string time) \\n    {   \\n        int ans=1;\\n        \\n        if(time[0]==\\'?\\' && time[1]==\\'?\\') //when first both HH are ?? of (HH:MM)\\n                ans *= 24;   \\n        \\n        else\\n        {\\n            if(time[0]==\\'?\\')  //when first H is ? and second H has some value of (HH:MM)\\n            {\\n                if(time[1] < \\'4\\') \\n                    ans *= 3;\\n                else\\n                    ans *= 2;\\n            }\\n\\n            if(time[1]==\\'?\\') //when second H is ? and first H has some value of (HH:MM)\\n            {\\n                if(time[0] < \\'2\\')\\n                    ans *= 10;\\n                else\\n                    ans *= 4;\\n            }\\n        }\\n        \\n        if(time[3]==\\'?\\') //for first M of (HH:MM)\\n        {\\n            ans *= 6;\\n        }\\n\\n        if(time[4]==\\'?\\') // for second M of (HH:MM)\\n        {\\n            ans *= 10;\\n        }       \\n            \\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706599,
                "title": "python-brute-force-straightforward",
                "content": "#### Intuition:\\nIn this solution, we will consider two parts `minutes` and `hours` to find the number of permutations.\\n\\n#### Complexity Analysis:\\n`Time Complexity: O(1)`\\n`Space Complexity: O(1)`\\n\\n#### Code:\\n```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        first, second, _, third, fourth = time\\n\\t\\t\\n        if third == \\'?\\' and fourth == \\'?\\': # third can be 0-5, fourth can be 0-9\\n            minutes = 60\\n        elif third == \\'?\\' and fourth != \\'?\\': # third can be 0-5, fourth is fixed\\n            minutes = 6\\n        elif third != \\'?\\' and fourth == \\'?\\': # third is fixed, fourth can be 0-9\\n            minutes = 10\\n        else:\\n            minutes = 1\\n            \\n        if first == \\'?\\' and second == \\'?\\': # first and second together can be 0-23\\n            hours = 24\\n        elif first == \\'?\\' and second != \\'?\\':\\n            if int(second) < 4: # if second < 4, means we can include 2 as hour starting with 2 can only be 20-23\\n                hours = 3\\n            else: # if second >= 4, we can only include 0, 1, same reasoning as above\\n                hours = 2\\n        elif first != \\'?\\' and second == \\'?\\':\\n            if int(first) == 2: # if first is 2, we can only choose 0-3 as valid hour is 20-23\\n                hours = 4\\n            else: #  we can choose 0-9\\n                hours = 10\\n        else: \\n            hours = 1\\n        \\n        return minutes * hours\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        first, second, _, third, fourth = time\\n\\t\\t\\n        if third == \\'?\\' and fourth == \\'?\\': # third can be 0-5, fourth can be 0-9\\n            minutes = 60\\n        elif third == \\'?\\' and fourth != \\'?\\': # third can be 0-5, fourth is fixed\\n            minutes = 6\\n        elif third != \\'?\\' and fourth == \\'?\\': # third is fixed, fourth can be 0-9\\n            minutes = 10\\n        else:\\n            minutes = 1\\n            \\n        if first == \\'?\\' and second == \\'?\\': # first and second together can be 0-23\\n            hours = 24\\n        elif first == \\'?\\' and second != \\'?\\':\\n            if int(second) < 4: # if second < 4, means we can include 2 as hour starting with 2 can only be 20-23\\n                hours = 3\\n            else: # if second >= 4, we can only include 0, 1, same reasoning as above\\n                hours = 2\\n        elif first != \\'?\\' and second == \\'?\\':\\n            if int(first) == 2: # if first is 2, we can only choose 0-3 as valid hour is 20-23\\n                hours = 4\\n            else: #  we can choose 0-9\\n                hours = 10\\n        else: \\n            hours = 1\\n        \\n        return minutes * hours\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706590,
                "title": "java-2-approaches-same-logic-dirty-clean-codes",
                "content": "### **Please Upvote** :D\\n##### 1. Messed up approach:\\n```\\nclass Solution {\\n    public int countTime(String time) {\\n        char[] Time = time.toCharArray();\\n\\n        int hrs = 1;\\n\\n        if (Time[0] == \\'?\\' && Time[1] == \\'?\\') {\\n            hrs = 24;\\n        }\\n        else if (Time[0] == \\'?\\' && Time[1] != \\'?\\') {\\n            if (Time[1] > \\'3\\') hrs = 2;\\n            else hrs = 3;\\n        }\\n        else if (Time[0] != \\'?\\' && Time[1] == \\'?\\') {\\n            if (Time[0] == \\'2\\') hrs = 4;\\n            else hrs = 10;\\n        }\\n\\n        int mins = 1;\\n\\n        if (Time[3] == \\'?\\' && Time[4] == \\'?\\') {\\n            mins *= 60;\\n        }\\n        else if (Time[3] == \\'?\\' && Time[4] != \\'?\\') {\\n            mins *= 6;\\n        }\\n        else if (Time[3] != \\'?\\' && Time[4] == \\'?\\') {\\n            mins *= 10;\\n        }\\n\\n        return hrs * mins;\\n    }\\n}\\n```\\n##### 2. Cleaner approach from calm mind:\\n```\\nclass Solution {\\n    public int countTime(String time) {\\n        if (time.equals(\"??:??\")) return 24 * 60;\\n\\n        char[] t = time.toCharArray();\\n        int ans = 1;\\n\\n        if (t[0] == \\'?\\' && t[1] == \\'?\\') ans *= 24;\\n\\n        else if (t[0] == \\'?\\') {\\n            ans *= (t[1] > \\'3\\') ? 2 : 3;\\n        }\\n\\n        else if (t[1] == \\'?\\') {\\n            ans *= (t[0] == \\'2\\') ? 4 : 10;\\n        }\\n\\n        if (t[3] == \\'?\\') ans *= 6;\\n        if (t[4] == \\'?\\') ans *= 10;\\n\\n        return ans;\\n    }\\n}\\n\\n\\n// TC: O(1), SC: O(n)\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        char[] Time = time.toCharArray();\\n\\n        int hrs = 1;\\n\\n        if (Time[0] == \\'?\\' && Time[1] == \\'?\\') {\\n            hrs = 24;\\n        }\\n        else if (Time[0] == \\'?\\' && Time[1] != \\'?\\') {\\n            if (Time[1] > \\'3\\') hrs = 2;\\n            else hrs = 3;\\n        }\\n        else if (Time[0] != \\'?\\' && Time[1] == \\'?\\') {\\n            if (Time[0] == \\'2\\') hrs = 4;\\n            else hrs = 10;\\n        }\\n\\n        int mins = 1;\\n\\n        if (Time[3] == \\'?\\' && Time[4] == \\'?\\') {\\n            mins *= 60;\\n        }\\n        else if (Time[3] == \\'?\\' && Time[4] != \\'?\\') {\\n            mins *= 6;\\n        }\\n        else if (Time[3] != \\'?\\' && Time[4] == \\'?\\') {\\n            mins *= 10;\\n        }\\n\\n        return hrs * mins;\\n    }\\n}\\n```\n```\\nclass Solution {\\n    public int countTime(String time) {\\n        if (time.equals(\"??:??\")) return 24 * 60;\\n\\n        char[] t = time.toCharArray();\\n        int ans = 1;\\n\\n        if (t[0] == \\'?\\' && t[1] == \\'?\\') ans *= 24;\\n\\n        else if (t[0] == \\'?\\') {\\n            ans *= (t[1] > \\'3\\') ? 2 : 3;\\n        }\\n\\n        else if (t[1] == \\'?\\') {\\n            ans *= (t[0] == \\'2\\') ? 4 : 10;\\n        }\\n\\n        if (t[3] == \\'?\\') ans *= 6;\\n        if (t[4] == \\'?\\') ans *= 10;\\n\\n        return ans;\\n    }\\n}\\n\\n\\n// TC: O(1), SC: O(n)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706574,
                "title": "java-beginner-friendly",
                "content": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        \\n        char[] s = time.toCharArray();\\n        \\n        int ans=1;\\n\\n        if(s[0]==\\'?\\'){\\n\\n            if(s[1]==\\'?\\'){\\n\\n                ans*=24;\\n\\n            }else{\\n\\n                if(s[1]<=\\'3\\')\\n\\n                    ans*=3;\\n\\n                else\\n\\n                    ans*=2;\\n\\n            }\\n\\n        }\\n\\n        else if(s[1]==\\'?\\'){\\n\\n            if(s[0]<\\'2\\'){\\n\\n                ans*=10;\\n\\n            }else{\\n\\n                ans*=4;\\n\\n            }\\n\\n        }\\n\\n        \\n\\n        if(s[3]==\\'?\\'){\\n\\n            if(s[4]==\\'?\\'){\\n\\n                ans*=60;\\n\\n            }else{\\n\\n                ans*=6;\\n\\n            }\\n\\n        }else if(s[4]==\\'?\\'){\\n\\n            ans*=10;\\n\\n        }\\n\\n        return ans; \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        \\n        char[] s = time.toCharArray();\\n        \\n        int ans=1;\\n\\n        if(s[0]==\\'?\\'){\\n\\n            if(s[1]==\\'?\\'){\\n\\n                ans*=24;\\n\\n            }else{\\n\\n                if(s[1]<=\\'3\\')\\n\\n                    ans*=3;\\n\\n                else\\n\\n                    ans*=2;\\n\\n            }\\n\\n        }\\n\\n        else if(s[1]==\\'?\\'){\\n\\n            if(s[0]<\\'2\\'){\\n\\n                ans*=10;\\n\\n            }else{\\n\\n                ans*=4;\\n\\n            }\\n\\n        }\\n\\n        \\n\\n        if(s[3]==\\'?\\'){\\n\\n            if(s[4]==\\'?\\'){\\n\\n                ans*=60;\\n\\n            }else{\\n\\n                ans*=6;\\n\\n            }\\n\\n        }else if(s[4]==\\'?\\'){\\n\\n            ans*=10;\\n\\n        }\\n\\n        return ans; \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706499,
                "title": "java-solution",
                "content": "```java\\nclass Solution {\\n    public int countTime(String time) {\\n        int ans = 1;\\n        char[] str = time.toCharArray();\\n        int h0 = str[0] - \\'0\\', h1 = str[1] - \\'0\\';\\n        if(str[4] == \\'?\\') {\\n            ans *= 10;\\n        }\\n        if(str[3] == \\'?\\') {\\n            ans *= 6;\\n        }\\n        if(str[1] == \\'?\\') {\\n            if(str[0] >= \\'0\\' && str[0] <= \\'1\\') {\\n                ans *= 10;\\n            }\\n            else if(str[0] == \\'2\\') {\\n                ans *= 4;\\n            }\\n            else if(str[0] == \\'?\\') {\\n                ans *= 24;\\n            }\\n        }\\n        if(str[0] == \\'?\\') {\\n            if(str[1] >= \\'0\\' && str[1] <= \\'3\\') {\\n                ans *= 3;\\n            }\\n            else if(str[1] >= \\'4\\' && str[1] <= \\'9\\') {\\n                ans *= 2;\\n            }\\n        }\\n        return ans;\\n    }\\n}",
                "solutionTags": [
                    "String",
                    "Greedy"
                ],
                "code": "class Solution {\\n    public int countTime(String time) {\\n        int ans = 1;\\n        char[] str = time.toCharArray();\\n        int h0 = str[0] - \\'0\\', h1 = str[1] - \\'0\\';\\n        if(str[4] == \\'?\\') {\\n            ans *= 10;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 2706492,
                "title": "python-o-1-easy-solution",
                "content": "```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        h,m = time.split(\":\")\\n        ans = 0\\n        #00:00~23:59\\n        #Hours\\n        tempH = 1\\n        if h ==\"??\":\\n            tempH = 24\\n        elif h[0] == \"?\" and h[1]>\"3\":# \"?4\",\"?5\",\"?6\",\"?7\"\\n            tempH = 2 #0,1\\n        elif h[0] == \"?\" and h[1]<=\"3\":\\n            tempH = 3 #0,1,2\\n        elif h[1] == \"?\" and h[0] == \"2\": #\"2?\"\\n            tempH = 4 #0,1,2,3 \\n        elif h[1] == \"?\" and h[0] <\"2\": # \"1?\",\"0?\"\\n            tempH = 10 #0,1,2,3,4,5,6,7,8,9\\n        tempM = 1\\n        \\n        #Minutes\\n        if m == \"??\": #\\n            tempM = 60 #0~60 min\\n        elif m[1] == \"?\": #\"0?\"~\"5?\"\\n            tempM = 10 #0,1,2,3,4,5,6,7,8,9\\n        elif m[0] == \"?\": #\"?0\"\\n            tempM = 6 #0,1,2,3,4,5\\n        # print(tempH,tempM)\\n        return tempH*tempM\\n        \\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        h,m = time.split(\":\")\\n        ans = 0\\n        #00:00~23:59\\n        #Hours\\n        tempH = 1\\n        if h ==\"??\":\\n            tempH = 24\\n        elif h[0] == \"?\" and h[1]>\"3\":# \"?4\",\"?5\",\"?6\",\"?7\"\\n            tempH = 2 #0,1\\n        elif h[0] == \"?\" and h[1]<=\"3\":\\n            tempH = 3 #0,1,2\\n        elif h[1] == \"?\" and h[0] == \"2\": #\"2?\"\\n            tempH = 4 #0,1,2,3 \\n        elif h[1] == \"?\" and h[0] <\"2\": # \"1?\",\"0?\"\\n            tempH = 10 #0,1,2,3,4,5,6,7,8,9\\n        tempM = 1\\n        \\n        #Minutes\\n        if m == \"??\": #\\n            tempM = 60 #0~60 min\\n        elif m[1] == \"?\": #\"0?\"~\"5?\"\\n            tempM = 10 #0,1,2,3,4,5,6,7,8,9\\n        elif m[0] == \"?\": #\"?0\"\\n            tempM = 6 #0,1,2,3,4,5\\n        # print(tempH,tempM)\\n        return tempH*tempM\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706487,
                "title": "recursion-c",
                "content": "```\\nclass Solution { \\n    int ans = 0;\\n    void solve(string &s, int ind) {\\n        int n = s.size();\\n        \\n        if (ind == n) {\\n            int flag = 1;\\n            for(auto &i: s)  {\\n                if (i == \\'?\\') return;\\n            }\\n            \\n            int tt = stoi(s.substr(0, 2));\\n            int mm = stoi(s.substr(3));\\n            \\n            if (tt > 23 or mm > 59) return;\\n            int temp = tt * 60 + mm;\\n\\n            if (temp < 1440)\\n                ans++;\\n            \\n            return;\\n        }\\n        \\n        if (s[ind] == \\'?\\') {\\n            for (int i = 0; i <= 9; i++) {\\n                s[ind] = \\'0\\' + i;\\n                solve(s, ind + 1);\\n                s[ind] = \\'?\\';\\n            }\\n        }    \\n        \\n        solve(s, ind + 1);\\n    }\\npublic:\\n    int countTime(string time) {\\n        ans = 0;\\n        solve(time, 0);\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Recursion"
                ],
                "code": "```\\nclass Solution { \\n    int ans = 0;\\n    void solve(string &s, int ind) {\\n        int n = s.size();\\n        \\n        if (ind == n) {\\n            int flag = 1;\\n            for(auto &i: s)  {\\n                if (i == \\'?\\') return;\\n            }\\n            \\n            int tt = stoi(s.substr(0, 2));\\n            int mm = stoi(s.substr(3));\\n            \\n            if (tt > 23 or mm > 59) return;\\n            int temp = tt * 60 + mm;\\n\\n            if (temp < 1440)\\n                ans++;\\n            \\n            return;\\n        }\\n        \\n        if (s[ind] == \\'?\\') {\\n            for (int i = 0; i <= 9; i++) {\\n                s[ind] = \\'0\\' + i;\\n                solve(s, ind + 1);\\n                s[ind] = \\'?\\';\\n            }\\n        }    \\n        \\n        solve(s, ind + 1);\\n    }\\npublic:\\n    int countTime(string time) {\\n        ans = 0;\\n        solve(time, 0);\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706438,
                "title": "java-verbose-backtracking",
                "content": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        return helper(new StringBuilder(time), 0);\\n    }\\n    \\n    private int helper(StringBuilder time, int index) {\\n        \\n        if(index >= time.length()) {\\n            return isValid(time) ? 1 : 0;\\n        }\\n        \\n        if(time.charAt(index) != \\'?\\') {\\n            return helper(time, index+1);\\n        }\\n        \\n        int count = 0;\\n        \\n        for(int i = 0; i <= 9; i ++) {\\n            time.setCharAt(index, (char)(i+\\'0\\'));\\n            count += helper(time, index+1);\\n            time.setCharAt(index, \\'?\\');\\n        }\\n        \\n        return count;\\n    }\\n    \\n    private boolean isValid(StringBuilder time) {\\n        int hh = 0;\\n        hh += (time.charAt(0) - \\'0\\');\\n        hh *= 10;\\n        hh += (time.charAt(1) - \\'0\\');\\n        \\n        int mm = 0;\\n        mm += (time.charAt(3) - \\'0\\');\\n        mm *= 10;\\n        mm += (time.charAt(4) - \\'0\\');       \\n        \\n        return hh >= 0 && hh <= 23 && mm >= 0 && mm <= 59;\\n        \\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        return helper(new StringBuilder(time), 0);\\n    }\\n    \\n    private int helper(StringBuilder time, int index) {\\n        \\n        if(index >= time.length()) {\\n            return isValid(time) ? 1 : 0;\\n        }\\n        \\n        if(time.charAt(index) != \\'?\\') {\\n            return helper(time, index+1);\\n        }\\n        \\n        int count = 0;\\n        \\n        for(int i = 0; i <= 9; i ++) {\\n            time.setCharAt(index, (char)(i+\\'0\\'));\\n            count += helper(time, index+1);\\n            time.setCharAt(index, \\'?\\');\\n        }\\n        \\n        return count;\\n    }\\n    \\n    private boolean isValid(StringBuilder time) {\\n        int hh = 0;\\n        hh += (time.charAt(0) - \\'0\\');\\n        hh *= 10;\\n        hh += (time.charAt(1) - \\'0\\');\\n        \\n        int mm = 0;\\n        mm += (time.charAt(3) - \\'0\\');\\n        mm *= 10;\\n        mm += (time.charAt(4) - \\'0\\');       \\n        \\n        return hh >= 0 && hh <= 23 && mm >= 0 && mm <= 59;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706410,
                "title": "java-brainless-condition-check",
                "content": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        String[] help = time.split(\":\");\\n        int res = 1;\\n        String hour = help[0];\\n        String m = help[1];\\n        int hourChoices = getHour(hour);\\n        int timeChoices = getTime(m);\\n        res = res * hourChoices * timeChoices;\\n        return res;\\n    }\\n    public int getHour(String h) {\\n        if (h.charAt(0) == \\'?\\') {\\n            if (h.charAt(1) == \\'?\\') {\\n                return 24; \\n            } else if (h.charAt(1) > \\'3\\'){\\n                return 2;\\n            } else {\\n                return 3;\\n            }\\n        } else {\\n            if (h.charAt(1) != \\'?\\') {\\n                return 1;\\n            } else if (h.charAt(0) == \\'2\\') {\\n                return 4;\\n            } else {\\n                return 10;\\n            }\\n        }\\n    }\\n    public int getTime(String t) {\\n        int res = 1;\\n        if (t.charAt(0) == \\'?\\') {\\n            res *= 6;\\n        } \\n        if (t.charAt(1) == \\'?\\') {\\n            res *= 10;\\n        }\\n        return res;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        String[] help = time.split(\":\");\\n        int res = 1;\\n        String hour = help[0];\\n        String m = help[1];\\n        int hourChoices = getHour(hour);\\n        int timeChoices = getTime(m);\\n        res = res * hourChoices * timeChoices;\\n        return res;\\n    }\\n    public int getHour(String h) {\\n        if (h.charAt(0) == \\'?\\') {\\n            if (h.charAt(1) == \\'?\\') {\\n                return 24; \\n            } else if (h.charAt(1) > \\'3\\'){\\n                return 2;\\n            } else {\\n                return 3;\\n            }\\n        } else {\\n            if (h.charAt(1) != \\'?\\') {\\n                return 1;\\n            } else if (h.charAt(0) == \\'2\\') {\\n                return 4;\\n            } else {\\n                return 10;\\n            }\\n        }\\n    }\\n    public int getTime(String t) {\\n        int res = 1;\\n        if (t.charAt(0) == \\'?\\') {\\n            res *= 6;\\n        } \\n        if (t.charAt(1) == \\'?\\') {\\n            res *= 10;\\n        }\\n        return res;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706401,
                "title": "c",
                "content": "int countTime(string s) {\\n        int ans=0;\\n        if(s[0]==s[1] and s[1]==\\'?\\'){\\n            ans+=24;\\n        }else if(s[0]==\\'?\\'){\\n            if(s[1]<=\\'3\\')ans+=3;\\n            else ans+=2;\\n        }else if(s[1]==\\'?\\'){\\n            if(s[0]==\\'2\\')ans+=4;\\n            else ans+=10;\\n        }\\n        \\n        int ans2=0;\\n           if(s[3]==s[4] and s[3]==\\'?\\'){\\n            ans2+=60;\\n        }else if(s[3]==\\'?\\'){\\n            ans2+=6;\\n        }else if(s[4]==\\'?\\') ans2+=10;\\n        if(ans2==0)ans2=1;\\n        if(ans==0)ans=1;\\n        \\n        return ans*ans2;\\n        \\n        \\n    }\\n};",
                "solutionTags": [
                    "C"
                ],
                "code": "int countTime(string s) {\\n        int ans=0;\\n        if(s[0]==s[1] and s[1]==\\'?\\'){\\n            ans+=24;\\n        }else if(s[0]==\\'?\\'){\\n            if(s[1]<=\\'3\\')ans+=3;\\n            else ans+=2;\\n        }else if(s[1]==\\'?\\'){\\n            if(s[0]==\\'2\\')ans+=4;\\n            else ans+=10;\\n        }\\n        \\n        int ans2=0;\\n           if(s[3]==s[4] and s[3]==\\'?\\'){\\n            ans2+=60;\\n        }else if(s[3]==\\'?\\'){\\n            ans2+=6;\\n        }else if(s[4]==\\'?\\') ans2+=10;\\n        if(ans2==0)ans2=1;\\n        if(ans==0)ans=1;\\n        \\n        return ans*ans2;\\n        \\n        \\n    }\\n};",
                "codeTag": "Unknown"
            },
            {
                "id": 2706373,
                "title": "c-easy",
                "content": "class Solution \\n{\\npublic:\\n    int countTime(string time) \\n    {   \\n        int ans=1;\\n        if(count==4) return 24*60;\\n        \\n        if(time[0]==\\'?\\' && time[1]==\\'?\\') //for HH\\n                ans *= 24;   \\n        \\n        if(time[0]==\\'?\\' && time[1]!=\\'?\\') \\n        {\\n            if(time[1] < \\'4\\') \\n                ans *= 3;\\n            else\\n                ans *= 2;\\n        }\\n\\n        if(time[1]==\\'?\\' && time[0]!=\\'?\\')\\n        {\\n            if(time[0] < \\'2\\')\\n                ans *= 10;\\n            else\\n                ans *= 4;\\n        }\\n        \\n        /\\n        if(time[3]==\\'?\\')\\n        {\\n            ans *= 6;\\n        }\\n\\n        if(time[4]==\\'?\\')\\n        {\\n            ans *= 10;\\n        }       \\n            \\n        return ans;\\n    }\\n};",
                "solutionTags": [
                    "C"
                ],
                "code": "class Solution \\n{\\npublic:\\n    int countTime(string time) \\n    {   \\n        int ans=1;\\n        if(count==4) return 24*60;\\n        \\n        if(time[0]==\\'?\\' && time[1]==\\'?\\') //for HH\\n                ans *= 24;   \\n        \\n        if(time[0]==\\'?\\' && time[1]!=\\'?\\') \\n        {\\n            if(time[1] < \\'4\\') \\n                ans *= 3;\\n            else\\n                ans *= 2;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 2706372,
                "title": "c-solution-using-few-if-statements",
                "content": "```\\nint countTime(string time) {\\n        int a=1,b=1,c=1,d=1;\\n        if(time[4]==\\'?\\')\\n            d=10;\\n        \\n        if(time[3]==\\'?\\')\\n            c=6;\\n        \\n        if(time[1]==\\'?\\')\\n        {\\n            if(time[0]==\\'2\\')\\n                b=4;\\n            else if(time[0]==\\'?\\')\\n                b=1;\\n            else\\n                b=10;\\n        }\\n        \\n        if(time[0]==\\'?\\')\\n        {\\n            if(time[1]>\\'3\\' && time[1]<=\\'9\\')\\n                a=2;\\n            else if(time[1]==\\'?\\')\\n            {\\n                a=24;\\n            }\\n            else\\n                a=3;\\n        }\\n        return a*b*c*d; \\n    }\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint countTime(string time) {\\n        int a=1,b=1,c=1,d=1;\\n        if(time[4]==\\'?\\')\\n            d=10;\\n        \\n        if(time[3]==\\'?\\')\\n            c=6;\\n        \\n        if(time[1]==\\'?\\')\\n        {\\n            if(time[0]==\\'2\\')\\n                b=4;\\n            else if(time[0]==\\'?\\')\\n                b=1;\\n            else\\n                b=10;\\n        }\\n        \\n        if(time[0]==\\'?\\')\\n        {\\n            if(time[1]>\\'3\\' && time[1]<=\\'9\\')\\n                a=2;\\n            else if(time[1]==\\'?\\')\\n            {\\n                a=24;\\n            }\\n            else\\n                a=3;\\n        }\\n        return a*b*c*d; \\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4086209,
                "title": "easy-solution-1-line",
                "content": "# Complexity\\n- Time complexity:\\nO(1)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        return (24 if time[0] == time[1] == \\'?\\' else (3 if int(time[1]) < 4 else 2) if time[0] == \\'?\\' else (10 if int(time[0]) < 2 else 4) if time[1] == \\'?\\' else 1) * (60 if time[3] == time[4] == \\'?\\' else 6 if time[3] == \\'?\\' else 10 if time[4] == \\'?\\' else 1)\\n```\\n\\nPlease let me know if any improvements can be made.\\n\\nThanks",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        return (24 if time[0] == time[1] == \\'?\\' else (3 if int(time[1]) < 4 else 2) if time[0] == \\'?\\' else (10 if int(time[0]) < 2 else 4) if time[1] == \\'?\\' else 1) * (60 if time[3] == time[4] == \\'?\\' else 6 if time[3] == \\'?\\' else 10 if time[4] == \\'?\\' else 1)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4064985,
                "title": "jebasraja-very-easy",
                "content": "# Intuition:KARUNYA UNIVERSITY::ACCENTURE\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution \\n{\\n    public int countTime(String time) \\n    {\\n       int hours=1;\\n\\n//??\\n if (time.charAt(0)==\\'?\\' && time.charAt(1)==\\'?\\') \\n {\\n    hours=24;\\n }\\n\\n //?n\\n else if(time.charAt(0)==\\'?\\')\\n {  \\n    hours=2;\\n    if (time.charAt(1)<=\\'3\\') \\n    { \\n        System.out.println(\"serw\");\\n        hours=hours+1;\\n    }\\n }\\n\\n //n?\\n else if(time.charAt(1)==\\'?\\')\\n {  \\n    if (time.charAt(0)==\\'2\\') \\n    {\\n      hours=4;    \\n    }\\n    else \\n    {\\n     hours=10;\\n    }\\n }\\n\\n\\n System.out.println(\"hours \"+hours);\\n\\n int minutes=1;\\n //minutes\\n //??\\n if (time.charAt(3)==\\'?\\' && time.charAt(4)==\\'?\\') \\n {\\n   minutes=60;     \\n }\\n //?n\\nelse if (time.charAt(3)==\\'?\\') \\n{\\n    minutes=6;\\n}\\n//n?\\n else if (time.charAt(4)==\\'?\\') \\n{\\n    minutes=10;\\n}\\nSystem.out.println(\"Minutes\"+minutes);\\n\\nreturn minutes*hours;\\n/*\\nif (hours!=0 && minutes!=0) \\n{\\n   System.out.println(minutes*hours);        \\n}\\n  */\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution \\n{\\n    public int countTime(String time) \\n    {\\n       int hours=1;\\n\\n//??\\n if (time.charAt(0)==\\'?\\' && time.charAt(1)==\\'?\\') \\n {\\n    hours=24;\\n }\\n\\n //?n\\n else if(time.charAt(0)==\\'?\\')\\n {  \\n    hours=2;\\n    if (time.charAt(1)<=\\'3\\') \\n    { \\n        System.out.println(\"serw\");\\n        hours=hours+1;\\n    }\\n }\\n\\n //n?\\n else if(time.charAt(1)==\\'?\\')\\n {  \\n    if (time.charAt(0)==\\'2\\') \\n    {\\n      hours=4;    \\n    }\\n    else \\n    {\\n     hours=10;\\n    }\\n }\\n\\n\\n System.out.println(\"hours \"+hours);\\n\\n int minutes=1;\\n //minutes\\n //??\\n if (time.charAt(3)==\\'?\\' && time.charAt(4)==\\'?\\') \\n {\\n   minutes=60;     \\n }\\n //?n\\nelse if (time.charAt(3)==\\'?\\') \\n{\\n    minutes=6;\\n}\\n//n?\\n else if (time.charAt(4)==\\'?\\') \\n{\\n    minutes=10;\\n}\\nSystem.out.println(\"Minutes\"+minutes);\\n\\nreturn minutes*hours;\\n/*\\nif (hours!=0 && minutes!=0) \\n{\\n   System.out.println(minutes*hours);        \\n}\\n  */\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4061876,
                "title": "javascript-simple-and-tidy-solution",
                "content": "# Complexity\\n- Time complexity: $$O(1)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nvar countTime = function(time) {\\n    let ans = 0\\n\\n    if (time[0] == \\'?\\') ans = time[1] > 3 ? 2 : 3\\n    if (time[1] == \\'?\\') ans = time[0] == 2 ? 4 : ans ? 8 * ans : 10\\n    if (time[3] == \\'?\\') ans = ans ? 6 * ans : 6\\n    if (time[4] == \\'?\\') ans = ans ? 10 * ans : 10\\n\\n    return ans || 1\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar countTime = function(time) {\\n    let ans = 0\\n\\n    if (time[0] == \\'?\\') ans = time[1] > 3 ? 2 : 3\\n    if (time[1] == \\'?\\') ans = time[0] == 2 ? 4 : ans ? 8 * ans : 10\\n    if (time[3] == \\'?\\') ans = ans ? 6 * ans : 6\\n    if (time[4] == \\'?\\') ans = ans ? 10 * ans : 10\\n\\n    return ans || 1\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4059630,
                "title": "c-python-digit-dp-counting-solution-with-explanation",
                "content": "### digit dp\\nreplace a digit with ?,\\nis_limit means digit we fill is upper bound for this position,\\nwhen time[0] = 2, time[1] can be 0,1,2,3, if not, time[1] can be 0~9.\\nand time[3] always can be 0~5, time[4] always can be 0~9,\\nso is_limit is to limit digit at time[1].\\n\\n\\n### python\\n```python\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        @cache\\n        def dfs(i, is_limit):\\n            if i == len(time): return 1\\n            if time[i] != \\'?\\':\\n                if is_limit and i == 1 and int(time[i]) > 3: return 0 # is_limit is to limit digit at time[1]\\n                return dfs(i+1, is_limit and (i == 0 and time[0] == \\'2\\' or i == 1 and time[1] == \\'3\\'))\\n            sub = 0\\n            low = 0 # smallest digit we can fill\\n\\t\\t\\t\\n\\t\\t\\t# largest digit we can fill\\n            if i == 0: high = 2\\n            elif i == 1: high = 9 if not is_limit else 3\\n            elif i == 3: high = 5\\n            else: high = 9\\n\\t\\t\\t\\n            for d in range(low, high+1):\\n                sub += dfs(i+1, i <= 1 and is_limit and d == high) # is_limit is to limit digit at time[1]\\n            return sub\\n        return dfs(0, True)\\n```\\n\\n### c++\\n```cpp\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        vector<int> dp (time.size(), -1);\\n        function<int(int, bool)> dfs = [&] (int i, bool is_limit) {\\n            if (i == time.size()) return 1;\\n            if (! is_limit && dp[i] != -1) return dp[i];\\n            if (time[i] != \\'?\\') {\\n                if (i == 1 && is_limit && time[1] > \\'3\\') return 0;\\n                return dfs(i+1, is_limit && (i == 0 && time[0] == \\'2\\' or i == 1 && time[1] == \\'3\\'));\\n            }\\n            int low = 0, sub = 0;\\n            int high;\\n            if (i == 0) high = 2;\\n            else if (i == 1) high = !is_limit? 9: 3;\\n            else if (i == 3) high = 5;\\n            else high = 9;\\n            for (int d = low; d <= high; d+=1)\\n                sub += dfs(i+1, i <= 1 && is_limit && d == high);\\n            if (!is_limit) dp[i] = sub;\\n            return sub;\\n        };\\n        return dfs(0, true);\\n    }\\n};\\n```\\n\\n### counting\\nenumerate all position time, and count vaild number.\\n\\n### python\\n```python\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        def count(t, period):\\n            cnt = 0\\n            for i in range(period):\\n                if (t[0] == \\'?\\' or i // 10 == int(t[0])) and (t[1] == \\'?\\' or i % 10 == int(t[1])):\\n                    cnt += 1\\n            return cnt\\n        return count(time[:2], 24) * count(time[3:], 60)\\n```\\n\\n### c++\\n```cpp\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        auto count = [] (const string& t, int period) {\\n            int cnt = 0;\\n            for (int i = 0; i < period; i+=1) \\n                if ((t[0] == \\'?\\' || \\'0\\' + (i / 10) == t[0]) && (t[1] == \\'?\\' || \\'0\\' + (i % 10) == t[1]))\\n                    cnt += 1;\\n            return cnt;\\n        };\\n        return count(time.substr(0, 2), 24) * count(time.substr(3, 2), 60);\\n    }\\n};\\n```",
                "solutionTags": [
                    "Python",
                    "C",
                    "Counting"
                ],
                "code": "```python\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        @cache\\n        def dfs(i, is_limit):\\n            if i == len(time): return 1\\n            if time[i] != \\'?\\':\\n                if is_limit and i == 1 and int(time[i]) > 3: return 0 # is_limit is to limit digit at time[1]\\n                return dfs(i+1, is_limit and (i == 0 and time[0] == \\'2\\' or i == 1 and time[1] == \\'3\\'))\\n            sub = 0\\n            low = 0 # smallest digit we can fill\\n\\t\\t\\t\\n\\t\\t\\t# largest digit we can fill\\n            if i == 0: high = 2\\n            elif i == 1: high = 9 if not is_limit else 3\\n            elif i == 3: high = 5\\n            else: high = 9\\n\\t\\t\\t\\n            for d in range(low, high+1):\\n                sub += dfs(i+1, i <= 1 and is_limit and d == high) # is_limit is to limit digit at time[1]\\n            return sub\\n        return dfs(0, True)\\n```\n```cpp\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        vector<int> dp (time.size(), -1);\\n        function<int(int, bool)> dfs = [&] (int i, bool is_limit) {\\n            if (i == time.size()) return 1;\\n            if (! is_limit && dp[i] != -1) return dp[i];\\n            if (time[i] != \\'?\\') {\\n                if (i == 1 && is_limit && time[1] > \\'3\\') return 0;\\n                return dfs(i+1, is_limit && (i == 0 && time[0] == \\'2\\' or i == 1 && time[1] == \\'3\\'));\\n            }\\n            int low = 0, sub = 0;\\n            int high;\\n            if (i == 0) high = 2;\\n            else if (i == 1) high = !is_limit? 9: 3;\\n            else if (i == 3) high = 5;\\n            else high = 9;\\n            for (int d = low; d <= high; d+=1)\\n                sub += dfs(i+1, i <= 1 && is_limit && d == high);\\n            if (!is_limit) dp[i] = sub;\\n            return sub;\\n        };\\n        return dfs(0, true);\\n    }\\n};\\n```\n```python\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        def count(t, period):\\n            cnt = 0\\n            for i in range(period):\\n                if (t[0] == \\'?\\' or i // 10 == int(t[0])) and (t[1] == \\'?\\' or i % 10 == int(t[1])):\\n                    cnt += 1\\n            return cnt\\n        return count(time[:2], 24) * count(time[3:], 60)\\n```\n```cpp\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        auto count = [] (const string& t, int period) {\\n            int cnt = 0;\\n            for (int i = 0; i < period; i+=1) \\n                if ((t[0] == \\'?\\' || \\'0\\' + (i / 10) == t[0]) && (t[1] == \\'?\\' || \\'0\\' + (i % 10) == t[1]))\\n                    cnt += 1;\\n            return cnt;\\n        };\\n        return count(time.substr(0, 2), 24) * count(time.substr(3, 2), 60);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4042173,
                "title": "c-easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countTime(string time) {    \\n        int res = 1;\\n        \\n        if(time[0]==\\'?\\' && time[1]==\\'?\\')\\n            res *= 24;\\n        else if(time[0]==\\'?\\')\\n            res *= ((time[1] - \\'0\\')< 4) ? 3 : 2;\\n        else if(time[1]==\\'?\\')\\n            res *= ((time[0] - \\'0\\') < 2) ? 10 : 4;\\n        \\n        if(time[3] == \\'?\\' && time[4] == \\'?\\')\\n            res *= 60;\\n        else if(time[3] == \\'?\\')\\n            res *= 6;\\n        else if(time[4] == \\'?\\')\\n            res *= 10;\\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countTime(string time) {    \\n        int res = 1;\\n        \\n        if(time[0]==\\'?\\' && time[1]==\\'?\\')\\n            res *= 24;\\n        else if(time[0]==\\'?\\')\\n            res *= ((time[1] - \\'0\\')< 4) ? 3 : 2;\\n        else if(time[1]==\\'?\\')\\n            res *= ((time[0] - \\'0\\') < 2) ? 10 : 4;\\n        \\n        if(time[3] == \\'?\\' && time[4] == \\'?\\')\\n            res *= 60;\\n        else if(time[3] == \\'?\\')\\n            res *= 6;\\n        else if(time[4] == \\'?\\')\\n            res *= 10;\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4016138,
                "title": "es6-neat-solution",
                "content": "# Code\\n```\\n/**\\n * @param {string} time\\n * @return {number}\\n */\\nvar countTime = function(time) {\\n    let [hrs, mins] = time.split(\":\")\\n    let total = 1\\n\\n    if(hrs == \\'??\\') {\\n        total *= 24\\n    } else  {\\n        if (hrs.at(0) == \\'?\\' && hrs.at(1) > 3) total *= 2\\n        if (hrs.at(0) == \\'?\\' && hrs.at(1) <= 3) total *= 3\\n        if (hrs.at(1) == \\'?\\' && hrs.at(0) < 2) total *= 10\\n        if (hrs.at(1) == \\'?\\' && hrs.at(0) >= 2) total *= 4\\n    }\\n\\n    if (mins.at(0) == \\'?\\') total *= 6\\n    if (mins.at(1) == \\'?\\') total *= 10\\n\\n    return total\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {string} time\\n * @return {number}\\n */\\nvar countTime = function(time) {\\n    let [hrs, mins] = time.split(\":\")\\n    let total = 1\\n\\n    if(hrs == \\'??\\') {\\n        total *= 24\\n    } else  {\\n        if (hrs.at(0) == \\'?\\' && hrs.at(1) > 3) total *= 2\\n        if (hrs.at(0) == \\'?\\' && hrs.at(1) <= 3) total *= 3\\n        if (hrs.at(1) == \\'?\\' && hrs.at(0) < 2) total *= 10\\n        if (hrs.at(1) == \\'?\\' && hrs.at(0) >= 2) total *= 4\\n    }\\n\\n    if (mins.at(0) == \\'?\\') total *= 6\\n    if (mins.at(1) == \\'?\\') total *= 10\\n\\n    return total\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3997349,
                "title": "solution-for-beginners",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        a=[]\\n        b=[]\\n        for i in range(0,10) :\\n            a.append(str(0)+str(i))\\n        for j in range(0,10) :\\n            b.append(str(0)+str(j))\\n        for i in range(10,24) :\\n            a.append(str(i))\\n        for j in range(10,60) :\\n            b.append(str(j))\\n        c=[]\\n        e=[]\\n        if time[0]==\"?\" :\\n            if time[1]==\\'?\\':\\n                c.append(24)\\n            else :\\n                d=0\\n                for j in range(0,len(a)) :\\n                    if time[1]==a[j][1] :\\n                        d+=1\\n                if d>0 :\\n                    c.append(d)\\n        elif time[1]==\\'?\\' :\\n            d=0\\n            for j in range(0,len(a)) :\\n                if time[0]==a[j][0] :\\n                    d+=1\\n            if d>0 :\\n                c.append(d)\\n                \\n        if time[3]==\\'?\\' :\\n            if time[4]==\"?\" :\\n                e.append(60)\\n            else :\\n                d=0\\n                for j in range(0,len(b)) :\\n                    if time[4]==b[j][1] :\\n                        d+=1\\n                if d>0 :\\n                    e.append(d)\\n        elif time[4]==\\'?\\' :\\n            d=0\\n            for j in range(0,len(b)) :\\n                if time[3]==b[j][0] :\\n                    d+=1\\n            if d>0 :\\n                e.append(d)\\n        if len(c)>0 and len(e)>0 :\\n            return (c[0]*e[0])\\n        elif len(c)==0 and len(e)==0 :\\n            return 1\\n        else :\\n            if len(c)>0 :\\n                return (c[0])\\n            elif len(e)>0 :\\n                return (e[0])\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        a=[]\\n        b=[]\\n        for i in range(0,10) :\\n            a.append(str(0)+str(i))\\n        for j in range(0,10) :\\n            b.append(str(0)+str(j))\\n        for i in range(10,24) :\\n            a.append(str(i))\\n        for j in range(10,60) :\\n            b.append(str(j))\\n        c=[]\\n        e=[]\\n        if time[0]==\"?\" :\\n            if time[1]==\\'?\\':\\n                c.append(24)\\n            else :\\n                d=0\\n                for j in range(0,len(a)) :\\n                    if time[1]==a[j][1] :\\n                        d+=1\\n                if d>0 :\\n                    c.append(d)\\n        elif time[1]==\\'?\\' :\\n            d=0\\n            for j in range(0,len(a)) :\\n                if time[0]==a[j][0] :\\n                    d+=1\\n            if d>0 :\\n                c.append(d)\\n                \\n        if time[3]==\\'?\\' :\\n            if time[4]==\"?\" :\\n                e.append(60)\\n            else :\\n                d=0\\n                for j in range(0,len(b)) :\\n                    if time[4]==b[j][1] :\\n                        d+=1\\n                if d>0 :\\n                    e.append(d)\\n        elif time[4]==\\'?\\' :\\n            d=0\\n            for j in range(0,len(b)) :\\n                if time[3]==b[j][0] :\\n                    d+=1\\n            if d>0 :\\n                e.append(d)\\n        if len(c)>0 and len(e)>0 :\\n            return (c[0]*e[0])\\n        elif len(c)==0 and len(e)==0 :\\n            return 1\\n        else :\\n            if len(c)>0 :\\n                return (c[0])\\n            elif len(e)>0 :\\n                return (e[0])\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3989056,
                "title": "if-if-if",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int countTime(String time) {\\n        int ans =1; \\n        char ch1 =time.charAt(0);\\n        char ch2 =time.charAt(1);\\n        char ch3 =time.charAt(3);\\n        char ch4 =time.charAt(4);\\n        if(ch3==\\'?\\' && ch4==\\'?\\'){\\n            ans=ans*60 ;\\n            \\n        }\\n        if(ch3!=\\'?\\' && ch4==\\'?\\'){\\n            ans=ans*10 ;\\n        }\\n        if(ch3==\\'?\\' && ch4!=\\'?\\'){\\n            ans=ans*6;\\n        }\\n        if(ch1==\\'?\\' && ch2==\\'?\\'){\\n            ans=ans*24 ;\\n        }\\n        if(ch1==\\'2\\' && ch2==\\'?\\'){\\n            ans=ans*4 ;\\n\\n        }\\n        if((ch1==\\'0\\'||ch1==\\'1\\') && ch2==\\'?\\'){\\n            ans=ans*10 ;\\n        }\\n        if(ch1==\\'?\\' && (ch2>=\\'4\\'&& ch2<=\\'9\\' )){\\n            ans=ans*2 ;\\n        }\\n        if(ch1==\\'?\\' && ch2<\\'4\\'){\\n            ans=ans*3;\\n        }\\n\\n\\n        return ans; \\n\\n\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        int ans =1; \\n        char ch1 =time.charAt(0);\\n        char ch2 =time.charAt(1);\\n        char ch3 =time.charAt(3);\\n        char ch4 =time.charAt(4);\\n        if(ch3==\\'?\\' && ch4==\\'?\\'){\\n            ans=ans*60 ;\\n            \\n        }\\n        if(ch3!=\\'?\\' && ch4==\\'?\\'){\\n            ans=ans*10 ;\\n        }\\n        if(ch3==\\'?\\' && ch4!=\\'?\\'){\\n            ans=ans*6;\\n        }\\n        if(ch1==\\'?\\' && ch2==\\'?\\'){\\n            ans=ans*24 ;\\n        }\\n        if(ch1==\\'2\\' && ch2==\\'?\\'){\\n            ans=ans*4 ;\\n\\n        }\\n        if((ch1==\\'0\\'||ch1==\\'1\\') && ch2==\\'?\\'){\\n            ans=ans*10 ;\\n        }\\n        if(ch1==\\'?\\' && (ch2>=\\'4\\'&& ch2<=\\'9\\' )){\\n            ans=ans*2 ;\\n        }\\n        if(ch1==\\'?\\' && ch2<\\'4\\'){\\n            ans=ans*3;\\n        }\\n\\n\\n        return ans; \\n\\n\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3973177,
                "title": "very-basic-java-soln-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int countTime(String time) {\\n        int ans=1;\\n        if(time.charAt(3)==\\'?\\')\\n            ans*=6;\\n        if(time.charAt(4)==\\'?\\')\\n            ans*=10;\\n        if(time.charAt(0)==\\'?\\'&&time.charAt(1)!=\\'?\\'){\\n            if(time.charAt(1)-\\'0\\'<4)\\n                ans*=3;\\n            else\\n                ans*=2;\\n        } else if(time.charAt(0)==\\'?\\'&&time.charAt(1)==\\'?\\'){\\n            ans=ans*24;\\n        }else if(time.charAt(0)!=\\'?\\'&&time.charAt(1)==\\'?\\'){\\n            if(time.charAt(0)-\\'0\\'<2)\\n                ans*=10;\\n            else\\n                ans*=4;\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        int ans=1;\\n        if(time.charAt(3)==\\'?\\')\\n            ans*=6;\\n        if(time.charAt(4)==\\'?\\')\\n            ans*=10;\\n        if(time.charAt(0)==\\'?\\'&&time.charAt(1)!=\\'?\\'){\\n            if(time.charAt(1)-\\'0\\'<4)\\n                ans*=3;\\n            else\\n                ans*=2;\\n        } else if(time.charAt(0)==\\'?\\'&&time.charAt(1)==\\'?\\'){\\n            ans=ans*24;\\n        }else if(time.charAt(0)!=\\'?\\'&&time.charAt(1)==\\'?\\'){\\n            if(time.charAt(0)-\\'0\\'<2)\\n                ans*=10;\\n            else\\n                ans*=4;\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3967726,
                "title": "runtime-132-ms",
                "content": "# Code\\n```\\nclass Solution {\\n    fun countTime(time: String): Int {\\n    var c1 = 1\\n    var c2 = 1\\n    when {\\n        time[0] == \\'?\\' && time[1] == \\'?\\' -> {\\n            c1 = 4\\n            c2 = 6\\n        }\\n\\n        time[0] == \\'?\\' -> {\\n            c1 = if (time[1] > \\'3\\') 2 else 3\\n        }\\n\\n        time[1] == \\'?\\' -> {\\n            c2 = if (time[0] == \\'2\\') 4 else 10\\n        }\\n    }\\n    val c3 = if (time[3] == \\'?\\') 6 else 1\\n    val c4 = if (time[4] == \\'?\\') 10 else 1\\n    \\n    return c1 * c2 * c3 * c4\\n}\\n}\\n```",
                "solutionTags": [
                    "Kotlin"
                ],
                "code": "```\\nclass Solution {\\n    fun countTime(time: String): Int {\\n    var c1 = 1\\n    var c2 = 1\\n    when {\\n        time[0] == \\'?\\' && time[1] == \\'?\\' -> {\\n            c1 = 4\\n            c2 = 6\\n        }\\n\\n        time[0] == \\'?\\' -> {\\n            c1 = if (time[1] > \\'3\\') 2 else 3\\n        }\\n\\n        time[1] == \\'?\\' -> {\\n            c2 = if (time[0] == \\'2\\') 4 else 10\\n        }\\n    }\\n    val c3 = if (time[3] == \\'?\\') 6 else 1\\n    val c4 = if (time[4] == \\'?\\') 10 else 1\\n    \\n    return c1 * c2 * c3 * c4\\n}\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3952874,
                "title": "java-fastest-solution-0-ms-100-faster",
                "content": "\\n# Complexity\\n- Time complexity: $$O(1)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int countTime(String time) {\\n        int n1 = 1, n2 = 1, res = 0;\\n        List<Integer> l1 = new ArrayList(),\\n                      l2 = new ArrayList();\\n\\n        if(time.charAt(0) == \\'?\\')\\n            l1.addAll(Arrays.asList(0,1,2));\\n        else\\n            l1.add(time.charAt(0) -\\'0\\');\\n        \\n\\n        if(time.charAt(1) == \\'?\\')\\n            l2.addAll(Arrays.asList(0,1,2,3,4,5,6,7,8,9));\\n        else\\n            l2.add(time.charAt(1)-\\'0\\');\\n        \\n\\n        n1 = (time.charAt(3) == \\'?\\') ? 6 : 1;\\n        n2 = (time.charAt(4) == \\'?\\') ? 10 : 1;\\n\\n        for(int i : l1)\\n            for(int j : l2)\\n                res += (i *10 +j < 24) ? 1 : 0;\\n\\n        return res * n1 * n2;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        int n1 = 1, n2 = 1, res = 0;\\n        List<Integer> l1 = new ArrayList(),\\n                      l2 = new ArrayList();\\n\\n        if(time.charAt(0) == \\'?\\')\\n            l1.addAll(Arrays.asList(0,1,2));\\n        else\\n            l1.add(time.charAt(0) -\\'0\\');\\n        \\n\\n        if(time.charAt(1) == \\'?\\')\\n            l2.addAll(Arrays.asList(0,1,2,3,4,5,6,7,8,9));\\n        else\\n            l2.add(time.charAt(1)-\\'0\\');\\n        \\n\\n        n1 = (time.charAt(3) == \\'?\\') ? 6 : 1;\\n        n2 = (time.charAt(4) == \\'?\\') ? 10 : 1;\\n\\n        for(int i : l1)\\n            for(int j : l2)\\n                res += (i *10 +j < 24) ? 1 : 0;\\n\\n        return res * n1 * n2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3885254,
                "title": "python-boring-solution-if-else",
                "content": "# Complexity\\n- Time complexity: $$O(1)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n  def countTime(self, time: str) -> int:\\n    res = 1\\n    h1, h2, _, m1, m2 = time\\n\\n    if h1 == \"?\" and h2 == \"?\":\\n      res *= 24\\n    elif h1 == \"?\":\\n      if int(h2) >= 4:\\n        res *= 2\\n      else:\\n        res *= 3\\n\\n    elif h2 == \"?\":\\n      if int(h1) <= 1:\\n        res *= 10\\n      elif h1 == \"2\":\\n        res *= 4\\n\\n    if m1 == \"?\" and m2 == \"?\":\\n      res *= 60\\n    elif m1 == \"?\":\\n      res *= 6\\n    elif m2 == \"?\":\\n      res *= 10\\n\\n    return res\\n```",
                "solutionTags": [
                    "Python3",
                    "String"
                ],
                "code": "```\\nclass Solution:\\n  def countTime(self, time: str) -> int:\\n    res = 1\\n    h1, h2, _, m1, m2 = time\\n\\n    if h1 == \"?\" and h2 == \"?\":\\n      res *= 24\\n    elif h1 == \"?\":\\n      if int(h2) >= 4:\\n        res *= 2\\n      else:\\n        res *= 3\\n\\n    elif h2 == \"?\":\\n      if int(h1) <= 1:\\n        res *= 10\\n      elif h1 == \"2\":\\n        res *= 4\\n\\n    if m1 == \"?\" and m2 == \"?\":\\n      res *= 60\\n    elif m1 == \"?\":\\n      res *= 6\\n    elif m2 == \"?\":\\n      res *= 10\\n\\n    return res\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3879371,
                "title": "java-0ms-beats-100-00",
                "content": "\\n\\n# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n// 0ms Beats 100.00%\\n\\nclass Solution {\\n    public int countTime(String time) {\\n\\n        // int value of 15 will mean question mark\\n        int hourTens = time.charAt(0) - \\'0\\';\\n        int hourOnes = time.charAt(1) - \\'0\\';\\n        int minuteTens = time.charAt(3) - \\'0\\';\\n        int minuteOnes = time.charAt(4) - \\'0\\';\\n\\n        // hours\\n        int possibleHours = 0;\\n        if (hourTens == 15 && hourOnes == 15) {  // ??:\\n            possibleHours = 24;\\n        } else if (hourTens == 15) {  // ?d:\\n            if (hourOnes <= 3) {  // ?[0-3]:\\n                possibleHours = 3;\\n            } else {  // ?[4-9]:\\n                possibleHours = 2;\\n            }\\n        } else if (hourOnes == 15) {  // d?:\\n            if (hourTens <= 1) {  // [0-1]?:\\n                possibleHours = 10;\\n            } else {  // 2?:\\n                possibleHours = 4;\\n            }\\n        } else {  // dd:\\n            possibleHours = 1;\\n        }\\n\\n        // minutes\\n        int possibleMinutes = 0;\\n        if (minuteTens == 15 && minuteOnes == 15) {  // :??\\n            possibleMinutes = 60;\\n        } else if (minuteTens == 15) {  // :?d\\n            possibleMinutes = 6;\\n        } else if (minuteOnes == 15) {  // :d?\\n            possibleMinutes = 10;\\n        } else {  // :dd\\n            possibleMinutes = 1;\\n        }\\n\\n        return possibleHours * possibleMinutes;\\n\\n\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\n// 0ms Beats 100.00%\\n\\nclass Solution {\\n    public int countTime(String time) {\\n\\n        // int value of 15 will mean question mark\\n        int hourTens = time.charAt(0) - \\'0\\';\\n        int hourOnes = time.charAt(1) - \\'0\\';\\n        int minuteTens = time.charAt(3) - \\'0\\';\\n        int minuteOnes = time.charAt(4) - \\'0\\';\\n\\n        // hours\\n        int possibleHours = 0;\\n        if (hourTens == 15 && hourOnes == 15) {  // ??:\\n            possibleHours = 24;\\n        } else if (hourTens == 15) {  // ?d:\\n            if (hourOnes <= 3) {  // ?[0-3]:\\n                possibleHours = 3;\\n            } else {  // ?[4-9]:\\n                possibleHours = 2;\\n            }\\n        } else if (hourOnes == 15) {  // d?:\\n            if (hourTens <= 1) {  // [0-1]?:\\n                possibleHours = 10;\\n            } else {  // 2?:\\n                possibleHours = 4;\\n            }\\n        } else {  // dd:\\n            possibleHours = 1;\\n        }\\n\\n        // minutes\\n        int possibleMinutes = 0;\\n        if (minuteTens == 15 && minuteOnes == 15) {  // :??\\n            possibleMinutes = 60;\\n        } else if (minuteTens == 15) {  // :?d\\n            possibleMinutes = 6;\\n        } else if (minuteOnes == 15) {  // :d?\\n            possibleMinutes = 10;\\n        } else {  // :dd\\n            possibleMinutes = 1;\\n        }\\n\\n        return possibleHours * possibleMinutes;\\n\\n\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3855021,
                "title": "a-matter-of-ifs",
                "content": "# Intuition\\nI immediately though at a series of ifs to check if and where a ? is present.\\n\\n# Approach\\nChecked the presence of a ? and, if present, returned the possible combinations per hours and per minutes.\\n\\n# Code\\n```\\n/**\\n * @param {string} time\\n * @return {number}\\n */\\nvar countTime = function(time) {\\n    const timeArray = time.split(\":\")\\n    let hoursChances = 1\\n    let minutesChances = 1\\n\\n    if (timeArray[0][0] !== \"?\" && timeArray[0][1] !== \"?\") {\\n        hoursChances = 1\\n    } else if (timeArray[0][0] === \"?\" && timeArray[0][1] === \"?\") {\\n        hoursChances = 24\\n    } else if (timeArray[0][0] === \"?\") {\\n        if (parseInt(timeArray[0][1]) < 4) {\\n            hoursChances = 3\\n        } else {\\n            hoursChances = 2\\n        }\\n    } else {\\n        if (parseInt(timeArray[0][0]) < 2) {\\n            hoursChances = 10\\n        } else {\\n            hoursChances = 4\\n        }\\n    }\\n\\n    if (timeArray[1][0] !== \"?\" && timeArray[1][1] !== \"?\") {\\n        minutesChances = 1\\n    } else if (timeArray[1][0] === \"?\" && timeArray[1][1] === \"?\") {\\n        minutesChances = 60\\n    } else if (timeArray[1][0] === \"?\") {\\n        minutesChances = 6\\n    } else {\\n        minutesChances = 10\\n    }\\n\\n    return hoursChances * minutesChances\\n};\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {string} time\\n * @return {number}\\n */\\nvar countTime = function(time) {\\n    const timeArray = time.split(\":\")\\n    let hoursChances = 1\\n    let minutesChances = 1\\n\\n    if (timeArray[0][0] !== \"?\" && timeArray[0][1] !== \"?\") {\\n        hoursChances = 1\\n    } else if (timeArray[0][0] === \"?\" && timeArray[0][1] === \"?\") {\\n        hoursChances = 24\\n    } else if (timeArray[0][0] === \"?\") {\\n        if (parseInt(timeArray[0][1]) < 4) {\\n            hoursChances = 3\\n        } else {\\n            hoursChances = 2\\n        }\\n    } else {\\n        if (parseInt(timeArray[0][0]) < 2) {\\n            hoursChances = 10\\n        } else {\\n            hoursChances = 4\\n        }\\n    }\\n\\n    if (timeArray[1][0] !== \"?\" && timeArray[1][1] !== \"?\") {\\n        minutesChances = 1\\n    } else if (timeArray[1][0] === \"?\" && timeArray[1][1] === \"?\") {\\n        minutesChances = 60\\n    } else if (timeArray[1][0] === \"?\") {\\n        minutesChances = 6\\n    } else {\\n        minutesChances = 10\\n    }\\n\\n    return hoursChances * minutesChances\\n};\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3797772,
                "title": "kotlin-solution",
                "content": "# Code\\n```\\nclass Solution {\\n    fun countTime(time: String): Int =\\n        // Calculate hour combinations\\n        when {\\n            time[0] == \\'?\\' && time[1] == \\'?\\' -> 24\\n            time[0] == \\'?\\' -> if (time[1] < \\'4\\') 3 else 2\\n            time[1] == \\'?\\' -> if (time[0] < \\'2\\') 10 else 4\\n            else -> 1\\n        }.let { hourCombinations ->\\n            // Calculate minute combinations\\n            when {\\n                time[3] == \\'?\\' && time[4] == \\'?\\' -> hourCombinations * 6 * 10\\n                time[3] == \\'?\\' -> hourCombinations * 6\\n                time[4] == \\'?\\' -> hourCombinations * 10\\n                else -> hourCombinations\\n            }\\n        }\\n}\\n```",
                "solutionTags": [
                    "Kotlin"
                ],
                "code": "```\\nclass Solution {\\n    fun countTime(time: String): Int =\\n        // Calculate hour combinations\\n        when {\\n            time[0] == \\'?\\' && time[1] == \\'?\\' -> 24\\n            time[0] == \\'?\\' -> if (time[1] < \\'4\\') 3 else 2\\n            time[1] == \\'?\\' -> if (time[0] < \\'2\\') 10 else 4\\n            else -> 1\\n        }.let { hourCombinations ->\\n            // Calculate minute combinations\\n            when {\\n                time[3] == \\'?\\' && time[4] == \\'?\\' -> hourCombinations * 6 * 10\\n                time[3] == \\'?\\' -> hourCombinations * 6\\n                time[4] == \\'?\\' -> hourCombinations * 10\\n                else -> hourCombinations\\n            }\\n        }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3792958,
                "title": "multiply-by-possibilities-for-each-next-position",
                "content": "# Code\\n```\\npublic class Solution {\\n    public int CountTime(string time) \\n    {\\n        var ret = 0;\\n\\n        for(int i = 0; i < 5; i++)\\n            if (time[i] == \\'?\\')\\n            {\\n                var x = 1;\\n                switch(i)\\n                {\\n                    case 0: \\n                        if (time[1] == \\'?\\')\\n                            x = 3;\\n                        else\\n                            x = int.Parse(time[1].ToString()) > 3 ? 2 : 3;\\n                        break;\\n                        \\n                    case 1:\\n                        if (time[0] == \\'?\\')\\n                            x = 8;\\n                        else\\n                            x = int.Parse(time[0].ToString()) < 2 ? 10 : 4;\\n                        break;\\n                    \\n                    case 3: x = 6; break;\\n                    case 4: x = 10; break;\\n                }\\n\\n                if (ret == 0)\\n                    ret = x;\\n                else\\n                    ret *= x;\\n            }\\n\\n        return ret == 0 ? 1 : ret;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public int CountTime(string time) \\n    {\\n        var ret = 0;\\n\\n        for(int i = 0; i < 5; i++)\\n            if (time[i] == \\'?\\')\\n            {\\n                var x = 1;\\n                switch(i)\\n                {\\n                    case 0: \\n                        if (time[1] == \\'?\\')\\n                            x = 3;\\n                        else\\n                            x = int.Parse(time[1].ToString()) > 3 ? 2 : 3;\\n                        break;\\n                        \\n                    case 1:\\n                        if (time[0] == \\'?\\')\\n                            x = 8;\\n                        else\\n                            x = int.Parse(time[0].ToString()) < 2 ? 10 : 4;\\n                        break;\\n                    \\n                    case 3: x = 6; break;\\n                    case 4: x = 10; break;\\n                }\\n\\n                if (ret == 0)\\n                    ret = x;\\n                else\\n                    ret *= x;\\n            }\\n\\n        return ret == 0 ? 1 : ret;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3792061,
                "title": "simplest-solution-ever",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int cnt1=0;\\n        int cnt2=0;\\n        int cnt3=0;\\n        int cnt4=0;\\n        if(time[0]==\\'?\\')\\n        {\\n            if(time[1]==\\'?\\')\\n            {\\n                cnt1+=24;\\n            }\\n            else\\n            {\\n                char ch=time[1];\\n                if(ch<=\\'3\\')\\n                cnt1+=3;\\n                else\\n                    cnt1+=2;\\n            }\\n        }\\n        if(time[1]==\\'?\\')\\n        {\\n                char ch=time[0];\\n                if(ch<=\\'1\\')\\n                    cnt2+=10;\\n                else if(ch==\\'2\\')\\n                    cnt2+=4;\\n                \\n        }\\n        if(time[3]==\\'?\\')\\n        {\\n            if(time[4]==\\'?\\')\\n            {\\n                cnt3+=60;\\n                \\n            }\\n            else\\n            {\\n               cnt3+=6;\\n            }\\n        }\\n        if(time[4]==\\'?\\')\\n        {\\n                char ch=time[3];\\n                if(ch<=\\'5\\')\\n                    cnt4+=10;\\n                else\\n                    cnt4+=0;\\n        }\\n        cout<<cnt1<< \" \"<<cnt2<< \" \"<<cnt3<<\" \"<<cnt4<<endl;\\n        int ans=1;\\n        if(cnt1!=0)\\n            ans*=cnt1;\\n        if(cnt2!=0)\\n            ans*=cnt2;\\n        if(cnt3!=0)\\n            ans*=cnt3;\\n        if(cnt4!=0)\\n            ans*=cnt4;\\n       return ans;\\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int cnt1=0;\\n        int cnt2=0;\\n        int cnt3=0;\\n        int cnt4=0;\\n        if(time[0]==\\'?\\')\\n        {\\n            if(time[1]==\\'?\\')\\n            {\\n                cnt1+=24;\\n            }\\n            else\\n            {\\n                char ch=time[1];\\n                if(ch<=\\'3\\')\\n                cnt1+=3;\\n                else\\n                    cnt1+=2;\\n            }\\n        }\\n        if(time[1]==\\'?\\')\\n        {\\n                char ch=time[0];\\n                if(ch<=\\'1\\')\\n                    cnt2+=10;\\n                else if(ch==\\'2\\')\\n                    cnt2+=4;\\n                \\n        }\\n        if(time[3]==\\'?\\')\\n        {\\n            if(time[4]==\\'?\\')\\n            {\\n                cnt3+=60;\\n                \\n            }\\n            else\\n            {\\n               cnt3+=6;\\n            }\\n        }\\n        if(time[4]==\\'?\\')\\n        {\\n                char ch=time[3];\\n                if(ch<=\\'5\\')\\n                    cnt4+=10;\\n                else\\n                    cnt4+=0;\\n        }\\n        cout<<cnt1<< \" \"<<cnt2<< \" \"<<cnt3<<\" \"<<cnt4<<endl;\\n        int ans=1;\\n        if(cnt1!=0)\\n            ans*=cnt1;\\n        if(cnt2!=0)\\n            ans*=cnt2;\\n        if(cnt3!=0)\\n            ans*=cnt3;\\n        if(cnt4!=0)\\n            ans*=cnt4;\\n       return ans;\\n        \\n    }\\n};\\n```",
                "codeTag": "C++"
            },
            {
                "id": 3769887,
                "title": "c-easy-to-understand-solution-beats-runtime-93-memory-64",
                "content": "![image.png](https://assets.leetcode.com/users/images/5a9f3b2d-fb9e-4710-a570-ed87c54230f8_1689442522.428607.png)\\n\\n# Approach\\nThe method starts by extracting the first and second hour digits and the first and second minute digits from the input string using the Substring method. It then initializes two counters, one for hours and one for minutes, to 1.\\n\\nIf the first hour digit is a question mark, the method checks the value of the second hour digit. If it is between 4 and 9, the hours counter is set to 2. Otherwise, it is set to 3.\\n\\nIf the second hour digit is a question mark, the method checks the value of the first hour digit. If it is 0 or 1, the hours counter is set to 10. If it is 2, the hours counter is set to 4. Otherwise, it is set to 24.\\n\\nIf the first minute digit is a question mark, the minutes counter is set to 6.\\n\\nIf the second minute digit is a question mark, the minutes counter is multiplied by 10.\\n\\nFinally, the method returns the product of the hours counter and minutes counter as its result.\\n\\n# Complexity\\n- Time complexity:\\n$$O(1)$$\\n\\n- Space complexity:\\n$$O(1)$$\\n\\n# Code\\n```\\npublic class Solution {\\n    public int CountTime(string time) {\\n        string firstH = time.Substring(0, 1);\\n        string secondH = time.Substring(1, 1);\\n        string firstM = time.Substring(3, 1);\\n        string secondM = time.Substring(4, 1);\\n        int hoursCounter = 1;\\n        int minutesCounter = 1;\\n        if (firstH == \"?\")\\n        {\\n            switch (secondH)\\n            {\\n                case \"4\":\\n                case \"5\":\\n                case \"6\":\\n                case \"7\":\\n                case \"8\":\\n                case \"9\":\\n                    hoursCounter = 2;\\n                    break;\\n                default:\\n                    hoursCounter = 3;\\n                    break;\\n            }\\n        }\\n\\n        if (secondH == \"?\")\\n        {\\n            switch (firstH)\\n            {\\n                case \"0\":\\n                case \"1\":\\n                    hoursCounter = 10;\\n                    break;\\n                case \"2\":\\n                    hoursCounter = 4; \\n                    break;\\n                default:\\n                    hoursCounter = 24;\\n                    break;\\n            }\\n        }\\n\\n        if (firstM == \"?\")\\n        {\\n            minutesCounter = 6;\\n        }\\n\\n        if (secondM == \"?\")\\n        {\\n            minutesCounter *= 10;\\n        }\\n\\n        return hoursCounter * minutesCounter;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#",
                    "String",
                    "Enumeration"
                ],
                "code": "```\\npublic class Solution {\\n    public int CountTime(string time) {\\n        string firstH = time.Substring(0, 1);\\n        string secondH = time.Substring(1, 1);\\n        string firstM = time.Substring(3, 1);\\n        string secondM = time.Substring(4, 1);\\n        int hoursCounter = 1;\\n        int minutesCounter = 1;\\n        if (firstH == \"?\")\\n        {\\n            switch (secondH)\\n            {\\n                case \"4\":\\n                case \"5\":\\n                case \"6\":\\n                case \"7\":\\n                case \"8\":\\n                case \"9\":\\n                    hoursCounter = 2;\\n                    break;\\n                default:\\n                    hoursCounter = 3;\\n                    break;\\n            }\\n        }\\n\\n        if (secondH == \"?\")\\n        {\\n            switch (firstH)\\n            {\\n                case \"0\":\\n                case \"1\":\\n                    hoursCounter = 10;\\n                    break;\\n                case \"2\":\\n                    hoursCounter = 4; \\n                    break;\\n                default:\\n                    hoursCounter = 24;\\n                    break;\\n            }\\n        }\\n\\n        if (firstM == \"?\")\\n        {\\n            minutesCounter = 6;\\n        }\\n\\n        if (secondM == \"?\")\\n        {\\n            minutesCounter *= 10;\\n        }\\n\\n        return hoursCounter * minutesCounter;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3759418,
                "title": "c-code-fast-and-easy-solution",
                "content": "\\n# Code\\n```\\nint countTime(char * time){\\n    int hours = 1,minutes = 1;\\n    if(time[3] == \\'?\\' && time[4] == \\'?\\')\\n        minutes = 60;\\n    else if(time[3] != \\'?\\' && time[4] == \\'?\\')\\n        minutes = 10;    \\n    else if(time[4] != \\'?\\' && time[3] == \\'?\\')\\n        minutes = 6; \\n\\n    if(time[0] == \\'?\\' && time[1] == \\'?\\')\\n        hours = 24;\\n    else if(time[0] != \\'2\\' && time[1] == \\'?\\')\\n        hours = 10;\\n    else if(time[0] == \\'2\\' && time[1] == \\'?\\')\\n        hours = 4;\\n    else if(time[0] == \\'?\\' && time[1] > \\'3\\')\\n        hours = 2;\\n    else if(time[0] == \\'?\\' && time[1] <= \\'3\\')\\n        hours = 3;\\n\\n    return hours * minutes;    \\n\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint countTime(char * time){\\n    int hours = 1,minutes = 1;\\n    if(time[3] == \\'?\\' && time[4] == \\'?\\')\\n        minutes = 60;\\n    else if(time[3] != \\'?\\' && time[4] == \\'?\\')\\n        minutes = 10;    \\n    else if(time[4] != \\'?\\' && time[3] == \\'?\\')\\n        minutes = 6; \\n\\n    if(time[0] == \\'?\\' && time[1] == \\'?\\')\\n        hours = 24;\\n    else if(time[0] != \\'2\\' && time[1] == \\'?\\')\\n        hours = 10;\\n    else if(time[0] == \\'2\\' && time[1] == \\'?\\')\\n        hours = 4;\\n    else if(time[0] == \\'?\\' && time[1] > \\'3\\')\\n        hours = 2;\\n    else if(time[0] == \\'?\\' && time[1] <= \\'3\\')\\n        hours = 3;\\n\\n    return hours * minutes;    \\n\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3759413,
                "title": "js-code-fast-and-easy-solution",
                "content": "\\n# Code\\n```\\n/**\\n * @param {string} time\\n * @return {number}\\n */\\nvar countTime = function(time) {\\n    let hours = 1, minutes = 1;\\n\\n    // Determine minutes based on the given conditions\\n    if (time[3] === \\'?\\' && time[4] === \\'?\\')\\n        minutes = 60;\\n    else if (time[3] !== \\'?\\' && time[4] === \\'?\\')\\n        minutes = 10;\\n    else if (time[4] !== \\'?\\' && time[3] === \\'?\\')\\n        minutes = 6;\\n\\n    // Determine hours based on the given conditions\\n    if (time[0] === \\'?\\' && time[1] === \\'?\\')\\n        hours = 24;\\n    else if (time[0] !== \\'2\\' && time[1] === \\'?\\')\\n        hours = 10;\\n    else if (time[0] === \\'2\\' && time[1] === \\'?\\')\\n        hours = 4;\\n    else if (time[0] === \\'?\\' && Number(time[1]) > 3)\\n        hours = 2;\\n    else if (time[0] === \\'?\\' && Number(time[1]) <= 3)\\n        hours = 3;\\n\\n    // Return the product of hours and minutes\\n    return hours * minutes;\\n};\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {string} time\\n * @return {number}\\n */\\nvar countTime = function(time) {\\n    let hours = 1, minutes = 1;\\n\\n    // Determine minutes based on the given conditions\\n    if (time[3] === \\'?\\' && time[4] === \\'?\\')\\n        minutes = 60;\\n    else if (time[3] !== \\'?\\' && time[4] === \\'?\\')\\n        minutes = 10;\\n    else if (time[4] !== \\'?\\' && time[3] === \\'?\\')\\n        minutes = 6;\\n\\n    // Determine hours based on the given conditions\\n    if (time[0] === \\'?\\' && time[1] === \\'?\\')\\n        hours = 24;\\n    else if (time[0] !== \\'2\\' && time[1] === \\'?\\')\\n        hours = 10;\\n    else if (time[0] === \\'2\\' && time[1] === \\'?\\')\\n        hours = 4;\\n    else if (time[0] === \\'?\\' && Number(time[1]) > 3)\\n        hours = 2;\\n    else if (time[0] === \\'?\\' && Number(time[1]) <= 3)\\n        hours = 3;\\n\\n    // Return the product of hours and minutes\\n    return hours * minutes;\\n};\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3748913,
                "title": "valid-clock-times-niti",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nFirst what we need to do is figure out the base case i.e. if there are no other condition what will the possible value i.e 23:59\\nwe can have first 3 value 0-2, second 4 value 0-3 etc\\n\\nNext we search for the unique case ie if first value is less than 2 we can have 0-9 values in second value etc.\\n\\nThird there is the case for hte double unknown ie if first and second are unknown we can have a possible for 4 for first and 6 for second values.\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n1) Store the value for all possible cases in 3 different arrays\\n2) Create a variable that stores the values for each array index\\n3) loop through the array\\n4) add conditions and get values from the 3 different arrays\\n5) get all possiblities\\n  a) Create variable to store the val and set to 1\\n  b) loop throught the variable in 2\\n  c) check if value is not 0 then multiply the variable in a with the value ans store in variable created in a\\n6) return the variable\\n   \\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int countTime(String time) {\\n        char[] timeCharArr = time.toCharArray();\\n        int[] possibleVal = {3,4,0,6,10};\\n        int[] uniqueCase = {2,10,0};\\n        int[] doubleUnk = {4,6,0,6,10};\\n        //store all possible values\\n        int[] values = new int[5]; \\n        int valueIndex = 0;\\n        for(int i = 0;i< timeCharArr.length;i++){\\n            if(timeCharArr[i] == \\'?\\'){\\n               //brute force all possible cases\\n               values[valueIndex] = possibleVal[i];\\n\\n               //change the value if unique condition arises\\n               if(i == 0 && Character.getNumericValue(timeCharArr[i+1]) > 3){\\n                 values[valueIndex] = uniqueCase[i];  \\n               } else if(\\n                   (i==0 && timeCharArr[i+1] == \\'?\\') || \\n                   (i==1 && timeCharArr[i-1] == \\'?\\')\\n               ){\\n                 values[valueIndex] = doubleUnk[i];\\n               } \\n               else if(i == 1 && Character.getNumericValue(timeCharArr[i-1]) < 2){\\n                 values[valueIndex] = uniqueCase[i];  \\n               } \\n               else if((i == 3 && timeCharArr[i+1] == \\'?\\') || (i == 4 && timeCharArr[i-1] == \\'?\\')){\\n                   values[valueIndex] = doubleUnk[i];\\n               }\\n               valueIndex++;\\n            }\\n        }\\n\\n        int possibilities = 1;\\n        for(int i: values){\\n            if(i > 0){  \\n                possibilities*= i;\\n            }\\n        }\\n        return possibilities;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        char[] timeCharArr = time.toCharArray();\\n        int[] possibleVal = {3,4,0,6,10};\\n        int[] uniqueCase = {2,10,0};\\n        int[] doubleUnk = {4,6,0,6,10};\\n        //store all possible values\\n        int[] values = new int[5]; \\n        int valueIndex = 0;\\n        for(int i = 0;i< timeCharArr.length;i++){\\n            if(timeCharArr[i] == \\'?\\'){\\n               //brute force all possible cases\\n               values[valueIndex] = possibleVal[i];\\n\\n               //change the value if unique condition arises\\n               if(i == 0 && Character.getNumericValue(timeCharArr[i+1]) > 3){\\n                 values[valueIndex] = uniqueCase[i];  \\n               } else if(\\n                   (i==0 && timeCharArr[i+1] == \\'?\\') || \\n                   (i==1 && timeCharArr[i-1] == \\'?\\')\\n               ){\\n                 values[valueIndex] = doubleUnk[i];\\n               } \\n               else if(i == 1 && Character.getNumericValue(timeCharArr[i-1]) < 2){\\n                 values[valueIndex] = uniqueCase[i];  \\n               } \\n               else if((i == 3 && timeCharArr[i+1] == \\'?\\') || (i == 4 && timeCharArr[i-1] == \\'?\\')){\\n                   values[valueIndex] = doubleUnk[i];\\n               }\\n               valueIndex++;\\n            }\\n        }\\n\\n        int possibilities = 1;\\n        for(int i: values){\\n            if(i > 0){  \\n                possibilities*= i;\\n            }\\n        }\\n        return possibilities;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3732754,
                "title": "java-easy-o-1-constant-time-easy-to-understand",
                "content": "# Intuition\\nwe\\'ve to multiply the possibilities of hour and minutes and that\\'s the answer. Now each character of hour or minute has significance like first char of hour can not be more than 2, second character can be 0-9 but when first is 2 it can go upto 4 only.\\n\\n# Complexity\\n- Time complexity:\\n$$O(1)$$\\n\\n- Space complexity:\\n$$O(1)$$\\n\\n# Code\\n```\\nclass Solution {\\n    public int countTime(String time) {\\n        char first = time.charAt(0);\\n        char second = time.charAt(1);\\n        char third = time.charAt(3);\\n        char fourth = time.charAt(4);\\n        int hours = 1;\\n        int mins = 1;\\n        if(first == \\'?\\'){\\n            if(second == \\'?\\') hours = 24;\\n            else {\\n                if(second - \\'0\\' <= 3) hours = 3;\\n                else hours = 2;\\n            }\\n        } else {\\n            if(second == \\'?\\'){\\n                if(first - \\'0\\' == 2) hours = 4;\\n                else hours = 10;\\n            }\\n        }\\n        if(third == \\'?\\'){\\n            if(fourth == \\'?\\') mins = 60;\\n            else mins = 6;\\n        } else {\\n            if(fourth == \\'?\\') mins = 10;\\n        }\\n        if(hours == 1) return mins;\\n        if(mins == 1) return hours;\\n        return hours*mins;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        char first = time.charAt(0);\\n        char second = time.charAt(1);\\n        char third = time.charAt(3);\\n        char fourth = time.charAt(4);\\n        int hours = 1;\\n        int mins = 1;\\n        if(first == \\'?\\'){\\n            if(second == \\'?\\') hours = 24;\\n            else {\\n                if(second - \\'0\\' <= 3) hours = 3;\\n                else hours = 2;\\n            }\\n        } else {\\n            if(second == \\'?\\'){\\n                if(first - \\'0\\' == 2) hours = 4;\\n                else hours = 10;\\n            }\\n        }\\n        if(third == \\'?\\'){\\n            if(fourth == \\'?\\') mins = 60;\\n            else mins = 6;\\n        } else {\\n            if(fourth == \\'?\\') mins = 10;\\n        }\\n        if(hours == 1) return mins;\\n        if(mins == 1) return hours;\\n        return hours*mins;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3730444,
                "title": "java-easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int countTime(String time1) {\\n      char[] time=time1.toCharArray();\\n      int count=1;\\n      if(time[0]==\\'?\\') \\n      {\\n          if(time[1]==\\'?\\')\\n          {\\n              count*=24;\\n          }\\n          else if(time[1]>\\'3\\')\\n          {\\n              count*=2;\\n          }\\n          else\\n          {\\n              count*=3;\\n          }\\n      }\\n       if(time[1]==\\'?\\') \\n      {\\n          if(time[0]==\\'?\\')\\n          {\\n              count*=1;\\n          }\\n          else if(time[0]==\\'2\\')\\n          {\\n              count*=4;\\n          }\\n          else\\n          {\\n              count*=10;\\n          }\\n        }\\n          if(time[3]==\\'?\\')\\n          {\\n              count*=6;\\n          }\\n          if(time[4]==\\'?\\')\\n          {\\n              count*=10;\\n          }\\n      return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String time1) {\\n      char[] time=time1.toCharArray();\\n      int count=1;\\n      if(time[0]==\\'?\\') \\n      {\\n          if(time[1]==\\'?\\')\\n          {\\n              count*=24;\\n          }\\n          else if(time[1]>\\'3\\')\\n          {\\n              count*=2;\\n          }\\n          else\\n          {\\n              count*=3;\\n          }\\n      }\\n       if(time[1]==\\'?\\') \\n      {\\n          if(time[0]==\\'?\\')\\n          {\\n              count*=1;\\n          }\\n          else if(time[0]==\\'2\\')\\n          {\\n              count*=4;\\n          }\\n          else\\n          {\\n              count*=10;\\n          }\\n        }\\n          if(time[3]==\\'?\\')\\n          {\\n              count*=6;\\n          }\\n          if(time[4]==\\'?\\')\\n          {\\n              count*=10;\\n          }\\n      return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3729615,
                "title": "simple-javascript-solution",
                "content": "\\n# Complexity\\n- Time complexity: $$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(n)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {string} time\\n * @return {number}\\n */\\nvar countTime = function(time) {\\n    let [hours,minutes] = time.split(\\':\\');\\n    let result = [];\\n    if(hours == \\'??\\') result.push(24);\\n    else {\\n        if(hours[0] == \\'?\\') hours[1] > 3 ? result.push(2) : result.push(3)\\n        if(hours[1] == \\'?\\') hours[0] == 2 ? result.push(4) : result.push(10) \\n    }\\n    if(minutes[0] == \\'?\\') result.push(6)\\n    if(minutes[1] == \\'?\\') result.push(10) \\n    var val = 1;\\n    result.forEach((num) => val *= num)\\n    return val\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {string} time\\n * @return {number}\\n */\\nvar countTime = function(time) {\\n    let [hours,minutes] = time.split(\\':\\');\\n    let result = [];\\n    if(hours == \\'??\\') result.push(24);\\n    else {\\n        if(hours[0] == \\'?\\') hours[1] > 3 ? result.push(2) : result.push(3)\\n        if(hours[1] == \\'?\\') hours[0] == 2 ? result.push(4) : result.push(10) \\n    }\\n    if(minutes[0] == \\'?\\') result.push(6)\\n    if(minutes[1] == \\'?\\') result.push(10) \\n    var val = 1;\\n    result.forEach((num) => val *= num)\\n    return val\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3725338,
                "title": "beats-97-60",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def countTime(self, t: str) -> int:\\n        mm = (6 if t[3] == \\'?\\' else 1) * (10 if t[4] == \\'?\\' else 1)\\n        match [t[0],t[1]]:\\n            case (\\'?\\',\\'?\\'):\\n                return mm * 24\\n            case (\\'?\\', (\\'0\\'|\\'1\\'|\\'2\\'|\\'3\\')):\\n                return mm * 3\\n            case (\\'?\\',_):\\n                return mm * 2\\n            case ((\\'0\\'|\\'1\\', \\'?\\')):\\n                return mm * 10\\n            case (_, \\'?\\'):\\n                return mm * 4\\n        return mm\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countTime(self, t: str) -> int:\\n        mm = (6 if t[3] == \\'?\\' else 1) * (10 if t[4] == \\'?\\' else 1)\\n        match [t[0],t[1]]:\\n            case (\\'?\\',\\'?\\'):\\n                return mm * 24\\n            case (\\'?\\', (\\'0\\'|\\'1\\'|\\'2\\'|\\'3\\')):\\n                return mm * 3\\n            case (\\'?\\',_):\\n                return mm * 2\\n            case ((\\'0\\'|\\'1\\', \\'?\\')):\\n                return mm * 10\\n            case (_, \\'?\\'):\\n                return mm * 4\\n        return mm\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3720720,
                "title": "beats-97-59",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def countTime(self, t: str) -> int:\\n        mm = (6 if t[3] == \\'?\\' else 1) * (10 if t[4] == \\'?\\' else 1)\\n        match [t[0],t[1]]:\\n            case (\\'?\\',\\'?\\'):\\n                return mm * 24\\n            case (\\'?\\', (\\'0\\'|\\'1\\'|\\'2\\'|\\'3\\')):\\n                return mm * 3\\n            case (\\'?\\',_):\\n                return mm * 2\\n            case ((\\'0\\'|\\'1\\', \\'?\\')):\\n                return mm * 10\\n            case (_, \\'?\\'):\\n                return mm * 4\\n        return mm\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countTime(self, t: str) -> int:\\n        mm = (6 if t[3] == \\'?\\' else 1) * (10 if t[4] == \\'?\\' else 1)\\n        match [t[0],t[1]]:\\n            case (\\'?\\',\\'?\\'):\\n                return mm * 24\\n            case (\\'?\\', (\\'0\\'|\\'1\\'|\\'2\\'|\\'3\\')):\\n                return mm * 3\\n            case (\\'?\\',_):\\n                return mm * 2\\n            case ((\\'0\\'|\\'1\\', \\'?\\')):\\n                return mm * 10\\n            case (_, \\'?\\'):\\n                return mm * 4\\n        return mm\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3701599,
                "title": "c-beats-100-simple-code",
                "content": "# Intuition\\nJust If else\\n\\n# Approach\\nBrute Force\\n\\n# Complexity\\n- Time complexity:\\nO(1)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int ans=1;\\n        char h1=time[0];\\n        char h2=time[1];\\n        char m1=time[3];\\n        char m2=time[4];\\n        if(h1==\\'?\\' && h2==\\'?\\')\\n            ans*=24;\\n        else if(h1==\\'?\\')\\n        {\\n            if(h2>=\\'4\\' && h2<=\\'9\\')\\n            {\\n                ans*=2;\\n            }\\n            else\\n                ans*=3;\\n        }\\n        else if(h2==\\'?\\')\\n        {\\n            if(h1==\\'0\\' || h1==\\'1\\')\\n                ans*=10;\\n            else\\n                ans*=4;\\n                \\n        }\\n        if(m1==\\'?\\')\\n            ans*=6;\\n        if(m2==\\'?\\')\\n            ans*=10;\\n        return ans;\\n        \\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int ans=1;\\n        char h1=time[0];\\n        char h2=time[1];\\n        char m1=time[3];\\n        char m2=time[4];\\n        if(h1==\\'?\\' && h2==\\'?\\')\\n            ans*=24;\\n        else if(h1==\\'?\\')\\n        {\\n            if(h2>=\\'4\\' && h2<=\\'9\\')\\n            {\\n                ans*=2;\\n            }\\n            else\\n                ans*=3;\\n        }\\n        else if(h2==\\'?\\')\\n        {\\n            if(h1==\\'0\\' || h1==\\'1\\')\\n                ans*=10;\\n            else\\n                ans*=4;\\n                \\n        }\\n        if(m1==\\'?\\')\\n            ans*=6;\\n        if(m2==\\'?\\')\\n            ans*=10;\\n        return ans;\\n        \\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3698412,
                "title": "short-fast-scalable-but-slightly-unintuitive-solution",
                "content": "# Intuition\\nLet us first consider the solution for the number of valid possible hours. For convenience, let us label the most-significant digit/char as `H`, and the least-significant digit/char as `h`. The maximum value `Hh` can take is `23`. The basic idea for the solution to this part is as follows:\\n\\n- If `Hh == \"??\"`, then there are `23 + 1 = 24` possible hours.\\n- Else if `h = \"?\"`, then\\n    - If `H < 2`, then `h` can be between `0` and `9` (10 possible values)\\n    - Else if `H == 2`, then `h` can be between `0` and `3` (4 possible values)\\n- Else if `H == \"?\"`, then\\n    - If `h <= 4`, then `H` can be between `0` and `2` (3 possible values)\\n    - Else if `h > 4`, then `H` can be between `0` and `1` (2 possible values)\\n\\nNow, the complete problem can be broken into the following subproblems:\\n\\n- Count the number of valid possible hours (described above), $$c_h$$\\n- Count the number of valid possible minutes, $$c_m$$\\n\\nThe solution to the complete problem is $$c_h \\\\times c_m$$.\\n\\nIt is easy to notice some similarities between the two subproblems. The number of valid possibilities depends on the maximum possible value for each block of time (23 for `hh`, `59` for `mm`).\\n\\n# Approach\\nWrite a function that generalizes the similarities between the subproblems. This approach would easily scale if we were to add additional characters in the input for seconds and milliseconds (e.g. `hh:mm:ss:ll`), as long as each subprolem still contains exactly two characters.\\n\\n# Complexity\\n- Time complexity: O(1)\\n\\n- Space complexity: O(1)\\n\\n# Code\\n```\\nclass Solution:\\n    def nvalid(self, Dd, maxval):\\n        assert len(Dd) == 2\\n        Dmax, dmax = maxval // 10, maxval % 10\\n        if \"?\" not in Dd:\\n            return 1\\n        D, d = Dd\\n        if D == \"?\" and d == \"?\":\\n            return maxval + 1\\n        if d == \"?\":\\n            if int(D) < Dmax:\\n                return 10\\n            return dmax + 1\\n        # D is ?\\n        if int(d) <= dmax:\\n            return Dmax + 1\\n        return Dmax\\n\\n    def countTime(self, time: str) -> int:\\n        c1 = self.nvalid(time[:2], 23)\\n        c2 = self.nvalid(time[3:], 59)\\n        return c1 * c2\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def nvalid(self, Dd, maxval):\\n        assert len(Dd) == 2\\n        Dmax, dmax = maxval // 10, maxval % 10\\n        if \"?\" not in Dd:\\n            return 1\\n        D, d = Dd\\n        if D == \"?\" and d == \"?\":\\n            return maxval + 1\\n        if d == \"?\":\\n            if int(D) < Dmax:\\n                return 10\\n            return dmax + 1\\n        # D is ?\\n        if int(d) <= dmax:\\n            return Dmax + 1\\n        return Dmax\\n\\n    def countTime(self, time: str) -> int:\\n        c1 = self.nvalid(time[:2], 23)\\n        c2 = self.nvalid(time[3:], 59)\\n        return c1 * c2\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3686582,
                "title": "straightforward-java-beats-100-and-96",
                "content": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        char[] s = time.toCharArray();\\n        int p = 1;\\n        if (s[0] == \\'?\\' && s[1] == \\'?\\') p *= 24;\\n        else {\\n            if (s[0] == \\'?\\') {\\n                if (Character.getNumericValue(s[1]) < 4) p *= 3;\\n                else p *= 2;\\n            }\\n            if (s[1] == \\'?\\') {\\n                if (Character.getNumericValue(s[0]) < 2) p *= 10;\\n                else p *= 4;\\n            }\\n        }\\n        if (s[3] == \\'?\\') p *= 6;\\n        if (s[4] == \\'?\\') p *= 10;\\n        return p;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        char[] s = time.toCharArray();\\n        int p = 1;\\n        if (s[0] == \\'?\\' && s[1] == \\'?\\') p *= 24;\\n        else {\\n            if (s[0] == \\'?\\') {\\n                if (Character.getNumericValue(s[1]) < 4) p *= 3;\\n                else p *= 2;\\n            }\\n            if (s[1] == \\'?\\') {\\n                if (Character.getNumericValue(s[0]) < 2) p *= 10;\\n                else p *= 4;\\n            }\\n        }\\n        if (s[3] == \\'?\\') p *= 6;\\n        if (s[4] == \\'?\\') p *= 10;\\n        return p;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3678631,
                "title": "valid-clock-times-js-multiple-if-conditions-50-ms",
                "content": "```\\n/**\\n * @param {string} time\\n * @return {number}\\n */\\nvar countTime = function(time) {    \\n    first = 0\\n    second = 0\\n\\n    let [a,b,,c,d] = [...time]   \\n\\n         if (a == \\'?\\' && b == \\'?\\') first = 24\\n    else if (a == \\'?\\' && b >   3 ) first =  2\\n    else if (a == \\'?\\' && b <=  3 ) first =  3\\n    else if (a <   2  && b == \\'?\\') first = 10\\n    else if (a ==  2  && b == \\'?\\') first =  4\\n    else first = 1\\n\\n         if (c == \\'?\\' && d == \\'?\\') second = 60\\n    else if (c == \\'?\\' && d != \\'?\\') second =  6\\n    else if (c != \\'?\\' && d == \\'?\\') second = 10\\n    else second = 1\\n\\n    return first * second\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {string} time\\n * @return {number}\\n */\\nvar countTime = function(time) {    \\n    first = 0\\n    second = 0\\n\\n    let [a,b,,c,d] = [...time]   \\n\\n         if (a == \\'?\\' && b == \\'?\\') first = 24\\n    else if (a == \\'?\\' && b >   3 ) first =  2\\n    else if (a == \\'?\\' && b <=  3 ) first =  3\\n    else if (a <   2  && b == \\'?\\') first = 10\\n    else if (a ==  2  && b == \\'?\\') first =  4\\n    else first = 1\\n\\n         if (c == \\'?\\' && d == \\'?\\') second = 60\\n    else if (c == \\'?\\' && d != \\'?\\') second =  6\\n    else if (c != \\'?\\' && d == \\'?\\') second = 10\\n    else second = 1\\n\\n    return first * second\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3652308,
                "title": "simple-approach-o-1-implement-all-cases",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nJust enumerate all possible cases\\n\\n# Complexity\\n- Time complexity:\\n$$O(1)$$\\n\\n- Space complexity:\\n$$O(1)$$\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int ans = 1;\\n        if(time[0] == \\'?\\')\\n        {\\n            if(time[1] == \\'?\\' )\\n            {\\n                ans = 24;\\n            }\\n            else if(time[1] - \\'0\\' <=3)\\n            {\\n                ans *= 3; \\n            }\\n            else\\n            {\\n                ans*=2;\\n            }\\n        }\\n\\n        if(time[1] == \\'?\\')\\n        {\\n            if(time[0] == \\'?\\')\\n            {\\n                ans=24;\\n            }\\n            else if( time[0] - \\'0\\'<2)\\n            {\\n                ans*=10;\\n            }\\n            else\\n            {\\n                ans*=4;\\n            }\\n        }\\n\\n        if(time[3] == \\'?\\')\\n        {\\n            ans*=6;\\n        }\\n\\n        if(time[4] == \\'?\\')\\n        {\\n            ans*=10;\\n        }\\n    return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int ans = 1;\\n        if(time[0] == \\'?\\')\\n        {\\n            if(time[1] == \\'?\\' )\\n            {\\n                ans = 24;\\n            }\\n            else if(time[1] - \\'0\\' <=3)\\n            {\\n                ans *= 3; \\n            }\\n            else\\n            {\\n                ans*=2;\\n            }\\n        }\\n\\n        if(time[1] == \\'?\\')\\n        {\\n            if(time[0] == \\'?\\')\\n            {\\n                ans=24;\\n            }\\n            else if( time[0] - \\'0\\'<2)\\n            {\\n                ans*=10;\\n            }\\n            else\\n            {\\n                ans*=4;\\n            }\\n        }\\n\\n        if(time[3] == \\'?\\')\\n        {\\n            ans*=6;\\n        }\\n\\n        if(time[4] == \\'?\\')\\n        {\\n            ans*=10;\\n        }\\n    return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3634199,
                "title": "0-ms-java-simple-solution-straight-forward",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Straight forward. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- O(n) -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int countTime(String time) {\\n        int result = 1;\\n        if (time.charAt(4)==\\'?\\'){\\n            result = 10;\\n        }\\n        if (time.charAt(3)==\\'?\\'){\\n            result *= 6;\\n        }\\n        if (time.charAt(1)==\\'?\\' && time.charAt(0)!=\\'?\\'){\\n            if ( time.charAt(0) == \\'0\\' || time.charAt(0) == \\'1\\')\\n            result *= 10;\\n            else if ( time.charAt(0) == \\'2\\'){\\n             result *= 4;\\n            }\\n        }\\n        if (time.charAt(1)!=\\'?\\' && time.charAt(0)==\\'?\\'){\\n            if (time.charAt(1)>\\'3\\'){\\n                result*=2;\\n            }\\n            else if (time.charAt(1)<=\\'3\\'){\\n                result*=3;\\n            }\\n        }\\n        if (time.charAt(1)==\\'?\\' && time.charAt(0)==\\'?\\'){\\n            result *= 24;\\n        }\\n        return result;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        int result = 1;\\n        if (time.charAt(4)==\\'?\\'){\\n            result = 10;\\n        }\\n        if (time.charAt(3)==\\'?\\'){\\n            result *= 6;\\n        }\\n        if (time.charAt(1)==\\'?\\' && time.charAt(0)!=\\'?\\'){\\n            if ( time.charAt(0) == \\'0\\' || time.charAt(0) == \\'1\\')\\n            result *= 10;\\n            else if ( time.charAt(0) == \\'2\\'){\\n             result *= 4;\\n            }\\n        }\\n        if (time.charAt(1)!=\\'?\\' && time.charAt(0)==\\'?\\'){\\n            if (time.charAt(1)>\\'3\\'){\\n                result*=2;\\n            }\\n            else if (time.charAt(1)<=\\'3\\'){\\n                result*=3;\\n            }\\n        }\\n        if (time.charAt(1)==\\'?\\' && time.charAt(0)==\\'?\\'){\\n            result *= 24;\\n        }\\n        return result;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3632671,
                "title": "easy-to-understand-must-see",
                "content": "```\\nclass Solution {\\npublic:\\n    int countTime(string str) \\n{\\n    //the length of the string is 5\\n\\t//hh:mm\\n\\t\\n\\t//00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 (24)\\n\\t//00 -> 59 (60)\\n\\t//24 * 60 = 1440\\n\\t\\n\\tint idx = 0;\\n\\tint ans = 0;\\n\\tint n = str.length();\\n\\tfun(str,idx, ans , n);\\n\\treturn ans; \\n}\\nbool isValid(string &str)\\n{\\n\\t//h h : m m\\n\\t//0 1 2 3 4\\n\\tstring hr = \"\";\\n\\thr.push_back(str[0]);\\n\\thr.push_back(str[1]);\\n\\t\\n\\tint hrs = stoi(hr);\\n\\tif(hrs < 0 or hrs >=24) return false;\\n\\t\\n\\tstring min = \"\";\\n\\tmin.push_back(str[3]);\\n\\tmin.push_back(str[4]);\\n\\t\\n\\tint mins = stoi(min);\\n\\t\\n\\tif(mins < 0 or mins >= 60) return false;\\n\\t\\n\\t\\n\\treturn true;\\n\\t\\n}\\nvoid fun(string str ,int idx , int &ans , int &n)\\n{\\n\\tif(idx >= n)\\n\\t{\\n\\t\\tif(isValid(str) == true)\\n\\t\\tans++;\\n\\t\\t\\n\\t\\treturn;\\n\\t}\\n\\tif(str[idx] == \\'?\\')\\n\\t{\\n\\t\\tfor(int i=0;i<=9;i++)\\n\\t\\t{\\n\\t\\t\\tstr[idx] = i + \\'0\\';\\n\\t\\t\\tfun(str,idx+1,ans,n);\\n\\t\\t\\tstr[idx] = \\'?\\';\\n\\t\\t}\\n\\t}\\n\\telse if(str[idx] != \\'?\\')\\n\\t{\\n\\t\\tfun(str,idx+1,ans,n);\\n\\t}\\n}\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "String",
                    "Enumeration"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countTime(string str) \\n{\\n    //the length of the string is 5\\n\\t//hh:mm\\n\\t\\n\\t//00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 (24)\\n\\t//00 -> 59 (60)\\n\\t//24 * 60 = 1440\\n\\t\\n\\tint idx = 0;\\n\\tint ans = 0;\\n\\tint n = str.length();\\n\\tfun(str,idx, ans , n);\\n\\treturn ans; \\n}\\nbool isValid(string &str)\\n{\\n\\t//h h : m m\\n\\t//0 1 2 3 4\\n\\tstring hr = \"\";\\n\\thr.push_back(str[0]);\\n\\thr.push_back(str[1]);\\n\\t\\n\\tint hrs = stoi(hr);\\n\\tif(hrs < 0 or hrs >=24) return false;\\n\\t\\n\\tstring min = \"\";\\n\\tmin.push_back(str[3]);\\n\\tmin.push_back(str[4]);\\n\\t\\n\\tint mins = stoi(min);\\n\\t\\n\\tif(mins < 0 or mins >= 60) return false;\\n\\t\\n\\t\\n\\treturn true;\\n\\t\\n}\\nvoid fun(string str ,int idx , int &ans , int &n)\\n{\\n\\tif(idx >= n)\\n\\t{\\n\\t\\tif(isValid(str) == true)\\n\\t\\tans++;\\n\\t\\t\\n\\t\\treturn;\\n\\t}\\n\\tif(str[idx] == \\'?\\')\\n\\t{\\n\\t\\tfor(int i=0;i<=9;i++)\\n\\t\\t{\\n\\t\\t\\tstr[idx] = i + \\'0\\';\\n\\t\\t\\tfun(str,idx+1,ans,n);\\n\\t\\t\\tstr[idx] = \\'?\\';\\n\\t\\t}\\n\\t}\\n\\telse if(str[idx] != \\'?\\')\\n\\t{\\n\\t\\tfun(str,idx+1,ans,n);\\n\\t}\\n}\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3625892,
                "title": "java-solution-10-lines-of-code-and-0ms",
                "content": "# Intuition\\n\\n# Code\\n```\\nclass Solution {\\n    public int countTime(String time) {\\n        int c = 0;\\n        int c0 = Character.getNumericValue(time.charAt(0)),\\n            c1 = Character.getNumericValue(time.charAt(1));\\n        if (time.charAt(0) == \\'?\\') {\\n            c += time.charAt(1) == \\'?\\' ? (2 * 10 + 1 * 4) : (c1 < 4 ? 3 : 2);\\n        } else if (time.charAt(0) != \\'?\\' && time.charAt(1) == \\'?\\') {\\n            c += c0 < 2 ? 10 : 4;\\n        } else c = 1;\\n        if (time.charAt(3) == \\'?\\') c *= 6;\\n        if (time.charAt(4) == \\'?\\') c *= 10;\\n        return c;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        int c = 0;\\n        int c0 = Character.getNumericValue(time.charAt(0)),\\n            c1 = Character.getNumericValue(time.charAt(1));\\n        if (time.charAt(0) == \\'?\\') {\\n            c += time.charAt(1) == \\'?\\' ? (2 * 10 + 1 * 4) : (c1 < 4 ? 3 : 2);\\n        } else if (time.charAt(0) != \\'?\\' && time.charAt(1) == \\'?\\') {\\n            c += c0 < 2 ? 10 : 4;\\n        } else c = 1;\\n        if (time.charAt(3) == \\'?\\') c *= 6;\\n        if (time.charAt(4) == \\'?\\') c *= 10;\\n        return c;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3585598,
                "title": "very-easy-solution",
                "content": "\\n\\n# Code\\n```\\n/**\\n * @param {string} time\\n * @return {number}\\n */\\nvar countTime = function(time) {\\n    let count1=0;\\n    let count2=0;\\n    let arr = time.split(\"\");\\n\\n    if (arr[0]!==\"?\" && arr[1]!==\"?\" && arr[3]!==\"?\" && arr[4]!==\"?\") {return 1}\\n\\n     if (arr[0]===\"?\" && arr[1]===\"?\") {count1=24;}\\n     if (arr[3]===\"?\" && arr[4]===\"?\") {count2=60;}\\n     \\n     if (arr[0]===\"?\" && arr[1]>=4) {count1=2;}\\n     if (arr[0]===\"?\" && arr[1]<4) {count1=3;}\\n\\n     if (arr[1]===\"?\" && arr[0]<2) {count1=10;}\\n     if (arr[1]===\"?\" && arr[0]==2) {count1=4;}\\n\\n\\n     if (arr[3]===\"?\" && arr[4]!==\"?\") {count2=6;}\\n     if (arr[4]===\"?\" && arr[3]!==\"?\") {count2=10;}\\n\\nif (count2!=0 && count1!=0) {return count1*count2; }\\nelse if (count1==0) {return count2;}\\nelse if (count2==0) {return count1;}\\n\\n    \\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {string} time\\n * @return {number}\\n */\\nvar countTime = function(time) {\\n    let count1=0;\\n    let count2=0;\\n    let arr = time.split(\"\");\\n\\n    if (arr[0]!==\"?\" && arr[1]!==\"?\" && arr[3]!==\"?\" && arr[4]!==\"?\") {return 1}\\n\\n     if (arr[0]===\"?\" && arr[1]===\"?\") {count1=24;}\\n     if (arr[3]===\"?\" && arr[4]===\"?\") {count2=60;}\\n     \\n     if (arr[0]===\"?\" && arr[1]>=4) {count1=2;}\\n     if (arr[0]===\"?\" && arr[1]<4) {count1=3;}\\n\\n     if (arr[1]===\"?\" && arr[0]<2) {count1=10;}\\n     if (arr[1]===\"?\" && arr[0]==2) {count1=4;}\\n\\n\\n     if (arr[3]===\"?\" && arr[4]!==\"?\") {count2=6;}\\n     if (arr[4]===\"?\" && arr[3]!==\"?\") {count2=10;}\\n\\nif (count2!=0 && count1!=0) {return count1*count2; }\\nelse if (count1==0) {return count2;}\\nelse if (count2==0) {return count1;}\\n\\n    \\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3577044,
                "title": "trivial-c-beats-100",
                "content": "\\n```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        auto result = 1;\\n        if (time[0] == \\'?\\' && time[1] == \\'?\\') result *= 24;\\n        else if (time[0] == \\'?\\') result *= time[1] < \\'4\\' ? 3 : 2;\\n        else if (time[1] == \\'?\\') result *= time[0] == \\'2\\' ? 4 : 10;\\n        if (time[3] == \\'?\\') result *= 6;\\n        if (time[4] == \\'?\\') result *= 10;\\n        return result;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        auto result = 1;\\n        if (time[0] == \\'?\\' && time[1] == \\'?\\') result *= 24;\\n        else if (time[0] == \\'?\\') result *= time[1] < \\'4\\' ? 3 : 2;\\n        else if (time[1] == \\'?\\') result *= time[0] == \\'2\\' ? 4 : 10;\\n        if (time[3] == \\'?\\') result *= 6;\\n        if (time[4] == \\'?\\') result *= 10;\\n        return result;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3565999,
                "title": "java-readable-and-straightforward-solution",
                "content": "Counting possible cases for hours and for minutes separately. \\nMultiply one by another.\\n```\\n    public int countTime(String time) {\\n        String split[] = time.split(\":\");\\n        var hours   = split[0];\\n        var minutes = split[1];\\n        int hcount = 0, mcount  = 0;\\n        \\n        if (hours.charAt(0)==\\'?\\'){\\n            if (hours.charAt(1)==\\'?\\')      hcount=24;\\n            else if (hours.charAt(1)<=\\'3\\') hcount=3;\\n            else if (hours.charAt(1)>=\\'4\\') hcount=2;\\n        } else if (hours.charAt(1)==\\'?\\'){\\n            if (hours.charAt(0)==\\'2\\') hcount=4;\\n            else hcount=10;\\n        } else {\\n            hcount=1;\\n        }\\n        \\n        if (minutes.charAt(0)==\\'?\\'){\\n            if (minutes.charAt(1)==\\'?\\') mcount=60; else mcount=6;\\n        } else if (minutes.charAt(1)==\\'?\\'){\\n            mcount=10;\\n        } else{\\n            mcount=1;\\n        }\\n        \\n        return mcount*hcount;\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\n    public int countTime(String time) {\\n        String split[] = time.split(\":\");\\n        var hours   = split[0];\\n        var minutes = split[1];\\n        int hcount = 0, mcount  = 0;\\n        \\n        if (hours.charAt(0)==\\'?\\'){\\n            if (hours.charAt(1)==\\'?\\')      hcount=24;\\n            else if (hours.charAt(1)<=\\'3\\') hcount=3;\\n            else if (hours.charAt(1)>=\\'4\\') hcount=2;\\n        } else if (hours.charAt(1)==\\'?\\'){\\n            if (hours.charAt(0)==\\'2\\') hcount=4;\\n            else hcount=10;\\n        } else {\\n            hcount=1;\\n        }\\n        \\n        if (minutes.charAt(0)==\\'?\\'){\\n            if (minutes.charAt(1)==\\'?\\') mcount=60; else mcount=6;\\n        } else if (minutes.charAt(1)==\\'?\\'){\\n            mcount=10;\\n        } else{\\n            mcount=1;\\n        }\\n        \\n        return mcount*hcount;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3563534,
                "title": "c-if-else",
                "content": "# Code\\n```\\npublic class Solution {\\n    public int CountTime(string time) {\\n        var count = 1;\\n\\n        if(time[0] == \\'?\\' && time[1] == \\'?\\')\\n            count *= 24; // 00 .. 23\\n        else if(time[0] == \\'?\\' && time[1] != \\'?\\'){\\n            if(time[1] - \\'0\\' > 3)\\n                count *= 2; // 0,1 \\n            else\\n                count *= 3; // 0,1,2\\n        }\\n        else if(time[0] != \\'?\\' && time[1] == \\'?\\'){\\n            if(time[0] - \\'0\\' == 2)\\n                count *= 4; // 0,1,2,3\\n            else\\n                count *= 10; // 0 .. 9\\n        }\\n       \\n        \\n        if(time[3] == \\'?\\')\\n            count *= 6; // 0 .. 5\\n        \\n        if(time[4] == \\'?\\')\\n            count *= 10; // 0 .. 9\\n\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public int CountTime(string time) {\\n        var count = 1;\\n\\n        if(time[0] == \\'?\\' && time[1] == \\'?\\')\\n            count *= 24; // 00 .. 23\\n        else if(time[0] == \\'?\\' && time[1] != \\'?\\'){\\n            if(time[1] - \\'0\\' > 3)\\n                count *= 2; // 0,1 \\n            else\\n                count *= 3; // 0,1,2\\n        }\\n        else if(time[0] != \\'?\\' && time[1] == \\'?\\'){\\n            if(time[0] - \\'0\\' == 2)\\n                count *= 4; // 0,1,2,3\\n            else\\n                count *= 10; // 0 .. 9\\n        }\\n       \\n        \\n        if(time[3] == \\'?\\')\\n            count *= 6; // 0 .. 5\\n        \\n        if(time[4] == \\'?\\')\\n            count *= 10; // 0 .. 9\\n\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3501511,
                "title": "enumerate-in-binary-encoding-order-c",
                "content": "# Code\\n```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        if (time[0] == \\'?\\' && time[1] == \\'?\\' && time[3] == \\'?\\' && time[4] == \\'?\\') {\\n            return 1440;\\n        } else if (time[0] == \\'?\\' && time[1] == \\'?\\' && time[3] == \\'?\\' && time[4] != \\'?\\') {\\n            return 24 * 6;\\n        } else if (time[0] == \\'?\\' && time[1] == \\'?\\' && time[3] != \\'?\\' && time[4] == \\'?\\') {\\n            return 24 * 10;\\n        } else if (time[0] == \\'?\\' && time[1] == \\'?\\' && time[3] != \\'?\\' && time[4] != \\'?\\') {\\n            return 24;\\n        } else if (time[0] == \\'?\\' && time[1] != \\'?\\' && time[3] == \\'?\\' && time[4] == \\'?\\') {\\n            return (time[1] < \\'4\\' ? 3 : 2) * 60;\\n        } else if (time[0] == \\'?\\' && time[1] != \\'?\\' && time[3] == \\'?\\' && time[4] != \\'?\\') {\\n            return (time[1] < \\'4\\' ? 3 : 2) * 6;\\n        } else if (time[0] == \\'?\\' && time[1] != \\'?\\' && time[3] != \\'?\\' && time[4] == \\'?\\') {\\n            return (time[1] < \\'4\\' ? 3 : 2) * 10;\\n        } else if (time[0] == \\'?\\' && time[1] != \\'?\\' && time[3] != \\'?\\' && time[4] != \\'?\\') {\\n            return time[1] < \\'4\\' ? 3 : 2;\\n        } else if (time[0] != \\'?\\' && time[1] == \\'?\\' && time[3] == \\'?\\' && time[4] == \\'?\\') {\\n            return (time[0] == \\'2\\' ? 4 : 10) * 60;\\n        } else if (time[0] != \\'?\\' && time[1] == \\'?\\' && time[3] == \\'?\\' && time[4] != \\'?\\') {\\n            return (time[0] == \\'2\\' ? 4 : 10) * 6;\\n        } else if (time[0] != \\'?\\' && time[1] == \\'?\\' && time[3] != \\'?\\' && time[4] == \\'?\\') {\\n            return (time[0] == \\'2\\' ? 4 : 10) * 10;\\n        } else if (time[0] != \\'?\\' && time[1] == \\'?\\' && time[3] != \\'?\\' && time[4] != \\'?\\') {\\n            return time[0] == \\'2\\' ? 4 : 10;\\n        } else if (time[0] != \\'?\\' && time[1] != \\'?\\' && time[3] == \\'?\\' && time[4] == \\'?\\') {\\n            return 60;\\n        } else if (time[0] != \\'?\\' && time[1] != \\'?\\' && time[3] == \\'?\\' && time[4] != \\'?\\') {\\n            return 6;\\n        } else if (time[0] != \\'?\\' && time[1] != \\'?\\' && time[3] != \\'?\\' && time[4] == \\'?\\') {\\n            return 10;\\n        } else if (time[0] != \\'?\\' && time[1] != \\'?\\' && time[3] != \\'?\\' && time[4] != \\'?\\') {\\n            return 1;\\n        } else {\\n            return -1; // invalid case\\n        }\\n    }\\n};\\n\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        if (time[0] == \\'?\\' && time[1] == \\'?\\' && time[3] == \\'?\\' && time[4] == \\'?\\') {\\n            return 1440;\\n        } else if (time[0] == \\'?\\' && time[1] == \\'?\\' && time[3] == \\'?\\' && time[4] != \\'?\\') {\\n            return 24 * 6;\\n        } else if (time[0] == \\'?\\' && time[1] == \\'?\\' && time[3] != \\'?\\' && time[4] == \\'?\\') {\\n            return 24 * 10;\\n        } else if (time[0] == \\'?\\' && time[1] == \\'?\\' && time[3] != \\'?\\' && time[4] != \\'?\\') {\\n            return 24;\\n        } else if (time[0] == \\'?\\' && time[1] != \\'?\\' && time[3] == \\'?\\' && time[4] == \\'?\\') {\\n            return (time[1] < \\'4\\' ? 3 : 2) * 60;\\n        } else if (time[0] == \\'?\\' && time[1] != \\'?\\' && time[3] == \\'?\\' && time[4] != \\'?\\') {\\n            return (time[1] < \\'4\\' ? 3 : 2) * 6;\\n        } else if (time[0] == \\'?\\' && time[1] != \\'?\\' && time[3] != \\'?\\' && time[4] == \\'?\\') {\\n            return (time[1] < \\'4\\' ? 3 : 2) * 10;\\n        } else if (time[0] == \\'?\\' && time[1] != \\'?\\' && time[3] != \\'?\\' && time[4] != \\'?\\') {\\n            return time[1] < \\'4\\' ? 3 : 2;\\n        } else if (time[0] != \\'?\\' && time[1] == \\'?\\' && time[3] == \\'?\\' && time[4] == \\'?\\') {\\n            return (time[0] == \\'2\\' ? 4 : 10) * 60;\\n        } else if (time[0] != \\'?\\' && time[1] == \\'?\\' && time[3] == \\'?\\' && time[4] != \\'?\\') {\\n            return (time[0] == \\'2\\' ? 4 : 10) * 6;\\n        } else if (time[0] != \\'?\\' && time[1] == \\'?\\' && time[3] != \\'?\\' && time[4] == \\'?\\') {\\n            return (time[0] == \\'2\\' ? 4 : 10) * 10;\\n        } else if (time[0] != \\'?\\' && time[1] == \\'?\\' && time[3] != \\'?\\' && time[4] != \\'?\\') {\\n            return time[0] == \\'2\\' ? 4 : 10;\\n        } else if (time[0] != \\'?\\' && time[1] != \\'?\\' && time[3] == \\'?\\' && time[4] == \\'?\\') {\\n            return 60;\\n        } else if (time[0] != \\'?\\' && time[1] != \\'?\\' && time[3] == \\'?\\' && time[4] != \\'?\\') {\\n            return 6;\\n        } else if (time[0] != \\'?\\' && time[1] != \\'?\\' && time[3] != \\'?\\' && time[4] == \\'?\\') {\\n            return 10;\\n        } else if (time[0] != \\'?\\' && time[1] != \\'?\\' && time[3] != \\'?\\' && time[4] != \\'?\\') {\\n            return 1;\\n        } else {\\n            return -1; // invalid case\\n        }\\n    }\\n};\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3462323,
                "title": "simple-python-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution(object):\\n    def countTime(self, time):\\n        \"\"\"\\n        :type time: str\\n        :rtype: int\\n        \"\"\"\\n        lst=[]\\n        f=1\\n        for i,item in enumerate(time):\\n            if item==\"?\":\\n                lst.append(i)\\n\\n        if 0 in lst and 1 in lst:\\n            f=24*f\\n        if 0 in lst and 1 not in lst:\\n            if int(time[1])<4:\\n                f=3*f\\n            else:\\n                f=2*f\\n        if 1 in lst and 0 not in lst:\\n            if time[0]==\"2\":\\n                f=f*4\\n            else:\\n                f=f*10\\n        if 3 in lst and 4 in lst:\\n            f=f*60\\n        if 3 in lst and 4 not in lst:\\n            f=f*6\\n        if 3 not in lst and 4 in lst:\\n            f=f*10\\n        return f\\n\\n        \\n    \\n\\n\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def countTime(self, time):\\n        \"\"\"\\n        :type time: str\\n        :rtype: int\\n        \"\"\"\\n        lst=[]\\n        f=1\\n        for i,item in enumerate(time):\\n            if item==\"?\":\\n                lst.append(i)\\n\\n        if 0 in lst and 1 in lst:\\n            f=24*f\\n        if 0 in lst and 1 not in lst:\\n            if int(time[1])<4:\\n                f=3*f\\n            else:\\n                f=2*f\\n        if 1 in lst and 0 not in lst:\\n            if time[0]==\"2\":\\n                f=f*4\\n            else:\\n                f=f*10\\n        if 3 in lst and 4 in lst:\\n            f=f*60\\n        if 3 in lst and 4 not in lst:\\n            f=f*6\\n        if 3 not in lst and 4 in lst:\\n            f=f*10\\n        return f\\n\\n        \\n    \\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3440171,
                "title": "beat-100-direct-approach-time-complexity",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int countTime(String time) {\\n        int count =1;char x = \\'?\\';\\n        for(int i =0;i<time.length();i++){\\n            if(x==time.charAt(i)){\\n                if(i == 0 && x==time.charAt(i+1)){\\n                    i++;\\n                    count *=24;\\n                }\\n                else{  \\n                if(i == 0  ){\\n                    if((time.charAt(i+1)-\\'0\\')<=3)\\n                        count *=3;\\n                    else\\n                        count *=2;\\n                }\\n                if(i == 1  ){\\n                    if((time.charAt(i-1)-\\'0\\')==2)\\n                        count *=4;\\n                    else\\n                        count *=10;\\n                }\\n                if( i == 4 )\\n                    count *=10;\\n                if(i == 3)\\n                    count *=6;\\n            }\\n            }\\n        }\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Math",
                    "Enumeration"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        int count =1;char x = \\'?\\';\\n        for(int i =0;i<time.length();i++){\\n            if(x==time.charAt(i)){\\n                if(i == 0 && x==time.charAt(i+1)){\\n                    i++;\\n                    count *=24;\\n                }\\n                else{  \\n                if(i == 0  ){\\n                    if((time.charAt(i+1)-\\'0\\')<=3)\\n                        count *=3;\\n                    else\\n                        count *=2;\\n                }\\n                if(i == 1  ){\\n                    if((time.charAt(i-1)-\\'0\\')==2)\\n                        count *=4;\\n                    else\\n                        count *=10;\\n                }\\n                if( i == 4 )\\n                    count *=10;\\n                if(i == 3)\\n                    count *=6;\\n            }\\n            }\\n        }\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3438387,
                "title": "c-solution-t-c-o-1-clean-and-concise",
                "content": "# Code\\n```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int ans = 1;\\n        if(time[4] == \\'?\\') ans *= 10;\\n        if(time[3] == \\'?\\') ans *= 6;\\n        \\n        if(time[0] == \\'?\\' && time[1] == \\'?\\') ans *= 24;\\n        else if(time[1] == \\'?\\') {\\n            if(time[0]-\\'0\\' == 2) ans *= 4;\\n            else ans *= 10;\\n        }\\n        else if(time[0] == \\'?\\') {\\n            if(time[1]-\\'0\\' < 4) ans *= 3;\\n            else ans *= 2;\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int ans = 1;\\n        if(time[4] == \\'?\\') ans *= 10;\\n        if(time[3] == \\'?\\') ans *= 6;\\n        \\n        if(time[0] == \\'?\\' && time[1] == \\'?\\') ans *= 24;\\n        else if(time[1] == \\'?\\') {\\n            if(time[0]-\\'0\\' == 2) ans *= 4;\\n            else ans *= 10;\\n        }\\n        else if(time[0] == \\'?\\') {\\n            if(time[1]-\\'0\\' < 4) ans *= 3;\\n            else ans *= 2;\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3423495,
                "title": "python-explained-runtime-8-ms-beats-100",
                "content": "![Screenshot 2023-04-16 5.37.44 PM.png](https://assets.leetcode.com/users/images/a74a3a9c-b482-4ae8-a63e-67606e73e0f7_1681647576.570333.png)\\n\\n\\n# Code\\n```\\nclass Solution(object):\\n    def countTime(self, time):\\n        \"\"\"\\n        :type time: str\\n        :rtype: int\\n        \"\"\"\\n\\n        # My Code.\\n\\n        # If there is no \\'?\\' in time.\\n        if \\'?\\' not in time:\\n            return 1\\n\\n        # When \\'?\\' in time.\\n        # Splitting time at \\':\\' into hour & minutes.\\n        h, m = time.split(\\':\\')\\n\\n        # Counter for hour & minutes.\\n        a = b = 0\\n\\n        # When \\'?\\' in h.\\n        if \\'?\\' in h:\\n\\n            # When \\'?\\' is in first place.\\n            if h[0] == \\'?\\' and h[1] != \\'?\\':\\n\\n                # There are 3 possibilities.\\n                # 0, 1 & 2. Hence, iterating till range of 3.\\n                for i in range(3):\\n\\n                    # Replacing \\'?\\' with str(i) concatenated with h[1].\\n                    # Checking if the new time is between 00 & 24.\\n                    if (\\'00\\' <= (str(i) + h[1]) < \\'24\\') is True:\\n\\n                        # Add 1 to a if above condition is True.\\n                        a += 1\\n\\n            # When \\'?\\' is in second place.\\n            elif h[1] == \\'?\\' and h[0] != \\'?\\':\\n\\n                # There are 10 possibilities.\\n                # 0,1,2,3,4,5,6,7,8 & 9. Hence, iterating till range of 10.\\n                for i in range(10):\\n\\n                    # Replacing \\'?\\' with str(i) concatenated with h[0].\\n                    # Checking if the new time is between 00 & 24.\\n                    if (\\'00\\' <= (h[0] + str(i)) < \\'24\\') is True:\\n\\n                        # Add 1 to a if above condition is True.\\n                        a += 1\\n\\n            # When \\'?\\' is in both places.\\n            else:\\n\\n                # a becomes 24 as there are 24 hours.\\n                a = 24\\n\\n        # When \\'?\\' in m.\\n        if \\'?\\' in m:\\n\\n            # When \\'?\\' is in first place.\\n            if m[0] == \\'?\\' and m[1] != \\'?\\':\\n\\n                # There are 10 possibilities.\\n                # 0,1,2,3,4,5,6,7,8 & 9. Hence, iterating till range of 10.\\n                for i in range(10):\\n\\n                    # Replacing \\'?\\' with str(i) concatenated with m[1].\\n                    # Checking if the new time is between 00 & 60.\\n                    if (\\'00\\' <= (str(i) + m[1]) < \\'60\\') is True:\\n\\n                        # Add 1 to b if above condition is True.\\n                        b += 1\\n\\n            # When \\'?\\' is in second place.\\n            elif m[1] == \\'?\\' and m[0] != \\'?\\':\\n\\n                # There are 10 possibilities.\\n                # 0,1,2,3,4,5,6,7,8 & 9. Hence, iterating till range of 10.\\n                for i in range(10):\\n\\n                    # Replacing \\'?\\' with str(i) concatenated with m[0].\\n                    # Checking if the new time is between 00 & 60.\\n                    if (\\'00\\' <= (m[0] + str(i)) < \\'60\\') is True:\\n\\n                        # Add 1 to b if above condition is True.\\n                        b += 1\\n\\n            # When \\'?\\' is in both places.\\n            else:\\n\\n                # b becomes 60 as there are 60 minutes.\\n                b = 60\\n\\n        # If b is still 0.\\n        if b == 0:\\n            return a\\n\\n        # If a is still 0.\\n        elif a == 0:\\n            return b\\n\\n        # When a & b are not 0.\\n        else:\\n\\n            # Multiply a with b & return remainder.\\n            return a * b\\n",
                "solutionTags": [
                    "Python"
                ],
                "code": "![Screenshot 2023-04-16 5.37.44 PM.png](https://assets.leetcode.com/users/images/a74a3a9c-b482-4ae8-a63e-67606e73e0f7_1681647576.570333.png)\\n\\n\\n# Code\\n```\\nclass Solution(object):\\n    def countTime(self, time):\\n        \"\"\"\\n        :type time: str\\n        :rtype: int\\n        \"\"\"\\n\\n        # My Code.\\n\\n        # If there is no \\'?\\' in time.\\n        if \\'?\\' not in time:\\n            return 1\\n\\n        # When \\'?\\' in time.\\n        # Splitting time at \\':\\' into hour & minutes.\\n        h, m = time.split(\\':\\')\\n\\n        # Counter for hour & minutes.\\n        a = b = 0\\n\\n        # When \\'?\\' in h.\\n        if \\'?\\' in h:\\n\\n            # When \\'?\\' is in first place.\\n            if h[0] == \\'?\\' and h[1] != \\'?\\':\\n\\n                # There are 3 possibilities.\\n                # 0, 1 & 2. Hence, iterating till range of 3.\\n                for i in range(3):\\n\\n                    # Replacing \\'?\\' with str(i) concatenated with h[1].\\n                    # Checking if the new time is between 00 & 24.\\n                    if (\\'00\\' <= (str(i) + h[1]) < \\'24\\') is True:\\n\\n                        # Add 1 to a if above condition is True.\\n                        a += 1\\n\\n            # When \\'?\\' is in second place.\\n            elif h[1] == \\'?\\' and h[0] != \\'?\\':\\n\\n                # There are 10 possibilities.\\n                # 0,1,2,3,4,5,6,7,8 & 9. Hence, iterating till range of 10.\\n                for i in range(10):\\n\\n                    # Replacing \\'?\\' with str(i) concatenated with h[0].\\n                    # Checking if the new time is between 00 & 24.\\n                    if (\\'00\\' <= (h[0] + str(i)) < \\'24\\') is True:\\n\\n                        # Add 1 to a if above condition is True.\\n                        a += 1\\n\\n            # When \\'?\\' is in both places.\\n            else:\\n\\n                # a becomes 24 as there are 24 hours.\\n                a = 24\\n\\n        # When \\'?\\' in m.\\n        if \\'?\\' in m:\\n\\n            # When \\'?\\' is in first place.\\n            if m[0] == \\'?\\' and m[1] != \\'?\\':\\n\\n                # There are 10 possibilities.\\n                # 0,1,2,3,4,5,6,7,8 & 9. Hence, iterating till range of 10.\\n                for i in range(10):\\n\\n                    # Replacing \\'?\\' with str(i) concatenated with m[1].\\n                    # Checking if the new time is between 00 & 60.\\n                    if (\\'00\\' <= (str(i) + m[1]) < \\'60\\') is True:\\n\\n                        # Add 1 to b if above condition is True.\\n                        b += 1\\n\\n            # When \\'?\\' is in second place.\\n            elif m[1] == \\'?\\' and m[0] != \\'?\\':\\n\\n                # There are 10 possibilities.\\n                # 0,1,2,3,4,5,6,7,8 & 9. Hence, iterating till range of 10.\\n                for i in range(10):\\n\\n                    # Replacing \\'?\\' with str(i) concatenated with m[0].\\n                    # Checking if the new time is between 00 & 60.\\n                    if (\\'00\\' <= (m[0] + str(i)) < \\'60\\') is True:\\n\\n                        # Add 1 to b if above condition is True.\\n                        b += 1\\n\\n            # When \\'?\\' is in both places.\\n            else:\\n\\n                # b becomes 60 as there are 60 minutes.\\n                b = 60\\n\\n        # If b is still 0.\\n        if b == 0:\\n            return a\\n\\n        # If a is still 0.\\n        elif a == 0:\\n            return b\\n\\n        # When a & b are not 0.\\n        else:\\n\\n            # Multiply a with b & return remainder.\\n            return a * b\\n",
                "codeTag": "Java"
            },
            {
                "id": 3419736,
                "title": "easy-solution-using-substring-in-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nDivide the string in two parts for hour and min.\\nif time is ??:59\\nthen for time[0]=\\'0\\'-> time[1] :10 ways //\\'1\\': 10 ways//\\'2\\': 4 ways \\nand likewise find for all cases\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        string hrs=time.substr(0,2);\\n        string min=time.substr(3);\\n        int hh=1,mm=1;\\n        if(hrs==\"??\")\\n            hh=24;\\n        else if(hrs[0]==\\'?\\'){\\n            if(hrs[1]<=\\'3\\')\\n                hh=3;\\n            else\\n                hh=2;\\n        }\\n        else if(hrs[1]==\\'?\\') {\\n            if(hrs[0]==\\'2\\')\\n                hh=4;\\n            else\\n                hh=10;\\n        }\\n       \\n        // Minutes\\n        if(min==\"??\") \\n            mm=60;\\n        else if(min[0]==\\'?\\')\\n            mm=6;\\n        else if(min[1]==\\'?\\') \\n            mm=10;\\n         \\n        return hh*mm;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        string hrs=time.substr(0,2);\\n        string min=time.substr(3);\\n        int hh=1,mm=1;\\n        if(hrs==\"??\")\\n            hh=24;\\n        else if(hrs[0]==\\'?\\'){\\n            if(hrs[1]<=\\'3\\')\\n                hh=3;\\n            else\\n                hh=2;\\n        }\\n        else if(hrs[1]==\\'?\\') {\\n            if(hrs[0]==\\'2\\')\\n                hh=4;\\n            else\\n                hh=10;\\n        }\\n       \\n        // Minutes\\n        if(min==\"??\") \\n            mm=60;\\n        else if(min[0]==\\'?\\')\\n            mm=6;\\n        else if(min[1]==\\'?\\') \\n            mm=10;\\n         \\n        return hh*mm;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3418467,
                "title": "javascript-solution-0-1-for-space-and-time-complexity",
                "content": "# Intuition\\nThis code takes in a string time in the format \"hh:mm\", where the digits represented by the \"?\" symbol are unknown, and calculates the number of valid clock times that can be created by replacing every \"?\" with a digit from 0 to 9.\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nFor example, if both digits of hour are unknown, ans is multiplied by 24, since there are 24 possible values for the hours in a day. If the first digit of hour is unknown and the second digit is less than or equal to 3, ans is multiplied by 3 since there are 3 valid options for the first digit of the hour (0, 1, or 2) in this case.\\n\\n# Complexity\\n- Time complexity: 0(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: 0(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {string} time\\n * @return {number}\\n */\\nvar countTime = function(time) {\\n    let [hour, min] = time.split(\":\");\\n    let ans = 1;\\n\\n    if(hour[0] == \\'?\\'&&hour[1] == \\'?\\') ans*=24;\\n    else if(parseInt(hour[1]) <=3 &&hour[0]==\\'?\\') ans*=3;\\n    else if(hour[0] ==\\'2\\' &&hour[1]==\\'?\\') ans*=4;\\n    else if(hour[1]==\\'?\\'&& hour[0]==\\'0\\') ans*=10;\\n    else if(hour[0]==\\'?\\'&& hour[1]==\\'0\\') ans*=2;\\n    else if (hour[0] == \\'?\\') ans*=2;\\n    else if (hour[1] == \\'?\\') ans*=10;\\n\\n    if(min[0] == \\'?\\'&&min[1] == \\'?\\') ans*=60;\\n    else if(min[1]==\\'?\\'&& min[0]==\\'0\\') ans*=10;\\n    else if(min[0]==\\'?\\'&& min[1]==\\'0\\') ans*=6;\\n    else if (min[0] == \\'?\\') ans*=6;\\n    else if (min[1] == \\'?\\') ans*=10;\\n    return ans;\\n}\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {string} time\\n * @return {number}\\n */\\nvar countTime = function(time) {\\n    let [hour, min] = time.split(\":\");\\n    let ans = 1;\\n\\n    if(hour[0] == \\'?\\'&&hour[1] == \\'?\\') ans*=24;\\n    else if(parseInt(hour[1]) <=3 &&hour[0]==\\'?\\') ans*=3;\\n    else if(hour[0] ==\\'2\\' &&hour[1]==\\'?\\') ans*=4;\\n    else if(hour[1]==\\'?\\'&& hour[0]==\\'0\\') ans*=10;\\n    else if(hour[0]==\\'?\\'&& hour[1]==\\'0\\') ans*=2;\\n    else if (hour[0] == \\'?\\') ans*=2;\\n    else if (hour[1] == \\'?\\') ans*=10;\\n\\n    if(min[0] == \\'?\\'&&min[1] == \\'?\\') ans*=60;\\n    else if(min[1]==\\'?\\'&& min[0]==\\'0\\') ans*=10;\\n    else if(min[0]==\\'?\\'&& min[1]==\\'0\\') ans*=6;\\n    else if (min[0] == \\'?\\') ans*=6;\\n    else if (min[1] == \\'?\\') ans*=10;\\n    return ans;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3414032,
                "title": "c-simple-readable-solution-with-minimal-if-else",
                "content": "\\n# Approach\\nThere is no magical trick that I am aware of for this.  Simple If/Else statements, checking for existence of contraints such as the impossibility of having 25:00 whereas 15:00 is possible.\\n\\n\\n# Code\\n```\\npublic class Solution {\\n    public int CountTime(string time)\\n    {\\n        int options = 1;\\n\\n        // Determine which digits have wildcards\\n        bool isHourFirstDigitAny = time[0] == \\'?\\';\\n        bool isHourSecondDigitAny = time[1] == \\'?\\';\\n        bool isMinuteFirstDigitAny = time[3] == \\'?\\';\\n        bool isMinuteSecondDigitAny = time[4] == \\'?\\';\\n\\n        if (isHourFirstDigitAny && isHourSecondDigitAny)\\n            options *= 24;\\n        else if (isHourFirstDigitAny) \\n            // For \"?4:00\", cannot have \"24:00\", but can have 04:00 & 14:00\\n            options *= (time[1]  > \\'3\\') ? 2 : 3; \\n        else if (isHourSecondDigitAny) \\n            // For \"2?:00\", cannot have 25:00 but can have 20:00, 21:00, 22:00, 23:00\\n            options *= (time[0] == \\'2\\') ? 4 : 10;\\n \\n\\n        if(isMinuteFirstDigitAny && isMinuteSecondDigitAny)\\n            options *= 60;\\n        else if(isMinuteFirstDigitAny)\\n            options *= 6;\\n        else if (isMinuteSecondDigitAny)\\n            options *= 10;\\n\\n        return options;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public int CountTime(string time)\\n    {\\n        int options = 1;\\n\\n        // Determine which digits have wildcards\\n        bool isHourFirstDigitAny = time[0] == \\'?\\';\\n        bool isHourSecondDigitAny = time[1] == \\'?\\';\\n        bool isMinuteFirstDigitAny = time[3] == \\'?\\';\\n        bool isMinuteSecondDigitAny = time[4] == \\'?\\';\\n\\n        if (isHourFirstDigitAny && isHourSecondDigitAny)\\n            options *= 24;\\n        else if (isHourFirstDigitAny) \\n            // For \"?4:00\", cannot have \"24:00\", but can have 04:00 & 14:00\\n            options *= (time[1]  > \\'3\\') ? 2 : 3; \\n        else if (isHourSecondDigitAny) \\n            // For \"2?:00\", cannot have 25:00 but can have 20:00, 21:00, 22:00, 23:00\\n            options *= (time[0] == \\'2\\') ? 4 : 10;\\n \\n\\n        if(isMinuteFirstDigitAny && isMinuteSecondDigitAny)\\n            options *= 60;\\n        else if(isMinuteFirstDigitAny)\\n            options *= 6;\\n        else if (isMinuteSecondDigitAny)\\n            options *= 10;\\n\\n        return options;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3383276,
                "title": "simple-java-solution-100-beats",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int countTime(String time) {\\n        int hh =1;\\n        int mm =1;\\n        \\n        if(time.charAt(0) == \\'?\\' && time.charAt(1) != \\'?\\'){\\n            if(time.charAt(1) <= \\'3\\'){\\n                hh *=3;\\n            }\\n            else{\\n                hh *=2;\\n            }\\n        }\\n        else if(time.charAt(0) != \\'?\\' && time.charAt(1) == \\'?\\'){\\n            if(time.charAt(0) <= \\'1\\'){\\n                hh *=10;\\n            }\\n            else{\\n                hh *=4;\\n            }\\n        }\\n        else if(time.charAt(0) == \\'?\\' && time.charAt(1) == \\'?\\'){\\n            hh *= 24;\\n        }\\n        if(time.charAt(3) == \\'?\\' ){   \\n            mm *= 6;\\n        }\\n        if(time.charAt(4) == \\'?\\' ){\\n            mm *= 10;\\n        }\\n        \\n        // if(time.charAt(3) == \\'?\\' && time.charAt(4) == \\'?\\'){\\n        //     mm *= 60;\\n        // }\\n        return hh*mm;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        int hh =1;\\n        int mm =1;\\n        \\n        if(time.charAt(0) == \\'?\\' && time.charAt(1) != \\'?\\'){\\n            if(time.charAt(1) <= \\'3\\'){\\n                hh *=3;\\n            }\\n            else{\\n                hh *=2;\\n            }\\n        }\\n        else if(time.charAt(0) != \\'?\\' && time.charAt(1) == \\'?\\'){\\n            if(time.charAt(0) <= \\'1\\'){\\n                hh *=10;\\n            }\\n            else{\\n                hh *=4;\\n            }\\n        }\\n        else if(time.charAt(0) == \\'?\\' && time.charAt(1) == \\'?\\'){\\n            hh *= 24;\\n        }\\n        if(time.charAt(3) == \\'?\\' ){   \\n            mm *= 6;\\n        }\\n        if(time.charAt(4) == \\'?\\' ){\\n            mm *= 10;\\n        }\\n        \\n        // if(time.charAt(3) == \\'?\\' && time.charAt(4) == \\'?\\'){\\n        //     mm *= 60;\\n        // }\\n        return hh*mm;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3382936,
                "title": "number-of-valid-clock-times-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution(object):\\n    def countTime(self, time):\\n        count,count1=0,0       \\n        if time[:2].count(\"?\")==0: count=1\\n        if time[3:].count(\"?\")==0: count1=1\\n        if time[:2].count(\"?\")==2: count=24\\n        if time[3:].count(\"?\")==2: count1=60\\n        for i in range(10):\\n            if time[:2].count(\"?\")==1:\\n                 if int(str(time[:2]).replace(\"?\",str(i))) < 24 : count+=1\\n            if time[3:].count(\"?\")==1:\\n                if int(str(time[3:]).replace(\"?\",str(i)))<60 : count1+=1 \\n        res=count*count1\\n        return res\\n\\n        \"\"\"\\n        :type time: str\\n        :rtype: int\\n        \"\"\"\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def countTime(self, time):\\n        count,count1=0,0       \\n        if time[:2].count(\"?\")==0: count=1\\n        if time[3:].count(\"?\")==0: count1=1\\n        if time[:2].count(\"?\")==2: count=24\\n        if time[3:].count(\"?\")==2: count1=60\\n        for i in range(10):\\n            if time[:2].count(\"?\")==1:\\n                 if int(str(time[:2]).replace(\"?\",str(i))) < 24 : count+=1\\n            if time[3:].count(\"?\")==1:\\n                if int(str(time[3:]).replace(\"?\",str(i)))<60 : count1+=1 \\n        res=count*count1\\n        return res\\n\\n        \"\"\"\\n        :type time: str\\n        :rtype: int\\n        \"\"\"\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3376447,
                "title": "number-of-valid-clock-times",
                "content": "# Code\\n```ts\\nfunction countTime([h1, h2, , m1, m2]: string): number {\\n  m1 = m1 === \\'?\\' ? \\'6\\' : \\'1\\'\\n  m2 = m2 === \\'?\\' ? \\'10\\' : \\'1\\'\\n  \\n  if (h2 === \\'?\\') {\\n    if (h1 === \\'?\\') {\\n      return 24 * +m1 * +m2;\\n    } else {\\n      if (+h1 === 2) {\\n        return 4 * +m1 * +m2;\\n      } else {\\n       return 10 * +m1 * +m2;\\n      }\\n    }\\n  } else if (h1 === \\'?\\') {\\n    if (+h2 > 3) {\\n      return 2 * +m1 * +m2;\\n    } else {\\n      return 3 * +m1 * +m2;\\n    }\\n  }\\n\\n  return +m1 * +m2;\\n};\\n```",
                "solutionTags": [
                    "TypeScript"
                ],
                "code": "```ts\\nfunction countTime([h1, h2, , m1, m2]: string): number {\\n  m1 = m1 === \\'?\\' ? \\'6\\' : \\'1\\'\\n  m2 = m2 === \\'?\\' ? \\'10\\' : \\'1\\'\\n  \\n  if (h2 === \\'?\\') {\\n    if (h1 === \\'?\\') {\\n      return 24 * +m1 * +m2;\\n    } else {\\n      if (+h1 === 2) {\\n        return 4 * +m1 * +m2;\\n      } else {\\n       return 10 * +m1 * +m2;\\n      }\\n    }\\n  } else if (h1 === \\'?\\') {\\n    if (+h2 > 3) {\\n      return 2 * +m1 * +m2;\\n    } else {\\n      return 3 * +m1 * +m2;\\n    }\\n  }\\n\\n  return +m1 * +m2;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3375219,
                "title": "python-solution",
                "content": "\\n```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n\\n        q = [] \\n        for i in range(len(time)):\\n            if time[i] == \\'?\\':\\n                q.append(i) \\n\\n        a, b, c, d = 0,0,0,0\\n        for n in q: \\n            if n == 0 : \\n                if ord(\\'0\\')<=ord(time[1])<=ord(\\'3\\'):\\n                    a = 3\\n                elif ord(\\'4\\')<=ord(time[1])<=ord(\\'9\\'):\\n                    a = 2\\n                elif time[1] == \\'?\\':\\n                    a, b = 4, 6 \\n            if n==1: \\n                if time[0] == \\'?\\': continue \\n                elif ord(\\'0\\')<=ord(time[0])<=ord(\\'1\\'):\\n                    b = 10\\n                else:\\n                    b = 4 \\n            if n==3: \\n                c = 6\\n            if n==4:\\n                d=10 \\n        ans = 1\\n\\n        if a!=0:\\n            ans *= a \\n        if b!=0:\\n            ans *= b \\n        if c!=0:\\n            ans *= c \\n        if d!=0:\\n            ans *= d \\n\\n        return ans \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n\\n        q = [] \\n        for i in range(len(time)):\\n            if time[i] == \\'?\\':\\n                q.append(i) \\n\\n        a, b, c, d = 0,0,0,0\\n        for n in q: \\n            if n == 0 : \\n                if ord(\\'0\\')<=ord(time[1])<=ord(\\'3\\'):\\n                    a = 3\\n                elif ord(\\'4\\')<=ord(time[1])<=ord(\\'9\\'):\\n                    a = 2\\n                elif time[1] == \\'?\\':\\n                    a, b = 4, 6 \\n            if n==1: \\n                if time[0] == \\'?\\': continue \\n                elif ord(\\'0\\')<=ord(time[0])<=ord(\\'1\\'):\\n                    b = 10\\n                else:\\n                    b = 4 \\n            if n==3: \\n                c = 6\\n            if n==4:\\n                d=10 \\n        ans = 1\\n\\n        if a!=0:\\n            ans *= a \\n        if b!=0:\\n            ans *= b \\n        if c!=0:\\n            ans *= c \\n        if d!=0:\\n            ans *= d \\n\\n        return ans \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3370460,
                "title": "brute-force-100-fast-clean-code-python",
                "content": "# Code\\n```\\nclass Solution:\\n    @staticmethod\\n    def isValid(time : List[str]) -> bool:\\n\\n        hr = int(time[0]) * 10 + int(time[1])\\n        mn = int(time[3]) * 10 + int(time[4])\\n\\n        return hr >= 0 and hr <= 23 and mn >= 0 and mn <= 59\\n\\n    def countTime(self, time: str) -> int:\\n        \\n        time = [ch for ch in time]\\n        unknown_pos = []\\n        ans = 0\\n        \\n        for i in range(len(time)):\\n            if time[i] == \\'?\\':\\n                unknown_pos.append(i)\\n        \\n        if len(unknown_pos) == 0:\\n            ans += Solution.isValid(time)\\n\\n        elif len(unknown_pos) == 1:\\n            for i in range(10):\\n                time[unknown_pos[0]] = str(i)\\n                ans +=  Solution.isValid(time)\\n\\n        elif len(unknown_pos) == 2:\\n            for i in range(10):\\n                time[unknown_pos[0]] = str(i)\\n                for j in range(10):\\n                    time[unknown_pos[1]] = str(j)\\n                    ans +=  Solution.isValid(time)\\n\\n        elif len(unknown_pos) == 3:\\n            for i in range(10):\\n                time[unknown_pos[0]] = str(i)\\n                for j in range(10):\\n                    time[unknown_pos[1]] = str(j)\\n                    for k in range(10):\\n                        time[unknown_pos[2]] = str(k)\\n                        ans += Solution.isValid(time)\\n\\n        else:\\n            for i in range(10):\\n                time[unknown_pos[0]] = str(i)\\n                for j in range(10):\\n                    time[unknown_pos[1]] = str(j)\\n                    for k in range(10):\\n                        time[unknown_pos[2]] = str(k)\\n                        for l in range(10):\\n                            time[unknown_pos[3]] = str(l) \\n                            ans +=  Solution.isValid(time)\\n        return ans\\n        \\n\\n                    \\n\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    @staticmethod\\n    def isValid(time : List[str]) -> bool:\\n\\n        hr = int(time[0]) * 10 + int(time[1])\\n        mn = int(time[3]) * 10 + int(time[4])\\n\\n        return hr >= 0 and hr <= 23 and mn >= 0 and mn <= 59\\n\\n    def countTime(self, time: str) -> int:\\n        \\n        time = [ch for ch in time]\\n        unknown_pos = []\\n        ans = 0\\n        \\n        for i in range(len(time)):\\n            if time[i] == \\'?\\':\\n                unknown_pos.append(i)\\n        \\n        if len(unknown_pos) == 0:\\n            ans += Solution.isValid(time)\\n\\n        elif len(unknown_pos) == 1:\\n            for i in range(10):\\n                time[unknown_pos[0]] = str(i)\\n                ans +=  Solution.isValid(time)\\n\\n        elif len(unknown_pos) == 2:\\n            for i in range(10):\\n                time[unknown_pos[0]] = str(i)\\n                for j in range(10):\\n                    time[unknown_pos[1]] = str(j)\\n                    ans +=  Solution.isValid(time)\\n\\n        elif len(unknown_pos) == 3:\\n            for i in range(10):\\n                time[unknown_pos[0]] = str(i)\\n                for j in range(10):\\n                    time[unknown_pos[1]] = str(j)\\n                    for k in range(10):\\n                        time[unknown_pos[2]] = str(k)\\n                        ans += Solution.isValid(time)\\n\\n        else:\\n            for i in range(10):\\n                time[unknown_pos[0]] = str(i)\\n                for j in range(10):\\n                    time[unknown_pos[1]] = str(j)\\n                    for k in range(10):\\n                        time[unknown_pos[2]] = str(k)\\n                        for l in range(10):\\n                            time[unknown_pos[3]] = str(l) \\n                            ans +=  Solution.isValid(time)\\n        return ans\\n        \\n\\n                    \\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3355584,
                "title": "simple-o-1-pattern-checks-are-enough-for-this-problem",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\nJust count all possible patterns for `hh` & `mm` sections.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n1. Calculate the number of possible patterns for `hh` section (= `n`).\\n2. Calculate the number of possible patterns for `mm` section (= `m`).\\n3. Return `n * m`\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n$$O(1)$$\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n$$O(1)$$\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        /*\\n         * For hh section;\\n         * Pattern1: ?N\\n         *    if N <= 3, the possible digits for ? = 0 ~ 2 (3 digits)\\n         *    otherwise, the possible digits for ? = 0 ~ 1 (2 digits) \\n         *\\n         * Pattern2: N?\\n         *    if N == 2, the possible digits for ? = 0 ~ 3 (4 digits)\\n         *    otherwise, the possible digits for ? = 0 ~ 9 (10 digits)\\n         *\\n         * Pattern3: ??\\n         *    the possible patterns for ?? = 00 ~ 23 (24 patterns)\\n         *\\n         * Pattern4: NN\\n         *    1 pattern is possible\\n         *\\n         * For mm section;\\n         * Pattern1: ?N\\n         *    the possible digits for ? = 0 ~ 5 (6 digits)\\n         * \\n         * Pattern2: N?\\n         *    the possible digits for ? = 0 ~ 9 (10 digits)\\n         *\\n         * Pattern3: ??\\n         *    the possible patterns for ?? = 00 ~ 59 (60 patterns)\\n         *\\n         * Pattern4: NN\\n         *    1 pattern is possible\\n         */\\n        std::string hh, mm;\\n        \\n        // Separate time into hh & mm\\n        std::size_t delimPos = time.find(\\':\\');\\n        hh = time.substr(0, delimPos);\\n        mm = time.substr(delimPos + 1);\\n\\n        int numOfPatternsHH = 1, numOfPatternsMM = 1;\\n        \\n        // Calculate the number of possible patterns for hh section\\n        if (hh[0] == \\'?\\' && hh[1] != \\'?\\') {\\n            if (hh[1] <= \\'3\\') numOfPatternsHH = 3;\\n            else numOfPatternsHH = 2;\\n        } else if (hh[0] != \\'?\\' && hh[1] == \\'?\\') {\\n            if (hh[0] == \\'2\\') numOfPatternsHH = 4;\\n            else numOfPatternsHH = 10;\\n        } else if (hh[0] == \\'?\\' && hh[1] == \\'?\\') {\\n            numOfPatternsHH = 24;\\n        }\\n\\n        // Calculate the number of possible patterns for mm section\\n        if (mm[0] == \\'?\\' && mm[1] != \\'?\\') {\\n            numOfPatternsMM = 6;\\n        } else if (mm[0] != \\'?\\' && mm[1] == \\'?\\') {\\n            numOfPatternsMM = 10;\\n        } else if (mm[0] == \\'?\\' && mm[1] == \\'?\\') {\\n            numOfPatternsMM = 60;\\n        }\\n\\n        return numOfPatternsHH * numOfPatternsMM;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        /*\\n         * For hh section;\\n         * Pattern1: ?N\\n         *    if N <= 3, the possible digits for ? = 0 ~ 2 (3 digits)\\n         *    otherwise, the possible digits for ? = 0 ~ 1 (2 digits) \\n         *\\n         * Pattern2: N?\\n         *    if N == 2, the possible digits for ? = 0 ~ 3 (4 digits)\\n         *    otherwise, the possible digits for ? = 0 ~ 9 (10 digits)\\n         *\\n         * Pattern3: ??\\n         *    the possible patterns for ?? = 00 ~ 23 (24 patterns)\\n         *\\n         * Pattern4: NN\\n         *    1 pattern is possible\\n         *\\n         * For mm section;\\n         * Pattern1: ?N\\n         *    the possible digits for ? = 0 ~ 5 (6 digits)\\n         * \\n         * Pattern2: N?\\n         *    the possible digits for ? = 0 ~ 9 (10 digits)\\n         *\\n         * Pattern3: ??\\n         *    the possible patterns for ?? = 00 ~ 59 (60 patterns)\\n         *\\n         * Pattern4: NN\\n         *    1 pattern is possible\\n         */\\n        std::string hh, mm;\\n        \\n        // Separate time into hh & mm\\n        std::size_t delimPos = time.find(\\':\\');\\n        hh = time.substr(0, delimPos);\\n        mm = time.substr(delimPos + 1);\\n\\n        int numOfPatternsHH = 1, numOfPatternsMM = 1;\\n        \\n        // Calculate the number of possible patterns for hh section\\n        if (hh[0] == \\'?\\' && hh[1] != \\'?\\') {\\n            if (hh[1] <= \\'3\\') numOfPatternsHH = 3;\\n            else numOfPatternsHH = 2;\\n        } else if (hh[0] != \\'?\\' && hh[1] == \\'?\\') {\\n            if (hh[0] == \\'2\\') numOfPatternsHH = 4;\\n            else numOfPatternsHH = 10;\\n        } else if (hh[0] == \\'?\\' && hh[1] == \\'?\\') {\\n            numOfPatternsHH = 24;\\n        }\\n\\n        // Calculate the number of possible patterns for mm section\\n        if (mm[0] == \\'?\\' && mm[1] != \\'?\\') {\\n            numOfPatternsMM = 6;\\n        } else if (mm[0] != \\'?\\' && mm[1] == \\'?\\') {\\n            numOfPatternsMM = 10;\\n        } else if (mm[0] == \\'?\\' && mm[1] == \\'?\\') {\\n            numOfPatternsMM = 60;\\n        }\\n\\n        return numOfPatternsHH * numOfPatternsMM;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3341381,
                "title": "c-solution-time-o-1-space-o-1-easy",
                "content": "# Intuition\\n- If `time[0]` is 2 then only {0,1,2,3} are possible at `time[1]`, otherwise all 10 digits possible.\\n- If `time[1]` is {0,1,2,3} then {0,1,2} are possible for `time[0]`, otherwise only 0 and 1 possible.\\n- For `time[3]` and `time[4]` possible values are 6 and 10 respectively irrespective of other values.\\n- Final answer is multiplication of all possible cases on 4 position.\\n\\n# Approach\\n- Check if `time[0] = ?` and handle all possible cases for `time[1]`.\\n- If `time[0] != ?`, then check for `time[1] = ?` and handle all possible cases for `time[0]`.\\n- If `time[3] = ?`, multiply cases with 6.\\n- If `time[4] = ?`, multiply cases with 10.\\n\\n# Complexity\\n- Time complexity: $$O(1)$$\\n\\n- Space complexity: $$O(1)$$\\n\\n# Code\\n```cpp\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int res = 1;\\n        \\n        if(time[0] == \\'?\\') {\\n            if(time[1] == \\'?\\') {\\n                res *= 24;\\n            } else if(0 <= time[1] && time[1] < \\'4\\') {\\n                res *= 3;\\n            } else {\\n                res *= 2;\\n            }\\n        } else if(time[1] == \\'?\\') {\\n            if(time[0] == \\'2\\') {\\n                res *= 4;\\n            } else {\\n                res *= 10;\\n            }\\n        }\\n\\n        if(time[3] == \\'?\\') {\\n            res *= 6;\\n        }\\n\\n        if(time[4] == \\'?\\') {\\n            res *= 10;\\n        }\\n\\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Enumeration"
                ],
                "code": "```cpp\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int res = 1;\\n        \\n        if(time[0] == \\'?\\') {\\n            if(time[1] == \\'?\\') {\\n                res *= 24;\\n            } else if(0 <= time[1] && time[1] < \\'4\\') {\\n                res *= 3;\\n            } else {\\n                res *= 2;\\n            }\\n        } else if(time[1] == \\'?\\') {\\n            if(time[0] == \\'2\\') {\\n                res *= 4;\\n            } else {\\n                res *= 10;\\n            }\\n        }\\n\\n        if(time[3] == \\'?\\') {\\n            res *= 6;\\n        }\\n\\n        if(time[4] == \\'?\\') {\\n            res *= 10;\\n        }\\n\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3308529,
                "title": "number-of-valid-clock-times-easiest-with-c-in-0ms-runtime",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int ans=1;\\n        if(time[0] == \\'?\\')\\n        {\\n            if((time[1] - \\'0\\') < 4)\\n                ans = ans*3;\\n            else\\n                ans = ans*2;\\n        }\\n        if(time[1] == \\'?\\')\\n        {\\n            if(time[0] == \\'?\\')\\n                ans = ans*12;\\n            else if(time[0] == \\'2\\')\\n                ans *= 4;\\n            else\\n                ans = ans*10;\\n        }\\n        if(time[3] == \\'?\\')\\n            ans = ans*6;\\n        if(time[4] == \\'?\\')\\n            ans = ans*10;\\n\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int ans=1;\\n        if(time[0] == \\'?\\')\\n        {\\n            if((time[1] - \\'0\\') < 4)\\n                ans = ans*3;\\n            else\\n                ans = ans*2;\\n        }\\n        if(time[1] == \\'?\\')\\n        {\\n            if(time[0] == \\'?\\')\\n                ans = ans*12;\\n            else if(time[0] == \\'2\\')\\n                ans *= 4;\\n            else\\n                ans = ans*10;\\n        }\\n        if(time[3] == \\'?\\')\\n            ans = ans*6;\\n        if(time[4] == \\'?\\')\\n            ans = ans*10;\\n\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3302361,
                "title": "python-o-n",
                "content": "```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        chars = [char for char in time]\\n        def d(index: int) -> int:\\n            if index == len(chars):\\n                hour, minute = int(\\'\\'.join(chars[0:2])), int(\\'\\'.join(chars[3:5]))\\n                return 1 if hour in range(24) and minute in range(60) else 0\\n            total = 0\\n            if chars[index] == \\'?\\':\\n                for i in range(0, 10):\\n                    chars[index] = str(i)\\n                    total += d(index + 1)\\n                    chars[index] = \\'?\\'\\n            else:\\n                return d(index + 1)\\n            return total\\n            \\n        return d(0)\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        chars = [char for char in time]\\n        def d(index: int) -> int:\\n            if index == len(chars):\\n                hour, minute = int(\\'\\'.join(chars[0:2])), int(\\'\\'.join(chars[3:5]))\\n                return 1 if hour in range(24) and minute in range(60) else 0\\n            total = 0\\n            if chars[index] == \\'?\\':\\n                for i in range(0, 10):\\n                    chars[index] = str(i)\\n                    total += d(index + 1)\\n                    chars[index] = \\'?\\'\\n            else:\\n                return d(index + 1)\\n            return total\\n            \\n        return d(0)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3299685,
                "title": "easy-python-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        ans = 1\\n        if time[3] == \"?\":\\n            ans *= 6\\n        if time[4] == \"?\":\\n            ans *= 10\\n        if time[0] == \"?\" and time[1] != \"?\":\\n            if time[1] > \"3\":\\n                ans *= 2\\n            else:\\n                ans *= 3\\n        elif time[0] == \"?\" and time[1] == \"?\":\\n            ans *= 24\\n            return ans\\n        elif time[0] != \"?\" and time[1] == \"?\":\\n            if time[0] == \"2\":\\n                ans *= 4\\n            else:\\n                ans *= 10\\n        return ans\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        ans = 1\\n        if time[3] == \"?\":\\n            ans *= 6\\n        if time[4] == \"?\":\\n            ans *= 10\\n        if time[0] == \"?\" and time[1] != \"?\":\\n            if time[1] > \"3\":\\n                ans *= 2\\n            else:\\n                ans *= 3\\n        elif time[0] == \"?\" and time[1] == \"?\":\\n            ans *= 24\\n            return ans\\n        elif time[0] != \"?\" and time[1] == \"?\":\\n            if time[0] == \"2\":\\n                ans *= 4\\n            else:\\n                ans *= 10\\n        return ans\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3281678,
                "title": "clean-solution-with-comments-in-c",
                "content": "\\n# Code\\n```\\nclass Solution {\\n    // X is a fixed number\\n    // ? is a variable numeber\\npublic:\\n    int possibleMinPerms(const string& time) {\\n        // XX:??, ?? = 0-59\\n        if (time[3] == \\'?\\' && time[4] == \\'?\\') {\\n            return 60;\\n        }\\n\\n        // XX:?X, ? = 0-5\\n        if (time[3] == \\'?\\') {\\n            return 6;\\n        }\\n\\n        // XX:X?, ? = 0-9\\n        if (time[4] == \\'?\\') {\\n            return 10;\\n        }\\n\\n        // XX:XX\\n        return 1;\\n    }\\n\\n    int possibleHoursPerms (const string& time) {\\n        // ??:XX, ?? = 0-23\\n        if (time[0] == \\'?\\' && time[1] == \\'?\\'){\\n            return 24;\\n        }\\n\\n        if (time[0] == \\'?\\') {\\n            int hh = time[1] - 48;\\n            // ?Y:XX, Y = 0-3, ? = 0-2\\n            if (hh < 4) {\\n                return 3;\\n            } \\n            // ?Y:XX, Y = 4-9, ? = 0-1\\n            return 2;\\n        }\\n\\n        if (time[1] == \\'?\\'){\\n            int h = time[0] - 48;\\n            // Y?:XX, Y = 0-1, ? = 0-9\\n            if (h < 2) {\\n                return 10;\\n            }\\n             // Y?:XX, Y = 2, ? = 0-3\\n            return 4;\\n        }\\n\\n        // XX:XX\\n        return 1;\\n    }\\n    int countTime(string time) {\\n       return possibleMinPerms(time) * possibleHoursPerms(time);\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\n    // X is a fixed number\\n    // ? is a variable numeber\\npublic:\\n    int possibleMinPerms(const string& time) {\\n        // XX:??, ?? = 0-59\\n        if (time[3] == \\'?\\' && time[4] == \\'?\\') {\\n            return 60;\\n        }\\n\\n        // XX:?X, ? = 0-5\\n        if (time[3] == \\'?\\') {\\n            return 6;\\n        }\\n\\n        // XX:X?, ? = 0-9\\n        if (time[4] == \\'?\\') {\\n            return 10;\\n        }\\n\\n        // XX:XX\\n        return 1;\\n    }\\n\\n    int possibleHoursPerms (const string& time) {\\n        // ??:XX, ?? = 0-23\\n        if (time[0] == \\'?\\' && time[1] == \\'?\\'){\\n            return 24;\\n        }\\n\\n        if (time[0] == \\'?\\') {\\n            int hh = time[1] - 48;\\n            // ?Y:XX, Y = 0-3, ? = 0-2\\n            if (hh < 4) {\\n                return 3;\\n            } \\n            // ?Y:XX, Y = 4-9, ? = 0-1\\n            return 2;\\n        }\\n\\n        if (time[1] == \\'?\\'){\\n            int h = time[0] - 48;\\n            // Y?:XX, Y = 0-1, ? = 0-9\\n            if (h < 2) {\\n                return 10;\\n            }\\n             // Y?:XX, Y = 2, ? = 0-3\\n            return 4;\\n        }\\n\\n        // XX:XX\\n        return 1;\\n    }\\n    int countTime(string time) {\\n       return possibleMinPerms(time) * possibleHoursPerms(time);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3274823,
                "title": "c-easy-fast",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n   int recur(int i, string &time, int n){\\n        \\n        if(i >= n){\\n            int a = 0, b = 0;\\n            \\n            int f = time[0] - \\'0\\';\\n            int ff = time[1] - \\'0\\';\\n            int g = time[3] - \\'0\\';\\n            int gg = time[4] - \\'0\\';\\n        \\n            int d = f*10 + ff;\\n            int e = g*10 + gg;\\n            \\n            return (d >= 0 && d<=23 && e>=0 && e<=59);\\n        }\\n        \\n        if(time[i] == \\'?\\'){\\n            int cnt = 0;\\n            for(int j = 0; j<10; j++){\\n                time[i] = char(\\'0\\' + j);\\n                cnt += recur(i + 1, time, n);\\n                time[i] = \\'?\\';\\n            }\\n            return cnt;\\n        }\\n        \\n        return recur(i + 1, time, n);\\n    }\\n    \\n    int countTime(string time) {\\n        int n = time.length();\\n        return recur(0, time, n);\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n   int recur(int i, string &time, int n){\\n        \\n        if(i >= n){\\n            int a = 0, b = 0;\\n            \\n            int f = time[0] - \\'0\\';\\n            int ff = time[1] - \\'0\\';\\n            int g = time[3] - \\'0\\';\\n            int gg = time[4] - \\'0\\';\\n        \\n            int d = f*10 + ff;\\n            int e = g*10 + gg;\\n            \\n            return (d >= 0 && d<=23 && e>=0 && e<=59);\\n        }\\n        \\n        if(time[i] == \\'?\\'){\\n            int cnt = 0;\\n            for(int j = 0; j<10; j++){\\n                time[i] = char(\\'0\\' + j);\\n                cnt += recur(i + 1, time, n);\\n                time[i] = \\'?\\';\\n            }\\n            return cnt;\\n        }\\n        \\n        return recur(i + 1, time, n);\\n    }\\n    \\n    int countTime(string time) {\\n        int n = time.length();\\n        return recur(0, time, n);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3272095,
                "title": "counttime",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n\\n/**\\n * @param {string} time\\n * @return {number}\\n */\\nvar countTime = function (time) {\\n    let res = []\\n    let x = 1;\\n  \\n    for (let i = 0; i < time.length; i++) {\\n        if (time[i] == \"?\") { res.push(i) }\\n    }\\n\\n    res.map((item) => {   \\n        if (item == 0) {\\n            if (res[item + 1] == 1) x = 24\\n            if (+time[1] < 4) x = 3\\n            else if (+time[1] >= 4) x = 2\\n        }\\n       \\n        else if (item == 1) {\\n            if (!res.includes(0)) {\\n                if (time[0] == 0 || time[0] == 1) x *= 10\\n                else if (time[0] == 2) x *= 4\\n            }\\n        }\\n\\n        else if (item == 3) x *= 6\\n        else if (item == 4) x *= 10\\n    })\\n\\n    return x\\n};\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n\\n/**\\n * @param {string} time\\n * @return {number}\\n */\\nvar countTime = function (time) {\\n    let res = []\\n    let x = 1;\\n  \\n    for (let i = 0; i < time.length; i++) {\\n        if (time[i] == \"?\") { res.push(i) }\\n    }\\n\\n    res.map((item) => {   \\n        if (item == 0) {\\n            if (res[item + 1] == 1) x = 24\\n            if (+time[1] < 4) x = 3\\n            else if (+time[1] >= 4) x = 2\\n        }\\n       \\n        else if (item == 1) {\\n            if (!res.includes(0)) {\\n                if (time[0] == 0 || time[0] == 1) x *= 10\\n                else if (time[0] == 2) x *= 4\\n            }\\n        }\\n\\n        else if (item == 3) x *= 6\\n        else if (item == 4) x *= 10\\n    })\\n\\n    return x\\n};\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3259448,
                "title": "simple-python-solution-with-if-else-statements",
                "content": "# Intuition\\nUse simple if else statements. because we know time format limitations.\\n\\n# Complexity\\n- Time complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        if \\'?\\' not in time:\\n            return 1\\n        if time[0:2] == \\'??\\':\\n            hr = 24\\n        elif time[0] == \\'?\\' and time[1] !=\\'?\\':\\n            hr = 3 if int(time[1]) < 4 else 2\\n        elif time[0] != \\'?\\' and time[1] ==\\'?\\':\\n            hr = 4 if int(time[0]) == 2 else 10\\n        else:\\n            hr = 1\\n        if time[3:] == \\'??\\':\\n            minut = 60\\n        elif time[3] == \\'?\\' and time[4] !=\\'?\\':\\n            minut = 6\\n        elif time[3] != \\'?\\' and time[4] ==\\'?\\':\\n            minut = 10\\n        else:\\n            minut = 1\\n        return hr*minut\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        if \\'?\\' not in time:\\n            return 1\\n        if time[0:2] == \\'??\\':\\n            hr = 24\\n        elif time[0] == \\'?\\' and time[1] !=\\'?\\':\\n            hr = 3 if int(time[1]) < 4 else 2\\n        elif time[0] != \\'?\\' and time[1] ==\\'?\\':\\n            hr = 4 if int(time[0]) == 2 else 10\\n        else:\\n            hr = 1\\n        if time[3:] == \\'??\\':\\n            minut = 60\\n        elif time[3] == \\'?\\' and time[4] !=\\'?\\':\\n            minut = 6\\n        elif time[3] != \\'?\\' and time[4] ==\\'?\\':\\n            minut = 10\\n        else:\\n            minut = 1\\n        return hr*minut\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3257413,
                "title": "javascript-map-solution",
                "content": "I fail to see the point of these types of challenges, they\\'re not particularly algorithmic and are generally solved most optimally by hard-coding a solution...\\n\\n# Intuition\\nMinute individual values do not affect the other minute value (i.e. 0-6 does not affect 0-9 on 0-59 minutes), so we calculate how the corresponding values for the hours depending on the value of the character next to it. Pribably a nicer way to check if both are question marks, but not sure there\\'s a more time-efficient method.\\n\\n# Code\\n```\\nvar countTime = function(time) {\\n    const map = {\\n        0 : { true : 3, false : 2 },\\n        1 : { true : 10, false : 4 },\\n        3 : 6,\\n        4 : 10\\n    };\\n\\n    let sum = 1;\\n    let c;\\n    for (let i = 0; i < 6; ++i) {\\n        if (time.charAt(i) == \\'?\\') {\\n            switch (i) {\\n                case 0:\\n                    c = time.charAt(i + 1);\\n                    sum *= c == \\'?\\' ? 1 : map[0][c <= 3];\\n                    break;\\n                case 1:\\n                    c = time.charAt(i - 1);\\n                    sum *= c == \\'?\\' ? 24 : map[1][c < 2];\\n                    break;\\n                default:\\n                    sum *= map[i];\\n            }\\n        }\\n    }\\n    return sum;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar countTime = function(time) {\\n    const map = {\\n        0 : { true : 3, false : 2 },\\n        1 : { true : 10, false : 4 },\\n        3 : 6,\\n        4 : 10\\n    };\\n\\n    let sum = 1;\\n    let c;\\n    for (let i = 0; i < 6; ++i) {\\n        if (time.charAt(i) == \\'?\\') {\\n            switch (i) {\\n                case 0:\\n                    c = time.charAt(i + 1);\\n                    sum *= c == \\'?\\' ? 1 : map[0][c <= 3];\\n                    break;\\n                case 1:\\n                    c = time.charAt(i - 1);\\n                    sum *= c == \\'?\\' ? 24 : map[1][c < 2];\\n                    break;\\n                default:\\n                    sum *= map[i];\\n            }\\n        }\\n    }\\n    return sum;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3256865,
                "title": "javascript-solution-48-59-ms",
                "content": "\\n# Code\\n```\\n/**\\n * @param {string} time\\n * @return {number}\\n */\\nvar countTime = function(time) {\\n\\n    let output;\\n\\n    //\\u0130f the all of the time is completely unknown\\n    if(time == \"??:??\") return 1440;\\n\\n    //\\u0130f just the hour is completely unknown => \"??:..\"\\n    if(time.includes(\"??:\")){\\n\\n        output = 24;\\n\\n        output *= time[3] == \\'?\\' ? 6 : 1;\\n        output *= time[4] == \\'?\\' ? 10 : 1;\\n        return output;\\n    };\\n\\n    //\\u0130f just the minute is completely unknown => \"..:??\"\\n    if(time.includes(\":??\")){\\n        output = 60;\\n        output *= time[0] == \\'?\\' ? (\"0123\".includes(time[1]) ? 3 : 2) : 1;\\n        output *= time[1] == \\'?\\' ? (time[0] == 2 ? 4 : 10) : 1;\\n        return output;\\n    };\\n\\n    //\\u0130f neither hour nor minute is completely unknown\\n    output = 1;\\n    output *= time[0] == \\'?\\' ? (\"0123\".includes(time[1]) ? 3 : 2) : 1;\\n    output *= time[1] == \\'?\\' ? (time[0] == 2 ? 4 : 10) : 1;\\n    output *= time[3] == \\'?\\' ? 6 : 1;\\n    output *= time[4] == \\'?\\' ? 10 : 1;\\n    return output;\\n};\\n```",
                "solutionTags": [
                    "JavaScript",
                    "String",
                    "String Matching"
                ],
                "code": "```\\n/**\\n * @param {string} time\\n * @return {number}\\n */\\nvar countTime = function(time) {\\n\\n    let output;\\n\\n    //\\u0130f the all of the time is completely unknown\\n    if(time == \"??:??\") return 1440;\\n\\n    //\\u0130f just the hour is completely unknown => \"??:..\"\\n    if(time.includes(\"??:\")){\\n\\n        output = 24;\\n\\n        output *= time[3] == \\'?\\' ? 6 : 1;\\n        output *= time[4] == \\'?\\' ? 10 : 1;\\n        return output;\\n    };\\n\\n    //\\u0130f just the minute is completely unknown => \"..:??\"\\n    if(time.includes(\":??\")){\\n        output = 60;\\n        output *= time[0] == \\'?\\' ? (\"0123\".includes(time[1]) ? 3 : 2) : 1;\\n        output *= time[1] == \\'?\\' ? (time[0] == 2 ? 4 : 10) : 1;\\n        return output;\\n    };\\n\\n    //\\u0130f neither hour nor minute is completely unknown\\n    output = 1;\\n    output *= time[0] == \\'?\\' ? (\"0123\".includes(time[1]) ? 3 : 2) : 1;\\n    output *= time[1] == \\'?\\' ? (time[0] == 2 ? 4 : 10) : 1;\\n    output *= time[3] == \\'?\\' ? 6 : 1;\\n    output *= time[4] == \\'?\\' ? 10 : 1;\\n    return output;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3256376,
                "title": "java-simple-o-n-easy-to-understand",
                "content": "# Intuition\\nThis problem can be solved using the brute-force technique by checking all possible combinations. Let\\'s break the string into two parts. Now, each part can have three scenarios:\\n\\n- It has no \\'?\\'\\n- It has 1 \\'?\\'\\n- It contains 2 \\'?\\' characters.\\n\\nHandle all three cases and check the bound to ensure that the resulting time is valid\\n\\n# Approach\\nSplit the string along \":\" as a result we will get an array of index 2\\nexample: \\n```\\n12:34 on splitting along \\':\\' results in string array with \\n12 at 0 index\\n34 at index 1\\n```\\n\\nSo we pass the first index which is 12 to `solve()` method with upperbound value 23, because hours cant exceed 23. \\nSimilarly we pass second index to `solve()` method with upperbound 59.\\n\\nInside solve method, we chake all three senarios as mentioned above.\\n\\nIf string contains all `\\'?\\'` then return bound+1, which is 24 in case of hours and 60 in case of mins. \\n\\nif the index of `\\'?\\'` is -1 which means string contains no `\\'?\\'` simply return 1, on multiplication it will make no impact on the answer. \\n\\nlast condition, if we have one `\\'?\\'` then we simply iterate from 0 to bound and replace `\\'?\\'` with the number\\n\\n```\\n0? will become 00 when i =0\\n0? will become 01 when i =1\\nSimilarly,\\n0? will become 010 when i=10\\n```\\n\\nWe also need to check if the length of our final string becomes 3, then we can simply break the loop. Otherwise, we will keep counting.\\n\\nAnother iteration example for hour where bound is 23\\n\\n```\\n?3 will become 00 when i=0\\n?3 will become 13 when i=1\\n?3 will become 23 when i=2\\n?3 will become 33 when i=3\\n```\\nhere the loop will break, because the number exceeded our bound. \\n\\n\\n\\n# Complexity\\n- Time complexity:\\n $$O(n)$$\\n\\n- Space complexity:\\n<$$O(1)$$ \\n\\n# Code\\n```\\nclass Solution {\\n    public int countTime(String time) {\\n        String[] timeArr = time.split(\":\");\\n        return solve(timeArr[0],23) * solve(timeArr[1],59);\\n    }\\n    public int solve(String min, int bound){\\n     \\n        String temp ;\\n        int count =0;\\n        \\n        if(min.equals(\"??\")) return bound+1;\\n        else if(min.indexOf(\"?\") == -1) return 1;\\n\\n        for(int i=0;i<=bound;i++){\\n            \\n            temp = min.replace(\"?\",String.valueOf(i));\\n            if(Integer.parseInt(temp)<=bound && temp.length()==2) count++;\\n            else break;\\n        }\\n       \\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\n12:34 on splitting along \\':\\' results in string array with \\n12 at 0 index\\n34 at index 1\\n```\n```\\n0? will become 00 when i =0\\n0? will become 01 when i =1\\nSimilarly,\\n0? will become 010 when i=10\\n```\n```\\n?3 will become 00 when i=0\\n?3 will become 13 when i=1\\n?3 will become 23 when i=2\\n?3 will become 33 when i=3\\n```\n```\\nclass Solution {\\n    public int countTime(String time) {\\n        String[] timeArr = time.split(\":\");\\n        return solve(timeArr[0],23) * solve(timeArr[1],59);\\n    }\\n    public int solve(String min, int bound){\\n     \\n        String temp ;\\n        int count =0;\\n        \\n        if(min.equals(\"??\")) return bound+1;\\n        else if(min.indexOf(\"?\") == -1) return 1;\\n\\n        for(int i=0;i<=bound;i++){\\n            \\n            temp = min.replace(\"?\",String.valueOf(i));\\n            if(Integer.parseInt(temp)<=bound && temp.length()==2) count++;\\n            else break;\\n        }\\n       \\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3253964,
                "title": "java-easy-solution-0sec",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n0 Sec time taken\\n![upvote.png](https://assets.leetcode.com/users/images/c6d61431-127c-4f53-a9bb-e6c292ef0e19_1677891375.1770408.png)\\n\\n- Space complexity:\\n- No any space\\n\\n# Code\\n```\\nclass Solution {\\n    public int countTime(String time) {\\n        int ans = 1;\\n       \\n        int h1 = time.charAt(0) - \\'0\\';\\n        int h2 = time.charAt(1) - \\'0\\';\\n        int m1 = time.charAt(3) - \\'0\\';\\n        int m2 = time.charAt(4) - \\'0\\';\\n        \\n        //h1\\n        if(isQuestionMark(h1)) {\\n            if(isQuestionMark(h2)) {\\n                ans = 24;\\n            } else if(h2 >= 4) {\\n                ans = 2;\\n            } else {\\n                ans = 3;\\n            }\\n        }   \\n        //h2 \\n        if(isQuestionMark(h2) && !isQuestionMark(h1)) {\\n            if(h1 == 2){\\n                ans *= 4;\\n            } else {\\n                ans *= 10;\\n            }\\n        }\\n        \\n        //m1\\n        if(isQuestionMark(m1))\\n            ans *= 6;\\n\\t\\t//m2\\n        if(isQuestionMark(m2))\\n            ans *= 10;\\n        \\n        return ans;\\n    }\\n\\n    public boolean isQuestionMark (int h1) {\\n        if(h1 > 9  || h1 < 0) {\\n            return true;\\n        } \\n        return false;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        int ans = 1;\\n       \\n        int h1 = time.charAt(0) - \\'0\\';\\n        int h2 = time.charAt(1) - \\'0\\';\\n        int m1 = time.charAt(3) - \\'0\\';\\n        int m2 = time.charAt(4) - \\'0\\';\\n        \\n        //h1\\n        if(isQuestionMark(h1)) {\\n            if(isQuestionMark(h2)) {\\n                ans = 24;\\n            } else if(h2 >= 4) {\\n                ans = 2;\\n            } else {\\n                ans = 3;\\n            }\\n        }   \\n        //h2 \\n        if(isQuestionMark(h2) && !isQuestionMark(h1)) {\\n            if(h1 == 2){\\n                ans *= 4;\\n            } else {\\n                ans *= 10;\\n            }\\n        }\\n        \\n        //m1\\n        if(isQuestionMark(m1))\\n            ans *= 6;\\n\\t\\t//m2\\n        if(isQuestionMark(m2))\\n            ans *= 10;\\n        \\n        return ans;\\n    }\\n\\n    public boolean isQuestionMark (int h1) {\\n        if(h1 > 9  || h1 < 0) {\\n            return true;\\n        } \\n        return false;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3243841,
                "title": "o-1-if-switch",
                "content": "# Code\\n```\\npublic class Solution {\\n    public int CountTime(string time) {\\n        int ret=1;\\n        if (time[1]==\\'?\\')\\n            switch (time[0])\\n            {\\n                case \\'2\\':\\n                    ret=4;\\n                    break;\\n                case \\'1\\':\\n                case \\'0\\':\\n                    ret=10;\\n                    break;\\n                default:\\n                    ret=24;\\n                    break;\\n            }\\n        else if (time[0]==\\'?\\')\\n        {\\n            ret=2;\\n            if (time[1]!=\\'?\\' && time[1]-\\'0\\'<4)\\n                ret++;\\n        }\\n        if (time[3]==\\'?\\')\\n            ret*=6;\\n        if (time[4]==\\'?\\')\\n            ret*=10;\\n        return ret;\\n    }\\n}\\n\\n```\\n",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public int CountTime(string time) {\\n        int ret=1;\\n        if (time[1]==\\'?\\')\\n            switch (time[0])\\n            {\\n                case \\'2\\':\\n                    ret=4;\\n                    break;\\n                case \\'1\\':\\n                case \\'0\\':\\n                    ret=10;\\n                    break;\\n                default:\\n                    ret=24;\\n                    break;\\n            }\\n        else if (time[0]==\\'?\\')\\n        {\\n            ret=2;\\n            if (time[1]!=\\'?\\' && time[1]-\\'0\\'<4)\\n                ret++;\\n        }\\n        if (time[3]==\\'?\\')\\n            ret*=6;\\n        if (time[4]==\\'?\\')\\n            ret*=10;\\n        return ret;\\n    }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3219448,
                "title": "c-simple-solution-time-o-1-space-o-1",
                "content": "# Code\\n```\\npublic class Solution {\\n    public int CountTime(string time) {\\n        int countWays = 1;\\n        if(time[0] == \\'?\\' && time[1] == \\'?\\') {\\n            countWays *= 24;\\n        } else if(time[0] == \\'?\\') {\\n            countWays *= (time[1] >= \\'0\\' && time[1] <= \\'3\\') ? 3 : 2;\\n        } else if(time[1] == \\'?\\') {\\n            countWays *= time[0] <= \\'1\\' ? 10 : 4;\\n        }\\n\\n        if(time[3] == \\'?\\' && time[4] == \\'?\\') {\\n            countWays *= 60;\\n        } else if(time[3] == \\'?\\') {\\n            countWays *= 6;\\n        } else if(time[4] == \\'?\\') {\\n            countWays *= 10;\\n        }\\n\\n        return countWays;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public int CountTime(string time) {\\n        int countWays = 1;\\n        if(time[0] == \\'?\\' && time[1] == \\'?\\') {\\n            countWays *= 24;\\n        } else if(time[0] == \\'?\\') {\\n            countWays *= (time[1] >= \\'0\\' && time[1] <= \\'3\\') ? 3 : 2;\\n        } else if(time[1] == \\'?\\') {\\n            countWays *= time[0] <= \\'1\\' ? 10 : 4;\\n        }\\n\\n        if(time[3] == \\'?\\' && time[4] == \\'?\\') {\\n            countWays *= 60;\\n        } else if(time[3] == \\'?\\') {\\n            countWays *= 6;\\n        } else if(time[4] == \\'?\\') {\\n            countWays *= 10;\\n        }\\n\\n        return countWays;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3182876,
                "title": "bf-c-solution",
                "content": "```\\nint countTime(char * time){\\n    int ans = 0;\\n    for(int i = 0; i < strlen(time); i++)\\n        if(time[i] == \\'?\\')\\n            ans = 1;\\n    if(ans){\\n        if(time[0] == \\'?\\' && time[1] == \\'?\\')\\n            ans *= 24;\\n        else if(time[0] == \\'?\\')\\n            ans *= time[1] < \\'4\\'? 3 : 2;\\n        else if(time[1] == \\'?\\')\\n            ans *= time[0] == \\'2\\'? 4 : 10;\\n        \\n        if(time[3] == \\'?\\')\\n            ans *= 6;\\n        \\n        if(time[4] == \\'?\\')\\n            ans *= 10;\\n    }\\n    return !ans? 1 : ans; /* no ? return 1 */\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint countTime(char * time){\\n    int ans = 0;\\n    for(int i = 0; i < strlen(time); i++)\\n        if(time[i] == \\'?\\')\\n            ans = 1;\\n    if(ans){\\n        if(time[0] == \\'?\\' && time[1] == \\'?\\')\\n            ans *= 24;\\n        else if(time[0] == \\'?\\')\\n            ans *= time[1] < \\'4\\'? 3 : 2;\\n        else if(time[1] == \\'?\\')\\n            ans *= time[0] == \\'2\\'? 4 : 10;\\n        \\n        if(time[3] == \\'?\\')\\n            ans *= 6;\\n        \\n        if(time[4] == \\'?\\')\\n            ans *= 10;\\n    }\\n    return !ans? 1 : ans; /* no ? return 1 */\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3158654,
                "title": "java-easy-to-understand-beats-100",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\n    public int countTime(String time) {\\n        char h1=time.charAt(0);\\n        char h2=time.charAt(1);\\n        \\n        char m1=time.charAt(3);\\n        char m2=time.charAt(4);\\n        \\n        int res1=1;\\n        if(h1==\\'?\\' && h2==\\'?\\'){\\n            res1=24;\\n        }\\n        else if(h1==\\'?\\'){\\n            int val=Character.getNumericValue(h2);\\n            if(val<4){\\n                res1=3;\\n            }else{\\n                res1=2;\\n            }\\n        }\\n        else if(h2==\\'?\\'){\\n            int val=Character.getNumericValue(h1);\\n            if(val==2){\\n                res1=4;\\n            }\\n            else{\\n                res1=10;\\n            }  \\n        }\\n\\n        int res2=1;\\n        if(m1==\\'?\\' && m2==\\'?\\'){\\n            res2=60;\\n        }\\n        else if(m1==\\'?\\'){\\n            res2=6;\\n        }\\n        else if(m2==\\'?\\'){\\n            res2=10;\\n        }\\n\\n        return res1*res2;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        char h1=time.charAt(0);\\n        char h2=time.charAt(1);\\n        \\n        char m1=time.charAt(3);\\n        char m2=time.charAt(4);\\n        \\n        int res1=1;\\n        if(h1==\\'?\\' && h2==\\'?\\'){\\n            res1=24;\\n        }\\n        else if(h1==\\'?\\'){\\n            int val=Character.getNumericValue(h2);\\n            if(val<4){\\n                res1=3;\\n            }else{\\n                res1=2;\\n            }\\n        }\\n        else if(h2==\\'?\\'){\\n            int val=Character.getNumericValue(h1);\\n            if(val==2){\\n                res1=4;\\n            }\\n            else{\\n                res1=10;\\n            }  \\n        }\\n\\n        int res2=1;\\n        if(m1==\\'?\\' && m2==\\'?\\'){\\n            res2=60;\\n        }\\n        else if(m1==\\'?\\'){\\n            res2=6;\\n        }\\n        else if(m2==\\'?\\'){\\n            res2=10;\\n        }\\n\\n        return res1*res2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3154039,
                "title": "100-fast-java-solution",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\n    public int countTime(String time) {\\n        char h1 = time.charAt(0);\\n        char h2 = time.charAt(1);\\n        int h = 1;\\n        if(h1 == \\'?\\' && h2 == \\'?\\') h = 24;\\n        else if(h1 == \\'?\\'){\\n            if(h2 > \\'3\\') h = 2;\\n            else h = 3;\\n        }\\n        else if(h2 == \\'?\\'){\\n            if(h1 == \\'2\\') h = 4;\\n            else h = 10;\\n        }\\n        char m1 = time.charAt(3);\\n        char m2 = time.charAt(4);\\n        int m = 1;\\n        if(m1 == \\'?\\' && m2 == \\'?\\') m = 60;\\n        else if(m1 == \\'?\\'){\\n            m = 6;\\n        }\\n        else if(m2 == \\'?\\'){\\n            m = 10;\\n        }\\n        return h*m;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        char h1 = time.charAt(0);\\n        char h2 = time.charAt(1);\\n        int h = 1;\\n        if(h1 == \\'?\\' && h2 == \\'?\\') h = 24;\\n        else if(h1 == \\'?\\'){\\n            if(h2 > \\'3\\') h = 2;\\n            else h = 3;\\n        }\\n        else if(h2 == \\'?\\'){\\n            if(h1 == \\'2\\') h = 4;\\n            else h = 10;\\n        }\\n        char m1 = time.charAt(3);\\n        char m2 = time.charAt(4);\\n        int m = 1;\\n        if(m1 == \\'?\\' && m2 == \\'?\\') m = 60;\\n        else if(m1 == \\'?\\'){\\n            m = 6;\\n        }\\n        else if(m2 == \\'?\\'){\\n            m = 10;\\n        }\\n        return h*m;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3148234,
                "title": "python-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        count1 = count2 = 1\\n        hour_dic = {\\'0\\': 10, \\'1\\': 10, \\'2\\': 4}\\n        if time[0] != \\'?\\' and time[1] == \\'?\\':\\n            count1 = hour_dic[time[0]]\\n        elif time[0] == \\'?\\' and time[1] != \\'?\\':\\n            if int(time[1]) < 4 or (int(time[1]) == 4 and time[3] == time[4] == \\'0\\'):\\n                count1 = 3\\n            else:\\n                count1 = 2\\n        elif time[0] == \\'?\\' and time[1] == \\'?\\':\\n            count1 = 24\\n        \\n        if time[3] != \\'?\\' and time[4] == \\'?\\':\\n            count2 = 10\\n        elif time[3] == \\'?\\' and time[4] != \\'?\\':\\n            count2 = 6\\n        elif time[3] == \\'?\\' and time[4] == \\'?\\':\\n            count2 = 60\\n        \\n        return count1 * count2\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        count1 = count2 = 1\\n        hour_dic = {\\'0\\': 10, \\'1\\': 10, \\'2\\': 4}\\n        if time[0] != \\'?\\' and time[1] == \\'?\\':\\n            count1 = hour_dic[time[0]]\\n        elif time[0] == \\'?\\' and time[1] != \\'?\\':\\n            if int(time[1]) < 4 or (int(time[1]) == 4 and time[3] == time[4] == \\'0\\'):\\n                count1 = 3\\n            else:\\n                count1 = 2\\n        elif time[0] == \\'?\\' and time[1] == \\'?\\':\\n            count1 = 24\\n        \\n        if time[3] != \\'?\\' and time[4] == \\'?\\':\\n            count2 = 10\\n        elif time[3] == \\'?\\' and time[4] != \\'?\\':\\n            count2 = 6\\n        elif time[3] == \\'?\\' and time[4] == \\'?\\':\\n            count2 = 60\\n        \\n        return count1 * count2\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3134038,
                "title": "javascript",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {string} time\\n * @return {number}\\n */\\nvar countTime = function(time) {\\n    const pos = [2, 10, 6, 10]\\n    const arr = time.split(\\':\\').join(\\'\\').split(\\'\\');\\n    if ((arr[0] === \\'2\\' || arr[0] === \\'?\\') && (arr[1]<4 || arr[1] === \\'?\\')) pos[1]=12;\\n    if (arr[0] === \\'?\\' && arr[1] < 4) pos[0] = 3;\\n    if (arr[0] === \\'2\\' && arr[1]===\\'?\\') pos[1] = 4\\n    const res = arr.map((el, idx) => el === \\'?\\' ? pos[idx] : 1);\\n    return res.reduce((acc,curr) => acc *= curr, 1)\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {string} time\\n * @return {number}\\n */\\nvar countTime = function(time) {\\n    const pos = [2, 10, 6, 10]\\n    const arr = time.split(\\':\\').join(\\'\\').split(\\'\\');\\n    if ((arr[0] === \\'2\\' || arr[0] === \\'?\\') && (arr[1]<4 || arr[1] === \\'?\\')) pos[1]=12;\\n    if (arr[0] === \\'?\\' && arr[1] < 4) pos[0] = 3;\\n    if (arr[0] === \\'2\\' && arr[1]===\\'?\\') pos[1] = 4\\n    const res = arr.map((el, idx) => el === \\'?\\' ? pos[idx] : 1);\\n    return res.reduce((acc,curr) => acc *= curr, 1)\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3124248,
                "title": "most-readable-and-performant-solution-to-date",
                "content": "Basically we initialize a variable count which is minimal return value or a return value when there are no \\'?\\' in the time. Thus we\\'re not really needing any array to later reduce since we multiply count on the go.\\n\\nThen we just go through minutes and multiply those (those are easy).\\nThen go through hour logic if its both \\'??\\' then we multiply by 24.\\nIf there is a digit in a number we implement simple hour logic.\\n\\n# Code\\n```\\nfunction countTime(time) {\\n    const [hours, minutes] = time.split(\\':\\')\\n    let count = 1\\n\\n    if(minutes[0] == \\'?\\') count *= 6\\n    if(minutes[1] == \\'?\\') count *= 10\\n\\n    if(hours == \\'??\\') {\\n        count *= 24\\n    } else {\\n        if(hours[0] == \\'?\\') count *= hours[1] <= 3 ? 3 : 2\\n        if(hours[1] == \\'?\\') count *= hours[0] == 2 ? 4 : 10\\n    }\\n\\n    return count\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nfunction countTime(time) {\\n    const [hours, minutes] = time.split(\\':\\')\\n    let count = 1\\n\\n    if(minutes[0] == \\'?\\') count *= 6\\n    if(minutes[1] == \\'?\\') count *= 10\\n\\n    if(hours == \\'??\\') {\\n        count *= 24\\n    } else {\\n        if(hours[0] == \\'?\\') count *= hours[1] <= 3 ? 3 : 2\\n        if(hours[1] == \\'?\\') count *= hours[0] == 2 ? 4 : 10\\n    }\\n\\n    return count\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3105351,
                "title": "rust-elixir-different-approaches",
                "content": "This is an interesting problem which allows different implementation approaches.\\n# Rust\\nCounting and closures.\\n```rust\\nimpl Solution {\\n    pub fn count_time(time: String) -> i32 {\\n        let f = |x, a, b| match (a, b) {\\n            (b\\'?\\', b\\'?\\') => true,\\n            (b\\'?\\', d2) => x % 10 == d2 - b\\'0\\',\\n            (d1, b\\'?\\') => x >= (d1 - b\\'0\\') * 10\\n                        && x <= (d1 - b\\'0\\') * 10 + 9,\\n            _ => x == 0,\\n        };\\n        let bytes = time.as_bytes();\\n        ((0..24).filter(|&x| f(x, bytes[0], bytes[1])).count()\\n        * (0..60).filter(|&x| f(x, bytes[3], bytes[4])).count()) as i32\\n    }\\n}\\n```\\n# Elixir\\nHardcode counts for each case.\\n```elixir\\ndefmodule Solution do\\n  @spec count_time(time :: String.t) :: integer\\n  def count_time(time) do\\n    [d1, d2, _, d3, d4] = String.to_charlist(time)\\n    count_h(d1, d2) * count_10m(d3) * count_m(d4)\\n  end\\n\\n  defp count_h(??, ??), do: 24\\n  defp count_h(??, h) when h <= ?3, do: 3\\n  defp count_h(??, _), do: 2\\n  defp count_h(?2, ??), do: 4\\n  defp count_h(_, ??), do: 10\\n  defp count_h(_, _), do: 1\\n  \\n  defp count_10m(??), do: 6\\n  defp count_10m(_), do: 1\\n\\n  defp count_m(??), do: 10\\n  defp count_m(_), do: 1\\nend\\n```",
                "solutionTags": [
                    "Rust",
                    "Elixir"
                ],
                "code": "```rust\\nimpl Solution {\\n    pub fn count_time(time: String) -> i32 {\\n        let f = |x, a, b| match (a, b) {\\n            (b\\'?\\', b\\'?\\') => true,\\n            (b\\'?\\', d2) => x % 10 == d2 - b\\'0\\',\\n            (d1, b\\'?\\') => x >= (d1 - b\\'0\\') * 10\\n                        && x <= (d1 - b\\'0\\') * 10 + 9,\\n            _ => x == 0,\\n        };\\n        let bytes = time.as_bytes();\\n        ((0..24).filter(|&x| f(x, bytes[0], bytes[1])).count()\\n        * (0..60).filter(|&x| f(x, bytes[3], bytes[4])).count()) as i32\\n    }\\n}\\n```\n```elixir\\ndefmodule Solution do\\n  @spec count_time(time :: String.t) :: integer\\n  def count_time(time) do\\n    [d1, d2, _, d3, d4] = String.to_charlist(time)\\n    count_h(d1, d2) * count_10m(d3) * count_m(d4)\\n  end\\n\\n  defp count_h(??, ??), do: 24\\n  defp count_h(??, h) when h <= ?3, do: 3\\n  defp count_h(??, _), do: 2\\n  defp count_h(?2, ??), do: 4\\n  defp count_h(_, ??), do: 10\\n  defp count_h(_, _), do: 1\\n  \\n  defp count_10m(??), do: 6\\n  defp count_10m(_), do: 1\\n\\n  defp count_m(??), do: 10\\n  defp count_m(_), do: 1\\nend\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3101957,
                "title": "simple-java-solution-with-explanation-string-parsing",
                "content": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        int count = 1;\\n        char[] arr = time.toCharArray();\\n        if (arr[0] == \\'?\\') {\\n            if (arr[1] == \\'?\\') count *= 24;\\n            else if (arr[1] - \\'0\\' <= 3) count *= 3;\\n            else count *= 2;\\n        } else if (arr[1] == \\'?\\') {\\n            if (arr[0] - \\'0\\' <= 1) count *= 10;\\n            else count *= 4;\\n        }\\n\\n        if (arr[3] == \\'?\\') {\\n            if (arr[4] == \\'?\\') count *= 60;\\n            else count *= 6;\\n        } else if (arr[4] == \\'?\\') {\\n            count *= 10;\\n        }\\n\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        int count = 1;\\n        char[] arr = time.toCharArray();\\n        if (arr[0] == \\'?\\') {\\n            if (arr[1] == \\'?\\') count *= 24;\\n            else if (arr[1] - \\'0\\' <= 3) count *= 3;\\n            else count *= 2;\\n        } else if (arr[1] == \\'?\\') {\\n            if (arr[0] - \\'0\\' <= 1) count *= 10;\\n            else count *= 4;\\n        }\\n\\n        if (arr[3] == \\'?\\') {\\n            if (arr[4] == \\'?\\') count *= 60;\\n            else count *= 6;\\n        } else if (arr[4] == \\'?\\') {\\n            count *= 10;\\n        }\\n\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3101121,
                "title": "accepted-swift",
                "content": "```\\nclass Solution {\\n    func countTime(_ time: String) -> Int {\\n        \\n        var res: Int\\n        \\n        switch (time.first!, time.dropFirst().prefix(1)) {\\n        case (\"?\", \"?\"): res = 24\\n        case (\"?\", \"0\"), (\"?\", \"1\"), (\"?\", \"2\"), (\"?\", \"3\"): res = 3\\n        case (\"?\", _): res = 2\\n        case (\"2\", \"?\") : res = 4\\n        case (_, \"?\"): res = 10\\n        default: res = 1\\n        }\\n        \\n        if time.dropLast().suffix(1) == \"?\" { res *= 6 }\\n        if time.last == \"?\" { res *= 10 }\\n        \\n        return res\\n    }\\n}\\n```",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\nclass Solution {\\n    func countTime(_ time: String) -> Int {\\n        \\n        var res: Int\\n        \\n        switch (time.first!, time.dropFirst().prefix(1)) {\\n        case (\"?\", \"?\"): res = 24\\n        case (\"?\", \"0\"), (\"?\", \"1\"), (\"?\", \"2\"), (\"?\", \"3\"): res = 3\\n        case (\"?\", _): res = 2\\n        case (\"2\", \"?\") : res = 4\\n        case (_, \"?\"): res = 10\\n        default: res = 1\\n        }\\n        \\n        if time.dropLast().suffix(1) == \"?\" { res *= 6 }\\n        if time.last == \"?\" { res *= 10 }\\n        \\n        return res\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3097550,
                "title": "java-easy-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int countTime(String time) {\\n        int count=1;\\n        if (time.charAt(3)==\\'?\\'){\\n            count*=6;\\n        }\\n        if (time.charAt(4)==\\'?\\'){\\n            count*=10;\\n        }\\n        if (time.charAt(0)==\\'?\\'){\\n            if(time.charAt(1)==\\'?\\'){\\n                count*=24;\\n            }\\n            else if (time.charAt(1)<\\'4\\'){\\n                count*=3;\\n            }  else if (time.charAt(1)>\\'3\\'){\\n                count*=2;\\n            }\\n        } else if (time.charAt(0)==\\'0\\'||time.charAt(0)==\\'1\\'){\\n            if (time.charAt(1)==\\'?\\'){\\n                count*=10;\\n            }\\n        } else if (time.charAt(0)==\\'2\\'){\\n            if(time.charAt(1)==\\'?\\'){\\n                count*=4;\\n            } else if (time.charAt(1)>\\'3\\'){\\n                count*=0;\\n            }\\n            \\n        }\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n        int count=1;\\n        if (time.charAt(3)==\\'?\\'){\\n            count*=6;\\n        }\\n        if (time.charAt(4)==\\'?\\'){\\n            count*=10;\\n        }\\n        if (time.charAt(0)==\\'?\\'){\\n            if(time.charAt(1)==\\'?\\'){\\n                count*=24;\\n            }\\n            else if (time.charAt(1)<\\'4\\'){\\n                count*=3;\\n            }  else if (time.charAt(1)>\\'3\\'){\\n                count*=2;\\n            }\\n        } else if (time.charAt(0)==\\'0\\'||time.charAt(0)==\\'1\\'){\\n            if (time.charAt(1)==\\'?\\'){\\n                count*=10;\\n            }\\n        } else if (time.charAt(0)==\\'2\\'){\\n            if(time.charAt(1)==\\'?\\'){\\n                count*=4;\\n            } else if (time.charAt(1)>\\'3\\'){\\n                count*=0;\\n            }\\n            \\n        }\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3096459,
                "title": "beats-100-o-1-space-o-1-time",
                "content": "The solution is a Java implementation that solves the problem of counting the number of valid clock times that can be created by replacing every \"?\" with a digit from 0 to 9 in a given string of length 5 called \"time\", which represents the current time in format \"hh:mm\".\\n- The algorithm starts by initializing a variable called \"choice\" to 1, which will be used to keep track of the number of possible valid clock times.\\n- The solution checks the first two characters of the \"time\" string, which represent the hours.\\n- If the first character is a \"?\", the solution checks the second character.\\n- If the second character is also a \"?\", the solution multiplies the \"choice\" variable by 24, as there are 24 hours in a day.\\n- If the second character is a digit greater than \"3\", the solution multiplies the \"choice\" variable by 2, as the maximum number of hours that can be represented by this combination is 23.\\n- If the second character is not \"?\" and not greater than \"3\", the solution multiplies the \"choice\" variable by 3, as the maximum number of hours that can be represented by this combination is 23.\\n- Then, the solution proceeds to check the next two characters of the \"time\" string, which represent the minutes.\\n- If the third character is a \"?\", the solution checks the fourth character.\\n- If the fourth character is also a \"?\", the solution multiplies the \"choice\" variable by 60, as there are 60 minutes in an hour.\\n- If the fourth character is a digit, the solution multiplies the \"choice\" variable by 6, as there are 6 possible valid minutes that can be represented by this combination (0, 1, 2, 3, 4, 5).\\n- If the third character is not \"?\", the solution checks the fourth character.\\n- If the fourth character is \"?\", the solution multiplies the \"choice\" variable by 10, as there are 10 possible valid minutes that can be represented by this combination (0 to 9).\\n- Finally, the solution returns the \"choice\" variable as the final result, which represents the number of possible valid clock times that can be created by replacing every \"?\" with a digit from 0 to 9.\\n\\n\\nThe time complexity of this solution is O(1) as it only iterates the string once and doesn\\'t have any loops. The space complexity is also O(1) as it only uses a single variable to store the final result.\\n\\n# Code\\n```\\nclass Solution {\\n    public int countTime(String time) {\\n\\n        int choice = 1;\\n\\n        if(time.charAt(0) == \\'?\\'){\\n            if(time.charAt(1) == \\'?\\'){\\n                choice*=24;\\n            } else if(time.charAt(1)>\\'3\\'){\\n                choice*=2;\\n            } else {choice*=3;}\\n        }\\n        else if(time.charAt(1)==\\'?\\'){\\n            if(time.charAt(0)==\\'2\\'){\\n                choice*=4;\\n            } else {choice*=10;}\\n        }\\n\\n        if(time.charAt(3) == \\'?\\'){\\n            if(time.charAt(4) == \\'?\\'){\\n                choice*=60;\\n            } else {choice*=6;}\\n        }\\n        else if(time.charAt(4)==\\'?\\'){\\n            choice*=10;\\n        }\\n\\n        return choice;\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n\\n        int choice = 1;\\n\\n        if(time.charAt(0) == \\'?\\'){\\n            if(time.charAt(1) == \\'?\\'){\\n                choice*=24;\\n            } else if(time.charAt(1)>\\'3\\'){\\n                choice*=2;\\n            } else {choice*=3;}\\n        }\\n        else if(time.charAt(1)==\\'?\\'){\\n            if(time.charAt(0)==\\'2\\'){\\n                choice*=4;\\n            } else {choice*=10;}\\n        }\\n\\n        if(time.charAt(3) == \\'?\\'){\\n            if(time.charAt(4) == \\'?\\'){\\n                choice*=60;\\n            } else {choice*=6;}\\n        }\\n        else if(time.charAt(4)==\\'?\\'){\\n            choice*=10;\\n        }\\n\\n        return choice;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3094943,
                "title": "c-easy-solution",
                "content": "\\n\\n# Code\\n```\\n#include<string.h>\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int sum=1;\\n        if(time[0]==\\'?\\' and time[1]==\\'?\\'){\\n            sum=24;\\n        }\\n        else if(time[0]==\\'?\\' and int(time[1])>51){\\n            sum=2;\\n        }\\n        else if(time[0]==\\'?\\' and int(time[1])<=51){\\n            sum=3;\\n        }\\n        else if(time[1]==\\'?\\' and int(time[0])==50){\\n            sum*=4;\\n        }\\n        else if(time[1]==\\'?\\'){\\n            sum*=10;\\n        }\\n        if(time[3]==\\'?\\' and time[4]==\\'?\\'){\\n            sum*=60;\\n        }\\n        else if(time[3]==\\'?\\'){\\n            sum*=6;\\n        }\\n        else if(time[4]==\\'?\\'){\\n            sum*=10;\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\n#include<string.h>\\nclass Solution {\\npublic:\\n    int countTime(string time) {\\n        int sum=1;\\n        if(time[0]==\\'?\\' and time[1]==\\'?\\'){\\n            sum=24;\\n        }\\n        else if(time[0]==\\'?\\' and int(time[1])>51){\\n            sum=2;\\n        }\\n        else if(time[0]==\\'?\\' and int(time[1])<=51){\\n            sum=3;\\n        }\\n        else if(time[1]==\\'?\\' and int(time[0])==50){\\n            sum*=4;\\n        }\\n        else if(time[1]==\\'?\\'){\\n            sum*=10;\\n        }\\n        if(time[3]==\\'?\\' and time[4]==\\'?\\'){\\n            sum*=60;\\n        }\\n        else if(time[3]==\\'?\\'){\\n            sum*=6;\\n        }\\n        else if(time[4]==\\'?\\'){\\n            sum*=10;\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "C++"
            },
            {
                "id": 3087611,
                "title": "easy-java-solution",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\n    public int countTime(String time) {\\n\\n        if(time.equals(\"??:??\"))\\n        return 1440;\\n        int ans=1;\\n        if(time.charAt(4)==\\'?\\')\\n            ans*=10;\\n        if(time.charAt(3)==\\'?\\')\\n            ans*=6;\\n        int x=-1,y=-1;\\n        if(time.charAt(0)!=\\'?\\')\\n            x=time.charAt(0)-48;\\n        if(time.charAt(1)!=\\'?\\')\\n            y=time.charAt(1)-48;\\n\\n        if(x+y==-2)\\n        {\\n            ans*=24;\\n        }\\n        else if(x==-1 && y<=3 )\\n        {\\n            ans*=3;\\n        }\\n        else if(x==-1 && y>3)\\n        {\\n            ans*=2;\\n        }\\n        else if(y==-1 && x==2)\\n        {\\n            ans*=4;\\n        }\\n        else if(y==-1 && x<=1)\\n            ans*=10;\\n\\n    return ans;\\n      \\n\\n        \\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int countTime(String time) {\\n\\n        if(time.equals(\"??:??\"))\\n        return 1440;\\n        int ans=1;\\n        if(time.charAt(4)==\\'?\\')\\n            ans*=10;\\n        if(time.charAt(3)==\\'?\\')\\n            ans*=6;\\n        int x=-1,y=-1;\\n        if(time.charAt(0)!=\\'?\\')\\n            x=time.charAt(0)-48;\\n        if(time.charAt(1)!=\\'?\\')\\n            y=time.charAt(1)-48;\\n\\n        if(x+y==-2)\\n        {\\n            ans*=24;\\n        }\\n        else if(x==-1 && y<=3 )\\n        {\\n            ans*=3;\\n        }\\n        else if(x==-1 && y>3)\\n        {\\n            ans*=2;\\n        }\\n        else if(y==-1 && x==2)\\n        {\\n            ans*=4;\\n        }\\n        else if(y==-1 && x<=1)\\n            ans*=10;\\n\\n    return ans;\\n      \\n\\n        \\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3068267,
                "title": "c",
                "content": "```\\nint countTime(char * time){\\n    int ans = 1;\\n    if(time[0] ==\\'?\\' && time[1] ==\\'?\\') \\n        ans *= 24;\\n    else{\\n        if(time[1] ==\\'?\\'){\\n            if( time[0] == \\'1\\'|| time[0] == \\'0\\') \\n                ans *= 10;\\n            else \\n                ans *= 4;\\n        }\\n        else if( time[0] == \\'?\\'){\\n            if( time[1] >= \\'4\\') \\n                ans *= 2;   //0 , 1, \\n            else \\n                ans *= 3;   //0 , 1 , 2\\n        }\\n    }\\n    if( time[3] ==\\'?\\' && time[4] ==\\'?\\') \\n        ans *= 60;\\n    else{\\n        if( time[3]  ==\\'?\\') \\n            ans *= 6 ;\\n        else if( time[4] == \\'?\\')\\n            ans *= 10;\\n    }\\n        \\n    return ans;\\n\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nint countTime(char * time){\\n    int ans = 1;\\n    if(time[0] ==\\'?\\' && time[1] ==\\'?\\') \\n        ans *= 24;\\n    else{\\n        if(time[1] ==\\'?\\'){\\n            if( time[0] == \\'1\\'|| time[0] == \\'0\\') \\n                ans *= 10;\\n            else \\n                ans *= 4;\\n        }\\n        else if( time[0] == \\'?\\'){\\n            if( time[1] >= \\'4\\') \\n                ans *= 2;   //0 , 1, \\n            else \\n                ans *= 3;   //0 , 1 , 2\\n        }\\n    }\\n    if( time[3] ==\\'?\\' && time[4] ==\\'?\\') \\n        ans *= 60;\\n    else{\\n        if( time[3]  ==\\'?\\') \\n            ans *= 6 ;\\n        else if( time[4] == \\'?\\')\\n            ans *= 10;\\n    }\\n        \\n    return ans;\\n\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3059087,
                "title": "counting-the-number-of",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        ans = 1\\n        HH = [str(i).zfill(2) for i in range(0,24)]\\n        MM = [str(i).zfill(2) for i in range(0,60)]\\n        hh, mm = time[0:2], time[3:5]\\n        # hh part\\n        if hh.count(\\'?\\')==1:\\n            temp=0\\n            if hh[0]==\\'?\\':\\n                for H in HH:\\n                    if hh[1]==H[1]: temp+=1\\n            elif hh[1]==\\'?\\':\\n                for H in HH:\\n                    if hh[0]==H[0]: temp+=1\\n        elif hh.count(\\'?\\')==0:\\n            temp=1\\n        elif hh.count(\\'?\\')==2:\\n            temp=24\\n        ans*=temp\\n\\n        #mm part\\n        if mm.count(\\'?\\')==1:\\n            temp=0\\n            if mm[0]==\\'?\\':\\n                for M in MM:\\n                    if mm[1]==M[1]: temp+=1\\n            elif mm[1]==\\'?\\':\\n                for M in MM:\\n                    if mm[0]==M[0]: temp+=1\\n        elif mm.count(\\'?\\')==0:\\n            temp=1\\n        elif mm.count(\\'?\\')==2:\\n            temp=60\\n        ans*=temp\\n        return ans\\n\\n\\n        \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def countTime(self, time: str) -> int:\\n        ans = 1\\n        HH = [str(i).zfill(2) for i in range(0,24)]\\n        MM = [str(i).zfill(2) for i in range(0,60)]\\n        hh, mm = time[0:2], time[3:5]\\n        # hh part\\n        if hh.count(\\'?\\')==1:\\n            temp=0\\n            if hh[0]==\\'?\\':\\n                for H in HH:\\n                    if hh[1]==H[1]: temp+=1\\n            elif hh[1]==\\'?\\':\\n                for H in HH:\\n                    if hh[0]==H[0]: temp+=1\\n        elif hh.count(\\'?\\')==0:\\n            temp=1\\n        elif hh.count(\\'?\\')==2:\\n            temp=24\\n        ans*=temp\\n\\n        #mm part\\n        if mm.count(\\'?\\')==1:\\n            temp=0\\n            if mm[0]==\\'?\\':\\n                for M in MM:\\n                    if mm[1]==M[1]: temp+=1\\n            elif mm[1]==\\'?\\':\\n                for M in MM:\\n                    if mm[0]==M[0]: temp+=1\\n        elif mm.count(\\'?\\')==0:\\n            temp=1\\n        elif mm.count(\\'?\\')==2:\\n            temp=60\\n        ans*=temp\\n        return ans\\n\\n\\n        \\n```",
                "codeTag": "Java"
            }
        ],
        "discussions": [
            {
                "id": 1737231,
                "content": [
                    {
                        "username": "YusenPeng",
                        "content": "Hints:\\n1. A whole bunch of \"if else\" statements.\\n2. Keep patient."
                    },
                    {
                        "username": "anjith",
                        "content": "Keep patient till you submit the right answer. At least that\\'s what I did."
                    },
                    {
                        "username": "chrisTris",
                        "content": "Question should clarify if there are no \\'?\\' what should be returned?\\n\\nThe problem statement - \"the number of valid clock times that can be created\" implies that `21:08` should return 0 as new one is not created, the expected answer should be 0."
                    },
                    {
                        "username": "cswartzell",
                        "content": "While I agree it should be reworded, very technically it says \"Return an integer answer, the number of valid clock times that can be created by replacing every ? with a digit from 0 to 9.\" Replacing ZERO \"?\" is still replacing \"every\" \"?\". Its bullshit wordplay, but is technically valid as is. \\n\\nThat being said, this IS the exact kind of nonsense that is common. \"I have finshed processing ALL (0) tasks\" is valid. "
                    },
                    {
                        "username": "piyush_mehta22",
                        "content": "if-else lavden bhujyam!"
                    },
                    {
                        "username": "imraklr",
                        "content": "Here is where you start to learn about the edge cases in an easy way"
                    },
                    {
                        "username": "Jason-Law",
                        "content": "IMO, It is a good and fun problem. Why do so many people dislike it? \\uD83E\\uDD15"
                    },
                    {
                        "username": "ilyastuit",
                        "content": "maybe because it is `if-else` problem"
                    }
                ]
            },
            {
                "id": 1646572,
                "content": [
                    {
                        "username": "YusenPeng",
                        "content": "Hints:\\n1. A whole bunch of \"if else\" statements.\\n2. Keep patient."
                    },
                    {
                        "username": "anjith",
                        "content": "Keep patient till you submit the right answer. At least that\\'s what I did."
                    },
                    {
                        "username": "chrisTris",
                        "content": "Question should clarify if there are no \\'?\\' what should be returned?\\n\\nThe problem statement - \"the number of valid clock times that can be created\" implies that `21:08` should return 0 as new one is not created, the expected answer should be 0."
                    },
                    {
                        "username": "cswartzell",
                        "content": "While I agree it should be reworded, very technically it says \"Return an integer answer, the number of valid clock times that can be created by replacing every ? with a digit from 0 to 9.\" Replacing ZERO \"?\" is still replacing \"every\" \"?\". Its bullshit wordplay, but is technically valid as is. \\n\\nThat being said, this IS the exact kind of nonsense that is common. \"I have finshed processing ALL (0) tasks\" is valid. "
                    },
                    {
                        "username": "piyush_mehta22",
                        "content": "if-else lavden bhujyam!"
                    },
                    {
                        "username": "imraklr",
                        "content": "Here is where you start to learn about the edge cases in an easy way"
                    },
                    {
                        "username": "Jason-Law",
                        "content": "IMO, It is a good and fun problem. Why do so many people dislike it? \\uD83E\\uDD15"
                    },
                    {
                        "username": "ilyastuit",
                        "content": "maybe because it is `if-else` problem"
                    }
                ]
            },
            {
                "id": 2028127,
                "content": [
                    {
                        "username": "YusenPeng",
                        "content": "Hints:\\n1. A whole bunch of \"if else\" statements.\\n2. Keep patient."
                    },
                    {
                        "username": "anjith",
                        "content": "Keep patient till you submit the right answer. At least that\\'s what I did."
                    },
                    {
                        "username": "chrisTris",
                        "content": "Question should clarify if there are no \\'?\\' what should be returned?\\n\\nThe problem statement - \"the number of valid clock times that can be created\" implies that `21:08` should return 0 as new one is not created, the expected answer should be 0."
                    },
                    {
                        "username": "cswartzell",
                        "content": "While I agree it should be reworded, very technically it says \"Return an integer answer, the number of valid clock times that can be created by replacing every ? with a digit from 0 to 9.\" Replacing ZERO \"?\" is still replacing \"every\" \"?\". Its bullshit wordplay, but is technically valid as is. \\n\\nThat being said, this IS the exact kind of nonsense that is common. \"I have finshed processing ALL (0) tasks\" is valid. "
                    },
                    {
                        "username": "piyush_mehta22",
                        "content": "if-else lavden bhujyam!"
                    },
                    {
                        "username": "imraklr",
                        "content": "Here is where you start to learn about the edge cases in an easy way"
                    },
                    {
                        "username": "Jason-Law",
                        "content": "IMO, It is a good and fun problem. Why do so many people dislike it? \\uD83E\\uDD15"
                    },
                    {
                        "username": "ilyastuit",
                        "content": "maybe because it is `if-else` problem"
                    }
                ]
            },
            {
                "id": 1975270,
                "content": [
                    {
                        "username": "YusenPeng",
                        "content": "Hints:\\n1. A whole bunch of \"if else\" statements.\\n2. Keep patient."
                    },
                    {
                        "username": "anjith",
                        "content": "Keep patient till you submit the right answer. At least that\\'s what I did."
                    },
                    {
                        "username": "chrisTris",
                        "content": "Question should clarify if there are no \\'?\\' what should be returned?\\n\\nThe problem statement - \"the number of valid clock times that can be created\" implies that `21:08` should return 0 as new one is not created, the expected answer should be 0."
                    },
                    {
                        "username": "cswartzell",
                        "content": "While I agree it should be reworded, very technically it says \"Return an integer answer, the number of valid clock times that can be created by replacing every ? with a digit from 0 to 9.\" Replacing ZERO \"?\" is still replacing \"every\" \"?\". Its bullshit wordplay, but is technically valid as is. \\n\\nThat being said, this IS the exact kind of nonsense that is common. \"I have finshed processing ALL (0) tasks\" is valid. "
                    },
                    {
                        "username": "piyush_mehta22",
                        "content": "if-else lavden bhujyam!"
                    },
                    {
                        "username": "imraklr",
                        "content": "Here is where you start to learn about the edge cases in an easy way"
                    },
                    {
                        "username": "Jason-Law",
                        "content": "IMO, It is a good and fun problem. Why do so many people dislike it? \\uD83E\\uDD15"
                    },
                    {
                        "username": "ilyastuit",
                        "content": "maybe because it is `if-else` problem"
                    }
                ]
            },
            {
                "id": 1938659,
                "content": [
                    {
                        "username": "YusenPeng",
                        "content": "Hints:\\n1. A whole bunch of \"if else\" statements.\\n2. Keep patient."
                    },
                    {
                        "username": "anjith",
                        "content": "Keep patient till you submit the right answer. At least that\\'s what I did."
                    },
                    {
                        "username": "chrisTris",
                        "content": "Question should clarify if there are no \\'?\\' what should be returned?\\n\\nThe problem statement - \"the number of valid clock times that can be created\" implies that `21:08` should return 0 as new one is not created, the expected answer should be 0."
                    },
                    {
                        "username": "cswartzell",
                        "content": "While I agree it should be reworded, very technically it says \"Return an integer answer, the number of valid clock times that can be created by replacing every ? with a digit from 0 to 9.\" Replacing ZERO \"?\" is still replacing \"every\" \"?\". Its bullshit wordplay, but is technically valid as is. \\n\\nThat being said, this IS the exact kind of nonsense that is common. \"I have finshed processing ALL (0) tasks\" is valid. "
                    },
                    {
                        "username": "piyush_mehta22",
                        "content": "if-else lavden bhujyam!"
                    },
                    {
                        "username": "imraklr",
                        "content": "Here is where you start to learn about the edge cases in an easy way"
                    },
                    {
                        "username": "Jason-Law",
                        "content": "IMO, It is a good and fun problem. Why do so many people dislike it? \\uD83E\\uDD15"
                    },
                    {
                        "username": "ilyastuit",
                        "content": "maybe because it is `if-else` problem"
                    }
                ]
            }
        ]
    }
]