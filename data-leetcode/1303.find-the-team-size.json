[
    {
        "title": "Find the Team Size",
        "question_content": null,
        "solutions": [],
        "discussions": [
            {
                "id": 1575252,
                "content": [
                    {
                        "username": "violetwang958",
                        "content": "\\'\\'\\'\\n\\nselect employee_id, count(employee_id) over (partition by team_id) as team_size\\nfrom Employee\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Shashankdaram026",
                        "content": "# MySQL query\\n\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1"
                    },
                    {
                        "username": "jbs100",
                        "content": "I think, In General, Windows functions are much faster than derived table or Common table expression. \\n\\nperformance are ranked as \\n1. Windows (analytical) Functions\\n2. Common Table Expression (CTE)\\n3. Derived Table (Sub Query)\\n\\n\\n--- Option 1:  Windows function\\n\\nSelect\\nemployee_id,\\ncount(team_id) over(partition by team_id) as team_size\\nfrom employee\\n\\n---Option 2: CTE\\nWith a as\\n    (select team_id, count(team_id) as team_size from employee group by team_id)\\n\\nselect \\nb.employee_id,\\na.team_size\\nfrom employee b\\njoin a on b.team_id = a.team_id\\n\\n\\n--- Option 3: Derived Table\\n\\nSelect\\na.employee_id,\\nteam_size\\nfrom employee a\\njoin (select team_id,count(team_id) as team_size from employee group by team_id) b\\non a.team_id = b.team_id\\n"
                    },
                    {
                        "username": "BorisLin53",
                        "content": "\\nselect e.employee_id, count(e.employee_id) as team_size\\nfrom Employee e\\nleft join Employee em\\non e.team_id = em.team_id \\ngroup by e.employee_id"
                    },
                    {
                        "username": "tianshu3",
                        "content": "Why group by having couldn\\'t be used??\\n\\nI tried few different method, but all of them are failed.\\n\\n1.SELECT employee_id, team_id AS team_size FROM employee\\nGROUP BY team_id HAVING COUNT(team_id)\\n\\n2. SELECT employee_id, COUNT(DISTINCT(team_id) AS team_size FROM employee\\n\\nHow could I distinguish when should I use partition by insteand of group by?"
                    },
                    {
                        "username": "yujiajin3",
                        "content": "with temp as (SELECT team_id, COUNT() as team_size FROM Employee\\n                GROUP BY team_id) \\nSELECT e.employee_id, temp.team_size FROM temp\\nRIGHT JOIN Employee e\\nON e.team_id = temp.team_id"
                    },
                    {
                        "username": "akhilesh2186",
                        "content": "Basically we need to count the employees against each team and then assign that as Team Size against each employee.\\n\\n/* Write your PL/SQL query statement below */\\nselect employee_id ,\\ncount(distinct employee_id) over (partition by team_id) team_size \\nfrom Employee;"
                    },
                    {
                        "username": "ravi_teja2",
                        "content": "select e1.employee_id, \\ncount(e1.team_id) as team_size \\nfrom \\nEmployee e1,Employee e2\\nwhere e1.team_id = e2.team_id\\ngroup by 1\\norder by 1;"
                    },
                    {
                        "username": "dolong2110",
                        "content": "```\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1\\n```"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "with cte as (\\n    select  team_id, count(team_id) team_size from employee group by team_id \\n)\\nselect employee_id, team_size from employee join \\ncte using (team_id)\\n"
                    }
                ]
            },
            {
                "id": 1566922,
                "content": [
                    {
                        "username": "violetwang958",
                        "content": "\\'\\'\\'\\n\\nselect employee_id, count(employee_id) over (partition by team_id) as team_size\\nfrom Employee\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Shashankdaram026",
                        "content": "# MySQL query\\n\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1"
                    },
                    {
                        "username": "jbs100",
                        "content": "I think, In General, Windows functions are much faster than derived table or Common table expression. \\n\\nperformance are ranked as \\n1. Windows (analytical) Functions\\n2. Common Table Expression (CTE)\\n3. Derived Table (Sub Query)\\n\\n\\n--- Option 1:  Windows function\\n\\nSelect\\nemployee_id,\\ncount(team_id) over(partition by team_id) as team_size\\nfrom employee\\n\\n---Option 2: CTE\\nWith a as\\n    (select team_id, count(team_id) as team_size from employee group by team_id)\\n\\nselect \\nb.employee_id,\\na.team_size\\nfrom employee b\\njoin a on b.team_id = a.team_id\\n\\n\\n--- Option 3: Derived Table\\n\\nSelect\\na.employee_id,\\nteam_size\\nfrom employee a\\njoin (select team_id,count(team_id) as team_size from employee group by team_id) b\\non a.team_id = b.team_id\\n"
                    },
                    {
                        "username": "BorisLin53",
                        "content": "\\nselect e.employee_id, count(e.employee_id) as team_size\\nfrom Employee e\\nleft join Employee em\\non e.team_id = em.team_id \\ngroup by e.employee_id"
                    },
                    {
                        "username": "tianshu3",
                        "content": "Why group by having couldn\\'t be used??\\n\\nI tried few different method, but all of them are failed.\\n\\n1.SELECT employee_id, team_id AS team_size FROM employee\\nGROUP BY team_id HAVING COUNT(team_id)\\n\\n2. SELECT employee_id, COUNT(DISTINCT(team_id) AS team_size FROM employee\\n\\nHow could I distinguish when should I use partition by insteand of group by?"
                    },
                    {
                        "username": "yujiajin3",
                        "content": "with temp as (SELECT team_id, COUNT() as team_size FROM Employee\\n                GROUP BY team_id) \\nSELECT e.employee_id, temp.team_size FROM temp\\nRIGHT JOIN Employee e\\nON e.team_id = temp.team_id"
                    },
                    {
                        "username": "akhilesh2186",
                        "content": "Basically we need to count the employees against each team and then assign that as Team Size against each employee.\\n\\n/* Write your PL/SQL query statement below */\\nselect employee_id ,\\ncount(distinct employee_id) over (partition by team_id) team_size \\nfrom Employee;"
                    },
                    {
                        "username": "ravi_teja2",
                        "content": "select e1.employee_id, \\ncount(e1.team_id) as team_size \\nfrom \\nEmployee e1,Employee e2\\nwhere e1.team_id = e2.team_id\\ngroup by 1\\norder by 1;"
                    },
                    {
                        "username": "dolong2110",
                        "content": "```\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1\\n```"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "with cte as (\\n    select  team_id, count(team_id) team_size from employee group by team_id \\n)\\nselect employee_id, team_size from employee join \\ncte using (team_id)\\n"
                    }
                ]
            },
            {
                "id": 1574298,
                "content": [
                    {
                        "username": "violetwang958",
                        "content": "\\'\\'\\'\\n\\nselect employee_id, count(employee_id) over (partition by team_id) as team_size\\nfrom Employee\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Shashankdaram026",
                        "content": "# MySQL query\\n\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1"
                    },
                    {
                        "username": "jbs100",
                        "content": "I think, In General, Windows functions are much faster than derived table or Common table expression. \\n\\nperformance are ranked as \\n1. Windows (analytical) Functions\\n2. Common Table Expression (CTE)\\n3. Derived Table (Sub Query)\\n\\n\\n--- Option 1:  Windows function\\n\\nSelect\\nemployee_id,\\ncount(team_id) over(partition by team_id) as team_size\\nfrom employee\\n\\n---Option 2: CTE\\nWith a as\\n    (select team_id, count(team_id) as team_size from employee group by team_id)\\n\\nselect \\nb.employee_id,\\na.team_size\\nfrom employee b\\njoin a on b.team_id = a.team_id\\n\\n\\n--- Option 3: Derived Table\\n\\nSelect\\na.employee_id,\\nteam_size\\nfrom employee a\\njoin (select team_id,count(team_id) as team_size from employee group by team_id) b\\non a.team_id = b.team_id\\n"
                    },
                    {
                        "username": "BorisLin53",
                        "content": "\\nselect e.employee_id, count(e.employee_id) as team_size\\nfrom Employee e\\nleft join Employee em\\non e.team_id = em.team_id \\ngroup by e.employee_id"
                    },
                    {
                        "username": "tianshu3",
                        "content": "Why group by having couldn\\'t be used??\\n\\nI tried few different method, but all of them are failed.\\n\\n1.SELECT employee_id, team_id AS team_size FROM employee\\nGROUP BY team_id HAVING COUNT(team_id)\\n\\n2. SELECT employee_id, COUNT(DISTINCT(team_id) AS team_size FROM employee\\n\\nHow could I distinguish when should I use partition by insteand of group by?"
                    },
                    {
                        "username": "yujiajin3",
                        "content": "with temp as (SELECT team_id, COUNT() as team_size FROM Employee\\n                GROUP BY team_id) \\nSELECT e.employee_id, temp.team_size FROM temp\\nRIGHT JOIN Employee e\\nON e.team_id = temp.team_id"
                    },
                    {
                        "username": "akhilesh2186",
                        "content": "Basically we need to count the employees against each team and then assign that as Team Size against each employee.\\n\\n/* Write your PL/SQL query statement below */\\nselect employee_id ,\\ncount(distinct employee_id) over (partition by team_id) team_size \\nfrom Employee;"
                    },
                    {
                        "username": "ravi_teja2",
                        "content": "select e1.employee_id, \\ncount(e1.team_id) as team_size \\nfrom \\nEmployee e1,Employee e2\\nwhere e1.team_id = e2.team_id\\ngroup by 1\\norder by 1;"
                    },
                    {
                        "username": "dolong2110",
                        "content": "```\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1\\n```"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "with cte as (\\n    select  team_id, count(team_id) team_size from employee group by team_id \\n)\\nselect employee_id, team_size from employee join \\ncte using (team_id)\\n"
                    }
                ]
            },
            {
                "id": 1573448,
                "content": [
                    {
                        "username": "violetwang958",
                        "content": "\\'\\'\\'\\n\\nselect employee_id, count(employee_id) over (partition by team_id) as team_size\\nfrom Employee\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Shashankdaram026",
                        "content": "# MySQL query\\n\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1"
                    },
                    {
                        "username": "jbs100",
                        "content": "I think, In General, Windows functions are much faster than derived table or Common table expression. \\n\\nperformance are ranked as \\n1. Windows (analytical) Functions\\n2. Common Table Expression (CTE)\\n3. Derived Table (Sub Query)\\n\\n\\n--- Option 1:  Windows function\\n\\nSelect\\nemployee_id,\\ncount(team_id) over(partition by team_id) as team_size\\nfrom employee\\n\\n---Option 2: CTE\\nWith a as\\n    (select team_id, count(team_id) as team_size from employee group by team_id)\\n\\nselect \\nb.employee_id,\\na.team_size\\nfrom employee b\\njoin a on b.team_id = a.team_id\\n\\n\\n--- Option 3: Derived Table\\n\\nSelect\\na.employee_id,\\nteam_size\\nfrom employee a\\njoin (select team_id,count(team_id) as team_size from employee group by team_id) b\\non a.team_id = b.team_id\\n"
                    },
                    {
                        "username": "BorisLin53",
                        "content": "\\nselect e.employee_id, count(e.employee_id) as team_size\\nfrom Employee e\\nleft join Employee em\\non e.team_id = em.team_id \\ngroup by e.employee_id"
                    },
                    {
                        "username": "tianshu3",
                        "content": "Why group by having couldn\\'t be used??\\n\\nI tried few different method, but all of them are failed.\\n\\n1.SELECT employee_id, team_id AS team_size FROM employee\\nGROUP BY team_id HAVING COUNT(team_id)\\n\\n2. SELECT employee_id, COUNT(DISTINCT(team_id) AS team_size FROM employee\\n\\nHow could I distinguish when should I use partition by insteand of group by?"
                    },
                    {
                        "username": "yujiajin3",
                        "content": "with temp as (SELECT team_id, COUNT() as team_size FROM Employee\\n                GROUP BY team_id) \\nSELECT e.employee_id, temp.team_size FROM temp\\nRIGHT JOIN Employee e\\nON e.team_id = temp.team_id"
                    },
                    {
                        "username": "akhilesh2186",
                        "content": "Basically we need to count the employees against each team and then assign that as Team Size against each employee.\\n\\n/* Write your PL/SQL query statement below */\\nselect employee_id ,\\ncount(distinct employee_id) over (partition by team_id) team_size \\nfrom Employee;"
                    },
                    {
                        "username": "ravi_teja2",
                        "content": "select e1.employee_id, \\ncount(e1.team_id) as team_size \\nfrom \\nEmployee e1,Employee e2\\nwhere e1.team_id = e2.team_id\\ngroup by 1\\norder by 1;"
                    },
                    {
                        "username": "dolong2110",
                        "content": "```\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1\\n```"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "with cte as (\\n    select  team_id, count(team_id) team_size from employee group by team_id \\n)\\nselect employee_id, team_size from employee join \\ncte using (team_id)\\n"
                    }
                ]
            },
            {
                "id": 1575205,
                "content": [
                    {
                        "username": "violetwang958",
                        "content": "\\'\\'\\'\\n\\nselect employee_id, count(employee_id) over (partition by team_id) as team_size\\nfrom Employee\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Shashankdaram026",
                        "content": "# MySQL query\\n\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1"
                    },
                    {
                        "username": "jbs100",
                        "content": "I think, In General, Windows functions are much faster than derived table or Common table expression. \\n\\nperformance are ranked as \\n1. Windows (analytical) Functions\\n2. Common Table Expression (CTE)\\n3. Derived Table (Sub Query)\\n\\n\\n--- Option 1:  Windows function\\n\\nSelect\\nemployee_id,\\ncount(team_id) over(partition by team_id) as team_size\\nfrom employee\\n\\n---Option 2: CTE\\nWith a as\\n    (select team_id, count(team_id) as team_size from employee group by team_id)\\n\\nselect \\nb.employee_id,\\na.team_size\\nfrom employee b\\njoin a on b.team_id = a.team_id\\n\\n\\n--- Option 3: Derived Table\\n\\nSelect\\na.employee_id,\\nteam_size\\nfrom employee a\\njoin (select team_id,count(team_id) as team_size from employee group by team_id) b\\non a.team_id = b.team_id\\n"
                    },
                    {
                        "username": "BorisLin53",
                        "content": "\\nselect e.employee_id, count(e.employee_id) as team_size\\nfrom Employee e\\nleft join Employee em\\non e.team_id = em.team_id \\ngroup by e.employee_id"
                    },
                    {
                        "username": "tianshu3",
                        "content": "Why group by having couldn\\'t be used??\\n\\nI tried few different method, but all of them are failed.\\n\\n1.SELECT employee_id, team_id AS team_size FROM employee\\nGROUP BY team_id HAVING COUNT(team_id)\\n\\n2. SELECT employee_id, COUNT(DISTINCT(team_id) AS team_size FROM employee\\n\\nHow could I distinguish when should I use partition by insteand of group by?"
                    },
                    {
                        "username": "yujiajin3",
                        "content": "with temp as (SELECT team_id, COUNT() as team_size FROM Employee\\n                GROUP BY team_id) \\nSELECT e.employee_id, temp.team_size FROM temp\\nRIGHT JOIN Employee e\\nON e.team_id = temp.team_id"
                    },
                    {
                        "username": "akhilesh2186",
                        "content": "Basically we need to count the employees against each team and then assign that as Team Size against each employee.\\n\\n/* Write your PL/SQL query statement below */\\nselect employee_id ,\\ncount(distinct employee_id) over (partition by team_id) team_size \\nfrom Employee;"
                    },
                    {
                        "username": "ravi_teja2",
                        "content": "select e1.employee_id, \\ncount(e1.team_id) as team_size \\nfrom \\nEmployee e1,Employee e2\\nwhere e1.team_id = e2.team_id\\ngroup by 1\\norder by 1;"
                    },
                    {
                        "username": "dolong2110",
                        "content": "```\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1\\n```"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "with cte as (\\n    select  team_id, count(team_id) team_size from employee group by team_id \\n)\\nselect employee_id, team_size from employee join \\ncte using (team_id)\\n"
                    }
                ]
            },
            {
                "id": 1574625,
                "content": [
                    {
                        "username": "violetwang958",
                        "content": "\\'\\'\\'\\n\\nselect employee_id, count(employee_id) over (partition by team_id) as team_size\\nfrom Employee\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Shashankdaram026",
                        "content": "# MySQL query\\n\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1"
                    },
                    {
                        "username": "jbs100",
                        "content": "I think, In General, Windows functions are much faster than derived table or Common table expression. \\n\\nperformance are ranked as \\n1. Windows (analytical) Functions\\n2. Common Table Expression (CTE)\\n3. Derived Table (Sub Query)\\n\\n\\n--- Option 1:  Windows function\\n\\nSelect\\nemployee_id,\\ncount(team_id) over(partition by team_id) as team_size\\nfrom employee\\n\\n---Option 2: CTE\\nWith a as\\n    (select team_id, count(team_id) as team_size from employee group by team_id)\\n\\nselect \\nb.employee_id,\\na.team_size\\nfrom employee b\\njoin a on b.team_id = a.team_id\\n\\n\\n--- Option 3: Derived Table\\n\\nSelect\\na.employee_id,\\nteam_size\\nfrom employee a\\njoin (select team_id,count(team_id) as team_size from employee group by team_id) b\\non a.team_id = b.team_id\\n"
                    },
                    {
                        "username": "BorisLin53",
                        "content": "\\nselect e.employee_id, count(e.employee_id) as team_size\\nfrom Employee e\\nleft join Employee em\\non e.team_id = em.team_id \\ngroup by e.employee_id"
                    },
                    {
                        "username": "tianshu3",
                        "content": "Why group by having couldn\\'t be used??\\n\\nI tried few different method, but all of them are failed.\\n\\n1.SELECT employee_id, team_id AS team_size FROM employee\\nGROUP BY team_id HAVING COUNT(team_id)\\n\\n2. SELECT employee_id, COUNT(DISTINCT(team_id) AS team_size FROM employee\\n\\nHow could I distinguish when should I use partition by insteand of group by?"
                    },
                    {
                        "username": "yujiajin3",
                        "content": "with temp as (SELECT team_id, COUNT() as team_size FROM Employee\\n                GROUP BY team_id) \\nSELECT e.employee_id, temp.team_size FROM temp\\nRIGHT JOIN Employee e\\nON e.team_id = temp.team_id"
                    },
                    {
                        "username": "akhilesh2186",
                        "content": "Basically we need to count the employees against each team and then assign that as Team Size against each employee.\\n\\n/* Write your PL/SQL query statement below */\\nselect employee_id ,\\ncount(distinct employee_id) over (partition by team_id) team_size \\nfrom Employee;"
                    },
                    {
                        "username": "ravi_teja2",
                        "content": "select e1.employee_id, \\ncount(e1.team_id) as team_size \\nfrom \\nEmployee e1,Employee e2\\nwhere e1.team_id = e2.team_id\\ngroup by 1\\norder by 1;"
                    },
                    {
                        "username": "dolong2110",
                        "content": "```\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1\\n```"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "with cte as (\\n    select  team_id, count(team_id) team_size from employee group by team_id \\n)\\nselect employee_id, team_size from employee join \\ncte using (team_id)\\n"
                    }
                ]
            },
            {
                "id": 1573295,
                "content": [
                    {
                        "username": "violetwang958",
                        "content": "\\'\\'\\'\\n\\nselect employee_id, count(employee_id) over (partition by team_id) as team_size\\nfrom Employee\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Shashankdaram026",
                        "content": "# MySQL query\\n\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1"
                    },
                    {
                        "username": "jbs100",
                        "content": "I think, In General, Windows functions are much faster than derived table or Common table expression. \\n\\nperformance are ranked as \\n1. Windows (analytical) Functions\\n2. Common Table Expression (CTE)\\n3. Derived Table (Sub Query)\\n\\n\\n--- Option 1:  Windows function\\n\\nSelect\\nemployee_id,\\ncount(team_id) over(partition by team_id) as team_size\\nfrom employee\\n\\n---Option 2: CTE\\nWith a as\\n    (select team_id, count(team_id) as team_size from employee group by team_id)\\n\\nselect \\nb.employee_id,\\na.team_size\\nfrom employee b\\njoin a on b.team_id = a.team_id\\n\\n\\n--- Option 3: Derived Table\\n\\nSelect\\na.employee_id,\\nteam_size\\nfrom employee a\\njoin (select team_id,count(team_id) as team_size from employee group by team_id) b\\non a.team_id = b.team_id\\n"
                    },
                    {
                        "username": "BorisLin53",
                        "content": "\\nselect e.employee_id, count(e.employee_id) as team_size\\nfrom Employee e\\nleft join Employee em\\non e.team_id = em.team_id \\ngroup by e.employee_id"
                    },
                    {
                        "username": "tianshu3",
                        "content": "Why group by having couldn\\'t be used??\\n\\nI tried few different method, but all of them are failed.\\n\\n1.SELECT employee_id, team_id AS team_size FROM employee\\nGROUP BY team_id HAVING COUNT(team_id)\\n\\n2. SELECT employee_id, COUNT(DISTINCT(team_id) AS team_size FROM employee\\n\\nHow could I distinguish when should I use partition by insteand of group by?"
                    },
                    {
                        "username": "yujiajin3",
                        "content": "with temp as (SELECT team_id, COUNT() as team_size FROM Employee\\n                GROUP BY team_id) \\nSELECT e.employee_id, temp.team_size FROM temp\\nRIGHT JOIN Employee e\\nON e.team_id = temp.team_id"
                    },
                    {
                        "username": "akhilesh2186",
                        "content": "Basically we need to count the employees against each team and then assign that as Team Size against each employee.\\n\\n/* Write your PL/SQL query statement below */\\nselect employee_id ,\\ncount(distinct employee_id) over (partition by team_id) team_size \\nfrom Employee;"
                    },
                    {
                        "username": "ravi_teja2",
                        "content": "select e1.employee_id, \\ncount(e1.team_id) as team_size \\nfrom \\nEmployee e1,Employee e2\\nwhere e1.team_id = e2.team_id\\ngroup by 1\\norder by 1;"
                    },
                    {
                        "username": "dolong2110",
                        "content": "```\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1\\n```"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "with cte as (\\n    select  team_id, count(team_id) team_size from employee group by team_id \\n)\\nselect employee_id, team_size from employee join \\ncte using (team_id)\\n"
                    }
                ]
            },
            {
                "id": 1775060,
                "content": [
                    {
                        "username": "violetwang958",
                        "content": "\\'\\'\\'\\n\\nselect employee_id, count(employee_id) over (partition by team_id) as team_size\\nfrom Employee\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Shashankdaram026",
                        "content": "# MySQL query\\n\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1"
                    },
                    {
                        "username": "jbs100",
                        "content": "I think, In General, Windows functions are much faster than derived table or Common table expression. \\n\\nperformance are ranked as \\n1. Windows (analytical) Functions\\n2. Common Table Expression (CTE)\\n3. Derived Table (Sub Query)\\n\\n\\n--- Option 1:  Windows function\\n\\nSelect\\nemployee_id,\\ncount(team_id) over(partition by team_id) as team_size\\nfrom employee\\n\\n---Option 2: CTE\\nWith a as\\n    (select team_id, count(team_id) as team_size from employee group by team_id)\\n\\nselect \\nb.employee_id,\\na.team_size\\nfrom employee b\\njoin a on b.team_id = a.team_id\\n\\n\\n--- Option 3: Derived Table\\n\\nSelect\\na.employee_id,\\nteam_size\\nfrom employee a\\njoin (select team_id,count(team_id) as team_size from employee group by team_id) b\\non a.team_id = b.team_id\\n"
                    },
                    {
                        "username": "BorisLin53",
                        "content": "\\nselect e.employee_id, count(e.employee_id) as team_size\\nfrom Employee e\\nleft join Employee em\\non e.team_id = em.team_id \\ngroup by e.employee_id"
                    },
                    {
                        "username": "tianshu3",
                        "content": "Why group by having couldn\\'t be used??\\n\\nI tried few different method, but all of them are failed.\\n\\n1.SELECT employee_id, team_id AS team_size FROM employee\\nGROUP BY team_id HAVING COUNT(team_id)\\n\\n2. SELECT employee_id, COUNT(DISTINCT(team_id) AS team_size FROM employee\\n\\nHow could I distinguish when should I use partition by insteand of group by?"
                    },
                    {
                        "username": "yujiajin3",
                        "content": "with temp as (SELECT team_id, COUNT() as team_size FROM Employee\\n                GROUP BY team_id) \\nSELECT e.employee_id, temp.team_size FROM temp\\nRIGHT JOIN Employee e\\nON e.team_id = temp.team_id"
                    },
                    {
                        "username": "akhilesh2186",
                        "content": "Basically we need to count the employees against each team and then assign that as Team Size against each employee.\\n\\n/* Write your PL/SQL query statement below */\\nselect employee_id ,\\ncount(distinct employee_id) over (partition by team_id) team_size \\nfrom Employee;"
                    },
                    {
                        "username": "ravi_teja2",
                        "content": "select e1.employee_id, \\ncount(e1.team_id) as team_size \\nfrom \\nEmployee e1,Employee e2\\nwhere e1.team_id = e2.team_id\\ngroup by 1\\norder by 1;"
                    },
                    {
                        "username": "dolong2110",
                        "content": "```\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1\\n```"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "with cte as (\\n    select  team_id, count(team_id) team_size from employee group by team_id \\n)\\nselect employee_id, team_size from employee join \\ncte using (team_id)\\n"
                    }
                ]
            },
            {
                "id": 1711703,
                "content": [
                    {
                        "username": "violetwang958",
                        "content": "\\'\\'\\'\\n\\nselect employee_id, count(employee_id) over (partition by team_id) as team_size\\nfrom Employee\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Shashankdaram026",
                        "content": "# MySQL query\\n\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1"
                    },
                    {
                        "username": "jbs100",
                        "content": "I think, In General, Windows functions are much faster than derived table or Common table expression. \\n\\nperformance are ranked as \\n1. Windows (analytical) Functions\\n2. Common Table Expression (CTE)\\n3. Derived Table (Sub Query)\\n\\n\\n--- Option 1:  Windows function\\n\\nSelect\\nemployee_id,\\ncount(team_id) over(partition by team_id) as team_size\\nfrom employee\\n\\n---Option 2: CTE\\nWith a as\\n    (select team_id, count(team_id) as team_size from employee group by team_id)\\n\\nselect \\nb.employee_id,\\na.team_size\\nfrom employee b\\njoin a on b.team_id = a.team_id\\n\\n\\n--- Option 3: Derived Table\\n\\nSelect\\na.employee_id,\\nteam_size\\nfrom employee a\\njoin (select team_id,count(team_id) as team_size from employee group by team_id) b\\non a.team_id = b.team_id\\n"
                    },
                    {
                        "username": "BorisLin53",
                        "content": "\\nselect e.employee_id, count(e.employee_id) as team_size\\nfrom Employee e\\nleft join Employee em\\non e.team_id = em.team_id \\ngroup by e.employee_id"
                    },
                    {
                        "username": "tianshu3",
                        "content": "Why group by having couldn\\'t be used??\\n\\nI tried few different method, but all of them are failed.\\n\\n1.SELECT employee_id, team_id AS team_size FROM employee\\nGROUP BY team_id HAVING COUNT(team_id)\\n\\n2. SELECT employee_id, COUNT(DISTINCT(team_id) AS team_size FROM employee\\n\\nHow could I distinguish when should I use partition by insteand of group by?"
                    },
                    {
                        "username": "yujiajin3",
                        "content": "with temp as (SELECT team_id, COUNT() as team_size FROM Employee\\n                GROUP BY team_id) \\nSELECT e.employee_id, temp.team_size FROM temp\\nRIGHT JOIN Employee e\\nON e.team_id = temp.team_id"
                    },
                    {
                        "username": "akhilesh2186",
                        "content": "Basically we need to count the employees against each team and then assign that as Team Size against each employee.\\n\\n/* Write your PL/SQL query statement below */\\nselect employee_id ,\\ncount(distinct employee_id) over (partition by team_id) team_size \\nfrom Employee;"
                    },
                    {
                        "username": "ravi_teja2",
                        "content": "select e1.employee_id, \\ncount(e1.team_id) as team_size \\nfrom \\nEmployee e1,Employee e2\\nwhere e1.team_id = e2.team_id\\ngroup by 1\\norder by 1;"
                    },
                    {
                        "username": "dolong2110",
                        "content": "```\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1\\n```"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "with cte as (\\n    select  team_id, count(team_id) team_size from employee group by team_id \\n)\\nselect employee_id, team_size from employee join \\ncte using (team_id)\\n"
                    }
                ]
            },
            {
                "id": 1640002,
                "content": [
                    {
                        "username": "violetwang958",
                        "content": "\\'\\'\\'\\n\\nselect employee_id, count(employee_id) over (partition by team_id) as team_size\\nfrom Employee\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Shashankdaram026",
                        "content": "# MySQL query\\n\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1"
                    },
                    {
                        "username": "jbs100",
                        "content": "I think, In General, Windows functions are much faster than derived table or Common table expression. \\n\\nperformance are ranked as \\n1. Windows (analytical) Functions\\n2. Common Table Expression (CTE)\\n3. Derived Table (Sub Query)\\n\\n\\n--- Option 1:  Windows function\\n\\nSelect\\nemployee_id,\\ncount(team_id) over(partition by team_id) as team_size\\nfrom employee\\n\\n---Option 2: CTE\\nWith a as\\n    (select team_id, count(team_id) as team_size from employee group by team_id)\\n\\nselect \\nb.employee_id,\\na.team_size\\nfrom employee b\\njoin a on b.team_id = a.team_id\\n\\n\\n--- Option 3: Derived Table\\n\\nSelect\\na.employee_id,\\nteam_size\\nfrom employee a\\njoin (select team_id,count(team_id) as team_size from employee group by team_id) b\\non a.team_id = b.team_id\\n"
                    },
                    {
                        "username": "BorisLin53",
                        "content": "\\nselect e.employee_id, count(e.employee_id) as team_size\\nfrom Employee e\\nleft join Employee em\\non e.team_id = em.team_id \\ngroup by e.employee_id"
                    },
                    {
                        "username": "tianshu3",
                        "content": "Why group by having couldn\\'t be used??\\n\\nI tried few different method, but all of them are failed.\\n\\n1.SELECT employee_id, team_id AS team_size FROM employee\\nGROUP BY team_id HAVING COUNT(team_id)\\n\\n2. SELECT employee_id, COUNT(DISTINCT(team_id) AS team_size FROM employee\\n\\nHow could I distinguish when should I use partition by insteand of group by?"
                    },
                    {
                        "username": "yujiajin3",
                        "content": "with temp as (SELECT team_id, COUNT() as team_size FROM Employee\\n                GROUP BY team_id) \\nSELECT e.employee_id, temp.team_size FROM temp\\nRIGHT JOIN Employee e\\nON e.team_id = temp.team_id"
                    },
                    {
                        "username": "akhilesh2186",
                        "content": "Basically we need to count the employees against each team and then assign that as Team Size against each employee.\\n\\n/* Write your PL/SQL query statement below */\\nselect employee_id ,\\ncount(distinct employee_id) over (partition by team_id) team_size \\nfrom Employee;"
                    },
                    {
                        "username": "ravi_teja2",
                        "content": "select e1.employee_id, \\ncount(e1.team_id) as team_size \\nfrom \\nEmployee e1,Employee e2\\nwhere e1.team_id = e2.team_id\\ngroup by 1\\norder by 1;"
                    },
                    {
                        "username": "dolong2110",
                        "content": "```\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1\\n```"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "with cte as (\\n    select  team_id, count(team_id) team_size from employee group by team_id \\n)\\nselect employee_id, team_size from employee join \\ncte using (team_id)\\n"
                    }
                ]
            },
            {
                "id": 1575252,
                "content": [
                    {
                        "username": "violetwang958",
                        "content": "\\'\\'\\'\\n\\nselect employee_id, count(employee_id) over (partition by team_id) as team_size\\nfrom Employee\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Shashankdaram026",
                        "content": "# MySQL query\\n\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1"
                    },
                    {
                        "username": "jbs100",
                        "content": "I think, In General, Windows functions are much faster than derived table or Common table expression. \\n\\nperformance are ranked as \\n1. Windows (analytical) Functions\\n2. Common Table Expression (CTE)\\n3. Derived Table (Sub Query)\\n\\n\\n--- Option 1:  Windows function\\n\\nSelect\\nemployee_id,\\ncount(team_id) over(partition by team_id) as team_size\\nfrom employee\\n\\n---Option 2: CTE\\nWith a as\\n    (select team_id, count(team_id) as team_size from employee group by team_id)\\n\\nselect \\nb.employee_id,\\na.team_size\\nfrom employee b\\njoin a on b.team_id = a.team_id\\n\\n\\n--- Option 3: Derived Table\\n\\nSelect\\na.employee_id,\\nteam_size\\nfrom employee a\\njoin (select team_id,count(team_id) as team_size from employee group by team_id) b\\non a.team_id = b.team_id\\n"
                    },
                    {
                        "username": "BorisLin53",
                        "content": "\\nselect e.employee_id, count(e.employee_id) as team_size\\nfrom Employee e\\nleft join Employee em\\non e.team_id = em.team_id \\ngroup by e.employee_id"
                    },
                    {
                        "username": "tianshu3",
                        "content": "Why group by having couldn\\'t be used??\\n\\nI tried few different method, but all of them are failed.\\n\\n1.SELECT employee_id, team_id AS team_size FROM employee\\nGROUP BY team_id HAVING COUNT(team_id)\\n\\n2. SELECT employee_id, COUNT(DISTINCT(team_id) AS team_size FROM employee\\n\\nHow could I distinguish when should I use partition by insteand of group by?"
                    },
                    {
                        "username": "yujiajin3",
                        "content": "with temp as (SELECT team_id, COUNT() as team_size FROM Employee\\n                GROUP BY team_id) \\nSELECT e.employee_id, temp.team_size FROM temp\\nRIGHT JOIN Employee e\\nON e.team_id = temp.team_id"
                    },
                    {
                        "username": "akhilesh2186",
                        "content": "Basically we need to count the employees against each team and then assign that as Team Size against each employee.\\n\\n/* Write your PL/SQL query statement below */\\nselect employee_id ,\\ncount(distinct employee_id) over (partition by team_id) team_size \\nfrom Employee;"
                    },
                    {
                        "username": "ravi_teja2",
                        "content": "select e1.employee_id, \\ncount(e1.team_id) as team_size \\nfrom \\nEmployee e1,Employee e2\\nwhere e1.team_id = e2.team_id\\ngroup by 1\\norder by 1;"
                    },
                    {
                        "username": "dolong2110",
                        "content": "```\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1\\n```"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "with cte as (\\n    select  team_id, count(team_id) team_size from employee group by team_id \\n)\\nselect employee_id, team_size from employee join \\ncte using (team_id)\\n"
                    }
                ]
            },
            {
                "id": 1566922,
                "content": [
                    {
                        "username": "violetwang958",
                        "content": "\\'\\'\\'\\n\\nselect employee_id, count(employee_id) over (partition by team_id) as team_size\\nfrom Employee\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Shashankdaram026",
                        "content": "# MySQL query\\n\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1"
                    },
                    {
                        "username": "jbs100",
                        "content": "I think, In General, Windows functions are much faster than derived table or Common table expression. \\n\\nperformance are ranked as \\n1. Windows (analytical) Functions\\n2. Common Table Expression (CTE)\\n3. Derived Table (Sub Query)\\n\\n\\n--- Option 1:  Windows function\\n\\nSelect\\nemployee_id,\\ncount(team_id) over(partition by team_id) as team_size\\nfrom employee\\n\\n---Option 2: CTE\\nWith a as\\n    (select team_id, count(team_id) as team_size from employee group by team_id)\\n\\nselect \\nb.employee_id,\\na.team_size\\nfrom employee b\\njoin a on b.team_id = a.team_id\\n\\n\\n--- Option 3: Derived Table\\n\\nSelect\\na.employee_id,\\nteam_size\\nfrom employee a\\njoin (select team_id,count(team_id) as team_size from employee group by team_id) b\\non a.team_id = b.team_id\\n"
                    },
                    {
                        "username": "BorisLin53",
                        "content": "\\nselect e.employee_id, count(e.employee_id) as team_size\\nfrom Employee e\\nleft join Employee em\\non e.team_id = em.team_id \\ngroup by e.employee_id"
                    },
                    {
                        "username": "tianshu3",
                        "content": "Why group by having couldn\\'t be used??\\n\\nI tried few different method, but all of them are failed.\\n\\n1.SELECT employee_id, team_id AS team_size FROM employee\\nGROUP BY team_id HAVING COUNT(team_id)\\n\\n2. SELECT employee_id, COUNT(DISTINCT(team_id) AS team_size FROM employee\\n\\nHow could I distinguish when should I use partition by insteand of group by?"
                    },
                    {
                        "username": "yujiajin3",
                        "content": "with temp as (SELECT team_id, COUNT() as team_size FROM Employee\\n                GROUP BY team_id) \\nSELECT e.employee_id, temp.team_size FROM temp\\nRIGHT JOIN Employee e\\nON e.team_id = temp.team_id"
                    },
                    {
                        "username": "akhilesh2186",
                        "content": "Basically we need to count the employees against each team and then assign that as Team Size against each employee.\\n\\n/* Write your PL/SQL query statement below */\\nselect employee_id ,\\ncount(distinct employee_id) over (partition by team_id) team_size \\nfrom Employee;"
                    },
                    {
                        "username": "ravi_teja2",
                        "content": "select e1.employee_id, \\ncount(e1.team_id) as team_size \\nfrom \\nEmployee e1,Employee e2\\nwhere e1.team_id = e2.team_id\\ngroup by 1\\norder by 1;"
                    },
                    {
                        "username": "dolong2110",
                        "content": "```\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1\\n```"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "with cte as (\\n    select  team_id, count(team_id) team_size from employee group by team_id \\n)\\nselect employee_id, team_size from employee join \\ncte using (team_id)\\n"
                    }
                ]
            },
            {
                "id": 1574298,
                "content": [
                    {
                        "username": "violetwang958",
                        "content": "\\'\\'\\'\\n\\nselect employee_id, count(employee_id) over (partition by team_id) as team_size\\nfrom Employee\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Shashankdaram026",
                        "content": "# MySQL query\\n\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1"
                    },
                    {
                        "username": "jbs100",
                        "content": "I think, In General, Windows functions are much faster than derived table or Common table expression. \\n\\nperformance are ranked as \\n1. Windows (analytical) Functions\\n2. Common Table Expression (CTE)\\n3. Derived Table (Sub Query)\\n\\n\\n--- Option 1:  Windows function\\n\\nSelect\\nemployee_id,\\ncount(team_id) over(partition by team_id) as team_size\\nfrom employee\\n\\n---Option 2: CTE\\nWith a as\\n    (select team_id, count(team_id) as team_size from employee group by team_id)\\n\\nselect \\nb.employee_id,\\na.team_size\\nfrom employee b\\njoin a on b.team_id = a.team_id\\n\\n\\n--- Option 3: Derived Table\\n\\nSelect\\na.employee_id,\\nteam_size\\nfrom employee a\\njoin (select team_id,count(team_id) as team_size from employee group by team_id) b\\non a.team_id = b.team_id\\n"
                    },
                    {
                        "username": "BorisLin53",
                        "content": "\\nselect e.employee_id, count(e.employee_id) as team_size\\nfrom Employee e\\nleft join Employee em\\non e.team_id = em.team_id \\ngroup by e.employee_id"
                    },
                    {
                        "username": "tianshu3",
                        "content": "Why group by having couldn\\'t be used??\\n\\nI tried few different method, but all of them are failed.\\n\\n1.SELECT employee_id, team_id AS team_size FROM employee\\nGROUP BY team_id HAVING COUNT(team_id)\\n\\n2. SELECT employee_id, COUNT(DISTINCT(team_id) AS team_size FROM employee\\n\\nHow could I distinguish when should I use partition by insteand of group by?"
                    },
                    {
                        "username": "yujiajin3",
                        "content": "with temp as (SELECT team_id, COUNT() as team_size FROM Employee\\n                GROUP BY team_id) \\nSELECT e.employee_id, temp.team_size FROM temp\\nRIGHT JOIN Employee e\\nON e.team_id = temp.team_id"
                    },
                    {
                        "username": "akhilesh2186",
                        "content": "Basically we need to count the employees against each team and then assign that as Team Size against each employee.\\n\\n/* Write your PL/SQL query statement below */\\nselect employee_id ,\\ncount(distinct employee_id) over (partition by team_id) team_size \\nfrom Employee;"
                    },
                    {
                        "username": "ravi_teja2",
                        "content": "select e1.employee_id, \\ncount(e1.team_id) as team_size \\nfrom \\nEmployee e1,Employee e2\\nwhere e1.team_id = e2.team_id\\ngroup by 1\\norder by 1;"
                    },
                    {
                        "username": "dolong2110",
                        "content": "```\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1\\n```"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "with cte as (\\n    select  team_id, count(team_id) team_size from employee group by team_id \\n)\\nselect employee_id, team_size from employee join \\ncte using (team_id)\\n"
                    }
                ]
            },
            {
                "id": 1573448,
                "content": [
                    {
                        "username": "violetwang958",
                        "content": "\\'\\'\\'\\n\\nselect employee_id, count(employee_id) over (partition by team_id) as team_size\\nfrom Employee\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Shashankdaram026",
                        "content": "# MySQL query\\n\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1"
                    },
                    {
                        "username": "jbs100",
                        "content": "I think, In General, Windows functions are much faster than derived table or Common table expression. \\n\\nperformance are ranked as \\n1. Windows (analytical) Functions\\n2. Common Table Expression (CTE)\\n3. Derived Table (Sub Query)\\n\\n\\n--- Option 1:  Windows function\\n\\nSelect\\nemployee_id,\\ncount(team_id) over(partition by team_id) as team_size\\nfrom employee\\n\\n---Option 2: CTE\\nWith a as\\n    (select team_id, count(team_id) as team_size from employee group by team_id)\\n\\nselect \\nb.employee_id,\\na.team_size\\nfrom employee b\\njoin a on b.team_id = a.team_id\\n\\n\\n--- Option 3: Derived Table\\n\\nSelect\\na.employee_id,\\nteam_size\\nfrom employee a\\njoin (select team_id,count(team_id) as team_size from employee group by team_id) b\\non a.team_id = b.team_id\\n"
                    },
                    {
                        "username": "BorisLin53",
                        "content": "\\nselect e.employee_id, count(e.employee_id) as team_size\\nfrom Employee e\\nleft join Employee em\\non e.team_id = em.team_id \\ngroup by e.employee_id"
                    },
                    {
                        "username": "tianshu3",
                        "content": "Why group by having couldn\\'t be used??\\n\\nI tried few different method, but all of them are failed.\\n\\n1.SELECT employee_id, team_id AS team_size FROM employee\\nGROUP BY team_id HAVING COUNT(team_id)\\n\\n2. SELECT employee_id, COUNT(DISTINCT(team_id) AS team_size FROM employee\\n\\nHow could I distinguish when should I use partition by insteand of group by?"
                    },
                    {
                        "username": "yujiajin3",
                        "content": "with temp as (SELECT team_id, COUNT() as team_size FROM Employee\\n                GROUP BY team_id) \\nSELECT e.employee_id, temp.team_size FROM temp\\nRIGHT JOIN Employee e\\nON e.team_id = temp.team_id"
                    },
                    {
                        "username": "akhilesh2186",
                        "content": "Basically we need to count the employees against each team and then assign that as Team Size against each employee.\\n\\n/* Write your PL/SQL query statement below */\\nselect employee_id ,\\ncount(distinct employee_id) over (partition by team_id) team_size \\nfrom Employee;"
                    },
                    {
                        "username": "ravi_teja2",
                        "content": "select e1.employee_id, \\ncount(e1.team_id) as team_size \\nfrom \\nEmployee e1,Employee e2\\nwhere e1.team_id = e2.team_id\\ngroup by 1\\norder by 1;"
                    },
                    {
                        "username": "dolong2110",
                        "content": "```\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1\\n```"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "with cte as (\\n    select  team_id, count(team_id) team_size from employee group by team_id \\n)\\nselect employee_id, team_size from employee join \\ncte using (team_id)\\n"
                    }
                ]
            },
            {
                "id": 1575205,
                "content": [
                    {
                        "username": "violetwang958",
                        "content": "\\'\\'\\'\\n\\nselect employee_id, count(employee_id) over (partition by team_id) as team_size\\nfrom Employee\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Shashankdaram026",
                        "content": "# MySQL query\\n\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1"
                    },
                    {
                        "username": "jbs100",
                        "content": "I think, In General, Windows functions are much faster than derived table or Common table expression. \\n\\nperformance are ranked as \\n1. Windows (analytical) Functions\\n2. Common Table Expression (CTE)\\n3. Derived Table (Sub Query)\\n\\n\\n--- Option 1:  Windows function\\n\\nSelect\\nemployee_id,\\ncount(team_id) over(partition by team_id) as team_size\\nfrom employee\\n\\n---Option 2: CTE\\nWith a as\\n    (select team_id, count(team_id) as team_size from employee group by team_id)\\n\\nselect \\nb.employee_id,\\na.team_size\\nfrom employee b\\njoin a on b.team_id = a.team_id\\n\\n\\n--- Option 3: Derived Table\\n\\nSelect\\na.employee_id,\\nteam_size\\nfrom employee a\\njoin (select team_id,count(team_id) as team_size from employee group by team_id) b\\non a.team_id = b.team_id\\n"
                    },
                    {
                        "username": "BorisLin53",
                        "content": "\\nselect e.employee_id, count(e.employee_id) as team_size\\nfrom Employee e\\nleft join Employee em\\non e.team_id = em.team_id \\ngroup by e.employee_id"
                    },
                    {
                        "username": "tianshu3",
                        "content": "Why group by having couldn\\'t be used??\\n\\nI tried few different method, but all of them are failed.\\n\\n1.SELECT employee_id, team_id AS team_size FROM employee\\nGROUP BY team_id HAVING COUNT(team_id)\\n\\n2. SELECT employee_id, COUNT(DISTINCT(team_id) AS team_size FROM employee\\n\\nHow could I distinguish when should I use partition by insteand of group by?"
                    },
                    {
                        "username": "yujiajin3",
                        "content": "with temp as (SELECT team_id, COUNT() as team_size FROM Employee\\n                GROUP BY team_id) \\nSELECT e.employee_id, temp.team_size FROM temp\\nRIGHT JOIN Employee e\\nON e.team_id = temp.team_id"
                    },
                    {
                        "username": "akhilesh2186",
                        "content": "Basically we need to count the employees against each team and then assign that as Team Size against each employee.\\n\\n/* Write your PL/SQL query statement below */\\nselect employee_id ,\\ncount(distinct employee_id) over (partition by team_id) team_size \\nfrom Employee;"
                    },
                    {
                        "username": "ravi_teja2",
                        "content": "select e1.employee_id, \\ncount(e1.team_id) as team_size \\nfrom \\nEmployee e1,Employee e2\\nwhere e1.team_id = e2.team_id\\ngroup by 1\\norder by 1;"
                    },
                    {
                        "username": "dolong2110",
                        "content": "```\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1\\n```"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "with cte as (\\n    select  team_id, count(team_id) team_size from employee group by team_id \\n)\\nselect employee_id, team_size from employee join \\ncte using (team_id)\\n"
                    }
                ]
            },
            {
                "id": 1574625,
                "content": [
                    {
                        "username": "violetwang958",
                        "content": "\\'\\'\\'\\n\\nselect employee_id, count(employee_id) over (partition by team_id) as team_size\\nfrom Employee\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Shashankdaram026",
                        "content": "# MySQL query\\n\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1"
                    },
                    {
                        "username": "jbs100",
                        "content": "I think, In General, Windows functions are much faster than derived table or Common table expression. \\n\\nperformance are ranked as \\n1. Windows (analytical) Functions\\n2. Common Table Expression (CTE)\\n3. Derived Table (Sub Query)\\n\\n\\n--- Option 1:  Windows function\\n\\nSelect\\nemployee_id,\\ncount(team_id) over(partition by team_id) as team_size\\nfrom employee\\n\\n---Option 2: CTE\\nWith a as\\n    (select team_id, count(team_id) as team_size from employee group by team_id)\\n\\nselect \\nb.employee_id,\\na.team_size\\nfrom employee b\\njoin a on b.team_id = a.team_id\\n\\n\\n--- Option 3: Derived Table\\n\\nSelect\\na.employee_id,\\nteam_size\\nfrom employee a\\njoin (select team_id,count(team_id) as team_size from employee group by team_id) b\\non a.team_id = b.team_id\\n"
                    },
                    {
                        "username": "BorisLin53",
                        "content": "\\nselect e.employee_id, count(e.employee_id) as team_size\\nfrom Employee e\\nleft join Employee em\\non e.team_id = em.team_id \\ngroup by e.employee_id"
                    },
                    {
                        "username": "tianshu3",
                        "content": "Why group by having couldn\\'t be used??\\n\\nI tried few different method, but all of them are failed.\\n\\n1.SELECT employee_id, team_id AS team_size FROM employee\\nGROUP BY team_id HAVING COUNT(team_id)\\n\\n2. SELECT employee_id, COUNT(DISTINCT(team_id) AS team_size FROM employee\\n\\nHow could I distinguish when should I use partition by insteand of group by?"
                    },
                    {
                        "username": "yujiajin3",
                        "content": "with temp as (SELECT team_id, COUNT() as team_size FROM Employee\\n                GROUP BY team_id) \\nSELECT e.employee_id, temp.team_size FROM temp\\nRIGHT JOIN Employee e\\nON e.team_id = temp.team_id"
                    },
                    {
                        "username": "akhilesh2186",
                        "content": "Basically we need to count the employees against each team and then assign that as Team Size against each employee.\\n\\n/* Write your PL/SQL query statement below */\\nselect employee_id ,\\ncount(distinct employee_id) over (partition by team_id) team_size \\nfrom Employee;"
                    },
                    {
                        "username": "ravi_teja2",
                        "content": "select e1.employee_id, \\ncount(e1.team_id) as team_size \\nfrom \\nEmployee e1,Employee e2\\nwhere e1.team_id = e2.team_id\\ngroup by 1\\norder by 1;"
                    },
                    {
                        "username": "dolong2110",
                        "content": "```\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1\\n```"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "with cte as (\\n    select  team_id, count(team_id) team_size from employee group by team_id \\n)\\nselect employee_id, team_size from employee join \\ncte using (team_id)\\n"
                    }
                ]
            },
            {
                "id": 1573295,
                "content": [
                    {
                        "username": "violetwang958",
                        "content": "\\'\\'\\'\\n\\nselect employee_id, count(employee_id) over (partition by team_id) as team_size\\nfrom Employee\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Shashankdaram026",
                        "content": "# MySQL query\\n\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1"
                    },
                    {
                        "username": "jbs100",
                        "content": "I think, In General, Windows functions are much faster than derived table or Common table expression. \\n\\nperformance are ranked as \\n1. Windows (analytical) Functions\\n2. Common Table Expression (CTE)\\n3. Derived Table (Sub Query)\\n\\n\\n--- Option 1:  Windows function\\n\\nSelect\\nemployee_id,\\ncount(team_id) over(partition by team_id) as team_size\\nfrom employee\\n\\n---Option 2: CTE\\nWith a as\\n    (select team_id, count(team_id) as team_size from employee group by team_id)\\n\\nselect \\nb.employee_id,\\na.team_size\\nfrom employee b\\njoin a on b.team_id = a.team_id\\n\\n\\n--- Option 3: Derived Table\\n\\nSelect\\na.employee_id,\\nteam_size\\nfrom employee a\\njoin (select team_id,count(team_id) as team_size from employee group by team_id) b\\non a.team_id = b.team_id\\n"
                    },
                    {
                        "username": "BorisLin53",
                        "content": "\\nselect e.employee_id, count(e.employee_id) as team_size\\nfrom Employee e\\nleft join Employee em\\non e.team_id = em.team_id \\ngroup by e.employee_id"
                    },
                    {
                        "username": "tianshu3",
                        "content": "Why group by having couldn\\'t be used??\\n\\nI tried few different method, but all of them are failed.\\n\\n1.SELECT employee_id, team_id AS team_size FROM employee\\nGROUP BY team_id HAVING COUNT(team_id)\\n\\n2. SELECT employee_id, COUNT(DISTINCT(team_id) AS team_size FROM employee\\n\\nHow could I distinguish when should I use partition by insteand of group by?"
                    },
                    {
                        "username": "yujiajin3",
                        "content": "with temp as (SELECT team_id, COUNT() as team_size FROM Employee\\n                GROUP BY team_id) \\nSELECT e.employee_id, temp.team_size FROM temp\\nRIGHT JOIN Employee e\\nON e.team_id = temp.team_id"
                    },
                    {
                        "username": "akhilesh2186",
                        "content": "Basically we need to count the employees against each team and then assign that as Team Size against each employee.\\n\\n/* Write your PL/SQL query statement below */\\nselect employee_id ,\\ncount(distinct employee_id) over (partition by team_id) team_size \\nfrom Employee;"
                    },
                    {
                        "username": "ravi_teja2",
                        "content": "select e1.employee_id, \\ncount(e1.team_id) as team_size \\nfrom \\nEmployee e1,Employee e2\\nwhere e1.team_id = e2.team_id\\ngroup by 1\\norder by 1;"
                    },
                    {
                        "username": "dolong2110",
                        "content": "```\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1\\n```"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "with cte as (\\n    select  team_id, count(team_id) team_size from employee group by team_id \\n)\\nselect employee_id, team_size from employee join \\ncte using (team_id)\\n"
                    }
                ]
            },
            {
                "id": 1775060,
                "content": [
                    {
                        "username": "violetwang958",
                        "content": "\\'\\'\\'\\n\\nselect employee_id, count(employee_id) over (partition by team_id) as team_size\\nfrom Employee\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Shashankdaram026",
                        "content": "# MySQL query\\n\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1"
                    },
                    {
                        "username": "jbs100",
                        "content": "I think, In General, Windows functions are much faster than derived table or Common table expression. \\n\\nperformance are ranked as \\n1. Windows (analytical) Functions\\n2. Common Table Expression (CTE)\\n3. Derived Table (Sub Query)\\n\\n\\n--- Option 1:  Windows function\\n\\nSelect\\nemployee_id,\\ncount(team_id) over(partition by team_id) as team_size\\nfrom employee\\n\\n---Option 2: CTE\\nWith a as\\n    (select team_id, count(team_id) as team_size from employee group by team_id)\\n\\nselect \\nb.employee_id,\\na.team_size\\nfrom employee b\\njoin a on b.team_id = a.team_id\\n\\n\\n--- Option 3: Derived Table\\n\\nSelect\\na.employee_id,\\nteam_size\\nfrom employee a\\njoin (select team_id,count(team_id) as team_size from employee group by team_id) b\\non a.team_id = b.team_id\\n"
                    },
                    {
                        "username": "BorisLin53",
                        "content": "\\nselect e.employee_id, count(e.employee_id) as team_size\\nfrom Employee e\\nleft join Employee em\\non e.team_id = em.team_id \\ngroup by e.employee_id"
                    },
                    {
                        "username": "tianshu3",
                        "content": "Why group by having couldn\\'t be used??\\n\\nI tried few different method, but all of them are failed.\\n\\n1.SELECT employee_id, team_id AS team_size FROM employee\\nGROUP BY team_id HAVING COUNT(team_id)\\n\\n2. SELECT employee_id, COUNT(DISTINCT(team_id) AS team_size FROM employee\\n\\nHow could I distinguish when should I use partition by insteand of group by?"
                    },
                    {
                        "username": "yujiajin3",
                        "content": "with temp as (SELECT team_id, COUNT() as team_size FROM Employee\\n                GROUP BY team_id) \\nSELECT e.employee_id, temp.team_size FROM temp\\nRIGHT JOIN Employee e\\nON e.team_id = temp.team_id"
                    },
                    {
                        "username": "akhilesh2186",
                        "content": "Basically we need to count the employees against each team and then assign that as Team Size against each employee.\\n\\n/* Write your PL/SQL query statement below */\\nselect employee_id ,\\ncount(distinct employee_id) over (partition by team_id) team_size \\nfrom Employee;"
                    },
                    {
                        "username": "ravi_teja2",
                        "content": "select e1.employee_id, \\ncount(e1.team_id) as team_size \\nfrom \\nEmployee e1,Employee e2\\nwhere e1.team_id = e2.team_id\\ngroup by 1\\norder by 1;"
                    },
                    {
                        "username": "dolong2110",
                        "content": "```\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1\\n```"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "with cte as (\\n    select  team_id, count(team_id) team_size from employee group by team_id \\n)\\nselect employee_id, team_size from employee join \\ncte using (team_id)\\n"
                    }
                ]
            },
            {
                "id": 1711703,
                "content": [
                    {
                        "username": "violetwang958",
                        "content": "\\'\\'\\'\\n\\nselect employee_id, count(employee_id) over (partition by team_id) as team_size\\nfrom Employee\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Shashankdaram026",
                        "content": "# MySQL query\\n\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1"
                    },
                    {
                        "username": "jbs100",
                        "content": "I think, In General, Windows functions are much faster than derived table or Common table expression. \\n\\nperformance are ranked as \\n1. Windows (analytical) Functions\\n2. Common Table Expression (CTE)\\n3. Derived Table (Sub Query)\\n\\n\\n--- Option 1:  Windows function\\n\\nSelect\\nemployee_id,\\ncount(team_id) over(partition by team_id) as team_size\\nfrom employee\\n\\n---Option 2: CTE\\nWith a as\\n    (select team_id, count(team_id) as team_size from employee group by team_id)\\n\\nselect \\nb.employee_id,\\na.team_size\\nfrom employee b\\njoin a on b.team_id = a.team_id\\n\\n\\n--- Option 3: Derived Table\\n\\nSelect\\na.employee_id,\\nteam_size\\nfrom employee a\\njoin (select team_id,count(team_id) as team_size from employee group by team_id) b\\non a.team_id = b.team_id\\n"
                    },
                    {
                        "username": "BorisLin53",
                        "content": "\\nselect e.employee_id, count(e.employee_id) as team_size\\nfrom Employee e\\nleft join Employee em\\non e.team_id = em.team_id \\ngroup by e.employee_id"
                    },
                    {
                        "username": "tianshu3",
                        "content": "Why group by having couldn\\'t be used??\\n\\nI tried few different method, but all of them are failed.\\n\\n1.SELECT employee_id, team_id AS team_size FROM employee\\nGROUP BY team_id HAVING COUNT(team_id)\\n\\n2. SELECT employee_id, COUNT(DISTINCT(team_id) AS team_size FROM employee\\n\\nHow could I distinguish when should I use partition by insteand of group by?"
                    },
                    {
                        "username": "yujiajin3",
                        "content": "with temp as (SELECT team_id, COUNT() as team_size FROM Employee\\n                GROUP BY team_id) \\nSELECT e.employee_id, temp.team_size FROM temp\\nRIGHT JOIN Employee e\\nON e.team_id = temp.team_id"
                    },
                    {
                        "username": "akhilesh2186",
                        "content": "Basically we need to count the employees against each team and then assign that as Team Size against each employee.\\n\\n/* Write your PL/SQL query statement below */\\nselect employee_id ,\\ncount(distinct employee_id) over (partition by team_id) team_size \\nfrom Employee;"
                    },
                    {
                        "username": "ravi_teja2",
                        "content": "select e1.employee_id, \\ncount(e1.team_id) as team_size \\nfrom \\nEmployee e1,Employee e2\\nwhere e1.team_id = e2.team_id\\ngroup by 1\\norder by 1;"
                    },
                    {
                        "username": "dolong2110",
                        "content": "```\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1\\n```"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "with cte as (\\n    select  team_id, count(team_id) team_size from employee group by team_id \\n)\\nselect employee_id, team_size from employee join \\ncte using (team_id)\\n"
                    }
                ]
            },
            {
                "id": 1640002,
                "content": [
                    {
                        "username": "violetwang958",
                        "content": "\\'\\'\\'\\n\\nselect employee_id, count(employee_id) over (partition by team_id) as team_size\\nfrom Employee\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Shashankdaram026",
                        "content": "# MySQL query\\n\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1"
                    },
                    {
                        "username": "jbs100",
                        "content": "I think, In General, Windows functions are much faster than derived table or Common table expression. \\n\\nperformance are ranked as \\n1. Windows (analytical) Functions\\n2. Common Table Expression (CTE)\\n3. Derived Table (Sub Query)\\n\\n\\n--- Option 1:  Windows function\\n\\nSelect\\nemployee_id,\\ncount(team_id) over(partition by team_id) as team_size\\nfrom employee\\n\\n---Option 2: CTE\\nWith a as\\n    (select team_id, count(team_id) as team_size from employee group by team_id)\\n\\nselect \\nb.employee_id,\\na.team_size\\nfrom employee b\\njoin a on b.team_id = a.team_id\\n\\n\\n--- Option 3: Derived Table\\n\\nSelect\\na.employee_id,\\nteam_size\\nfrom employee a\\njoin (select team_id,count(team_id) as team_size from employee group by team_id) b\\non a.team_id = b.team_id\\n"
                    },
                    {
                        "username": "BorisLin53",
                        "content": "\\nselect e.employee_id, count(e.employee_id) as team_size\\nfrom Employee e\\nleft join Employee em\\non e.team_id = em.team_id \\ngroup by e.employee_id"
                    },
                    {
                        "username": "tianshu3",
                        "content": "Why group by having couldn\\'t be used??\\n\\nI tried few different method, but all of them are failed.\\n\\n1.SELECT employee_id, team_id AS team_size FROM employee\\nGROUP BY team_id HAVING COUNT(team_id)\\n\\n2. SELECT employee_id, COUNT(DISTINCT(team_id) AS team_size FROM employee\\n\\nHow could I distinguish when should I use partition by insteand of group by?"
                    },
                    {
                        "username": "yujiajin3",
                        "content": "with temp as (SELECT team_id, COUNT() as team_size FROM Employee\\n                GROUP BY team_id) \\nSELECT e.employee_id, temp.team_size FROM temp\\nRIGHT JOIN Employee e\\nON e.team_id = temp.team_id"
                    },
                    {
                        "username": "akhilesh2186",
                        "content": "Basically we need to count the employees against each team and then assign that as Team Size against each employee.\\n\\n/* Write your PL/SQL query statement below */\\nselect employee_id ,\\ncount(distinct employee_id) over (partition by team_id) team_size \\nfrom Employee;"
                    },
                    {
                        "username": "ravi_teja2",
                        "content": "select e1.employee_id, \\ncount(e1.team_id) as team_size \\nfrom \\nEmployee e1,Employee e2\\nwhere e1.team_id = e2.team_id\\ngroup by 1\\norder by 1;"
                    },
                    {
                        "username": "dolong2110",
                        "content": "```\\nselect e1.employee_id,(select count(e.team_id)\\nfrom employee e\\nwhere e.team_id=e1.team_id\\ngroup by team_id) as team_size\\nfrom employee e1\\n```"
                    },
                    {
                        "username": "hpareek1995",
                        "content": "with cte as (\\n    select  team_id, count(team_id) team_size from employee group by team_id \\n)\\nselect employee_id, team_size from employee join \\ncte using (team_id)\\n"
                    }
                ]
            }
        ]
    }
]