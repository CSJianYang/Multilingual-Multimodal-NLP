[
    {
        "title": "Sum Multiples",
        "question_content": "Given a positive integer n, find the sum of all integers in the range [1, n] inclusive that are divisible by 3, 5, or 7.\nReturn an integer denoting the sum of all numbers in the given range satisfying&nbsp;the constraint.\n&nbsp;\nExample 1:\n\nInput: n = 7\nOutput: 21\nExplanation: Numbers in the range [1, 7] that are divisible by 3, 5, or 7 are 3, 5, 6, 7. The sum of these numbers is 21.\n\nExample 2:\n\nInput: n = 10\nOutput: 40\nExplanation: Numbers in the range [1, 10] that are divisible by 3, 5, or 7 are 3, 5, 6, 7, 9, 10. The sum of these numbers is 40.\n\nExample 3:\n\nInput: n = 9\nOutput: 30\nExplanation: Numbers in the range [1, 9] that are divisible by 3, 5, or 7 are 3, 5, 6, 7, 9. The sum of these numbers is 30.\n\n&nbsp;\nConstraints:\n\n\t1 <= n <= 103",
        "solutions": [
            {
                "id": 3445711,
                "title": "kotlin-o-1-with-diagram",
                "content": "# Complexity\\n- Time complexity: $$O(1)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Approach\\nIf we only have `3` and `5` to deal with:\\n\\n![image.png](https://assets.leetcode.com/users/images/3512a254-098d-4464-9ce4-f3d998a64279_1682222461.427102.png)\\n\\nAdding `7` to the picture:\\n\\n![image.png](https://assets.leetcode.com/users/images/42d1bab0-abd1-48fd-b5ba-4b92e5fc8dc6_1682222495.4449778.png)\\n\\n# Code\\n```\\nclass Solution {\\n  fun sumOfMultiples(n: Int): Int {\\n    fun sumOfDivisible(value: Int): Int {\\n      val low = value\\n      val high = n / value * value\\n      val count = (high + value - low) / value\\n      return (low + high) * count / 2\\n    }\\n    return sumOfDivisible(3) + sumOfDivisible(5) + sumOfDivisible(7) -\\n        (sumOfDivisible(15) + sumOfDivisible(35) + sumOfDivisible(21)) +\\n        sumOfDivisible(105)\\n  }\\n}\\n```",
                "solutionTags": [
                    "Kotlin"
                ],
                "code": "```\\nclass Solution {\\n  fun sumOfMultiples(n: Int): Int {\\n    fun sumOfDivisible(value: Int): Int {\\n      val low = value\\n      val high = n / value * value\\n      val count = (high + value - low) / value\\n      return (low + high) * count / 2\\n    }\\n    return sumOfDivisible(3) + sumOfDivisible(5) + sumOfDivisible(7) -\\n        (sumOfDivisible(15) + sumOfDivisible(35) + sumOfDivisible(21)) +\\n        sumOfDivisible(105)\\n  }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3446041,
                "title": "greedy-o-n-o-1-solution-very-simple-easy-to-understand",
                "content": "\\n# Solution 1: \\nSimple and strate forward bruteforce. space O(1) & time complexity O(n)\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i = 1; i <= n; ++i){\\n            if(i%3 == 0 || i%5 == 0|| i%7 == 0) sum += i;\\n        }\\n        return sum;\\n    }\\n};\\n```\\n\\n# Solution 2: \\nAlternate solution with O(1) space & O(1) time complexity:\\n1. To get sum of all factors on k upto n, we can have this formula (sum of Arithmatic progression): k * (n/k) * (n/k + 1) / 2\\nIf you woder how we get above formula then check this out :\\n   k + 2k + 3k + 4k + ..... xk = k (1 + 2 + 3 + 4 ... x) = k( (x )( x + 1)/2 )\\n   where x is the largest value of (xk <= n) => (x <= n/k)\\n\\n2. Above formula is implemented on cal funtion.\\n3. To get the ans, we can sum :\\n    sum all the factor of 3 + sum of all the factors of 5 + sum of all the factors of 7 - sum of all the factor of 3 * 5 - sum of all the factors of 5 * 7 - sum of all the factors of 3 * 7 + sum of all the factors of 3 * 5 * 7.\\n```\\nclass Solution {\\npublic:\\n    int cal(int n, int k){ return k *(n/k)*(n/k+1)/2; }\\n    int sumOfMultiples(int n) {\\n        return cal(n, 3) + cal(n, 5) + cal(n, 7) - cal(n, 3*5) - cal(n, 5*7) - cal(n, 3*7) + cal(n, 3*5*7);\\n    }\\n};\\n```\\n<b>Here is an article of my recent interview experience - A Journey to FAANG Company, I recomand you to go through this to know which all resources I have used & how I cracked interview at Amazon:\\nhttps://leetcode.com/discuss/interview-experience/3171859/Journey-to-a-FAANG-Company-Amazon-or-SDE2-(L5)-or-Bangalore-or-Oct-2022-Accepted",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i = 1; i <= n; ++i){\\n            if(i%3 == 0 || i%5 == 0|| i%7 == 0) sum += i;\\n        }\\n        return sum;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    int cal(int n, int k){ return k *(n/k)*(n/k+1)/2; }\\n    int sumOfMultiples(int n) {\\n        return cal(n, 3) + cal(n, 5) + cal(n, 7) - cal(n, 3*5) - cal(n, 5*7) - cal(n, 3*7) + cal(n, 3*5*7);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3446052,
                "title": "leetcode-the-hard-way-explained-line-by-line",
                "content": "```py\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        res = 0\\n\\t\\t#  iterate through the range 1 to n and \\n        for i in range(3, n + 1):\\n\\t\\t\\t# count numbers divisible by either 3, 5, or 7\\n            if i % 3 == 0 or i % 5 == 0 or i % 7 == 0:\\n                res += i\\n        return res\\n```\\n\\n```cpp\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int ans = 0;\\n\\t\\t//  iterate through the range 1 to n and \\n        for (int i = 3; i <= n; i++) {\\n\\t\\t\\t// count numbers divisible by either 3, 5, or 7\\n            if (i % 3 == 0 || i % 5 == 0 || i % 7 == 0) {\\n                ans += i;\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```\\n\\n```java\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n\\t\\t//  iterate through the range 1 to n and \\n        int ans = 0;\\n        for (int i = 3; i <= n; i++) {\\n\\t\\t\\t// count numbers divisible by either 3, 5, or 7\\n            if (i % 3 == 0 || i % 5 == 0 || i % 7 == 0) {\\n                ans += i;\\n            }\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python3"
                ],
                "code": "```py\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        res = 0\\n\\t\\t#  iterate through the range 1 to n and \\n        for i in range(3, n + 1):\\n\\t\\t\\t# count numbers divisible by either 3, 5, or 7\\n            if i % 3 == 0 or i % 5 == 0 or i % 7 == 0:\\n                res += i\\n        return res\\n```\n```cpp\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int ans = 0;\\n\\t\\t//  iterate through the range 1 to n and \\n        for (int i = 3; i <= n; i++) {\\n\\t\\t\\t// count numbers divisible by either 3, 5, or 7\\n            if (i % 3 == 0 || i % 5 == 0 || i % 7 == 0) {\\n                ans += i;\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```\n```java\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n\\t\\t//  iterate through the range 1 to n and \\n        int ans = 0;\\n        for (int i = 3; i <= n; i++) {\\n\\t\\t\\t// count numbers divisible by either 3, 5, or 7\\n            if (i % 3 == 0 || i % 5 == 0 || i % 7 == 0) {\\n                ans += i;\\n            }\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3446231,
                "title": "python-3-2-lines-just-draw-a-venn-diagram-t-m-100-51",
                "content": "You get to draw the Venn Diagram.\\n\\n\"*The secret of being a bore is to tell everything.*\"  --Voltaire\\n```\\ncclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n\\n        a, b, c, d, e, f, g = n//3, n//5, n//7, n//15, n//21, n//35, n//105\\n\\n        return (\\n                  3*a*(a+1)     #\\n                + 5*b*(b+1)     # <-- three venn circles\\n                + 7*c*(c+1)     # \\n\\n                - 15*d*(d+1)    #\\n                - 21*e*(e+1)    # <-- three venn lunes\\n                - 35*f*(f+1)    #\\n            \\n                + 105*g*(g+1)   # <-- one venn circular triangle \\n               )//2\\n```\\n[](http://)\\n\\n\\n\\nI could be wrong, but I think that time complexity is *O*(1) and space complexity is *O*(1).",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\ncclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n\\n        a, b, c, d, e, f, g = n//3, n//5, n//7, n//15, n//21, n//35, n//105\\n\\n        return (\\n                  3*a*(a+1)     #\\n                + 5*b*(b+1)     # <-- three venn circles\\n                + 7*c*(c+1)     # \\n\\n                - 15*d*(d+1)    #\\n                - 21*e*(e+1)    # <-- three venn lunes\\n                - 35*f*(f+1)    #\\n            \\n                + 105*g*(g+1)   # <-- one venn circular triangle \\n               )//2\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3446496,
                "title": "c-constant-time-do-all-the-work-at-compile-time",
                "content": "**TODO(heder): Insert cute cat meme to ask for up-votes. ;)**\\n\\n# Approach 1: do all the work at compile time\\nThe answer for a give $$n$$ never changes, hence we can precompute the answers at compile time.\\n\\n```cpp\\nnamespace {\\nconstexpr array<int, 1024> generate_som() {\\n    array<int, 1024> ans = {};\\n    int sum = 0;\\n    for (int i = 1; i < size(ans); ++i) {\\n        if (!(i % 3) || !(i % 5) || !(i % 7)) sum += i;\\n        ans[i] = sum;\\n    }\\n    return ans;\\n}\\n\\nconstexpr array<int, 1024> som = generate_som();\\n}  // namespace\\n\\nclass Solution {\\npublic:\\n    static int sumOfMultiples(int n) {\\n        return som[n];\\n    }\\n};\\n```\\n\\n**Complexity Analysis**\\n  * Time complexity is $$O(1)$$ as we are just doing a lookup\\n  * Space complexity is $$O(1)$$, this might be controversial though.\\n\\n# Approach 2: inclusion / exclusion principle\\nAnother constant time approach is to using the inclusion / exclusion principles, i.e. count all the number divisible by 3 in a range, which can be done in constant time, some for 5 and 7, and add them up. This this case we are over counting though, i.e. we count all the numbers twice that are divisible by 3 and 5, or 3 and 7, or 5 or 7, hence we need to subtract all the numbers divisible by 3 * 5, 3 * 7, and 5 * 7, but in this case we have subracted the numbers that are divisible by 3 * 5 * 7 to often, hence we need to add them again. This is known as inclusion / exclusion principle. There are a few other nice posts that discribe this solution in more detail.\\n\\n**Pro-Tips**\\n\\nI always have a header like this in my solutions. This speeds-up I/O:\\n\\n```cpp\\n// https://leetcode.com/problems/sum-multiples\\n// problem: 2652\\nstatic int fast_io = []() { std::ios::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr); return 0; }();\\n```\\n\\n_As always: Feedback, questions, and comments are welcome. Leaving an up-vote sparks joy! :)_\\n\\n**p.s. Join us on the [LeetCode The Hard Way Discord Server](https://discord.gg/hFUyVyWy2E)!**\\n",
                "solutionTags": [
                    "C"
                ],
                "code": "```cpp\\nnamespace {\\nconstexpr array<int, 1024> generate_som() {\\n    array<int, 1024> ans = {};\\n    int sum = 0;\\n    for (int i = 1; i < size(ans); ++i) {\\n        if (!(i % 3) || !(i % 5) || !(i % 7)) sum += i;\\n        ans[i] = sum;\\n    }\\n    return ans;\\n}\\n\\nconstexpr array<int, 1024> som = generate_som();\\n}  // namespace\\n\\nclass Solution {\\npublic:\\n    static int sumOfMultiples(int n) {\\n        return som[n];\\n    }\\n};\\n```\n```cpp\\n// https://leetcode.com/problems/sum-multiples\\n// problem: 2652\\nstatic int fast_io = []() { std::ios::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr); return 0; }();\\n```",
                "codeTag": "C++"
            },
            {
                "id": 3445710,
                "title": "simple-java-solution",
                "content": "\\n# Complexity\\n- Time complexity: $$O(n)$$\\n\\n- Space complexity: $$O(1)$$\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=1;i<=n;i++)\\n        {\\n            if(i%3==0 || i%5==0 || i%7==0)\\n            {\\n                sum+=i;\\n            }\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=1;i<=n;i++)\\n        {\\n            if(i%3==0 || i%5==0 || i%7==0)\\n            {\\n                sum+=i;\\n            }\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3445807,
                "title": "easy-solution-full-beginner-friendly",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n-> Plssssss Up Vote! -> \\uD83D\\uDE2D\\n\\n`Just Up Vote! -> get Up vote!`\\uD83D\\uDE42\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int ans = 0;\\n        for(int i = 1; i<=n; i++) if(i%3==0 || i%5==0 || i%7==0)  ans+=i;\\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int ans = 0;\\n        for(int i = 1; i<=n; i++) if(i%3==0 || i%5==0 || i%7==0)  ans+=i;\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3488452,
                "title": "python-go-easy-solution",
                "content": "\\n# Python\\n```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        sum = 0\\n        for i in range(1,n+1):\\n            if i%3 == 0 or i%5 == 0 or i%7 == 0:\\n                sum += i\\n        return sum\\n```\\n\\n# GO\\n```\\nfunc sumOfMultiples(n int) int {\\n    sum := 0\\n    i := 0\\n    for i <= n{\\n        if i%3 == 0 || i%5 == 0 || i%7 == 0 {\\n            sum += i\\n        }\\n        i++\\n    }\\n    return sum\\n}\\n```",
                "solutionTags": [
                    "Python3",
                    "Go"
                ],
                "code": "```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        sum = 0\\n        for i in range(1,n+1):\\n            if i%3 == 0 or i%5 == 0 or i%7 == 0:\\n                sum += i\\n        return sum\\n```\n```\\nfunc sumOfMultiples(n int) int {\\n    sum := 0\\n    i := 0\\n    for i <= n{\\n        if i%3 == 0 || i%5 == 0 || i%7 == 0 {\\n            sum += i\\n        }\\n        i++\\n    }\\n    return sum\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3536232,
                "title": "easy-java",
                "content": "# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int result = 0;\\n\\n        for (int i = 1; i <= n; i++) {\\n            if (i % 3 == 0 || i % 5 == 0 || i % 7 == 0) {\\n                result += i;\\n            }\\n        }\\n\\n        return result;        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int result = 0;\\n\\n        for (int i = 1; i <= n; i++) {\\n            if (i % 3 == 0 || i % 5 == 0 || i % 7 == 0) {\\n                result += i;\\n            }\\n        }\\n\\n        return result;        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3535625,
                "title": "c-easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: const\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for (int i = 1; i <= n; i++) {\\n            if (i % 3 == 0) sum += i;\\n            else if (i % 5 == 0) sum += i;\\n            else if (i % 7 == 0) sum += i;\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for (int i = 1; i <= n; i++) {\\n            if (i % 3 == 0) sum += i;\\n            else if (i % 5 == 0) sum += i;\\n            else if (i % 7 == 0) sum += i;\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3469237,
                "title": "easy-code-beginner-friendly-no-formula",
                "content": "\\n\\n# Approach\\nBrute Force approach.\\nCheck of each value till n and add it to our our sum(ans).\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0){\\n                sum+=i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0){\\n                sum+=i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3449980,
                "title": "easiest-solution-in-java-python-c-with-explanation",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nThe function works by iterating through all the numbers from 1 to n, checking if each number is a multiple of **3, 5, or 7** using the **modulo operator (%)**, and adding the number to a variable mul if it is a multiple. Finally, the function returns the value of mul, which is the sum of all the multiples.\\n\\n**For example:** \\n>If n is 20, the function will iterate through the numbers 1 to 20 and add up all the multiples of 3, 5, or 7, which are:\\n\\n>3 + 5 + 6 + 7 + 9 + 10 + 12 + 14 + 15 + 18 + 20 = 119\\n\\n>So the function will return 119 as the sum of all the multiples of 3, 5, or 7 up to 20.\\n\\n# Complexity\\n- Time complexity: $$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n\\n# Code\\n```Java []\\n    public int sumOfMultiples(int n) {\\n        int mul = 0;\\n        for(int i=1; i<=n; i++){\\n            if(i%3==0 || i%5==0 || i%7==0){\\n                mul+=i;\\n            }\\n        }\\n        return mul;\\n    }\\n```\\n```python []\\ndef sumOfMultiples(n):\\n    mul = 0\\n    for i in range(1, n+1):\\n        if i%3==0 or i%5==0 or i%7==0:\\n            mul+=i\\n    return mul\\n```\\n```C++ []\\nint sumOfMultiples(int n) {\\n    int mul = 0;\\n    for(int i=1; i<=n; i++){\\n        if(i%3==0 || i%5==0 || i%7==0){\\n            mul+=i;\\n        }\\n    }\\n    return mul;\\n}\\n\\n```\\n\\n# Support me by Upvoting me............\\n\\n\\n",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python",
                    "Python3"
                ],
                "code": "```Java []\\n    public int sumOfMultiples(int n) {\\n        int mul = 0;\\n        for(int i=1; i<=n; i++){\\n            if(i%3==0 || i%5==0 || i%7==0){\\n                mul+=i;\\n            }\\n        }\\n        return mul;\\n    }\\n```\n```python []\\ndef sumOfMultiples(n):\\n    mul = 0\\n    for i in range(1, n+1):\\n        if i%3==0 or i%5==0 or i%7==0:\\n            mul+=i\\n    return mul\\n```\n```C++ []\\nint sumOfMultiples(int n) {\\n    int mul = 0;\\n    for(int i=1; i<=n; i++){\\n        if(i%3==0 || i%5==0 || i%7==0){\\n            mul+=i;\\n        }\\n    }\\n    return mul;\\n}\\n\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3445875,
                "title": "easy-brute-force-c-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nConstraints are low so we can apply brute force.\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n1. Run a loop from i==1 to i==n and if i is divisible by 3 or 5 or 7 then increase ans by i.\\n2. return the ans.\\n\\n# Complexity\\n- Time complexity: O(N)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int ans=0;\\n        for(int i=1;i<=n;i++)\\n        {\\n            if(i%3==0 || i%5==0 || i%7==0) ans+=i;\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int ans=0;\\n        for(int i=1;i<=n;i++)\\n        {\\n            if(i%3==0 || i%5==0 || i%7==0) ans+=i;\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3480901,
                "title": "my-sumofmultiples",
                "content": "<!-- # Intuition -->\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n<!-- # Approach -->\\n<!-- Describe your approach to solving the problem. -->\\n\\n<!-- # Complexity\\n- Time complexity: -->\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n<!-- - Space complexity: -->\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar sumOfMultiples = function (n) {\\n  let sum = 0;\\n\\n  for (let i = 1; i <= n; i++) {\\n    if (i % 3 == 0 || i % 5 == 0 || i % 7 == 0) {\\n      sum += i;\\n    }\\n  }\\n\\n  return sum;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar sumOfMultiples = function (n) {\\n  let sum = 0;\\n\\n  for (let i = 1; i <= n; i++) {\\n    if (i % 3 == 0 || i % 5 == 0 || i % 7 == 0) {\\n      sum += i;\\n    }\\n  }\\n\\n  return sum;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3461961,
                "title": "c-constant-time-with-gauss-formula-0ms-5-9mb",
                "content": "Brute forcing our way out of this problem might seem tempting, but it is not very rewarding and I am a firm believe that as an engineer one should always at least *try* to do better.\\n\\nAnd better we can do, if we notice that if we know that the range `[1, n]` has `x == n / 3` multiples of, say, `3`, then we know that they will all be in the range `[3, x]`, creating a summation like `3 + 6 + 9 + ... + (x - 1) * 3 + x * 3`, or, in other words: `(1 + 2 + 3 + ... + (x - 1) + x) * 3`.\\n\\nBut, hey, we know how to compute that, with Gauss\\' formula for summations from `1` to `x`: `(x + 1) * x / 2`.\\n\\nSo, we can initially try to solve our problem `return`ing the sum of:\\n* all the multiples of `3` up to `n`: `gauss(n / 3) * 3`;\\n* all the multiples of `5` up to `n`: `gauss(n / 5) * 5`;\\n* all the multiples of `7` up to `n`: `gauss(n / 7) * 7`.\\n\\nAs easy as that? Not really, because now we are counting twice all the multiples of any two among `3`, `5` or `7`.\\n\\nWe can easily fix that, subtracting the summation of all the numbers matching this criteria, so we will reduce our result by:\\n* all the multiples of `3 * 5` up to `n`: `gauss(n / 15) * 15`;\\n* all the multiples of `3 * 7` up to `n`: `gauss(n / 21) * 21`;\\n* all the multiples of `5 * 7` up to `n`: `gauss(n / 35) * 35`.\\n\\nDone?\\n\\nAlmost, one last little adjustement: now we are removing twice all the multiples of `3`, `5` and `7`, so we will just have to add:\\n* all the multiples of `3 * 5 * 7` up to `n`: `gauss(n / 105) * 105`.\\n\\n# Complexity\\n- Time complexity: $$O(1)$$\\n- Space complexity: $$O(1)$$\\n\\n# Code\\n```cpp\\nclass Solution {\\n    int gauss(int x) {\\n        return (x + 1) * x >> 1;\\n    }\\npublic:\\n    int sumOfMultiples(int n) {\\n        return gauss(n / 3) * 3 + gauss(n / 5) * 5 + gauss(n / 7) * 7\\n            - gauss(n / 15) * 15 - gauss(n / 21) * 21 - gauss(n / 35) * 35\\n            + gauss(n / 105) * 105;\\n    }\\n};\\n```\\n\\nMicro-optimisation of the same logic, computing only when necessary:\\n\\n```cpp\\nclass Solution {\\n    int gauss(int x) {\\n        return (x + 1) * x >> 1;\\n    }\\npublic:\\n    int sumOfMultiples(int n) {\\n        // support variables\\n        int res = gauss(n / 3) * 3 + gauss(n / 5) * 5 + gauss(n / 7) * 7;\\n        // discounting multiples of two factors\\n        if (n > 14) res -= gauss(n / 15) * 15 + gauss(n / 21) * 21 + gauss(n / 35) * 35;\\n        // adjusting for multiples of all 3\\n        if (n > 104) res += gauss(n / 105) * 105;\\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math",
                    "Number Theory"
                ],
                "code": "```cpp\\nclass Solution {\\n    int gauss(int x) {\\n        return (x + 1) * x >> 1;\\n    }\\npublic:\\n    int sumOfMultiples(int n) {\\n        return gauss(n / 3) * 3 + gauss(n / 5) * 5 + gauss(n / 7) * 7\\n            - gauss(n / 15) * 15 - gauss(n / 21) * 21 - gauss(n / 35) * 35\\n            + gauss(n / 105) * 105;\\n    }\\n};\\n```\n```cpp\\nclass Solution {\\n    int gauss(int x) {\\n        return (x + 1) * x >> 1;\\n    }\\npublic:\\n    int sumOfMultiples(int n) {\\n        // support variables\\n        int res = gauss(n / 3) * 3 + gauss(n / 5) * 5 + gauss(n / 7) * 7;\\n        // discounting multiples of two factors\\n        if (n > 14) res -= gauss(n / 15) * 15 + gauss(n / 21) * 21 + gauss(n / 35) * 35;\\n        // adjusting for multiples of all 3\\n        if (n > 104) res += gauss(n / 105) * 105;\\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3446397,
                "title": "c-python-easy-o-n-solution",
                "content": "\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: $$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i = 1; i <= n; i++) {\\n            if(i % 3 == 0 || i % 5 == 0 || i % 7 == 0) {\\n                sum += i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```\\n\\n# Python / Python3\\n```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        sum = 0\\n        for i in range(1, n+1):\\n            if i % 3 == 0 or i % 5 == 0 or i % 7 == 0:\\n                sum += i\\n        return sum\\n```",
                "solutionTags": [
                    "C++",
                    "Python",
                    "Python3",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i = 1; i <= n; i++) {\\n            if(i % 3 == 0 || i % 5 == 0 || i % 7 == 0) {\\n                sum += i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```\n```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        sum = 0\\n        for i in range(1, n+1):\\n            if i % 3 == 0 or i % 5 == 0 or i % 7 == 0:\\n                sum += i\\n        return sum\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3445728,
                "title": "python-simple-python-solution",
                "content": "# If You like the Solution, Don\\'t Forget To UpVote Me, Please UpVote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 92 ms, faster than 33.33% of Python3 online submissions for Sum Multiples.\\n# Memory Usage: 13.9 MB, less than 22.22% of Python3 online submissions for Sum Multiples.\\n\\n\\tclass Solution:\\n\\t\\tdef sumOfMultiples(self, n: int) -> int:\\n\\n\\t\\t\\tresult = []\\n\\n\\t\\t\\tfor num in range(1 , n + 1):\\n\\n\\t\\t\\t\\tif num % 3 == 0 or num % 5 == 0 or num % 7 == 0:\\n\\t\\t\\t\\t\\tresult.append(num)\\n\\n\\t\\t\\treturn sum(result)\\n# Thank You \\uD83E\\uDD73\\u270C\\uD83D\\uDC4D",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "# If You like the Solution, Don\\'t Forget To UpVote Me, Please UpVote! \\uD83D\\uDD3C\\uD83D\\uDE4F\\n# Runtime: 92 ms, faster than 33.33% of Python3 online submissions for Sum Multiples.\\n# Memory Usage: 13.9 MB, less than 22.22% of Python3 online submissions for Sum Multiples.\\n\\n\\tclass Solution:\\n\\t\\tdef sumOfMultiples(self, n: int) -> int:\\n\\n\\t\\t\\tresult = []\\n\\n\\t\\t\\tfor num in range(1 , n + 1):\\n\\n\\t\\t\\t\\tif num % 3 == 0 or num % 5 == 0 or num % 7 == 0:\\n\\t\\t\\t\\t\\tresult.append(num)\\n\\n\\t\\t\\treturn sum(result)\\n# Thank You \\uD83E\\uDD73\\u270C\\uD83D\\uDC4D",
                "codeTag": "Java"
            },
            {
                "id": 3445689,
                "title": "java-5-lines",
                "content": "# Complexity\\n- Time complexity: $$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n  public int sumOfMultiples(int n) {\\n    var sum = 0;\\n    \\n    for (var i=3; i<=n; i++)\\n      if (i % 3 == 0 || i % 5 == 0 || i % 7 == 0)\\n        sum += i;\\n    \\n    return sum;\\n  }\\n}\\n```\\nIf you like my solution, pleaes upvote it!",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n  public int sumOfMultiples(int n) {\\n    var sum = 0;\\n    \\n    for (var i=3; i<=n; i++)\\n      if (i % 3 == 0 || i % 5 == 0 || i % 7 == 0)\\n        sum += i;\\n    \\n    return sum;\\n  }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3545594,
                "title": "java-seriously-beats-100-3-liner",
                "content": "\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int ans=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0) ans +=i;\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int ans=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0) ans +=i;\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3495564,
                "title": "c-math-easy-to-understnad",
                "content": "# Approach\\nIF NUM i IS DIVISIBLE BY 3,5 OR 7 INCREMENT ANS BY i where i in range[1,n]\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int ans = 0;\\n        for(int i = 3; i <= n; i++){\\n            if(((i%3)==0)||((i%5)==0)||((i%7)==0))ans += i;\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int ans = 0;\\n        for(int i = 3; i <= n; i++){\\n            if(((i%3)==0)||((i%5)==0)||((i%7)==0))ans += i;\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3478279,
                "title": "1-liner-c-100-faster",
                "content": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i =1 ; i <= n ; i++) if(i%3 == 0 or i %5 == 0 or i %7 == 0) sum += i;\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i =1 ; i <= n ; i++) if(i%3 == 0 or i %5 == 0 or i %7 == 0) sum += i;\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3450363,
                "title": "javascript-100-time-o-1-time-o-1-space-math",
                "content": "# Approach\\n\\n**We can compute the sum of numbers in range $$[0, n]$$ in $$O(1)$$ as $$n * (n + 1) / 2$$**\\n\\nSee a graphic proof below:\\n\\nImagine we are computing the sum of numbers in range $$[0, 4]$$. Each column (or row) in the figure below is one of the numbers. We need to know the total number of `*` in the figure.\\n\\n```\\n      *\\n    * *\\n  * * *\\n* * * *\\n```\\n\\nTo do this, we add one more figure on top of the old one (`0` this time) and end up with a quadrangle that is `n` columns and `n + 1` rows. Number of `*` in this figure is exactly half of the total number of `0` and `*`, which there are $$n * (n + 1)$$ of.\\n\\n```\\n0 0 0 0\\n0 0 0 *\\n0 0 * *\\n0 * * *\\n* * * *\\n```\\n\\n**We can also compute the sum of numbers divisible by any $$x$$ in range $$[0, n]$$ in $$O(1)$$ following a similar approach. It equals $$(n // x) * ((n // x) * x + x) / 2$$**\\n\\nImagine this time we are computing the sum of numbers divisible by $$2$$ in range $$[0, 4]$$. Now we are only interested in every second column in the figure below ($$n // x$$).\\n\\n```\\n      *\\n    0 *\\n  * 0 *\\n0 * 0 *\\n```\\n\\nDrop the columns that we don\\'t need and we have the following figure:\\n\\n```\\n  *\\n  *\\n* *\\n* *\\n```\\n\\nThe number of `*` in it can again be computed by making it into a quadrangle, and dividing it\\'s area by 2.\\n\\n```\\n0 0\\n0 0\\n0 *\\n0 *\\n* *\\n* *\\n```\\n\\nThe width of this quadrangle equals to the total number of columns we count, or `Math.floor(n / x)`.\\nThe height of it equals to the height of it\\'s lowest column (simply `x` given that $$x < n$$) plus the height of it\\'s hightest column, or `x * Math.floor(n / x)`. Therefore, the total number of `0` and `*` in the figure equals `Math.floor(n / x) * (x * Math.floor(n / x) + x)`, and exactly half of these are `*`.\\n\\n---\\n\\nKnowing this, we can compute the sum of numbers divisible by $$3$$, $$5$$, and $$7$$ in range $$[0, n]$$ by:\\n\\n1. Summing together the sums of numbers divisible by $$3$$, $$5$$ or $$7$$ in the range.\\n2. Substracting sum of numbers divisible by both $$3$$ and $$5$$ (since these numbers were counted twice in **step 1**). These would be the numbers divisible by $$3 * 5$$, or $$15$$.\\n3. Substracting sum of numbers divisible by both $$3$$ and $$7$$ (since these numbers were counted twice in **step 1**). These would be the numbers divisible by $$3 * 7$$, or $$21$$.\\n4. Substracting sum of numbers divisible by both $$5$$ and $$7$$ (since these numbers were counted twice in **step 1**). These would be the numbers divisible by $$5 * 7$$, or $$35$$.\\n5. Adding back the sum of numbers divisible by $$3$$, $$5$$ and $$7$$ (since these would have been added 3 times in **step 1**, then removed 3 times in **steps 2, 3 and 4**). These would be the numbers divisible by $$3 * 5 * 7$$, or $$105$$.\\n\\n```\\nfunction sumOfMultiples(n) {\\n    // Sum of numbers divisible by 3 in range [0, n]\\n    const sum3 = mulSum(n, 3);\\n    // Sum of numbers divisible by 5 in range [0, n]\\n    const sum5 = mulSum(n, 5);\\n    // Sum of numbers divisible by 7 in range [0, n]\\n    const sum7 = mulSum(n, 7);\\n\\n    // Sum of numbers divisible by 3 and 5 in range [0, n]\\n    const sum15 = mulSum(n, 3 * 5);\\n    // Sum of numbers divisible by 3 and 7 in range [0, n]\\n    const sum21 = mulSum(n, 3 * 7);\\n    // Sum of numbers divisible by 5 and 7 in range [0, n]\\n    const sum35 = mulSum(n, 5 * 7);\\n\\n    // Sum of numbers divisible by 3, 5 and 7 in range [0, n]\\n    const sum105 = mulSum(n, 3 * 5 * 7);\\n\\n    return sum3 + sum5 + sum7 - sum15 - sum21 - sum35 + sum105;\\n};\\n\\n// Computes sum of numbers divisible by x in range [0, n]\\nfunction mulSum(n, x) {\\n    const cnt = Math.floor(n / x);\\n    return cnt * (cnt * x + x) / 2;\\n}\\n```\\n\\n# Complexity\\n- Time complexity: $$O(1)$$\\n\\n- Space complexity: $$O(1)$$\\n",
                "solutionTags": [
                    "JavaScript",
                    "Math"
                ],
                "code": "```\\n      *\\n    * *\\n  * * *\\n* * * *\\n```\n```\\n0 0 0 0\\n0 0 0 *\\n0 0 * *\\n0 * * *\\n* * * *\\n```\n```\\n      *\\n    0 *\\n  * 0 *\\n0 * 0 *\\n```\n```\\n  *\\n  *\\n* *\\n* *\\n```\n```\\n0 0\\n0 0\\n0 *\\n0 *\\n* *\\n* *\\n```\n```\\nfunction sumOfMultiples(n) {\\n    // Sum of numbers divisible by 3 in range [0, n]\\n    const sum3 = mulSum(n, 3);\\n    // Sum of numbers divisible by 5 in range [0, n]\\n    const sum5 = mulSum(n, 5);\\n    // Sum of numbers divisible by 7 in range [0, n]\\n    const sum7 = mulSum(n, 7);\\n\\n    // Sum of numbers divisible by 3 and 5 in range [0, n]\\n    const sum15 = mulSum(n, 3 * 5);\\n    // Sum of numbers divisible by 3 and 7 in range [0, n]\\n    const sum21 = mulSum(n, 3 * 7);\\n    // Sum of numbers divisible by 5 and 7 in range [0, n]\\n    const sum35 = mulSum(n, 5 * 7);\\n\\n    // Sum of numbers divisible by 3, 5 and 7 in range [0, n]\\n    const sum105 = mulSum(n, 3 * 5 * 7);\\n\\n    return sum3 + sum5 + sum7 - sum15 - sum21 - sum35 + sum105;\\n};\\n\\n// Computes sum of numbers divisible by x in range [0, n]\\nfunction mulSum(n, x) {\\n    const cnt = Math.floor(n / x);\\n    return cnt * (cnt * x + x) / 2;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3449064,
                "title": "java-1-liner-explained",
                "content": "**Method 1:** Iteration\\n>**T/S:** O(n)/O(1)\\n```\\npublic int sumOfMultiples(int n) {\\n\\tvar sum = 0;\\n\\n\\tfor (var i = 3; i <= n; i++)\\n\\t\\tif (i % 3 == 0 || i % 5 == 0 || i % 7 == 0)\\n\\t\\t\\tsum += i;\\n\\n\\treturn sum;\\n}\\n```\\n**Version 2 of method 1:** 1 liner using streams\\n```\\npublic int sumOfMultiples(int n) {\\n\\treturn IntStream.rangeClosed(3, n)\\n\\t\\t\\t\\t\\t.filter(i -> i % 3 == 0 || i % 5 == 0 || i % 7 == 0)\\n\\t\\t\\t\\t\\t.sum();\\n}\\n```\\n**Method 2:** Arithmetic Progression \\n* Sum of an AP whose first term = a, common difference = a and number of terms = floor(n/a) is `a (n/a) (n/a + 1) / 2`\\n* This can be derived as follows:\\n\\t* S = a + 2a + ... + Ta = a (1 + 2 + ... + T) = aT(T + 1) / 2, where T = n / a\\n\\t* T = n / a because final term can at max be n = aT\\n>**T/S:** O(1)/O(1)\\n```\\npublic int sumOfMultiples(int n) {\\n\\treturn sum(n, 3) + sum(n, 5) + sum(n, 7) - sum(n, 15) - sum(n, 35) - sum(n, 21) + sum(n, 105);\\n}\\n\\nprivate int sum(int max, int firstTerm) {\\n\\treturn firstTerm * (max / firstTerm) * (max / firstTerm + 1) / 2;\\n}\\n```\\n***Please upvote if this helps***",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\npublic int sumOfMultiples(int n) {\\n\\tvar sum = 0;\\n\\n\\tfor (var i = 3; i <= n; i++)\\n\\t\\tif (i % 3 == 0 || i % 5 == 0 || i % 7 == 0)\\n\\t\\t\\tsum += i;\\n\\n\\treturn sum;\\n}\\n```\n```\\npublic int sumOfMultiples(int n) {\\n\\treturn IntStream.rangeClosed(3, n)\\n\\t\\t\\t\\t\\t.filter(i -> i % 3 == 0 || i % 5 == 0 || i % 7 == 0)\\n\\t\\t\\t\\t\\t.sum();\\n}\\n```\n```\\npublic int sumOfMultiples(int n) {\\n\\treturn sum(n, 3) + sum(n, 5) + sum(n, 7) - sum(n, 15) - sum(n, 35) - sum(n, 21) + sum(n, 105);\\n}\\n\\nprivate int sum(int max, int firstTerm) {\\n\\treturn firstTerm * (max / firstTerm) * (max / firstTerm + 1) / 2;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3447846,
                "title": "o-1-inclusion-exclusion-w-arithmetic-series",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(1), not the fastest when n <= 1000, but better for higher n\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        // Inclusion exclusion \\n        // Use arithmetic series (n(a1+an))/2 to get sum of all    \\n        // numbers divisible by d from d to n, \\n        // where d is the divsor, n is the last term divisible by d.\\n        // Ex: terms divisible by 5 to 24 = 5+10+15+20 \\n        // = (floor(24/5)*(5+24-24%5))/2 = (4*(5+20))/2 = 50\\n        int ans = 0;\\n        int n1 = n/3, n2 = n/5, n3 = n/7;\\n        int n4 = n/15, n5 = n/21, n6 = n/35;\\n        int n7 = n/105;\\n        // Add up all terms div by 3, 5, 7\\n        ans += (n1*(3+(n-n%3)))>>1;\\n        ans += (n2*(5+(n-n%5)))>>1;\\n        ans += (n3*(7+(n-n%7)))>>1;\\n        // lcm \\n        // Subtract up all terms div by 3&5, 3&7, 5&7,\\n        // Since you over-added them\\n        ans -= (n4*(15+(n-n%15)))>>1;\\n        ans -= (n5*(21+(n-n%21)))>>1;\\n        ans -= (n6*(35+(n-n%35)))>>1;\\n        // now, over subtraction!!\\n        // (You subtracted all numbers divisible by 3&5&7, so add them back.)\\n        ans += (n7*(105+(n-n%105)))>>1;\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        // Inclusion exclusion \\n        // Use arithmetic series (n(a1+an))/2 to get sum of all    \\n        // numbers divisible by d from d to n, \\n        // where d is the divsor, n is the last term divisible by d.\\n        // Ex: terms divisible by 5 to 24 = 5+10+15+20 \\n        // = (floor(24/5)*(5+24-24%5))/2 = (4*(5+20))/2 = 50\\n        int ans = 0;\\n        int n1 = n/3, n2 = n/5, n3 = n/7;\\n        int n4 = n/15, n5 = n/21, n6 = n/35;\\n        int n7 = n/105;\\n        // Add up all terms div by 3, 5, 7\\n        ans += (n1*(3+(n-n%3)))>>1;\\n        ans += (n2*(5+(n-n%5)))>>1;\\n        ans += (n3*(7+(n-n%7)))>>1;\\n        // lcm \\n        // Subtract up all terms div by 3&5, 3&7, 5&7,\\n        // Since you over-added them\\n        ans -= (n4*(15+(n-n%15)))>>1;\\n        ans -= (n5*(21+(n-n%21)))>>1;\\n        ans -= (n6*(35+(n-n%35)))>>1;\\n        // now, over subtraction!!\\n        // (You subtracted all numbers divisible by 3&5&7, so add them back.)\\n        ans += (n7*(105+(n-n%105)))>>1;\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3446856,
                "title": "cpp-o-1",
                "content": "\\nWe can use sum of AP to find the sum of the series. However there will be overcouting. To resolve that we Principle of Inclusion and Exclusion.\\n\\n```cpp\\nclass Solution {\\n    int sumOfTermsTillNDivisibleByX(int n,int x)\\n    {\\n        int numberOfTerms=n/x;\\n        return (numberOfTerms*(2*x+(numberOfTerms-1)*x))/2;\\n    }\\npublic:\\n    int sumOfMultiples(int n) {\\n        int ans=sumOfTermsTillNDivisibleByX(n,3)+sumOfTermsTillNDivisibleByX(n,5)+sumOfTermsTillNDivisibleByX(n,7)\\n                -sumOfTermsTillNDivisibleByX(n,21)-sumOfTermsTillNDivisibleByX(n,15)-sumOfTermsTillNDivisibleByX(n,35)\\n                +sumOfTermsTillNDivisibleByX(n,105);\\n        return ans;\\n    }\\n};`\\n```\\n\\nTime Complexity: **O(1)**\\nSpace Complexity **O(1)**\\n",
                "solutionTags": [],
                "code": "```cpp\\nclass Solution {\\n    int sumOfTermsTillNDivisibleByX(int n,int x)\\n    {\\n        int numberOfTerms=n/x;\\n        return (numberOfTerms*(2*x+(numberOfTerms-1)*x))/2;\\n    }\\npublic:\\n    int sumOfMultiples(int n) {\\n        int ans=sumOfTermsTillNDivisibleByX(n,3)+sumOfTermsTillNDivisibleByX(n,5)+sumOfTermsTillNDivisibleByX(n,7)\\n                -sumOfTermsTillNDivisibleByX(n,21)-sumOfTermsTillNDivisibleByX(n,15)-sumOfTermsTillNDivisibleByX(n,35)\\n                +sumOfTermsTillNDivisibleByX(n,105);\\n        return ans;\\n    }\\n};`\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3445724,
                "title": "easy-java-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0)\\n                sum+=i;\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0)\\n                sum+=i;\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3983241,
                "title": "easy-java-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int s=0;\\n        for(int i=1;i<=n;i++)\\n        {\\n            if(i%3==0 || i%5==0 || i%7==0)\\n            s = s+i;\\n        }\\n        return s;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int s=0;\\n        for(int i=1;i<=n;i++)\\n        {\\n            if(i%3==0 || i%5==0 || i%7==0)\\n            s = s+i;\\n        }\\n        return s;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3817145,
                "title": "o-1-set-overlapping-principle",
                "content": "# Approach\\n**TODO**\\n\\n# Time Complexity\\n**TODO**\\n\\n# Space complexity\\n**TODO**\\n\\n# Solution\\n``` swift\\nclass Solution {\\n    func sumOfMultiples(_ n: Int) -> Int {\\n        func sum(_ x: Int) -> Int { (n / x) * (n / x + 1) / 2 * x }\\n        return sum(3) + sum(5) + sum(7) - sum(15) - sum(21) - sum(35) + sum(105)\\n    }\\n}\\n\\n```",
                "solutionTags": [
                    "Swift"
                ],
                "code": "``` swift\\nclass Solution {\\n    func sumOfMultiples(_ n: Int) -> Int {\\n        func sum(_ x: Int) -> Int { (n / x) * (n / x + 1) / 2 * x }\\n        return sum(3) + sum(5) + sum(7) - sum(15) - sum(21) - sum(35) + sum(105)\\n    }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3699712,
                "title": "simple",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int s=0;\\n        for(int i=2; i<=n; i++)\\n        {\\n            if(i%3==0 || i%5==0 || i%7==0)\\n            s+=i;\\n        }\\n        return s;\\n    }\\n};\\n\\n    \\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int s=0;\\n        for(int i=2; i<=n; i++)\\n        {\\n            if(i%3==0 || i%5==0 || i%7==0)\\n            s+=i;\\n        }\\n        return s;\\n    }\\n};\\n\\n    \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3636913,
                "title": "simple-solution-please-upvote",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int ans=0;\\n        for(int i=1;i<=n;i++){\\n           if(i%3==0 || i%5==0 || i%7==0){\\n               ans+=i;\\n           }\\n        }\\n    return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int ans=0;\\n        for(int i=1;i<=n;i++){\\n           if(i%3==0 || i%5==0 || i%7==0){\\n               ans+=i;\\n           }\\n        }\\n    return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3612498,
                "title": "python3-one-line-solution",
                "content": "# Code\\n```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum([item for item in range(1,n+1) if item % 3 == 0 or item % 5 == 0 or item % 7 == 0])\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum([item for item in range(1,n+1) if item % 3 == 0 or item % 5 == 0 or item % 7 == 0])\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3534238,
                "title": "easy-java-solution",
                "content": "# Code\\n```\\nclass Solution \\n{\\n    public int sumOfMultiples(int n)\\n    {\\n        int sum = 0;\\n        for(int currentNum=1; currentNum <= n; currentNum++)\\n        {\\n            if(currentNum % 3 == 0 ||\\n                currentNum % 5 == 0 ||\\n                currentNum % 7 == 0){\\n                    sum += currentNum;\\n                }\\n        }\\n\\n        return sum;        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution \\n{\\n    public int sumOfMultiples(int n)\\n    {\\n        int sum = 0;\\n        for(int currentNum=1; currentNum <= n; currentNum++)\\n        {\\n            if(currentNum % 3 == 0 ||\\n                currentNum % 5 == 0 ||\\n                currentNum % 7 == 0){\\n                    sum += currentNum;\\n                }\\n        }\\n\\n        return sum;        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3516485,
                "title": "beginners-friendly-solution",
                "content": "\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n    add the only number if its completely divisible by 3,5,7\\n\\n# Complexity\\n- Time complexity: O(N)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        \\n        int sum=0;\\n\\n        for(int i=1;i<=n;i++)\\n            if(i%3==0 || i%5==0 || i%7==0) sum+=i;\\n            \\n    \\n        return sum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        \\n        int sum=0;\\n\\n        for(int i=1;i<=n;i++)\\n            if(i%3==0 || i%5==0 || i%7==0) sum+=i;\\n            \\n    \\n        return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3505979,
                "title": "a-deep-analysis-and-a-quick-approach-to-sieve-of-eratosthenes-c",
                "content": "# Intuition\\nThe code calculates the sum of all multiples of 3, 5, and 7 up to a given limit n.\\n\\nWhile the implementation in the code provided is not strictly a Sieve of Eratosthenes, it does share some similarities with the Sieve. The Sieve of Eratosthenes is an algorithm for finding all prime numbers up to a given limit, by iteratively marking multiples of each prime number. In a similar way, the code provided marks all multiples of 3, 5, and 7, and then calculates the sum of all marked numbers.\\n\\nThe intuition behind using the Sieve of Eratosthenes or a similar approach is that it allows us to quickly identify and mark all the numbers that satisfy a certain property (in this case, being a multiple of 3, 5, or 7). This is much more efficient than iterating over all the numbers up to the given limit and checking each one individually. By marking all multiples of a factor, we can reduce the number of values that need to be checked later on.\\n\\nUsing a Sieve-like approach also lends itself well to optimization. In this code, the shortlist function starts at the given factor and then iteratively adds the factor to each previous value until reaching the limit size. This approach avoids having to iterate over all values up to size and only considers the ones that are multiples of the given factor. Additionally, the sumOfMultiples function iterates over the marked values in the directory and sums them up, avoiding the need to check each value individually.\\n\\nOverall, the Sieve-like approach is a useful technique for efficiently finding and manipulating subsets of values in a given range. By marking values that satisfy a certain property, we can reduce the number of values that need to be checked later on, and optimize our algorithms for faster execution.\\n\\n# Approach\\nThe approach taken by the code is to use a vector of booleans to represent whether each number up to n is a multiple of 3, 5, or 7. The shortlist function is used to mark all multiples of a given factor up to n, and the sumOfMultiples function uses this information to calculate the sum of all marked numbers.\\n\\nSpecifically, shortlist takes a vector directory, a starting factor start, and a size size, and marks all multiples of start up to size in directory by setting their corresponding values to true. sumOfMultiples creates a directory vector of size n+1, marks all multiples of 3, 5, and 7 in the directory using shortlist, and then iterates over the directory to calculate the sum of all marked values.\\n\\n# Complexity\\n- Time complexity: The shortlist function has a time complexity of O(n/factor), where n is the size of the directory and factor is the starting factor. The sumOfMultiples function has a time complexity of O(n), since it iterates over all n values in the directory to calculate the sum. Therefore, the overall time complexity of the code is O(n).\\n\\n- Space complexity: The shortlist function creates a vector of size n, and the sumOfMultiples function creates a vector of size n+1. Therefore, the space complexity of the code is O(n).\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    void shortlist(vector<bool> &directory, int start, int size)\\n    {\\n        for (int factor = start; factor <= size; factor = start + factor)\\n        {\\n            directory[factor] = true;\\n        }\\n    }\\n    int sumOfMultiples(int n)\\n    {\\n        vector<bool> directory(n + 1, 0);\\n        shortlist(directory, 3, n);\\n        shortlist(directory, 7, n);\\n        shortlist(directory, 5, n);\\n        int sum = 0;\\n        for (int i = 1; i <= n; i++)\\n        {\\n            if (directory[i])\\n                sum += i;\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Array",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    void shortlist(vector<bool> &directory, int start, int size)\\n    {\\n        for (int factor = start; factor <= size; factor = start + factor)\\n        {\\n            directory[factor] = true;\\n        }\\n    }\\n    int sumOfMultiples(int n)\\n    {\\n        vector<bool> directory(n + 1, 0);\\n        shortlist(directory, 3, n);\\n        shortlist(directory, 7, n);\\n        shortlist(directory, 5, n);\\n        int sum = 0;\\n        for (int i = 1; i <= n; i++)\\n        {\\n            if (directory[i])\\n                sum += i;\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3499370,
                "title": "easy-solution-using-java",
                "content": "\\n\\n# Superb Logical Solution \\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n       int count=0;\\n       for(int i=2;i<=n;i++) {\\n           if(i%3==0||i%5==0||i%7==0){\\n            count+=i;\\n           }\\n       }\\n       return count; \\n}\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n       int count=0;\\n       for(int i=2;i<=n;i++) {\\n           if(i%3==0||i%5==0||i%7==0){\\n            count+=i;\\n           }\\n       }\\n       return count; \\n}\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3481817,
                "title": "sum-multiples-one-liner",
                "content": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        return ((n/3)*(3+(n/3)*3) + (n/5)*(5+(n/5)*5) + (n/7)*(7+(n/7)*7) - (n/15)*(15+(n/15)*15) - (n/35)*(35+(n/35)*35) -(n/21)*(21+(n/21)*21) + (n/105)*(105+(n/105)*105))/2;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        return ((n/3)*(3+(n/3)*3) + (n/5)*(5+(n/5)*5) + (n/7)*(7+(n/7)*7) - (n/15)*(15+(n/15)*15) - (n/35)*(35+(n/35)*35) -(n/21)*(21+(n/21)*21) + (n/105)*(105+(n/105)*105))/2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3467912,
                "title": "easy-to-understand-javascript-solution",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\nWe can simply iterate through the numbers from 1 to n and check each one of them to see if it is divisible by 3, 5, or 7. If it is, we add that number to the `sum` variable. In the end, we return `sum`.\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar sumOfMultiples = function(n) {\\n    let sum = 0;\\n\\n    for (let i = 0; i <= n; i++) {\\n        if (i % 3 === 0 || i % 5 === 0 || i % 7 === 0) {\\n            sum = sum + i;\\n        }\\n    }\\n\\n    return sum;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar sumOfMultiples = function(n) {\\n    let sum = 0;\\n\\n    for (let i = 0; i <= n; i++) {\\n        if (i % 3 === 0 || i % 5 === 0 || i % 7 === 0) {\\n            sum = sum + i;\\n        }\\n    }\\n\\n    return sum;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3459618,
                "title": "java-easy-solution-easy-approach",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nCheck All Contrain \\n\\n# Complexity\\n- Time complexity:   O(n)\\n\\n\\n- Space complexity:  O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum =0 ;\\n\\n        for(int i=1;i<=n;i++)\\n        {\\n            if(i % 3 == 0 || i % 7 ==0 || i % 5 == 0)\\n            {\\n                sum += i ;\\n            }\\n        }\\n        return sum;\\n    }\\n} \\n```",
                "solutionTags": [
                    "Java",
                    "Array",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum =0 ;\\n\\n        for(int i=1;i<=n;i++)\\n        {\\n            if(i % 3 == 0 || i % 7 ==0 || i % 5 == 0)\\n            {\\n                sum += i ;\\n            }\\n        }\\n        return sum;\\n    }\\n} \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3458490,
                "title": "super-fast-java-solution-returning-the-sum-of-numbers-constraints-obeyed",
                "content": "# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum = 0;\\n\\n        for(int i = 1; i <= n; i++){\\n            if(i % 3 == 0 || i % 5 == 0 || i % 7 == 0)\\n            sum += i;\\n        }\\n\\n        return sum;\\n    }\\n}\\n```\\nPlease upvote me it encourages me a lot!!",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum = 0;\\n\\n        for(int i = 1; i <= n; i++){\\n            if(i % 3 == 0 || i % 5 == 0 || i % 7 == 0)\\n            sum += i;\\n        }\\n\\n        return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3446086,
                "title": "c-easy-to-understand-one-pass",
                "content": "````\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int ans = 0;\\n        for(int i = 3; i <= n; i++){\\n            if(i%3==0||i%5==0||i%7==0){\\n                ans += i;\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n````",
                "solutionTags": [
                    "C++",
                    "C",
                    "Math"
                ],
                "code": "````\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int ans = 0;\\n        for(int i = 3; i <= n; i++){\\n            if(i%3==0||i%5==0||i%7==0){\\n                ans += i;\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3446027,
                "title": "javascript-2652-sum-multiples",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n\\n1\\n```\\nvar sumOfMultiples = function (n) {\\n    let s = 0; // sum\\n    for (let i = 1; i <= n; i++) {\\n        if (\\n            i % 3 == 0 || //\\n            i % 5 == 0 ||\\n            i % 7 == 0\\n        ) {\\n            s += i;\\n        }\\n    }\\n    return s;\\n};\\n```\\n\\n---\\n\\n**Contest**\\n- https://leetcode.com/contest/weekly-contest-342/ranking/67/\\n\\n**All Answers**\\n- **Q1** - https://leetcode.com/problems/calculate-delayed-arrival-time/solutions/3446023/javascript-2651-calculate-delayed-arrival-time/?orderBy=most_votes\\n- **Q2** - https://leetcode.com/problems/sum-multiples/solutions/3446027/javascript-2652-sum-multiples/?orderBy=most_votes\\n- **Q3** - https://leetcode.com/problems/sliding-subarray-beauty/solutions/3446035/javascript-2653-sliding-subarray-beauty/?orderBy=most_votes\\n- **Q4** - https://leetcode.com/problems/minimum-number-of-operations-to-make-all-array-elements-equal-to-1/solutions/3446411/javascript-2654-minimum-number-of-operations-to-make-all-array-elements-equal-to-1/?orderBy=most_votes\\n\\n---\\n\\n![image.png](https://assets.leetcode.com/users/images/37970e7b-b559-4aa9-834c-e178df5ddaa7_1682232917.7638698.png)\\n\\n---\\n",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar sumOfMultiples = function (n) {\\n    let s = 0; // sum\\n    for (let i = 1; i <= n; i++) {\\n        if (\\n            i % 3 == 0 || //\\n            i % 5 == 0 ||\\n            i % 7 == 0\\n        ) {\\n            s += i;\\n        }\\n    }\\n    return s;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3445896,
                "title": "perhaps-we-might-want-to-avoid-the-modulo-operation",
                "content": "We could use sieve-like approach.\\n\\n```cpp\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        vector<bool> sieve(n + 1);\\n        \\n        for (int i = 3; i <= n; i += 3)\\n            sieve[i] = true;\\n        \\n        for (int i = 5; i <= n; i += 5)\\n            sieve[i] = true;\\n        \\n        for (int i = 7; i <= n; i += 7)\\n            sieve[i] = true;\\n        \\n        int sum = 0;\\n        \\n        for (int i = 1; i <= n; ++i)\\n            if (sieve[i])\\n                sum += i;\\n        \\n        return sum;\\n    }\\n};\\n```\\n\\nOr we could use Inclusion\\u2013Exclusion Principle\\n\\n```cpp\\nclass Solution {\\n    int sum(int n, int d)\\n    {\\n        int l = 0;\\n        int h = n / d;\\n        int r = h * d;\\n\\n        return (l + r) * (h + 1) / 2;\\n    }\\n\\npublic:\\n    int sumOfMultiples(int n) {\\n        return sum(n, 3) + sum(n, 5) + sum(n, 7)\\n            - sum(n, 3 * 5) - sum(n, 3 * 7) - sum(n, 5 * 7)\\n            + sum(n, 3 * 5 * 7);\\n    }\\n};\\n```\\n",
                "solutionTags": [
                    "C++"
                ],
                "code": "```cpp\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        vector<bool> sieve(n + 1);\\n        \\n        for (int i = 3; i <= n; i += 3)\\n            sieve[i] = true;\\n        \\n        for (int i = 5; i <= n; i += 5)\\n            sieve[i] = true;\\n        \\n        for (int i = 7; i <= n; i += 7)\\n            sieve[i] = true;\\n        \\n        int sum = 0;\\n        \\n        for (int i = 1; i <= n; ++i)\\n            if (sieve[i])\\n                sum += i;\\n        \\n        return sum;\\n    }\\n};\\n```\n```cpp\\nclass Solution {\\n    int sum(int n, int d)\\n    {\\n        int l = 0;\\n        int h = n / d;\\n        int r = h * d;\\n\\n        return (l + r) * (h + 1) / 2;\\n    }\\n\\npublic:\\n    int sumOfMultiples(int n) {\\n        return sum(n, 3) + sum(n, 5) + sum(n, 7)\\n            - sum(n, 3 * 5) - sum(n, 3 * 7) - sum(n, 5 * 7)\\n            + sum(n, 3 * 5 * 7);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3445800,
                "title": "c-well-explained-brute-force-3-line-solution",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i=1; i<=n; i++)\\n            if(i%3==0 || i%5==0 || i%7==0)  sum += i;\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i=1; i<=n; i++)\\n            if(i%3==0 || i%5==0 || i%7==0)  sum += i;\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3445761,
                "title": "python3-inclusion-exclusion-o-1",
                "content": "\\n```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        fn = lambda x : x*(x+1)//2\\n        return 3*fn(n//3) + 5*fn(n//5) + 7*fn(n//7) - 15*fn(n//15) - 21*fn(n//21) - 35*fn(n//35) + 105*fn(n//105)\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        fn = lambda x : x*(x+1)//2\\n        return 3*fn(n//3) + 5*fn(n//5) + 7*fn(n//7) - 15*fn(n//15) - 21*fn(n//21) - 35*fn(n//35) + 105*fn(n//105)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3445759,
                "title": "c-100-easy-to-understand-beginner-friendly",
                "content": "# Complexity\\n- Time complexity: $$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        ios_base::sync_with_stdio(false);\\n        cin.tie(NULL);\\n        int sum=0;\\n        for(int i=1;i<=n;i++) {\\n            if(i%3==0 || i%5==0 || i%7==0)\\n                sum+=i;\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        ios_base::sync_with_stdio(false);\\n        cin.tie(NULL);\\n        int sum=0;\\n        for(int i=1;i<=n;i++) {\\n            if(i%3==0 || i%5==0 || i%7==0)\\n                sum+=i;\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3445718,
                "title": "easy-c",
                "content": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0 ){\\n                sum += i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0 ){\\n                sum += i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4057187,
                "title": "solution-of-sum-multiples-problem",
                "content": "# Complexity\\n- Time complexity:\\n$$O(n)$$ - as we are inserting n elements.\\n\\n- Space complexity:\\n$$0(1)$$ - as, no extra space is required.\\n\\n# Code\\n```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        count = 0\\n        for i in range(1, n+1):\\n            if i % 3 == 0 or i % 5 == 0 or i % 7 == 0:\\n                count += i\\n        return count\\n```",
                "solutionTags": [
                    "Python3",
                    "Math"
                ],
                "code": "```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        count = 0\\n        for i in range(1, n+1):\\n            if i % 3 == 0 or i % 5 == 0 or i % 7 == 0:\\n                count += i\\n        return count\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4028377,
                "title": "c-accepted-easy-to-understand",
                "content": "```\\npublic class Solution {\\n    public int SumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=0;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0)\\n                sum+=i;\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic class Solution {\\n    public int SumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=0;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0)\\n                sum+=i;\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3912994,
                "title": "simple-python4-solution",
                "content": "\\n\\n# Code\\n```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        sum1=0\\n       \\n        for i in range(1,n+1):  \\n            if i%3==0 or i%5==0 or i%7==0:\\n                sum1+=i\\n        return sum1\\n\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        sum1=0\\n       \\n        for i in range(1,n+1):  \\n            if i%3==0 or i%5==0 or i%7==0:\\n                sum1+=i\\n        return sum1\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3865342,
                "title": "java-3-liner-faster-than-98",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i = 1;i<=n;i++){\\n            if(i % 3 == 0 || i % 5 == 0 || i % 7 == 0){\\n                sum += i;\\n            }\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i = 1;i<=n;i++){\\n            if(i % 3 == 0 || i % 5 == 0 || i % 7 == 0){\\n                sum += i;\\n            }\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3757680,
                "title": "brute-force",
                "content": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        set<int> s;\\n        \\n        vector<int> v = {3,5,7};\\n        \\n        for(int i:v)\\n        {\\n            for(int j=1;j<=n;j++)\\n            {\\n                if(j%i==0)\\n                {\\n                    s.insert(j);\\n                }\\n            }\\n        }\\n        \\n        int res = 0;\\n        for(auto i: s)\\n        {\\n            res+=i;\\n        }\\n        \\n        return res;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        set<int> s;\\n        \\n        vector<int> v = {3,5,7};\\n        \\n        for(int i:v)\\n        {\\n            for(int j=1;j<=n;j++)\\n            {\\n                if(j%i==0)\\n                {\\n                    s.insert(j);\\n                }\\n            }\\n        }\\n        \\n        int res = 0;\\n        for(auto i: s)\\n        {\\n            res+=i;\\n        }\\n        \\n        return res;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3662535,
                "title": "subtract-the-product-and-sum-of-digits-of-an-integer",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nIntuition was that loop from 1 to n and then divide each of the number with\\n3 5 7 and if remainder is zero , then add them.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int i,sum=0;\\n        for(i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0){\\n                sum=sum+i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int i,sum=0;\\n        for(i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0){\\n                sum=sum+i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3640248,
                "title": "python-very-easy-solution",
                "content": "# Code\\n```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        tot=0\\n        for i in range(3,n+1):\\n            if i%3==0 or i%5==0 or i%6==0 or i%7==0:\\n                tot+=i\\n        return tot\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        tot=0\\n        for i in range(3,n+1):\\n            if i%3==0 or i%5==0 or i%6==0 or i%7==0:\\n                tot+=i\\n        return tot\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3630268,
                "title": "c-solution-easy-to-understand-and-implement",
                "content": "# Flow of Code\\n1. Declaring the variable C.\\n2. Checking whether the number is divisible by 3 or 5 or 7 inside loop range inclusive 1 to n, if it is divisible add it to C.\\n3. Returning C as result.\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int C=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0)\\n                C+=i;\\n        }\\n        return C;\\n    }\\n};\\n```\\n\\n# Happy Coding...\\uD83E\\uDD1D",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int C=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0)\\n                C+=i;\\n        }\\n        return C;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3545353,
                "title": "2652-sum-multiples-java",
                "content": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int ans=0;\\n        for(int i=3;i<=n;i++)\\n        {\\n            if(((i%3)==0)||((i%5)==0)||((i%7)==0))\\n                ans+=i;\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int ans=0;\\n        for(int i=3;i<=n;i++)\\n        {\\n            if(((i%3)==0)||((i%5)==0)||((i%7)==0))\\n                ans+=i;\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3508704,
                "title": "sum-of-multiples-java-solution-5ms-runtime-explained",
                "content": "# Intuition\\nWe have to iterate through numbers to calculate the sum while checking the conditions of being them multiple.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nUsed a simple for loop to iterate starting from 2 to n and inside loop checking for being them multiple and if true then calculate the sum continously.\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i = 2 ; i <= n ; i++){\\n            if(i % 3 == 0 || i % 5 == 0 || i % 7 == 0){\\n                sum += i;\\n            }\\n        }\\n\\n        return sum;\\n    }\\n}\\n```\\n---\\n\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int[] arr = new int[n];\\n        int sum = 0;\\n        for(int i = 0 ; i < n ; i++){\\n            arr[i] = i + 1;\\n            if(arr[i] % 3 == 0 || arr[i] % 5 == 0 || arr[i] % 7 == 0){\\n                sum += arr[i];\\n            }\\n        }\\n\\n        return sum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i = 2 ; i <= n ; i++){\\n            if(i % 3 == 0 || i % 5 == 0 || i % 7 == 0){\\n                sum += i;\\n            }\\n        }\\n\\n        return sum;\\n    }\\n}\\n```\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int[] arr = new int[n];\\n        int sum = 0;\\n        for(int i = 0 ; i < n ; i++){\\n            arr[i] = i + 1;\\n            if(arr[i] % 3 == 0 || arr[i] % 5 == 0 || arr[i] % 7 == 0){\\n                sum += arr[i];\\n            }\\n        }\\n\\n        return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3505234,
                "title": "easy-5-lines-c-solution-o-n",
                "content": "\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nCheck for the divisibilty of each of the number in range [1, n] and if they are divisible by 3, 5 or 7, keep on adding them till we reach the end of the range. \\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(N)\\n\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for (int i = 1; i <= n; i++){\\n            if ((i%3 == 0) || (i%5 == 0) || (i%7 == 0)){\\n                sum += i;\\n            }\\n        }\\n\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for (int i = 1; i <= n; i++){\\n            if ((i%3 == 0) || (i%5 == 0) || (i%7 == 0)){\\n                sum += i;\\n            }\\n        }\\n\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3488977,
                "title": "simple-java-solution-for-beginners",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i = 1; i <= n; i++) {\\n            if(i % 3 == 0 || i % 5 == 0 || i % 7 == 0) {\\n                sum += i;\\n            }\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Array",
                    "Math",
                    "Number Theory"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i = 1; i <= n; i++) {\\n            if(i % 3 == 0 || i % 5 == 0 || i % 7 == 0) {\\n                sum += i;\\n            }\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3478944,
                "title": "c-easy-solution-single-for-loop",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\nO(N)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0){\\n                sum=sum+i;\\n            }\\n        }\\n   return sum; }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0){\\n                sum=sum+i;\\n            }\\n        }\\n   return sum; }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3466044,
                "title": "easy-brute-force-approach-beats-70-13",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n,int count=0) {\\n       \\n       \\n       for (int i=1;i<=n;i++)\\n       {\\n         if (i%3==0 || i%5==0 ||i%7==0)\\n           count+=i;\\n       }\\n    return count;\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n,int count=0) {\\n       \\n       \\n       for (int i=1;i<=n;i++)\\n       {\\n         if (i%3==0 || i%5==0 ||i%7==0)\\n           count+=i;\\n       }\\n    return count;\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3461892,
                "title": "ruby-one-liner",
                "content": "```\\n# @param {Integer} n\\n# @return {Integer}\\ndef sum_of_multiples(n)\\n  (1..n).sum { |i| i.gcd(105) > 1 ? i : 0 }  \\nend\\n```",
                "solutionTags": [
                    "Ruby"
                ],
                "code": "```\\n# @param {Integer} n\\n# @return {Integer}\\ndef sum_of_multiples(n)\\n  (1..n).sum { |i| i.gcd(105) > 1 ? i : 0 }  \\nend\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3451165,
                "title": "two-line-solution-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n,int ans=0) {\\n       for(int i=1;i<=n;i++)\\n            if(i % 3 == 0 || i % 5 == 0 || i % 7 == 0) ans += i;\\n        \\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n,int ans=0) {\\n       for(int i=1;i<=n;i++)\\n            if(i % 3 == 0 || i % 5 == 0 || i % 7 == 0) ans += i;\\n        \\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3450711,
                "title": "easy-go-golang-solution-using-recursion",
                "content": "```\\nfunc sumOfMultiples(n int) int {\\n        if n == 1 {\\n                return 0\\n        }\\n\\n        if n%7 == 0 || n%5 == 0 || n%3 == 0 {\\n                return sumOfMultiples(n-1) + n\\n        }\\n\\n        return sumOfMultiples(n - 1)\\n}\\n```",
                "solutionTags": [
                    "Go",
                    "Recursion"
                ],
                "code": "```\\nfunc sumOfMultiples(n int) int {\\n        if n == 1 {\\n                return 0\\n        }\\n\\n        if n%7 == 0 || n%5 == 0 || n%3 == 0 {\\n                return sumOfMultiples(n-1) + n\\n        }\\n\\n        return sumOfMultiples(n - 1)\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3447659,
                "title": "c-easy-approach",
                "content": "Here is my c++ code for this problem.\\n\\n# Complexity\\n- Time complexity:$$O(n)$$\\n\\n- Space complexity:$$O(1)$$\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int cnt=0;\\n        for(int i=1; i<=n; i++){\\n            if(i%3==0 || i%5==0 || i%7==0){\\n                cnt+=i;\\n            }\\n        }\\n        return cnt;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int cnt=0;\\n        for(int i=1; i<=n; i++){\\n            if(i%3==0 || i%5==0 || i%7==0){\\n                cnt+=i;\\n            }\\n        }\\n        return cnt;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3447601,
                "title": "simplest-solution-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum =0;\\n        for(int i=3;i<=n;i++){\\n            if(i%3 ==0){\\n                sum += i;\\n            }\\n            else if(i % 5 == 0){\\n                sum += i;\\n            }\\n            else if(i % 7 ==0){\\n                sum +=i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum =0;\\n        for(int i=3;i<=n;i++){\\n            if(i%3 ==0){\\n                sum += i;\\n            }\\n            else if(i % 5 == 0){\\n                sum += i;\\n            }\\n            else if(i % 7 ==0){\\n                sum +=i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3446661,
                "title": "100-fast-c-solution-basic-approach",
                "content": "# Complexity\\n- Time complexity: $$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int ans=0;\\n        for (int i=1; i<=n; i++){\\n            if (i%3==0 || i%5==0 || i%7==0)ans+=i;\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Array",
                    "Math",
                    "Greedy",
                    "Counting"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int ans=0;\\n        for (int i=1; i<=n; i++){\\n            if (i%3==0 || i%5==0 || i%7==0)ans+=i;\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3446654,
                "title": "super-easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0){\\n                sum+=i;\\n            }\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0){\\n                sum+=i;\\n            }\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3446534,
                "title": "very-easy-solution-java",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0){\\n                sum+=i;\\n            }\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0){\\n                sum+=i;\\n            }\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3445958,
                "title": "python3-solution",
                "content": "\\n```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        ans=0\\n        for x in range(1,n+1):\\n            if x%3==0 or x%5==0 or x%7==0:\\n                ans+=x\\n\\n        return ans        \\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        ans=0\\n        for x in range(1,n+1):\\n            if x%3==0 or x%5==0 or x%7==0:\\n                ans+=x\\n\\n        return ans        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3445797,
                "title": "java-solution-easy-with-explanation",
                "content": "Instead of iterating over range, we are iterating over multiples of 3, 5 and 7 until they go out of range. This offers better performance since we are not checking over values which are not multiples of 3, 7 and 5.\\nWe need set to keep track of elements which are repeated. For eg. 35 should not be added twice because it is divisible by both 7 and 5. \\n```\\nclass Solution {\\n    public int sumOfMultiples(int inputNumber) {\\n        int answer = 0;\\n        int multiple = 0;\\n        Set<Integer> set = new HashSet();\\n        while((multiple+1)*3<=inputNumber) {\\n            int value = ++multiple*3;\\n            set.add(value);\\n            answer+=value;\\n        }\\n        multiple = 0;\\n        while((multiple+1)*5<=inputNumber) {\\n            int value = ++multiple*5;\\n            if(!set.contains(value)) {\\n                set.add(value);\\n                answer+=value;\\n            }\\n        }\\n        multiple = 0;\\n        while((multiple+1)*7<=inputNumber) {\\n            int value = ++multiple*7;\\n            if(!set.contains(value)) {\\n                set.add(value);\\n                answer+=value;\\n            }    \\n        }\\n        \\n        return answer;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int inputNumber) {\\n        int answer = 0;\\n        int multiple = 0;\\n        Set<Integer> set = new HashSet();\\n        while((multiple+1)*3<=inputNumber) {\\n            int value = ++multiple*3;\\n            set.add(value);\\n            answer+=value;\\n        }\\n        multiple = 0;\\n        while((multiple+1)*5<=inputNumber) {\\n            int value = ++multiple*5;\\n            if(!set.contains(value)) {\\n                set.add(value);\\n                answer+=value;\\n            }\\n        }\\n        multiple = 0;\\n        while((multiple+1)*7<=inputNumber) {\\n            int value = ++multiple*7;\\n            if(!set.contains(value)) {\\n                set.add(value);\\n                answer+=value;\\n            }    \\n        }\\n        \\n        return answer;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3445747,
                "title": "c-soutions-explained-line-by-line-easy-to-understand-beginner-friendly",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nGiven a number n, we need to find the sum of all the multiples of 3, 5 or 7 up to n.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nWe iterate from 1 to n and check if the current number is a multiple of 3, 5 or 7 using the modulo operator. If it is, we add it to the running sum. Finally, we return the sum.\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nWe iterate n times, so the time complexity is O(n).\\n\\n\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nWe use a single integer variable to store the running sum, so the space complexity is O(1).\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int number) {\\n        int sum = 0;\\n        \\n        for(int i = 1; i <= number; i++){\\n            if(i % 3 == 0 || i % 5 == 0 || i % 7 == 0){\\n                sum += i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int number) {\\n        int sum = 0;\\n        \\n        for(int i = 1; i <= number; i++){\\n            if(i % 3 == 0 || i % 5 == 0 || i % 7 == 0){\\n                sum += i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3445697,
                "title": "python3-solution",
                "content": "# Code\\n```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        nums = []\\n        for i in range(1, n + 1):\\n            if i % 3 == 0 or i % 5 == 0 or i % 7 == 0:\\n                nums.append(i)\\n        return sum(nums)\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        nums = []\\n        for i in range(1, n + 1):\\n            if i % 3 == 0 or i % 5 == 0 or i % 7 == 0:\\n                nums.append(i)\\n        return sum(nums)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3445696,
                "title": "c-simple",
                "content": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        long long sum=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0) sum += i;\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        long long sum=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0) sum += i;\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4096758,
                "title": "java-solution-with-streams",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n         return IntStream.range(1, n + 1)\\n                .filter(x -> isDivisibleBy357(x))\\n                .reduce(0, Integer::sum);\\n    }\\n\\n    private static boolean isDivisibleBy357(int x) {\\n        return x % 3 == 0 || x % 5 == 0 || x % 7 == 0;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n         return IntStream.range(1, n + 1)\\n                .filter(x -> isDivisibleBy357(x))\\n                .reduce(0, Integer::sum);\\n    }\\n\\n    private static boolean isDivisibleBy357(int x) {\\n        return x % 3 == 0 || x % 5 == 0 || x % 7 == 0;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4093332,
                "title": "branchless-prgramming-solution-beats-90",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nThe solution is the same that the others but without including an IF statement. The condition checking introduces a innecesary branch because we dont need an ELSE clause, when we remove the IF is much faster, beating 90% python submissions.\\n\\n# Complexity\\n- Time complexity: O(N)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        sum = 0\\n        for i in range(n+1):\\n            sum = sum + i * (i % 3 == 0 or i % 5 == 0 or i % 7 == 0)\\n        return sum\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        sum = 0\\n        for i in range(n+1):\\n            sum = sum + i * (i % 3 == 0 or i % 5 == 0 or i % 7 == 0)\\n        return sum\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4092048,
                "title": "easy-c-code-for-beginner-s-welcome",
                "content": "\\n**Simple C++ program. **\\n\\n\\n\\n# c++ code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i = 1; i <=n; i++ )\\n        {\\n            if(i%3==0||i%5==0||i%7==0)\\n            {\\n                sum+=i;\\n            }\\n        }\\n        \\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i = 1; i <=n; i++ )\\n        {\\n            if(i%3==0||i%5==0||i%7==0)\\n            {\\n                sum+=i;\\n            }\\n        }\\n        \\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4087533,
                "title": "single-line-python-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nUse a loop and if statement\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum([i for i in range(1,n+1) if i % 3 == 0 or i % 5 == 0 or i % 7 == 0])\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum([i for i in range(1,n+1) if i % 3 == 0 or i % 5 == 0 or i % 7 == 0])\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4086665,
                "title": "easy-c-solution",
                "content": "\\n\\n```\\npublic class Solution {\\n    public int SumOfMultiples(int n) {\\n        int ans = 0;\\n        for(int i = 0; i <= n; i++){\\n            if(i % 3 == 0 || i % 5 == 0 || i % 7 == 0 || i % 9 == 0){\\n                ans += i;\\n            }\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#",
                    "Math"
                ],
                "code": "```\\npublic class Solution {\\n    public int SumOfMultiples(int n) {\\n        int ans = 0;\\n        for(int i = 0; i <= n; i++){\\n            if(i % 3 == 0 || i % 5 == 0 || i % 7 == 0 || i % 9 == 0){\\n                ans += i;\\n            }\\n        }\\n        return ans;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4084623,
                "title": "java8-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nJava8\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n         return IntStream.rangeClosed(1, n).filter(i -> i % 3 == 0 || i % 5 == 0 || i % 7 == 0).sum();\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n         return IntStream.rangeClosed(1, n).filter(i -> i % 3 == 0 || i % 5 == 0 || i % 7 == 0).sum();\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4084290,
                "title": "simple-and-east-python-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->Using Simple math    \\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        ans=0\\n        for i in range(1,n+1):\\n            if i%3==0 or i%5==0 or i%7==0:\\n                ans+=i\\n        return ans\\n        \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        ans=0\\n        for i in range(1,n+1):\\n            if i%3==0 or i%5==0 or i%7==0:\\n                ans+=i\\n        return ans\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 4081601,
                "title": "very-easy-solution",
                "content": "\\n# Complexity\\n- Time complexity:O(n)\\n- Space complexity:O(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=3;i<=n;i++)\\n        {\\n            if(i%3==0 || i%5==0 || i%7==0)\\n            {\\n                sum=sum+i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=3;i<=n;i++)\\n        {\\n            if(i%3==0 || i%5==0 || i%7==0)\\n            {\\n                sum=sum+i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4080722,
                "title": "sum-multiply",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nfirstly i am check what is the question saying \\n\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nfirstly i am using for loop because question say range is 1 to n\\nand then  if our range is divisble by 3,5,7 then sum it.\\n\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nint sumOfMultiples(int n){\\n    int sum=0;\\n    for(int i=3;i<=n;i++){\\n      if(i%3==0){\\n          sum+=i;\\n      }\\n      else if(i%5==0){\\n          sum+=i;\\n      }else if(i%7==0){\\n          sum+=i;\\n      }\\n    }\\n    return sum;\\n\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint sumOfMultiples(int n){\\n    int sum=0;\\n    for(int i=3;i<=n;i++){\\n      if(i%3==0){\\n          sum+=i;\\n      }\\n      else if(i%5==0){\\n          sum+=i;\\n      }else if(i%7==0){\\n          sum+=i;\\n      }\\n    }\\n    return sum;\\n\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4079928,
                "title": "using-while-loop",
                "content": "\\n\\n# Code\\n```\\n\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n\\n        int sum=0,i=1;\\n        \\n        while(i<=n){\\n\\n            if(i%3==0 || i%5==0 || i%7==0)\\n                sum+=i;\\n            i++;\\n        }\\n\\n        return sum;\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\n\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n\\n        int sum=0,i=1;\\n        \\n        while(i<=n){\\n\\n            if(i%3==0 || i%5==0 || i%7==0)\\n                sum+=i;\\n            i++;\\n        }\\n\\n        return sum;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4078611,
                "title": "no-need-to-wander-it-s-python",
                "content": "# No need to wander\\n\\n# Code\\n```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum([x for x in range(3, n+1) if x%3==0 or x%5==0 or x%7==0])\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum([x for x in range(3, n+1) if x%3==0 or x%5==0 or x%7==0])\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4077322,
                "title": "simple-beginner-s-solution-efficient-and-short",
                "content": "# Intuition\\nAt first glance I could tell that this problem needed a variable to store the sum, a for loop to iterate through the range given, and an if statement to decide wether the number was a multiple or not.\\n\\n# Approach\\nThe problem asks us to find the sum of all the multiples. So, this means we will need to have a variable that constantly gets updated. Then we had to check if each value within the range was divisible by 3, 5, or 7. This meant we needed some sort of loop. I used a \\'for loop\\' since I thought it made most sense. The remaining step was to find a way to check wether the numbers were divisble or not. For that I used the modulo operations \\'%\\' which returns the remainder of a division operation (Ex: 10/3 = 3.33334 | 10%3 = 1). So, as long as the output of the modulo operation was 0, then the dividend is divisible by the divisor. Putting all of these together, I was able to create my code.\\n\\n# Time & Space\\n- Time: 3 ms\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space: 39.18 mb\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        // ititializing a sum variable to hold the sum of all the multiples\\n        int sum = 0; // starting at 0 so that if no numbers are multiples of 3, 5, and 7\\n\\n        // for loop to iterate through all the numbers within the range\\n        for (int i = 1; i <= n; i++)\\n        {\\n            //  if statement to check and see whether the dividend is a multiple of 3, 5, and 7\\n            if (i%3 == 0 || i%5 == 0 || i%7 == 0) // using \\'%\\' to recieve the remainder of a division operation\\n            {\\n                // adding the multiple to the sum\\n                sum += i;\\n            }\\n        }\\n\\n        // returning the sum of all the multiples\\n        return sum;\\n    }\\n}\\n```\\n\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        // ititializing a sum variable to hold the sum of all the multiples\\n        int sum = 0; // starting at 0 so that if no numbers are multiples of 3, 5, and 7\\n\\n        // for loop to iterate through all the numbers within the range\\n        for (int i = 1; i <= n; i++)\\n        {\\n            //  if statement to check and see whether the dividend is a multiple of 3, 5, and 7\\n            if (i%3 == 0 || i%5 == 0 || i%7 == 0) // using \\'%\\' to recieve the remainder of a division operation\\n            {\\n                // adding the multiple to the sum\\n                sum += i;\\n            }\\n        }\\n\\n        // returning the sum of all the multiples\\n        return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4077145,
                "title": "very-basic-java-soln-97",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int s=0;\\n        while(n>0){\\n            if(n%3==0||n%5==0||n%7==0)\\n                s+=n;\\n            n--;\\n        }\\n        return s;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int s=0;\\n        while(n>0){\\n            if(n%3==0||n%5==0||n%7==0)\\n                s+=n;\\n            n--;\\n        }\\n        return s;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4072420,
                "title": "kotlin-solution-beats-86",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nusing fold , instead of sumOf , or filter or anyThing else gives you a better time complexity\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    \\n   fun sumOfMultiples(ni: Int): Int = (1..ni).fold(0) {acc , it ->\\n    if (it % 3 == 0 || it % 5 == 0 || it % 7 == 0) acc + it\\n    else acc \\n}\\n\\n}\\n```",
                "solutionTags": [
                    "Kotlin"
                ],
                "code": "```\\nclass Solution {\\n    \\n   fun sumOfMultiples(ni: Int): Int = (1..ni).fold(0) {acc , it ->\\n    if (it % 3 == 0 || it % 5 == 0 || it % 7 == 0) acc + it\\n    else acc \\n}\\n\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4071917,
                "title": "c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int answer = 0;\\n        for(int i = 0; i <= n; ++i ) \\n            if(i % 3 == 0 || i % 5 == 0 || i % 7 == 0)\\n                answer += i;\\n        return answer;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int answer = 0;\\n        for(int i = 0; i <= n; ++i ) \\n            if(i % 3 == 0 || i % 5 == 0 || i % 7 == 0)\\n                answer += i;\\n        return answer;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4070262,
                "title": "",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n      result = 0\\n      for i in range(n+1):\\n        first = i/3\\n        second = i/5\\n        third = i/7\\n        if float(first).is_integer() or float(second).is_integer() or float(third).is_integer():\\n          result +=i\\n      return result\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n      result = 0\\n      for i in range(n+1):\\n        first = i/3\\n        second = i/5\\n        third = i/7\\n        if float(first).is_integer() or float(second).is_integer() or float(third).is_integer():\\n          result +=i\\n      return result\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4069788,
                "title": "easiest-way-99-9",
                "content": "# Intuition\\nIt has 2 way to solved, First is check every Number From [1,,,,n] inclusive. But there is a simple math trick to solve it in O(1)\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nMathmatical Approch\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(1)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: Constant\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        # Sum of numbers divisible by 3\\n        sum_3 = 3 * (n // 3) * (n // 3 + 1) // 2\\n        \\n        # Sum of numbers divisible by 5\\n        sum_5 = 5 * (n // 5) * (n // 5 + 1) // 2\\n\\n        # Sum of numbers divisible by 7\\n        sum_7 = 7 * (n // 7) * (n // 7 + 1) // 2\\n\\n        # Sum of numbers divisible by 3 and 5 \\n        # To avoid overcounting, we need to subtract sums of numbers divisible by 15\\n        sum_15 = 15 * (n // 15) * (n // 15 + 1) // 2\\n        \\n        # Sum of numbers divisible by 3 and 7\\n        sum_21 = 21 * (n // 21) * (n // 21 + 1) // 2\\n\\n        # Sum of numbers divisible by 5 and 7\\n        sum_35 = 35 * (n // 35) * (n // 35 + 1) // 2\\n\\n        # Sum of numbers divisible by 3, 5 and 7\\n        sum_105 = 105 * (n // 105) * (n // 105 + 1) // 2\\n        \\n        return sum_3 + sum_5 + sum_7 - sum_15 - sum_21 - sum_35 + sum_105\\n            \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        # Sum of numbers divisible by 3\\n        sum_3 = 3 * (n // 3) * (n // 3 + 1) // 2\\n        \\n        # Sum of numbers divisible by 5\\n        sum_5 = 5 * (n // 5) * (n // 5 + 1) // 2\\n\\n        # Sum of numbers divisible by 7\\n        sum_7 = 7 * (n // 7) * (n // 7 + 1) // 2\\n\\n        # Sum of numbers divisible by 3 and 5 \\n        # To avoid overcounting, we need to subtract sums of numbers divisible by 15\\n        sum_15 = 15 * (n // 15) * (n // 15 + 1) // 2\\n        \\n        # Sum of numbers divisible by 3 and 7\\n        sum_21 = 21 * (n // 21) * (n // 21 + 1) // 2\\n\\n        # Sum of numbers divisible by 5 and 7\\n        sum_35 = 35 * (n // 35) * (n // 35 + 1) // 2\\n\\n        # Sum of numbers divisible by 3, 5 and 7\\n        sum_105 = 105 * (n // 105) * (n // 105 + 1) // 2\\n        \\n        return sum_3 + sum_5 + sum_7 - sum_15 - sum_21 - sum_35 + sum_105\\n            \\n```",
                "codeTag": "Java"
            },
            {
                "id": 4069576,
                "title": "php-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n\\n    /**\\n     * @param Integer $n\\n     * @return Integer\\n     */\\n    function sumOfMultiples($n) {\\n        $range = range(1,$n);\\n        $data = [];\\n        for($i = 0; $i < count($range); $i++){\\n          if($range[$i] % 3 == 0 || $range[$i] % 5 == 0 || $range[$i] % 7 == 0 )\\n          {\\n            $data[] = $range[$i];\\n          }\\n        }\\n        return array_sum($data);\\n    }\\n}\\n```",
                "solutionTags": [
                    "PHP",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n\\n    /**\\n     * @param Integer $n\\n     * @return Integer\\n     */\\n    function sumOfMultiples($n) {\\n        $range = range(1,$n);\\n        $data = [];\\n        for($i = 0; $i < count($range); $i++){\\n          if($range[$i] % 3 == 0 || $range[$i] % 5 == 0 || $range[$i] % 7 == 0 )\\n          {\\n            $data[] = $range[$i];\\n          }\\n        }\\n        return array_sum($data);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4069097,
                "title": "sum-of-multiples",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n         int answer = 0;\\n        for(int i = 1; i<=n; i++)  {\\n            if(i%3==0 || i%5==0 || i%7==0){\\n             answer+=i;\\n             }\\n             }\\n        return answer;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n         int answer = 0;\\n        for(int i = 1; i<=n; i++)  {\\n            if(i%3==0 || i%5==0 || i%7==0){\\n             answer+=i;\\n             }\\n             }\\n        return answer;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4067721,
                "title": "sumofmultiples",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int s=0;\\n        for(int i=1;i<=n;i++)\\n        {\\n            if(i%3==0 || i%5==0 || i%7==0)\\n            {\\n                s=s+i;\\n            }\\n        }\\n        return s;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int s=0;\\n        for(int i=1;i<=n;i++)\\n        {\\n            if(i%3==0 || i%5==0 || i%7==0)\\n            {\\n                s=s+i;\\n            }\\n        }\\n        return s;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4059622,
                "title": "easy-to-understand-c-solution",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=3; i<=n; i++){\\n            if((i%3 == 0) || (i%5 == 0) || (i%7 == 0)){\\n                sum = sum + i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=3; i<=n; i++){\\n            if((i%3 == 0) || (i%5 == 0) || (i%7 == 0)){\\n                sum = sum + i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4051503,
                "title": "simple-c-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0){\\n                sum+=i;\\n            }\\n\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0){\\n                sum+=i;\\n            }\\n\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4051502,
                "title": "simple-c-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0){\\n                sum+=i;\\n            }\\n\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0){\\n                sum+=i;\\n            }\\n\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4046940,
                "title": "python3-sum-of-multiplies-by-list-comprehension",
                "content": "# Intuition\\n# We want to find the sum of all integers in the range [1, n] that are divisible by 3, 5, or 7.\\n# To do this, we can iterate through numbers from 1 to n and include those that meet the divisibility criteria.\\n\\n# Approach\\n# 1. Initialize a list comprehension to generate a list of numbers from 1 to n that are divisible by 3, 5, or 7.\\n# 2. Use the sum function to calculate the sum of the numbers in the generated list.\\n# 3. Return the calculated sum as the result.\\n\\n# Complexity\\n# - Time complexity: O(n), where n is the input integer. The list comprehension iterates through numbers from 1 to n.\\n# - Space complexity: O(1), as the list comprehension and the sum do not use additional memory proportional to the input size; they only store the final sum.\\n# Code\\n```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum([i for i in range(1,n+1) if i%3==0 or i%5==0 or i%7==0])\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum([i for i in range(1,n+1) if i%3==0 or i%5==0 or i%7==0])\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4044466,
                "title": "easy-java-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=1;i<=n;i++)\\n        {\\n            if(i%3==0||i%5==0||i%7==0)\\n            {\\n                   sum=sum+i;\\n            }\\n        }\\n        return sum;\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=1;i<=n;i++)\\n        {\\n            if(i%3==0||i%5==0||i%7==0)\\n            {\\n                   sum=sum+i;\\n            }\\n        }\\n        return sum;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4043491,
                "title": "without-foreach",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int summa = 0;\\n        int uch = n / 3;\\n        int besh = n / 5;\\n        int yetti = n / 7;\\n        int onbesh = n / 15;\\n        int yigirmabir = n / 21;\\n        int ottizbesh = n / 35;\\n        int yuzbesh = n / 105;\\n        summa = (((1 + uch) * uch) / 2) * 3;\\n        summa += (((1 + besh) * besh) / 2) * 5;\\n        summa += (((1 + yetti) * yetti) / 2) * 7;\\n        summa -= (((1 + onbesh) * onbesh) / 2) * 15;\\n        summa -= (((1 + yigirmabir) * yigirmabir) / 2) * 21;\\n        summa -= (((1 + ottizbesh) * ottizbesh) / 2) * 35;\\n        summa += (((1 + yuzbesh) * yuzbesh) / 2) * 105;\\n        return summa;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int summa = 0;\\n        int uch = n / 3;\\n        int besh = n / 5;\\n        int yetti = n / 7;\\n        int onbesh = n / 15;\\n        int yigirmabir = n / 21;\\n        int ottizbesh = n / 35;\\n        int yuzbesh = n / 105;\\n        summa = (((1 + uch) * uch) / 2) * 3;\\n        summa += (((1 + besh) * besh) / 2) * 5;\\n        summa += (((1 + yetti) * yetti) / 2) * 7;\\n        summa -= (((1 + onbesh) * onbesh) / 2) * 15;\\n        summa -= (((1 + yigirmabir) * yigirmabir) / 2) * 21;\\n        summa -= (((1 + ottizbesh) * ottizbesh) / 2) * 35;\\n        summa += (((1 + yuzbesh) * yuzbesh) / 2) * 105;\\n        return summa;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4042563,
                "title": "c-python-brute-force-approach-too-easy-fully-explained",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\nHere\\'s how the code works:\\n\\n1. It starts by initializing a variable `sum` to zero. This variable will be used to accumulate the sum of multiples.\\n\\n2. It then enters a `for` loop that iterates through numbers from 1 to `n` (inclusive). In other words, it checks each number from 1 up to and including `n`.\\n\\n3. Within the loop, it uses the modulo operator (`%`) to check if the current number `i` is a multiple of 3, 5, or 7. If `i` is divisible by any of these numbers with a remainder of zero, it means `i` is a multiple of that number.\\n\\n4. If `i` is a multiple of 3, 5, or 7, it adds `i` to the `sum` variable.\\n\\n5. After looping through all numbers from 1 to `n`, it returns the final value of the `sum` variable, which represents the sum of all multiples of 3, 5, or 7 within the specified range.\\n\\n# Complexity\\n- Time complexity:$$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:$$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n``` C++ []\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i = 1; i <= n; i++){\\n            if(i % 3 == 0 || i % 5 == 0 || i % 7 == 0)\\n                sum += i;\\n        }\\n    return sum;\\n    }\\n};\\n```\\n``` Python []\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        sum = 0\\n        for i in range(1, n + 1):\\n            if i % 3 == 0 or i % 5 == 0 or i % 7 == 0:\\n                sum += i\\n        return sum\\n```",
                "solutionTags": [
                    "C++",
                    "Python3"
                ],
                "code": "``` C++ []\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i = 1; i <= n; i++){\\n            if(i % 3 == 0 || i % 5 == 0 || i % 7 == 0)\\n                sum += i;\\n        }\\n    return sum;\\n    }\\n};\\n```\n``` Python []\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        sum = 0\\n        for i in range(1, n + 1):\\n            if i % 3 == 0 or i % 5 == 0 or i % 7 == 0:\\n                sum += i\\n        return sum\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4039709,
                "title": "c-solution-easy-to-understand-100-beats",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n- O(N)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=0; i<=n; i++)\\n        {\\n            if(i%3==0 || i%5==0 || i%7==0)\\n            {\\n                sum+=i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=0; i<=n; i++)\\n        {\\n            if(i%3==0 || i%5==0 || i%7==0)\\n            {\\n                sum+=i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4038035,
                "title": "python-solution",
                "content": "\\n\\n# Code\\n```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        sum_of_nums = 0\\n        for i in range(1, n + 1):\\n            if i % 3 == 0 or i % 5 == 0 or i % 7 == 0:\\n                sum_of_nums += i\\n        return sum_of_nums\\n        \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        sum_of_nums = 0\\n        for i in range(1, n + 1):\\n            if i % 3 == 0 or i % 5 == 0 or i % 7 == 0:\\n                sum_of_nums += i\\n        return sum_of_nums\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 4036304,
                "title": "easy-solution",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n       int sum = 0;\\n       for(int i = n ;i >= 3; i--){\\n           if(i%7 == 0)\\n           sum+=i;\\n           else if(i%5 == 0)\\n           sum += i;\\n           else if(i%3 ==0)\\n           sum +=i;\\n       } \\n       return sum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n       int sum = 0;\\n       for(int i = n ;i >= 3; i--){\\n           if(i%7 == 0)\\n           sum+=i;\\n           else if(i%5 == 0)\\n           sum += i;\\n           else if(i%3 ==0)\\n           sum +=i;\\n       } \\n       return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4034811,
                "title": "js",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar sumOfMultiples = function(n) {\\n    let sum=0;\\n    for(let i=1;i<=n;i++){\\n        if(i%3===0 || i%5===0 || i%7===0)\\n        sum=sum+i;\\n    }\\n    return sum;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar sumOfMultiples = function(n) {\\n    let sum=0;\\n    for(let i=1;i<=n;i++){\\n        if(i%3===0 || i%5===0 || i%7===0)\\n        sum=sum+i;\\n    }\\n    return sum;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4033669,
                "title": "simple-c-solution-o-n-beats-100",
                "content": "\\n# Complexity\\n- Time complexity: O(n)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=3;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0) sum+=i;\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=3;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0) sum+=i;\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4031065,
                "title": "simple-solution-in-java-with-time-complexity-1ms",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int i=n/3;\\n        int j=n/5;\\n        int k=n/7;\\n\\n        int l=n/15;\\n        int m=n/35;\\n        int n21=n/21;\\n\\n        int c=n/105;\\n\\n        \\n        int sum_3 = getSum(3,n);//3*((i*(i+1))/2);\\n        int sum_5 = getSum(5,n);\\n        int sum_7 = getSum(7,n);\\n        \\n        int sum_3_5 = getSum(15,n);\\n        int sum_5_7 = getSum(35,n);\\n        int sum_3_7 = getSum(21,n);\\n\\n        int sum_3_5_7 = getSum(105,n);\\n\\n        return sum_3 + sum_5 + sum_7 - sum_3_5 - sum_5_7 - sum_3_7 + (sum_3_5_7);\\n        \\n    }\\n\\n    public int getSum(int val, int n){\\n        int i = n/val;\\n        return val*((i*(i+1))/2);\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int i=n/3;\\n        int j=n/5;\\n        int k=n/7;\\n\\n        int l=n/15;\\n        int m=n/35;\\n        int n21=n/21;\\n\\n        int c=n/105;\\n\\n        \\n        int sum_3 = getSum(3,n);//3*((i*(i+1))/2);\\n        int sum_5 = getSum(5,n);\\n        int sum_7 = getSum(7,n);\\n        \\n        int sum_3_5 = getSum(15,n);\\n        int sum_5_7 = getSum(35,n);\\n        int sum_3_7 = getSum(21,n);\\n\\n        int sum_3_5_7 = getSum(105,n);\\n\\n        return sum_3 + sum_5 + sum_7 - sum_3_5 - sum_5_7 - sum_3_7 + (sum_3_5_7);\\n        \\n    }\\n\\n    public int getSum(int val, int n){\\n        int i = n/val;\\n        return val*((i*(i+1))/2);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4030145,
                "title": "swift-simple-solution-0ms",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    func sumOfMultiples(_ n: Int) -> Int {\\n        var sum = 0\\n        \\n    for num in 1...n {\\n        \\n        if num % 3 == 0 || num % 5 == 0 || num % 7 == 0 {\\n            \\n            sum += num\\n            \\n        }\\n        \\n    }\\n    \\n    return sum\\n    }\\n}\\n```",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\nclass Solution {\\n    func sumOfMultiples(_ n: Int) -> Int {\\n        var sum = 0\\n        \\n    for num in 1...n {\\n        \\n        if num % 3 == 0 || num % 5 == 0 || num % 7 == 0 {\\n            \\n            sum += num\\n            \\n        }\\n        \\n    }\\n    \\n    return sum\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4022901,
                "title": "beats-98-users-2-ms-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int count = 0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3 == 0){\\n                count += i;\\n            }\\n            else if(i%5 == 0){\\n                count += i;\\n            }\\n            else if(i%7 == 0){\\n                count += i;\\n            }\\n        }\\n//        System.out.println(count);\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int count = 0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3 == 0){\\n                count += i;\\n            }\\n            else if(i%5 == 0){\\n                count += i;\\n            }\\n            else if(i%7 == 0){\\n                count += i;\\n            }\\n        }\\n//        System.out.println(count);\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4014499,
                "title": "easiest-beginner-friendly-solution-beats-100-of-c-users",
                "content": "# Intuition\\nJust find the values divisible by 3,5,7 and add them together \\n# Approach\\nint sumOfMultiples(int n): This function takes an integer n as its input parameter and returns an integer as its result.\\n\\nint sum = 0;: It initializes a variable sum to 0. This variable will be used to accumulate the sum of multiples.\\n\\nThe for loop: It iterates from i = 3 to i <= n. It starts from 3 because the task is to find the sum of multiples from 3 onwards.\\n\\nInside the loop, it checks if i is divisible by 3, 5, or 7 using the modulo operator (%). If i is divisible by any of these numbers, it means i is a multiple of 3, 5, or 7, and it adds i to the sum.\\n\\nFinally, the function returns the accumulated sum, which represents the sum of multiples of 3, 5, and 7 between 3 and n.\\n\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\nO(n)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n  int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=3;i<=n;i++)\\n        {\\n            if(i%3==0||i%5==0||i%7==0)\\n            {\\n                sum+=i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n  int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=3;i<=n;i++)\\n        {\\n            if(i%3==0||i%5==0||i%7==0)\\n            {\\n                sum+=i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4013161,
                "title": "java-o-1",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        return 3*sigma(n/3) + 5*sigma(n/5) + 7*sigma(n/7)\\n        - 15*sigma(n/15) - 35*sigma(n/35) - 21*sigma(n/21)\\n        + 105*sigma(n/105);\\n    }\\n    private int sigma(int x){\\n        return x*(x+1)/2;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        return 3*sigma(n/3) + 5*sigma(n/5) + 7*sigma(n/7)\\n        - 15*sigma(n/15) - 35*sigma(n/35) - 21*sigma(n/21)\\n        + 105*sigma(n/105);\\n    }\\n    private int sigma(int x){\\n        return x*(x+1)/2;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4012620,
                "title": "sumofmultiples",
                "content": "\\n\\n# Code\\n```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        sum=0\\n        for i in range(1,n+1):\\n            if i%3==0 or i%5==0 or i%7==0:\\n                sum+=i\\n        return sum\\n\\n        \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        sum=0\\n        for i in range(1,n+1):\\n            if i%3==0 or i%5==0 or i%7==0:\\n                sum+=i\\n        return sum\\n\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 4010283,
                "title": "easy-one-line-solution-python3-time-complexity-o-n-space-complexity-o-1",
                "content": "# Intuition\\n\\nThe problem is asking for the sum of all numbers from 1 to n that are multiples of 3, 5, or 7. To solve this, we can iterate through the numbers from 1 to n and check if each number is a multiple of 3, 5, or 7. If it is, we add it to the sum.\\n\\n# Approach\\n\\nThe approach is straightforward. We iterate through the numbers from 1 to n, and for each number, we check if it\\'s divisible by 3, 5, or 7 using the modulo operator (%). If it is divisible by any of these numbers, we add it to the sum.\\n\\n# Complexity\\n\\n- Time complexity: O(n)\\n\\nWe iterate through all numbers from 1 to n once and perform a constant number of operations for each number.\\n\\n- Space complexity:  O(1)\\n\\nWe use a constant amount of extra space to store the sum and the loop variables, regardless of the input n. The space complexity is not dependent on the size of n.\\n\\n# Code\\n```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum(x for x in range(1,n+1) if x % 3 == 0 or x % 5 == 0 or x % 7 == 0)\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum(x for x in range(1,n+1) if x % 3 == 0 or x % 5 == 0 or x % 7 == 0)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4008562,
                "title": "java-solution-using-ap",
                "content": "\\n# Complexity\\n- Time complexity:\\nO(1)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\n    public int calculate(int n, int k) {\\n        return k * (n / k) * (n / k + 1) / 2;\\n    }\\n  /*  The factors of k of 1 to n will be AP i.e for eg: n=12, k=3 then multiples will be from 1 to 12/3 = 4==>3[1+2+3+4] \\n for n=16 k=3 then factors will be from 1 to 16/3=5 => 3[1+2+3+4+5]==> all these multiples of 3 are below 16*/\\n\\n    public int sumOfMultiples(int n) {\\n//A or B or C = A + B + C - A and B - A and c - B and C + A and B and C\\n        return calculate(n, 3) + calculate(n, 5) + calculate(n, 7)\\n                - calculate(n, 3 * 5) - calculate(n, 5 * 7) - calculate(n, 3 * 7)\\n                + calculate(n, 3 * 5 * 7);\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int calculate(int n, int k) {\\n        return k * (n / k) * (n / k + 1) / 2;\\n    }\\n  /*  The factors of k of 1 to n will be AP i.e for eg: n=12, k=3 then multiples will be from 1 to 12/3 = 4==>3[1+2+3+4] \\n for n=16 k=3 then factors will be from 1 to 16/3=5 => 3[1+2+3+4+5]==> all these multiples of 3 are below 16*/\\n\\n    public int sumOfMultiples(int n) {\\n//A or B or C = A + B + C - A and B - A and c - B and C + A and B and C\\n        return calculate(n, 3) + calculate(n, 5) + calculate(n, 7)\\n                - calculate(n, 3 * 5) - calculate(n, 5 * 7) - calculate(n, 3 * 7)\\n                + calculate(n, 3 * 5 * 7);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4005489,
                "title": "java-3-diff-solutions-from-22ms-to-1ms",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n  //  public int sumOfMultiples(int n) {\\n  //   return IntStream.range(3,n+1).parallel().filter(value -> value%3==0||value%5==0||value%7==0).sum();\\n  // } 22ms\\n \\n  // public int sumOfMultiples(int n) {\\n  //   int sum=0;\\n  //   for (int i = 3; i <=n; i++) {\\n  //       if (i%3==0||i%5==0||i%7==0)sum+=i;\\n  //   }\\n  //   return sum;\\n  // } 3ms\\n\\n    public int sumOfMultiples(int n) {\\n    int sum = 0;\\n    for (int i = 3; i <= n; i += 3) {\\n      sum += i;\\n    }\\n    for (int i = 5; i <= n; i += 5) {\\n      if (i % 3 == 0)continue; \\n        sum += i;\\n      \\n    }\\n    for (int i = 7; i <= n; i += 7) {\\n      if (i % 3 == 0 || i % 5 == 0)continue; \\n        sum += i;\\n      \\n    }\\n    return sum;\\n  }\\n  \\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n  //  public int sumOfMultiples(int n) {\\n  //   return IntStream.range(3,n+1).parallel().filter(value -> value%3==0||value%5==0||value%7==0).sum();\\n  // } 22ms\\n \\n  // public int sumOfMultiples(int n) {\\n  //   int sum=0;\\n  //   for (int i = 3; i <=n; i++) {\\n  //       if (i%3==0||i%5==0||i%7==0)sum+=i;\\n  //   }\\n  //   return sum;\\n  // } 3ms\\n\\n    public int sumOfMultiples(int n) {\\n    int sum = 0;\\n    for (int i = 3; i <= n; i += 3) {\\n      sum += i;\\n    }\\n    for (int i = 5; i <= n; i += 5) {\\n      if (i % 3 == 0)continue; \\n        sum += i;\\n      \\n    }\\n    for (int i = 7; i <= n; i += 7) {\\n      if (i % 3 == 0 || i % 5 == 0)continue; \\n        sum += i;\\n      \\n    }\\n    return sum;\\n  }\\n  \\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4004948,
                "title": "easyy-java-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i = n ; i>0 ; i--)\\n        {\\n            if(i%7==0||i%5==0||i%3==0)\\n            {\\n                 sum +=i;\\n            }\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i = n ; i>0 ; i--)\\n        {\\n            if(i%7==0||i%5==0||i%3==0)\\n            {\\n                 sum +=i;\\n            }\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4004531,
                "title": "one-line-solution",
                "content": "\\n\\n# Code\\n```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum(list (filter (lambda x: (x % 7 == 0 or x % 5 == 0 or x % 3 == 0),range(1,n+1))))        \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum(list (filter (lambda x: (x % 7 == 0 or x % 5 == 0 or x % 3 == 0),range(1,n+1))))        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 4002894,
                "title": "only-code",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n         int sum=0;\\n        for(int i=1;i<=n;i++)\\n        {\\n            if(i%3==0 || i%5==0 ||i%7==0)\\n            {\\n                sum=sum+i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n         int sum=0;\\n        for(int i=1;i<=n;i++)\\n        {\\n            if(i%3==0 || i%5==0 ||i%7==0)\\n            {\\n                sum=sum+i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4002883,
                "title": "only-code",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=1;i<=n;i++)\\n        {\\n            if(i%3==0)\\n            {\\n                sum=sum+i;\\n            }\\n            else if(i%5==0)\\n            {\\n                sum=sum+i;\\n            }\\n            else if(i%7==0)\\n            {\\n                sum=sum+i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=1;i<=n;i++)\\n        {\\n            if(i%3==0)\\n            {\\n                sum=sum+i;\\n            }\\n            else if(i%5==0)\\n            {\\n                sum=sum+i;\\n            }\\n            else if(i%7==0)\\n            {\\n                sum=sum+i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4002086,
                "title": "simple-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i =1; i<=n; i++){\\n            if(i%3==0 || i%5==0 || i%7==0){\\n                sum = sum + i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i =1; i<=n; i++){\\n            if(i%3==0 || i%5==0 || i%7==0){\\n                sum = sum + i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 4000568,
                "title": "python-o-n-sol",
                "content": "# Code\\n```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        r=0\\n        for i in range(n+1):\\n            if i%3==0 or i%5==0 or i%7==0:\\n                r+=i\\n        return r\\n        \\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        r=0\\n        for i in range(n+1):\\n            if i%3==0 or i%5==0 or i%7==0:\\n                r+=i\\n        return r\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3999279,
                "title": "simple-approach",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        sum = 0\\n        for i in range(1, n + 1):\\n            if i % 3 == 0 or i % 5 == 0 or i % 7 == 0:\\n                sum = sum + i \\n        return sum\\n\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        sum = 0\\n        for i in range(1, n + 1):\\n            if i % 3 == 0 or i % 5 == 0 or i % 7 == 0:\\n                sum = sum + i \\n        return sum\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3998199,
                "title": "python-simple-answer-easy",
                "content": "# Code\\n```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        sum=0\\n        for i in range(1,n+1):\\n            if i%3==0 or i%5==0 or i%7==0 :\\n                sum+=i\\n        return sum\\n        \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        sum=0\\n        for i in range(1,n+1):\\n            if i%3==0 or i%5==0 or i%7==0 :\\n                sum+=i\\n        return sum\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3996831,
                "title": "easy-to-understand-simple-solution",
                "content": "\\n\\n# Code\\n```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        answer = 0\\n        for i in range(1, n+1):\\n            if(i % 3 == 0 or i % 5 == 0 or i % 7 == 0):\\n                answer = answer + i\\n        return answer\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        answer = 0\\n        for i in range(1, n+1):\\n            if(i % 3 == 0 or i % 5 == 0 or i % 7 == 0):\\n                answer = answer + i\\n        return answer\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3996492,
                "title": "c-very-simple-and-easy-to-understand-solution",
                "content": "# Intuition\\nThe intuition behind this solution is to iterate through all positive integers in the range `[1, n]` and check if each integer is divisible by `3`, `5`, or `7`. If an integer satisfies any of these conditions, it is added to the sum of such numbers.\\n\\n# Approach\\nThe approach to solving this problem involves the following steps:\\n1. Initialize a variable `sum` to `0` to keep track of the sum of integers that meet the conditions.\\n2. Iterate through all positive integers from `1` to `n`.\\n3. For each integer `i`, check if it is divisible by `3`, `5`, or `7` using the modulo operator (`%`).\\n4. If `i` is divisible by any of these numbers, add it to the `sum`.\\n5. Continue this process for all integers in the range `[1, n]`.\\n6. After iterating through all integers, return the `sum` as the result, which represents the sum of integers divisible by `3`, `5`, or `7` in the given range.\\n\\n# Complexity\\n- Time complexity: **O(n)**\\n\\n- Space complexity: **O(1)**\\n\\n# Code\\n```cpp\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for (int i = 1; i <= n; i++) {\\n            if (i % 3 == 0 || i % 5 == 0 || i % 7 == 0) {\\n                sum += i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```cpp\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for (int i = 1; i <= n; i++) {\\n            if (i % 3 == 0 || i % 5 == 0 || i % 7 == 0) {\\n                sum += i;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3994294,
                "title": "c-beats-97-69-of-users",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\npublic class Solution {\\n    public int SumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i = 0; i <= n; i++) {\\n            if(i % 3 == 0 || i % 5 == 0 || i % 7 == 0) {\\n                sum += i;\\n            }\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public int SumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i = 0; i <= n; i++) {\\n            if(i % 3 == 0 || i % 5 == 0 || i % 7 == 0) {\\n                sum += i;\\n            }\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3993828,
                "title": "very-simple-solution-one-line-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        res = 0\\n        for i in range(1, n + 1):\\n            if i % 3 == 0 or i % 5 == 0 or i % 7 == 0:\\n                res += i\\n        return res\\n        \\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        res = 0\\n        for i in range(1, n + 1):\\n            if i % 3 == 0 or i % 5 == 0 or i % 7 == 0:\\n                res += i\\n        return res\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3991828,
                "title": "java-easy-solution",
                "content": "\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for (int i = 1; i <= n; i++) {\\n            if (i % 3 == 0 || i % 5 == 0 || i % 7 == 0) {\\n                    sum+= i;;\\n            }\\n        }\\n\\n        return sum; \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for (int i = 1; i <= n; i++) {\\n            if (i % 3 == 0 || i % 5 == 0 || i % 7 == 0) {\\n                    sum+= i;;\\n            }\\n        }\\n\\n        return sum; \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3990492,
                "title": "simple-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n\\n        int sum=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0){\\n                sum=sum+i;\\n            }\\n        }   \\n        return sum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n\\n        int sum=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0){\\n                sum=sum+i;\\n            }\\n        }   \\n        return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3987956,
                "title": "typescript-solution",
                "content": "```\\nfunction sumOfMultiples(n: number): number {\\n    let sum: number = 0\\n    for(let i = 1; i <= n; i++){\\n        if(!(i % 3) || !(i % 5) || !(i % 7)) sum += i;\\n    }\\n    return sum;\\n};\\n```",
                "solutionTags": [
                    "JavaScript",
                    "TypeScript"
                ],
                "code": "```\\nfunction sumOfMultiples(n: number): number {\\n    let sum: number = 0\\n    for(let i = 1; i <= n; i++){\\n        if(!(i % 3) || !(i % 5) || !(i % 7)) sum += i;\\n    }\\n    return sum;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3984925,
                "title": "o-n-js-solution",
                "content": "```\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar sumOfMultiples = function(n) {\\n\\n    const arr = []\\n\\n    for (let i = 1; i <=n; i++ ) {\\n\\n        if(i % 3 === 0 || i % 5 === 0 || i % 7 === 0) {\\n            arr.push(i)\\n        }\\n\\n    }\\n\\n    return arr.reduce((acc, curr) => acc + curr, 0)\\n    \\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar sumOfMultiples = function(n) {\\n\\n    const arr = []\\n\\n    for (let i = 1; i <=n; i++ ) {\\n\\n        if(i % 3 === 0 || i % 5 === 0 || i % 7 === 0) {\\n            arr.push(i)\\n        }\\n\\n    }\\n\\n    return arr.reduce((acc, curr) => acc + curr, 0)\\n    \\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3984792,
                "title": "python-solution-made-by-a-begginer",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        z=0\\n        for i in range(n+1):\\n            if i%3==0 or i%5==0 or i%7==0:\\n                z += i\\n        return z\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        z=0\\n        for i in range(n+1):\\n            if i%3==0 or i%5==0 or i%7==0:\\n                z += i\\n        return z\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3984542,
                "title": "c-100-tc",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for (int idx = 1; idx <= n; idx++) {\\n            if (idx % 3 == 0 || idx % 5 == 0 || idx % 7 == 0) sum += idx;\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for (int idx = 1; idx <= n; idx++) {\\n            if (idx % 3 == 0 || idx % 5 == 0 || idx % 7 == 0) sum += idx;\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3984458,
                "title": "c-beats-100-easiest-code-ever",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n    int i = 1,s = 0;\\n\\tfor (; i <= n; i++)\\n\\t{\\n\\t\\tif (i%3==0 || i%5==0 || i%7==0)\\n\\t\\t\\ts += i;\\n\\t}\\n    return s;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n    int i = 1,s = 0;\\n\\tfor (; i <= n; i++)\\n\\t{\\n\\t\\tif (i%3==0 || i%5==0 || i%7==0)\\n\\t\\t\\ts += i;\\n\\t}\\n    return s;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3983337,
                "title": "easy-solution-in-python",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution(object):\\n    def sumOfMultiples(self, n):\\n        divisors = [3,5,7]\\n        sums = 0\\n        for i in range(n+1):\\n            if any(i % divisor == 0 for divisor in divisors):\\n                sums += i\\n        return sums\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def sumOfMultiples(self, n):\\n        divisors = [3,5,7]\\n        sums = 0\\n        for i in range(n+1):\\n            if any(i % divisor == 0 for divisor in divisors):\\n                sums += i\\n        return sums\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3982945,
                "title": "elegant-java-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum =0;\\n        for(int i=0;i<=n;i++)\\n        {\\n            if(i%3==0 || i%5==0 || i%7==0 )\\n            sum =sum+i;\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum =0;\\n        for(int i=0;i<=n;i++)\\n        {\\n            if(i%3==0 || i%5==0 || i%7==0 )\\n            sum =sum+i;\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3980533,
                "title": "java-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum=0;\\n        int i=1;\\n        while(i<=n){\\n            if((i%3 ==0) ||(i%5==0) ||(i%7==0)){\\n                sum+=i;\\n            }\\n            i++;\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum=0;\\n        int i=1;\\n        while(i<=n){\\n            if((i%3 ==0) ||(i%5==0) ||(i%7==0)){\\n                sum+=i;\\n            }\\n            i++;\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3971636,
                "title": "very-easy-solution-in-cpp-bro",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum=0; \\n        for(int i=1;i<=n;i++) \\n         {\\n             if(i%3==0 ||i%5==0 || i%7==0) \\n             { \\n                 sum+=i;\\n             }\\n         } \\n         return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum=0; \\n        for(int i=1;i<=n;i++) \\n         {\\n             if(i%3==0 ||i%5==0 || i%7==0) \\n             { \\n                 sum+=i;\\n             }\\n         } \\n         return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3970342,
                "title": "92-yes-easy-code-js",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar sumOfMultiples = function(n) {\\n    sum = 0;\\n    for (i = 0; i <=n; i++){\\n    if((i % 3)==0 || (i % 5) ==0 || (i % 7)==0){\\n    sum +=i;\\n    }\\n}\\nreturn sum;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar sumOfMultiples = function(n) {\\n    sum = 0;\\n    for (i = 0; i <=n; i++){\\n    if((i % 3)==0 || (i % 5) ==0 || (i % 7)==0){\\n    sum +=i;\\n    }\\n}\\nreturn sum;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3968935,
                "title": "fast-and-simple-solution-python",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        k = 0\\n        for i in range(1,n+1):\\n            if i % 3 == 0 or i % 5 == 0 or i % 7 == 0:\\n                k = k + i\\n        return k\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        k = 0\\n        for i in range(1,n+1):\\n            if i % 3 == 0 or i % 5 == 0 or i % 7 == 0:\\n                k = k + i\\n        return k\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3967777,
                "title": "simple-solution-on-js",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar sumOfMultiples = function (n) {\\n    let count = 0;\\n    for (let i = 1; i <= n; i++) {\\n        if (i % 3 === 0 || i % 5 === 0 || i % 7 === 0) {\\n            count += i\\n        }\\n    }\\n    return count;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar sumOfMultiples = function (n) {\\n    let count = 0;\\n    for (let i = 1; i <= n; i++) {\\n        if (i % 3 === 0 || i % 5 === 0 || i % 7 === 0) {\\n            count += i\\n        }\\n    }\\n    return count;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3965006,
                "title": "c-beats-100-principle-of-exclusion-inclusion",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\nUse principle of inclusion-exclusion to formulate the sum as follows, $$s = s_3 + s_5 + s_7 - s_{15} - s_{21} - s_{35} + s_{105}$$. \\n\\n# Complexity\\n- Time complexity: $$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int numOfMultiples(int n, int m){\\n        if(n<m){return 0;}\\n        else{\\n            int mults = 0; \\n            for(int i = 1; i<n+1; i++){\\n                if(i%m == 0){mults+=i;}\\n            }\\n            return mults; \\n        }\\n    }\\n    int sumOfMultiples(int n) {\\n        return numOfMultiples(n,3) + numOfMultiples(n,5) + numOfMultiples(n,7) - numOfMultiples(n,15) - numOfMultiples(n,35) - numOfMultiples(n,21) + numOfMultiples(n,105); \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int numOfMultiples(int n, int m){\\n        if(n<m){return 0;}\\n        else{\\n            int mults = 0; \\n            for(int i = 1; i<n+1; i++){\\n                if(i%m == 0){mults+=i;}\\n            }\\n            return mults; \\n        }\\n    }\\n    int sumOfMultiples(int n) {\\n        return numOfMultiples(n,3) + numOfMultiples(n,5) + numOfMultiples(n,7) - numOfMultiples(n,15) - numOfMultiples(n,35) - numOfMultiples(n,21) + numOfMultiples(n,105); \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3964491,
                "title": "c-beats-100-in-time-complexity",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int s=0;\\n        for(int i=1; i<=n;i++){\\n            if(i%3==0|| i%5==0 || i%7==0){\\n                s+=i;\\n            }\\n        }\\n        return s;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int s=0;\\n        for(int i=1; i<=n;i++){\\n            if(i%3==0|| i%5==0 || i%7==0){\\n                s+=i;\\n            }\\n        }\\n        return s;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3963353,
                "title": "easy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int t=0;t<=n;t++){\\n            if(t%3==0||t%5==0||t%7==0){\\n                sum +=t;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int t=0;t<=n;t++){\\n            if(t%3==0||t%5==0||t%7==0){\\n                sum +=t;\\n            }\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3963042,
                "title": "cpp-short-simple-brute-force",
                "content": "\\n\\n# Complexity\\n- Time complexity:\\n\\uD83D\\uDFE2$$O(n)$$\\n\\n- Space complexity:\\n\\uD83D\\uDFE2$$O(1)$$\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i = 3; i<=n; i++){\\n            if(i%3 == 0 || i%5 == 0 || i%7 == 0)sum += i;\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Array"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int sum = 0;\\n        for(int i = 3; i<=n; i++){\\n            if(i%3 == 0 || i%5 == 0 || i%7 == 0)sum += i;\\n        }\\n        return sum;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3961656,
                "title": "c-fastest",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int ans=0;\\n        for(int i=3;i<=n;i++){\\n            if(i%3==0||i%5==0||i%7==0)\\n            ans+=i;\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int sumOfMultiples(int n) {\\n        int ans=0;\\n        for(int i=3;i<=n;i++){\\n            if(i%3==0||i%5==0||i%7==0)\\n            ans+=i;\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3961483,
                "title": "sum-multiples-easy-loop-ifcondi",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0){\\n                sum+=i;\\n            }\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=1;i<=n;i++){\\n            if(i%3==0 || i%5==0 || i%7==0){\\n                sum+=i;\\n            }\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3961246,
                "title": "plz-don-t-see-without-if-else",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int result=0;\\n        for(int i=1;i<=n;i++)\\n        {\\n            result+=(i%3==0||i%5==0||i%7==0)?i:0;\\n        }\\n        return result;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int result=0;\\n        for(int i=1;i<=n;i++)\\n        {\\n            result+=(i%3==0||i%5==0||i%7==0)?i:0;\\n        }\\n        return result;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3958707,
                "title": "java-very-easy-solution-recursion-1-line-code",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        return n==0 ? 0 : (n%3==0 || n%5==0 || n%7==0) ? n+sumOfMultiples(n-1) : sumOfMultiples(n-1);\\n    }\\n}\\n```\\n\\n\\n![PLEASE_UPVOTE.png](https://assets.leetcode.com/users/images/e139ab2d-beb6-4e82-87c9-c09f74ff97c9_1692971432.8296611.jpeg)\\n",
                "solutionTags": [
                    "Java",
                    "Array",
                    "Math",
                    "Recursion",
                    "Number Theory"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        return n==0 ? 0 : (n%3==0 || n%5==0 || n%7==0) ? n+sumOfMultiples(n-1) : sumOfMultiples(n-1);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3956173,
                "title": "faster-than-100-00-begineer-friendly-easy-to-understand",
                "content": "```\\n\\tpublic int sumOfMultiples(int n) {\\n        int sum_Of_All_Integers = 0;\\n        for(int i = 1; i <= n; i++) {\\n            if(i % 3 == 0 || i % 5 == 0 || i % 7 == 0) {\\n                sum_Of_All_Integers += i;\\n            }\\n        }\\n        return sum_Of_All_Integers;\\n    }",
                "solutionTags": [
                    "Java",
                    "Python3",
                    "C",
                    "JavaScript"
                ],
                "code": "```\\n\\tpublic int sumOfMultiples(int n) {\\n        int sum_Of_All_Integers = 0;\\n        for(int i = 1; i <= n; i++) {\\n            if(i % 3 == 0 || i % 5 == 0 || i % 7 == 0) {\\n                sum_Of_All_Integers += i;\\n            }\\n        }\\n        return sum_Of_All_Integers;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 3955909,
                "title": "java-solution-beginner",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=2;i<=n;i++)\\n        {\\n            if(i%3==0 || i%5==0 || i%7==0)\\n            {\\n                sum=sum+i;\\n            }\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int sumOfMultiples(int n) {\\n        int sum=0;\\n        for(int i=2;i<=n;i++)\\n        {\\n            if(i%3==0 || i%5==0 || i%7==0)\\n            {\\n                sum=sum+i;\\n            }\\n        }\\n        return sum;\\n    }\\n}\\n```",
                "codeTag": "Java"
            }
        ],
        "discussions": [
            {
                "id": 1918052,
                "content": [
                    {
                        "username": "Harshsharma12",
                        "content": "This is very easy problem \\nfirst initialize result variable\\niterate loop till n \\nand modulo apply"
                    },
                    {
                        "username": "botan",
                        "content": "O(1) solution in JavaScript with graphic explanation:\\n\\nhttps://leetcode.com/problems/sum-multiples/solutions/3450363/javascript-100-time-o-1-time-o-1-space-math"
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "Do you know there's a better way to do it than brute force?\nYou can actually solve it in O(1)!\n\nIf you're looking for a detailed explanation of the process, from the easy brute force to the step by step proof of the O(1) solution, check out my solution:\n[easy brute force => cool O(1)](https://leetcode.com/problems/sum-multiples/solutions/3446111/easy-brute-force-cool-o-1/)"
                    },
                    {
                        "username": "hamdmrady63",
                        "content": "class Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum(list (filter (lambda x: (x % 7 == 0 or x % 5 == 0 or x % 3 == 0),range(1,n+1))))     "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\nint sumOfMultiples(int n) {\n        int sum = 0;\n        int n3 = n/3;\n        int n5 = n/5;\n        int n7 = n/7;\n        int n15 = n/15;\n        int n21 = n/21;\n        int n35 = n/35;\n        sum += 3*(n3*(n3+1))/2;\n        sum += 5*(n5*(n5+1))/2;\n        sum += 7*(n7*(n7+1))/2;\n        sum -= 15*(n15*(n15+1))/2;\n        sum -= 21*(n21*(n21+1))/2;\n        sum -= 35*(n35*(n35+1))/2;\n        return sum;\n    }\n 🟢only working till n = 104\ncan some one suggest what is the problem here\n"
                    },
                    {
                        "username": "harshvashishta",
                        "content": "class Solution {\\n    public int sumOfMultiples(int n) {\\n        \\n        int sum_3 = getSum(3,n);\\n        int sum_5 = getSum(5,n);\\n        int sum_7 = getSum(7,n);\\n        \\n        int sum_3_5 = getSum(15,n);\\n        int sum_5_7 = getSum(35,n);\\n        int sum_3_7 = getSum(21,n);\\n\\n        int sum_3_5_7 = getSum(105,n);\\n\\n        return sum_3 + sum_5 + sum_7 - sum_3_5 - sum_5_7 - sum_3_7 + (sum_3_5_7);\\n        \\n    }\\n\\n    public int getSum(int val, int n){\\n        int i = n/val;\\n        return val*((i*(i+1))/2);\\n    }\\n}"
                    },
                    {
                        "username": "FerdinaKusumah",
                        "content": "Solution for this quite straight forward\\n\\n* Define variable result\\n* Iterate from 1 to n\\n* if (num mod 3 is 0) or (num mod 5 is 0) or (num mod 7 is 0) then add result with number\\n* return result"
                    },
                    {
                        "username": "iffishells",
                        "content": " `class Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        divisible = [3,5,7]\\n        count  = []\\n        for number in range(1,n+1):\\n            # print(\\'Number : {} \\'.format(number))\\n            for div in divisible:\\n                if number%div==0:\\n                    print(div,number)\\n                    if number not in count:\\n                        count.append(number)\\n        print(count)\\n        return sum(count)`\\n\\nMy Solution simple and easy to understand"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "shevartsoft",
                        "content": "so stupid to put this in a discussion "
                    },
                    {
                        "username": "Mamun429",
                        "content": "easy problem"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you"
                    },
                    {
                        "username": "NoMansGhost",
                        "content": "Holy easy, Batman!"
                    },
                    {
                        "username": "karunakarvarada73",
                        "content": "I think this is not a difficult question.\\nNo interviewer can ask this question in interviews\\uD83D\\uDE02"
                    },
                    {
                        "username": "charonme",
                        "content": "[@cartesPerforees](/cartesPerforees) exactly this, or I would ask it and see which candidates come up with the O(1) solution by themselves"
                    },
                    {
                        "username": "MobiusX",
                        "content": "[@cartesPerforees](/cartesPerforees) correct. everyone starts somewhere. well said."
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "It's marked as an easy question. It's not a very incredible news that you don't think it's difficult, that's kinda the point. You could say that of all easy questions, but beginners have to start somewhere.\nAdditinally, an interviewer could ask you that, but only allowing O(1) time complexity. Would you still laugh? ;)"
                    }
                ]
            },
            {
                "id": 1872781,
                "content": [
                    {
                        "username": "Harshsharma12",
                        "content": "This is very easy problem \\nfirst initialize result variable\\niterate loop till n \\nand modulo apply"
                    },
                    {
                        "username": "botan",
                        "content": "O(1) solution in JavaScript with graphic explanation:\\n\\nhttps://leetcode.com/problems/sum-multiples/solutions/3450363/javascript-100-time-o-1-time-o-1-space-math"
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "Do you know there's a better way to do it than brute force?\nYou can actually solve it in O(1)!\n\nIf you're looking for a detailed explanation of the process, from the easy brute force to the step by step proof of the O(1) solution, check out my solution:\n[easy brute force => cool O(1)](https://leetcode.com/problems/sum-multiples/solutions/3446111/easy-brute-force-cool-o-1/)"
                    },
                    {
                        "username": "hamdmrady63",
                        "content": "class Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum(list (filter (lambda x: (x % 7 == 0 or x % 5 == 0 or x % 3 == 0),range(1,n+1))))     "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\nint sumOfMultiples(int n) {\n        int sum = 0;\n        int n3 = n/3;\n        int n5 = n/5;\n        int n7 = n/7;\n        int n15 = n/15;\n        int n21 = n/21;\n        int n35 = n/35;\n        sum += 3*(n3*(n3+1))/2;\n        sum += 5*(n5*(n5+1))/2;\n        sum += 7*(n7*(n7+1))/2;\n        sum -= 15*(n15*(n15+1))/2;\n        sum -= 21*(n21*(n21+1))/2;\n        sum -= 35*(n35*(n35+1))/2;\n        return sum;\n    }\n 🟢only working till n = 104\ncan some one suggest what is the problem here\n"
                    },
                    {
                        "username": "harshvashishta",
                        "content": "class Solution {\\n    public int sumOfMultiples(int n) {\\n        \\n        int sum_3 = getSum(3,n);\\n        int sum_5 = getSum(5,n);\\n        int sum_7 = getSum(7,n);\\n        \\n        int sum_3_5 = getSum(15,n);\\n        int sum_5_7 = getSum(35,n);\\n        int sum_3_7 = getSum(21,n);\\n\\n        int sum_3_5_7 = getSum(105,n);\\n\\n        return sum_3 + sum_5 + sum_7 - sum_3_5 - sum_5_7 - sum_3_7 + (sum_3_5_7);\\n        \\n    }\\n\\n    public int getSum(int val, int n){\\n        int i = n/val;\\n        return val*((i*(i+1))/2);\\n    }\\n}"
                    },
                    {
                        "username": "FerdinaKusumah",
                        "content": "Solution for this quite straight forward\\n\\n* Define variable result\\n* Iterate from 1 to n\\n* if (num mod 3 is 0) or (num mod 5 is 0) or (num mod 7 is 0) then add result with number\\n* return result"
                    },
                    {
                        "username": "iffishells",
                        "content": " `class Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        divisible = [3,5,7]\\n        count  = []\\n        for number in range(1,n+1):\\n            # print(\\'Number : {} \\'.format(number))\\n            for div in divisible:\\n                if number%div==0:\\n                    print(div,number)\\n                    if number not in count:\\n                        count.append(number)\\n        print(count)\\n        return sum(count)`\\n\\nMy Solution simple and easy to understand"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "shevartsoft",
                        "content": "so stupid to put this in a discussion "
                    },
                    {
                        "username": "Mamun429",
                        "content": "easy problem"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you"
                    },
                    {
                        "username": "NoMansGhost",
                        "content": "Holy easy, Batman!"
                    },
                    {
                        "username": "karunakarvarada73",
                        "content": "I think this is not a difficult question.\\nNo interviewer can ask this question in interviews\\uD83D\\uDE02"
                    },
                    {
                        "username": "charonme",
                        "content": "[@cartesPerforees](/cartesPerforees) exactly this, or I would ask it and see which candidates come up with the O(1) solution by themselves"
                    },
                    {
                        "username": "MobiusX",
                        "content": "[@cartesPerforees](/cartesPerforees) correct. everyone starts somewhere. well said."
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "It's marked as an easy question. It's not a very incredible news that you don't think it's difficult, that's kinda the point. You could say that of all easy questions, but beginners have to start somewhere.\nAdditinally, an interviewer could ask you that, but only allowing O(1) time complexity. Would you still laugh? ;)"
                    }
                ]
            },
            {
                "id": 1871652,
                "content": [
                    {
                        "username": "Harshsharma12",
                        "content": "This is very easy problem \\nfirst initialize result variable\\niterate loop till n \\nand modulo apply"
                    },
                    {
                        "username": "botan",
                        "content": "O(1) solution in JavaScript with graphic explanation:\\n\\nhttps://leetcode.com/problems/sum-multiples/solutions/3450363/javascript-100-time-o-1-time-o-1-space-math"
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "Do you know there's a better way to do it than brute force?\nYou can actually solve it in O(1)!\n\nIf you're looking for a detailed explanation of the process, from the easy brute force to the step by step proof of the O(1) solution, check out my solution:\n[easy brute force => cool O(1)](https://leetcode.com/problems/sum-multiples/solutions/3446111/easy-brute-force-cool-o-1/)"
                    },
                    {
                        "username": "hamdmrady63",
                        "content": "class Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum(list (filter (lambda x: (x % 7 == 0 or x % 5 == 0 or x % 3 == 0),range(1,n+1))))     "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\nint sumOfMultiples(int n) {\n        int sum = 0;\n        int n3 = n/3;\n        int n5 = n/5;\n        int n7 = n/7;\n        int n15 = n/15;\n        int n21 = n/21;\n        int n35 = n/35;\n        sum += 3*(n3*(n3+1))/2;\n        sum += 5*(n5*(n5+1))/2;\n        sum += 7*(n7*(n7+1))/2;\n        sum -= 15*(n15*(n15+1))/2;\n        sum -= 21*(n21*(n21+1))/2;\n        sum -= 35*(n35*(n35+1))/2;\n        return sum;\n    }\n 🟢only working till n = 104\ncan some one suggest what is the problem here\n"
                    },
                    {
                        "username": "harshvashishta",
                        "content": "class Solution {\\n    public int sumOfMultiples(int n) {\\n        \\n        int sum_3 = getSum(3,n);\\n        int sum_5 = getSum(5,n);\\n        int sum_7 = getSum(7,n);\\n        \\n        int sum_3_5 = getSum(15,n);\\n        int sum_5_7 = getSum(35,n);\\n        int sum_3_7 = getSum(21,n);\\n\\n        int sum_3_5_7 = getSum(105,n);\\n\\n        return sum_3 + sum_5 + sum_7 - sum_3_5 - sum_5_7 - sum_3_7 + (sum_3_5_7);\\n        \\n    }\\n\\n    public int getSum(int val, int n){\\n        int i = n/val;\\n        return val*((i*(i+1))/2);\\n    }\\n}"
                    },
                    {
                        "username": "FerdinaKusumah",
                        "content": "Solution for this quite straight forward\\n\\n* Define variable result\\n* Iterate from 1 to n\\n* if (num mod 3 is 0) or (num mod 5 is 0) or (num mod 7 is 0) then add result with number\\n* return result"
                    },
                    {
                        "username": "iffishells",
                        "content": " `class Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        divisible = [3,5,7]\\n        count  = []\\n        for number in range(1,n+1):\\n            # print(\\'Number : {} \\'.format(number))\\n            for div in divisible:\\n                if number%div==0:\\n                    print(div,number)\\n                    if number not in count:\\n                        count.append(number)\\n        print(count)\\n        return sum(count)`\\n\\nMy Solution simple and easy to understand"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "shevartsoft",
                        "content": "so stupid to put this in a discussion "
                    },
                    {
                        "username": "Mamun429",
                        "content": "easy problem"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you"
                    },
                    {
                        "username": "NoMansGhost",
                        "content": "Holy easy, Batman!"
                    },
                    {
                        "username": "karunakarvarada73",
                        "content": "I think this is not a difficult question.\\nNo interviewer can ask this question in interviews\\uD83D\\uDE02"
                    },
                    {
                        "username": "charonme",
                        "content": "[@cartesPerforees](/cartesPerforees) exactly this, or I would ask it and see which candidates come up with the O(1) solution by themselves"
                    },
                    {
                        "username": "MobiusX",
                        "content": "[@cartesPerforees](/cartesPerforees) correct. everyone starts somewhere. well said."
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "It's marked as an easy question. It's not a very incredible news that you don't think it's difficult, that's kinda the point. You could say that of all easy questions, but beginners have to start somewhere.\nAdditinally, an interviewer could ask you that, but only allowing O(1) time complexity. Would you still laugh? ;)"
                    }
                ]
            },
            {
                "id": 2044904,
                "content": [
                    {
                        "username": "Harshsharma12",
                        "content": "This is very easy problem \\nfirst initialize result variable\\niterate loop till n \\nand modulo apply"
                    },
                    {
                        "username": "botan",
                        "content": "O(1) solution in JavaScript with graphic explanation:\\n\\nhttps://leetcode.com/problems/sum-multiples/solutions/3450363/javascript-100-time-o-1-time-o-1-space-math"
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "Do you know there's a better way to do it than brute force?\nYou can actually solve it in O(1)!\n\nIf you're looking for a detailed explanation of the process, from the easy brute force to the step by step proof of the O(1) solution, check out my solution:\n[easy brute force => cool O(1)](https://leetcode.com/problems/sum-multiples/solutions/3446111/easy-brute-force-cool-o-1/)"
                    },
                    {
                        "username": "hamdmrady63",
                        "content": "class Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum(list (filter (lambda x: (x % 7 == 0 or x % 5 == 0 or x % 3 == 0),range(1,n+1))))     "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\nint sumOfMultiples(int n) {\n        int sum = 0;\n        int n3 = n/3;\n        int n5 = n/5;\n        int n7 = n/7;\n        int n15 = n/15;\n        int n21 = n/21;\n        int n35 = n/35;\n        sum += 3*(n3*(n3+1))/2;\n        sum += 5*(n5*(n5+1))/2;\n        sum += 7*(n7*(n7+1))/2;\n        sum -= 15*(n15*(n15+1))/2;\n        sum -= 21*(n21*(n21+1))/2;\n        sum -= 35*(n35*(n35+1))/2;\n        return sum;\n    }\n 🟢only working till n = 104\ncan some one suggest what is the problem here\n"
                    },
                    {
                        "username": "harshvashishta",
                        "content": "class Solution {\\n    public int sumOfMultiples(int n) {\\n        \\n        int sum_3 = getSum(3,n);\\n        int sum_5 = getSum(5,n);\\n        int sum_7 = getSum(7,n);\\n        \\n        int sum_3_5 = getSum(15,n);\\n        int sum_5_7 = getSum(35,n);\\n        int sum_3_7 = getSum(21,n);\\n\\n        int sum_3_5_7 = getSum(105,n);\\n\\n        return sum_3 + sum_5 + sum_7 - sum_3_5 - sum_5_7 - sum_3_7 + (sum_3_5_7);\\n        \\n    }\\n\\n    public int getSum(int val, int n){\\n        int i = n/val;\\n        return val*((i*(i+1))/2);\\n    }\\n}"
                    },
                    {
                        "username": "FerdinaKusumah",
                        "content": "Solution for this quite straight forward\\n\\n* Define variable result\\n* Iterate from 1 to n\\n* if (num mod 3 is 0) or (num mod 5 is 0) or (num mod 7 is 0) then add result with number\\n* return result"
                    },
                    {
                        "username": "iffishells",
                        "content": " `class Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        divisible = [3,5,7]\\n        count  = []\\n        for number in range(1,n+1):\\n            # print(\\'Number : {} \\'.format(number))\\n            for div in divisible:\\n                if number%div==0:\\n                    print(div,number)\\n                    if number not in count:\\n                        count.append(number)\\n        print(count)\\n        return sum(count)`\\n\\nMy Solution simple and easy to understand"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "shevartsoft",
                        "content": "so stupid to put this in a discussion "
                    },
                    {
                        "username": "Mamun429",
                        "content": "easy problem"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you"
                    },
                    {
                        "username": "NoMansGhost",
                        "content": "Holy easy, Batman!"
                    },
                    {
                        "username": "karunakarvarada73",
                        "content": "I think this is not a difficult question.\\nNo interviewer can ask this question in interviews\\uD83D\\uDE02"
                    },
                    {
                        "username": "charonme",
                        "content": "[@cartesPerforees](/cartesPerforees) exactly this, or I would ask it and see which candidates come up with the O(1) solution by themselves"
                    },
                    {
                        "username": "MobiusX",
                        "content": "[@cartesPerforees](/cartesPerforees) correct. everyone starts somewhere. well said."
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "It's marked as an easy question. It's not a very incredible news that you don't think it's difficult, that's kinda the point. You could say that of all easy questions, but beginners have to start somewhere.\nAdditinally, an interviewer could ask you that, but only allowing O(1) time complexity. Would you still laugh? ;)"
                    }
                ]
            },
            {
                "id": 2031181,
                "content": [
                    {
                        "username": "Harshsharma12",
                        "content": "This is very easy problem \\nfirst initialize result variable\\niterate loop till n \\nand modulo apply"
                    },
                    {
                        "username": "botan",
                        "content": "O(1) solution in JavaScript with graphic explanation:\\n\\nhttps://leetcode.com/problems/sum-multiples/solutions/3450363/javascript-100-time-o-1-time-o-1-space-math"
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "Do you know there's a better way to do it than brute force?\nYou can actually solve it in O(1)!\n\nIf you're looking for a detailed explanation of the process, from the easy brute force to the step by step proof of the O(1) solution, check out my solution:\n[easy brute force => cool O(1)](https://leetcode.com/problems/sum-multiples/solutions/3446111/easy-brute-force-cool-o-1/)"
                    },
                    {
                        "username": "hamdmrady63",
                        "content": "class Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum(list (filter (lambda x: (x % 7 == 0 or x % 5 == 0 or x % 3 == 0),range(1,n+1))))     "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\nint sumOfMultiples(int n) {\n        int sum = 0;\n        int n3 = n/3;\n        int n5 = n/5;\n        int n7 = n/7;\n        int n15 = n/15;\n        int n21 = n/21;\n        int n35 = n/35;\n        sum += 3*(n3*(n3+1))/2;\n        sum += 5*(n5*(n5+1))/2;\n        sum += 7*(n7*(n7+1))/2;\n        sum -= 15*(n15*(n15+1))/2;\n        sum -= 21*(n21*(n21+1))/2;\n        sum -= 35*(n35*(n35+1))/2;\n        return sum;\n    }\n 🟢only working till n = 104\ncan some one suggest what is the problem here\n"
                    },
                    {
                        "username": "harshvashishta",
                        "content": "class Solution {\\n    public int sumOfMultiples(int n) {\\n        \\n        int sum_3 = getSum(3,n);\\n        int sum_5 = getSum(5,n);\\n        int sum_7 = getSum(7,n);\\n        \\n        int sum_3_5 = getSum(15,n);\\n        int sum_5_7 = getSum(35,n);\\n        int sum_3_7 = getSum(21,n);\\n\\n        int sum_3_5_7 = getSum(105,n);\\n\\n        return sum_3 + sum_5 + sum_7 - sum_3_5 - sum_5_7 - sum_3_7 + (sum_3_5_7);\\n        \\n    }\\n\\n    public int getSum(int val, int n){\\n        int i = n/val;\\n        return val*((i*(i+1))/2);\\n    }\\n}"
                    },
                    {
                        "username": "FerdinaKusumah",
                        "content": "Solution for this quite straight forward\\n\\n* Define variable result\\n* Iterate from 1 to n\\n* if (num mod 3 is 0) or (num mod 5 is 0) or (num mod 7 is 0) then add result with number\\n* return result"
                    },
                    {
                        "username": "iffishells",
                        "content": " `class Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        divisible = [3,5,7]\\n        count  = []\\n        for number in range(1,n+1):\\n            # print(\\'Number : {} \\'.format(number))\\n            for div in divisible:\\n                if number%div==0:\\n                    print(div,number)\\n                    if number not in count:\\n                        count.append(number)\\n        print(count)\\n        return sum(count)`\\n\\nMy Solution simple and easy to understand"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "shevartsoft",
                        "content": "so stupid to put this in a discussion "
                    },
                    {
                        "username": "Mamun429",
                        "content": "easy problem"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you"
                    },
                    {
                        "username": "NoMansGhost",
                        "content": "Holy easy, Batman!"
                    },
                    {
                        "username": "karunakarvarada73",
                        "content": "I think this is not a difficult question.\\nNo interviewer can ask this question in interviews\\uD83D\\uDE02"
                    },
                    {
                        "username": "charonme",
                        "content": "[@cartesPerforees](/cartesPerforees) exactly this, or I would ask it and see which candidates come up with the O(1) solution by themselves"
                    },
                    {
                        "username": "MobiusX",
                        "content": "[@cartesPerforees](/cartesPerforees) correct. everyone starts somewhere. well said."
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "It's marked as an easy question. It's not a very incredible news that you don't think it's difficult, that's kinda the point. You could say that of all easy questions, but beginners have to start somewhere.\nAdditinally, an interviewer could ask you that, but only allowing O(1) time complexity. Would you still laugh? ;)"
                    }
                ]
            },
            {
                "id": 2026526,
                "content": [
                    {
                        "username": "Harshsharma12",
                        "content": "This is very easy problem \\nfirst initialize result variable\\niterate loop till n \\nand modulo apply"
                    },
                    {
                        "username": "botan",
                        "content": "O(1) solution in JavaScript with graphic explanation:\\n\\nhttps://leetcode.com/problems/sum-multiples/solutions/3450363/javascript-100-time-o-1-time-o-1-space-math"
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "Do you know there's a better way to do it than brute force?\nYou can actually solve it in O(1)!\n\nIf you're looking for a detailed explanation of the process, from the easy brute force to the step by step proof of the O(1) solution, check out my solution:\n[easy brute force => cool O(1)](https://leetcode.com/problems/sum-multiples/solutions/3446111/easy-brute-force-cool-o-1/)"
                    },
                    {
                        "username": "hamdmrady63",
                        "content": "class Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum(list (filter (lambda x: (x % 7 == 0 or x % 5 == 0 or x % 3 == 0),range(1,n+1))))     "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\nint sumOfMultiples(int n) {\n        int sum = 0;\n        int n3 = n/3;\n        int n5 = n/5;\n        int n7 = n/7;\n        int n15 = n/15;\n        int n21 = n/21;\n        int n35 = n/35;\n        sum += 3*(n3*(n3+1))/2;\n        sum += 5*(n5*(n5+1))/2;\n        sum += 7*(n7*(n7+1))/2;\n        sum -= 15*(n15*(n15+1))/2;\n        sum -= 21*(n21*(n21+1))/2;\n        sum -= 35*(n35*(n35+1))/2;\n        return sum;\n    }\n 🟢only working till n = 104\ncan some one suggest what is the problem here\n"
                    },
                    {
                        "username": "harshvashishta",
                        "content": "class Solution {\\n    public int sumOfMultiples(int n) {\\n        \\n        int sum_3 = getSum(3,n);\\n        int sum_5 = getSum(5,n);\\n        int sum_7 = getSum(7,n);\\n        \\n        int sum_3_5 = getSum(15,n);\\n        int sum_5_7 = getSum(35,n);\\n        int sum_3_7 = getSum(21,n);\\n\\n        int sum_3_5_7 = getSum(105,n);\\n\\n        return sum_3 + sum_5 + sum_7 - sum_3_5 - sum_5_7 - sum_3_7 + (sum_3_5_7);\\n        \\n    }\\n\\n    public int getSum(int val, int n){\\n        int i = n/val;\\n        return val*((i*(i+1))/2);\\n    }\\n}"
                    },
                    {
                        "username": "FerdinaKusumah",
                        "content": "Solution for this quite straight forward\\n\\n* Define variable result\\n* Iterate from 1 to n\\n* if (num mod 3 is 0) or (num mod 5 is 0) or (num mod 7 is 0) then add result with number\\n* return result"
                    },
                    {
                        "username": "iffishells",
                        "content": " `class Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        divisible = [3,5,7]\\n        count  = []\\n        for number in range(1,n+1):\\n            # print(\\'Number : {} \\'.format(number))\\n            for div in divisible:\\n                if number%div==0:\\n                    print(div,number)\\n                    if number not in count:\\n                        count.append(number)\\n        print(count)\\n        return sum(count)`\\n\\nMy Solution simple and easy to understand"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "shevartsoft",
                        "content": "so stupid to put this in a discussion "
                    },
                    {
                        "username": "Mamun429",
                        "content": "easy problem"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you"
                    },
                    {
                        "username": "NoMansGhost",
                        "content": "Holy easy, Batman!"
                    },
                    {
                        "username": "karunakarvarada73",
                        "content": "I think this is not a difficult question.\\nNo interviewer can ask this question in interviews\\uD83D\\uDE02"
                    },
                    {
                        "username": "charonme",
                        "content": "[@cartesPerforees](/cartesPerforees) exactly this, or I would ask it and see which candidates come up with the O(1) solution by themselves"
                    },
                    {
                        "username": "MobiusX",
                        "content": "[@cartesPerforees](/cartesPerforees) correct. everyone starts somewhere. well said."
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "It's marked as an easy question. It's not a very incredible news that you don't think it's difficult, that's kinda the point. You could say that of all easy questions, but beginners have to start somewhere.\nAdditinally, an interviewer could ask you that, but only allowing O(1) time complexity. Would you still laugh? ;)"
                    }
                ]
            },
            {
                "id": 1913039,
                "content": [
                    {
                        "username": "Harshsharma12",
                        "content": "This is very easy problem \\nfirst initialize result variable\\niterate loop till n \\nand modulo apply"
                    },
                    {
                        "username": "botan",
                        "content": "O(1) solution in JavaScript with graphic explanation:\\n\\nhttps://leetcode.com/problems/sum-multiples/solutions/3450363/javascript-100-time-o-1-time-o-1-space-math"
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "Do you know there's a better way to do it than brute force?\nYou can actually solve it in O(1)!\n\nIf you're looking for a detailed explanation of the process, from the easy brute force to the step by step proof of the O(1) solution, check out my solution:\n[easy brute force => cool O(1)](https://leetcode.com/problems/sum-multiples/solutions/3446111/easy-brute-force-cool-o-1/)"
                    },
                    {
                        "username": "hamdmrady63",
                        "content": "class Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum(list (filter (lambda x: (x % 7 == 0 or x % 5 == 0 or x % 3 == 0),range(1,n+1))))     "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\nint sumOfMultiples(int n) {\n        int sum = 0;\n        int n3 = n/3;\n        int n5 = n/5;\n        int n7 = n/7;\n        int n15 = n/15;\n        int n21 = n/21;\n        int n35 = n/35;\n        sum += 3*(n3*(n3+1))/2;\n        sum += 5*(n5*(n5+1))/2;\n        sum += 7*(n7*(n7+1))/2;\n        sum -= 15*(n15*(n15+1))/2;\n        sum -= 21*(n21*(n21+1))/2;\n        sum -= 35*(n35*(n35+1))/2;\n        return sum;\n    }\n 🟢only working till n = 104\ncan some one suggest what is the problem here\n"
                    },
                    {
                        "username": "harshvashishta",
                        "content": "class Solution {\\n    public int sumOfMultiples(int n) {\\n        \\n        int sum_3 = getSum(3,n);\\n        int sum_5 = getSum(5,n);\\n        int sum_7 = getSum(7,n);\\n        \\n        int sum_3_5 = getSum(15,n);\\n        int sum_5_7 = getSum(35,n);\\n        int sum_3_7 = getSum(21,n);\\n\\n        int sum_3_5_7 = getSum(105,n);\\n\\n        return sum_3 + sum_5 + sum_7 - sum_3_5 - sum_5_7 - sum_3_7 + (sum_3_5_7);\\n        \\n    }\\n\\n    public int getSum(int val, int n){\\n        int i = n/val;\\n        return val*((i*(i+1))/2);\\n    }\\n}"
                    },
                    {
                        "username": "FerdinaKusumah",
                        "content": "Solution for this quite straight forward\\n\\n* Define variable result\\n* Iterate from 1 to n\\n* if (num mod 3 is 0) or (num mod 5 is 0) or (num mod 7 is 0) then add result with number\\n* return result"
                    },
                    {
                        "username": "iffishells",
                        "content": " `class Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        divisible = [3,5,7]\\n        count  = []\\n        for number in range(1,n+1):\\n            # print(\\'Number : {} \\'.format(number))\\n            for div in divisible:\\n                if number%div==0:\\n                    print(div,number)\\n                    if number not in count:\\n                        count.append(number)\\n        print(count)\\n        return sum(count)`\\n\\nMy Solution simple and easy to understand"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "shevartsoft",
                        "content": "so stupid to put this in a discussion "
                    },
                    {
                        "username": "Mamun429",
                        "content": "easy problem"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you"
                    },
                    {
                        "username": "NoMansGhost",
                        "content": "Holy easy, Batman!"
                    },
                    {
                        "username": "karunakarvarada73",
                        "content": "I think this is not a difficult question.\\nNo interviewer can ask this question in interviews\\uD83D\\uDE02"
                    },
                    {
                        "username": "charonme",
                        "content": "[@cartesPerforees](/cartesPerforees) exactly this, or I would ask it and see which candidates come up with the O(1) solution by themselves"
                    },
                    {
                        "username": "MobiusX",
                        "content": "[@cartesPerforees](/cartesPerforees) correct. everyone starts somewhere. well said."
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "It's marked as an easy question. It's not a very incredible news that you don't think it's difficult, that's kinda the point. You could say that of all easy questions, but beginners have to start somewhere.\nAdditinally, an interviewer could ask you that, but only allowing O(1) time complexity. Would you still laugh? ;)"
                    }
                ]
            },
            {
                "id": 1881603,
                "content": [
                    {
                        "username": "Harshsharma12",
                        "content": "This is very easy problem \\nfirst initialize result variable\\niterate loop till n \\nand modulo apply"
                    },
                    {
                        "username": "botan",
                        "content": "O(1) solution in JavaScript with graphic explanation:\\n\\nhttps://leetcode.com/problems/sum-multiples/solutions/3450363/javascript-100-time-o-1-time-o-1-space-math"
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "Do you know there's a better way to do it than brute force?\nYou can actually solve it in O(1)!\n\nIf you're looking for a detailed explanation of the process, from the easy brute force to the step by step proof of the O(1) solution, check out my solution:\n[easy brute force => cool O(1)](https://leetcode.com/problems/sum-multiples/solutions/3446111/easy-brute-force-cool-o-1/)"
                    },
                    {
                        "username": "hamdmrady63",
                        "content": "class Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum(list (filter (lambda x: (x % 7 == 0 or x % 5 == 0 or x % 3 == 0),range(1,n+1))))     "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\nint sumOfMultiples(int n) {\n        int sum = 0;\n        int n3 = n/3;\n        int n5 = n/5;\n        int n7 = n/7;\n        int n15 = n/15;\n        int n21 = n/21;\n        int n35 = n/35;\n        sum += 3*(n3*(n3+1))/2;\n        sum += 5*(n5*(n5+1))/2;\n        sum += 7*(n7*(n7+1))/2;\n        sum -= 15*(n15*(n15+1))/2;\n        sum -= 21*(n21*(n21+1))/2;\n        sum -= 35*(n35*(n35+1))/2;\n        return sum;\n    }\n 🟢only working till n = 104\ncan some one suggest what is the problem here\n"
                    },
                    {
                        "username": "harshvashishta",
                        "content": "class Solution {\\n    public int sumOfMultiples(int n) {\\n        \\n        int sum_3 = getSum(3,n);\\n        int sum_5 = getSum(5,n);\\n        int sum_7 = getSum(7,n);\\n        \\n        int sum_3_5 = getSum(15,n);\\n        int sum_5_7 = getSum(35,n);\\n        int sum_3_7 = getSum(21,n);\\n\\n        int sum_3_5_7 = getSum(105,n);\\n\\n        return sum_3 + sum_5 + sum_7 - sum_3_5 - sum_5_7 - sum_3_7 + (sum_3_5_7);\\n        \\n    }\\n\\n    public int getSum(int val, int n){\\n        int i = n/val;\\n        return val*((i*(i+1))/2);\\n    }\\n}"
                    },
                    {
                        "username": "FerdinaKusumah",
                        "content": "Solution for this quite straight forward\\n\\n* Define variable result\\n* Iterate from 1 to n\\n* if (num mod 3 is 0) or (num mod 5 is 0) or (num mod 7 is 0) then add result with number\\n* return result"
                    },
                    {
                        "username": "iffishells",
                        "content": " `class Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        divisible = [3,5,7]\\n        count  = []\\n        for number in range(1,n+1):\\n            # print(\\'Number : {} \\'.format(number))\\n            for div in divisible:\\n                if number%div==0:\\n                    print(div,number)\\n                    if number not in count:\\n                        count.append(number)\\n        print(count)\\n        return sum(count)`\\n\\nMy Solution simple and easy to understand"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "shevartsoft",
                        "content": "so stupid to put this in a discussion "
                    },
                    {
                        "username": "Mamun429",
                        "content": "easy problem"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you"
                    },
                    {
                        "username": "NoMansGhost",
                        "content": "Holy easy, Batman!"
                    },
                    {
                        "username": "karunakarvarada73",
                        "content": "I think this is not a difficult question.\\nNo interviewer can ask this question in interviews\\uD83D\\uDE02"
                    },
                    {
                        "username": "charonme",
                        "content": "[@cartesPerforees](/cartesPerforees) exactly this, or I would ask it and see which candidates come up with the O(1) solution by themselves"
                    },
                    {
                        "username": "MobiusX",
                        "content": "[@cartesPerforees](/cartesPerforees) correct. everyone starts somewhere. well said."
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "It's marked as an easy question. It's not a very incredible news that you don't think it's difficult, that's kinda the point. You could say that of all easy questions, but beginners have to start somewhere.\nAdditinally, an interviewer could ask you that, but only allowing O(1) time complexity. Would you still laugh? ;)"
                    }
                ]
            },
            {
                "id": 1872921,
                "content": [
                    {
                        "username": "Harshsharma12",
                        "content": "This is very easy problem \\nfirst initialize result variable\\niterate loop till n \\nand modulo apply"
                    },
                    {
                        "username": "botan",
                        "content": "O(1) solution in JavaScript with graphic explanation:\\n\\nhttps://leetcode.com/problems/sum-multiples/solutions/3450363/javascript-100-time-o-1-time-o-1-space-math"
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "Do you know there's a better way to do it than brute force?\nYou can actually solve it in O(1)!\n\nIf you're looking for a detailed explanation of the process, from the easy brute force to the step by step proof of the O(1) solution, check out my solution:\n[easy brute force => cool O(1)](https://leetcode.com/problems/sum-multiples/solutions/3446111/easy-brute-force-cool-o-1/)"
                    },
                    {
                        "username": "hamdmrady63",
                        "content": "class Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum(list (filter (lambda x: (x % 7 == 0 or x % 5 == 0 or x % 3 == 0),range(1,n+1))))     "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\nint sumOfMultiples(int n) {\n        int sum = 0;\n        int n3 = n/3;\n        int n5 = n/5;\n        int n7 = n/7;\n        int n15 = n/15;\n        int n21 = n/21;\n        int n35 = n/35;\n        sum += 3*(n3*(n3+1))/2;\n        sum += 5*(n5*(n5+1))/2;\n        sum += 7*(n7*(n7+1))/2;\n        sum -= 15*(n15*(n15+1))/2;\n        sum -= 21*(n21*(n21+1))/2;\n        sum -= 35*(n35*(n35+1))/2;\n        return sum;\n    }\n 🟢only working till n = 104\ncan some one suggest what is the problem here\n"
                    },
                    {
                        "username": "harshvashishta",
                        "content": "class Solution {\\n    public int sumOfMultiples(int n) {\\n        \\n        int sum_3 = getSum(3,n);\\n        int sum_5 = getSum(5,n);\\n        int sum_7 = getSum(7,n);\\n        \\n        int sum_3_5 = getSum(15,n);\\n        int sum_5_7 = getSum(35,n);\\n        int sum_3_7 = getSum(21,n);\\n\\n        int sum_3_5_7 = getSum(105,n);\\n\\n        return sum_3 + sum_5 + sum_7 - sum_3_5 - sum_5_7 - sum_3_7 + (sum_3_5_7);\\n        \\n    }\\n\\n    public int getSum(int val, int n){\\n        int i = n/val;\\n        return val*((i*(i+1))/2);\\n    }\\n}"
                    },
                    {
                        "username": "FerdinaKusumah",
                        "content": "Solution for this quite straight forward\\n\\n* Define variable result\\n* Iterate from 1 to n\\n* if (num mod 3 is 0) or (num mod 5 is 0) or (num mod 7 is 0) then add result with number\\n* return result"
                    },
                    {
                        "username": "iffishells",
                        "content": " `class Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        divisible = [3,5,7]\\n        count  = []\\n        for number in range(1,n+1):\\n            # print(\\'Number : {} \\'.format(number))\\n            for div in divisible:\\n                if number%div==0:\\n                    print(div,number)\\n                    if number not in count:\\n                        count.append(number)\\n        print(count)\\n        return sum(count)`\\n\\nMy Solution simple and easy to understand"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "shevartsoft",
                        "content": "so stupid to put this in a discussion "
                    },
                    {
                        "username": "Mamun429",
                        "content": "easy problem"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you"
                    },
                    {
                        "username": "NoMansGhost",
                        "content": "Holy easy, Batman!"
                    },
                    {
                        "username": "karunakarvarada73",
                        "content": "I think this is not a difficult question.\\nNo interviewer can ask this question in interviews\\uD83D\\uDE02"
                    },
                    {
                        "username": "charonme",
                        "content": "[@cartesPerforees](/cartesPerforees) exactly this, or I would ask it and see which candidates come up with the O(1) solution by themselves"
                    },
                    {
                        "username": "MobiusX",
                        "content": "[@cartesPerforees](/cartesPerforees) correct. everyone starts somewhere. well said."
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "It's marked as an easy question. It's not a very incredible news that you don't think it's difficult, that's kinda the point. You could say that of all easy questions, but beginners have to start somewhere.\nAdditinally, an interviewer could ask you that, but only allowing O(1) time complexity. Would you still laugh? ;)"
                    }
                ]
            },
            {
                "id": 1872120,
                "content": [
                    {
                        "username": "Harshsharma12",
                        "content": "This is very easy problem \\nfirst initialize result variable\\niterate loop till n \\nand modulo apply"
                    },
                    {
                        "username": "botan",
                        "content": "O(1) solution in JavaScript with graphic explanation:\\n\\nhttps://leetcode.com/problems/sum-multiples/solutions/3450363/javascript-100-time-o-1-time-o-1-space-math"
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "Do you know there's a better way to do it than brute force?\nYou can actually solve it in O(1)!\n\nIf you're looking for a detailed explanation of the process, from the easy brute force to the step by step proof of the O(1) solution, check out my solution:\n[easy brute force => cool O(1)](https://leetcode.com/problems/sum-multiples/solutions/3446111/easy-brute-force-cool-o-1/)"
                    },
                    {
                        "username": "hamdmrady63",
                        "content": "class Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum(list (filter (lambda x: (x % 7 == 0 or x % 5 == 0 or x % 3 == 0),range(1,n+1))))     "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\nint sumOfMultiples(int n) {\n        int sum = 0;\n        int n3 = n/3;\n        int n5 = n/5;\n        int n7 = n/7;\n        int n15 = n/15;\n        int n21 = n/21;\n        int n35 = n/35;\n        sum += 3*(n3*(n3+1))/2;\n        sum += 5*(n5*(n5+1))/2;\n        sum += 7*(n7*(n7+1))/2;\n        sum -= 15*(n15*(n15+1))/2;\n        sum -= 21*(n21*(n21+1))/2;\n        sum -= 35*(n35*(n35+1))/2;\n        return sum;\n    }\n 🟢only working till n = 104\ncan some one suggest what is the problem here\n"
                    },
                    {
                        "username": "harshvashishta",
                        "content": "class Solution {\\n    public int sumOfMultiples(int n) {\\n        \\n        int sum_3 = getSum(3,n);\\n        int sum_5 = getSum(5,n);\\n        int sum_7 = getSum(7,n);\\n        \\n        int sum_3_5 = getSum(15,n);\\n        int sum_5_7 = getSum(35,n);\\n        int sum_3_7 = getSum(21,n);\\n\\n        int sum_3_5_7 = getSum(105,n);\\n\\n        return sum_3 + sum_5 + sum_7 - sum_3_5 - sum_5_7 - sum_3_7 + (sum_3_5_7);\\n        \\n    }\\n\\n    public int getSum(int val, int n){\\n        int i = n/val;\\n        return val*((i*(i+1))/2);\\n    }\\n}"
                    },
                    {
                        "username": "FerdinaKusumah",
                        "content": "Solution for this quite straight forward\\n\\n* Define variable result\\n* Iterate from 1 to n\\n* if (num mod 3 is 0) or (num mod 5 is 0) or (num mod 7 is 0) then add result with number\\n* return result"
                    },
                    {
                        "username": "iffishells",
                        "content": " `class Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        divisible = [3,5,7]\\n        count  = []\\n        for number in range(1,n+1):\\n            # print(\\'Number : {} \\'.format(number))\\n            for div in divisible:\\n                if number%div==0:\\n                    print(div,number)\\n                    if number not in count:\\n                        count.append(number)\\n        print(count)\\n        return sum(count)`\\n\\nMy Solution simple and easy to understand"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "shevartsoft",
                        "content": "so stupid to put this in a discussion "
                    },
                    {
                        "username": "Mamun429",
                        "content": "easy problem"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you"
                    },
                    {
                        "username": "NoMansGhost",
                        "content": "Holy easy, Batman!"
                    },
                    {
                        "username": "karunakarvarada73",
                        "content": "I think this is not a difficult question.\\nNo interviewer can ask this question in interviews\\uD83D\\uDE02"
                    },
                    {
                        "username": "charonme",
                        "content": "[@cartesPerforees](/cartesPerforees) exactly this, or I would ask it and see which candidates come up with the O(1) solution by themselves"
                    },
                    {
                        "username": "MobiusX",
                        "content": "[@cartesPerforees](/cartesPerforees) correct. everyone starts somewhere. well said."
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "It's marked as an easy question. It's not a very incredible news that you don't think it's difficult, that's kinda the point. You could say that of all easy questions, but beginners have to start somewhere.\nAdditinally, an interviewer could ask you that, but only allowing O(1) time complexity. Would you still laugh? ;)"
                    }
                ]
            },
            {
                "id": 1918052,
                "content": [
                    {
                        "username": "Harshsharma12",
                        "content": "This is very easy problem \\nfirst initialize result variable\\niterate loop till n \\nand modulo apply"
                    },
                    {
                        "username": "botan",
                        "content": "O(1) solution in JavaScript with graphic explanation:\\n\\nhttps://leetcode.com/problems/sum-multiples/solutions/3450363/javascript-100-time-o-1-time-o-1-space-math"
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "Do you know there's a better way to do it than brute force?\nYou can actually solve it in O(1)!\n\nIf you're looking for a detailed explanation of the process, from the easy brute force to the step by step proof of the O(1) solution, check out my solution:\n[easy brute force => cool O(1)](https://leetcode.com/problems/sum-multiples/solutions/3446111/easy-brute-force-cool-o-1/)"
                    },
                    {
                        "username": "hamdmrady63",
                        "content": "class Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum(list (filter (lambda x: (x % 7 == 0 or x % 5 == 0 or x % 3 == 0),range(1,n+1))))     "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\nint sumOfMultiples(int n) {\n        int sum = 0;\n        int n3 = n/3;\n        int n5 = n/5;\n        int n7 = n/7;\n        int n15 = n/15;\n        int n21 = n/21;\n        int n35 = n/35;\n        sum += 3*(n3*(n3+1))/2;\n        sum += 5*(n5*(n5+1))/2;\n        sum += 7*(n7*(n7+1))/2;\n        sum -= 15*(n15*(n15+1))/2;\n        sum -= 21*(n21*(n21+1))/2;\n        sum -= 35*(n35*(n35+1))/2;\n        return sum;\n    }\n 🟢only working till n = 104\ncan some one suggest what is the problem here\n"
                    },
                    {
                        "username": "harshvashishta",
                        "content": "class Solution {\\n    public int sumOfMultiples(int n) {\\n        \\n        int sum_3 = getSum(3,n);\\n        int sum_5 = getSum(5,n);\\n        int sum_7 = getSum(7,n);\\n        \\n        int sum_3_5 = getSum(15,n);\\n        int sum_5_7 = getSum(35,n);\\n        int sum_3_7 = getSum(21,n);\\n\\n        int sum_3_5_7 = getSum(105,n);\\n\\n        return sum_3 + sum_5 + sum_7 - sum_3_5 - sum_5_7 - sum_3_7 + (sum_3_5_7);\\n        \\n    }\\n\\n    public int getSum(int val, int n){\\n        int i = n/val;\\n        return val*((i*(i+1))/2);\\n    }\\n}"
                    },
                    {
                        "username": "FerdinaKusumah",
                        "content": "Solution for this quite straight forward\\n\\n* Define variable result\\n* Iterate from 1 to n\\n* if (num mod 3 is 0) or (num mod 5 is 0) or (num mod 7 is 0) then add result with number\\n* return result"
                    },
                    {
                        "username": "iffishells",
                        "content": " `class Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        divisible = [3,5,7]\\n        count  = []\\n        for number in range(1,n+1):\\n            # print(\\'Number : {} \\'.format(number))\\n            for div in divisible:\\n                if number%div==0:\\n                    print(div,number)\\n                    if number not in count:\\n                        count.append(number)\\n        print(count)\\n        return sum(count)`\\n\\nMy Solution simple and easy to understand"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "shevartsoft",
                        "content": "so stupid to put this in a discussion "
                    },
                    {
                        "username": "Mamun429",
                        "content": "easy problem"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you"
                    },
                    {
                        "username": "NoMansGhost",
                        "content": "Holy easy, Batman!"
                    },
                    {
                        "username": "karunakarvarada73",
                        "content": "I think this is not a difficult question.\\nNo interviewer can ask this question in interviews\\uD83D\\uDE02"
                    },
                    {
                        "username": "charonme",
                        "content": "[@cartesPerforees](/cartesPerforees) exactly this, or I would ask it and see which candidates come up with the O(1) solution by themselves"
                    },
                    {
                        "username": "MobiusX",
                        "content": "[@cartesPerforees](/cartesPerforees) correct. everyone starts somewhere. well said."
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "It's marked as an easy question. It's not a very incredible news that you don't think it's difficult, that's kinda the point. You could say that of all easy questions, but beginners have to start somewhere.\nAdditinally, an interviewer could ask you that, but only allowing O(1) time complexity. Would you still laugh? ;)"
                    }
                ]
            },
            {
                "id": 1872781,
                "content": [
                    {
                        "username": "Harshsharma12",
                        "content": "This is very easy problem \\nfirst initialize result variable\\niterate loop till n \\nand modulo apply"
                    },
                    {
                        "username": "botan",
                        "content": "O(1) solution in JavaScript with graphic explanation:\\n\\nhttps://leetcode.com/problems/sum-multiples/solutions/3450363/javascript-100-time-o-1-time-o-1-space-math"
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "Do you know there's a better way to do it than brute force?\nYou can actually solve it in O(1)!\n\nIf you're looking for a detailed explanation of the process, from the easy brute force to the step by step proof of the O(1) solution, check out my solution:\n[easy brute force => cool O(1)](https://leetcode.com/problems/sum-multiples/solutions/3446111/easy-brute-force-cool-o-1/)"
                    },
                    {
                        "username": "hamdmrady63",
                        "content": "class Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum(list (filter (lambda x: (x % 7 == 0 or x % 5 == 0 or x % 3 == 0),range(1,n+1))))     "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\nint sumOfMultiples(int n) {\n        int sum = 0;\n        int n3 = n/3;\n        int n5 = n/5;\n        int n7 = n/7;\n        int n15 = n/15;\n        int n21 = n/21;\n        int n35 = n/35;\n        sum += 3*(n3*(n3+1))/2;\n        sum += 5*(n5*(n5+1))/2;\n        sum += 7*(n7*(n7+1))/2;\n        sum -= 15*(n15*(n15+1))/2;\n        sum -= 21*(n21*(n21+1))/2;\n        sum -= 35*(n35*(n35+1))/2;\n        return sum;\n    }\n 🟢only working till n = 104\ncan some one suggest what is the problem here\n"
                    },
                    {
                        "username": "harshvashishta",
                        "content": "class Solution {\\n    public int sumOfMultiples(int n) {\\n        \\n        int sum_3 = getSum(3,n);\\n        int sum_5 = getSum(5,n);\\n        int sum_7 = getSum(7,n);\\n        \\n        int sum_3_5 = getSum(15,n);\\n        int sum_5_7 = getSum(35,n);\\n        int sum_3_7 = getSum(21,n);\\n\\n        int sum_3_5_7 = getSum(105,n);\\n\\n        return sum_3 + sum_5 + sum_7 - sum_3_5 - sum_5_7 - sum_3_7 + (sum_3_5_7);\\n        \\n    }\\n\\n    public int getSum(int val, int n){\\n        int i = n/val;\\n        return val*((i*(i+1))/2);\\n    }\\n}"
                    },
                    {
                        "username": "FerdinaKusumah",
                        "content": "Solution for this quite straight forward\\n\\n* Define variable result\\n* Iterate from 1 to n\\n* if (num mod 3 is 0) or (num mod 5 is 0) or (num mod 7 is 0) then add result with number\\n* return result"
                    },
                    {
                        "username": "iffishells",
                        "content": " `class Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        divisible = [3,5,7]\\n        count  = []\\n        for number in range(1,n+1):\\n            # print(\\'Number : {} \\'.format(number))\\n            for div in divisible:\\n                if number%div==0:\\n                    print(div,number)\\n                    if number not in count:\\n                        count.append(number)\\n        print(count)\\n        return sum(count)`\\n\\nMy Solution simple and easy to understand"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "shevartsoft",
                        "content": "so stupid to put this in a discussion "
                    },
                    {
                        "username": "Mamun429",
                        "content": "easy problem"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you"
                    },
                    {
                        "username": "NoMansGhost",
                        "content": "Holy easy, Batman!"
                    },
                    {
                        "username": "karunakarvarada73",
                        "content": "I think this is not a difficult question.\\nNo interviewer can ask this question in interviews\\uD83D\\uDE02"
                    },
                    {
                        "username": "charonme",
                        "content": "[@cartesPerforees](/cartesPerforees) exactly this, or I would ask it and see which candidates come up with the O(1) solution by themselves"
                    },
                    {
                        "username": "MobiusX",
                        "content": "[@cartesPerforees](/cartesPerforees) correct. everyone starts somewhere. well said."
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "It's marked as an easy question. It's not a very incredible news that you don't think it's difficult, that's kinda the point. You could say that of all easy questions, but beginners have to start somewhere.\nAdditinally, an interviewer could ask you that, but only allowing O(1) time complexity. Would you still laugh? ;)"
                    }
                ]
            },
            {
                "id": 1871652,
                "content": [
                    {
                        "username": "Harshsharma12",
                        "content": "This is very easy problem \\nfirst initialize result variable\\niterate loop till n \\nand modulo apply"
                    },
                    {
                        "username": "botan",
                        "content": "O(1) solution in JavaScript with graphic explanation:\\n\\nhttps://leetcode.com/problems/sum-multiples/solutions/3450363/javascript-100-time-o-1-time-o-1-space-math"
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "Do you know there's a better way to do it than brute force?\nYou can actually solve it in O(1)!\n\nIf you're looking for a detailed explanation of the process, from the easy brute force to the step by step proof of the O(1) solution, check out my solution:\n[easy brute force => cool O(1)](https://leetcode.com/problems/sum-multiples/solutions/3446111/easy-brute-force-cool-o-1/)"
                    },
                    {
                        "username": "hamdmrady63",
                        "content": "class Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum(list (filter (lambda x: (x % 7 == 0 or x % 5 == 0 or x % 3 == 0),range(1,n+1))))     "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\nint sumOfMultiples(int n) {\n        int sum = 0;\n        int n3 = n/3;\n        int n5 = n/5;\n        int n7 = n/7;\n        int n15 = n/15;\n        int n21 = n/21;\n        int n35 = n/35;\n        sum += 3*(n3*(n3+1))/2;\n        sum += 5*(n5*(n5+1))/2;\n        sum += 7*(n7*(n7+1))/2;\n        sum -= 15*(n15*(n15+1))/2;\n        sum -= 21*(n21*(n21+1))/2;\n        sum -= 35*(n35*(n35+1))/2;\n        return sum;\n    }\n 🟢only working till n = 104\ncan some one suggest what is the problem here\n"
                    },
                    {
                        "username": "harshvashishta",
                        "content": "class Solution {\\n    public int sumOfMultiples(int n) {\\n        \\n        int sum_3 = getSum(3,n);\\n        int sum_5 = getSum(5,n);\\n        int sum_7 = getSum(7,n);\\n        \\n        int sum_3_5 = getSum(15,n);\\n        int sum_5_7 = getSum(35,n);\\n        int sum_3_7 = getSum(21,n);\\n\\n        int sum_3_5_7 = getSum(105,n);\\n\\n        return sum_3 + sum_5 + sum_7 - sum_3_5 - sum_5_7 - sum_3_7 + (sum_3_5_7);\\n        \\n    }\\n\\n    public int getSum(int val, int n){\\n        int i = n/val;\\n        return val*((i*(i+1))/2);\\n    }\\n}"
                    },
                    {
                        "username": "FerdinaKusumah",
                        "content": "Solution for this quite straight forward\\n\\n* Define variable result\\n* Iterate from 1 to n\\n* if (num mod 3 is 0) or (num mod 5 is 0) or (num mod 7 is 0) then add result with number\\n* return result"
                    },
                    {
                        "username": "iffishells",
                        "content": " `class Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        divisible = [3,5,7]\\n        count  = []\\n        for number in range(1,n+1):\\n            # print(\\'Number : {} \\'.format(number))\\n            for div in divisible:\\n                if number%div==0:\\n                    print(div,number)\\n                    if number not in count:\\n                        count.append(number)\\n        print(count)\\n        return sum(count)`\\n\\nMy Solution simple and easy to understand"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "shevartsoft",
                        "content": "so stupid to put this in a discussion "
                    },
                    {
                        "username": "Mamun429",
                        "content": "easy problem"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you"
                    },
                    {
                        "username": "NoMansGhost",
                        "content": "Holy easy, Batman!"
                    },
                    {
                        "username": "karunakarvarada73",
                        "content": "I think this is not a difficult question.\\nNo interviewer can ask this question in interviews\\uD83D\\uDE02"
                    },
                    {
                        "username": "charonme",
                        "content": "[@cartesPerforees](/cartesPerforees) exactly this, or I would ask it and see which candidates come up with the O(1) solution by themselves"
                    },
                    {
                        "username": "MobiusX",
                        "content": "[@cartesPerforees](/cartesPerforees) correct. everyone starts somewhere. well said."
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "It's marked as an easy question. It's not a very incredible news that you don't think it's difficult, that's kinda the point. You could say that of all easy questions, but beginners have to start somewhere.\nAdditinally, an interviewer could ask you that, but only allowing O(1) time complexity. Would you still laugh? ;)"
                    }
                ]
            },
            {
                "id": 2044904,
                "content": [
                    {
                        "username": "Harshsharma12",
                        "content": "This is very easy problem \\nfirst initialize result variable\\niterate loop till n \\nand modulo apply"
                    },
                    {
                        "username": "botan",
                        "content": "O(1) solution in JavaScript with graphic explanation:\\n\\nhttps://leetcode.com/problems/sum-multiples/solutions/3450363/javascript-100-time-o-1-time-o-1-space-math"
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "Do you know there's a better way to do it than brute force?\nYou can actually solve it in O(1)!\n\nIf you're looking for a detailed explanation of the process, from the easy brute force to the step by step proof of the O(1) solution, check out my solution:\n[easy brute force => cool O(1)](https://leetcode.com/problems/sum-multiples/solutions/3446111/easy-brute-force-cool-o-1/)"
                    },
                    {
                        "username": "hamdmrady63",
                        "content": "class Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum(list (filter (lambda x: (x % 7 == 0 or x % 5 == 0 or x % 3 == 0),range(1,n+1))))     "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\nint sumOfMultiples(int n) {\n        int sum = 0;\n        int n3 = n/3;\n        int n5 = n/5;\n        int n7 = n/7;\n        int n15 = n/15;\n        int n21 = n/21;\n        int n35 = n/35;\n        sum += 3*(n3*(n3+1))/2;\n        sum += 5*(n5*(n5+1))/2;\n        sum += 7*(n7*(n7+1))/2;\n        sum -= 15*(n15*(n15+1))/2;\n        sum -= 21*(n21*(n21+1))/2;\n        sum -= 35*(n35*(n35+1))/2;\n        return sum;\n    }\n 🟢only working till n = 104\ncan some one suggest what is the problem here\n"
                    },
                    {
                        "username": "harshvashishta",
                        "content": "class Solution {\\n    public int sumOfMultiples(int n) {\\n        \\n        int sum_3 = getSum(3,n);\\n        int sum_5 = getSum(5,n);\\n        int sum_7 = getSum(7,n);\\n        \\n        int sum_3_5 = getSum(15,n);\\n        int sum_5_7 = getSum(35,n);\\n        int sum_3_7 = getSum(21,n);\\n\\n        int sum_3_5_7 = getSum(105,n);\\n\\n        return sum_3 + sum_5 + sum_7 - sum_3_5 - sum_5_7 - sum_3_7 + (sum_3_5_7);\\n        \\n    }\\n\\n    public int getSum(int val, int n){\\n        int i = n/val;\\n        return val*((i*(i+1))/2);\\n    }\\n}"
                    },
                    {
                        "username": "FerdinaKusumah",
                        "content": "Solution for this quite straight forward\\n\\n* Define variable result\\n* Iterate from 1 to n\\n* if (num mod 3 is 0) or (num mod 5 is 0) or (num mod 7 is 0) then add result with number\\n* return result"
                    },
                    {
                        "username": "iffishells",
                        "content": " `class Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        divisible = [3,5,7]\\n        count  = []\\n        for number in range(1,n+1):\\n            # print(\\'Number : {} \\'.format(number))\\n            for div in divisible:\\n                if number%div==0:\\n                    print(div,number)\\n                    if number not in count:\\n                        count.append(number)\\n        print(count)\\n        return sum(count)`\\n\\nMy Solution simple and easy to understand"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "shevartsoft",
                        "content": "so stupid to put this in a discussion "
                    },
                    {
                        "username": "Mamun429",
                        "content": "easy problem"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you"
                    },
                    {
                        "username": "NoMansGhost",
                        "content": "Holy easy, Batman!"
                    },
                    {
                        "username": "karunakarvarada73",
                        "content": "I think this is not a difficult question.\\nNo interviewer can ask this question in interviews\\uD83D\\uDE02"
                    },
                    {
                        "username": "charonme",
                        "content": "[@cartesPerforees](/cartesPerforees) exactly this, or I would ask it and see which candidates come up with the O(1) solution by themselves"
                    },
                    {
                        "username": "MobiusX",
                        "content": "[@cartesPerforees](/cartesPerforees) correct. everyone starts somewhere. well said."
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "It's marked as an easy question. It's not a very incredible news that you don't think it's difficult, that's kinda the point. You could say that of all easy questions, but beginners have to start somewhere.\nAdditinally, an interviewer could ask you that, but only allowing O(1) time complexity. Would you still laugh? ;)"
                    }
                ]
            },
            {
                "id": 2031181,
                "content": [
                    {
                        "username": "Harshsharma12",
                        "content": "This is very easy problem \\nfirst initialize result variable\\niterate loop till n \\nand modulo apply"
                    },
                    {
                        "username": "botan",
                        "content": "O(1) solution in JavaScript with graphic explanation:\\n\\nhttps://leetcode.com/problems/sum-multiples/solutions/3450363/javascript-100-time-o-1-time-o-1-space-math"
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "Do you know there's a better way to do it than brute force?\nYou can actually solve it in O(1)!\n\nIf you're looking for a detailed explanation of the process, from the easy brute force to the step by step proof of the O(1) solution, check out my solution:\n[easy brute force => cool O(1)](https://leetcode.com/problems/sum-multiples/solutions/3446111/easy-brute-force-cool-o-1/)"
                    },
                    {
                        "username": "hamdmrady63",
                        "content": "class Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum(list (filter (lambda x: (x % 7 == 0 or x % 5 == 0 or x % 3 == 0),range(1,n+1))))     "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\nint sumOfMultiples(int n) {\n        int sum = 0;\n        int n3 = n/3;\n        int n5 = n/5;\n        int n7 = n/7;\n        int n15 = n/15;\n        int n21 = n/21;\n        int n35 = n/35;\n        sum += 3*(n3*(n3+1))/2;\n        sum += 5*(n5*(n5+1))/2;\n        sum += 7*(n7*(n7+1))/2;\n        sum -= 15*(n15*(n15+1))/2;\n        sum -= 21*(n21*(n21+1))/2;\n        sum -= 35*(n35*(n35+1))/2;\n        return sum;\n    }\n 🟢only working till n = 104\ncan some one suggest what is the problem here\n"
                    },
                    {
                        "username": "harshvashishta",
                        "content": "class Solution {\\n    public int sumOfMultiples(int n) {\\n        \\n        int sum_3 = getSum(3,n);\\n        int sum_5 = getSum(5,n);\\n        int sum_7 = getSum(7,n);\\n        \\n        int sum_3_5 = getSum(15,n);\\n        int sum_5_7 = getSum(35,n);\\n        int sum_3_7 = getSum(21,n);\\n\\n        int sum_3_5_7 = getSum(105,n);\\n\\n        return sum_3 + sum_5 + sum_7 - sum_3_5 - sum_5_7 - sum_3_7 + (sum_3_5_7);\\n        \\n    }\\n\\n    public int getSum(int val, int n){\\n        int i = n/val;\\n        return val*((i*(i+1))/2);\\n    }\\n}"
                    },
                    {
                        "username": "FerdinaKusumah",
                        "content": "Solution for this quite straight forward\\n\\n* Define variable result\\n* Iterate from 1 to n\\n* if (num mod 3 is 0) or (num mod 5 is 0) or (num mod 7 is 0) then add result with number\\n* return result"
                    },
                    {
                        "username": "iffishells",
                        "content": " `class Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        divisible = [3,5,7]\\n        count  = []\\n        for number in range(1,n+1):\\n            # print(\\'Number : {} \\'.format(number))\\n            for div in divisible:\\n                if number%div==0:\\n                    print(div,number)\\n                    if number not in count:\\n                        count.append(number)\\n        print(count)\\n        return sum(count)`\\n\\nMy Solution simple and easy to understand"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "shevartsoft",
                        "content": "so stupid to put this in a discussion "
                    },
                    {
                        "username": "Mamun429",
                        "content": "easy problem"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you"
                    },
                    {
                        "username": "NoMansGhost",
                        "content": "Holy easy, Batman!"
                    },
                    {
                        "username": "karunakarvarada73",
                        "content": "I think this is not a difficult question.\\nNo interviewer can ask this question in interviews\\uD83D\\uDE02"
                    },
                    {
                        "username": "charonme",
                        "content": "[@cartesPerforees](/cartesPerforees) exactly this, or I would ask it and see which candidates come up with the O(1) solution by themselves"
                    },
                    {
                        "username": "MobiusX",
                        "content": "[@cartesPerforees](/cartesPerforees) correct. everyone starts somewhere. well said."
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "It's marked as an easy question. It's not a very incredible news that you don't think it's difficult, that's kinda the point. You could say that of all easy questions, but beginners have to start somewhere.\nAdditinally, an interviewer could ask you that, but only allowing O(1) time complexity. Would you still laugh? ;)"
                    }
                ]
            },
            {
                "id": 2026526,
                "content": [
                    {
                        "username": "Harshsharma12",
                        "content": "This is very easy problem \\nfirst initialize result variable\\niterate loop till n \\nand modulo apply"
                    },
                    {
                        "username": "botan",
                        "content": "O(1) solution in JavaScript with graphic explanation:\\n\\nhttps://leetcode.com/problems/sum-multiples/solutions/3450363/javascript-100-time-o-1-time-o-1-space-math"
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "Do you know there's a better way to do it than brute force?\nYou can actually solve it in O(1)!\n\nIf you're looking for a detailed explanation of the process, from the easy brute force to the step by step proof of the O(1) solution, check out my solution:\n[easy brute force => cool O(1)](https://leetcode.com/problems/sum-multiples/solutions/3446111/easy-brute-force-cool-o-1/)"
                    },
                    {
                        "username": "hamdmrady63",
                        "content": "class Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum(list (filter (lambda x: (x % 7 == 0 or x % 5 == 0 or x % 3 == 0),range(1,n+1))))     "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\nint sumOfMultiples(int n) {\n        int sum = 0;\n        int n3 = n/3;\n        int n5 = n/5;\n        int n7 = n/7;\n        int n15 = n/15;\n        int n21 = n/21;\n        int n35 = n/35;\n        sum += 3*(n3*(n3+1))/2;\n        sum += 5*(n5*(n5+1))/2;\n        sum += 7*(n7*(n7+1))/2;\n        sum -= 15*(n15*(n15+1))/2;\n        sum -= 21*(n21*(n21+1))/2;\n        sum -= 35*(n35*(n35+1))/2;\n        return sum;\n    }\n 🟢only working till n = 104\ncan some one suggest what is the problem here\n"
                    },
                    {
                        "username": "harshvashishta",
                        "content": "class Solution {\\n    public int sumOfMultiples(int n) {\\n        \\n        int sum_3 = getSum(3,n);\\n        int sum_5 = getSum(5,n);\\n        int sum_7 = getSum(7,n);\\n        \\n        int sum_3_5 = getSum(15,n);\\n        int sum_5_7 = getSum(35,n);\\n        int sum_3_7 = getSum(21,n);\\n\\n        int sum_3_5_7 = getSum(105,n);\\n\\n        return sum_3 + sum_5 + sum_7 - sum_3_5 - sum_5_7 - sum_3_7 + (sum_3_5_7);\\n        \\n    }\\n\\n    public int getSum(int val, int n){\\n        int i = n/val;\\n        return val*((i*(i+1))/2);\\n    }\\n}"
                    },
                    {
                        "username": "FerdinaKusumah",
                        "content": "Solution for this quite straight forward\\n\\n* Define variable result\\n* Iterate from 1 to n\\n* if (num mod 3 is 0) or (num mod 5 is 0) or (num mod 7 is 0) then add result with number\\n* return result"
                    },
                    {
                        "username": "iffishells",
                        "content": " `class Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        divisible = [3,5,7]\\n        count  = []\\n        for number in range(1,n+1):\\n            # print(\\'Number : {} \\'.format(number))\\n            for div in divisible:\\n                if number%div==0:\\n                    print(div,number)\\n                    if number not in count:\\n                        count.append(number)\\n        print(count)\\n        return sum(count)`\\n\\nMy Solution simple and easy to understand"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "shevartsoft",
                        "content": "so stupid to put this in a discussion "
                    },
                    {
                        "username": "Mamun429",
                        "content": "easy problem"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you"
                    },
                    {
                        "username": "NoMansGhost",
                        "content": "Holy easy, Batman!"
                    },
                    {
                        "username": "karunakarvarada73",
                        "content": "I think this is not a difficult question.\\nNo interviewer can ask this question in interviews\\uD83D\\uDE02"
                    },
                    {
                        "username": "charonme",
                        "content": "[@cartesPerforees](/cartesPerforees) exactly this, or I would ask it and see which candidates come up with the O(1) solution by themselves"
                    },
                    {
                        "username": "MobiusX",
                        "content": "[@cartesPerforees](/cartesPerforees) correct. everyone starts somewhere. well said."
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "It's marked as an easy question. It's not a very incredible news that you don't think it's difficult, that's kinda the point. You could say that of all easy questions, but beginners have to start somewhere.\nAdditinally, an interviewer could ask you that, but only allowing O(1) time complexity. Would you still laugh? ;)"
                    }
                ]
            },
            {
                "id": 1913039,
                "content": [
                    {
                        "username": "Harshsharma12",
                        "content": "This is very easy problem \\nfirst initialize result variable\\niterate loop till n \\nand modulo apply"
                    },
                    {
                        "username": "botan",
                        "content": "O(1) solution in JavaScript with graphic explanation:\\n\\nhttps://leetcode.com/problems/sum-multiples/solutions/3450363/javascript-100-time-o-1-time-o-1-space-math"
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "Do you know there's a better way to do it than brute force?\nYou can actually solve it in O(1)!\n\nIf you're looking for a detailed explanation of the process, from the easy brute force to the step by step proof of the O(1) solution, check out my solution:\n[easy brute force => cool O(1)](https://leetcode.com/problems/sum-multiples/solutions/3446111/easy-brute-force-cool-o-1/)"
                    },
                    {
                        "username": "hamdmrady63",
                        "content": "class Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum(list (filter (lambda x: (x % 7 == 0 or x % 5 == 0 or x % 3 == 0),range(1,n+1))))     "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\nint sumOfMultiples(int n) {\n        int sum = 0;\n        int n3 = n/3;\n        int n5 = n/5;\n        int n7 = n/7;\n        int n15 = n/15;\n        int n21 = n/21;\n        int n35 = n/35;\n        sum += 3*(n3*(n3+1))/2;\n        sum += 5*(n5*(n5+1))/2;\n        sum += 7*(n7*(n7+1))/2;\n        sum -= 15*(n15*(n15+1))/2;\n        sum -= 21*(n21*(n21+1))/2;\n        sum -= 35*(n35*(n35+1))/2;\n        return sum;\n    }\n 🟢only working till n = 104\ncan some one suggest what is the problem here\n"
                    },
                    {
                        "username": "harshvashishta",
                        "content": "class Solution {\\n    public int sumOfMultiples(int n) {\\n        \\n        int sum_3 = getSum(3,n);\\n        int sum_5 = getSum(5,n);\\n        int sum_7 = getSum(7,n);\\n        \\n        int sum_3_5 = getSum(15,n);\\n        int sum_5_7 = getSum(35,n);\\n        int sum_3_7 = getSum(21,n);\\n\\n        int sum_3_5_7 = getSum(105,n);\\n\\n        return sum_3 + sum_5 + sum_7 - sum_3_5 - sum_5_7 - sum_3_7 + (sum_3_5_7);\\n        \\n    }\\n\\n    public int getSum(int val, int n){\\n        int i = n/val;\\n        return val*((i*(i+1))/2);\\n    }\\n}"
                    },
                    {
                        "username": "FerdinaKusumah",
                        "content": "Solution for this quite straight forward\\n\\n* Define variable result\\n* Iterate from 1 to n\\n* if (num mod 3 is 0) or (num mod 5 is 0) or (num mod 7 is 0) then add result with number\\n* return result"
                    },
                    {
                        "username": "iffishells",
                        "content": " `class Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        divisible = [3,5,7]\\n        count  = []\\n        for number in range(1,n+1):\\n            # print(\\'Number : {} \\'.format(number))\\n            for div in divisible:\\n                if number%div==0:\\n                    print(div,number)\\n                    if number not in count:\\n                        count.append(number)\\n        print(count)\\n        return sum(count)`\\n\\nMy Solution simple and easy to understand"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "shevartsoft",
                        "content": "so stupid to put this in a discussion "
                    },
                    {
                        "username": "Mamun429",
                        "content": "easy problem"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you"
                    },
                    {
                        "username": "NoMansGhost",
                        "content": "Holy easy, Batman!"
                    },
                    {
                        "username": "karunakarvarada73",
                        "content": "I think this is not a difficult question.\\nNo interviewer can ask this question in interviews\\uD83D\\uDE02"
                    },
                    {
                        "username": "charonme",
                        "content": "[@cartesPerforees](/cartesPerforees) exactly this, or I would ask it and see which candidates come up with the O(1) solution by themselves"
                    },
                    {
                        "username": "MobiusX",
                        "content": "[@cartesPerforees](/cartesPerforees) correct. everyone starts somewhere. well said."
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "It's marked as an easy question. It's not a very incredible news that you don't think it's difficult, that's kinda the point. You could say that of all easy questions, but beginners have to start somewhere.\nAdditinally, an interviewer could ask you that, but only allowing O(1) time complexity. Would you still laugh? ;)"
                    }
                ]
            },
            {
                "id": 1881603,
                "content": [
                    {
                        "username": "Harshsharma12",
                        "content": "This is very easy problem \\nfirst initialize result variable\\niterate loop till n \\nand modulo apply"
                    },
                    {
                        "username": "botan",
                        "content": "O(1) solution in JavaScript with graphic explanation:\\n\\nhttps://leetcode.com/problems/sum-multiples/solutions/3450363/javascript-100-time-o-1-time-o-1-space-math"
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "Do you know there's a better way to do it than brute force?\nYou can actually solve it in O(1)!\n\nIf you're looking for a detailed explanation of the process, from the easy brute force to the step by step proof of the O(1) solution, check out my solution:\n[easy brute force => cool O(1)](https://leetcode.com/problems/sum-multiples/solutions/3446111/easy-brute-force-cool-o-1/)"
                    },
                    {
                        "username": "hamdmrady63",
                        "content": "class Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum(list (filter (lambda x: (x % 7 == 0 or x % 5 == 0 or x % 3 == 0),range(1,n+1))))     "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\nint sumOfMultiples(int n) {\n        int sum = 0;\n        int n3 = n/3;\n        int n5 = n/5;\n        int n7 = n/7;\n        int n15 = n/15;\n        int n21 = n/21;\n        int n35 = n/35;\n        sum += 3*(n3*(n3+1))/2;\n        sum += 5*(n5*(n5+1))/2;\n        sum += 7*(n7*(n7+1))/2;\n        sum -= 15*(n15*(n15+1))/2;\n        sum -= 21*(n21*(n21+1))/2;\n        sum -= 35*(n35*(n35+1))/2;\n        return sum;\n    }\n 🟢only working till n = 104\ncan some one suggest what is the problem here\n"
                    },
                    {
                        "username": "harshvashishta",
                        "content": "class Solution {\\n    public int sumOfMultiples(int n) {\\n        \\n        int sum_3 = getSum(3,n);\\n        int sum_5 = getSum(5,n);\\n        int sum_7 = getSum(7,n);\\n        \\n        int sum_3_5 = getSum(15,n);\\n        int sum_5_7 = getSum(35,n);\\n        int sum_3_7 = getSum(21,n);\\n\\n        int sum_3_5_7 = getSum(105,n);\\n\\n        return sum_3 + sum_5 + sum_7 - sum_3_5 - sum_5_7 - sum_3_7 + (sum_3_5_7);\\n        \\n    }\\n\\n    public int getSum(int val, int n){\\n        int i = n/val;\\n        return val*((i*(i+1))/2);\\n    }\\n}"
                    },
                    {
                        "username": "FerdinaKusumah",
                        "content": "Solution for this quite straight forward\\n\\n* Define variable result\\n* Iterate from 1 to n\\n* if (num mod 3 is 0) or (num mod 5 is 0) or (num mod 7 is 0) then add result with number\\n* return result"
                    },
                    {
                        "username": "iffishells",
                        "content": " `class Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        divisible = [3,5,7]\\n        count  = []\\n        for number in range(1,n+1):\\n            # print(\\'Number : {} \\'.format(number))\\n            for div in divisible:\\n                if number%div==0:\\n                    print(div,number)\\n                    if number not in count:\\n                        count.append(number)\\n        print(count)\\n        return sum(count)`\\n\\nMy Solution simple and easy to understand"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "shevartsoft",
                        "content": "so stupid to put this in a discussion "
                    },
                    {
                        "username": "Mamun429",
                        "content": "easy problem"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you"
                    },
                    {
                        "username": "NoMansGhost",
                        "content": "Holy easy, Batman!"
                    },
                    {
                        "username": "karunakarvarada73",
                        "content": "I think this is not a difficult question.\\nNo interviewer can ask this question in interviews\\uD83D\\uDE02"
                    },
                    {
                        "username": "charonme",
                        "content": "[@cartesPerforees](/cartesPerforees) exactly this, or I would ask it and see which candidates come up with the O(1) solution by themselves"
                    },
                    {
                        "username": "MobiusX",
                        "content": "[@cartesPerforees](/cartesPerforees) correct. everyone starts somewhere. well said."
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "It's marked as an easy question. It's not a very incredible news that you don't think it's difficult, that's kinda the point. You could say that of all easy questions, but beginners have to start somewhere.\nAdditinally, an interviewer could ask you that, but only allowing O(1) time complexity. Would you still laugh? ;)"
                    }
                ]
            },
            {
                "id": 1872921,
                "content": [
                    {
                        "username": "Harshsharma12",
                        "content": "This is very easy problem \\nfirst initialize result variable\\niterate loop till n \\nand modulo apply"
                    },
                    {
                        "username": "botan",
                        "content": "O(1) solution in JavaScript with graphic explanation:\\n\\nhttps://leetcode.com/problems/sum-multiples/solutions/3450363/javascript-100-time-o-1-time-o-1-space-math"
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "Do you know there's a better way to do it than brute force?\nYou can actually solve it in O(1)!\n\nIf you're looking for a detailed explanation of the process, from the easy brute force to the step by step proof of the O(1) solution, check out my solution:\n[easy brute force => cool O(1)](https://leetcode.com/problems/sum-multiples/solutions/3446111/easy-brute-force-cool-o-1/)"
                    },
                    {
                        "username": "hamdmrady63",
                        "content": "class Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum(list (filter (lambda x: (x % 7 == 0 or x % 5 == 0 or x % 3 == 0),range(1,n+1))))     "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\nint sumOfMultiples(int n) {\n        int sum = 0;\n        int n3 = n/3;\n        int n5 = n/5;\n        int n7 = n/7;\n        int n15 = n/15;\n        int n21 = n/21;\n        int n35 = n/35;\n        sum += 3*(n3*(n3+1))/2;\n        sum += 5*(n5*(n5+1))/2;\n        sum += 7*(n7*(n7+1))/2;\n        sum -= 15*(n15*(n15+1))/2;\n        sum -= 21*(n21*(n21+1))/2;\n        sum -= 35*(n35*(n35+1))/2;\n        return sum;\n    }\n 🟢only working till n = 104\ncan some one suggest what is the problem here\n"
                    },
                    {
                        "username": "harshvashishta",
                        "content": "class Solution {\\n    public int sumOfMultiples(int n) {\\n        \\n        int sum_3 = getSum(3,n);\\n        int sum_5 = getSum(5,n);\\n        int sum_7 = getSum(7,n);\\n        \\n        int sum_3_5 = getSum(15,n);\\n        int sum_5_7 = getSum(35,n);\\n        int sum_3_7 = getSum(21,n);\\n\\n        int sum_3_5_7 = getSum(105,n);\\n\\n        return sum_3 + sum_5 + sum_7 - sum_3_5 - sum_5_7 - sum_3_7 + (sum_3_5_7);\\n        \\n    }\\n\\n    public int getSum(int val, int n){\\n        int i = n/val;\\n        return val*((i*(i+1))/2);\\n    }\\n}"
                    },
                    {
                        "username": "FerdinaKusumah",
                        "content": "Solution for this quite straight forward\\n\\n* Define variable result\\n* Iterate from 1 to n\\n* if (num mod 3 is 0) or (num mod 5 is 0) or (num mod 7 is 0) then add result with number\\n* return result"
                    },
                    {
                        "username": "iffishells",
                        "content": " `class Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        divisible = [3,5,7]\\n        count  = []\\n        for number in range(1,n+1):\\n            # print(\\'Number : {} \\'.format(number))\\n            for div in divisible:\\n                if number%div==0:\\n                    print(div,number)\\n                    if number not in count:\\n                        count.append(number)\\n        print(count)\\n        return sum(count)`\\n\\nMy Solution simple and easy to understand"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "shevartsoft",
                        "content": "so stupid to put this in a discussion "
                    },
                    {
                        "username": "Mamun429",
                        "content": "easy problem"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you"
                    },
                    {
                        "username": "NoMansGhost",
                        "content": "Holy easy, Batman!"
                    },
                    {
                        "username": "karunakarvarada73",
                        "content": "I think this is not a difficult question.\\nNo interviewer can ask this question in interviews\\uD83D\\uDE02"
                    },
                    {
                        "username": "charonme",
                        "content": "[@cartesPerforees](/cartesPerforees) exactly this, or I would ask it and see which candidates come up with the O(1) solution by themselves"
                    },
                    {
                        "username": "MobiusX",
                        "content": "[@cartesPerforees](/cartesPerforees) correct. everyone starts somewhere. well said."
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "It's marked as an easy question. It's not a very incredible news that you don't think it's difficult, that's kinda the point. You could say that of all easy questions, but beginners have to start somewhere.\nAdditinally, an interviewer could ask you that, but only allowing O(1) time complexity. Would you still laugh? ;)"
                    }
                ]
            },
            {
                "id": 1872120,
                "content": [
                    {
                        "username": "Harshsharma12",
                        "content": "This is very easy problem \\nfirst initialize result variable\\niterate loop till n \\nand modulo apply"
                    },
                    {
                        "username": "botan",
                        "content": "O(1) solution in JavaScript with graphic explanation:\\n\\nhttps://leetcode.com/problems/sum-multiples/solutions/3450363/javascript-100-time-o-1-time-o-1-space-math"
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "Do you know there's a better way to do it than brute force?\nYou can actually solve it in O(1)!\n\nIf you're looking for a detailed explanation of the process, from the easy brute force to the step by step proof of the O(1) solution, check out my solution:\n[easy brute force => cool O(1)](https://leetcode.com/problems/sum-multiples/solutions/3446111/easy-brute-force-cool-o-1/)"
                    },
                    {
                        "username": "hamdmrady63",
                        "content": "class Solution:\\n    def sumOfMultiples(self, n: int) -> int:\\n        return sum(list (filter (lambda x: (x % 7 == 0 or x % 5 == 0 or x % 3 == 0),range(1,n+1))))     "
                    },
                    {
                        "username": "devesh_kumar_kushwaha",
                        "content": "\nint sumOfMultiples(int n) {\n        int sum = 0;\n        int n3 = n/3;\n        int n5 = n/5;\n        int n7 = n/7;\n        int n15 = n/15;\n        int n21 = n/21;\n        int n35 = n/35;\n        sum += 3*(n3*(n3+1))/2;\n        sum += 5*(n5*(n5+1))/2;\n        sum += 7*(n7*(n7+1))/2;\n        sum -= 15*(n15*(n15+1))/2;\n        sum -= 21*(n21*(n21+1))/2;\n        sum -= 35*(n35*(n35+1))/2;\n        return sum;\n    }\n 🟢only working till n = 104\ncan some one suggest what is the problem here\n"
                    },
                    {
                        "username": "harshvashishta",
                        "content": "class Solution {\\n    public int sumOfMultiples(int n) {\\n        \\n        int sum_3 = getSum(3,n);\\n        int sum_5 = getSum(5,n);\\n        int sum_7 = getSum(7,n);\\n        \\n        int sum_3_5 = getSum(15,n);\\n        int sum_5_7 = getSum(35,n);\\n        int sum_3_7 = getSum(21,n);\\n\\n        int sum_3_5_7 = getSum(105,n);\\n\\n        return sum_3 + sum_5 + sum_7 - sum_3_5 - sum_5_7 - sum_3_7 + (sum_3_5_7);\\n        \\n    }\\n\\n    public int getSum(int val, int n){\\n        int i = n/val;\\n        return val*((i*(i+1))/2);\\n    }\\n}"
                    },
                    {
                        "username": "FerdinaKusumah",
                        "content": "Solution for this quite straight forward\\n\\n* Define variable result\\n* Iterate from 1 to n\\n* if (num mod 3 is 0) or (num mod 5 is 0) or (num mod 7 is 0) then add result with number\\n* return result"
                    },
                    {
                        "username": "iffishells",
                        "content": " `class Solution(object):\\n    def sumOfMultiples(self, n):\\n        \"\"\"\\n        :type n: int\\n        :rtype: int\\n        \"\"\"\\n        divisible = [3,5,7]\\n        count  = []\\n        for number in range(1,n+1):\\n            # print(\\'Number : {} \\'.format(number))\\n            for div in divisible:\\n                if number%div==0:\\n                    print(div,number)\\n                    if number not in count:\\n                        count.append(number)\\n        print(count)\\n        return sum(count)`\\n\\nMy Solution simple and easy to understand"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nBut lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "shevartsoft",
                        "content": "so stupid to put this in a discussion "
                    },
                    {
                        "username": "Mamun429",
                        "content": "easy problem"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Good for you"
                    },
                    {
                        "username": "NoMansGhost",
                        "content": "Holy easy, Batman!"
                    },
                    {
                        "username": "karunakarvarada73",
                        "content": "I think this is not a difficult question.\\nNo interviewer can ask this question in interviews\\uD83D\\uDE02"
                    },
                    {
                        "username": "charonme",
                        "content": "[@cartesPerforees](/cartesPerforees) exactly this, or I would ask it and see which candidates come up with the O(1) solution by themselves"
                    },
                    {
                        "username": "MobiusX",
                        "content": "[@cartesPerforees](/cartesPerforees) correct. everyone starts somewhere. well said."
                    },
                    {
                        "username": "cartesPerforees",
                        "content": "It's marked as an easy question. It's not a very incredible news that you don't think it's difficult, that's kinda the point. You could say that of all easy questions, but beginners have to start somewhere.\nAdditinally, an interviewer could ask you that, but only allowing O(1) time complexity. Would you still laugh? ;)"
                    }
                ]
            }
        ]
    }
]