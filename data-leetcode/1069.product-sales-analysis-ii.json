[
    {
        "title": "Fixed Point",
        "question_content": null,
        "solutions": [],
        "discussions": []
    },
    {
        "title": "Index Pairs of a String",
        "question_content": null,
        "solutions": [],
        "discussions": [
            {
                "id": 1878675,
                "content": [
                    {
                        "username": "bkin",
                        "content": "feels more like a medium if you\\'re trying to solve with optimal runtime"
                    },
                    {
                        "username": "jihweiliang",
                        "content": "This is actually medium!"
                    },
                    {
                        "username": "RobertSkonieczny",
                        "content": "I have no idea why my brain went to DFS with a map lol.\\n\\n```java\\nclass Solution {\\n    public int[][] indexPairs(String text, String[] words) {\\n        Map<Character, Set<Integer>> map = new HashMap<>();\\n        for (int i = 0;i < text.length();i++) {\\n            map.computeIfAbsent(text.charAt(i), (v) -> new HashSet<>())\\n                .add(i);\\n        }\\n        List<int[]> answer = new ArrayList<>();\\n        for (String word : words) {\\n            for (int index : map.getOrDefault(word.charAt(0), new HashSet<>())) {\\n                int result = dfs(map, index, word, 1);\\n                if (result != -1) {\\n                    answer.add(new int[]{index, result});\\n                }\\n            }\\n        }\\n        int[][] result = new int[answer.size()][2];\\n        int j = 0;\\n\\n        for (int[] a : answer) result[j++] = a;\\n\\n        Arrays.sort(result, new Comparator<int[]>() {\\n            public int compare(int[] o1, int[]o2) {\\n                return o1[0] == o2[0] ? o1[1] - o2[1] : o1[0] - o2[0];\\n            }\\n        });\\n\\n        return result;\\n    }\\n\\n    public int dfs(Map<Character, Set<Integer>> map,\\n        int currIndex,\\n        String target, \\n        int targetIndex) {\\n        if (targetIndex >= target.length()) {\\n            return currIndex;\\n        }\\n\\n        if (map.containsKey(target.charAt(targetIndex)) \\n            && map.get(target.charAt(targetIndex)).contains(currIndex+1)) {\\n                return dfs(map, currIndex+1, target, targetIndex+1);\\n            }\\n        return -1;\\n    }\\n}\\n```"
                    }
                ]
            },
            {
                "id": 1879126,
                "content": [
                    {
                        "username": "bkin",
                        "content": "feels more like a medium if you\\'re trying to solve with optimal runtime"
                    },
                    {
                        "username": "jihweiliang",
                        "content": "This is actually medium!"
                    },
                    {
                        "username": "RobertSkonieczny",
                        "content": "I have no idea why my brain went to DFS with a map lol.\\n\\n```java\\nclass Solution {\\n    public int[][] indexPairs(String text, String[] words) {\\n        Map<Character, Set<Integer>> map = new HashMap<>();\\n        for (int i = 0;i < text.length();i++) {\\n            map.computeIfAbsent(text.charAt(i), (v) -> new HashSet<>())\\n                .add(i);\\n        }\\n        List<int[]> answer = new ArrayList<>();\\n        for (String word : words) {\\n            for (int index : map.getOrDefault(word.charAt(0), new HashSet<>())) {\\n                int result = dfs(map, index, word, 1);\\n                if (result != -1) {\\n                    answer.add(new int[]{index, result});\\n                }\\n            }\\n        }\\n        int[][] result = new int[answer.size()][2];\\n        int j = 0;\\n\\n        for (int[] a : answer) result[j++] = a;\\n\\n        Arrays.sort(result, new Comparator<int[]>() {\\n            public int compare(int[] o1, int[]o2) {\\n                return o1[0] == o2[0] ? o1[1] - o2[1] : o1[0] - o2[0];\\n            }\\n        });\\n\\n        return result;\\n    }\\n\\n    public int dfs(Map<Character, Set<Integer>> map,\\n        int currIndex,\\n        String target, \\n        int targetIndex) {\\n        if (targetIndex >= target.length()) {\\n            return currIndex;\\n        }\\n\\n        if (map.containsKey(target.charAt(targetIndex)) \\n            && map.get(target.charAt(targetIndex)).contains(currIndex+1)) {\\n                return dfs(map, currIndex+1, target, targetIndex+1);\\n            }\\n        return -1;\\n    }\\n}\\n```"
                    }
                ]
            },
            {
                "id": 1891656,
                "content": [
                    {
                        "username": "bkin",
                        "content": "feels more like a medium if you\\'re trying to solve with optimal runtime"
                    },
                    {
                        "username": "jihweiliang",
                        "content": "This is actually medium!"
                    },
                    {
                        "username": "RobertSkonieczny",
                        "content": "I have no idea why my brain went to DFS with a map lol.\\n\\n```java\\nclass Solution {\\n    public int[][] indexPairs(String text, String[] words) {\\n        Map<Character, Set<Integer>> map = new HashMap<>();\\n        for (int i = 0;i < text.length();i++) {\\n            map.computeIfAbsent(text.charAt(i), (v) -> new HashSet<>())\\n                .add(i);\\n        }\\n        List<int[]> answer = new ArrayList<>();\\n        for (String word : words) {\\n            for (int index : map.getOrDefault(word.charAt(0), new HashSet<>())) {\\n                int result = dfs(map, index, word, 1);\\n                if (result != -1) {\\n                    answer.add(new int[]{index, result});\\n                }\\n            }\\n        }\\n        int[][] result = new int[answer.size()][2];\\n        int j = 0;\\n\\n        for (int[] a : answer) result[j++] = a;\\n\\n        Arrays.sort(result, new Comparator<int[]>() {\\n            public int compare(int[] o1, int[]o2) {\\n                return o1[0] == o2[0] ? o1[1] - o2[1] : o1[0] - o2[0];\\n            }\\n        });\\n\\n        return result;\\n    }\\n\\n    public int dfs(Map<Character, Set<Integer>> map,\\n        int currIndex,\\n        String target, \\n        int targetIndex) {\\n        if (targetIndex >= target.length()) {\\n            return currIndex;\\n        }\\n\\n        if (map.containsKey(target.charAt(targetIndex)) \\n            && map.get(target.charAt(targetIndex)).contains(currIndex+1)) {\\n                return dfs(map, currIndex+1, target, targetIndex+1);\\n            }\\n        return -1;\\n    }\\n}\\n```"
                    }
                ]
            }
        ]
    },
    {
        "title": "Campus Bikes II",
        "question_content": null,
        "solutions": [],
        "discussions": [
            {
                "id": 1573228,
                "content": [
                    {
                        "username": "YL_LC",
                        "content": "If are are given N = number of workers, and M = number of bikes. Then we have N options for the first worker to choose from and M bikes. On the second selection, we have N - 1 workers and M - 1 bikes. Thus, a brute force time complexity should be O(N!M!). \\n\\nHowever, when trying to implement this via Heap\\'s algorithim, I run into some edge cases which break the algorithm. Does anyone have suggestions? @awice? lol"
                    },
                    {
                        "username": "sushi27",
                        "content": "How\\'s is this a medium problem?\\n"
                    },
                    {
                        "username": "djslim",
                        "content": "[@nnn123](/nnn123) bitmask dp should be marked as hard (although this one is one of easier bitmask dp problems)"
                    },
                    {
                        "username": "nnn123",
                        "content": "It used to be hard:)"
                    }
                ]
            },
            {
                "id": 1751360,
                "content": [
                    {
                        "username": "YL_LC",
                        "content": "If are are given N = number of workers, and M = number of bikes. Then we have N options for the first worker to choose from and M bikes. On the second selection, we have N - 1 workers and M - 1 bikes. Thus, a brute force time complexity should be O(N!M!). \\n\\nHowever, when trying to implement this via Heap\\'s algorithim, I run into some edge cases which break the algorithm. Does anyone have suggestions? @awice? lol"
                    },
                    {
                        "username": "sushi27",
                        "content": "How\\'s is this a medium problem?\\n"
                    },
                    {
                        "username": "djslim",
                        "content": "[@nnn123](/nnn123) bitmask dp should be marked as hard (although this one is one of easier bitmask dp problems)"
                    },
                    {
                        "username": "nnn123",
                        "content": "It used to be hard:)"
                    }
                ]
            }
        ]
    },
    {
        "title": "Digit Count in Range",
        "question_content": null,
        "solutions": [],
        "discussions": []
    },
    {
        "title": "Product Sales Analysis I",
        "question_content": "<p>Table: <code>Sales</code></p>\n\n<pre>\n+-------------+-------+\n| Column Name | Type  |\n+-------------+-------+\n| sale_id     | int   |\n| product_id  | int   |\n| year        | int   |\n| quantity    | int   |\n| price       | int   |\n+-------------+-------+\n(sale_id, year) is the primary key (combination of columns with unique values) of this table.\nproduct_id is a foreign key (reference column) to <code>Product</code> table.\nEach row of this table shows a sale on the product product_id in a certain year.\nNote that the price is per unit.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Table: <code>Product</code></p>\n\n<pre>\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| product_id   | int     |\n| product_name | varchar |\n+--------------+---------+\nproduct_id is the primary key (column with unique values) of this table.\nEach row of this table indicates the product name of each product.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write a solution to report the <code>product_name</code>, <code>year</code>, and <code>price</code> for each <code>sale_id</code> in the <code>Sales</code> table.</p>\n\n<p>Return the resulting table in <strong>any order</strong>.</p>\n\n<p>The result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nSales table:\n+---------+------------+------+----------+-------+\n| sale_id | product_id | year | quantity | price |\n+---------+------------+------+----------+-------+ \n| 1       | 100        | 2008 | 10       | 5000  |\n| 2       | 100        | 2009 | 12       | 5000  |\n| 7       | 200        | 2011 | 15       | 9000  |\n+---------+------------+------+----------+-------+\nProduct table:\n+------------+--------------+\n| product_id | product_name |\n+------------+--------------+\n| 100        | Nokia        |\n| 200        | Apple        |\n| 300        | Samsung      |\n+------------+--------------+\n<strong>Output:</strong> \n+--------------+-------+-------+\n| product_name | year  | price |\n+--------------+-------+-------+\n| Nokia        | 2008  | 5000  |\n| Nokia        | 2009  | 5000  |\n| Apple        | 2011  | 9000  |\n+--------------+-------+-------+\n<strong>Explanation:</strong> \nFrom sale_id = 1, we can conclude that Nokia was sold for 5000 in the year 2008.\nFrom sale_id = 2, we can conclude that Nokia was sold for 5000 in the year 2009.\nFrom sale_id = 7, we can conclude that Apple was sold for 9000 in the year 2011.\n</pre>\n",
        "solutions": [
            {
                "id": 413456,
                "title": "mysql-99-42",
                "content": "Likely what is happening is that in the `Sales` table there are multiple transactions of the same `product_id`, `year`, `price` at different `quantity`. As a result, if `DISTINCT` entries were retrieved before joining with `Product` table, it runs a lot faster. \\n```\\nSELECT DISTINCT \\n    P.product_name, S.year, S.price \\nFROM \\n    (SELECT DISTINCT product_id, year, price FROM Sales) S\\nINNER JOIN\\n    Product AS P\\nUSING (product_id);\\n```",
                "solutionTags": [],
                "code": "```\\nSELECT DISTINCT \\n    P.product_name, S.year, S.price \\nFROM \\n    (SELECT DISTINCT product_id, year, price FROM Sales) S\\nINNER JOIN\\n    Product AS P\\nUSING (product_id);\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3699837,
                "title": "easily-understandable-solution",
                "content": "# Code\\n```\\nSELECT P.product_name ,S.year  ,S.price \\nFROM Sales  S\\nLEFT JOIN Product P\\nON S.product_id =P.product_id \\n\\n```PLEASE UPVOTE TO MOTIVATE ME WRITE MORE SOLUTION",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT P.product_name ,S.year  ,S.price \\nFROM Sales  S\\nLEFT JOIN Product P\\nON S.product_id =P.product_id \\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 845779,
                "title": "extremely-simple-solution",
                "content": "SELECT p.product_name, s.year, s.price\\nFROM Sales s Left Join Product p\\nON p.product_id = s.product_id\\n",
                "solutionTags": [],
                "code": "SELECT p.product_name, s.year, s.price\\nFROM Sales s Left Join Product p\\nON p.product_id = s.product_id\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 3386893,
                "title": "super-easy-mysql",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect P.product_name,S.year,S.price from Sales S,Product P where S.product_id=P.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect P.product_name,S.year,S.price from Sales S,Product P where S.product_id=P.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3366690,
                "title": "one-line-solution-using-join-condition-with-explanation",
                "content": "<!-- # Intuition -->\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n<!-- # Approach -->\\n<!-- Describe your approach to solving the problem. -->\\n\\n\\n<!-- # Complexity -->\\n<!-- - Time complexity: -->\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n<!-- - Space complexity: -->\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect product_name,year,price from sales join product using (product_id) order by year;\\n```\\n# Explanation\\nThe query statement begins with a comment, which is ignored by MySQL. The comment is used to describe the purpose of the query statement. The actual query statement starts with the **`select`** keyword, which is used to select columns from one or more tables. In this case, the query selects the product_name, year, and price columns from the sales table.\\n\\nThe **`join`** keyword is used to combine rows from two or more tables based on a related column between them. In this case, the **`join`** keyword is used to join the sales table with the product table using the product_id column. The **`using`** keyword specifies the column to join on.\\n\\nThe **`order by`** keyword is used to sort the result set in ascending or descending order. In this case, the result set is sorted by the year column in ascending order.\\n\\n<!-- ## References\\n#### **MySQL SELECT statement**\\n[https://dev.mysql.com/doc/refman/8.0/en/select.html]()\\n#### **MySQL JOIN statement**\\n[https://dev.mysql.com/doc/refman/8.0/en/join.html]()\\n#### **MySQL ORDER BY statement**\\n[https://dev.mysql.com/doc/refman/8.0/en/sorting-rows.html]() -->\\n\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect product_name,year,price from sales join product using (product_id) order by year;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2357546,
                "title": "mysql-left-join-with-explanation-good-luck",
                "content": "```\\n# Write your MySQL query statement below\\n\\n/**\\n\\nTwo Table: Sales/Product\\n(sale_id, year) is the primary key of Sales table.\\nproduct_id is the primary key of Product table.\\n\\nSales table shows a sale on the product product_id in a certain year.\\nProduct table indicates the product name of each product.\\n\\n\\nPROBLEM:\\n    Reports the product_name, year, and price for each sale_id in the Sales table.\\n    \\nSTEPS:\\n    LEFT JOIN to Sales Table\\n    JOIN ON Sales.product_id = Product.product_id\\n    \\n*/\\n\\nSELECT\\n    product_name,\\n    year,\\n    price\\nFROM Sales S\\nLEFT JOIN Product P\\nON S.product_id = P.product_id\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\n\\n/**\\n\\nTwo Table: Sales/Product\\n(sale_id, year) is the primary key of Sales table.\\nproduct_id is the primary key of Product table.\\n\\nSales table shows a sale on the product product_id in a certain year.\\nProduct table indicates the product name of each product.\\n\\n\\nPROBLEM:\\n    Reports the product_name, year, and price for each sale_id in the Sales table.\\n    \\nSTEPS:\\n    LEFT JOIN to Sales Table\\n    JOIN ON Sales.product_id = Product.product_id\\n    \\n*/\\n\\nSELECT\\n    product_name,\\n    year,\\n    price\\nFROM Sales S\\nLEFT JOIN Product P\\nON S.product_id = P.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3913005,
                "title": "pandas-merge-select-columns",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nstraight-forward\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nWe merge the two tables to add product names to each row of `sales` in accordance with its `product_id`. Then just select the three required columns and return.\\n\\n# Complexity\\nTime complexity: $O(n)$\\nSpace complexity: $O(n)$\\n# Code\\n```\\nimport pandas as pd\\n\\ndef sales_analysis(sales: pd.DataFrame, product: pd.DataFrame) -> pd.DataFrame:\\n    return pd.merge(sales, product, on=\\'product_id\\')[[\\'product_name\\', \\'year\\', \\'price\\']]\\n    \\n```",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```\\nimport pandas as pd\\n\\ndef sales_analysis(sales: pd.DataFrame, product: pd.DataFrame) -> pd.DataFrame:\\n    return pd.merge(sales, product, on=\\'product_id\\')[[\\'product_name\\', \\'year\\', \\'price\\']]\\n    \\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3876045,
                "title": "beginners-friendly-and-simple-solution-without-join",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect product.product_name,sales.year,sales.price \\nfrom sales,product \\nwhere sales.product_id=product.product_id;\\n```",
                "solutionTags": [
                    "MySQL",
                    "MS SQL Server",
                    "Oracle"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect product.product_name,sales.year,sales.price \\nfrom sales,product \\nwhere sales.product_id=product.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3716803,
                "title": "mysql-simple-and-clean-beats-88",
                "content": "### Please upvote if you find this helpful. \\u270C\\n<img src=\"https://assets.leetcode.com/users/images/b8e25620-d320-420a-ae09-94c7453bd033_1678818986.7001078.jpeg\" alt=\"Cute Robot - Stable diffusion\" width=\"200\"/>\\n\\n# Intuition\\nThe problem seems to involve retrieving data from two tables, `Sales` and `Product`, and displaying the product name, year, and price for each sale. The first thought that comes to mind is to use a `JOIN` operation to combine the two tables based on a common column, which in this case is `product_id`.\\n\\n# Approach\\n1. Use a `JOIN` operation to combine the `Sales` and `Product` tables based on the common column `product_id`.\\n2. Select the columns `product_name`, `year`, and `price` from the resulting table.\\n3. Use a `GROUP BY` clause to group the results by `sale_id`.\\n\\n# Complexity\\n- Time complexity: The time complexity of this solution depends on the size of the `Sales` and `Product` tables and the efficiency of the database management system in performing the `JOIN` and `GROUP BY` operations.\\n- Space complexity: The space complexity of this solution also depends on the size of the `Sales` and `Product` tables and the efficiency of the database management system in storing and retrieving data.\\n\\n# Query\\n```\\nSELECT p.product_name, s.year, s.price\\nFROM Sales s\\nJOIN Product p ON s.product_id = p.product_id\\nGROUP BY s.sale_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT p.product_name, s.year, s.price\\nFROM Sales s\\nJOIN Product p ON s.product_id = p.product_id\\nGROUP BY s.sale_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3635993,
                "title": "using-the-using-keyword",
                "content": "```\\nselect product_name, year, price \\nfrom Sales join Product using(product_id)\\n```",
                "solutionTags": [
                    "Oracle"
                ],
                "code": "```\\nselect product_name, year, price \\nfrom Sales join Product using(product_id)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3984826,
                "title": "pandas-easy-1-line-solution-for-beginners",
                "content": "**\\uD83D\\uDD3C IF YOU FIND THIS POST HELPFUL PLEASE UPVOTE \\uD83D\\uDC4D**\\n```\\nimport pandas as pd\\n\\ndef sales_analysis(sales: pd.DataFrame, product: pd.DataFrame) -> pd.DataFrame:\\n    \\n    result = pd.merge(sales, product, on=\\'product_id\\', how=\\'inner\\')\\n    \\n    return result[[\\'product_name\\', \\'year\\', \\'price\\']]\\n```\\n**Thank you for reading! \\uD83D\\uDE04 Comment if you have any questions or feedback.**",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nimport pandas as pd\\n\\ndef sales_analysis(sales: pd.DataFrame, product: pd.DataFrame) -> pd.DataFrame:\\n    \\n    result = pd.merge(sales, product, on=\\'product_id\\', how=\\'inner\\')\\n    \\n    return result[[\\'product_name\\', \\'year\\', \\'price\\']]\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3549335,
                "title": "sql-left-join-easy-solution",
                "content": "# Intuition\\nThe second table was simply joined to the first table\\n\\n![e2515d84-99cf-4499-80fb-fe458e1bbae2_1678932606.8004954.png](https://assets.leetcode.com/users/images/7a24a595-2a42-4188-9872-2455570be0fd_1684688655.27324.png)\\n\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect \\nproduct_name, s.year, price\\nfrom Sales s left join Product p on p.product_id = s.product_id\\n```",
                "solutionTags": [
                    "MySQL",
                    "Database"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect \\nproduct_name, s.year, price\\nfrom Sales s left join Product p on p.product_id = s.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3536653,
                "title": "mysql-solution-for-product-sales-analysis-i-problem",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThe intuition behind the given solution is to retrieve a distinct list of product names, years, and prices from the Sales and Product tables. The approach involves performing a join operation between the Sales and Product tables using the common column product_id, and then selecting the distinct product_name, year, and price columns from the resulting dataset.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n1. Select distinct product_id, year, and price columns from the Sales table and alias it as S.\\n1. Perform an inner join between the S table and the Product table using the common column product_id.\\n1. Select the distinct product_name, year, and price columns from the joined dataset.\\n1. Return the resulting rows.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nThe time complexity of this solution depends on the size of the Sales and Product tables, as well as the efficiency of the join operation. If both tables are properly indexed on the product_id column, the join operation can be performed efficiently. The time complexity of the join operation can be estimated as O(n * log n), where n is the number of rows in the joined dataset.\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nThe space complexity of this solution depends on the size of the resulting dataset, which includes the distinct product_name, year, and price columns. The space complexity is determined by the cardinality of the distinct values in these columns.\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect distinct P.product_name, S.year, S.price from\\n\\n    (select distinct product_id, year, price from Sales) S inner join Product as P using (product_id);\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect distinct P.product_name, S.year, S.price from\\n\\n    (select distinct product_id, year, price from Sales) S inner join Product as P using (product_id);\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 303688,
                "title": "simple-sql-solution-with-out-any-join-keyword",
                "content": "```\\n# Write your MySQL query statement below\\n\\nselect Product.product_name, Sales.year, Sales.price\\nfrom Product, Sales\\nwhere Product.product_id = Sales.product_id\\n\\n\\n```",
                "solutionTags": [],
                "code": "```\\n# Write your MySQL query statement below\\n\\nselect Product.product_name, Sales.year, Sales.price\\nfrom Product, Sales\\nwhere Product.product_id = Sales.product_id\\n\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4025569,
                "title": "sql-inner-join",
                "content": "\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT p.product_name, s.year, s.price \\nFROM Sales AS s INNER JOIN Product AS p \\nON s.product_id = p.product_id ;\\n```\\nPlease consider **upvoting** if you find this solution helpful.\\nYour support is appreciated!\\n\\n---\\n\\n\\n![images (1).jpg](https://assets.leetcode.com/users/images/c9067bf4-bb5e-4580-a3d9-f7b7a044d90c_1694328644.5265574.jpeg)\\n\\n\\n",
                "solutionTags": [
                    "MySQL",
                    "Database"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT p.product_name, s.year, s.price \\nFROM Sales AS s INNER JOIN Product AS p \\nON s.product_id = p.product_id ;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3943912,
                "title": "4-easy-solutions-mysql",
                "content": "# Intuition\\r\\n<!-- Describe your first thoughts on how to solve this problem. -->\\r\\n\\r\\n# Approach\\r\\n<!-- Describe your approach to solving the problem. -->\\r\\n\\r\\n# Complexity\\r\\n- Time complexity:\\r\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\r\\n\\r\\n- Space complexity:\\r\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\r\\n\\r\\n# Code\\r\\n```\\r\\n# Write your MySQL query statement below\\r\\n\\r\\n\\r\\nselect product_name, year, price\\r\\nfrom sales,product\\r\\nwhere sales.product_id=product.product_id\\r\\n\\r\\n\\r\\nselect product_name, year, price\\r\\nfrom sales as s,product as p\\r\\nwhere s.product_id=p.product_id\\r\\n\\r\\n\\r\\n\\r\\nselect product_name, year, price\\r\\nfrom sales as s join product as p\\r\\non s.product_id=p.product_id\\r\\n\\r\\n\\r\\nselect product_name, year, price\\r\\nfrom sales join product \\r\\nusing(product_id)\\r\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\r\\n# Write your MySQL query statement below\\r\\n\\r\\n\\r\\nselect product_name, year, price\\r\\nfrom sales,product\\r\\nwhere sales.product_id=product.product_id\\r\\n\\r\\n\\r\\nselect product_name, year, price\\r\\nfrom sales as s,product as p\\r\\nwhere s.product_id=p.product_id\\r\\n\\r\\n\\r\\n\\r\\nselect product_name, year, price\\r\\nfrom sales as s join product as p\\r\\non s.product_id=p.product_id\\r\\n\\r\\n\\r\\nselect product_name, year, price\\r\\nfrom sales join product \\r\\nusing(product_id)\\r\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3895948,
                "title": "mysql-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT P.product_name ,S.year  ,S.price FROM Sales  S LEFT JOIN Product P ON S.product_id =P.product_id \\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT P.product_name ,S.year  ,S.price FROM Sales  S LEFT JOIN Product P ON S.product_id =P.product_id \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3680134,
                "title": "mysql-easy-solution-inner-join",
                "content": "```\\nSELECT product_name, year, price\\nFROM Product INNER JOIN Sales \\nUSING(product_id)\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT product_name, year, price\\nFROM Product INNER JOIN Sales \\nUSING(product_id)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3666810,
                "title": "simple",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/* Write your T-SQL query statement below */\\nSELECT p.product_name,s.year,s.price from Sales s,Product p where p.product_id = s.product_id\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n/* Write your T-SQL query statement below */\\nSELECT p.product_name,s.year,s.price from Sales s,Product p where p.product_id = s.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3558835,
                "title": "simple-sql-solution-sss",
                "content": "# Code\\n```\\nSelect p.product_name, s.year, s.price\\nfrom Sales s join Product p\\non s.product_id = p.product_id; \\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSelect p.product_name, s.year, s.price\\nfrom Sales s join Product p\\non s.product_id = p.product_id; \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3521830,
                "title": "easiest-query-anyone-can-remember",
                "content": "Try to visualize the tables, then you can understand the concept!\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\n\\nSELECT P.product_name, S.year, S.price \\nFROM Sales as S LEFT JOIN Product as P \\nON S.product_id = P.product_id\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\n\\nSELECT P.product_name, S.year, S.price \\nFROM Sales as S LEFT JOIN Product as P \\nON S.product_id = P.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3427789,
                "title": "solution-with-simple-inner-join-sql-server",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/* Write your T-SQL query statement below */\\n\\nSELECT\\n    T2.product_name,\\n    T1.year,\\n    T1.price\\nFROM\\n    Sales T1\\nINNER JOIN\\n    Product T2 ON T1.product_id = T2.product_id\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\n/* Write your T-SQL query statement below */\\n\\nSELECT\\n    T2.product_name,\\n    T1.year,\\n    T1.price\\nFROM\\n    Sales T1\\nINNER JOIN\\n    Product T2 ON T1.product_id = T2.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 363279,
                "title": "faster-than-99-96",
                "content": "```\\nSELECT p.product_name, d.year, d.price FROM Product as p JOIN \\n    (SELECT DISTINCT(product_id), year, price FROM Sales) as d ON p.product_id = d.product_id\\n```\\n`DISTINCT` helps filtering the table early on",
                "solutionTags": [],
                "code": "```\\nSELECT p.product_name, d.year, d.price FROM Product as p JOIN \\n    (SELECT DISTINCT(product_id), year, price FROM Sales) as d ON p.product_id = d.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4065545,
                "title": "product-sales-analysis-i-pandas-easy",
                "content": "[see the successfully Accepted Submission](https://leetcode.com/submissions/detail/1053812701/)\\n```\\nimport pandas as pd\\n\\ndef sales_analysis(sales: pd.DataFrame, product: pd.DataFrame) -> pd.DataFrame:\\n    \\n    # First, the \\'merge\\' function to join the DataFrames on \\'product_id\\' is used\\n    result = pd.merge(sales, product, on=\\'product_id\\', how=\\'inner\\')\\n\\n    # Then, we select the desired columns from the merged DataFrame\\n    result = result[[\\'product_name\\', \\'year\\', \\'price\\']]\\n\\n    return result\\n    \\n```\\n\\n![image](https://assets.leetcode.com/users/images/b47ec70c-b5c8-4035-97f9-d04591cc862b_1695145819.8667417.jpeg)\\n",
                "solutionTags": [],
                "code": "```\\nimport pandas as pd\\n\\ndef sales_analysis(sales: pd.DataFrame, product: pd.DataFrame) -> pd.DataFrame:\\n    \\n    # First, the \\'merge\\' function to join the DataFrames on \\'product_id\\' is used\\n    result = pd.merge(sales, product, on=\\'product_id\\', how=\\'inner\\')\\n\\n    # Then, we select the desired columns from the merged DataFrame\\n    result = result[[\\'product_name\\', \\'year\\', \\'price\\']]\\n\\n    return result\\n    \\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3860985,
                "title": "easy-mysql-left-join",
                "content": "# Code\\n```\\n# Write your MySQL query statement below\\nselect Product.product_name, Sales.year, Sales.price from\\nSales left join Product on Product.product_id = Sales.product_id ;\\n```\\n![upvote.jpg](https://assets.leetcode.com/users/images/92c0f397-9210-4650-922f-2d0260d2c129_1691123796.8813443.jpeg)\\n\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect Product.product_name, Sales.year, Sales.price from\\nSales left join Product on Product.product_id = Sales.product_id ;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3839907,
                "title": "easy-solution-mysql",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThere are two table so for joining them we have to use join.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nsince sale_id,year is primary  key so no need to use distinct\\nand it is asking about **each** sale_id , so since it is part of  primary key  so here no need to use group by clause.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\no(n2)\\n\\n<!-- - Space complexity: -->\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect p.product_name,s.year,s.price from Sales s \\njoin product p on p.product_id=s.product_id;\\n```",
                "solutionTags": [
                    "MySQL",
                    "Database"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect p.product_name,s.year,s.price from Sales s \\njoin product p on p.product_id=s.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3820219,
                "title": "product-sales-analysis-i-mysql-solution-code",
                "content": "# Code\\n```\\n# Write your MySQL query statement below\\nselect Product.product_name, Sales.year, Sales.price \\nfrom Sales\\ninner join Product\\non Sales.product_id = Product.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect Product.product_name, Sales.year, Sales.price \\nfrom Sales\\ninner join Product\\non Sales.product_id = Product.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3787309,
                "title": "easy-mysql-solution",
                "content": "\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT p.product_name ,s.year ,s.price from Sales as s left join Product as p on p.product_id = s.product_id ;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT p.product_name ,s.year ,s.price from Sales as s left join Product as p on p.product_id = s.product_id ;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3760105,
                "title": "simple-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT P.product_name ,S.year  ,S.price FROM Sales  S LEFT JOIN Product P ON S.product_id =P.product_id \\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT P.product_name ,S.year  ,S.price FROM Sales  S LEFT JOIN Product P ON S.product_id =P.product_id \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3700017,
                "title": "beginner-friendly-solution",
                "content": "```\\nSELECT Product.product_name, Sales.year, Sales.price\\nFROM Sales, Product\\nWHERE Sales.product_id = Product.product_id;\\n```",
                "solutionTags": [],
                "code": "```\\nSELECT Product.product_name, Sales.year, Sales.price\\nFROM Sales, Product\\nWHERE Sales.product_id = Product.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3685830,
                "title": "mysql-easy-solution-using-right-join",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nRIGHT JOIN\\nRuntime - 2049 ms\\nBeats - 63.66%\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect product_name, year, price \\nfrom Product right JOIN Sales\\nUSING (product_id)\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect product_name, year, price \\nfrom Product right JOIN Sales\\nUSING (product_id)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3645369,
                "title": "sql-simple-join",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/* Write your T-SQL query statement below */\\n\\nselect p.product_name, s.year, s.price from Sales as s\\njoin Product as p on s.product_id=p.product_id\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\n/* Write your T-SQL query statement below */\\n\\nselect p.product_name, s.year, s.price from Sales as s\\njoin Product as p on s.product_id=p.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3550796,
                "title": "easy-sql-code-left-join-concept-used",
                "content": "# Intuition\\nLEFT JOIN \\n\\n# Approach\\n**Left table** - `Sales` table\\n**Right table** - `Product` table\\nLeft join Left table with Right table.\\n\\n\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT p.product_name,s.year,s.price \\nFROM Sales AS s\\n LEFT JOIN \\n Product AS p\\n  ON p.product_id=s.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT p.product_name,s.year,s.price \\nFROM Sales AS s\\n LEFT JOIN \\n Product AS p\\n  ON p.product_id=s.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3548437,
                "title": "simple-query-using-inner-join-works-on-all-3-db",
                "content": "\\n\\n# Code\\n```\\nselect product_name,year,price from Sales s inner join Product p on s.product_id = p.product_id;\\n```",
                "solutionTags": [
                    "MySQL",
                    "MS SQL Server",
                    "Oracle"
                ],
                "code": "```\\nselect product_name,year,price from Sales s inner join Product p on s.product_id = p.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3542772,
                "title": "mysql-solution-left-join",
                "content": "\\n# Write your MySQL query statement below\\nSELECT product_name,year,price from Sales LEFT JOIN Product ON Sales.product_id = Product.product_id\\n\\n\\n```",
                "solutionTags": [
                    "MySQL",
                    "Database"
                ],
                "code": "\\n# Write your MySQL query statement below\\nSELECT product_name,year,price from Sales LEFT JOIN Product ON Sales.product_id = Product.product_id\\n\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3111128,
                "title": "simple-mysql-solution-using-distinct-and-subquery",
                "content": "Code is pretty self explanatory\\n\\n# Code\\n```\\nSELECT DISTINCT p.product_name, s.year, s.price \\nFROM (SELECT DISTINCT product_id, year, price FROM Sales) s\\nJOIN Product p\\nUSING(product_id);\\n```\\nIf you have questions comment them down and **don\\'t forget to upvote**",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT DISTINCT p.product_name, s.year, s.price \\nFROM (SELECT DISTINCT product_id, year, price FROM Sales) s\\nJOIN Product p\\nUSING(product_id);\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2051175,
                "title": "correlated-subquery-w-o-join",
                "content": "**Solution 1:**\\n```\\nselect \\n\\t\\t(select p.product_name from Product p where p.product_id = s.product_id) as product_name,  \\n\\t\\ts.year, s.price\\nfrom Sales s\\n```\\n\\n**Solution 2:**\\n\\n```\\nselect p.product_name, s.year, s.price\\nfrom Sales s, Product p\\nwhere s.product_id = p.product_id\\n```",
                "solutionTags": [],
                "code": "```\\nselect \\n\\t\\t(select p.product_name from Product p where p.product_id = s.product_id) as product_name,  \\n\\t\\ts.year, s.price\\nfrom Sales s\\n```\n```\\nselect p.product_name, s.year, s.price\\nfrom Sales s, Product p\\nwhere s.product_id = p.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1638719,
                "title": "left-join",
                "content": "select p.product_name, s.year, s.price from sales s\\nleft join product p\\n    on p.product_id = s.product_id",
                "solutionTags": [],
                "code": "select p.product_name, s.year, s.price from sales s\\nleft join product p\\n    on p.product_id = s.product_id",
                "codeTag": "Unknown"
            },
            {
                "id": 1555793,
                "title": "simple-mysql-join",
                "content": "```\\nSELECT\\n    t1.product_name,\\n    t2.year,\\n    t2.price\\nFROM\\n    product t1\\nINNER JOIN\\n    sales t2\\nON\\n    t1.product_id = t2.product_id;\\n\\n```",
                "solutionTags": [],
                "code": "```\\nSELECT\\n    t1.product_name,\\n    t2.year,\\n    t2.price\\nFROM\\n    product t1\\nINNER JOIN\\n    sales t2\\nON\\n    t1.product_id = t2.product_id;\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 507976,
                "title": "mysql-99-12",
                "content": "SELECT product_name,year,price from Product p\\njoin (select distinct product_id, year, price from Sales) s \\nusing (product_id)",
                "solutionTags": [],
                "code": "SELECT product_name,year,price from Product p\\njoin (select distinct product_id, year, price from Sales) s \\nusing (product_id)",
                "codeTag": "Unknown"
            },
            {
                "id": 386943,
                "title": "can-someone-explain-why-subquery-faster-than-left-join-here",
                "content": "Subquery consistently performs around 1000ms whereas Left Join 1600ms. Why??? \\n\\nLeft Join:\\n```\\nSELECT DISTINCT Product.product_name, Sales.year, Sales.price\\nFROM Sales\\nLEFT JOIN Product\\nON Sales.product_id = Product.product_id\\n```\\n\\nSubquery:\\n```\\nSELECT p.product_name, d.year, d.price FROM Product as p JOIN \\n    (SELECT DISTINCT product_id, year, price FROM Sales) as d ON p.product_id = d.product_id\\n```",
                "solutionTags": [],
                "code": "```\\nSELECT DISTINCT Product.product_name, Sales.year, Sales.price\\nFROM Sales\\nLEFT JOIN Product\\nON Sales.product_id = Product.product_id\\n```\n```\\nSELECT p.product_name, d.year, d.price FROM Product as p JOIN \\n    (SELECT DISTINCT product_id, year, price FROM Sales) as d ON p.product_id = d.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 384032,
                "title": "join-solution",
                "content": "```\\nselect product_name,year,price from Sales join Product on Sales.product_id = Product.product_id\\n```",
                "solutionTags": [],
                "code": "```\\nselect product_name,year,price from Sales join Product on Sales.product_id = Product.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 324675,
                "title": "simple-fast-solution",
                "content": "```\\nSELECT product_name,s.year,price\\nFROM Sales as s\\nJOIN\\nProduct as p\\nusing(product_id)\\n```",
                "solutionTags": [],
                "code": "```\\nSELECT product_name,s.year,price\\nFROM Sales as s\\nJOIN\\nProduct as p\\nusing(product_id)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4092097,
                "title": "clean-and-simple-sql-with-join",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price from Sales s join Product p on s.product_id = p.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price from Sales s join Product p on s.product_id = p.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4088386,
                "title": "product-sales-analysis-i-mysql",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nWe can use Left Join to get the desired data since we need data from first table [Sales] and matching data from second table [Product]\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nWe can use Left Join to get the desired data since we need data from first table [Sales] and matching data from second table [Product]\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n1771 ms\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n0.00 MB\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect Product.product_name, Sales.year, Sales.price\\nfrom Sales\\nleft join Product using(product_id)\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect Product.product_name, Sales.year, Sales.price\\nfrom Sales\\nleft join Product using(product_id)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4087070,
                "title": "easy-mysql-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect product_name, year,price from sales s inner join product p where s.product_id=p.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect product_name, year,price from sales s inner join product p where s.product_id=p.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4085923,
                "title": "easy",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price from Sales s inner join product p\\non s.product_id=p.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price from Sales s inner join product p\\non s.product_id=p.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4084045,
                "title": "easy-approach-to-solve-this-problem",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect product_name,year,price from Sales as a inner join product as b on a.product_id=b.product_id;  \\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect product_name,year,price from Sales as a inner join product as b on a.product_id=b.product_id;  \\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4082327,
                "title": "join",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT Product.product_name,Sales.year,Sales.price\\nFROM Sales\\nJOIN Product\\nON Sales.product_id=Product.product_id \\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT Product.product_name,Sales.year,Sales.price\\nFROM Sales\\nJOIN Product\\nON Sales.product_id=Product.product_id \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4080472,
                "title": "solution-with-left-join-sql",
                "content": "\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT product_name , year , price FROM Sales LEFT JOIN Product  on Sales.product_id = Product.product_id ORDER BY price DESC;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT product_name , year , price FROM Sales LEFT JOIN Product  on Sales.product_id = Product.product_id ORDER BY price DESC;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4080431,
                "title": "product-sales-analysis-mysql",
                "content": "# Code\\n```\\n# Write your MySQL query statement below\\nselect Product.product_name, Sales.year, Sales.price from Sales left join Product on Sales.product_id = Product.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect Product.product_name, Sales.year, Sales.price from Sales left join Product on Sales.product_id = Product.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4080415,
                "title": "solution-with-inner-join",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT product_name,year, price\\nFROM Sales\\nINNER JOIN Product on Product.product_id = Sales.product_id\\n\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT product_name,year, price\\nFROM Sales\\nINNER JOIN Product on Product.product_id = Sales.product_id\\n\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4080240,
                "title": "easy-sql-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT P.PRODUCT_NAME, S.YEAR, S.PRICE AS PRICE FROM PRODUCT P JOIN SALES S ON S.PRODUCT_ID = P.PRODUCT_ID;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT P.PRODUCT_NAME, S.YEAR, S.PRICE AS PRICE FROM PRODUCT P JOIN SALES S ON S.PRODUCT_ID = P.PRODUCT_ID;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4079690,
                "title": "easy-oracle-solution",
                "content": "\\n# Code\\n```\\n/* Write your PL/SQL query statement below */\\nSelect product_name, year, price \\nfrom sales s inner join product p\\non s.product_id = p.product_id;\\n```",
                "solutionTags": [
                    "Oracle"
                ],
                "code": "```\\n/* Write your PL/SQL query statement below */\\nSelect product_name, year, price \\nfrom sales s inner join product p\\non s.product_id = p.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4079483,
                "title": "sql-simple-solution",
                "content": "# Code\\n```\\nSELECT p.product_name, s.year, s.price\\nFROM Product p\\nINNER JOIN Sales s ON p.product_id = s.product_id\\n```",
                "solutionTags": [
                    "MySQL",
                    "MS SQL Server"
                ],
                "code": "```\\nSELECT p.product_name, s.year, s.price\\nFROM Product p\\nINNER JOIN Sales s ON p.product_id = s.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4079152,
                "title": "easy-join-question",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect s.year, s.price, p.product_name from Sales s\\nleft join Product p on s.product_id = p.product_id\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect s.year, s.price, p.product_name from Sales s\\nleft join Product p on s.product_id = p.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4078894,
                "title": "mysql-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT p.product_name, s.year, s.price\\nFROM Sales s\\nLEFT JOIN Product p ON s.product_id = p.product_id\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT p.product_name, s.year, s.price\\nFROM Sales s\\nLEFT JOIN Product p ON s.product_id = p.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4078328,
                "title": "pandas-one-liner",
                "content": "Merge tables and drop unneeded columns..\\n\\n# Code\\n```\\nimport pandas as pd\\n\\ndef sales_analysis(sales: pd.DataFrame, product: pd.DataFrame) -> pd.DataFrame:\\n    return pd.merge(sales, product).drop(columns=[\\'product_id\\', \\'sale_id\\', \\'quantity\\'])\\n\\n    \\n```",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```\\nimport pandas as pd\\n\\ndef sales_analysis(sales: pd.DataFrame, product: pd.DataFrame) -> pd.DataFrame:\\n    return pd.merge(sales, product).drop(columns=[\\'product_id\\', \\'sale_id\\', \\'quantity\\'])\\n\\n    \\n```",
                "codeTag": "Python3"
            },
            {
                "id": 4077796,
                "title": "sql-joins",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/* Write your T-SQL query statement below */\\nSELECT P.product_name, S.year, S.price\\nFROM Sales S\\nJOIN Product P ON P.product_id = S.product_id;\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\n/* Write your T-SQL query statement below */\\nSELECT P.product_name, S.year, S.price\\nFROM Sales S\\nJOIN Product P ON P.product_id = S.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4077520,
                "title": "best-and-easy-solution-for-beginners",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect t2.product_name , t1.year,t1.price from sales as t1 inner join product as t2 on t1.product_id=t2.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect t2.product_name , t1.year,t1.price from sales as t1 inner join product as t2 on t1.product_id=t2.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4076114,
                "title": "easy-solution-using-cross-join",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT Product.product_name,Sales.year,Sales.price  \\nFROM Product \\nCROSS JOIN  Sales \\nWHERE Sales.product_id=Product.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT Product.product_name,Sales.year,Sales.price  \\nFROM Product \\nCROSS JOIN  Sales \\nWHERE Sales.product_id=Product.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4075820,
                "title": "the-shortest-query",
                "content": "# Intuition\\nJust use a natural join beacause it\\'s probably one of the shortest queries for this particular problem.\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price from sales s\\nnatural join product p;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price from sales s\\nnatural join product p;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4075684,
                "title": "very-easy-and-simple-solution-beats-92-20",
                "content": "\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect product_name, year, price \\nfrom Sales\\ninner join Product\\non Sales.product_id = Product.product_id\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect product_name, year, price \\nfrom Sales\\ninner join Product\\non Sales.product_id = Product.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4075190,
                "title": "beats-98-72-left-join",
                "content": "Runtime :: 1672ms\\nBeats 98.72%\\n\\nMemory :: 0.00MB\\nBeats 100.00%\\n\\n# Defination\\nThe LEFT JOIN keyword returns all records from the left table (table1), and the matching records from the right table (table2). The result is 0 records from the right side, if there is no match.\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect p.product_name,s.year,s.price from Sales s left join Product p on s.product_id=p.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect p.product_name,s.year,s.price from Sales s left join Product p on s.product_id=p.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4074081,
                "title": "mysql-answer",
                "content": "\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nleft join\\n# Complexity\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price from \\nSales as s \\nleft join Product as p using(product_id)\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price from \\nSales as s \\nleft join Product as p using(product_id)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4073109,
                "title": "simple-code",
                "content": "Here sales table is renamed as s and product table as p\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect p.product_name as product_name,s.year as year,s.price as price\\nfrom sales as s\\nJoin product p on s.product_id=p.product_id\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect p.product_name as product_name,s.year as year,s.price as price\\nfrom sales as s\\nJoin product p on s.product_id=p.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4072317,
                "title": "easy-sql-query-join-operation",
                "content": "\\n\\n# Approach\\nIn this we are select product_name from product table and year,price select from sales table and join both table on the basis of product_id is equal in both table.\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT product.product_name as product_name,Sales.year as year, Sales.price as price From Sales LEFT JOIN Product ON Sales.product_id=Product.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT product.product_name as product_name,Sales.year as year, Sales.price as price From Sales LEFT JOIN Product ON Sales.product_id=Product.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4072266,
                "title": "product-sales-analysis-sql-inner-join",
                "content": "\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT p.product_name, s.year, s.price FROM Sales s\\nINNER JOIN Product p ON s.product_id = p.product_id \\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT p.product_name, s.year, s.price FROM Sales s\\nINNER JOIN Product p ON s.product_id = p.product_id \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4071998,
                "title": "simple-solution-using-left-join",
                "content": "# Code\\n```\\nSELECT product_name, year, price FROM Sales\\nLEFT JOIN Product\\nON Sales.product_id = Product.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT product_name, year, price FROM Sales\\nLEFT JOIN Product\\nON Sales.product_id = Product.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4071451,
                "title": "fast-simple-query",
                "content": "# Query\\n```\\n/* SQL query */\\nSELECT B.PRODUCT_NAME PRODUCT_NAME, A.YEAR AS YEAR, A.PRICE PRICE FROM SALES A INNER JOIN PRODUCT B ON A.PRODUCT_ID = B.PRODUCT_ID;\\n```",
                "solutionTags": [
                    "Oracle"
                ],
                "code": "```\\n/* SQL query */\\nSELECT B.PRODUCT_NAME PRODUCT_NAME, A.YEAR AS YEAR, A.PRICE PRICE FROM SALES A INNER JOIN PRODUCT B ON A.PRODUCT_ID = B.PRODUCT_ID;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4071432,
                "title": "1068-product-sales-analysis-solution-explanation",
                "content": "````\\n# Code\\nSELECT P.product_name ,S.year, S.price \\nFROM Sales S LEFT JOIN Product P\\nON S.product_id =P.product_id \\n\\n# Intuition\\n\\n\\n# Steps\\nSELECT P.product_name, S.year, S.price:\\n- specifies the columns you want to retrieve in the result set. It \\nincludes \"product_name\" from the \"Product\" table, and \"year\" and \\n\"price\" from the \"Sales\" table.\\n\\nFROM Sales S: \\n- This part of the query specifies the main table you are retrieving \\ndata from, which is the \"Sales\" table, and gives it an alias \"S\" for \\nconvenience.\\n\\nLEFT JOIN Product P:\\n- This is a JOIN clause that combines data from the \"Sales\" table (S)\\nwith the \"Product\" table (P). It performs a LEFT JOIN, which means all \\nrows from the left table (\"Sales\") will be included\\n\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "````\\n# Code\\nSELECT P.product_name ,S.year, S.price \\nFROM Sales S LEFT JOIN Product P\\nON S.product_id =P.product_id \\n\\n# Intuition\\n\\n\\n# Steps\\nSELECT P.product_name, S.year, S.price:\\n- specifies the columns you want to retrieve in the result set. It \\nincludes \"product_name\" from the \"Product\" table, and \"year\" and \\n\"price\" from the \"Sales\" table.\\n\\nFROM Sales S: \\n- This part of the query specifies the main table you are retrieving \\ndata from, which is the \"Sales\" table, and gives it an alias \"S\" for \\nconvenience.\\n\\nLEFT JOIN Product P:\\n- This is a JOIN clause that combines data from the \"Sales\" table (S)\\nwith the \"Product\" table (P). It performs a LEFT JOIN, which means all \\nrows from the left table (\"Sales\") will be included\\n\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4068033,
                "title": "sql-simple",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect product.product_name, sales.year, sales.price from product left outer join sales on product.product_id = sales.product_id where year is not null order by product.product_name;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect product.product_name, sales.year, sales.price from product left outer join sales on product.product_id = sales.product_id where year is not null order by product.product_name;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4067058,
                "title": "solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n1916ms\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n0.00MB\\n# Code\\n```\\nselect p.product_name,s.year,s.price from sales s,product p\\nwhere s.product_id=p.product_id\\norder by sale_id desc;\\n\\n```",
                "solutionTags": [
                    "Oracle"
                ],
                "code": "```\\nselect p.product_name,s.year,s.price from sales s,product p\\nwhere s.product_id=p.product_id\\norder by sale_id desc;\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4066817,
                "title": "simple-code-using-inner-join",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect product.product_name,year,price\\nfrom Sales\\ninner join product\\non Sales.product_id = product.product_id\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect product.product_name,year,price\\nfrom Sales\\ninner join product\\non Sales.product_id = product.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4064630,
                "title": "96",
                "content": "# Intuition\\nDamn Distinct\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price \\n    from Sales s\\n    Inner Join Product p ON s.product_id = p.product_id;    \\n```\\n\\n```\\nSELECT DISTINCT\\n    p.product_name, s.year, s.price \\nFROM\\n    (SELECT DISTINCT product_id, year, price FROM Sales) s\\nINNER JOIN\\n    Product p\\nUSING\\n    (product_id);\\n```\\n\\n\\nCredits: https://leetcode.com/problems/product-sales-analysis-i/solutions/413456/mysql-99-42/",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price \\n    from Sales s\\n    Inner Join Product p ON s.product_id = p.product_id;    \\n```\n```\\nSELECT DISTINCT\\n    p.product_name, s.year, s.price \\nFROM\\n    (SELECT DISTINCT product_id, year, price FROM Sales) s\\nINNER JOIN\\n    Product p\\nUSING\\n    (product_id);\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4064247,
                "title": "using-inner-join-simple-mysql-solution",
                "content": "\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\nUse INNER JOIN and take out all the common records between two tables.Check the table\\'s example records given in problem to understand it better.\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT p.product_name, s.year, s.price\\nFROM Sales as s\\nINNER JOIN Product as p\\nON s.product_id = p.product_id;\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT p.product_name, s.year, s.price\\nFROM Sales as s\\nINNER JOIN Product as p\\nON s.product_id = p.product_id;\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4062792,
                "title": "simple-solution-left-join",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect product_name, year, price from Sales s, Product p\\nwhere s.product_id = p.product_id\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect product_name, year, price from Sales s, Product p\\nwhere s.product_id = p.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4062190,
                "title": "beats-100-00-of-users-with-mysql-very-simple-logic",
                "content": "\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT product_name,year,price FROM Sales AS A\\nLEFT JOIN Product AS B\\nON (B.product_id = A.product_id)\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT product_name,year,price FROM Sales AS A\\nLEFT JOIN Product AS B\\nON (B.product_id = A.product_id)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4062096,
                "title": "join",
                "content": "\\n\\nselect p.product_name, s.year,s.price from Sales s join Product p on s.product_id=p.product_id\\n\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "\\n\\nselect p.product_name, s.year,s.price from Sales s join Product p on s.product_id=p.product_id\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4060385,
                "title": "product-sales-analysis-i-solution-in-sql",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nLEFT JOIN\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT PRODUCT_NAME, YEAR, PRICE\\nFROM SALES\\nLEFT JOIN PRODUCT\\nON SALES.PRODUCT_ID = PRODUCT.PRODUCT_ID\\n```\\n![upvote new.jpg](https://assets.leetcode.com/users/images/02fe9262-956e-4580-9eb8-3ba87ffc7040_1695046059.2762558.jpeg)\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT PRODUCT_NAME, YEAR, PRICE\\nFROM SALES\\nLEFT JOIN PRODUCT\\nON SALES.PRODUCT_ID = PRODUCT.PRODUCT_ID\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4059951,
                "title": "mysql-series-using-join",
                "content": "\\n# Code\\n```\\nselect p.product_name ,s.year,s.price from Product p\\njoin Sales s\\non p.product_id=s.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect p.product_name ,s.year,s.price from Product p\\njoin Sales s\\non p.product_id=s.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4059862,
                "title": "beats-100-00-of-users-with-mysql",
                "content": "# Code\\n```\\nselect product_name ,year,price from Sales s join Product p on s.product_id=p.product_id\\n```\\n\\n![upvote.jpg](https://assets.leetcode.com/users/images/67f170eb-17d7-4da2-8a1e-9e519efe35af_1695037301.5053546.jpeg)\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect product_name ,year,price from Sales s join Product p on s.product_id=p.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4059756,
                "title": "easy-fast-solution",
                "content": "IF THIS IS HELPFUL TO YOU, PLEASE UPVOTE!\\n\\n# Code\\n```\\n/* Write your PL/SQL query statement below */\\nSELECT P.PRODUCT_NAME, S.YEAR, S.PRICE\\nFROM SALES S JOIN PRODUCT P\\nON S.PRODUCT_ID=P.PRODUCT_ID\\n```",
                "solutionTags": [
                    "Oracle",
                    "Database"
                ],
                "code": "```\\n/* Write your PL/SQL query statement below */\\nSELECT P.PRODUCT_NAME, S.YEAR, S.PRICE\\nFROM SALES S JOIN PRODUCT P\\nON S.PRODUCT_ID=P.PRODUCT_ID\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4058695,
                "title": "very-simple-mysql",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price from sales s left join product p on s.product_id = p.product_id\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price from sales s left join product p on s.product_id = p.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4057026,
                "title": "right-join",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT Product.product_name, Sales.year, Sales.price From Product RIGHT JOIN SALES USING(product_id )\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT Product.product_name, Sales.year, Sales.price From Product RIGHT JOIN SALES USING(product_id )\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4056823,
                "title": "1068-product-sales-analysis-i-inner-join",
                "content": "\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect p.product_name,s.year ,s.price \\nfrom Product p \\nInner Join \\nSales s \\non p.product_id=s.product_id; \\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect p.product_name,s.year ,s.price \\nfrom Product p \\nInner Join \\nSales s \\non p.product_id=s.product_id; \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4056520,
                "title": "mysql-solution-using-inner-join",
                "content": "\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price \\nfrom Sales as s \\njoin Product as p \\non s.product_id = p.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price \\nfrom Sales as s \\njoin Product as p \\non s.product_id = p.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4054849,
                "title": "simple-clean-code",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT p.product_name,s.year,s.price \\nfrom Sales s join Product p \\non s.product_id = p.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT p.product_name,s.year,s.price \\nfrom Sales s join Product p \\non s.product_id = p.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4054737,
                "title": "pandas-straightforward-apporach",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nimport pandas as pd\\n\\ndef sales_analysis(sales: pd.DataFrame, product: pd.DataFrame) -> pd.DataFrame:\\n    res = sales.merge(product, on=\\'product_id\\')\\n    res = res[[\\'product_name\\', \\'year\\', \\'price\\']]\\n    return res\\n\\n\\n    \\n```",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```\\nimport pandas as pd\\n\\ndef sales_analysis(sales: pd.DataFrame, product: pd.DataFrame) -> pd.DataFrame:\\n    res = sales.merge(product, on=\\'product_id\\')\\n    res = res[[\\'product_name\\', \\'year\\', \\'price\\']]\\n    return res\\n\\n\\n    \\n```",
                "codeTag": "Python3"
            },
            {
                "id": 4054556,
                "title": "mysql-left-join-easy-sol",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSelect s.product_name as product_name , f.year as year ,f.price as price\\nfrom Sales f\\nleft join Product s on \\nf.product_id = s.product_id;\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSelect s.product_name as product_name , f.year as year ,f.price as price\\nfrom Sales f\\nleft join Product s on \\nf.product_id = s.product_id;\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4053946,
                "title": "inner-join-problem",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThe thought is since we need to fetch data from two table we need to use joins.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nAnalyse and found out it is simple classic inner join problem.\\n\\n#\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\n\\nselect p.product_name, s.year, s.price from sales s join product p using(product_id);\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\n\\nselect p.product_name, s.year, s.price from sales s join product p using(product_id);\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4053497,
                "title": "easy-join-query",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect product_name ,year,price from Sales join Product where\\nSales.product_id=Product.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect product_name ,year,price from Sales join Product where\\nSales.product_id=Product.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4053130,
                "title": "product-sales-analysis",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- use inner join as we need to select only the product which have been sold -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price from Product p join Sales s on p.product_id = s.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price from Product p join Sales s on p.product_id = s.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4051567,
                "title": "inner-join",
                "content": "![SASn.gif](https://assets.leetcode.com/users/images/f5f421a5-3b28-4121-9bc5-71a6fbc00051_1694867947.7438416.gif)\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\n#\\u0627\\u06CC\\u0646\\u0631 \\u062C\\u0648\\u06CC\\u0646 \\u0686\\u06CC\\u0632 \\u06A9\\u0647 \\u062F\\u0631 \\u0647\\u0631 \\u062F\\u0648 \\u06AF\\u0631\\u0648\\u0647 \\u0647\\u0633\\u062A \\u0631\\u0627 \\u0628\\u0631 \\u0645\\u06CC \\u06AF\\u0631\\u062F\\u0627\\u0646\\u062F\\nSELECT p.product_name,s.year,s.price\\nFROM Sales s\\nINNER JOIN Product p\\nON p.product_id =s.product_id \\nGROUP BY(s.sale_id )\\n```\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\n#\\u0627\\u06CC\\u0646\\u0631 \\u062C\\u0648\\u06CC\\u0646 \\u0686\\u06CC\\u0632 \\u06A9\\u0647 \\u062F\\u0631 \\u0647\\u0631 \\u062F\\u0648 \\u06AF\\u0631\\u0648\\u0647 \\u0647\\u0633\\u062A \\u0631\\u0627 \\u0628\\u0631 \\u0645\\u06CC \\u06AF\\u0631\\u062F\\u0627\\u0646\\u062F\\nSELECT p.product_name,s.year,s.price\\nFROM Sales s\\nINNER JOIN Product p\\nON p.product_id =s.product_id \\nGROUP BY(s.sale_id )\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4050995,
                "title": "my-sql-easy-solution-for-beginners-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect p.product_name,s.year,s.price from sales s inner join product p on p.product_id=s.product_id order by p.product_id; \\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect p.product_name,s.year,s.price from sales s inner join product p on p.product_id=s.product_id order by p.product_id; \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4049678,
                "title": "solving-with-inner-join",
                "content": "# Intuition\\nMy first thought is to use the Inner Join approach in solving this problem since Inner join selects all of the rows from both of the tables as long as there is a matching values between the columns.\\n\\n# Approach\\nUsing inner join to match the product_id on Product and Sales table to produce the required result.\\n\\n# Code\\n```\\nSelect p.product_name, s.year, s.price\\nFrom Product as p\\nInner Join Sales as s On p.product_id = s.product_id\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSelect p.product_name, s.year, s.price\\nFrom Product as p\\nInner Join Sales as s On p.product_id = s.product_id\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4049411,
                "title": "simply-solution-with-using-clause",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT p.product_name, s.year, s.price\\nFROM Sales s\\nJOIN Product p\\n    USING(product_id)\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT p.product_name, s.year, s.price\\nFROM Sales s\\nJOIN Product p\\n    USING(product_id)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4048191,
                "title": "solution-using-inner-join",
                "content": "select e2.product_name,e1.year,e1.price from sales e1 inner join product e2 on e1.product_id=e2.product_id group by e1.sale_id;",
                "solutionTags": [],
                "code": "select e2.product_name,e1.year,e1.price from sales e1 inner join product e2 on e1.product_id=e2.product_id group by e1.sale_id;",
                "codeTag": "Unknown"
            },
            {
                "id": 4047758,
                "title": "sql-query-using-joins",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect p.product_name,s.year,s.price\\nfrom Sales s\\nleft join Product p\\non s.product_id=p.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect p.product_name,s.year,s.price\\nfrom Sales s\\nleft join Product p\\non s.product_id=p.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4046818,
                "title": "simplest-solution-mysql-natural-join",
                "content": "# Approach\\nNatural join is used to find the common element/condition between tables and generate result on that same condition. In question, they  have asked us to retrieve product_name, year and price from sales table. Here, product_id is working as foreign key that is connecting both tables. \\n\\nSo, if we use natural join then it will automatically detect that product_id is connecting these two tables and will retrieve data where  from both table where product_id is similar.\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT PRODUCT_NAME, YEAR, PRICE FROM SALES NATURAL JOIN PRODUCT;\\n```\\n\\n\\n\\n# #Second_Approach\\nSecond way to solve this question is by using equi join query but that is a bit long to use.\\n\\n```\\n# Write your MySQL query statement below\\nSELECT p.product_name,s.year,s.price \\nFROM Sales AS s\\n LEFT JOIN \\n Product AS p\\n  ON p.product_id=s.product_id;\\n```\\nYou can use natural to get answer faster and easy way.\\n\\nIf you like the answer then please let me know by upvoting this answer and if you have any question then feel free to comment on this solution. I will try to reply asap.\\n\\nThank You!!!\\n\\n\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT PRODUCT_NAME, YEAR, PRICE FROM SALES NATURAL JOIN PRODUCT;\\n```\n```\\n# Write your MySQL query statement below\\nSELECT p.product_name,s.year,s.price \\nFROM Sales AS s\\n LEFT JOIN \\n Product AS p\\n  ON p.product_id=s.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4045093,
                "title": "easy-mysql-approach",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect product_name,year,price from sales join product on sales.product_id=product.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect product_name,year,price from sales join product on sales.product_id=product.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4043872,
                "title": "left-join",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect p.product_name,s.year,s.price from sales s left join product p on\\ns.product_id = p.product_id\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect p.product_name,s.year,s.price from sales s left join product p on\\ns.product_id = p.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4043778,
                "title": "product-sales-analysis",
                "content": "\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect  p.product_name, s.year, s.price\\nfrom Sales s\\njoin Product p\\non s.product_id = p.product_id\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect  p.product_name, s.year, s.price\\nfrom Sales s\\njoin Product p\\non s.product_id = p.product_id\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4043772,
                "title": "product-sales-analysis",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect  p.product_name, s.year, s.price\\nfrom Sales s\\njoin Product p\\non s.product_id = p.product_id\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect  p.product_name, s.year, s.price\\nfrom Sales s\\njoin Product p\\non s.product_id = p.product_id\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4043081,
                "title": "tle-with-solution-ms-sql-server",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nWe have to find out common between two tables so inner join\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nUser [] for year as year is reserve keyword in SQL Server\\nif you do not use [] it would give TLE\\n\\n\\n\\n# Code\\n```\\n/* Write your T-SQL query statement below */\\nselect p.product_name , s.[year] , price from Sales as s inner join Product as p on s.product_id = p.product_id\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\n/* Write your T-SQL query statement below */\\nselect p.product_name , s.[year] , price from Sales as s inner join Product as p on s.product_id = p.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4042805,
                "title": "left-join-simple-sql",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect p.product_name , s.year,s.price from Sales as s left join Product as p on s.product_id  = p.product_id \\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect p.product_name , s.year,s.price from Sales as s left join Product as p on s.product_id  = p.product_id \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4042630,
                "title": "mysql-solution-inner-join-left-join-easy-to-understand",
                "content": "# MySQL Code\\n\\n```Using_LEFT_JOIN []\\n# Write your MySQL query statement below\\nSELECT \\n    Product.product_name, \\n    Sales.year, \\n    Sales.price \\nFROM \\n    Sales LEFT JOIN Product ON Product.product_id = Sales.product_id\\nORDER BY \\n    Sales.year ASC;\\n```\\n```Using_INNER_JOIN []\\n# Write your MySQL query statement below\\nSELECT \\n    Product.product_name, \\n    Sales.year, \\n    Sales.price \\nFROM \\n    Sales \\n    INNER JOIN Product \\nWHERE \\n    Product.product_id = Sales.product_id \\nORDER BY \\n    Sales.year ASC;\\n```\\n\\n##### Please Upvotes if it helps! Thank you \\uD83C\\uDF5E\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```Using_LEFT_JOIN []\\n# Write your MySQL query statement below\\nSELECT \\n    Product.product_name, \\n    Sales.year, \\n    Sales.price \\nFROM \\n    Sales LEFT JOIN Product ON Product.product_id = Sales.product_id\\nORDER BY \\n    Sales.year ASC;\\n```\n```Using_INNER_JOIN []\\n# Write your MySQL query statement below\\nSELECT \\n    Product.product_name, \\n    Sales.year, \\n    Sales.price \\nFROM \\n    Sales \\n    INNER JOIN Product \\nWHERE \\n    Product.product_id = Sales.product_id \\nORDER BY \\n    Sales.year ASC;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4041717,
                "title": "mysql-inner-join",
                "content": "# Intuition\\nUse an inner join\\n\\n# Approach\\nSelect the required columns from `Sales` table joining `Product` using `product_id` as common key\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT Product.product_name,Sales.year,Sales.price FROM Sales JOIN Product ON Sales.product_id=Product.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT Product.product_name,Sales.year,Sales.price FROM Sales JOIN Product ON Sales.product_id=Product.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4041125,
                "title": "simple-inner-join-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect product_name,year,price\\nfrom Sales as s\\ninner join product as p\\non s.product_id = p.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect product_name,year,price\\nfrom Sales as s\\ninner join product as p\\non s.product_id = p.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4040768,
                "title": "easy-sql-solution-with-explanation",
                "content": "# Intuition\\n- We need to retrieve information about sales, including the product name, year, and price.\\n- Since the product information is stored in a separate Product table, we\\'ll need to combine data from both tables using product_id as the common key.\\n- SQL JOIN is a suitable approach to achieve this.\\n\\n# Approach\\n- We\\'ll use a SQL query with a JOIN operation between the Sales and Product tables.\\n- Specifically, we\\'ll SELECT the product_name from the Product table and the year and price from the Sales table, using aliases for table names to simplify the query.\\n- We\\'ll join these tables on the product_id, ensuring that each sale is associated with the correct product.\\n- The resulting table will contain the desired information: product_name, year, and price for each sale.\\n\\n# Complexity\\n- Time complexity:\\nThe time complexity of this SQL query depends on the size of the tables being joined. In general, it has a complexity of O(m * n), where m and n are the numbers of rows in the Sales and Product tables, respectively.\\n\\n- Space complexity:\\nThe space complexity is primarily determined by the size of the result set, which is proportional to the number of rows in the Sales table that match the JOIN condition. In SQL, JOINs do not create additional copies of the tables, so the space complexity is O(1) in terms of additional memory usage.\\n\\n# Code\\n```\\nselect p.product_name, s.year, s.price from Sales as s\\njoin Product as p\\non s.product_id = p.product_id;\\n\\n\\n/*SELECT p.product_name, s.year, s.price: This part of the query specifies that we want to select three columns: product_name from the Product table, and year and price from the Sales table.\\n\\nFROM Sales as s: Here, we are defining an alias \\'s\\' for the Sales table to simplify the query.\\n\\nJOIN Product as p ON s.product_id = p.product_id: This is where the magic happens. We are using a SQL JOIN to combine data from both tables based on the product_id. It means we are matching each sale in the Sales table with the corresponding product in the Product table. When product_id in both tables matches, it means we have found the product associated with a particular sale.*/\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect p.product_name, s.year, s.price from Sales as s\\njoin Product as p\\non s.product_id = p.product_id;\\n\\n\\n/*SELECT p.product_name, s.year, s.price: This part of the query specifies that we want to select three columns: product_name from the Product table, and year and price from the Sales table.\\n\\nFROM Sales as s: Here, we are defining an alias \\'s\\' for the Sales table to simplify the query.\\n\\nJOIN Product as p ON s.product_id = p.product_id: This is where the magic happens. We are using a SQL JOIN to combine data from both tables based on the product_id. It means we are matching each sale in the Sales table with the corresponding product in the Product table. When product_id in both tables matches, it means we have found the product associated with a particular sale.*/\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4039595,
                "title": "using-sql-joins-left-join",
                "content": "# Intuition\\nSolving using JOIN clause of SQL\\n\\n\\n# Approach\\nUse left join and find the common row between 2 tables!\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nSELECT product.product_name,sales.year,sales.price\\n FROM sales \\n LEFT JOIN PRODUCT ON product.product_id = sales.product_id; \\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT product.product_name,sales.year,sales.price\\n FROM sales \\n LEFT JOIN PRODUCT ON product.product_id = sales.product_id; \\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4038971,
                "title": "product-sales-analysis-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nList the key fields.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nMatch the key fields.\\nUse ORDER BY keyword.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/* Write your PL/SQL query statement below */\\nSELECT P.product_name, S.year, S.price\\nFROM Sales S\\nLEFT JOIN Product P\\nON S.product_id = P.product_id\\nORDER BY 1,2,3;\\n```",
                "solutionTags": [
                    "Oracle"
                ],
                "code": "```\\n/* Write your PL/SQL query statement below */\\nSELECT P.product_name, S.year, S.price\\nFROM Sales S\\nLEFT JOIN Product P\\nON S.product_id = P.product_id\\nORDER BY 1,2,3;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4038760,
                "title": "pandas-left-merge",
                "content": "\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nMerge both dataframe on \\'product_id\\'. \\n\\n# Code\\n```\\nimport pandas as pd\\n\\ndef sales_analysis(sales: pd.DataFrame, product: pd.DataFrame) -> pd.DataFrame:\\n    return sales.merge(product, on=\\'product_id\\', how=\\'left\\')[[\\'product_name\\',\\'year\\', \\'price\\']]\\n```",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```\\nimport pandas as pd\\n\\ndef sales_analysis(sales: pd.DataFrame, product: pd.DataFrame) -> pd.DataFrame:\\n    return sales.merge(product, on=\\'product_id\\', how=\\'left\\')[[\\'product_name\\',\\'year\\', \\'price\\']]\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 4037641,
                "title": "use-distinct-and-match-product-id-from-both-tables",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT product_name, year, price\\nFROM Product, Sales \\nWHERE sale_id in (SELECT DISTINCT sale_id from Sales)\\nAND Sales.product_id = Product.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT product_name, year, price\\nFROM Product, Sales \\nWHERE sale_id in (SELECT DISTINCT sale_id from Sales)\\nAND Sales.product_id = Product.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4035095,
                "title": "simple-solution-using-inner-join",
                "content": "\\n\\n# Code\\n```\\nselect p.product_name, s.year, s.price \\nfrom product p inner join sales s using(product_id);\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect p.product_name, s.year, s.price \\nfrom product p inner join sales s using(product_id);\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4032395,
                "title": "easy-mysql-solution",
                "content": "\\n# Code\\n```\\n\\nselect Product.product_name,Sales.year,Sales.price from Sales inner join Product on Product.product_id = Sales.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n\\nselect Product.product_name,Sales.year,Sales.price from Sales inner join Product on Product.product_id = Sales.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4027923,
                "title": "easy-peasy",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nSELECT product_name, year, price \\nFROM Sales AS S\\nCROSS JOIN Product AS P\\nON S.product_id = P.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT product_name, year, price \\nFROM Sales AS S\\nCROSS JOIN Product AS P\\nON S.product_id = P.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4026974,
                "title": "straightforward-left-join-using-merge",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\nSelf-explanatory.\\n\\n# Code\\n```\\nimport pandas as pd\\n\\ndef sales_analysis(sales: pd.DataFrame, product: pd.DataFrame) -> pd.DataFrame:\\n    df = sales.merge(product, on = \"product_id\", how = \"left\")[[\"product_name\", \"year\", \"price\"]]\\n    return df\\n    \\n```",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```\\nimport pandas as pd\\n\\ndef sales_analysis(sales: pd.DataFrame, product: pd.DataFrame) -> pd.DataFrame:\\n    df = sales.merge(product, on = \"product_id\", how = \"left\")[[\"product_name\", \"year\", \"price\"]]\\n    return df\\n    \\n```",
                "codeTag": "Python3"
            },
            {
                "id": 4026690,
                "title": "product-sales-analysis",
                "content": "\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT Product.Product_name,Sales.year,Sales.price\\nFROM Sales,product\\nwhere sales.product_id=product.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT Product.Product_name,Sales.year,Sales.price\\nFROM Sales,product\\nwhere sales.product_id=product.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4026672,
                "title": "just-natural-join",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect product_name,year,price from Sales natural join Product order by sale_id;\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect product_name,year,price from Sales natural join Product order by sale_id;\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4025511,
                "title": "simple",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect product_name,year,price from sales,product where sales.product_id=product.product_id\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect product_name,year,price from sales,product where sales.product_id=product.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4025365,
                "title": "basic-sql-joins",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nOnce you understand JOINS, these questions are very easy.\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT product_name, year, price FROM Sales\\nLEFT JOIN Product \\nON Sales.product_id = Product.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT product_name, year, price FROM Sales\\nLEFT JOIN Product \\nON Sales.product_id = Product.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4025155,
                "title": "easy",
                "content": "# Intuition\\nlook for related key from the two table\\n# Approach\\nUsed inner join\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect a.product_name, b.year, b.price\\nfrom product a\\njoin sales b on a.product_id=b.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect a.product_name, b.year, b.price\\nfrom product a\\njoin sales b on a.product_id=b.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4023252,
                "title": "1068-product-sales-analysis-i-mysql-runtime-2056ms",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT\\n    Product.product_name AS product_name,\\n    Sales.year AS year,\\n    Sales.price AS price\\nFROM\\n    Sales\\nINNER JOIN\\n    Product ON Product.product_id = Sales.product_id;\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT\\n    Product.product_name AS product_name,\\n    Sales.year AS year,\\n    Sales.price AS price\\nFROM\\n    Sales\\nINNER JOIN\\n    Product ON Product.product_id = Sales.product_id;\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4023251,
                "title": "1068-product-sales-analysis-i-mysql-runtime-2056ms",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT\\n    Product.product_name AS product_name,\\n    Sales.year AS year,\\n    Sales.price AS price\\nFROM\\n    Sales\\nINNER JOIN\\n    Product ON Product.product_id = Sales.product_id;\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT\\n    Product.product_name AS product_name,\\n    Sales.year AS year,\\n    Sales.price AS price\\nFROM\\n    Sales\\nINNER JOIN\\n    Product ON Product.product_id = Sales.product_id;\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4021522,
                "title": "sql-1068-2-sql-basic-solutions-using-join-without-join-ak",
                "content": "\\n# Code\\n- **BEST RUNTIME**\\n```\\nSELECT product_name, year, price FROM Sales\\nLEFT JOIN Product ON Sales.product_id=Product.product_id;\\n```\\n\\n---\\n\\n\\n- **GREATER RUNTIME APPROACH:**\\n```\\nselect product.product_name,sales.year,sales.price \\nfrom sales,product \\nwhere sales.product_id=product.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT product_name, year, price FROM Sales\\nLEFT JOIN Product ON Sales.product_id=Product.product_id;\\n```\n```\\nselect product.product_name,sales.year,sales.price \\nfrom sales,product \\nwhere sales.product_id=product.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4021459,
                "title": "without-join-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect p.product_name, s.year,s.price from Sales as s, Product as p where s.product_id = p.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect p.product_name, s.year,s.price from Sales as s, Product as p where s.product_id = p.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4020269,
                "title": "pandas-one-line-solution",
                "content": "```\\nimport pandas as pd\\n\\ndef sales_analysis(sales: pd.DataFrame, product: pd.DataFrame) -> pd.DataFrame:\\n    return pd.merge(left=sales, right=product, on=\"product_id\", how=\"left\")[[\"product_name\", \"year\", \"price\"]]\\n```",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```\\nimport pandas as pd\\n\\ndef sales_analysis(sales: pd.DataFrame, product: pd.DataFrame) -> pd.DataFrame:\\n    return pd.merge(left=sales, right=product, on=\"product_id\", how=\"left\")[[\"product_name\", \"year\", \"price\"]]\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 4019678,
                "title": "easy-solution",
                "content": "\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSelect product_name, year , price from Sales As s Inner Join Product As p on s.product_id= p.product_id\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSelect product_name, year , price from Sales As s Inner Join Product As p on s.product_id= p.product_id\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4018415,
                "title": "my-sql-approach-to-problem",
                "content": "# Intuition\\nThis is a beginner level problem.\\n# Approach\\nWrite a basice where query using where clause. Learning point of this problem is to order the tables correctly in where clause to time optimize solution.\\n# Complexity\\n- Time complexity:\\n2203 ms\\n- Space complexity:\\n0.00 MB \\n# Code\\n```\\n# Write your MySQL query statement below\\nselect p.product_name , s.year , s.price from Sales s ,  Product p where s.product_id = p.product_id ;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect p.product_name , s.year , s.price from Sales s ,  Product p where s.product_id = p.product_id ;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4017621,
                "title": "konka-vamsi",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect p.product_name , s.year ,s.price\\nfrom sales as s\\nleft join product as p\\non s.product_id = p.product_id\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect p.product_name , s.year ,s.price\\nfrom sales as s\\nleft join product as p\\non s.product_id = p.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4017619,
                "title": "konka-vamsi",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect p.product_name , s.year ,s.price\\nfrom sales as s\\nleft join product as p\\non s.product_id = p.product_id\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect p.product_name , s.year ,s.price\\nfrom sales as s\\nleft join product as p\\non s.product_id = p.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4015766,
                "title": "simple-solution-using-left-join",
                "content": "\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect  product_name,year,price from Sales\\nleft join Product\\non Sales.product_id=Product.product_id\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect  product_name,year,price from Sales\\nleft join Product\\non Sales.product_id=Product.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4013971,
                "title": "this-was-easy-for-me",
                "content": "# Intuition\\nThe first thing that clicked was the fact that we needed to fetch more than 1 column. Somehow this meant that I would not be needing left join and my output will come from simple join\\n\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\n#list all columns,left join\\n# join table 1 with 2\\n\\n\\nselect b.product_name,a.year,a.price from Sales a,Product b where a.product_id =b.product_id;\\n```\\n# Approach\\nI wante to fetch distinct names of product using distinct but It still fetched me Nokia twice. Now I understand that is because foreign  key is not repetitive.\\n\\nselect DISTINCT(b.product_name),a.year,a.price from Sales a,Product b where a.product_id =b.product_id;",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\n#list all columns,left join\\n# join table 1 with 2\\n\\n\\nselect b.product_name,a.year,a.price from Sales a,Product b where a.product_id =b.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4013113,
                "title": "mysql-detailed-explaination-easy-to-understand",
                "content": "## Intuition\\nTo report the product name, year, and price for each sale ID in the Sales table, we need to join the Sales table with the Product table using the \"product_id\" as the common column. This will allow us to retrieve the necessary information.\\n\\n## Approach\\n```sql\\nselect p.product_name, s.year, s.price \\nfrom Sales as s \\njoin Product as p \\non p.product_id = s.product_id\\norder by s.price desc;\\n```\\n\\n## Code Explanation\\n1. We perform an inner join between the \"Sales\" table (aliased as `s`) and the \"Product\" table (aliased as `p`) using the common column \"product_id.\" This combines sales data with product names.\\n\\n2. We select the \"product_name,\" \"year,\" and \"price\" columns from the joined tables.\\n\\n3. The `ORDER BY` clause arranges the results in descending order of \"price,\" as specified in the problem statement.\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```sql\\nselect p.product_name, s.year, s.price \\nfrom Sales as s \\njoin Product as p \\non p.product_id = s.product_id\\norder by s.price desc;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4012698,
                "title": "sql-easy-solution",
                "content": "\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT Product.product_name,Sales.year,Sales.price FROM Sales INNER JOIN Product ON Sales.product_id=Product.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT Product.product_name,Sales.year,Sales.price FROM Sales INNER JOIN Product ON Sales.product_id=Product.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4012606,
                "title": "using-left-join",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\n\\nSELECT p.product_name,s.year,s.price FROM Sales as s left join Product as p on p.product_id=s.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\n\\nSELECT p.product_name,s.year,s.price FROM Sales as s left join Product as p on p.product_id=s.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4011248,
                "title": "beats-94-easy-solution",
                "content": "\\n# Code\\n```\\n# Write your MySQL query statement below\\nSelect p.product_name, s.year, s.price from Sales as s \\nleft join Product as p\\non s.product_id=p.product_id\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSelect p.product_name, s.year, s.price from Sales as s \\nleft join Product as p\\non s.product_id=p.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4010697,
                "title": "basic-merge-in-one-line",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThe intuition is to merge the `product` and `sales` dataframes on the `\"product_id\"` column. Then, select the `\"product_name\"`, `\"year\"`, and `\"price\"` columns from the merged dataframe.\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nI decided to use the `pd.merge()` function to merge the `product` and `sales` dataframes on the `\"product_id\"` column. This will create a new dataframe with the matched rows from both dataframes. Then, I select the desired columns from the merged dataframe.\\n# Complexity\\n- Time complexity: \\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n$$O(n*log(n))$$, where $$n$$ is the total number of rows in the merged dataframe. \\nThe subsequent column selection operation has a time complexity of $$O(1)$$ since we are specifying the column names directly.\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n$$O(n)$$, where $$n$$ is the number of rows in the merged dataframe. \\n# Runtime & Memory\\n![Screenshot 2023-09-06 at 21.05.34.png](https://assets.leetcode.com/users/images/e808643d-2406-45a0-8163-a48702da436b_1694017778.8375723.png)\\n\\n# Code\\n```\\nimport pandas as pd\\n\\n\\ndef sales_analysis(sales: pd.DataFrame, product: pd.DataFrame) -> pd.DataFrame:\\n    return pd.merge(product, sales[[\"product_id\", \"year\", \"price\"]], on=\"product_id\")[\\n        [\"product_name\", \"year\", \"price\"]\\n    ]\\n\\n```",
                "solutionTags": [
                    "Python3",
                    "Pandas"
                ],
                "code": "```\\nimport pandas as pd\\n\\n\\ndef sales_analysis(sales: pd.DataFrame, product: pd.DataFrame) -> pd.DataFrame:\\n    return pd.merge(product, sales[[\"product_id\", \"year\", \"price\"]], on=\"product_id\")[\\n        [\"product_name\", \"year\", \"price\"]\\n    ]\\n\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 4009938,
                "title": "mysql-easy-solution",
                "content": "select product_name,year,price FROM SALES\\nLEFT JOIN Product\\nON Sales.product_id=Product.product_id;",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "select product_name,year,price FROM SALES\\nLEFT JOIN Product\\nON Sales.product_id=Product.product_id;",
                "codeTag": "Unknown"
            },
            {
                "id": 4009415,
                "title": "solution-with-using-clause",
                "content": "SELECT \\n  p.product_name,\\n  s.year,\\n  s.price\\nFROM Sales s\\nLEFT JOIN Product p\\n  USING(product_id)\\n```\\n\\nBecause product table and sales table have same coulmn name(product_id), therefore, I used \"USING\" clause to replace \"ON\"",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "SELECT \\n  p.product_name,\\n  s.year,\\n  s.price\\nFROM Sales s\\nLEFT JOIN Product p\\n  USING(product_id)\\n```\\n\\nBecause product table and sales table have same coulmn name(product_id), therefore, I used \"USING\" clause to replace \"ON\"",
                "codeTag": "Unknown"
            },
            {
                "id": 4006951,
                "title": "oracle-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/* Write your PL/SQL query statement below */\\nselect a.product_name, b.year, b.price\\nfrom Product a, Sales b\\nwhere a.product_id = b.product_id\\n```",
                "solutionTags": [
                    "Oracle"
                ],
                "code": "```\\n/* Write your PL/SQL query statement below */\\nselect a.product_name, b.year, b.price\\nfrom Product a, Sales b\\nwhere a.product_id = b.product_id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4006374,
                "title": "simple-solution",
                "content": "\\n# Code\\n```\\n# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price\\nfrom Sales s\\nleft join Product p on p.product_id=s.product_id\\n\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price\\nfrom Sales s\\nleft join Product p on p.product_id=s.product_id\\n\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4005743,
                "title": "simple-sql-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT Product.product_name,Sales.year,Sales.price FROM Sales INNER JOIN Product ON Sales.product_id=Product.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT Product.product_name,Sales.year,Sales.price FROM Sales INNER JOIN Product ON Sales.product_id=Product.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4005682,
                "title": "mysql-code",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSelect product_name,year,price \\nfrom Product right join Sales \\non Product.product_id=Sales.product_id\\norder by product_name \\n\\n\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSelect product_name,year,price \\nfrom Product right join Sales \\non Product.product_id=Sales.product_id\\norder by product_name \\n\\n\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 4005325,
                "title": "simple-sql-solution",
                "content": "\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT\\n    p.product_name, s.year,s.price\\nFROM\\n    (SELECT DISTINCT \\n        product_id, year, price\\n    FROM \\n        Sales) AS s\\nINNER JOIN\\n    Product AS p\\nWHERE\\n    s.product_id = p.product_id;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT\\n    p.product_name, s.year,s.price\\nFROM\\n    (SELECT DISTINCT \\n        product_id, year, price\\n    FROM \\n        Sales) AS s\\nINNER JOIN\\n    Product AS p\\nWHERE\\n    s.product_id = p.product_id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4004705,
                "title": "join-problem-2",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSelect P.Product_Name, S.Year, S.Price\\nFrom Product as P\\nJoin Sales as S on P.Product_ID = S.Product_ID;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSelect P.Product_Name, S.Year, S.Price\\nFrom Product as P\\nJoin Sales as S on P.Product_ID = S.Product_ID;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4004477,
                "title": "sql-server",
                "content": "\\n\\n# Code\\n```\\n/* Write your T-SQL query statement below */\\nselect product_name, year, price from\\nSales S, Product P where P.product_id in (select S.product_id from Sales)\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\n/* Write your T-SQL query statement below */\\nselect product_name, year, price from\\nSales S, Product P where P.product_id in (select S.product_id from Sales)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4003961,
                "title": "very-easy-simple",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n![26e0d290-2307-44c7-9aac-3bb5fb65ad4d_1684683655.5701103.png](https://assets.leetcode.com/users/images/08a02f20-49a8-4e7d-a32f-967fe0c7952d_1693892458.7769594.png)\\n\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT P.PRODUCT_NAME , S.YEAR ,S.PRICE FROM SALES S ,PRODUCT P WHERE P.PRODUCT_ID = S.PRODUCT_ID\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT P.PRODUCT_NAME , S.YEAR ,S.PRICE FROM SALES S ,PRODUCT P WHERE P.PRODUCT_ID = S.PRODUCT_ID\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 4000172,
                "title": "easy-to-understand-mysql",
                "content": "\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT p.product_name ,s.year ,s.price from Sales as s left join Product as p on p.product_id = s.product_id ;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT p.product_name ,s.year ,s.price from Sales as s left join Product as p on p.product_id = s.product_id ;\\n```",
                "codeTag": "Unknown"
            }
        ],
        "discussions": [
            {
                "id": 1565553,
                "content": [
                    {
                        "username": "alishaanjum4992",
                        "content": "# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price\\nfrom product p\\njoin sales s\\non p.product_id = s.product_id"
                    },
                    {
                        "username": "buschl",
                        "content": "Can someone help me understand what\\'s wrong with this answer? All I get is a timeout error\\n\\n\\n\\'\\'\\'select p.product_name, \\n\\ts.year, \\n    s.price\\nFROM product p\\nJOIN sales s\\n\\tON p.product_id = s.product_id\\'\\'\\'"
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "tried several times and then it worked "
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "[@tianwezhao989](/tianwezhao989) the query looks correct. Maybe leetcode was being slow that day."
                    },
                    {
                        "username": "tianwezhao989",
                        "content": "should use sales join product"
                    },
                    {
                        "username": "nasirxia",
                        "content": "It is a safer way to use LEFT JOIN here instead of normal INNER JOIN\\nsince we do not know if all the product_id shown in Sales table exist in\\nthe Product table. LEFT JOIN lets the codes return all the obs in the Sales table"
                    },
                    {
                        "username": "JerryBlank",
                        "content": "[@IgorPykhtin](/IgorPykhtin) Yes! It\\'s foreign key, it has to be in Sales table."
                    },
                    {
                        "username": "Abhilash1111",
                        "content": "thanks man\\n"
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "Sales.product_id is a foreign key. Usually, it assumes the corresponding constraint on value existence in the referenced table."
                    },
                    {
                        "username": "vkrish2",
                        "content": "I get an error stating \"Took too long\" All tests have passed. Not sure what is the optimization I need to do. \\n\\nThanks\\n\\n\\n\\n\\'\\'\\'\\nselect a.Product_Name, b.year, b.price\\nfrom sales b\\njoin product a\\non a.product_id = b.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "JIackau",
                        "content": "How to overcome \"Time Limit Exceeded\", can\\'t submit my answer even if on Run everything works fine."
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "The obvious (and, probably, the only) solution with joining two tables on product_id (I don't post the solution here because of Discussion Rules, but it's already mentioned in other comments) causes Time Limit Exceeded for MS SQL Server. It looks like something is wrong with timeouts for test cases for this task.\nThe same solution for MySQL passes with no issues."
                    },
                    {
                        "username": "shrna09",
                        "content": "The below code got Accepted. \\n---Accepted Code---------\\n\\'\\'\\'\\nselect product_name, year, price\\nfrom Product, Sales\\nwhere Product.product_id=Sales.product_id;\\n\\'\\'\\' -------------\\nBefore trying the above approach, I had tried the below code for executing the same logic but got the status \\'Time Limit Exceeded\\'\\n\\'\\'\\'\\nselect p.product_name, s.year, s.price from Sales s\\njoin product p on p.product_id = s.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "Prince72",
                        "content": "[@saakshi12](/saakshi12) \\nselect p.product_name, s.year, s.price\\nfrom Sales s\\nleft join Product p on s.product_id = p.product_id;\\nthis is accepted .."
                    },
                    {
                        "username": "Satish_10",
                        "content": "I am also getting the same issue. can you tell the difference between both"
                    },
                    {
                        "username": "saakshi12",
                        "content": "same i am also getting the same issue.who did u solved it??\\n"
                    },
                    {
                        "username": "gentooInstaller",
                        "content": "I know I\\'m not a beginner, but even if I learnt DB yesterday, I wouldn\\'t pay for leetcode premium to do a simple join. I\\'m seriously disappointed with the quality of Database questions and the schemas that are used here. They\\'re very inferior compared to the schemas and questions posed in FAANG DE/DS interviews."
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "this one is easy level though. What do you think if the hard sql questions?"
                    },
                    {
                        "username": "a_ono",
                        "content": "I totally agree with you..."
                    },
                    {
                        "username": "mohitsinghchandel785",
                        "content": "left join may be more effective heree 😶\n\nselect product_name,year,price from Sales LEFT JOIN Product ON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "juhi90646",
                        "content": "inner join also works\\n"
                    },
                    {
                        "username": "mutnejaanchal3008",
                        "content": "SELECT P.PRODUCT_NAME , S.YEAR , S.PRICE FROM PRODUCT P JOIN SALES S ON \\nP.product_id  = S.product_id ;"
                    }
                ]
            },
            {
                "id": 1566593,
                "content": [
                    {
                        "username": "alishaanjum4992",
                        "content": "# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price\\nfrom product p\\njoin sales s\\non p.product_id = s.product_id"
                    },
                    {
                        "username": "buschl",
                        "content": "Can someone help me understand what\\'s wrong with this answer? All I get is a timeout error\\n\\n\\n\\'\\'\\'select p.product_name, \\n\\ts.year, \\n    s.price\\nFROM product p\\nJOIN sales s\\n\\tON p.product_id = s.product_id\\'\\'\\'"
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "tried several times and then it worked "
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "[@tianwezhao989](/tianwezhao989) the query looks correct. Maybe leetcode was being slow that day."
                    },
                    {
                        "username": "tianwezhao989",
                        "content": "should use sales join product"
                    },
                    {
                        "username": "nasirxia",
                        "content": "It is a safer way to use LEFT JOIN here instead of normal INNER JOIN\\nsince we do not know if all the product_id shown in Sales table exist in\\nthe Product table. LEFT JOIN lets the codes return all the obs in the Sales table"
                    },
                    {
                        "username": "JerryBlank",
                        "content": "[@IgorPykhtin](/IgorPykhtin) Yes! It\\'s foreign key, it has to be in Sales table."
                    },
                    {
                        "username": "Abhilash1111",
                        "content": "thanks man\\n"
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "Sales.product_id is a foreign key. Usually, it assumes the corresponding constraint on value existence in the referenced table."
                    },
                    {
                        "username": "vkrish2",
                        "content": "I get an error stating \"Took too long\" All tests have passed. Not sure what is the optimization I need to do. \\n\\nThanks\\n\\n\\n\\n\\'\\'\\'\\nselect a.Product_Name, b.year, b.price\\nfrom sales b\\njoin product a\\non a.product_id = b.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "JIackau",
                        "content": "How to overcome \"Time Limit Exceeded\", can\\'t submit my answer even if on Run everything works fine."
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "The obvious (and, probably, the only) solution with joining two tables on product_id (I don't post the solution here because of Discussion Rules, but it's already mentioned in other comments) causes Time Limit Exceeded for MS SQL Server. It looks like something is wrong with timeouts for test cases for this task.\nThe same solution for MySQL passes with no issues."
                    },
                    {
                        "username": "shrna09",
                        "content": "The below code got Accepted. \\n---Accepted Code---------\\n\\'\\'\\'\\nselect product_name, year, price\\nfrom Product, Sales\\nwhere Product.product_id=Sales.product_id;\\n\\'\\'\\' -------------\\nBefore trying the above approach, I had tried the below code for executing the same logic but got the status \\'Time Limit Exceeded\\'\\n\\'\\'\\'\\nselect p.product_name, s.year, s.price from Sales s\\njoin product p on p.product_id = s.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "Prince72",
                        "content": "[@saakshi12](/saakshi12) \\nselect p.product_name, s.year, s.price\\nfrom Sales s\\nleft join Product p on s.product_id = p.product_id;\\nthis is accepted .."
                    },
                    {
                        "username": "Satish_10",
                        "content": "I am also getting the same issue. can you tell the difference between both"
                    },
                    {
                        "username": "saakshi12",
                        "content": "same i am also getting the same issue.who did u solved it??\\n"
                    },
                    {
                        "username": "gentooInstaller",
                        "content": "I know I\\'m not a beginner, but even if I learnt DB yesterday, I wouldn\\'t pay for leetcode premium to do a simple join. I\\'m seriously disappointed with the quality of Database questions and the schemas that are used here. They\\'re very inferior compared to the schemas and questions posed in FAANG DE/DS interviews."
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "this one is easy level though. What do you think if the hard sql questions?"
                    },
                    {
                        "username": "a_ono",
                        "content": "I totally agree with you..."
                    },
                    {
                        "username": "mohitsinghchandel785",
                        "content": "left join may be more effective heree 😶\n\nselect product_name,year,price from Sales LEFT JOIN Product ON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "juhi90646",
                        "content": "inner join also works\\n"
                    },
                    {
                        "username": "mutnejaanchal3008",
                        "content": "SELECT P.PRODUCT_NAME , S.YEAR , S.PRICE FROM PRODUCT P JOIN SALES S ON \\nP.product_id  = S.product_id ;"
                    }
                ]
            },
            {
                "id": 1909558,
                "content": [
                    {
                        "username": "alishaanjum4992",
                        "content": "# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price\\nfrom product p\\njoin sales s\\non p.product_id = s.product_id"
                    },
                    {
                        "username": "buschl",
                        "content": "Can someone help me understand what\\'s wrong with this answer? All I get is a timeout error\\n\\n\\n\\'\\'\\'select p.product_name, \\n\\ts.year, \\n    s.price\\nFROM product p\\nJOIN sales s\\n\\tON p.product_id = s.product_id\\'\\'\\'"
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "tried several times and then it worked "
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "[@tianwezhao989](/tianwezhao989) the query looks correct. Maybe leetcode was being slow that day."
                    },
                    {
                        "username": "tianwezhao989",
                        "content": "should use sales join product"
                    },
                    {
                        "username": "nasirxia",
                        "content": "It is a safer way to use LEFT JOIN here instead of normal INNER JOIN\\nsince we do not know if all the product_id shown in Sales table exist in\\nthe Product table. LEFT JOIN lets the codes return all the obs in the Sales table"
                    },
                    {
                        "username": "JerryBlank",
                        "content": "[@IgorPykhtin](/IgorPykhtin) Yes! It\\'s foreign key, it has to be in Sales table."
                    },
                    {
                        "username": "Abhilash1111",
                        "content": "thanks man\\n"
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "Sales.product_id is a foreign key. Usually, it assumes the corresponding constraint on value existence in the referenced table."
                    },
                    {
                        "username": "vkrish2",
                        "content": "I get an error stating \"Took too long\" All tests have passed. Not sure what is the optimization I need to do. \\n\\nThanks\\n\\n\\n\\n\\'\\'\\'\\nselect a.Product_Name, b.year, b.price\\nfrom sales b\\njoin product a\\non a.product_id = b.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "JIackau",
                        "content": "How to overcome \"Time Limit Exceeded\", can\\'t submit my answer even if on Run everything works fine."
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "The obvious (and, probably, the only) solution with joining two tables on product_id (I don't post the solution here because of Discussion Rules, but it's already mentioned in other comments) causes Time Limit Exceeded for MS SQL Server. It looks like something is wrong with timeouts for test cases for this task.\nThe same solution for MySQL passes with no issues."
                    },
                    {
                        "username": "shrna09",
                        "content": "The below code got Accepted. \\n---Accepted Code---------\\n\\'\\'\\'\\nselect product_name, year, price\\nfrom Product, Sales\\nwhere Product.product_id=Sales.product_id;\\n\\'\\'\\' -------------\\nBefore trying the above approach, I had tried the below code for executing the same logic but got the status \\'Time Limit Exceeded\\'\\n\\'\\'\\'\\nselect p.product_name, s.year, s.price from Sales s\\njoin product p on p.product_id = s.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "Prince72",
                        "content": "[@saakshi12](/saakshi12) \\nselect p.product_name, s.year, s.price\\nfrom Sales s\\nleft join Product p on s.product_id = p.product_id;\\nthis is accepted .."
                    },
                    {
                        "username": "Satish_10",
                        "content": "I am also getting the same issue. can you tell the difference between both"
                    },
                    {
                        "username": "saakshi12",
                        "content": "same i am also getting the same issue.who did u solved it??\\n"
                    },
                    {
                        "username": "gentooInstaller",
                        "content": "I know I\\'m not a beginner, but even if I learnt DB yesterday, I wouldn\\'t pay for leetcode premium to do a simple join. I\\'m seriously disappointed with the quality of Database questions and the schemas that are used here. They\\'re very inferior compared to the schemas and questions posed in FAANG DE/DS interviews."
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "this one is easy level though. What do you think if the hard sql questions?"
                    },
                    {
                        "username": "a_ono",
                        "content": "I totally agree with you..."
                    },
                    {
                        "username": "mohitsinghchandel785",
                        "content": "left join may be more effective heree 😶\n\nselect product_name,year,price from Sales LEFT JOIN Product ON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "juhi90646",
                        "content": "inner join also works\\n"
                    },
                    {
                        "username": "mutnejaanchal3008",
                        "content": "SELECT P.PRODUCT_NAME , S.YEAR , S.PRICE FROM PRODUCT P JOIN SALES S ON \\nP.product_id  = S.product_id ;"
                    }
                ]
            },
            {
                "id": 1573983,
                "content": [
                    {
                        "username": "alishaanjum4992",
                        "content": "# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price\\nfrom product p\\njoin sales s\\non p.product_id = s.product_id"
                    },
                    {
                        "username": "buschl",
                        "content": "Can someone help me understand what\\'s wrong with this answer? All I get is a timeout error\\n\\n\\n\\'\\'\\'select p.product_name, \\n\\ts.year, \\n    s.price\\nFROM product p\\nJOIN sales s\\n\\tON p.product_id = s.product_id\\'\\'\\'"
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "tried several times and then it worked "
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "[@tianwezhao989](/tianwezhao989) the query looks correct. Maybe leetcode was being slow that day."
                    },
                    {
                        "username": "tianwezhao989",
                        "content": "should use sales join product"
                    },
                    {
                        "username": "nasirxia",
                        "content": "It is a safer way to use LEFT JOIN here instead of normal INNER JOIN\\nsince we do not know if all the product_id shown in Sales table exist in\\nthe Product table. LEFT JOIN lets the codes return all the obs in the Sales table"
                    },
                    {
                        "username": "JerryBlank",
                        "content": "[@IgorPykhtin](/IgorPykhtin) Yes! It\\'s foreign key, it has to be in Sales table."
                    },
                    {
                        "username": "Abhilash1111",
                        "content": "thanks man\\n"
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "Sales.product_id is a foreign key. Usually, it assumes the corresponding constraint on value existence in the referenced table."
                    },
                    {
                        "username": "vkrish2",
                        "content": "I get an error stating \"Took too long\" All tests have passed. Not sure what is the optimization I need to do. \\n\\nThanks\\n\\n\\n\\n\\'\\'\\'\\nselect a.Product_Name, b.year, b.price\\nfrom sales b\\njoin product a\\non a.product_id = b.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "JIackau",
                        "content": "How to overcome \"Time Limit Exceeded\", can\\'t submit my answer even if on Run everything works fine."
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "The obvious (and, probably, the only) solution with joining two tables on product_id (I don't post the solution here because of Discussion Rules, but it's already mentioned in other comments) causes Time Limit Exceeded for MS SQL Server. It looks like something is wrong with timeouts for test cases for this task.\nThe same solution for MySQL passes with no issues."
                    },
                    {
                        "username": "shrna09",
                        "content": "The below code got Accepted. \\n---Accepted Code---------\\n\\'\\'\\'\\nselect product_name, year, price\\nfrom Product, Sales\\nwhere Product.product_id=Sales.product_id;\\n\\'\\'\\' -------------\\nBefore trying the above approach, I had tried the below code for executing the same logic but got the status \\'Time Limit Exceeded\\'\\n\\'\\'\\'\\nselect p.product_name, s.year, s.price from Sales s\\njoin product p on p.product_id = s.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "Prince72",
                        "content": "[@saakshi12](/saakshi12) \\nselect p.product_name, s.year, s.price\\nfrom Sales s\\nleft join Product p on s.product_id = p.product_id;\\nthis is accepted .."
                    },
                    {
                        "username": "Satish_10",
                        "content": "I am also getting the same issue. can you tell the difference between both"
                    },
                    {
                        "username": "saakshi12",
                        "content": "same i am also getting the same issue.who did u solved it??\\n"
                    },
                    {
                        "username": "gentooInstaller",
                        "content": "I know I\\'m not a beginner, but even if I learnt DB yesterday, I wouldn\\'t pay for leetcode premium to do a simple join. I\\'m seriously disappointed with the quality of Database questions and the schemas that are used here. They\\'re very inferior compared to the schemas and questions posed in FAANG DE/DS interviews."
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "this one is easy level though. What do you think if the hard sql questions?"
                    },
                    {
                        "username": "a_ono",
                        "content": "I totally agree with you..."
                    },
                    {
                        "username": "mohitsinghchandel785",
                        "content": "left join may be more effective heree 😶\n\nselect product_name,year,price from Sales LEFT JOIN Product ON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "juhi90646",
                        "content": "inner join also works\\n"
                    },
                    {
                        "username": "mutnejaanchal3008",
                        "content": "SELECT P.PRODUCT_NAME , S.YEAR , S.PRICE FROM PRODUCT P JOIN SALES S ON \\nP.product_id  = S.product_id ;"
                    }
                ]
            },
            {
                "id": 2015452,
                "content": [
                    {
                        "username": "alishaanjum4992",
                        "content": "# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price\\nfrom product p\\njoin sales s\\non p.product_id = s.product_id"
                    },
                    {
                        "username": "buschl",
                        "content": "Can someone help me understand what\\'s wrong with this answer? All I get is a timeout error\\n\\n\\n\\'\\'\\'select p.product_name, \\n\\ts.year, \\n    s.price\\nFROM product p\\nJOIN sales s\\n\\tON p.product_id = s.product_id\\'\\'\\'"
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "tried several times and then it worked "
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "[@tianwezhao989](/tianwezhao989) the query looks correct. Maybe leetcode was being slow that day."
                    },
                    {
                        "username": "tianwezhao989",
                        "content": "should use sales join product"
                    },
                    {
                        "username": "nasirxia",
                        "content": "It is a safer way to use LEFT JOIN here instead of normal INNER JOIN\\nsince we do not know if all the product_id shown in Sales table exist in\\nthe Product table. LEFT JOIN lets the codes return all the obs in the Sales table"
                    },
                    {
                        "username": "JerryBlank",
                        "content": "[@IgorPykhtin](/IgorPykhtin) Yes! It\\'s foreign key, it has to be in Sales table."
                    },
                    {
                        "username": "Abhilash1111",
                        "content": "thanks man\\n"
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "Sales.product_id is a foreign key. Usually, it assumes the corresponding constraint on value existence in the referenced table."
                    },
                    {
                        "username": "vkrish2",
                        "content": "I get an error stating \"Took too long\" All tests have passed. Not sure what is the optimization I need to do. \\n\\nThanks\\n\\n\\n\\n\\'\\'\\'\\nselect a.Product_Name, b.year, b.price\\nfrom sales b\\njoin product a\\non a.product_id = b.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "JIackau",
                        "content": "How to overcome \"Time Limit Exceeded\", can\\'t submit my answer even if on Run everything works fine."
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "The obvious (and, probably, the only) solution with joining two tables on product_id (I don't post the solution here because of Discussion Rules, but it's already mentioned in other comments) causes Time Limit Exceeded for MS SQL Server. It looks like something is wrong with timeouts for test cases for this task.\nThe same solution for MySQL passes with no issues."
                    },
                    {
                        "username": "shrna09",
                        "content": "The below code got Accepted. \\n---Accepted Code---------\\n\\'\\'\\'\\nselect product_name, year, price\\nfrom Product, Sales\\nwhere Product.product_id=Sales.product_id;\\n\\'\\'\\' -------------\\nBefore trying the above approach, I had tried the below code for executing the same logic but got the status \\'Time Limit Exceeded\\'\\n\\'\\'\\'\\nselect p.product_name, s.year, s.price from Sales s\\njoin product p on p.product_id = s.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "Prince72",
                        "content": "[@saakshi12](/saakshi12) \\nselect p.product_name, s.year, s.price\\nfrom Sales s\\nleft join Product p on s.product_id = p.product_id;\\nthis is accepted .."
                    },
                    {
                        "username": "Satish_10",
                        "content": "I am also getting the same issue. can you tell the difference between both"
                    },
                    {
                        "username": "saakshi12",
                        "content": "same i am also getting the same issue.who did u solved it??\\n"
                    },
                    {
                        "username": "gentooInstaller",
                        "content": "I know I\\'m not a beginner, but even if I learnt DB yesterday, I wouldn\\'t pay for leetcode premium to do a simple join. I\\'m seriously disappointed with the quality of Database questions and the schemas that are used here. They\\'re very inferior compared to the schemas and questions posed in FAANG DE/DS interviews."
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "this one is easy level though. What do you think if the hard sql questions?"
                    },
                    {
                        "username": "a_ono",
                        "content": "I totally agree with you..."
                    },
                    {
                        "username": "mohitsinghchandel785",
                        "content": "left join may be more effective heree 😶\n\nselect product_name,year,price from Sales LEFT JOIN Product ON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "juhi90646",
                        "content": "inner join also works\\n"
                    },
                    {
                        "username": "mutnejaanchal3008",
                        "content": "SELECT P.PRODUCT_NAME , S.YEAR , S.PRICE FROM PRODUCT P JOIN SALES S ON \\nP.product_id  = S.product_id ;"
                    }
                ]
            },
            {
                "id": 1930295,
                "content": [
                    {
                        "username": "alishaanjum4992",
                        "content": "# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price\\nfrom product p\\njoin sales s\\non p.product_id = s.product_id"
                    },
                    {
                        "username": "buschl",
                        "content": "Can someone help me understand what\\'s wrong with this answer? All I get is a timeout error\\n\\n\\n\\'\\'\\'select p.product_name, \\n\\ts.year, \\n    s.price\\nFROM product p\\nJOIN sales s\\n\\tON p.product_id = s.product_id\\'\\'\\'"
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "tried several times and then it worked "
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "[@tianwezhao989](/tianwezhao989) the query looks correct. Maybe leetcode was being slow that day."
                    },
                    {
                        "username": "tianwezhao989",
                        "content": "should use sales join product"
                    },
                    {
                        "username": "nasirxia",
                        "content": "It is a safer way to use LEFT JOIN here instead of normal INNER JOIN\\nsince we do not know if all the product_id shown in Sales table exist in\\nthe Product table. LEFT JOIN lets the codes return all the obs in the Sales table"
                    },
                    {
                        "username": "JerryBlank",
                        "content": "[@IgorPykhtin](/IgorPykhtin) Yes! It\\'s foreign key, it has to be in Sales table."
                    },
                    {
                        "username": "Abhilash1111",
                        "content": "thanks man\\n"
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "Sales.product_id is a foreign key. Usually, it assumes the corresponding constraint on value existence in the referenced table."
                    },
                    {
                        "username": "vkrish2",
                        "content": "I get an error stating \"Took too long\" All tests have passed. Not sure what is the optimization I need to do. \\n\\nThanks\\n\\n\\n\\n\\'\\'\\'\\nselect a.Product_Name, b.year, b.price\\nfrom sales b\\njoin product a\\non a.product_id = b.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "JIackau",
                        "content": "How to overcome \"Time Limit Exceeded\", can\\'t submit my answer even if on Run everything works fine."
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "The obvious (and, probably, the only) solution with joining two tables on product_id (I don't post the solution here because of Discussion Rules, but it's already mentioned in other comments) causes Time Limit Exceeded for MS SQL Server. It looks like something is wrong with timeouts for test cases for this task.\nThe same solution for MySQL passes with no issues."
                    },
                    {
                        "username": "shrna09",
                        "content": "The below code got Accepted. \\n---Accepted Code---------\\n\\'\\'\\'\\nselect product_name, year, price\\nfrom Product, Sales\\nwhere Product.product_id=Sales.product_id;\\n\\'\\'\\' -------------\\nBefore trying the above approach, I had tried the below code for executing the same logic but got the status \\'Time Limit Exceeded\\'\\n\\'\\'\\'\\nselect p.product_name, s.year, s.price from Sales s\\njoin product p on p.product_id = s.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "Prince72",
                        "content": "[@saakshi12](/saakshi12) \\nselect p.product_name, s.year, s.price\\nfrom Sales s\\nleft join Product p on s.product_id = p.product_id;\\nthis is accepted .."
                    },
                    {
                        "username": "Satish_10",
                        "content": "I am also getting the same issue. can you tell the difference between both"
                    },
                    {
                        "username": "saakshi12",
                        "content": "same i am also getting the same issue.who did u solved it??\\n"
                    },
                    {
                        "username": "gentooInstaller",
                        "content": "I know I\\'m not a beginner, but even if I learnt DB yesterday, I wouldn\\'t pay for leetcode premium to do a simple join. I\\'m seriously disappointed with the quality of Database questions and the schemas that are used here. They\\'re very inferior compared to the schemas and questions posed in FAANG DE/DS interviews."
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "this one is easy level though. What do you think if the hard sql questions?"
                    },
                    {
                        "username": "a_ono",
                        "content": "I totally agree with you..."
                    },
                    {
                        "username": "mohitsinghchandel785",
                        "content": "left join may be more effective heree 😶\n\nselect product_name,year,price from Sales LEFT JOIN Product ON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "juhi90646",
                        "content": "inner join also works\\n"
                    },
                    {
                        "username": "mutnejaanchal3008",
                        "content": "SELECT P.PRODUCT_NAME , S.YEAR , S.PRICE FROM PRODUCT P JOIN SALES S ON \\nP.product_id  = S.product_id ;"
                    }
                ]
            },
            {
                "id": 1575055,
                "content": [
                    {
                        "username": "alishaanjum4992",
                        "content": "# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price\\nfrom product p\\njoin sales s\\non p.product_id = s.product_id"
                    },
                    {
                        "username": "buschl",
                        "content": "Can someone help me understand what\\'s wrong with this answer? All I get is a timeout error\\n\\n\\n\\'\\'\\'select p.product_name, \\n\\ts.year, \\n    s.price\\nFROM product p\\nJOIN sales s\\n\\tON p.product_id = s.product_id\\'\\'\\'"
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "tried several times and then it worked "
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "[@tianwezhao989](/tianwezhao989) the query looks correct. Maybe leetcode was being slow that day."
                    },
                    {
                        "username": "tianwezhao989",
                        "content": "should use sales join product"
                    },
                    {
                        "username": "nasirxia",
                        "content": "It is a safer way to use LEFT JOIN here instead of normal INNER JOIN\\nsince we do not know if all the product_id shown in Sales table exist in\\nthe Product table. LEFT JOIN lets the codes return all the obs in the Sales table"
                    },
                    {
                        "username": "JerryBlank",
                        "content": "[@IgorPykhtin](/IgorPykhtin) Yes! It\\'s foreign key, it has to be in Sales table."
                    },
                    {
                        "username": "Abhilash1111",
                        "content": "thanks man\\n"
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "Sales.product_id is a foreign key. Usually, it assumes the corresponding constraint on value existence in the referenced table."
                    },
                    {
                        "username": "vkrish2",
                        "content": "I get an error stating \"Took too long\" All tests have passed. Not sure what is the optimization I need to do. \\n\\nThanks\\n\\n\\n\\n\\'\\'\\'\\nselect a.Product_Name, b.year, b.price\\nfrom sales b\\njoin product a\\non a.product_id = b.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "JIackau",
                        "content": "How to overcome \"Time Limit Exceeded\", can\\'t submit my answer even if on Run everything works fine."
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "The obvious (and, probably, the only) solution with joining two tables on product_id (I don't post the solution here because of Discussion Rules, but it's already mentioned in other comments) causes Time Limit Exceeded for MS SQL Server. It looks like something is wrong with timeouts for test cases for this task.\nThe same solution for MySQL passes with no issues."
                    },
                    {
                        "username": "shrna09",
                        "content": "The below code got Accepted. \\n---Accepted Code---------\\n\\'\\'\\'\\nselect product_name, year, price\\nfrom Product, Sales\\nwhere Product.product_id=Sales.product_id;\\n\\'\\'\\' -------------\\nBefore trying the above approach, I had tried the below code for executing the same logic but got the status \\'Time Limit Exceeded\\'\\n\\'\\'\\'\\nselect p.product_name, s.year, s.price from Sales s\\njoin product p on p.product_id = s.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "Prince72",
                        "content": "[@saakshi12](/saakshi12) \\nselect p.product_name, s.year, s.price\\nfrom Sales s\\nleft join Product p on s.product_id = p.product_id;\\nthis is accepted .."
                    },
                    {
                        "username": "Satish_10",
                        "content": "I am also getting the same issue. can you tell the difference between both"
                    },
                    {
                        "username": "saakshi12",
                        "content": "same i am also getting the same issue.who did u solved it??\\n"
                    },
                    {
                        "username": "gentooInstaller",
                        "content": "I know I\\'m not a beginner, but even if I learnt DB yesterday, I wouldn\\'t pay for leetcode premium to do a simple join. I\\'m seriously disappointed with the quality of Database questions and the schemas that are used here. They\\'re very inferior compared to the schemas and questions posed in FAANG DE/DS interviews."
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "this one is easy level though. What do you think if the hard sql questions?"
                    },
                    {
                        "username": "a_ono",
                        "content": "I totally agree with you..."
                    },
                    {
                        "username": "mohitsinghchandel785",
                        "content": "left join may be more effective heree 😶\n\nselect product_name,year,price from Sales LEFT JOIN Product ON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "juhi90646",
                        "content": "inner join also works\\n"
                    },
                    {
                        "username": "mutnejaanchal3008",
                        "content": "SELECT P.PRODUCT_NAME , S.YEAR , S.PRICE FROM PRODUCT P JOIN SALES S ON \\nP.product_id  = S.product_id ;"
                    }
                ]
            },
            {
                "id": 1570382,
                "content": [
                    {
                        "username": "alishaanjum4992",
                        "content": "# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price\\nfrom product p\\njoin sales s\\non p.product_id = s.product_id"
                    },
                    {
                        "username": "buschl",
                        "content": "Can someone help me understand what\\'s wrong with this answer? All I get is a timeout error\\n\\n\\n\\'\\'\\'select p.product_name, \\n\\ts.year, \\n    s.price\\nFROM product p\\nJOIN sales s\\n\\tON p.product_id = s.product_id\\'\\'\\'"
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "tried several times and then it worked "
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "[@tianwezhao989](/tianwezhao989) the query looks correct. Maybe leetcode was being slow that day."
                    },
                    {
                        "username": "tianwezhao989",
                        "content": "should use sales join product"
                    },
                    {
                        "username": "nasirxia",
                        "content": "It is a safer way to use LEFT JOIN here instead of normal INNER JOIN\\nsince we do not know if all the product_id shown in Sales table exist in\\nthe Product table. LEFT JOIN lets the codes return all the obs in the Sales table"
                    },
                    {
                        "username": "JerryBlank",
                        "content": "[@IgorPykhtin](/IgorPykhtin) Yes! It\\'s foreign key, it has to be in Sales table."
                    },
                    {
                        "username": "Abhilash1111",
                        "content": "thanks man\\n"
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "Sales.product_id is a foreign key. Usually, it assumes the corresponding constraint on value existence in the referenced table."
                    },
                    {
                        "username": "vkrish2",
                        "content": "I get an error stating \"Took too long\" All tests have passed. Not sure what is the optimization I need to do. \\n\\nThanks\\n\\n\\n\\n\\'\\'\\'\\nselect a.Product_Name, b.year, b.price\\nfrom sales b\\njoin product a\\non a.product_id = b.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "JIackau",
                        "content": "How to overcome \"Time Limit Exceeded\", can\\'t submit my answer even if on Run everything works fine."
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "The obvious (and, probably, the only) solution with joining two tables on product_id (I don't post the solution here because of Discussion Rules, but it's already mentioned in other comments) causes Time Limit Exceeded for MS SQL Server. It looks like something is wrong with timeouts for test cases for this task.\nThe same solution for MySQL passes with no issues."
                    },
                    {
                        "username": "shrna09",
                        "content": "The below code got Accepted. \\n---Accepted Code---------\\n\\'\\'\\'\\nselect product_name, year, price\\nfrom Product, Sales\\nwhere Product.product_id=Sales.product_id;\\n\\'\\'\\' -------------\\nBefore trying the above approach, I had tried the below code for executing the same logic but got the status \\'Time Limit Exceeded\\'\\n\\'\\'\\'\\nselect p.product_name, s.year, s.price from Sales s\\njoin product p on p.product_id = s.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "Prince72",
                        "content": "[@saakshi12](/saakshi12) \\nselect p.product_name, s.year, s.price\\nfrom Sales s\\nleft join Product p on s.product_id = p.product_id;\\nthis is accepted .."
                    },
                    {
                        "username": "Satish_10",
                        "content": "I am also getting the same issue. can you tell the difference between both"
                    },
                    {
                        "username": "saakshi12",
                        "content": "same i am also getting the same issue.who did u solved it??\\n"
                    },
                    {
                        "username": "gentooInstaller",
                        "content": "I know I\\'m not a beginner, but even if I learnt DB yesterday, I wouldn\\'t pay for leetcode premium to do a simple join. I\\'m seriously disappointed with the quality of Database questions and the schemas that are used here. They\\'re very inferior compared to the schemas and questions posed in FAANG DE/DS interviews."
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "this one is easy level though. What do you think if the hard sql questions?"
                    },
                    {
                        "username": "a_ono",
                        "content": "I totally agree with you..."
                    },
                    {
                        "username": "mohitsinghchandel785",
                        "content": "left join may be more effective heree 😶\n\nselect product_name,year,price from Sales LEFT JOIN Product ON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "juhi90646",
                        "content": "inner join also works\\n"
                    },
                    {
                        "username": "mutnejaanchal3008",
                        "content": "SELECT P.PRODUCT_NAME , S.YEAR , S.PRICE FROM PRODUCT P JOIN SALES S ON \\nP.product_id  = S.product_id ;"
                    }
                ]
            },
            {
                "id": 2072352,
                "content": [
                    {
                        "username": "alishaanjum4992",
                        "content": "# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price\\nfrom product p\\njoin sales s\\non p.product_id = s.product_id"
                    },
                    {
                        "username": "buschl",
                        "content": "Can someone help me understand what\\'s wrong with this answer? All I get is a timeout error\\n\\n\\n\\'\\'\\'select p.product_name, \\n\\ts.year, \\n    s.price\\nFROM product p\\nJOIN sales s\\n\\tON p.product_id = s.product_id\\'\\'\\'"
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "tried several times and then it worked "
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "[@tianwezhao989](/tianwezhao989) the query looks correct. Maybe leetcode was being slow that day."
                    },
                    {
                        "username": "tianwezhao989",
                        "content": "should use sales join product"
                    },
                    {
                        "username": "nasirxia",
                        "content": "It is a safer way to use LEFT JOIN here instead of normal INNER JOIN\\nsince we do not know if all the product_id shown in Sales table exist in\\nthe Product table. LEFT JOIN lets the codes return all the obs in the Sales table"
                    },
                    {
                        "username": "JerryBlank",
                        "content": "[@IgorPykhtin](/IgorPykhtin) Yes! It\\'s foreign key, it has to be in Sales table."
                    },
                    {
                        "username": "Abhilash1111",
                        "content": "thanks man\\n"
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "Sales.product_id is a foreign key. Usually, it assumes the corresponding constraint on value existence in the referenced table."
                    },
                    {
                        "username": "vkrish2",
                        "content": "I get an error stating \"Took too long\" All tests have passed. Not sure what is the optimization I need to do. \\n\\nThanks\\n\\n\\n\\n\\'\\'\\'\\nselect a.Product_Name, b.year, b.price\\nfrom sales b\\njoin product a\\non a.product_id = b.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "JIackau",
                        "content": "How to overcome \"Time Limit Exceeded\", can\\'t submit my answer even if on Run everything works fine."
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "The obvious (and, probably, the only) solution with joining two tables on product_id (I don't post the solution here because of Discussion Rules, but it's already mentioned in other comments) causes Time Limit Exceeded for MS SQL Server. It looks like something is wrong with timeouts for test cases for this task.\nThe same solution for MySQL passes with no issues."
                    },
                    {
                        "username": "shrna09",
                        "content": "The below code got Accepted. \\n---Accepted Code---------\\n\\'\\'\\'\\nselect product_name, year, price\\nfrom Product, Sales\\nwhere Product.product_id=Sales.product_id;\\n\\'\\'\\' -------------\\nBefore trying the above approach, I had tried the below code for executing the same logic but got the status \\'Time Limit Exceeded\\'\\n\\'\\'\\'\\nselect p.product_name, s.year, s.price from Sales s\\njoin product p on p.product_id = s.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "Prince72",
                        "content": "[@saakshi12](/saakshi12) \\nselect p.product_name, s.year, s.price\\nfrom Sales s\\nleft join Product p on s.product_id = p.product_id;\\nthis is accepted .."
                    },
                    {
                        "username": "Satish_10",
                        "content": "I am also getting the same issue. can you tell the difference between both"
                    },
                    {
                        "username": "saakshi12",
                        "content": "same i am also getting the same issue.who did u solved it??\\n"
                    },
                    {
                        "username": "gentooInstaller",
                        "content": "I know I\\'m not a beginner, but even if I learnt DB yesterday, I wouldn\\'t pay for leetcode premium to do a simple join. I\\'m seriously disappointed with the quality of Database questions and the schemas that are used here. They\\'re very inferior compared to the schemas and questions posed in FAANG DE/DS interviews."
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "this one is easy level though. What do you think if the hard sql questions?"
                    },
                    {
                        "username": "a_ono",
                        "content": "I totally agree with you..."
                    },
                    {
                        "username": "mohitsinghchandel785",
                        "content": "left join may be more effective heree 😶\n\nselect product_name,year,price from Sales LEFT JOIN Product ON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "juhi90646",
                        "content": "inner join also works\\n"
                    },
                    {
                        "username": "mutnejaanchal3008",
                        "content": "SELECT P.PRODUCT_NAME , S.YEAR , S.PRICE FROM PRODUCT P JOIN SALES S ON \\nP.product_id  = S.product_id ;"
                    }
                ]
            },
            {
                "id": 2060633,
                "content": [
                    {
                        "username": "alishaanjum4992",
                        "content": "# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price\\nfrom product p\\njoin sales s\\non p.product_id = s.product_id"
                    },
                    {
                        "username": "buschl",
                        "content": "Can someone help me understand what\\'s wrong with this answer? All I get is a timeout error\\n\\n\\n\\'\\'\\'select p.product_name, \\n\\ts.year, \\n    s.price\\nFROM product p\\nJOIN sales s\\n\\tON p.product_id = s.product_id\\'\\'\\'"
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "tried several times and then it worked "
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "[@tianwezhao989](/tianwezhao989) the query looks correct. Maybe leetcode was being slow that day."
                    },
                    {
                        "username": "tianwezhao989",
                        "content": "should use sales join product"
                    },
                    {
                        "username": "nasirxia",
                        "content": "It is a safer way to use LEFT JOIN here instead of normal INNER JOIN\\nsince we do not know if all the product_id shown in Sales table exist in\\nthe Product table. LEFT JOIN lets the codes return all the obs in the Sales table"
                    },
                    {
                        "username": "JerryBlank",
                        "content": "[@IgorPykhtin](/IgorPykhtin) Yes! It\\'s foreign key, it has to be in Sales table."
                    },
                    {
                        "username": "Abhilash1111",
                        "content": "thanks man\\n"
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "Sales.product_id is a foreign key. Usually, it assumes the corresponding constraint on value existence in the referenced table."
                    },
                    {
                        "username": "vkrish2",
                        "content": "I get an error stating \"Took too long\" All tests have passed. Not sure what is the optimization I need to do. \\n\\nThanks\\n\\n\\n\\n\\'\\'\\'\\nselect a.Product_Name, b.year, b.price\\nfrom sales b\\njoin product a\\non a.product_id = b.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "JIackau",
                        "content": "How to overcome \"Time Limit Exceeded\", can\\'t submit my answer even if on Run everything works fine."
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "The obvious (and, probably, the only) solution with joining two tables on product_id (I don't post the solution here because of Discussion Rules, but it's already mentioned in other comments) causes Time Limit Exceeded for MS SQL Server. It looks like something is wrong with timeouts for test cases for this task.\nThe same solution for MySQL passes with no issues."
                    },
                    {
                        "username": "shrna09",
                        "content": "The below code got Accepted. \\n---Accepted Code---------\\n\\'\\'\\'\\nselect product_name, year, price\\nfrom Product, Sales\\nwhere Product.product_id=Sales.product_id;\\n\\'\\'\\' -------------\\nBefore trying the above approach, I had tried the below code for executing the same logic but got the status \\'Time Limit Exceeded\\'\\n\\'\\'\\'\\nselect p.product_name, s.year, s.price from Sales s\\njoin product p on p.product_id = s.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "Prince72",
                        "content": "[@saakshi12](/saakshi12) \\nselect p.product_name, s.year, s.price\\nfrom Sales s\\nleft join Product p on s.product_id = p.product_id;\\nthis is accepted .."
                    },
                    {
                        "username": "Satish_10",
                        "content": "I am also getting the same issue. can you tell the difference between both"
                    },
                    {
                        "username": "saakshi12",
                        "content": "same i am also getting the same issue.who did u solved it??\\n"
                    },
                    {
                        "username": "gentooInstaller",
                        "content": "I know I\\'m not a beginner, but even if I learnt DB yesterday, I wouldn\\'t pay for leetcode premium to do a simple join. I\\'m seriously disappointed with the quality of Database questions and the schemas that are used here. They\\'re very inferior compared to the schemas and questions posed in FAANG DE/DS interviews."
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "this one is easy level though. What do you think if the hard sql questions?"
                    },
                    {
                        "username": "a_ono",
                        "content": "I totally agree with you..."
                    },
                    {
                        "username": "mohitsinghchandel785",
                        "content": "left join may be more effective heree 😶\n\nselect product_name,year,price from Sales LEFT JOIN Product ON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "juhi90646",
                        "content": "inner join also works\\n"
                    },
                    {
                        "username": "mutnejaanchal3008",
                        "content": "SELECT P.PRODUCT_NAME , S.YEAR , S.PRICE FROM PRODUCT P JOIN SALES S ON \\nP.product_id  = S.product_id ;"
                    }
                ]
            },
            {
                "id": 1565553,
                "content": [
                    {
                        "username": "alishaanjum4992",
                        "content": "# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price\\nfrom product p\\njoin sales s\\non p.product_id = s.product_id"
                    },
                    {
                        "username": "buschl",
                        "content": "Can someone help me understand what\\'s wrong with this answer? All I get is a timeout error\\n\\n\\n\\'\\'\\'select p.product_name, \\n\\ts.year, \\n    s.price\\nFROM product p\\nJOIN sales s\\n\\tON p.product_id = s.product_id\\'\\'\\'"
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "tried several times and then it worked "
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "[@tianwezhao989](/tianwezhao989) the query looks correct. Maybe leetcode was being slow that day."
                    },
                    {
                        "username": "tianwezhao989",
                        "content": "should use sales join product"
                    },
                    {
                        "username": "nasirxia",
                        "content": "It is a safer way to use LEFT JOIN here instead of normal INNER JOIN\\nsince we do not know if all the product_id shown in Sales table exist in\\nthe Product table. LEFT JOIN lets the codes return all the obs in the Sales table"
                    },
                    {
                        "username": "JerryBlank",
                        "content": "[@IgorPykhtin](/IgorPykhtin) Yes! It\\'s foreign key, it has to be in Sales table."
                    },
                    {
                        "username": "Abhilash1111",
                        "content": "thanks man\\n"
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "Sales.product_id is a foreign key. Usually, it assumes the corresponding constraint on value existence in the referenced table."
                    },
                    {
                        "username": "vkrish2",
                        "content": "I get an error stating \"Took too long\" All tests have passed. Not sure what is the optimization I need to do. \\n\\nThanks\\n\\n\\n\\n\\'\\'\\'\\nselect a.Product_Name, b.year, b.price\\nfrom sales b\\njoin product a\\non a.product_id = b.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "JIackau",
                        "content": "How to overcome \"Time Limit Exceeded\", can\\'t submit my answer even if on Run everything works fine."
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "The obvious (and, probably, the only) solution with joining two tables on product_id (I don't post the solution here because of Discussion Rules, but it's already mentioned in other comments) causes Time Limit Exceeded for MS SQL Server. It looks like something is wrong with timeouts for test cases for this task.\nThe same solution for MySQL passes with no issues."
                    },
                    {
                        "username": "shrna09",
                        "content": "The below code got Accepted. \\n---Accepted Code---------\\n\\'\\'\\'\\nselect product_name, year, price\\nfrom Product, Sales\\nwhere Product.product_id=Sales.product_id;\\n\\'\\'\\' -------------\\nBefore trying the above approach, I had tried the below code for executing the same logic but got the status \\'Time Limit Exceeded\\'\\n\\'\\'\\'\\nselect p.product_name, s.year, s.price from Sales s\\njoin product p on p.product_id = s.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "Prince72",
                        "content": "[@saakshi12](/saakshi12) \\nselect p.product_name, s.year, s.price\\nfrom Sales s\\nleft join Product p on s.product_id = p.product_id;\\nthis is accepted .."
                    },
                    {
                        "username": "Satish_10",
                        "content": "I am also getting the same issue. can you tell the difference between both"
                    },
                    {
                        "username": "saakshi12",
                        "content": "same i am also getting the same issue.who did u solved it??\\n"
                    },
                    {
                        "username": "gentooInstaller",
                        "content": "I know I\\'m not a beginner, but even if I learnt DB yesterday, I wouldn\\'t pay for leetcode premium to do a simple join. I\\'m seriously disappointed with the quality of Database questions and the schemas that are used here. They\\'re very inferior compared to the schemas and questions posed in FAANG DE/DS interviews."
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "this one is easy level though. What do you think if the hard sql questions?"
                    },
                    {
                        "username": "a_ono",
                        "content": "I totally agree with you..."
                    },
                    {
                        "username": "mohitsinghchandel785",
                        "content": "left join may be more effective heree 😶\n\nselect product_name,year,price from Sales LEFT JOIN Product ON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "juhi90646",
                        "content": "inner join also works\\n"
                    },
                    {
                        "username": "mutnejaanchal3008",
                        "content": "SELECT P.PRODUCT_NAME , S.YEAR , S.PRICE FROM PRODUCT P JOIN SALES S ON \\nP.product_id  = S.product_id ;"
                    }
                ]
            },
            {
                "id": 1566593,
                "content": [
                    {
                        "username": "alishaanjum4992",
                        "content": "# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price\\nfrom product p\\njoin sales s\\non p.product_id = s.product_id"
                    },
                    {
                        "username": "buschl",
                        "content": "Can someone help me understand what\\'s wrong with this answer? All I get is a timeout error\\n\\n\\n\\'\\'\\'select p.product_name, \\n\\ts.year, \\n    s.price\\nFROM product p\\nJOIN sales s\\n\\tON p.product_id = s.product_id\\'\\'\\'"
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "tried several times and then it worked "
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "[@tianwezhao989](/tianwezhao989) the query looks correct. Maybe leetcode was being slow that day."
                    },
                    {
                        "username": "tianwezhao989",
                        "content": "should use sales join product"
                    },
                    {
                        "username": "nasirxia",
                        "content": "It is a safer way to use LEFT JOIN here instead of normal INNER JOIN\\nsince we do not know if all the product_id shown in Sales table exist in\\nthe Product table. LEFT JOIN lets the codes return all the obs in the Sales table"
                    },
                    {
                        "username": "JerryBlank",
                        "content": "[@IgorPykhtin](/IgorPykhtin) Yes! It\\'s foreign key, it has to be in Sales table."
                    },
                    {
                        "username": "Abhilash1111",
                        "content": "thanks man\\n"
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "Sales.product_id is a foreign key. Usually, it assumes the corresponding constraint on value existence in the referenced table."
                    },
                    {
                        "username": "vkrish2",
                        "content": "I get an error stating \"Took too long\" All tests have passed. Not sure what is the optimization I need to do. \\n\\nThanks\\n\\n\\n\\n\\'\\'\\'\\nselect a.Product_Name, b.year, b.price\\nfrom sales b\\njoin product a\\non a.product_id = b.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "JIackau",
                        "content": "How to overcome \"Time Limit Exceeded\", can\\'t submit my answer even if on Run everything works fine."
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "The obvious (and, probably, the only) solution with joining two tables on product_id (I don't post the solution here because of Discussion Rules, but it's already mentioned in other comments) causes Time Limit Exceeded for MS SQL Server. It looks like something is wrong with timeouts for test cases for this task.\nThe same solution for MySQL passes with no issues."
                    },
                    {
                        "username": "shrna09",
                        "content": "The below code got Accepted. \\n---Accepted Code---------\\n\\'\\'\\'\\nselect product_name, year, price\\nfrom Product, Sales\\nwhere Product.product_id=Sales.product_id;\\n\\'\\'\\' -------------\\nBefore trying the above approach, I had tried the below code for executing the same logic but got the status \\'Time Limit Exceeded\\'\\n\\'\\'\\'\\nselect p.product_name, s.year, s.price from Sales s\\njoin product p on p.product_id = s.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "Prince72",
                        "content": "[@saakshi12](/saakshi12) \\nselect p.product_name, s.year, s.price\\nfrom Sales s\\nleft join Product p on s.product_id = p.product_id;\\nthis is accepted .."
                    },
                    {
                        "username": "Satish_10",
                        "content": "I am also getting the same issue. can you tell the difference between both"
                    },
                    {
                        "username": "saakshi12",
                        "content": "same i am also getting the same issue.who did u solved it??\\n"
                    },
                    {
                        "username": "gentooInstaller",
                        "content": "I know I\\'m not a beginner, but even if I learnt DB yesterday, I wouldn\\'t pay for leetcode premium to do a simple join. I\\'m seriously disappointed with the quality of Database questions and the schemas that are used here. They\\'re very inferior compared to the schemas and questions posed in FAANG DE/DS interviews."
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "this one is easy level though. What do you think if the hard sql questions?"
                    },
                    {
                        "username": "a_ono",
                        "content": "I totally agree with you..."
                    },
                    {
                        "username": "mohitsinghchandel785",
                        "content": "left join may be more effective heree 😶\n\nselect product_name,year,price from Sales LEFT JOIN Product ON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "juhi90646",
                        "content": "inner join also works\\n"
                    },
                    {
                        "username": "mutnejaanchal3008",
                        "content": "SELECT P.PRODUCT_NAME , S.YEAR , S.PRICE FROM PRODUCT P JOIN SALES S ON \\nP.product_id  = S.product_id ;"
                    }
                ]
            },
            {
                "id": 1909558,
                "content": [
                    {
                        "username": "alishaanjum4992",
                        "content": "# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price\\nfrom product p\\njoin sales s\\non p.product_id = s.product_id"
                    },
                    {
                        "username": "buschl",
                        "content": "Can someone help me understand what\\'s wrong with this answer? All I get is a timeout error\\n\\n\\n\\'\\'\\'select p.product_name, \\n\\ts.year, \\n    s.price\\nFROM product p\\nJOIN sales s\\n\\tON p.product_id = s.product_id\\'\\'\\'"
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "tried several times and then it worked "
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "[@tianwezhao989](/tianwezhao989) the query looks correct. Maybe leetcode was being slow that day."
                    },
                    {
                        "username": "tianwezhao989",
                        "content": "should use sales join product"
                    },
                    {
                        "username": "nasirxia",
                        "content": "It is a safer way to use LEFT JOIN here instead of normal INNER JOIN\\nsince we do not know if all the product_id shown in Sales table exist in\\nthe Product table. LEFT JOIN lets the codes return all the obs in the Sales table"
                    },
                    {
                        "username": "JerryBlank",
                        "content": "[@IgorPykhtin](/IgorPykhtin) Yes! It\\'s foreign key, it has to be in Sales table."
                    },
                    {
                        "username": "Abhilash1111",
                        "content": "thanks man\\n"
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "Sales.product_id is a foreign key. Usually, it assumes the corresponding constraint on value existence in the referenced table."
                    },
                    {
                        "username": "vkrish2",
                        "content": "I get an error stating \"Took too long\" All tests have passed. Not sure what is the optimization I need to do. \\n\\nThanks\\n\\n\\n\\n\\'\\'\\'\\nselect a.Product_Name, b.year, b.price\\nfrom sales b\\njoin product a\\non a.product_id = b.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "JIackau",
                        "content": "How to overcome \"Time Limit Exceeded\", can\\'t submit my answer even if on Run everything works fine."
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "The obvious (and, probably, the only) solution with joining two tables on product_id (I don't post the solution here because of Discussion Rules, but it's already mentioned in other comments) causes Time Limit Exceeded for MS SQL Server. It looks like something is wrong with timeouts for test cases for this task.\nThe same solution for MySQL passes with no issues."
                    },
                    {
                        "username": "shrna09",
                        "content": "The below code got Accepted. \\n---Accepted Code---------\\n\\'\\'\\'\\nselect product_name, year, price\\nfrom Product, Sales\\nwhere Product.product_id=Sales.product_id;\\n\\'\\'\\' -------------\\nBefore trying the above approach, I had tried the below code for executing the same logic but got the status \\'Time Limit Exceeded\\'\\n\\'\\'\\'\\nselect p.product_name, s.year, s.price from Sales s\\njoin product p on p.product_id = s.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "Prince72",
                        "content": "[@saakshi12](/saakshi12) \\nselect p.product_name, s.year, s.price\\nfrom Sales s\\nleft join Product p on s.product_id = p.product_id;\\nthis is accepted .."
                    },
                    {
                        "username": "Satish_10",
                        "content": "I am also getting the same issue. can you tell the difference between both"
                    },
                    {
                        "username": "saakshi12",
                        "content": "same i am also getting the same issue.who did u solved it??\\n"
                    },
                    {
                        "username": "gentooInstaller",
                        "content": "I know I\\'m not a beginner, but even if I learnt DB yesterday, I wouldn\\'t pay for leetcode premium to do a simple join. I\\'m seriously disappointed with the quality of Database questions and the schemas that are used here. They\\'re very inferior compared to the schemas and questions posed in FAANG DE/DS interviews."
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "this one is easy level though. What do you think if the hard sql questions?"
                    },
                    {
                        "username": "a_ono",
                        "content": "I totally agree with you..."
                    },
                    {
                        "username": "mohitsinghchandel785",
                        "content": "left join may be more effective heree 😶\n\nselect product_name,year,price from Sales LEFT JOIN Product ON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "juhi90646",
                        "content": "inner join also works\\n"
                    },
                    {
                        "username": "mutnejaanchal3008",
                        "content": "SELECT P.PRODUCT_NAME , S.YEAR , S.PRICE FROM PRODUCT P JOIN SALES S ON \\nP.product_id  = S.product_id ;"
                    }
                ]
            },
            {
                "id": 1573983,
                "content": [
                    {
                        "username": "alishaanjum4992",
                        "content": "# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price\\nfrom product p\\njoin sales s\\non p.product_id = s.product_id"
                    },
                    {
                        "username": "buschl",
                        "content": "Can someone help me understand what\\'s wrong with this answer? All I get is a timeout error\\n\\n\\n\\'\\'\\'select p.product_name, \\n\\ts.year, \\n    s.price\\nFROM product p\\nJOIN sales s\\n\\tON p.product_id = s.product_id\\'\\'\\'"
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "tried several times and then it worked "
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "[@tianwezhao989](/tianwezhao989) the query looks correct. Maybe leetcode was being slow that day."
                    },
                    {
                        "username": "tianwezhao989",
                        "content": "should use sales join product"
                    },
                    {
                        "username": "nasirxia",
                        "content": "It is a safer way to use LEFT JOIN here instead of normal INNER JOIN\\nsince we do not know if all the product_id shown in Sales table exist in\\nthe Product table. LEFT JOIN lets the codes return all the obs in the Sales table"
                    },
                    {
                        "username": "JerryBlank",
                        "content": "[@IgorPykhtin](/IgorPykhtin) Yes! It\\'s foreign key, it has to be in Sales table."
                    },
                    {
                        "username": "Abhilash1111",
                        "content": "thanks man\\n"
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "Sales.product_id is a foreign key. Usually, it assumes the corresponding constraint on value existence in the referenced table."
                    },
                    {
                        "username": "vkrish2",
                        "content": "I get an error stating \"Took too long\" All tests have passed. Not sure what is the optimization I need to do. \\n\\nThanks\\n\\n\\n\\n\\'\\'\\'\\nselect a.Product_Name, b.year, b.price\\nfrom sales b\\njoin product a\\non a.product_id = b.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "JIackau",
                        "content": "How to overcome \"Time Limit Exceeded\", can\\'t submit my answer even if on Run everything works fine."
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "The obvious (and, probably, the only) solution with joining two tables on product_id (I don't post the solution here because of Discussion Rules, but it's already mentioned in other comments) causes Time Limit Exceeded for MS SQL Server. It looks like something is wrong with timeouts for test cases for this task.\nThe same solution for MySQL passes with no issues."
                    },
                    {
                        "username": "shrna09",
                        "content": "The below code got Accepted. \\n---Accepted Code---------\\n\\'\\'\\'\\nselect product_name, year, price\\nfrom Product, Sales\\nwhere Product.product_id=Sales.product_id;\\n\\'\\'\\' -------------\\nBefore trying the above approach, I had tried the below code for executing the same logic but got the status \\'Time Limit Exceeded\\'\\n\\'\\'\\'\\nselect p.product_name, s.year, s.price from Sales s\\njoin product p on p.product_id = s.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "Prince72",
                        "content": "[@saakshi12](/saakshi12) \\nselect p.product_name, s.year, s.price\\nfrom Sales s\\nleft join Product p on s.product_id = p.product_id;\\nthis is accepted .."
                    },
                    {
                        "username": "Satish_10",
                        "content": "I am also getting the same issue. can you tell the difference between both"
                    },
                    {
                        "username": "saakshi12",
                        "content": "same i am also getting the same issue.who did u solved it??\\n"
                    },
                    {
                        "username": "gentooInstaller",
                        "content": "I know I\\'m not a beginner, but even if I learnt DB yesterday, I wouldn\\'t pay for leetcode premium to do a simple join. I\\'m seriously disappointed with the quality of Database questions and the schemas that are used here. They\\'re very inferior compared to the schemas and questions posed in FAANG DE/DS interviews."
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "this one is easy level though. What do you think if the hard sql questions?"
                    },
                    {
                        "username": "a_ono",
                        "content": "I totally agree with you..."
                    },
                    {
                        "username": "mohitsinghchandel785",
                        "content": "left join may be more effective heree 😶\n\nselect product_name,year,price from Sales LEFT JOIN Product ON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "juhi90646",
                        "content": "inner join also works\\n"
                    },
                    {
                        "username": "mutnejaanchal3008",
                        "content": "SELECT P.PRODUCT_NAME , S.YEAR , S.PRICE FROM PRODUCT P JOIN SALES S ON \\nP.product_id  = S.product_id ;"
                    }
                ]
            },
            {
                "id": 2015452,
                "content": [
                    {
                        "username": "alishaanjum4992",
                        "content": "# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price\\nfrom product p\\njoin sales s\\non p.product_id = s.product_id"
                    },
                    {
                        "username": "buschl",
                        "content": "Can someone help me understand what\\'s wrong with this answer? All I get is a timeout error\\n\\n\\n\\'\\'\\'select p.product_name, \\n\\ts.year, \\n    s.price\\nFROM product p\\nJOIN sales s\\n\\tON p.product_id = s.product_id\\'\\'\\'"
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "tried several times and then it worked "
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "[@tianwezhao989](/tianwezhao989) the query looks correct. Maybe leetcode was being slow that day."
                    },
                    {
                        "username": "tianwezhao989",
                        "content": "should use sales join product"
                    },
                    {
                        "username": "nasirxia",
                        "content": "It is a safer way to use LEFT JOIN here instead of normal INNER JOIN\\nsince we do not know if all the product_id shown in Sales table exist in\\nthe Product table. LEFT JOIN lets the codes return all the obs in the Sales table"
                    },
                    {
                        "username": "JerryBlank",
                        "content": "[@IgorPykhtin](/IgorPykhtin) Yes! It\\'s foreign key, it has to be in Sales table."
                    },
                    {
                        "username": "Abhilash1111",
                        "content": "thanks man\\n"
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "Sales.product_id is a foreign key. Usually, it assumes the corresponding constraint on value existence in the referenced table."
                    },
                    {
                        "username": "vkrish2",
                        "content": "I get an error stating \"Took too long\" All tests have passed. Not sure what is the optimization I need to do. \\n\\nThanks\\n\\n\\n\\n\\'\\'\\'\\nselect a.Product_Name, b.year, b.price\\nfrom sales b\\njoin product a\\non a.product_id = b.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "JIackau",
                        "content": "How to overcome \"Time Limit Exceeded\", can\\'t submit my answer even if on Run everything works fine."
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "The obvious (and, probably, the only) solution with joining two tables on product_id (I don't post the solution here because of Discussion Rules, but it's already mentioned in other comments) causes Time Limit Exceeded for MS SQL Server. It looks like something is wrong with timeouts for test cases for this task.\nThe same solution for MySQL passes with no issues."
                    },
                    {
                        "username": "shrna09",
                        "content": "The below code got Accepted. \\n---Accepted Code---------\\n\\'\\'\\'\\nselect product_name, year, price\\nfrom Product, Sales\\nwhere Product.product_id=Sales.product_id;\\n\\'\\'\\' -------------\\nBefore trying the above approach, I had tried the below code for executing the same logic but got the status \\'Time Limit Exceeded\\'\\n\\'\\'\\'\\nselect p.product_name, s.year, s.price from Sales s\\njoin product p on p.product_id = s.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "Prince72",
                        "content": "[@saakshi12](/saakshi12) \\nselect p.product_name, s.year, s.price\\nfrom Sales s\\nleft join Product p on s.product_id = p.product_id;\\nthis is accepted .."
                    },
                    {
                        "username": "Satish_10",
                        "content": "I am also getting the same issue. can you tell the difference between both"
                    },
                    {
                        "username": "saakshi12",
                        "content": "same i am also getting the same issue.who did u solved it??\\n"
                    },
                    {
                        "username": "gentooInstaller",
                        "content": "I know I\\'m not a beginner, but even if I learnt DB yesterday, I wouldn\\'t pay for leetcode premium to do a simple join. I\\'m seriously disappointed with the quality of Database questions and the schemas that are used here. They\\'re very inferior compared to the schemas and questions posed in FAANG DE/DS interviews."
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "this one is easy level though. What do you think if the hard sql questions?"
                    },
                    {
                        "username": "a_ono",
                        "content": "I totally agree with you..."
                    },
                    {
                        "username": "mohitsinghchandel785",
                        "content": "left join may be more effective heree 😶\n\nselect product_name,year,price from Sales LEFT JOIN Product ON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "juhi90646",
                        "content": "inner join also works\\n"
                    },
                    {
                        "username": "mutnejaanchal3008",
                        "content": "SELECT P.PRODUCT_NAME , S.YEAR , S.PRICE FROM PRODUCT P JOIN SALES S ON \\nP.product_id  = S.product_id ;"
                    }
                ]
            },
            {
                "id": 1930295,
                "content": [
                    {
                        "username": "alishaanjum4992",
                        "content": "# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price\\nfrom product p\\njoin sales s\\non p.product_id = s.product_id"
                    },
                    {
                        "username": "buschl",
                        "content": "Can someone help me understand what\\'s wrong with this answer? All I get is a timeout error\\n\\n\\n\\'\\'\\'select p.product_name, \\n\\ts.year, \\n    s.price\\nFROM product p\\nJOIN sales s\\n\\tON p.product_id = s.product_id\\'\\'\\'"
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "tried several times and then it worked "
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "[@tianwezhao989](/tianwezhao989) the query looks correct. Maybe leetcode was being slow that day."
                    },
                    {
                        "username": "tianwezhao989",
                        "content": "should use sales join product"
                    },
                    {
                        "username": "nasirxia",
                        "content": "It is a safer way to use LEFT JOIN here instead of normal INNER JOIN\\nsince we do not know if all the product_id shown in Sales table exist in\\nthe Product table. LEFT JOIN lets the codes return all the obs in the Sales table"
                    },
                    {
                        "username": "JerryBlank",
                        "content": "[@IgorPykhtin](/IgorPykhtin) Yes! It\\'s foreign key, it has to be in Sales table."
                    },
                    {
                        "username": "Abhilash1111",
                        "content": "thanks man\\n"
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "Sales.product_id is a foreign key. Usually, it assumes the corresponding constraint on value existence in the referenced table."
                    },
                    {
                        "username": "vkrish2",
                        "content": "I get an error stating \"Took too long\" All tests have passed. Not sure what is the optimization I need to do. \\n\\nThanks\\n\\n\\n\\n\\'\\'\\'\\nselect a.Product_Name, b.year, b.price\\nfrom sales b\\njoin product a\\non a.product_id = b.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "JIackau",
                        "content": "How to overcome \"Time Limit Exceeded\", can\\'t submit my answer even if on Run everything works fine."
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "The obvious (and, probably, the only) solution with joining two tables on product_id (I don't post the solution here because of Discussion Rules, but it's already mentioned in other comments) causes Time Limit Exceeded for MS SQL Server. It looks like something is wrong with timeouts for test cases for this task.\nThe same solution for MySQL passes with no issues."
                    },
                    {
                        "username": "shrna09",
                        "content": "The below code got Accepted. \\n---Accepted Code---------\\n\\'\\'\\'\\nselect product_name, year, price\\nfrom Product, Sales\\nwhere Product.product_id=Sales.product_id;\\n\\'\\'\\' -------------\\nBefore trying the above approach, I had tried the below code for executing the same logic but got the status \\'Time Limit Exceeded\\'\\n\\'\\'\\'\\nselect p.product_name, s.year, s.price from Sales s\\njoin product p on p.product_id = s.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "Prince72",
                        "content": "[@saakshi12](/saakshi12) \\nselect p.product_name, s.year, s.price\\nfrom Sales s\\nleft join Product p on s.product_id = p.product_id;\\nthis is accepted .."
                    },
                    {
                        "username": "Satish_10",
                        "content": "I am also getting the same issue. can you tell the difference between both"
                    },
                    {
                        "username": "saakshi12",
                        "content": "same i am also getting the same issue.who did u solved it??\\n"
                    },
                    {
                        "username": "gentooInstaller",
                        "content": "I know I\\'m not a beginner, but even if I learnt DB yesterday, I wouldn\\'t pay for leetcode premium to do a simple join. I\\'m seriously disappointed with the quality of Database questions and the schemas that are used here. They\\'re very inferior compared to the schemas and questions posed in FAANG DE/DS interviews."
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "this one is easy level though. What do you think if the hard sql questions?"
                    },
                    {
                        "username": "a_ono",
                        "content": "I totally agree with you..."
                    },
                    {
                        "username": "mohitsinghchandel785",
                        "content": "left join may be more effective heree 😶\n\nselect product_name,year,price from Sales LEFT JOIN Product ON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "juhi90646",
                        "content": "inner join also works\\n"
                    },
                    {
                        "username": "mutnejaanchal3008",
                        "content": "SELECT P.PRODUCT_NAME , S.YEAR , S.PRICE FROM PRODUCT P JOIN SALES S ON \\nP.product_id  = S.product_id ;"
                    }
                ]
            },
            {
                "id": 1575055,
                "content": [
                    {
                        "username": "alishaanjum4992",
                        "content": "# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price\\nfrom product p\\njoin sales s\\non p.product_id = s.product_id"
                    },
                    {
                        "username": "buschl",
                        "content": "Can someone help me understand what\\'s wrong with this answer? All I get is a timeout error\\n\\n\\n\\'\\'\\'select p.product_name, \\n\\ts.year, \\n    s.price\\nFROM product p\\nJOIN sales s\\n\\tON p.product_id = s.product_id\\'\\'\\'"
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "tried several times and then it worked "
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "[@tianwezhao989](/tianwezhao989) the query looks correct. Maybe leetcode was being slow that day."
                    },
                    {
                        "username": "tianwezhao989",
                        "content": "should use sales join product"
                    },
                    {
                        "username": "nasirxia",
                        "content": "It is a safer way to use LEFT JOIN here instead of normal INNER JOIN\\nsince we do not know if all the product_id shown in Sales table exist in\\nthe Product table. LEFT JOIN lets the codes return all the obs in the Sales table"
                    },
                    {
                        "username": "JerryBlank",
                        "content": "[@IgorPykhtin](/IgorPykhtin) Yes! It\\'s foreign key, it has to be in Sales table."
                    },
                    {
                        "username": "Abhilash1111",
                        "content": "thanks man\\n"
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "Sales.product_id is a foreign key. Usually, it assumes the corresponding constraint on value existence in the referenced table."
                    },
                    {
                        "username": "vkrish2",
                        "content": "I get an error stating \"Took too long\" All tests have passed. Not sure what is the optimization I need to do. \\n\\nThanks\\n\\n\\n\\n\\'\\'\\'\\nselect a.Product_Name, b.year, b.price\\nfrom sales b\\njoin product a\\non a.product_id = b.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "JIackau",
                        "content": "How to overcome \"Time Limit Exceeded\", can\\'t submit my answer even if on Run everything works fine."
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "The obvious (and, probably, the only) solution with joining two tables on product_id (I don't post the solution here because of Discussion Rules, but it's already mentioned in other comments) causes Time Limit Exceeded for MS SQL Server. It looks like something is wrong with timeouts for test cases for this task.\nThe same solution for MySQL passes with no issues."
                    },
                    {
                        "username": "shrna09",
                        "content": "The below code got Accepted. \\n---Accepted Code---------\\n\\'\\'\\'\\nselect product_name, year, price\\nfrom Product, Sales\\nwhere Product.product_id=Sales.product_id;\\n\\'\\'\\' -------------\\nBefore trying the above approach, I had tried the below code for executing the same logic but got the status \\'Time Limit Exceeded\\'\\n\\'\\'\\'\\nselect p.product_name, s.year, s.price from Sales s\\njoin product p on p.product_id = s.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "Prince72",
                        "content": "[@saakshi12](/saakshi12) \\nselect p.product_name, s.year, s.price\\nfrom Sales s\\nleft join Product p on s.product_id = p.product_id;\\nthis is accepted .."
                    },
                    {
                        "username": "Satish_10",
                        "content": "I am also getting the same issue. can you tell the difference between both"
                    },
                    {
                        "username": "saakshi12",
                        "content": "same i am also getting the same issue.who did u solved it??\\n"
                    },
                    {
                        "username": "gentooInstaller",
                        "content": "I know I\\'m not a beginner, but even if I learnt DB yesterday, I wouldn\\'t pay for leetcode premium to do a simple join. I\\'m seriously disappointed with the quality of Database questions and the schemas that are used here. They\\'re very inferior compared to the schemas and questions posed in FAANG DE/DS interviews."
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "this one is easy level though. What do you think if the hard sql questions?"
                    },
                    {
                        "username": "a_ono",
                        "content": "I totally agree with you..."
                    },
                    {
                        "username": "mohitsinghchandel785",
                        "content": "left join may be more effective heree 😶\n\nselect product_name,year,price from Sales LEFT JOIN Product ON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "juhi90646",
                        "content": "inner join also works\\n"
                    },
                    {
                        "username": "mutnejaanchal3008",
                        "content": "SELECT P.PRODUCT_NAME , S.YEAR , S.PRICE FROM PRODUCT P JOIN SALES S ON \\nP.product_id  = S.product_id ;"
                    }
                ]
            },
            {
                "id": 1570382,
                "content": [
                    {
                        "username": "alishaanjum4992",
                        "content": "# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price\\nfrom product p\\njoin sales s\\non p.product_id = s.product_id"
                    },
                    {
                        "username": "buschl",
                        "content": "Can someone help me understand what\\'s wrong with this answer? All I get is a timeout error\\n\\n\\n\\'\\'\\'select p.product_name, \\n\\ts.year, \\n    s.price\\nFROM product p\\nJOIN sales s\\n\\tON p.product_id = s.product_id\\'\\'\\'"
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "tried several times and then it worked "
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "[@tianwezhao989](/tianwezhao989) the query looks correct. Maybe leetcode was being slow that day."
                    },
                    {
                        "username": "tianwezhao989",
                        "content": "should use sales join product"
                    },
                    {
                        "username": "nasirxia",
                        "content": "It is a safer way to use LEFT JOIN here instead of normal INNER JOIN\\nsince we do not know if all the product_id shown in Sales table exist in\\nthe Product table. LEFT JOIN lets the codes return all the obs in the Sales table"
                    },
                    {
                        "username": "JerryBlank",
                        "content": "[@IgorPykhtin](/IgorPykhtin) Yes! It\\'s foreign key, it has to be in Sales table."
                    },
                    {
                        "username": "Abhilash1111",
                        "content": "thanks man\\n"
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "Sales.product_id is a foreign key. Usually, it assumes the corresponding constraint on value existence in the referenced table."
                    },
                    {
                        "username": "vkrish2",
                        "content": "I get an error stating \"Took too long\" All tests have passed. Not sure what is the optimization I need to do. \\n\\nThanks\\n\\n\\n\\n\\'\\'\\'\\nselect a.Product_Name, b.year, b.price\\nfrom sales b\\njoin product a\\non a.product_id = b.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "JIackau",
                        "content": "How to overcome \"Time Limit Exceeded\", can\\'t submit my answer even if on Run everything works fine."
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "The obvious (and, probably, the only) solution with joining two tables on product_id (I don't post the solution here because of Discussion Rules, but it's already mentioned in other comments) causes Time Limit Exceeded for MS SQL Server. It looks like something is wrong with timeouts for test cases for this task.\nThe same solution for MySQL passes with no issues."
                    },
                    {
                        "username": "shrna09",
                        "content": "The below code got Accepted. \\n---Accepted Code---------\\n\\'\\'\\'\\nselect product_name, year, price\\nfrom Product, Sales\\nwhere Product.product_id=Sales.product_id;\\n\\'\\'\\' -------------\\nBefore trying the above approach, I had tried the below code for executing the same logic but got the status \\'Time Limit Exceeded\\'\\n\\'\\'\\'\\nselect p.product_name, s.year, s.price from Sales s\\njoin product p on p.product_id = s.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "Prince72",
                        "content": "[@saakshi12](/saakshi12) \\nselect p.product_name, s.year, s.price\\nfrom Sales s\\nleft join Product p on s.product_id = p.product_id;\\nthis is accepted .."
                    },
                    {
                        "username": "Satish_10",
                        "content": "I am also getting the same issue. can you tell the difference between both"
                    },
                    {
                        "username": "saakshi12",
                        "content": "same i am also getting the same issue.who did u solved it??\\n"
                    },
                    {
                        "username": "gentooInstaller",
                        "content": "I know I\\'m not a beginner, but even if I learnt DB yesterday, I wouldn\\'t pay for leetcode premium to do a simple join. I\\'m seriously disappointed with the quality of Database questions and the schemas that are used here. They\\'re very inferior compared to the schemas and questions posed in FAANG DE/DS interviews."
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "this one is easy level though. What do you think if the hard sql questions?"
                    },
                    {
                        "username": "a_ono",
                        "content": "I totally agree with you..."
                    },
                    {
                        "username": "mohitsinghchandel785",
                        "content": "left join may be more effective heree 😶\n\nselect product_name,year,price from Sales LEFT JOIN Product ON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "juhi90646",
                        "content": "inner join also works\\n"
                    },
                    {
                        "username": "mutnejaanchal3008",
                        "content": "SELECT P.PRODUCT_NAME , S.YEAR , S.PRICE FROM PRODUCT P JOIN SALES S ON \\nP.product_id  = S.product_id ;"
                    }
                ]
            },
            {
                "id": 2072352,
                "content": [
                    {
                        "username": "alishaanjum4992",
                        "content": "# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price\\nfrom product p\\njoin sales s\\non p.product_id = s.product_id"
                    },
                    {
                        "username": "buschl",
                        "content": "Can someone help me understand what\\'s wrong with this answer? All I get is a timeout error\\n\\n\\n\\'\\'\\'select p.product_name, \\n\\ts.year, \\n    s.price\\nFROM product p\\nJOIN sales s\\n\\tON p.product_id = s.product_id\\'\\'\\'"
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "tried several times and then it worked "
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "[@tianwezhao989](/tianwezhao989) the query looks correct. Maybe leetcode was being slow that day."
                    },
                    {
                        "username": "tianwezhao989",
                        "content": "should use sales join product"
                    },
                    {
                        "username": "nasirxia",
                        "content": "It is a safer way to use LEFT JOIN here instead of normal INNER JOIN\\nsince we do not know if all the product_id shown in Sales table exist in\\nthe Product table. LEFT JOIN lets the codes return all the obs in the Sales table"
                    },
                    {
                        "username": "JerryBlank",
                        "content": "[@IgorPykhtin](/IgorPykhtin) Yes! It\\'s foreign key, it has to be in Sales table."
                    },
                    {
                        "username": "Abhilash1111",
                        "content": "thanks man\\n"
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "Sales.product_id is a foreign key. Usually, it assumes the corresponding constraint on value existence in the referenced table."
                    },
                    {
                        "username": "vkrish2",
                        "content": "I get an error stating \"Took too long\" All tests have passed. Not sure what is the optimization I need to do. \\n\\nThanks\\n\\n\\n\\n\\'\\'\\'\\nselect a.Product_Name, b.year, b.price\\nfrom sales b\\njoin product a\\non a.product_id = b.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "JIackau",
                        "content": "How to overcome \"Time Limit Exceeded\", can\\'t submit my answer even if on Run everything works fine."
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "The obvious (and, probably, the only) solution with joining two tables on product_id (I don't post the solution here because of Discussion Rules, but it's already mentioned in other comments) causes Time Limit Exceeded for MS SQL Server. It looks like something is wrong with timeouts for test cases for this task.\nThe same solution for MySQL passes with no issues."
                    },
                    {
                        "username": "shrna09",
                        "content": "The below code got Accepted. \\n---Accepted Code---------\\n\\'\\'\\'\\nselect product_name, year, price\\nfrom Product, Sales\\nwhere Product.product_id=Sales.product_id;\\n\\'\\'\\' -------------\\nBefore trying the above approach, I had tried the below code for executing the same logic but got the status \\'Time Limit Exceeded\\'\\n\\'\\'\\'\\nselect p.product_name, s.year, s.price from Sales s\\njoin product p on p.product_id = s.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "Prince72",
                        "content": "[@saakshi12](/saakshi12) \\nselect p.product_name, s.year, s.price\\nfrom Sales s\\nleft join Product p on s.product_id = p.product_id;\\nthis is accepted .."
                    },
                    {
                        "username": "Satish_10",
                        "content": "I am also getting the same issue. can you tell the difference between both"
                    },
                    {
                        "username": "saakshi12",
                        "content": "same i am also getting the same issue.who did u solved it??\\n"
                    },
                    {
                        "username": "gentooInstaller",
                        "content": "I know I\\'m not a beginner, but even if I learnt DB yesterday, I wouldn\\'t pay for leetcode premium to do a simple join. I\\'m seriously disappointed with the quality of Database questions and the schemas that are used here. They\\'re very inferior compared to the schemas and questions posed in FAANG DE/DS interviews."
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "this one is easy level though. What do you think if the hard sql questions?"
                    },
                    {
                        "username": "a_ono",
                        "content": "I totally agree with you..."
                    },
                    {
                        "username": "mohitsinghchandel785",
                        "content": "left join may be more effective heree 😶\n\nselect product_name,year,price from Sales LEFT JOIN Product ON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "juhi90646",
                        "content": "inner join also works\\n"
                    },
                    {
                        "username": "mutnejaanchal3008",
                        "content": "SELECT P.PRODUCT_NAME , S.YEAR , S.PRICE FROM PRODUCT P JOIN SALES S ON \\nP.product_id  = S.product_id ;"
                    }
                ]
            },
            {
                "id": 2060633,
                "content": [
                    {
                        "username": "alishaanjum4992",
                        "content": "# Write your MySQL query statement below\\nselect p.product_name, s.year, s.price\\nfrom product p\\njoin sales s\\non p.product_id = s.product_id"
                    },
                    {
                        "username": "buschl",
                        "content": "Can someone help me understand what\\'s wrong with this answer? All I get is a timeout error\\n\\n\\n\\'\\'\\'select p.product_name, \\n\\ts.year, \\n    s.price\\nFROM product p\\nJOIN sales s\\n\\tON p.product_id = s.product_id\\'\\'\\'"
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "tried several times and then it worked "
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "[@tianwezhao989](/tianwezhao989) the query looks correct. Maybe leetcode was being slow that day."
                    },
                    {
                        "username": "tianwezhao989",
                        "content": "should use sales join product"
                    },
                    {
                        "username": "nasirxia",
                        "content": "It is a safer way to use LEFT JOIN here instead of normal INNER JOIN\\nsince we do not know if all the product_id shown in Sales table exist in\\nthe Product table. LEFT JOIN lets the codes return all the obs in the Sales table"
                    },
                    {
                        "username": "JerryBlank",
                        "content": "[@IgorPykhtin](/IgorPykhtin) Yes! It\\'s foreign key, it has to be in Sales table."
                    },
                    {
                        "username": "Abhilash1111",
                        "content": "thanks man\\n"
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "Sales.product_id is a foreign key. Usually, it assumes the corresponding constraint on value existence in the referenced table."
                    },
                    {
                        "username": "vkrish2",
                        "content": "I get an error stating \"Took too long\" All tests have passed. Not sure what is the optimization I need to do. \\n\\nThanks\\n\\n\\n\\n\\'\\'\\'\\nselect a.Product_Name, b.year, b.price\\nfrom sales b\\njoin product a\\non a.product_id = b.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "JIackau",
                        "content": "How to overcome \"Time Limit Exceeded\", can\\'t submit my answer even if on Run everything works fine."
                    },
                    {
                        "username": "IgorPykhtin",
                        "content": "The obvious (and, probably, the only) solution with joining two tables on product_id (I don't post the solution here because of Discussion Rules, but it's already mentioned in other comments) causes Time Limit Exceeded for MS SQL Server. It looks like something is wrong with timeouts for test cases for this task.\nThe same solution for MySQL passes with no issues."
                    },
                    {
                        "username": "shrna09",
                        "content": "The below code got Accepted. \\n---Accepted Code---------\\n\\'\\'\\'\\nselect product_name, year, price\\nfrom Product, Sales\\nwhere Product.product_id=Sales.product_id;\\n\\'\\'\\' -------------\\nBefore trying the above approach, I had tried the below code for executing the same logic but got the status \\'Time Limit Exceeded\\'\\n\\'\\'\\'\\nselect p.product_name, s.year, s.price from Sales s\\njoin product p on p.product_id = s.product_id\\n\\'\\'\\'"
                    },
                    {
                        "username": "Prince72",
                        "content": "[@saakshi12](/saakshi12) \\nselect p.product_name, s.year, s.price\\nfrom Sales s\\nleft join Product p on s.product_id = p.product_id;\\nthis is accepted .."
                    },
                    {
                        "username": "Satish_10",
                        "content": "I am also getting the same issue. can you tell the difference between both"
                    },
                    {
                        "username": "saakshi12",
                        "content": "same i am also getting the same issue.who did u solved it??\\n"
                    },
                    {
                        "username": "gentooInstaller",
                        "content": "I know I\\'m not a beginner, but even if I learnt DB yesterday, I wouldn\\'t pay for leetcode premium to do a simple join. I\\'m seriously disappointed with the quality of Database questions and the schemas that are used here. They\\'re very inferior compared to the schemas and questions posed in FAANG DE/DS interviews."
                    },
                    {
                        "username": "TGBBSZWHWDLANZP",
                        "content": "this one is easy level though. What do you think if the hard sql questions?"
                    },
                    {
                        "username": "a_ono",
                        "content": "I totally agree with you..."
                    },
                    {
                        "username": "mohitsinghchandel785",
                        "content": "left join may be more effective heree 😶\n\nselect product_name,year,price from Sales LEFT JOIN Product ON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "juhi90646",
                        "content": "inner join also works\\n"
                    },
                    {
                        "username": "mutnejaanchal3008",
                        "content": "SELECT P.PRODUCT_NAME , S.YEAR , S.PRICE FROM PRODUCT P JOIN SALES S ON \\nP.product_id  = S.product_id ;"
                    }
                ]
            },
            {
                "id": 1904499,
                "content": [
                    {
                        "username": "MobiusX",
                        "content": "oracle submission generates a runtime error.\\nhas anyone else seen this?"
                    },
                    {
                        "username": "vhadalgi",
                        "content": "\\nselect distinct product_name,year,price from Sales JOIN Product\\nON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "reduardorafa",
                        "content": "SELECT product.product_name,sales.year,sales.price\\nFROM sales\\nLEFT JOIN product\\nON sales.product_id=product.product_id"
                    },
                    {
                        "username": "LeetExplorer",
                        "content": "Easy question of Inner join\\nSelect product_name, year, price\\nfrom Sales\\ninner join Product\\non Sales.product_id = Product.product_id"
                    },
                    {
                        "username": "user7779KH",
                        "content": "\"Note that the price is per unit.\" statement is a bit confusing imo. i\\'ve thought i should add price * quantity as a price column in output."
                    },
                    {
                        "username": "ibram-reda",
                        "content": "It Keeps Gives Me a Popup Error message with text When I target **MS SQL SERVER**\n> Something Went wrong with the Text case\n\nwhen I target **MySQL** with the same code, it Gets Accepted"
                    },
                    {
                        "username": "yuganshjindal35",
                        "content": "I have written this query \\n\\nSELECT product_name,year,price FROM sales INNER JOIN product ON sales.product_id = product.product_id;\\n\\nWhy am I facing issue of Time Limit Exceeded? Can anyone specify the solution to this?"
                    },
                    {
                        "username": "ibram-reda",
                        "content": "**Ms SQL server** have a problem ! Try to use **MYSQL** Instead"
                    },
                    {
                        "username": "Barri96",
                        "content": "Se tiene que hacer un left join \\n\\nSELECT b. product_name, a. year, a. price FROM sales a left join product b on a. product_id = b. product_id;"
                    },
                    {
                        "username": "vaishaliranjan",
                        "content": "SELECT pro.product_name, sal.year,sal.price\\nFROM Sales as sal\\ninner join\\nProduct as pro on sal.product_id=pro.product_id\\norder by pro.product_name"
                    },
                    {
                        "username": "galmaxoquraishi",
                        "content": "select p.product_name, s.year, s.price from Sales s\\ninner join Product p \\non s.product_id  = p.product_id\\norder by p.product_name  ;"
                    }
                ]
            },
            {
                "id": 1576416,
                "content": [
                    {
                        "username": "MobiusX",
                        "content": "oracle submission generates a runtime error.\\nhas anyone else seen this?"
                    },
                    {
                        "username": "vhadalgi",
                        "content": "\\nselect distinct product_name,year,price from Sales JOIN Product\\nON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "reduardorafa",
                        "content": "SELECT product.product_name,sales.year,sales.price\\nFROM sales\\nLEFT JOIN product\\nON sales.product_id=product.product_id"
                    },
                    {
                        "username": "LeetExplorer",
                        "content": "Easy question of Inner join\\nSelect product_name, year, price\\nfrom Sales\\ninner join Product\\non Sales.product_id = Product.product_id"
                    },
                    {
                        "username": "user7779KH",
                        "content": "\"Note that the price is per unit.\" statement is a bit confusing imo. i\\'ve thought i should add price * quantity as a price column in output."
                    },
                    {
                        "username": "ibram-reda",
                        "content": "It Keeps Gives Me a Popup Error message with text When I target **MS SQL SERVER**\n> Something Went wrong with the Text case\n\nwhen I target **MySQL** with the same code, it Gets Accepted"
                    },
                    {
                        "username": "yuganshjindal35",
                        "content": "I have written this query \\n\\nSELECT product_name,year,price FROM sales INNER JOIN product ON sales.product_id = product.product_id;\\n\\nWhy am I facing issue of Time Limit Exceeded? Can anyone specify the solution to this?"
                    },
                    {
                        "username": "ibram-reda",
                        "content": "**Ms SQL server** have a problem ! Try to use **MYSQL** Instead"
                    },
                    {
                        "username": "Barri96",
                        "content": "Se tiene que hacer un left join \\n\\nSELECT b. product_name, a. year, a. price FROM sales a left join product b on a. product_id = b. product_id;"
                    },
                    {
                        "username": "vaishaliranjan",
                        "content": "SELECT pro.product_name, sal.year,sal.price\\nFROM Sales as sal\\ninner join\\nProduct as pro on sal.product_id=pro.product_id\\norder by pro.product_name"
                    },
                    {
                        "username": "galmaxoquraishi",
                        "content": "select p.product_name, s.year, s.price from Sales s\\ninner join Product p \\non s.product_id  = p.product_id\\norder by p.product_name  ;"
                    }
                ]
            },
            {
                "id": 2059249,
                "content": [
                    {
                        "username": "MobiusX",
                        "content": "oracle submission generates a runtime error.\\nhas anyone else seen this?"
                    },
                    {
                        "username": "vhadalgi",
                        "content": "\\nselect distinct product_name,year,price from Sales JOIN Product\\nON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "reduardorafa",
                        "content": "SELECT product.product_name,sales.year,sales.price\\nFROM sales\\nLEFT JOIN product\\nON sales.product_id=product.product_id"
                    },
                    {
                        "username": "LeetExplorer",
                        "content": "Easy question of Inner join\\nSelect product_name, year, price\\nfrom Sales\\ninner join Product\\non Sales.product_id = Product.product_id"
                    },
                    {
                        "username": "user7779KH",
                        "content": "\"Note that the price is per unit.\" statement is a bit confusing imo. i\\'ve thought i should add price * quantity as a price column in output."
                    },
                    {
                        "username": "ibram-reda",
                        "content": "It Keeps Gives Me a Popup Error message with text When I target **MS SQL SERVER**\n> Something Went wrong with the Text case\n\nwhen I target **MySQL** with the same code, it Gets Accepted"
                    },
                    {
                        "username": "yuganshjindal35",
                        "content": "I have written this query \\n\\nSELECT product_name,year,price FROM sales INNER JOIN product ON sales.product_id = product.product_id;\\n\\nWhy am I facing issue of Time Limit Exceeded? Can anyone specify the solution to this?"
                    },
                    {
                        "username": "ibram-reda",
                        "content": "**Ms SQL server** have a problem ! Try to use **MYSQL** Instead"
                    },
                    {
                        "username": "Barri96",
                        "content": "Se tiene que hacer un left join \\n\\nSELECT b. product_name, a. year, a. price FROM sales a left join product b on a. product_id = b. product_id;"
                    },
                    {
                        "username": "vaishaliranjan",
                        "content": "SELECT pro.product_name, sal.year,sal.price\\nFROM Sales as sal\\ninner join\\nProduct as pro on sal.product_id=pro.product_id\\norder by pro.product_name"
                    },
                    {
                        "username": "galmaxoquraishi",
                        "content": "select p.product_name, s.year, s.price from Sales s\\ninner join Product p \\non s.product_id  = p.product_id\\norder by p.product_name  ;"
                    }
                ]
            },
            {
                "id": 2055574,
                "content": [
                    {
                        "username": "MobiusX",
                        "content": "oracle submission generates a runtime error.\\nhas anyone else seen this?"
                    },
                    {
                        "username": "vhadalgi",
                        "content": "\\nselect distinct product_name,year,price from Sales JOIN Product\\nON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "reduardorafa",
                        "content": "SELECT product.product_name,sales.year,sales.price\\nFROM sales\\nLEFT JOIN product\\nON sales.product_id=product.product_id"
                    },
                    {
                        "username": "LeetExplorer",
                        "content": "Easy question of Inner join\\nSelect product_name, year, price\\nfrom Sales\\ninner join Product\\non Sales.product_id = Product.product_id"
                    },
                    {
                        "username": "user7779KH",
                        "content": "\"Note that the price is per unit.\" statement is a bit confusing imo. i\\'ve thought i should add price * quantity as a price column in output."
                    },
                    {
                        "username": "ibram-reda",
                        "content": "It Keeps Gives Me a Popup Error message with text When I target **MS SQL SERVER**\n> Something Went wrong with the Text case\n\nwhen I target **MySQL** with the same code, it Gets Accepted"
                    },
                    {
                        "username": "yuganshjindal35",
                        "content": "I have written this query \\n\\nSELECT product_name,year,price FROM sales INNER JOIN product ON sales.product_id = product.product_id;\\n\\nWhy am I facing issue of Time Limit Exceeded? Can anyone specify the solution to this?"
                    },
                    {
                        "username": "ibram-reda",
                        "content": "**Ms SQL server** have a problem ! Try to use **MYSQL** Instead"
                    },
                    {
                        "username": "Barri96",
                        "content": "Se tiene que hacer un left join \\n\\nSELECT b. product_name, a. year, a. price FROM sales a left join product b on a. product_id = b. product_id;"
                    },
                    {
                        "username": "vaishaliranjan",
                        "content": "SELECT pro.product_name, sal.year,sal.price\\nFROM Sales as sal\\ninner join\\nProduct as pro on sal.product_id=pro.product_id\\norder by pro.product_name"
                    },
                    {
                        "username": "galmaxoquraishi",
                        "content": "select p.product_name, s.year, s.price from Sales s\\ninner join Product p \\non s.product_id  = p.product_id\\norder by p.product_name  ;"
                    }
                ]
            },
            {
                "id": 2055177,
                "content": [
                    {
                        "username": "MobiusX",
                        "content": "oracle submission generates a runtime error.\\nhas anyone else seen this?"
                    },
                    {
                        "username": "vhadalgi",
                        "content": "\\nselect distinct product_name,year,price from Sales JOIN Product\\nON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "reduardorafa",
                        "content": "SELECT product.product_name,sales.year,sales.price\\nFROM sales\\nLEFT JOIN product\\nON sales.product_id=product.product_id"
                    },
                    {
                        "username": "LeetExplorer",
                        "content": "Easy question of Inner join\\nSelect product_name, year, price\\nfrom Sales\\ninner join Product\\non Sales.product_id = Product.product_id"
                    },
                    {
                        "username": "user7779KH",
                        "content": "\"Note that the price is per unit.\" statement is a bit confusing imo. i\\'ve thought i should add price * quantity as a price column in output."
                    },
                    {
                        "username": "ibram-reda",
                        "content": "It Keeps Gives Me a Popup Error message with text When I target **MS SQL SERVER**\n> Something Went wrong with the Text case\n\nwhen I target **MySQL** with the same code, it Gets Accepted"
                    },
                    {
                        "username": "yuganshjindal35",
                        "content": "I have written this query \\n\\nSELECT product_name,year,price FROM sales INNER JOIN product ON sales.product_id = product.product_id;\\n\\nWhy am I facing issue of Time Limit Exceeded? Can anyone specify the solution to this?"
                    },
                    {
                        "username": "ibram-reda",
                        "content": "**Ms SQL server** have a problem ! Try to use **MYSQL** Instead"
                    },
                    {
                        "username": "Barri96",
                        "content": "Se tiene que hacer un left join \\n\\nSELECT b. product_name, a. year, a. price FROM sales a left join product b on a. product_id = b. product_id;"
                    },
                    {
                        "username": "vaishaliranjan",
                        "content": "SELECT pro.product_name, sal.year,sal.price\\nFROM Sales as sal\\ninner join\\nProduct as pro on sal.product_id=pro.product_id\\norder by pro.product_name"
                    },
                    {
                        "username": "galmaxoquraishi",
                        "content": "select p.product_name, s.year, s.price from Sales s\\ninner join Product p \\non s.product_id  = p.product_id\\norder by p.product_name  ;"
                    }
                ]
            },
            {
                "id": 2038461,
                "content": [
                    {
                        "username": "MobiusX",
                        "content": "oracle submission generates a runtime error.\\nhas anyone else seen this?"
                    },
                    {
                        "username": "vhadalgi",
                        "content": "\\nselect distinct product_name,year,price from Sales JOIN Product\\nON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "reduardorafa",
                        "content": "SELECT product.product_name,sales.year,sales.price\\nFROM sales\\nLEFT JOIN product\\nON sales.product_id=product.product_id"
                    },
                    {
                        "username": "LeetExplorer",
                        "content": "Easy question of Inner join\\nSelect product_name, year, price\\nfrom Sales\\ninner join Product\\non Sales.product_id = Product.product_id"
                    },
                    {
                        "username": "user7779KH",
                        "content": "\"Note that the price is per unit.\" statement is a bit confusing imo. i\\'ve thought i should add price * quantity as a price column in output."
                    },
                    {
                        "username": "ibram-reda",
                        "content": "It Keeps Gives Me a Popup Error message with text When I target **MS SQL SERVER**\n> Something Went wrong with the Text case\n\nwhen I target **MySQL** with the same code, it Gets Accepted"
                    },
                    {
                        "username": "yuganshjindal35",
                        "content": "I have written this query \\n\\nSELECT product_name,year,price FROM sales INNER JOIN product ON sales.product_id = product.product_id;\\n\\nWhy am I facing issue of Time Limit Exceeded? Can anyone specify the solution to this?"
                    },
                    {
                        "username": "ibram-reda",
                        "content": "**Ms SQL server** have a problem ! Try to use **MYSQL** Instead"
                    },
                    {
                        "username": "Barri96",
                        "content": "Se tiene que hacer un left join \\n\\nSELECT b. product_name, a. year, a. price FROM sales a left join product b on a. product_id = b. product_id;"
                    },
                    {
                        "username": "vaishaliranjan",
                        "content": "SELECT pro.product_name, sal.year,sal.price\\nFROM Sales as sal\\ninner join\\nProduct as pro on sal.product_id=pro.product_id\\norder by pro.product_name"
                    },
                    {
                        "username": "galmaxoquraishi",
                        "content": "select p.product_name, s.year, s.price from Sales s\\ninner join Product p \\non s.product_id  = p.product_id\\norder by p.product_name  ;"
                    }
                ]
            },
            {
                "id": 2035159,
                "content": [
                    {
                        "username": "MobiusX",
                        "content": "oracle submission generates a runtime error.\\nhas anyone else seen this?"
                    },
                    {
                        "username": "vhadalgi",
                        "content": "\\nselect distinct product_name,year,price from Sales JOIN Product\\nON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "reduardorafa",
                        "content": "SELECT product.product_name,sales.year,sales.price\\nFROM sales\\nLEFT JOIN product\\nON sales.product_id=product.product_id"
                    },
                    {
                        "username": "LeetExplorer",
                        "content": "Easy question of Inner join\\nSelect product_name, year, price\\nfrom Sales\\ninner join Product\\non Sales.product_id = Product.product_id"
                    },
                    {
                        "username": "user7779KH",
                        "content": "\"Note that the price is per unit.\" statement is a bit confusing imo. i\\'ve thought i should add price * quantity as a price column in output."
                    },
                    {
                        "username": "ibram-reda",
                        "content": "It Keeps Gives Me a Popup Error message with text When I target **MS SQL SERVER**\n> Something Went wrong with the Text case\n\nwhen I target **MySQL** with the same code, it Gets Accepted"
                    },
                    {
                        "username": "yuganshjindal35",
                        "content": "I have written this query \\n\\nSELECT product_name,year,price FROM sales INNER JOIN product ON sales.product_id = product.product_id;\\n\\nWhy am I facing issue of Time Limit Exceeded? Can anyone specify the solution to this?"
                    },
                    {
                        "username": "ibram-reda",
                        "content": "**Ms SQL server** have a problem ! Try to use **MYSQL** Instead"
                    },
                    {
                        "username": "Barri96",
                        "content": "Se tiene que hacer un left join \\n\\nSELECT b. product_name, a. year, a. price FROM sales a left join product b on a. product_id = b. product_id;"
                    },
                    {
                        "username": "vaishaliranjan",
                        "content": "SELECT pro.product_name, sal.year,sal.price\\nFROM Sales as sal\\ninner join\\nProduct as pro on sal.product_id=pro.product_id\\norder by pro.product_name"
                    },
                    {
                        "username": "galmaxoquraishi",
                        "content": "select p.product_name, s.year, s.price from Sales s\\ninner join Product p \\non s.product_id  = p.product_id\\norder by p.product_name  ;"
                    }
                ]
            },
            {
                "id": 2017215,
                "content": [
                    {
                        "username": "MobiusX",
                        "content": "oracle submission generates a runtime error.\\nhas anyone else seen this?"
                    },
                    {
                        "username": "vhadalgi",
                        "content": "\\nselect distinct product_name,year,price from Sales JOIN Product\\nON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "reduardorafa",
                        "content": "SELECT product.product_name,sales.year,sales.price\\nFROM sales\\nLEFT JOIN product\\nON sales.product_id=product.product_id"
                    },
                    {
                        "username": "LeetExplorer",
                        "content": "Easy question of Inner join\\nSelect product_name, year, price\\nfrom Sales\\ninner join Product\\non Sales.product_id = Product.product_id"
                    },
                    {
                        "username": "user7779KH",
                        "content": "\"Note that the price is per unit.\" statement is a bit confusing imo. i\\'ve thought i should add price * quantity as a price column in output."
                    },
                    {
                        "username": "ibram-reda",
                        "content": "It Keeps Gives Me a Popup Error message with text When I target **MS SQL SERVER**\n> Something Went wrong with the Text case\n\nwhen I target **MySQL** with the same code, it Gets Accepted"
                    },
                    {
                        "username": "yuganshjindal35",
                        "content": "I have written this query \\n\\nSELECT product_name,year,price FROM sales INNER JOIN product ON sales.product_id = product.product_id;\\n\\nWhy am I facing issue of Time Limit Exceeded? Can anyone specify the solution to this?"
                    },
                    {
                        "username": "ibram-reda",
                        "content": "**Ms SQL server** have a problem ! Try to use **MYSQL** Instead"
                    },
                    {
                        "username": "Barri96",
                        "content": "Se tiene que hacer un left join \\n\\nSELECT b. product_name, a. year, a. price FROM sales a left join product b on a. product_id = b. product_id;"
                    },
                    {
                        "username": "vaishaliranjan",
                        "content": "SELECT pro.product_name, sal.year,sal.price\\nFROM Sales as sal\\ninner join\\nProduct as pro on sal.product_id=pro.product_id\\norder by pro.product_name"
                    },
                    {
                        "username": "galmaxoquraishi",
                        "content": "select p.product_name, s.year, s.price from Sales s\\ninner join Product p \\non s.product_id  = p.product_id\\norder by p.product_name  ;"
                    }
                ]
            },
            {
                "id": 2013372,
                "content": [
                    {
                        "username": "MobiusX",
                        "content": "oracle submission generates a runtime error.\\nhas anyone else seen this?"
                    },
                    {
                        "username": "vhadalgi",
                        "content": "\\nselect distinct product_name,year,price from Sales JOIN Product\\nON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "reduardorafa",
                        "content": "SELECT product.product_name,sales.year,sales.price\\nFROM sales\\nLEFT JOIN product\\nON sales.product_id=product.product_id"
                    },
                    {
                        "username": "LeetExplorer",
                        "content": "Easy question of Inner join\\nSelect product_name, year, price\\nfrom Sales\\ninner join Product\\non Sales.product_id = Product.product_id"
                    },
                    {
                        "username": "user7779KH",
                        "content": "\"Note that the price is per unit.\" statement is a bit confusing imo. i\\'ve thought i should add price * quantity as a price column in output."
                    },
                    {
                        "username": "ibram-reda",
                        "content": "It Keeps Gives Me a Popup Error message with text When I target **MS SQL SERVER**\n> Something Went wrong with the Text case\n\nwhen I target **MySQL** with the same code, it Gets Accepted"
                    },
                    {
                        "username": "yuganshjindal35",
                        "content": "I have written this query \\n\\nSELECT product_name,year,price FROM sales INNER JOIN product ON sales.product_id = product.product_id;\\n\\nWhy am I facing issue of Time Limit Exceeded? Can anyone specify the solution to this?"
                    },
                    {
                        "username": "ibram-reda",
                        "content": "**Ms SQL server** have a problem ! Try to use **MYSQL** Instead"
                    },
                    {
                        "username": "Barri96",
                        "content": "Se tiene que hacer un left join \\n\\nSELECT b. product_name, a. year, a. price FROM sales a left join product b on a. product_id = b. product_id;"
                    },
                    {
                        "username": "vaishaliranjan",
                        "content": "SELECT pro.product_name, sal.year,sal.price\\nFROM Sales as sal\\ninner join\\nProduct as pro on sal.product_id=pro.product_id\\norder by pro.product_name"
                    },
                    {
                        "username": "galmaxoquraishi",
                        "content": "select p.product_name, s.year, s.price from Sales s\\ninner join Product p \\non s.product_id  = p.product_id\\norder by p.product_name  ;"
                    }
                ]
            },
            {
                "id": 2006921,
                "content": [
                    {
                        "username": "MobiusX",
                        "content": "oracle submission generates a runtime error.\\nhas anyone else seen this?"
                    },
                    {
                        "username": "vhadalgi",
                        "content": "\\nselect distinct product_name,year,price from Sales JOIN Product\\nON Sales.product_id=Product.product_id"
                    },
                    {
                        "username": "reduardorafa",
                        "content": "SELECT product.product_name,sales.year,sales.price\\nFROM sales\\nLEFT JOIN product\\nON sales.product_id=product.product_id"
                    },
                    {
                        "username": "LeetExplorer",
                        "content": "Easy question of Inner join\\nSelect product_name, year, price\\nfrom Sales\\ninner join Product\\non Sales.product_id = Product.product_id"
                    },
                    {
                        "username": "user7779KH",
                        "content": "\"Note that the price is per unit.\" statement is a bit confusing imo. i\\'ve thought i should add price * quantity as a price column in output."
                    },
                    {
                        "username": "ibram-reda",
                        "content": "It Keeps Gives Me a Popup Error message with text When I target **MS SQL SERVER**\n> Something Went wrong with the Text case\n\nwhen I target **MySQL** with the same code, it Gets Accepted"
                    },
                    {
                        "username": "yuganshjindal35",
                        "content": "I have written this query \\n\\nSELECT product_name,year,price FROM sales INNER JOIN product ON sales.product_id = product.product_id;\\n\\nWhy am I facing issue of Time Limit Exceeded? Can anyone specify the solution to this?"
                    },
                    {
                        "username": "ibram-reda",
                        "content": "**Ms SQL server** have a problem ! Try to use **MYSQL** Instead"
                    },
                    {
                        "username": "Barri96",
                        "content": "Se tiene que hacer un left join \\n\\nSELECT b. product_name, a. year, a. price FROM sales a left join product b on a. product_id = b. product_id;"
                    },
                    {
                        "username": "vaishaliranjan",
                        "content": "SELECT pro.product_name, sal.year,sal.price\\nFROM Sales as sal\\ninner join\\nProduct as pro on sal.product_id=pro.product_id\\norder by pro.product_name"
                    },
                    {
                        "username": "galmaxoquraishi",
                        "content": "select p.product_name, s.year, s.price from Sales s\\ninner join Product p \\non s.product_id  = p.product_id\\norder by p.product_name  ;"
                    }
                ]
            }
        ]
    },
    {
        "title": "Product Sales Analysis II",
        "question_content": null,
        "solutions": [],
        "discussions": [
            {
                "id": 1565150,
                "content": [
                    {
                        "username": "qifeicheng",
                        "content": "It seems that the second product table is useless..."
                    },
                    {
                        "username": "karanjbhargava",
                        "content": "The question wants the total sold for EVERY product ID, but then doesn\\'t use a LEFT JOIN on Product.  Ex: Samsung sold 0 items but it still has a product ID so why doesn\\'t the test case account for that?  It should say [300, 0] but instead ignores product_id 300 entirely.  Seems like a poorly created question/test case set.\\n"
                    },
                    {
                        "username": "elsah",
                        "content": "This is the input used in the test:\\n`{\"headers\":{\"Sales\":[\"sale_id\",\"product_id\",\"year\",\"quantity\",\"price\"],\"Product\":[\"product_id\",\"product_name\"]},\"rows\":{\"Sales\":[[1,100,2008,10,5000],[2,100,2009,12,5000],[7,200,2011,15,9000]],\"Product\":[[100,\"Nokia\"],[200,\"Apple\"],[300,\"Samsung\"]]}}`\\n\\nThe expected output from the test is:\\n{\"headers\":[\"product_id\",\"total_quantity\"],\"values\":[[100,22],[200,15]]}\\n\\nHowever, we can see that product_id 300 does not have any sale. Usually it is expected to show product_id 300 with 0 sales when there is no sale. I\\'ve seen this type of edge cases many times before in my interviews.\\n\\n"
                    },
                    {
                        "username": "nishabalu",
                        "content": "The question asks for EVERY product_id. All product_ids are in Product table.\\n\\nselect p.product_id, coalesce(sum(s.quantity),0) as total_quantity\\nfrom Product p\\nleft outer join Sales s\\non p.product_id = s.product_id\\ngroup by p.product_id;"
                    },
                    {
                        "username": "utkarsh027",
                        "content": " 'select s.product_id , sum(s.quantity) as total_quantity from sales s\ngroup by s.product_id;'\n\n\n\n\nIf u like please upvote "
                    },
                    {
                        "username": "Kutima1998",
                        "content": " `your inline code...your inline code...`\\nSELECT S.PRODUCT_ID, SUM(S.QUANTITY) AS TOTAL_QUANTITY\\nFROM SALES AS S\\nJOIN PRODUCT AS P\\nON S.PRODUCT_ID = P.PRODUCT_ID\\nGROUP BY S.PRODUCT_ID"
                    }
                ]
            },
            {
                "id": 1573336,
                "content": [
                    {
                        "username": "qifeicheng",
                        "content": "It seems that the second product table is useless..."
                    },
                    {
                        "username": "karanjbhargava",
                        "content": "The question wants the total sold for EVERY product ID, but then doesn\\'t use a LEFT JOIN on Product.  Ex: Samsung sold 0 items but it still has a product ID so why doesn\\'t the test case account for that?  It should say [300, 0] but instead ignores product_id 300 entirely.  Seems like a poorly created question/test case set.\\n"
                    },
                    {
                        "username": "elsah",
                        "content": "This is the input used in the test:\\n`{\"headers\":{\"Sales\":[\"sale_id\",\"product_id\",\"year\",\"quantity\",\"price\"],\"Product\":[\"product_id\",\"product_name\"]},\"rows\":{\"Sales\":[[1,100,2008,10,5000],[2,100,2009,12,5000],[7,200,2011,15,9000]],\"Product\":[[100,\"Nokia\"],[200,\"Apple\"],[300,\"Samsung\"]]}}`\\n\\nThe expected output from the test is:\\n{\"headers\":[\"product_id\",\"total_quantity\"],\"values\":[[100,22],[200,15]]}\\n\\nHowever, we can see that product_id 300 does not have any sale. Usually it is expected to show product_id 300 with 0 sales when there is no sale. I\\'ve seen this type of edge cases many times before in my interviews.\\n\\n"
                    },
                    {
                        "username": "nishabalu",
                        "content": "The question asks for EVERY product_id. All product_ids are in Product table.\\n\\nselect p.product_id, coalesce(sum(s.quantity),0) as total_quantity\\nfrom Product p\\nleft outer join Sales s\\non p.product_id = s.product_id\\ngroup by p.product_id;"
                    },
                    {
                        "username": "utkarsh027",
                        "content": " 'select s.product_id , sum(s.quantity) as total_quantity from sales s\ngroup by s.product_id;'\n\n\n\n\nIf u like please upvote "
                    },
                    {
                        "username": "Kutima1998",
                        "content": " `your inline code...your inline code...`\\nSELECT S.PRODUCT_ID, SUM(S.QUANTITY) AS TOTAL_QUANTITY\\nFROM SALES AS S\\nJOIN PRODUCT AS P\\nON S.PRODUCT_ID = P.PRODUCT_ID\\nGROUP BY S.PRODUCT_ID"
                    }
                ]
            },
            {
                "id": 1569822,
                "content": [
                    {
                        "username": "qifeicheng",
                        "content": "It seems that the second product table is useless..."
                    },
                    {
                        "username": "karanjbhargava",
                        "content": "The question wants the total sold for EVERY product ID, but then doesn\\'t use a LEFT JOIN on Product.  Ex: Samsung sold 0 items but it still has a product ID so why doesn\\'t the test case account for that?  It should say [300, 0] but instead ignores product_id 300 entirely.  Seems like a poorly created question/test case set.\\n"
                    },
                    {
                        "username": "elsah",
                        "content": "This is the input used in the test:\\n`{\"headers\":{\"Sales\":[\"sale_id\",\"product_id\",\"year\",\"quantity\",\"price\"],\"Product\":[\"product_id\",\"product_name\"]},\"rows\":{\"Sales\":[[1,100,2008,10,5000],[2,100,2009,12,5000],[7,200,2011,15,9000]],\"Product\":[[100,\"Nokia\"],[200,\"Apple\"],[300,\"Samsung\"]]}}`\\n\\nThe expected output from the test is:\\n{\"headers\":[\"product_id\",\"total_quantity\"],\"values\":[[100,22],[200,15]]}\\n\\nHowever, we can see that product_id 300 does not have any sale. Usually it is expected to show product_id 300 with 0 sales when there is no sale. I\\'ve seen this type of edge cases many times before in my interviews.\\n\\n"
                    },
                    {
                        "username": "nishabalu",
                        "content": "The question asks for EVERY product_id. All product_ids are in Product table.\\n\\nselect p.product_id, coalesce(sum(s.quantity),0) as total_quantity\\nfrom Product p\\nleft outer join Sales s\\non p.product_id = s.product_id\\ngroup by p.product_id;"
                    },
                    {
                        "username": "utkarsh027",
                        "content": " 'select s.product_id , sum(s.quantity) as total_quantity from sales s\ngroup by s.product_id;'\n\n\n\n\nIf u like please upvote "
                    },
                    {
                        "username": "Kutima1998",
                        "content": " `your inline code...your inline code...`\\nSELECT S.PRODUCT_ID, SUM(S.QUANTITY) AS TOTAL_QUANTITY\\nFROM SALES AS S\\nJOIN PRODUCT AS P\\nON S.PRODUCT_ID = P.PRODUCT_ID\\nGROUP BY S.PRODUCT_ID"
                    }
                ]
            },
            {
                "id": 1570100,
                "content": [
                    {
                        "username": "qifeicheng",
                        "content": "It seems that the second product table is useless..."
                    },
                    {
                        "username": "karanjbhargava",
                        "content": "The question wants the total sold for EVERY product ID, but then doesn\\'t use a LEFT JOIN on Product.  Ex: Samsung sold 0 items but it still has a product ID so why doesn\\'t the test case account for that?  It should say [300, 0] but instead ignores product_id 300 entirely.  Seems like a poorly created question/test case set.\\n"
                    },
                    {
                        "username": "elsah",
                        "content": "This is the input used in the test:\\n`{\"headers\":{\"Sales\":[\"sale_id\",\"product_id\",\"year\",\"quantity\",\"price\"],\"Product\":[\"product_id\",\"product_name\"]},\"rows\":{\"Sales\":[[1,100,2008,10,5000],[2,100,2009,12,5000],[7,200,2011,15,9000]],\"Product\":[[100,\"Nokia\"],[200,\"Apple\"],[300,\"Samsung\"]]}}`\\n\\nThe expected output from the test is:\\n{\"headers\":[\"product_id\",\"total_quantity\"],\"values\":[[100,22],[200,15]]}\\n\\nHowever, we can see that product_id 300 does not have any sale. Usually it is expected to show product_id 300 with 0 sales when there is no sale. I\\'ve seen this type of edge cases many times before in my interviews.\\n\\n"
                    },
                    {
                        "username": "nishabalu",
                        "content": "The question asks for EVERY product_id. All product_ids are in Product table.\\n\\nselect p.product_id, coalesce(sum(s.quantity),0) as total_quantity\\nfrom Product p\\nleft outer join Sales s\\non p.product_id = s.product_id\\ngroup by p.product_id;"
                    },
                    {
                        "username": "utkarsh027",
                        "content": " 'select s.product_id , sum(s.quantity) as total_quantity from sales s\ngroup by s.product_id;'\n\n\n\n\nIf u like please upvote "
                    },
                    {
                        "username": "Kutima1998",
                        "content": " `your inline code...your inline code...`\\nSELECT S.PRODUCT_ID, SUM(S.QUANTITY) AS TOTAL_QUANTITY\\nFROM SALES AS S\\nJOIN PRODUCT AS P\\nON S.PRODUCT_ID = P.PRODUCT_ID\\nGROUP BY S.PRODUCT_ID"
                    }
                ]
            },
            {
                "id": 1852236,
                "content": [
                    {
                        "username": "qifeicheng",
                        "content": "It seems that the second product table is useless..."
                    },
                    {
                        "username": "karanjbhargava",
                        "content": "The question wants the total sold for EVERY product ID, but then doesn\\'t use a LEFT JOIN on Product.  Ex: Samsung sold 0 items but it still has a product ID so why doesn\\'t the test case account for that?  It should say [300, 0] but instead ignores product_id 300 entirely.  Seems like a poorly created question/test case set.\\n"
                    },
                    {
                        "username": "elsah",
                        "content": "This is the input used in the test:\\n`{\"headers\":{\"Sales\":[\"sale_id\",\"product_id\",\"year\",\"quantity\",\"price\"],\"Product\":[\"product_id\",\"product_name\"]},\"rows\":{\"Sales\":[[1,100,2008,10,5000],[2,100,2009,12,5000],[7,200,2011,15,9000]],\"Product\":[[100,\"Nokia\"],[200,\"Apple\"],[300,\"Samsung\"]]}}`\\n\\nThe expected output from the test is:\\n{\"headers\":[\"product_id\",\"total_quantity\"],\"values\":[[100,22],[200,15]]}\\n\\nHowever, we can see that product_id 300 does not have any sale. Usually it is expected to show product_id 300 with 0 sales when there is no sale. I\\'ve seen this type of edge cases many times before in my interviews.\\n\\n"
                    },
                    {
                        "username": "nishabalu",
                        "content": "The question asks for EVERY product_id. All product_ids are in Product table.\\n\\nselect p.product_id, coalesce(sum(s.quantity),0) as total_quantity\\nfrom Product p\\nleft outer join Sales s\\non p.product_id = s.product_id\\ngroup by p.product_id;"
                    },
                    {
                        "username": "utkarsh027",
                        "content": " 'select s.product_id , sum(s.quantity) as total_quantity from sales s\ngroup by s.product_id;'\n\n\n\n\nIf u like please upvote "
                    },
                    {
                        "username": "Kutima1998",
                        "content": " `your inline code...your inline code...`\\nSELECT S.PRODUCT_ID, SUM(S.QUANTITY) AS TOTAL_QUANTITY\\nFROM SALES AS S\\nJOIN PRODUCT AS P\\nON S.PRODUCT_ID = P.PRODUCT_ID\\nGROUP BY S.PRODUCT_ID"
                    }
                ]
            },
            {
                "id": 1782636,
                "content": [
                    {
                        "username": "qifeicheng",
                        "content": "It seems that the second product table is useless..."
                    },
                    {
                        "username": "karanjbhargava",
                        "content": "The question wants the total sold for EVERY product ID, but then doesn\\'t use a LEFT JOIN on Product.  Ex: Samsung sold 0 items but it still has a product ID so why doesn\\'t the test case account for that?  It should say [300, 0] but instead ignores product_id 300 entirely.  Seems like a poorly created question/test case set.\\n"
                    },
                    {
                        "username": "elsah",
                        "content": "This is the input used in the test:\\n`{\"headers\":{\"Sales\":[\"sale_id\",\"product_id\",\"year\",\"quantity\",\"price\"],\"Product\":[\"product_id\",\"product_name\"]},\"rows\":{\"Sales\":[[1,100,2008,10,5000],[2,100,2009,12,5000],[7,200,2011,15,9000]],\"Product\":[[100,\"Nokia\"],[200,\"Apple\"],[300,\"Samsung\"]]}}`\\n\\nThe expected output from the test is:\\n{\"headers\":[\"product_id\",\"total_quantity\"],\"values\":[[100,22],[200,15]]}\\n\\nHowever, we can see that product_id 300 does not have any sale. Usually it is expected to show product_id 300 with 0 sales when there is no sale. I\\'ve seen this type of edge cases many times before in my interviews.\\n\\n"
                    },
                    {
                        "username": "nishabalu",
                        "content": "The question asks for EVERY product_id. All product_ids are in Product table.\\n\\nselect p.product_id, coalesce(sum(s.quantity),0) as total_quantity\\nfrom Product p\\nleft outer join Sales s\\non p.product_id = s.product_id\\ngroup by p.product_id;"
                    },
                    {
                        "username": "utkarsh027",
                        "content": " 'select s.product_id , sum(s.quantity) as total_quantity from sales s\ngroup by s.product_id;'\n\n\n\n\nIf u like please upvote "
                    },
                    {
                        "username": "Kutima1998",
                        "content": " `your inline code...your inline code...`\\nSELECT S.PRODUCT_ID, SUM(S.QUANTITY) AS TOTAL_QUANTITY\\nFROM SALES AS S\\nJOIN PRODUCT AS P\\nON S.PRODUCT_ID = P.PRODUCT_ID\\nGROUP BY S.PRODUCT_ID"
                    }
                ]
            }
        ]
    }
]