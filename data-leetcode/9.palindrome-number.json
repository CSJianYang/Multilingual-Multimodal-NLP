[
    {
        "title": "Palindrome Number",
        "question_content": "Given an integer x, return true if x is a palindrome, and false otherwise.\n&nbsp;\nExample 1:\n\nInput: x = 121\nOutput: true\nExplanation: 121 reads as 121 from left to right and from right to left.\n\nExample 2:\n\nInput: x = -121\nOutput: false\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\n\nExample 3:\n\nInput: x = 10\nOutput: false\nExplanation: Reads 01 from right to left. Therefore it is not a palindrome.\n\n&nbsp;\nConstraints:\n\n\t-231&nbsp;<= x <= 231&nbsp;- 1\n\n&nbsp;\nFollow up: Could you solve it without converting the integer to a string?",
        "solutions": [
            {
                "id": 5127,
                "title": "9-line-accepted-java-code-without-the-need-of-handling-overflow",
                "content": "compare half of the digits in x, so don't need to deal with overflow.\\n\\n    public boolean isPalindrome(int x) {\\n        if (x<0 || (x!=0 && x%10==0)) return false;\\n        int rev = 0;\\n        while (x>rev){\\n        \\trev = rev*10 + x%10;\\n        \\tx = x/10;\\n        }\\n        return (x==rev || x==rev/10);\\n    }",
                "solutionTags": [],
                "code": "compare half of the digits in x, so don't need to deal with overflow.\\n\\n    public boolean isPalindrome(int x) {\\n        if (x<0 || (x!=0 && x%10==0)) return false;\\n        int rev = 0;\\n        while (x>rev){\\n        \\trev = rev*10 + x%10;\\n        \\tx = x/10;\\n        }\\n        return (x==rev || x==rev/10);\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 785314,
                "title": "python-3-1-solution-is-89-20-faster-2nd-is-99-14-faster-explanation-added",
                "content": "**Suggestions to make them better are always welcomed.**\\n\\n**Solution 1: 89.20% faster**\\nThis is the easiest way to check if integer is palindrome. \\n\\nConvert the number to string and compare it with the reversed string.\\n\\nI wrote this working solution first and then found in the description that we need to solve this problem without converting the input to string. Then I wrote solution 2.\\n```\\ndef isPalindrome(self, x: int) -> bool:\\n\\tif x < 0:\\n\\t\\treturn False\\n\\t\\n\\treturn str(x) == str(x)[::-1]\\n```\\n\\nIf we don\\'t want to convert the number to string, then recreate a new number in reverse order.\\n```\\ndef isPalindrome(self, x: int) -> bool:\\n\\tif x<0:\\n\\t\\treturn False\\n\\n\\tinputNum = x\\n\\tnewNum = 0\\n\\twhile x>0:\\n\\t\\tnewNum = newNum * 10 + x%10\\n\\t\\tx = x//10\\n\\treturn newNum == inputNum\\n```\\n\\n**Solution 2: 99.14% faster.**\\nI\\'d recommend you to solve leetcode question 7 (reverse integer) to understand the logic behind this solution.\\n\\nPython3 int type has no lower or upper bounds. But if there are constraints given then we have to make sure that while reversing the integer we don\\'t cross those constraints.\\n\\nSo, instead of reversing the whole integer, let\\'s convert half of the integer and then check if it\\'s palindrome.\\nBut we don\\'t know when is that half going to come. \\n\\nExample, if x = 15951, then let\\'s create reverse of x in loop. Initially, x = 15951, revX = 0\\n1. x = 1595, revX = 1\\n2. x = 159, revX = 15\\n3. x = 15, revX = 159\\n\\nWe see that revX > x after  3 loops and we crossed the half way in the integer bcoz it\\'s an odd length integer.\\nIf it\\'s an even length integer, our loop stops exactly in the middle.\\n\\nNow we can compare x and revX, if even length, or x and revX//10 if odd length and return True if they match.\\n\\nThere\\'s a difference between / and // division in Python3. Read it here on [stackoverflow](https://stackoverflow.com/questions/183853/what-is-the-difference-between-and-when-used-for-division).\\n```\\ndef isPalindrome(self, x: int) -> bool:\\n\\tif x < 0 or (x > 0 and x%10 == 0):   # if x is negative, return False. if x is positive and last digit is 0, that also cannot form a palindrome, return False.\\n\\t\\treturn False\\n\\t\\n\\tresult = 0\\n\\twhile x > result:\\n\\t\\tresult = result * 10 + x % 10\\n\\t\\tx = x // 10\\n\\t\\t\\n\\treturn True if (x == result or x == result // 10) else False\\n```\\n\\n **If you like the solutions, please upvote it for better reach to other people.**",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "String"
                ],
                "code": "```\\ndef isPalindrome(self, x: int) -> bool:\\n\\tif x < 0:\\n\\t\\treturn False\\n\\t\\n\\treturn str(x) == str(x)[::-1]\\n```\n```\\ndef isPalindrome(self, x: int) -> bool:\\n\\tif x<0:\\n\\t\\treturn False\\n\\n\\tinputNum = x\\n\\tnewNum = 0\\n\\twhile x>0:\\n\\t\\tnewNum = newNum * 10 + x%10\\n\\t\\tx = x//10\\n\\treturn newNum == inputNum\\n```\n```\\ndef isPalindrome(self, x: int) -> bool:\\n\\tif x < 0 or (x > 0 and x%10 == 0):   # if x is negative, return False. if x is positive and last digit is 0, that also cannot form a palindrome, return False.\\n\\t\\treturn False\\n\\t\\n\\tresult = 0\\n\\twhile x > result:\\n\\t\\tresult = result * 10 + x % 10\\n\\t\\tx = x // 10\\n\\t\\t\\n\\treturn True if (x == result or x == result // 10) else False\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3213890,
                "title": "fastest-java-solution",
                "content": "## For better Visualization:\\n\\n[https://www.youtube.com/watch?v=9xUcC6iIq7I]()\\n\\n## Idea\\nWe\\'re going to convert our **int** to **String** and then compare the first element to the very last element, second element to second last element and so on *[elements at the same distance from the beginning and from the end]*.. If they don\\'t match we return a False\\n\\n## JAVA Code\\n``` JAVA []\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        String s = String.valueOf(x); // Convert to String\\n        int n = s.length(); // Store the String length to int n\\n\\n        for (int i=0; i<n/2; i++) {\\n            // We check whether the elements at the same distance from\\n            // beginning and from ending are same, if not we return false\\n            if (s.charAt(i) != s.charAt(n-i-1)) return false;\\n        }\\n\\n        // if no flaws are found we return true\\n        return true;\\n    }\\n}\\n```\\n\\nThere is another approach to this problem:\\n\\nWe can store one half of the integer in a another variable in reversed order. Then we compare it to the other unaltered half of the number and see if they are equal or not [which should be in case of palindromes]\\n\\n``` JAVA []\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        if (x<0 || (x!=0 && x%10==0)) return false;\\n        int rev = 0;\\n        while (x>rev){\\n            rev = rev*10 + x%10;\\n            x = x/10;\\n        }\\n        return (x==rev || x==rev/10);\\n    }\\n}\\n```\\n\\n![kitty.jpeg](https://assets.leetcode.com/users/images/d141c86e-a7ed-4750-baa3-2ae88d11bf05_1676971396.8824553.jpeg)\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "``` JAVA []\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        String s = String.valueOf(x); // Convert to String\\n        int n = s.length(); // Store the String length to int n\\n\\n        for (int i=0; i<n/2; i++) {\\n            // We check whether the elements at the same distance from\\n            // beginning and from ending are same, if not we return false\\n            if (s.charAt(i) != s.charAt(n-i-1)) return false;\\n        }\\n\\n        // if no flaws are found we return true\\n        return true;\\n    }\\n}\\n```\n``` JAVA []\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        if (x<0 || (x!=0 && x%10==0)) return false;\\n        int rev = 0;\\n        while (x>rev){\\n            rev = rev*10 + x%10;\\n            x = x/10;\\n        }\\n        return (x==rev || x==rev/10);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 5165,
                "title": "an-easy-c-8-lines-code-only-reversing-till-half-and-then-compare",
                "content": "    class Solution {\\n    public:\\n        bool isPalindrome(int x) {\\n            if(x<0|| (x!=0 &&x%10==0)) return false;\\n            int sum=0;\\n            while(x>sum)\\n            {\\n                sum = sum*10+x%10;\\n                x = x/10;\\n            }\\n            return (x==sum)||(x==sum/10);\\n        }\\n    };",
                "solutionTags": [
                    "C++"
                ],
                "code": "class Solution {\\n    public:\\n        bool isPalindrome(int x) {\\n            if(x<0|| (x!=0 &&x%10==0)) return false;\\n            int sum=0;\\n            while(x>sum)\\n            {\\n                sum = sum*10+x%10;\\n                x = x/10;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 3651712,
                "title": "2-method-s-c-java-python-beginner-friendly",
                "content": "# Intuition:\\nThe intuition behind this code is to reverse the entire input number and check if the reversed number is equal to the original number. If they are the same, then the number is a palindrome.\\n\\n# Approach 1: Reversing the Entire Number\\n# Explanation:\\n1. We begin by performing an initial check. If the input number `x` is negative, it cannot be a palindrome since palindromes are typically defined for positive numbers. In such cases, we immediately return `false`.\\n\\n2. We initialize two variables:\\n   - `reversed`: This variable will store the reversed value of the number `x`.\\n   - `temp`: This variable is a temporary placeholder to manipulate the input number without modifying the original value.\\n\\n3. We enter a loop that continues until `temp` becomes zero:\\n   - Inside the loop, we extract the last digit of `temp` using the modulo operator `%` and store it in the `digit` variable.\\n   - To reverse the number, we multiply the current value of `reversed` by 10 and add the extracted `digit`.\\n   - We then divide `temp` by 10 to remove the last digit and move on to the next iteration.\\n\\n4. Once the loop is completed, we have reversed the entire number. Now, we compare the reversed value `reversed` with the original input value `x`.\\n   - If they are equal, it means the number is a palindrome, so we return `true`.\\n   - If they are not equal, it means the number is not a palindrome, so we return `false`.\\n\\nThe code uses a `long long` data type for the `reversed` variable to handle potential overflow in case of large input numbers.\\n\\n# Code\\n\\n```C++ []\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if (x < 0) {\\n            return false;\\n        }\\n\\n        long long reversed = 0;\\n        long long temp = x;\\n\\n        while (temp != 0) {\\n            int digit = temp % 10;\\n            reversed = reversed * 10 + digit;\\n            temp /= 10;\\n        }\\n\\n        return (reversed == x);\\n    }\\n};\\n\\n```\\n```Java []\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        if (x < 0) {\\n            return false;\\n        }\\n\\n        long reversed = 0;\\n        long temp = x;\\n\\n        while (temp != 0) {\\n            int digit = (int) (temp % 10);\\n            reversed = reversed * 10 + digit;\\n            temp /= 10;\\n        }\\n\\n        return (reversed == x);\\n    }\\n}\\n\\n```\\n```Python3 []\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if x < 0:\\n            return False\\n\\n        reversed_num = 0\\n        temp = x\\n\\n        while temp != 0:\\n            digit = temp % 10\\n            reversed_num = reversed_num * 10 + digit\\n            temp //= 10\\n\\n        return reversed_num == x\\n\\n```\\n\\n# Approach 2: Reversing Half of the Number\\nInstead of reversing the entire number, we can reverse only the last half of the number. This approach is tricky because when we reverse the last half of the number, we don\\'t want the middle digit to be reversed back to its original value. This can happen if the number has an odd number of digits. To resolve this, we can compare the first half of the number with the reversed second half of the number.\\n# Explanation:\\n1. We begin with an initial check to handle special cases:\\n   - If the input number `x` is negative, it cannot be a palindrome since palindromes are typically defined for positive numbers. In such cases, we immediately return `false`.\\n   - If `x` is non-zero and ends with a zero, it cannot be a palindrome because leading zeros are not allowed in palindromes. We return `false` for such cases.\\n\\n2. We initialize two variables:\\n   - `reversed`: This variable will store the reversed second half of the digits of the number.\\n   - `temp`: This variable is a temporary placeholder to manipulate the input number without modifying the original value.\\n\\n3. We enter a loop that continues until the first half of the digits (`x`) becomes less than or equal to the reversed second half (`reversed`):\\n   - Inside the loop, we extract the last digit of `x` using the modulo operator `%` and add it to the `reversed` variable after multiplying it by 10 (shifting the existing digits to the left).\\n   - We then divide `x` by 10 to remove the last digit and move towards the center of the number.\\n\\n4. Once the loop is completed, we have reversed the second half of the digits. Now, we compare the first half of the digits (`x`) with the reversed second half (`reversed`) to determine if the number is a palindrome:\\n   - For an even number of digits, if `x` is equal to `reversed`, then the number is a palindrome. We return `true`.\\n   - For an odd number of digits, if `x` is equal to `reversed / 10` (ignoring the middle digit), then the number is a palindrome. We return `true`.\\n   - If none of the above conditions are met, it means the number is not a palindrome, so we return `false`.\\n\\nThe code avoids the need for reversing the entire number by comparing only the necessary parts. This approach reduces both time complexity and memory usage, resulting in a more efficient solution.\\n\\n# Code\\n\\n```C++ []\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if (x < 0 || (x != 0 && x % 10 == 0)) {\\n            return false;\\n        }\\n\\n        int reversed = 0;\\n        while (x > reversed) {\\n            reversed = reversed * 10 + x % 10;\\n            x /= 10;\\n        }\\n        return (x == reversed) || (x == reversed / 10);\\n    }\\n};\\n```\\n```Java []\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        if (x < 0 || (x != 0 && x % 10 == 0)) {\\n            return false;\\n        }\\n\\n        int reversed = 0;\\n        int original = x;\\n\\n        while (x > reversed) {\\n            reversed = reversed * 10 + x % 10;\\n            x /= 10;\\n        }\\n\\n        return (x == reversed) || (x == reversed / 10);\\n    }\\n}\\n```\\n```Python3 []\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if x < 0 or (x != 0 and x % 10 == 0):\\n            return False\\n\\n        reversed_num = 0\\n        original = x\\n\\n        while x > reversed_num:\\n            reversed_num = reversed_num * 10 + x % 10\\n            x //= 10\\n\\n        return x == reversed_num or x == reversed_num // 10\\n```\\n\\n![CUTE_CAT.png](https://assets.leetcode.com/users/images/bc4560f0-64e2-4083-8f14-c5e8220c2e7f_1687078450.4746537.png)\\n\\n**If you are a beginner solve these problems which makes concepts clear for future coding:**\\n1. [Two Sum](https://leetcode.com/problems/two-sum/solutions/3619262/3-method-s-c-java-python-beginner-friendly/)\\n2. [Roman to Integer](https://leetcode.com/problems/roman-to-integer/solutions/3651672/best-method-c-java-python-beginner-friendly/)\\n3. [Palindrome Number](https://leetcode.com/problems/palindrome-number/solutions/3651712/2-method-s-c-java-python-beginner-friendly/)\\n4. [Maximum Subarray](https://leetcode.com/problems/maximum-subarray/solutions/3666304/beats-100-c-java-python-beginner-friendly/)\\n5. [Remove Element](https://leetcode.com/problems/remove-element/solutions/3670940/best-100-c-java-python-beginner-friendly/)\\n6. [Contains Duplicate](https://leetcode.com/problems/contains-duplicate/solutions/3672475/4-method-s-c-java-python-beginner-friendly/)\\n7. [Add Two Numbers](https://leetcode.com/problems/add-two-numbers/solutions/3675747/beats-100-c-java-python-beginner-friendly/)\\n8. [Majority Element](https://leetcode.com/problems/majority-element/solutions/3676530/3-methods-beats-100-c-java-python-beginner-friendly/)\\n9. [Remove Duplicates from Sorted Array](https://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/3676877/best-method-100-c-java-python-beginner-friendly/)\\n10. **Practice them in a row for better understanding and please Upvote for more questions.**\\n\\n\\n\\n**If you found my solution helpful, I would greatly appreciate your upvote, as it would motivate me to continue sharing more solutions.**\\n\\n",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python3",
                    "Math"
                ],
                "code": "```C++ []\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if (x < 0) {\\n            return false;\\n        }\\n\\n        long long reversed = 0;\\n        long long temp = x;\\n\\n        while (temp != 0) {\\n            int digit = temp % 10;\\n            reversed = reversed * 10 + digit;\\n            temp /= 10;\\n        }\\n\\n        return (reversed == x);\\n    }\\n};\\n\\n```\n```Java []\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        if (x < 0) {\\n            return false;\\n        }\\n\\n        long reversed = 0;\\n        long temp = x;\\n\\n        while (temp != 0) {\\n            int digit = (int) (temp % 10);\\n            reversed = reversed * 10 + digit;\\n            temp /= 10;\\n        }\\n\\n        return (reversed == x);\\n    }\\n}\\n\\n```\n```Python3 []\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if x < 0:\\n            return False\\n\\n        reversed_num = 0\\n        temp = x\\n\\n        while temp != 0:\\n            digit = temp % 10\\n            reversed_num = reversed_num * 10 + digit\\n            temp //= 10\\n\\n        return reversed_num == x\\n\\n```\n```C++ []\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if (x < 0 || (x != 0 && x % 10 == 0)) {\\n            return false;\\n        }\\n\\n        int reversed = 0;\\n        while (x > reversed) {\\n            reversed = reversed * 10 + x % 10;\\n            x /= 10;\\n        }\\n        return (x == reversed) || (x == reversed / 10);\\n    }\\n};\\n```\n```Java []\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        if (x < 0 || (x != 0 && x % 10 == 0)) {\\n            return false;\\n        }\\n\\n        int reversed = 0;\\n        int original = x;\\n\\n        while (x > reversed) {\\n            reversed = reversed * 10 + x % 10;\\n            x /= 10;\\n        }\\n\\n        return (x == reversed) || (x == reversed / 10);\\n    }\\n}\\n```\n```Python3 []\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if x < 0 or (x != 0 and x % 10 == 0):\\n            return False\\n\\n        reversed_num = 0\\n        original = x\\n\\n        while x > reversed_num:\\n            reversed_num = reversed_num * 10 + x % 10\\n            x //= 10\\n\\n        return x == reversed_num or x == reversed_num // 10\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3283534,
                "title": "accepted-java-c-code-beats-98",
                "content": "**Note:**\\n\\n**`Check only half of the digits of given number to prevent OVERFLOW`**\\n\\n# Complexity\\n- Time complexity: $$O(n/2)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n<!-- - Space complexity: -->\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# JAVA :-\\n -- | Details | --\\n--- | --- | ---:\\n**Runtime** | **9** *ms* | *Beats* **98%**\\n**Memory** | **40** *MB* | *Beats* **67%**\\n```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        if(x<0 || x!=0 && x%10 ==0 ) return false;\\n        int check=0;\\n        while(x>check){\\n            check = check*10 + x%10;\\n            x/=10;\\n        }\\n        return (x==check || x==check/10);\\n    }\\n}\\n````\\n# C :-\\n -- | Details | --\\n--- | --- | ---:\\n**Runtime** | **15** *ms* | *Beats* **80%**\\n**Memory** | **6** *MB* | *Beats* **93%**\\n```\\nbool isPalindrome(int x){\\n    if(x<0 || x!=0 && x%10 ==0 ) return false;\\n    int check=0;\\n    while(x>check){\\n        check = check*10 + x%10;\\n        x/=10;\\n    }\\n    return (x==check || x==check/10);\\n}\\n```\\n```\\n **   Use similar Math in PYTHON / C++   **\\n```\\n## UPVOTE : |\\n![waiting-tom-and-jerry.gif](https://assets.leetcode.com/users/images/4f0cc754-71e1-4cfc-816b-36a94c20b17f_1678366238.9546802.gif)\\n",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python",
                    "C",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        if(x<0 || x!=0 && x%10 ==0 ) return false;\\n        int check=0;\\n        while(x>check){\\n            check = check*10 + x%10;\\n            x/=10;\\n        }\\n        return (x==check || x==check/10);\\n    }\\n}\\n```\n```\\nbool isPalindrome(int x){\\n    if(x<0 || x!=0 && x%10 ==0 ) return false;\\n    int check=0;\\n    while(x>check){\\n        check = check*10 + x%10;\\n        x/=10;\\n    }\\n    return (x==check || x==check/10);\\n}\\n```\n```\\n **   Use similar Math in PYTHON / C++   **\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2499161,
                "title": "99-22-javascript-dart-without-converting-the-integer-to-a-string",
                "content": "#### How to reverse the number\\n```\\noriginal number: 543\\nreverse number: 0\\n\\n//Get the last digit of the original number\\noriginal % 10 = 543 % 10 = 3\\n//Put this digit as the last one in the reverse number\\nreverse * 10 + digit = 0 * 10 + 3 = 0 + 3 = 3\\nreverse: 3\\n//Remove this digit from the original number\\noriginal / 10 = 543 / 10 = 54.3\\n~~54.3 = 54\\noriginal: 54\\n\\n//Repeat\\noriginal % 10 = 54 % 10 = 4\\nreverse * 10 + digit = 3 * 10 + 4 = 30 + 4 = 34\\nreverse: 34\\noriginal / 10 = 54 / 10 = 5.4\\n~~5.4 = 5\\noriginal: 5\\n\\n//Repeat\\noriginal % 10 = 5 % 10 = 5\\nreverse * 10 + digit = 34 * 10 + 5 = 340 + 5 = 345\\nreverse: 345\\noriginal / 10 = 5 / 10 = 0.5\\n~~0.5 = 0\\noriginal: 0\\n\\ninput: 543\\noutput: 345\\n\\n```\\n\\nSo if the reverse number is equal to the original number, then it is a palindrome\\n\\n```\\n345 != 543 //not palindrome\\n272 == 272 //is palindrome\\n```\\n\\n**Please upvote if it was helpful!**\\n\\n``` JavaScript []\\nvar isPalindrome = function(x) {\\n    var reverse = 0;\\n    var copy = x;\\n\\n    //The loop break when the copy of original number becomes zero\\n    //Also negative number cannot be a palindrome\\n    while (copy > 0) {\\n      const digit = copy % 10;\\n      reverse = reverse * 10 + digit;\\n      copy = ~~(copy / 10);\\n    }\\n\\n    return reverse == x;\\n};\\n```\\n``` Dart []\\nclass Solution {\\n  bool isPalindrome(int x) {\\n    int reverse = 0;\\n    int copy = x;\\n\\n    //The loop break when the copy of original number becomes zero\\n    //Also negative number cannot be a palindrome\\n    while (copy > 0) {\\n      final digit = copy % 10;\\n      reverse = reverse * 10 + digit;\\n      copy = copy ~/ 10;\\n    }\\n\\n    return reverse == x;\\n  }\\n}\\n\\n```\\n[Submission Detail](https://leetcode.com/submissions/detail/786157401/)",
                "solutionTags": [
                    "JavaScript",
                    "Dart"
                ],
                "code": "```\\noriginal number: 543\\nreverse number: 0\\n\\n//Get the last digit of the original number\\noriginal % 10 = 543 % 10 = 3\\n//Put this digit as the last one in the reverse number\\nreverse * 10 + digit = 0 * 10 + 3 = 0 + 3 = 3\\nreverse: 3\\n//Remove this digit from the original number\\noriginal / 10 = 543 / 10 = 54.3\\n~~54.3 = 54\\noriginal: 54\\n\\n//Repeat\\noriginal % 10 = 54 % 10 = 4\\nreverse * 10 + digit = 3 * 10 + 4 = 30 + 4 = 34\\nreverse: 34\\noriginal / 10 = 54 / 10 = 5.4\\n~~5.4 = 5\\noriginal: 5\\n\\n//Repeat\\noriginal % 10 = 5 % 10 = 5\\nreverse * 10 + digit = 34 * 10 + 5 = 340 + 5 = 345\\nreverse: 345\\noriginal / 10 = 5 / 10 = 0.5\\n~~0.5 = 0\\noriginal: 0\\n\\ninput: 543\\noutput: 345\\n\\n```\n```\\n345 != 543 //not palindrome\\n272 == 272 //is palindrome\\n```\n``` JavaScript []\\nvar isPalindrome = function(x) {\\n    var reverse = 0;\\n    var copy = x;\\n\\n    //The loop break when the copy of original number becomes zero\\n    //Also negative number cannot be a palindrome\\n    while (copy > 0) {\\n      const digit = copy % 10;\\n      reverse = reverse * 10 + digit;\\n      copy = ~~(copy / 10);\\n    }\\n\\n    return reverse == x;\\n};\\n```\n``` Dart []\\nclass Solution {\\n  bool isPalindrome(int x) {\\n    int reverse = 0;\\n    int copy = x;\\n\\n    //The loop break when the copy of original number becomes zero\\n    //Also negative number cannot be a palindrome\\n    while (copy > 0) {\\n      final digit = copy % 10;\\n      reverse = reverse * 10 + digit;\\n      copy = copy ~/ 10;\\n    }\\n\\n    return reverse == x;\\n  }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1398168,
                "title": "c-three-simple-and-short-different-solutions",
                "content": "**Solution I:**\\nConvert the number to a string, revert it and compare.\\n```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        string rev = to_string(x);\\n        reverse(rev.begin(), rev.end());\\n        return to_string(x) == rev;\\n    }\\n};\\n```\\n**Solution II:**\\nConvert the number to a string, then use two pointers at beginning and end to check if it\\'s a palindrome.\\n```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        string s = to_string(x);\\n        int i = 0, j = s.size()-1;\\n        while (i <= j) if (s[i++] != s[j--]) return false;\\n        return true;\\n    }\\n};\\n```\\n**Solution III:**\\nReverse the second half of the number and then compare.\\n```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if (x < 0 || (x % 10 == 0 && x != 0)) return false;\\n        int rev = 0;\\n        while (rev < x) {\\n            rev = rev * 10 + x % 10;\\n            x /= 10;\\n        }\\n        \\n        return x == rev || x == rev / 10;\\n    }\\n};\\n```\\n**Like it? please upvote!**",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        string rev = to_string(x);\\n        reverse(rev.begin(), rev.end());\\n        return to_string(x) == rev;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        string s = to_string(x);\\n        int i = 0, j = s.size()-1;\\n        while (i <= j) if (s[i++] != s[j--]) return false;\\n        return true;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if (x < 0 || (x % 10 == 0 && x != 0)) return false;\\n        int rev = 0;\\n        while (rev < x) {\\n            rev = rev * 10 + x % 10;\\n            x /= 10;\\n        }\\n        \\n        return x == rev || x == rev / 10;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 387961,
                "title": "no-string-or-array-conversion-4-lines-99-66-beat",
                "content": "Use a varibale to reverse number then check with given number\\n```\\nvar isPalindrome = function(x) {\\n  if (x < 0) return false\\n\\n  let rev = 0\\n  for(let i = x; i >= 1; i = Math.floor(i/10)) rev = rev*10 + i%10\\n  return rev === x\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar isPalindrome = function(x) {\\n  if (x < 0) return false\\n\\n  let rev = 0\\n  for(let i = x; i >= 1; i = Math.floor(i/10)) rev = rev*10 + i%10\\n  return rev === x\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 5188,
                "title": "o-1-space-o-lgn-time-java-solution-no-overflow-risk",
                "content": "    public boolean isPalindrome(int x) {\\n        \\n        if (x < 0) return false;\\n\\n        int p = x; \\n        int q = 0; \\n        \\n        while (p >= 10){\\n            q *=10; \\n            q += p%10; \\n            p /=10; \\n        }\\n        \\n        return q == x / 10 && p == x % 10;\\n    }\\n\\n// so the reversed version of int is always  1 time short in the factor of 10s . \\n\\nin case of Int16,  check 63556  will finally check if (6553 == 6355 && 6 == 63556%10)  so there will have no concerns about the overflow.",
                "solutionTags": [],
                "code": "    public boolean isPalindrome(int x) {\\n        \\n        if (x < 0) return false;\\n\\n        int p = x; \\n        int q = 0; \\n        \\n        while (p >= 10){\\n            q *=10; \\n            q += p%10; \\n            p /=10; \\n        }\\n        \\n        return q == x / 10 && p == x % 10;\\n    }\\n\\n// so the reversed version of int is always  1 time short in the factor of 10s . \\n\\nin case of Int16,  check 63556  will finally check if (6553 == 6355 && 6 == 63556%10)  so there will have no concerns about the overflow.",
                "codeTag": "Unknown"
            },
            {
                "id": 5128,
                "title": "python-solution-based-on-the-algorithm-in-leetcode-blog",
                "content": "    class Solution:\\n        # @param x, an integer\\n        # @return a boolean\\n        def isPalindrome(self, x):\\n            if x < 0:\\n                return False\\n    \\n            ranger = 1\\n            while x / ranger >= 10:\\n                ranger *= 10\\n    \\n            while x:\\n                left = x / ranger\\n                right = x % 10\\n                if left != right:\\n                    return False\\n                \\n                x = (x % ranger) / 10\\n                ranger /= 100\\n    \\n            return True",
                "solutionTags": [
                    "Python"
                ],
                "code": "    class Solution:\\n        # @param x, an integer\\n        # @return a boolean\\n        def isPalindrome(self, x):\\n            if x < 0:\\n                return False\\n    \\n            ranger = 1\\n            while x / ranger >= 10:\\n                ranger *= 10\\n    \\n            while x:\\n                left = x / ranger\\n                right = x % 10\\n                if left != right:\\n                    return False\\n                \\n                x = (x % ranger) / 10\\n                ranger /= 100\\n    \\n            return True",
                "codeTag": "Java"
            },
            {
                "id": 316164,
                "title": "python-no-string-involved",
                "content": "Reads the number backwards and checks if the numbers are equal.\\n<br>\\n```\\nimport math \\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        orig = x\\n        back_x = 0\\n        while x > 0:\\n            back_x = (back_x * 10) + (x % 10)\\n            x = x // 10\\n        return orig == back_x\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nimport math \\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        orig = x\\n        back_x = 0\\n        while x > 0:\\n            back_x = (back_x * 10) + (x % 10)\\n            x = x // 10\\n        return orig == back_x\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3176639,
                "title": "java-c-best-solution-simple-solution",
                "content": "# Intuition\\n\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n      String s = String.valueOf(x);  \\n\\n        int i = 0;                   \\n        int j = s.length() - 1; \\n       \\n          while(i <= j)      \\n        {\\n            if(s.charAt(i) != s.charAt(j))  \\n                return false;\\n            i++;                                \\n            j--;                                \\n        }  \\n        \\n        return true;\\n        \\n    }\\n}\\n```\\n\\n\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n      String s = String.valueOf(x);  \\n\\n        int i = 0;                   \\n        int j = s.length() - 1; \\n       \\n          while(i <= j)      \\n        {\\n            if(s.charAt(i) != s.charAt(j))  \\n                return false;\\n            i++;                                \\n            j--;                                \\n        }  \\n        \\n        return true;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3047788,
                "title": "accepted-easy-solution-short-simple-best-method",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        stack<int> st;\\n        if(x<0)\\n            return false;\\n        int y=x;\\n        while(x)\\n        {\\n            st.push(x%10);\\n            x/=10;\\n        }\\n        while(y)\\n        {\\n            if(st.top()!=(y%10))\\n               return false;\\n             st.pop();\\n               y/=10;\\n        }\\n        return true;\\n    }\\n};\\n```\\nPlease **UPVOTE** if it helps \\u2764\\uFE0F\\uD83D\\uDE0A\\nThank You and Happy To Help You!!",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        stack<int> st;\\n        if(x<0)\\n            return false;\\n        int y=x;\\n        while(x)\\n        {\\n            st.push(x%10);\\n            x/=10;\\n        }\\n        while(y)\\n        {\\n            if(st.top()!=(y%10))\\n               return false;\\n             st.pop();\\n               y/=10;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 5408,
                "title": "simple-java-o-1-space-solution",
                "content": "    public boolean isPalindrome(int x) {\\n        if(x<0 || (x!=0 && x%10==0))\\n        return false;\\n        int res = 0;\\n           while(x>res){\\n            res = res*10 + x%10;\\n            x = x/10;\\n           }\\n        return (x==res || x==res/10);\\n    }",
                "solutionTags": [
                    "Java"
                ],
                "code": "    public boolean isPalindrome(int x) {\\n        if(x<0 || (x!=0 && x%10==0))\\n        return false;\\n        int res = 0;\\n           while(x>res){\\n            res = res*10 + x%10;\\n            x = x/10;\\n           }\\n        return (x==res || x==res/10);\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 1136330,
                "title": "accepted-solution-for-swift",
                "content": "<blockquote>\\n<b>Disclaimer:</b> By using any content from this post or thread, you release the author(s) from all liability and warranty of any kind. You are free to use the content freely and as you see fit. Any suggestions for improvement are welcome and greatly appreciated! Happy coding!\\n</blockquote>\\n\\n```swift\\nclass Solution {\\n    func isPalindrome(_ x: Int) -> Bool {\\n        return x < 0 ? false : method(x: x) == x\\n    }\\n    private func method(x: Int) -> Int {\\n        var r = 0\\n        var x = x\\n        while x != 0 {\\n            r = r * 10\\n            r = r + x % 10\\n            x /= 10\\n        }\\n        return (r < Int32.min || r > Int32.max) ? 0 : r\\n    }\\n}\\n```\\n\\n<hr>\\n\\n<p>\\n<details>\\n<summary><img src=\"https://git.io/JDblm\" height=\"24\"> <b>TEST CASES</b></summary>\\n\\n<br>\\n\\n<pre>\\n<b>Result:</b> Executed 4 tests, with 0 failures (0 unexpected) in 0.005 (0.007) seconds\\n</pre>\\n\\n```swift\\nimport XCTest\\n\\nclass Tests: XCTestCase {\\n    \\n    private let solution = Solution()\\n    \\n    func test0() {\\n        let value = solution.isPalindrome(121)\\n        XCTAssertEqual(value, true)\\n    }\\n    \\n    func test1() {\\n        let value = solution.isPalindrome(-121)\\n        XCTAssertEqual(value, false)\\n    }\\n    \\n    func test2() {\\n        let value = solution.isPalindrome(10)\\n        XCTAssertEqual(value, false)\\n    }\\n    \\n    func test3() {\\n        let value = solution.isPalindrome(-101)\\n        XCTAssertEqual(value, false)\\n    }\\n}\\n\\nTests.defaultTestSuite.run()\\n```\\n\\n</details>\\n</p",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```swift\\nclass Solution {\\n    func isPalindrome(_ x: Int) -> Bool {\\n        return x < 0 ? false : method(x: x) == x\\n    }\\n    private func method(x: Int) -> Int {\\n        var r = 0\\n        var x = x\\n        while x != 0 {\\n            r = r * 10\\n            r = r + x % 10\\n            x /= 10\\n        }\\n        return (r < Int32.min || r > Int32.max) ? 0 : r\\n    }\\n}\\n```\n```swift\\nimport XCTest\\n\\nclass Tests: XCTestCase {\\n    \\n    private let solution = Solution()\\n    \\n    func test0() {\\n        let value = solution.isPalindrome(121)\\n        XCTAssertEqual(value, true)\\n    }\\n    \\n    func test1() {\\n        let value = solution.isPalindrome(-121)\\n        XCTAssertEqual(value, false)\\n    }\\n    \\n    func test2() {\\n        let value = solution.isPalindrome(10)\\n        XCTAssertEqual(value, false)\\n    }\\n    \\n    func test3() {\\n        let value = solution.isPalindrome(-101)\\n        XCTAssertEqual(value, false)\\n    }\\n}\\n\\nTests.defaultTestSuite.run()\\n```",
                "codeTag": "Java"
            },
            {
                "id": 471810,
                "title": "168-ms-faster-than-97-26",
                "content": "```\\nvar isPalindrome = function(x) {\\n    const arr = String(x).split(\\'\\');\\n        \\n    while (arr.length > 1) {\\n        if (arr.shift() !== arr.pop()) {\\n            return false;\\n        }\\n    }\\n    \\n    return true;\\n};\\n```",
                "solutionTags": [
                    "JavaScript",
                    "Array"
                ],
                "code": "```\\nvar isPalindrome = function(x) {\\n    const arr = String(x).split(\\'\\');\\n        \\n    while (arr.length > 1) {\\n        if (arr.shift() !== arr.pop()) {\\n            return false;\\n        }\\n    }\\n    \\n    return true;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2976350,
                "title": "simple-java-beats-100-easy-to-understand",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\nFirst we have to understand what is meant by a \"**PALINDROME**\" number.\\nSuppose we have a number \\'x\\'. If we **REVERSE** x and store it in \\'y\\' then x and y should be EQUAL.\\n\\nMathematically, x is palindrome iff x = y where y = reverse of x.\\n\\n    Example 1:\\n    let x = 123,\\n    then y = reverse of x = 321;\\n    Since, 123 != 321, Hence, x is NOT palindrome.\\n\\n    Example 2:\\n    let x = 1221,\\n    then y = reverse of x = 1221;\\n    Since 1221 == 1221, Hence, x is palindrome.\\n\\n\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. --> Two-Pointer Approach       \\n        \\n    Step1: Convert the integer into string.\\n    Step2: Point two variable at first and last indices of the string.\\n    Step3: Compare the characters at those indices.\\n    Step4: Update the variables.\\nYou will get the answer.\\n\\n        **If this solution helped you, give it a like to help others.**\\n\\n# Complexity\\n- Time complexity: O(n), where n = length of integer.\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n\\n        // Two-Pointer Approach\\n        \\n        \\n        // Step1: Convert the integer into string.\\n        // Step2: Point two variable at first and last indices of the string.\\n        // Step3: Compare the characters at those indices.\\n        // Step4: Update the variables.\\n\\n        String s = String.valueOf(x);  // convert integer to string.\\n\\n        int i = 0;                     // i will initially point to first index.\\n        int j = s.length() - 1;        // j will initially point to last index. \\n        \\n        // i and j are opposite indices of the string. \\n        // 1. If \\'i\\' is first then \\'j\\' is last.\\n        // 2. Similarly, if \\'i\\' is second then \\'j\\' is second last index of s.\\n        // This is because they are updated simultaneously.\\n\\n        while(i <= j)                   // loop will break when i and j cross each other\\n        {\\n            if(s.charAt(i) != s.charAt(j))  // characters at indices i and j will be compared.\\n                // If the characters are unequal then false will be returned.\\n                return false;\\n            i++;                                // i is incremented.\\n            j--;                                // j is decremented.\\n        }\\n        \\n        // If loop ends without returning false, it means that every \\'ith\\' character\\n        // is equal to every \\'jth\\' character. Thus, the number is palindrome.\\n        // Hence, return true;\\n        \\n        return true;\\n        \\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Two Pointers",
                    "String"
                ],
                "code": "```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n\\n        // Two-Pointer Approach\\n        \\n        \\n        // Step1: Convert the integer into string.\\n        // Step2: Point two variable at first and last indices of the string.\\n        // Step3: Compare the characters at those indices.\\n        // Step4: Update the variables.\\n\\n        String s = String.valueOf(x);  // convert integer to string.\\n\\n        int i = 0;                     // i will initially point to first index.\\n        int j = s.length() - 1;        // j will initially point to last index. \\n        \\n        // i and j are opposite indices of the string. \\n        // 1. If \\'i\\' is first then \\'j\\' is last.\\n        // 2. Similarly, if \\'i\\' is second then \\'j\\' is second last index of s.\\n        // This is because they are updated simultaneously.\\n\\n        while(i <= j)                   // loop will break when i and j cross each other\\n        {\\n            if(s.charAt(i) != s.charAt(j))  // characters at indices i and j will be compared.\\n                // If the characters are unequal then false will be returned.\\n                return false;\\n            i++;                                // i is incremented.\\n            j--;                                // j is decremented.\\n        }\\n        \\n        // If loop ends without returning false, it means that every \\'ith\\' character\\n        // is equal to every \\'jth\\' character. Thus, the number is palindrome.\\n        // Hence, return true;\\n        \\n        return true;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1549534,
                "title": "python-simple-one-line-solution",
                "content": "**Python :**\\n\\n```\\ndef isPalindrome(self, x: int) -> bool:\\n\\treturn str(x) == str(x)[::-1]\\n```\\n\\n**Like it ? please upvote !**",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\ndef isPalindrome(self, x: int) -> bool:\\n\\treturn str(x) == str(x)[::-1]\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3497184,
                "title": "c-java-python-javascript-2-approach-brute-and-optimized-fully-explained",
                "content": "# Brute Force Solution:\\n\\n### Intuition: \\nConvert the integer to a string and check if the string is equal to its reverse.\\n\\n### Approach:\\n1. Convert the integer to a string using to_string() method.\\n2. Reverse the string using the reverse() method.\\n3. Compare the original and reversed strings to check if they are equal.\\n4. If they are equal, return true. Otherwise, return false.\\n\\n## Time Complexity:\\nO(n), where n is the number of digits in the integer.\\n## Space Complexity: \\nO(n), where n is the number of digits in the integer.\\n\\n---\\n\\n\\n# Optimized Solution:\\n\\n### Intuition: \\nCheck half of the digits of the integer by extracting the last digit of the integer and adding it to a new integer.\\n\\n### Approach:\\n1. Check if the integer is negative or ends with a zero. If it is, return false.\\n2. Initialize a new integer half to 0.\\n3. While the original integer x is greater than half, extract the last digit of x and add it to half by multiplying half by 10 and adding the last digit of x.\\n4. If the length of x is odd, we need to remove the middle digit from half. To do this, we can simply divide half by 10.\\n5. Check if x is equal to half or half divided by 10.\\n6. If they are equal, return true. Otherwise, return false.\\n\\n### Time Complexity: \\nO(log n), where n is the value of the integer.\\n### Space Complexity: \\nO(1), as we only need to store two integers, x and half.\\n\\n---\\n# C++\\n### Brute Force\\n```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        string s = to_string(x);\\n        string t = s;\\n        reverse(t.begin(), t.end());\\n        return s == t;\\n    }\\n};\\n```\\n### Optimized\\n```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if (x < 0 || (x != 0 && x % 10 == 0)) {\\n            return false;\\n        }\\n        int half = 0;\\n        while (x > half) {\\n            half = half * 10 + x % 10;\\n            x /= 10;\\n        }\\n        return x == half || x == half / 10;\\n    }\\n};\\n\\n```\\n\\n---\\n# JAVA\\n### Brute Force\\n```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        String s = Integer.toString(x);\\n        String t = new StringBuilder(s).reverse().toString();\\n        return s.equals(t);\\n    }\\n}\\n```\\n### Optimized\\n```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        if (x < 0 || (x != 0 && x % 10 == 0)) {\\n            return false;\\n        }\\n        int half = 0;\\n        while (x > half) {\\n            half = half * 10 + x % 10;\\n            x /= 10;\\n        }\\n        return x == half || x == half / 10;\\n    }\\n}\\n\\n```\\n---\\n# Python\\n### Brute Force\\n```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        s = str(x)\\n        t = s[::-1]\\n        return s == t\\n```\\n### Optimized\\n```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        if x < 0 or (x != 0 and x % 10 == 0):\\n            return False\\n        half = 0\\n        while x > half:\\n            half = half * 10 + x % 10\\n            x //= 10\\n        return x == half or x == half // 10\\n```\\n\\n---\\n# JavaScript\\n### Brute Force\\n```\\nvar isPalindrome = function(x) {\\n    var s = x.toString();\\n    var t = s.split(\"\").reverse().join(\"\");\\n    return s === t;\\n};\\n```\\n### Optimized\\n```\\nvar isPalindrome = function(x) {\\n    if (x < 0 || (x !== 0 && x % 10 === 0)) {\\n        return false;\\n    }\\n    var half = 0;\\n    while (x > half) {\\n        half = half * 10 + x % 10;\\n        x = Math.floor(x / 10);\\n    }\\n    return x === half || x === Math.floor(half / 10);\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python",
                    "JavaScript",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        string s = to_string(x);\\n        string t = s;\\n        reverse(t.begin(), t.end());\\n        return s == t;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if (x < 0 || (x != 0 && x % 10 == 0)) {\\n            return false;\\n        }\\n        int half = 0;\\n        while (x > half) {\\n            half = half * 10 + x % 10;\\n            x /= 10;\\n        }\\n        return x == half || x == half / 10;\\n    }\\n};\\n\\n```\n```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        String s = Integer.toString(x);\\n        String t = new StringBuilder(s).reverse().toString();\\n        return s.equals(t);\\n    }\\n}\\n```\n```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        if (x < 0 || (x != 0 && x % 10 == 0)) {\\n            return false;\\n        }\\n        int half = 0;\\n        while (x > half) {\\n            half = half * 10 + x % 10;\\n            x /= 10;\\n        }\\n        return x == half || x == half / 10;\\n    }\\n}\\n\\n```\n```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        s = str(x)\\n        t = s[::-1]\\n        return s == t\\n```\n```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        if x < 0 or (x != 0 and x % 10 == 0):\\n            return False\\n        half = 0\\n        while x > half:\\n            half = half * 10 + x % 10\\n            x //= 10\\n        return x == half or x == half // 10\\n```\n```\\nvar isPalindrome = function(x) {\\n    var s = x.toString();\\n    var t = s.split(\"\").reverse().join(\"\");\\n    return s === t;\\n};\\n```\n```\\nvar isPalindrome = function(x) {\\n    if (x < 0 || (x !== 0 && x % 10 === 0)) {\\n        return false;\\n    }\\n    var half = 0;\\n    while (x > half) {\\n        half = half * 10 + x % 10;\\n        x = Math.floor(x / 10);\\n    }\\n    return x === half || x === Math.floor(half / 10);\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 5156,
                "title": "two-python-solution-with-o-1-space",
                "content": "\\nI. reverse the number first and see if it is equal to the original number.\\n\\n    def isPalindrome(self, x):\\n        if x < 0:\\n            return False\\n        p, res = x, 0\\n        while p:\\n            res = res * 10 + p % 10\\n            p /= 10\\n        return res == x\\n\\nII. find the largest power of 10 which is smaller then x first. Then check if left most digit is equal to right most digit and so on. \\n\\n    def isPalindrome(self, x):\\n        if x < 0:\\n            return False\\n        b = 1\\n        while x / b >= 10:\\n            b *= 10\\n        while b >= 10:\\n            if x / b != x % 10:\\n                return False\\n            x, b = (x % b) / 10, b / 100\\n        return True",
                "solutionTags": [
                    "Python"
                ],
                "code": "\\nI. reverse the number first and see if it is equal to the original number.\\n\\n    def isPalindrome(self, x):\\n        if x < 0:\\n            return False\\n        p, res = x, 0\\n        while p:\\n            res = res * 10 + p % 10\\n            p /= 10\\n        return res == x\\n\\nII. find the largest power of 10 which is smaller then x first. Then check if left most digit is equal to right most digit and so on. \\n\\n    def isPalindrome(self, x):\\n        if x < 0:\\n            return False\\n        b = 1\\n        while x / b >= 10:\\n            b *= 10\\n        while b >= 10:\\n            if x / b != x % 10:\\n                return False\\n            x, b = (x % b) / 10, b / 100\\n        return True",
                "codeTag": "Python3"
            },
            {
                "id": 2996838,
                "title": "python-one-line-solution-with-explanation",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nString has method to reverse\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nwith reversing it is possible to write in one line\\n\\'[::]\\' this means print all, and this \\'[::-1]\\' reverses, it is mostly used with list in python \\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return True if str(x)==str(x)[::-1] else False",
                "solutionTags": [
                    "Python3"
                ],
                "code": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nString has method to reverse\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nwith reversing it is possible to write in one line\\n\\'[::]\\' this means print all, and this \\'[::-1]\\' reverses, it is mostly used with list in python \\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return True if str(x)==str(x)[::-1] else False",
                "codeTag": "Java"
            },
            {
                "id": 234068,
                "title": "intuitive-javascript-solution",
                "content": "```\\n/**\\n * @param {number} x\\n * @return {boolean}\\n */\\nvar isPalindrome = function(x) {\\n    if (x < 0) return false;\\n\\t\\n    // reverse the string representation of x\\n    const reverse = `${x}`.split(\\'\\').reverse().join(\\'\\');\\n    // compare the value regardless of types\\n    return x == reverse;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} x\\n * @return {boolean}\\n */\\nvar isPalindrome = function(x) {\\n    if (x < 0) return false;\\n\\t\\n    // reverse the string representation of x\\n    const reverse = `${x}`.split(\\'\\').reverse().join(\\'\\');\\n    // compare the value regardless of types\\n    return x == reverse;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 5262,
                "title": "neat-ac-java-code-o-n-time-complexity",
                "content": "    public boolean isPalindrome(int x) {\\n            int palindromeX = 0;\\n            int inputX = x;\\n            while(x>0){\\n                palindromeX = palindromeX*10 + (x % 10);\\n                x = x/10;\\n            }\\n            return palindromeX==inputX;\\t\\n        }",
                "solutionTags": [],
                "code": "    public boolean isPalindrome(int x) {\\n            int palindromeX = 0;\\n            int inputX = x;\\n            while(x>0){\\n                palindromeX = palindromeX*10 + (x % 10);\\n                x = x/10;\\n            }\\n            return palindromeX==inputX;\\t\\n        }",
                "codeTag": "Unknown"
            },
            {
                "id": 2739816,
                "title": "java-no-string-faster-than-97-easy",
                "content": "```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int original = x;\\n        int rev = 0;\\n        while(x>0){\\n            rev = x%10 + rev*10;\\n            x= x/10;\\n        }\\n        return rev==original ? true : false;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int original = x;\\n        int rev = 0;\\n        while(x>0){\\n            rev = x%10 + rev*10;\\n            x= x/10;\\n        }\\n        return rev==original ? true : false;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3122215,
                "title": "js-one-liner-beats-93",
                "content": "**Please Upvote if you like this solution.**\\n\\n```\\n/**\\n * @param {number} x\\n * @return {boolean}\\n */\\nvar isPalindrome = function(x) {\\n    return x < 0 ? false : (x === +x.toString().split(\"\").reverse().join(\"\"));\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} x\\n * @return {boolean}\\n */\\nvar isPalindrome = function(x) {\\n    return x < 0 ? false : (x === +x.toString().split(\"\").reverse().join(\"\"));\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 5230,
                "title": "7-line-simple-c-solution-beats-90-submissions-in-o-1-space-two-pointers",
                "content": "Use two pointers concept, find the half point, and compare first half and 2nd half. \\n\\nVariable ***revhalf*** is the reversed 2nd half(x has even number of digits), or 2nd half with the middle digit(if x has odd number of digits)\\n\\n    class Solution {\\n    public:\\n        bool isPalindrome(int x) {\\n            if(x < 0) return false;\\n            int revhalf = 0, slow = x, fast = x;\\n            while(fast){ \\n                revhalf = revhalf * 10 + slow % 10;\\n                slow /= 10;\\n                fast /= 100;\\n            }\\n            return slow == revhalf || slow == revhalf / 10;\\n        }\\n    };",
                "solutionTags": [
                    "C++"
                ],
                "code": "class Solution {\\n    public:\\n        bool isPalindrome(int x) {\\n            if(x < 0) return false;\\n            int revhalf = 0, slow = x, fast = x;\\n            while(fast){ \\n                revhalf = revhalf * 10 + slow % 10;\\n                slow /= 10;\\n                fast /= 100;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 2732678,
                "title": "js-91-45-no-string",
                "content": "*Upvote if you like my solution ;-)*\\n```\\nvar isPalindrome = function(x) {\\n    if (x < 0 || x % 10 == 0 && x !=0)  {\\n        return false;\\n    }\\n    let t = 0;\\n    while (x > t) {\\n        t = t * 10 + x % 10;\\n        x = Math.floor(x / 10);\\n    }\\n    return t==x || x==Math.floor(t/10);\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar isPalindrome = function(x) {\\n    if (x < 0 || x % 10 == 0 && x !=0)  {\\n        return false;\\n    }\\n    let t = 0;\\n    while (x > t) {\\n        t = t * 10 + x % 10;\\n        x = Math.floor(x / 10);\\n    }\\n    return t==x || x==Math.floor(t/10);\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 212525,
                "title": "python-scala-with-explanations",
                "content": "We add corner cases to reduce runtime: a negative number or positive number with tailing 0s are not palindromes.\\nThen we reverse the number to check whether it equals to the original one.\\n****\\n> Python\\n```\\n    def isPalindrome(self, x):\\n        if x < 0 or (x > 0 and x % 10 == 0):\\n            return False\\n        \\n        return x == self.reverseUtil(x)\\n        \\n    def reverseUtil(self, x):\\n        result = 0\\n\\n        while x != 0:\\n            digit = x % 10\\n            result = result * 10 + digit\\n            x = int(x / 10)\\n            \\n        return result \\n```\\n> Scala\\n```\\n    def isPalindrome(x: Int): Boolean = {\\n        if (x < 0 || (x != 0 && x % 10 == 0)) {\\n            return false\\n        }\\n        var reversedX = reverseNumber(x)\\n        reversedX == x\\n    }\\n    \\n    def reverseNumber(x: Int): Int = {\\n        var varx = x\\n        var result = 0\\n        \\n        while (varx != 0) {\\n            result = result * 10 + varx % 10\\n            varx /= 10\\n        }\\n        \\n        return result\\n    }\\n```\\n\\n**(\\u4EBA \\u2022\\u0348\\u1D17\\u2022\\u0348)** Thanks for voting!",
                "solutionTags": [],
                "code": "```\\n    def isPalindrome(self, x):\\n        if x < 0 or (x > 0 and x % 10 == 0):\\n            return False\\n        \\n        return x == self.reverseUtil(x)\\n        \\n    def reverseUtil(self, x):\\n        result = 0\\n\\n        while x != 0:\\n            digit = x % 10\\n            result = result * 10 + digit\\n            x = int(x / 10)\\n            \\n        return result \\n```\n```\\n    def isPalindrome(x: Int): Boolean = {\\n        if (x < 0 || (x != 0 && x % 10 == 0)) {\\n            return false\\n        }\\n        var reversedX = reverseNumber(x)\\n        reversedX == x\\n    }\\n    \\n    def reverseNumber(x: Int): Int = {\\n        var varx = x\\n        var result = 0\\n        \\n        while (varx != 0) {\\n            result = result * 10 + varx % 10\\n            varx /= 10\\n        }\\n        \\n        return result\\n    }\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3109195,
                "title": "easily-understandable-solution-beats-99-30",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n       long long int copy=x;\\n       long long int rev=0;\\n        while(x!=0){\\n            long long int rem;\\n            rem=x%10;\\n            rev=rev*10 +rem;\\n            x=x/10;\\n            \\n        }\\n         bool check=false;\\n        if(rev<0){\\n            return check;\\n        }\\n       \\n        else if(rev==copy){\\n            check=true;\\n            return check;\\n        }else return check;\\n        \\n    }\\n};\\n```\\nPlease upvote to motivate me to write more solutions\\n\\n",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n       long long int copy=x;\\n       long long int rev=0;\\n        while(x!=0){\\n            long long int rem;\\n            rem=x%10;\\n            rev=rev*10 +rem;\\n            x=x/10;\\n            \\n        }\\n         bool check=false;\\n        if(rev<0){\\n            return check;\\n        }\\n       \\n        else if(rev==copy){\\n            check=true;\\n            return check;\\n        }else return check;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 5317,
                "title": "9-ms-java-beats-99-5-java-solutions-easy-to-understand",
                "content": "    public class Solution {\\n        static int v;\\n        public static boolean isPalindrome(int x) {\\n            //optimizations\\n            if(x<0) return false;\\n            if(x<10) return true;\\n            if(x%10==0) return false;\\n            if(x<100&&x%11==0) return true;\\n            if(x<1000&&((x/100)*10+x%10)%11==0) return true;\\n\\n            //actual logic\\n            v=x%10;\\n            x=x/10;\\n            while(x-v>0)\\n            {\\n                    v=v*10+x%10;\\n                    x/=10;\\n            }\\n            if(v>x){v/=10;}\\n            return v==x?true:false;\\n        }\\n    }",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n        static int v;\\n        public static boolean isPalindrome(int x) {\\n            //optimizations\\n            if(x<0) return false;\\n            if(x<10) return true;\\n            if(x%10==0) return false;\\n            if(x<100&&x%11==0) return true;\\n            if(x<1000&&((x/100)*10+x%10)%11==0) return true;\\n\\n            //actual logic\\n            v=x%10;\\n            x=x/10;\\n            while(x-v>0)\\n            {\\n                    v=v*10+x%10;\\n                    x/=10;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 519779,
                "title": "noob-friendly-python-code-o-1-space-o-n-time",
                "content": "Let me know if a comment or code needs to be clarified so I can make it even easier to understand. Thanks!\\n\\n```\\ndef isPalindrome(self, num):\\n\\t#negatives can\\'t be palindromes cause of their minus sign so\\n\\t#instead of dealing with this in our main code, we get rid of this possibility immediately\\n    if num < 0: return False\\n\\n    \"\"\"\\n\\tSteps in this algorithm:\\n    1. get the reversed number (the original number but its digits reversed). e.g. 125 becomes 521\\n    2. if the reversed number == original number, its a palindrome! Done!\\n    \\n\\tHow to get reversed number (rev_num):\\n    1. we do this by \\'popping\\' the num\\'s last digit. e.g. 125 becomes 12, we store 5 as last_digit\\n    2. and then \\'appending\\' that last digit to rev_num. e.g. rev_num starts at 0. 0 becomes 5 after appending 5. 5 becomes 52 after appending 2 \\n    3. we keep doing this until all num\\'s digits have been popped, which happens when num becomes 0. e.g. when num is 0, rev_num will be 521\\n\\tNote: the \\'popping\\' and \\'appending\\' is done with cute math tricks, which is more space saving & usually faster than converting the number to a string\\n\\t\"\"\"\\n\\t\\n    original_num = num\\n    rev_num = 0\\n\\t#each line inside the while loop below does a neat math trick, try them w/ pencil & paper to understand why they work\\n    while num > 0:\\n\\t  #get last digit from num. e.g. 125 % 10 returns 5\\n      last_digit = num % 10\\n\\t  #remove last digit from num. e.g. lets say num is 125. num is then set to 125 // 10 which is 12\\n      num = num // 10\\n\\t  #effectively, the above two lines of code have simply popped the last digit from num and saved it. e.g. num is changed from 125 to 12. last_digit is set to 5\\n\\n      #append last digit to right of rev_num, e.g. 5 becomes 52 after appending 2\\n      rev_num = rev_num*10 + last_digit\\n    \\n\\t#once the while loop is done, rev_num represents the reversed number of the original number\\n\\t#in below code, if they match, its a palindrome, since palindromes are symmetrical! e.g. 125 does not equal 521 so this condition would fail\\n    return original_num == rev_num\\n\\t\\n\\t\"\"\"\\n\\tside note: the while loop gets completely skipped if num is initially 0.\\n\\tHere that situation conviently still gives us the right answer as rev_num will be 0 so its no problem, but\\n\\tstill its good to think about edge cases.\\n\\t\"\"\"\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\ndef isPalindrome(self, num):\\n\\t#negatives can\\'t be palindromes cause of their minus sign so\\n\\t#instead of dealing with this in our main code, we get rid of this possibility immediately\\n    if num < 0: return False\\n\\n    \"\"\"\\n\\tSteps in this algorithm:\\n    1. get the reversed number (the original number but its digits reversed). e.g. 125 becomes 521\\n    2. if the reversed number == original number, its a palindrome! Done!\\n    \\n\\tHow to get reversed number (rev_num):\\n    1. we do this by \\'popping\\' the num\\'s last digit. e.g. 125 becomes 12, we store 5 as last_digit\\n    2. and then \\'appending\\' that last digit to rev_num. e.g. rev_num starts at 0. 0 becomes 5 after appending 5. 5 becomes 52 after appending 2 \\n    3. we keep doing this until all num\\'s digits have been popped, which happens when num becomes 0. e.g. when num is 0, rev_num will be 521\\n\\tNote: the \\'popping\\' and \\'appending\\' is done with cute math tricks, which is more space saving & usually faster than converting the number to a string\\n\\t\"\"\"\\n\\t\\n    original_num = num\\n    rev_num = 0\\n\\t#each line inside the while loop below does a neat math trick, try them w/ pencil & paper to understand why they work\\n    while num > 0:\\n\\t  #get last digit from num. e.g. 125 % 10 returns 5\\n      last_digit = num % 10\\n\\t  #remove last digit from num. e.g. lets say num is 125. num is then set to 125 // 10 which is 12\\n      num = num // 10\\n\\t  #effectively, the above two lines of code have simply popped the last digit from num and saved it. e.g. num is changed from 125 to 12. last_digit is set to 5\\n\\n      #append last digit to right of rev_num, e.g. 5 becomes 52 after appending 2\\n      rev_num = rev_num*10 + last_digit\\n    \\n\\t#once the while loop is done, rev_num represents the reversed number of the original number\\n\\t#in below code, if they match, its a palindrome, since palindromes are symmetrical! e.g. 125 does not equal 521 so this condition would fail\\n    return original_num == rev_num\\n\\t\\n\\t\"\"\"\\n\\tside note: the while loop gets completely skipped if num is initially 0.\\n\\tHere that situation conviently still gives us the right answer as rev_num will be 0 so its no problem, but\\n\\tstill its good to think about edge cases.\\n\\t\"\"\"\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3188691,
                "title": "c-without-converting-to-string-simple-solution-92",
                "content": "# Intuition\\nconstruct reverse integer and check if it is the same as the original\\n\\n# Approach\\ncreate a copy c and use it to construct the reverse integer using modulo arithmetics\\n\\n# Complexity\\n- Time complexity:\\n$$O(n)$$\\nwhere n is the number of digits\\n\\n- Space complexity:\\n$$O(1)$$\\n\\n# Code\\n```\\npublic class Solution {\\n    public bool IsPalindrome(int x) {\\n        int r = 0, c = x;\\n        while (c > 0)\\n        {\\n            r = r * 10 + c % 10;\\n            c /= 10;\\n        }\\n        return r == x; \\n    }\\n}\\n```",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public bool IsPalindrome(int x) {\\n        int r = 0, c = x;\\n        while (c > 0)\\n        {\\n            r = r * 10 + c % 10;\\n            c /= 10;\\n        }\\n        return r == x; \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2745571,
                "title": "python-one-liner",
                "content": "```\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return str(x)[::-1] == str(x)\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return str(x)[::-1] == str(x)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 5409,
                "title": "straightforward-java-code",
                "content": "    public class Solution {\\n    public boolean isPalindrome(int x) {\\n        int sum = 0,target = x;\\n        while (x > 0) {\\n            int temp = x % 10;\\n            x /= 10;\\n            sum = sum * 10 + temp;\\n        }\\n        return sum == target;\\n    }\\n}",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int sum = 0,target = x;\\n        while (x > 0) {\\n            int temp = x % 10;\\n            x /= 10;\\n            sum = sum * 10 + temp;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 5595,
                "title": "solution-using-32-bit-integer-without-overflow",
                "content": "\\nThe idea is to reverse only half of the digits and compare them.\\n\\n        public boolean isPalindrome1(int x) {\\n        if (x == 0) return true;\\n        // in leetcode, negative numbers and numbers with ending zeros\\n        // are not palindrome\\n        if (x < 0 || x % 10 == 0)\\n            return false;\\n\\n        // reverse half of the number\\n        // the exit condition is y >= x\\n        // so that overflow is avoided.\\n        int y = 0;\\n        while (y < x) {\\n            y = y * 10 + (x % 10);\\n            if (x == y)  // to check numbers with odd digits\\n                return true;\\n            x /= 10;\\n        }\\n        return x == y; // to check numbers with even digits\\n    }",
                "solutionTags": [],
                "code": "\\nThe idea is to reverse only half of the digits and compare them.\\n\\n        public boolean isPalindrome1(int x) {\\n        if (x == 0) return true;\\n        // in leetcode, negative numbers and numbers with ending zeros\\n        // are not palindrome\\n        if (x < 0 || x % 10 == 0)\\n            return false;\\n\\n        // reverse half of the number\\n        // the exit condition is y >= x\\n        // so that overflow is avoided.\\n        int y = 0;\\n        while (y < x) {\\n            y = y * 10 + (x % 10);\\n            if (x == y)  // to check numbers with odd digits\\n                return true;\\n            x /= 10;\\n        }\\n        return x == y; // to check numbers with even digits\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 151374,
                "title": "javascript-solution",
                "content": "```js\\nfunction isPalindrome(x) {\\n  if (x < 0) return false;\\n  if (x < 10) return true;\\n  if (x % 10 === 0) return false;\\n\\n  let rev = 0;\\n  while (rev < x) {\\n    rev *= 10;\\n    rev += x%10;\\n    x = Math.trunc(x/10);\\n  }\\n  return rev === x || Math.trunc(rev/10) === x;\\n}\\n```",
                "solutionTags": [],
                "code": "```js\\nfunction isPalindrome(x) {\\n  if (x < 0) return false;\\n  if (x < 10) return true;\\n  if (x % 10 === 0) return false;\\n\\n  let rev = 0;\\n  while (rev < x) {\\n    rev *= 10;\\n    rev += x%10;\\n    x = Math.trunc(x/10);\\n  }\\n  return rev === x || Math.trunc(rev/10) === x;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 5133,
                "title": "my-c-solution",
                "content": "    class Solution {\\n\\npublic:\\n\\n    bool isPalindrome(int x) {\\n        if(x<0)\\n            return false;\\n\\n        int num=x;\\n        int a=0;\\n        while(x)\\n        {\\n            a=a*10 + x%10;\\n            x=x/10;\\n        }\\n        if(a==num)\\n            return true;\\n        else\\n            return false;\\n        \\n    }\\n};\\n\\n\\n----------\\n## Heading ##",
                "solutionTags": [],
                "code": "class Solution {\\n\\npublic:\\n\\n    bool isPalindrome(int x) {\\n        if(x<0)\\n            return false;\\n\\n        int num=x;\\n        int a=0;\\n        while(x)\\n        {\\n            a=a*10 + x%10;\\n            x=x/10;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 3095055,
                "title": "beats-96-beginner-friendly-solution",
                "content": "![image.png](https://assets.leetcode.com/users/images/c64fe0ee-2baf-4edc-810e-7bb0d6b71035_1674583737.648591.png)\\n\\n\\n# Complexity\\n- Time complexity:\\nO(N)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n\\n    if(x<0)return false;\\n    int temp=x;\\n    int sum=0;\\n    while(x!=0){\\n    sum=(sum*10)+(x%10);\\n    x=x/10;\\n    }\\n    return (temp==sum);\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n\\n    if(x<0)return false;\\n    int temp=x;\\n    int sum=0;\\n    while(x!=0){\\n    sum=(sum*10)+(x%10);\\n    x=x/10;\\n    }\\n    return (temp==sum);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1435115,
                "title": "solution-in-c",
                "content": "Runtime: 0 ms, faster than 100.00% of C online submissions for Palindrome Number.\\nMemory Usage: 5.8 MB, less than 97.02% of C online submissions for Palindrome Number.\\n\\n```\\nbool isPalindrome(int x){\\nlong int rev = 0;\\nint temp = x;\\nif(x<0)\\n\\treturn false;\\n\\nwhile(x){\\n    rev = rev * 10 + x % 10;\\n    x /= 10;\\n\\t}\\n        \\nreturn (temp == rev);\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nbool isPalindrome(int x){\\nlong int rev = 0;\\nint temp = x;\\nif(x<0)\\n\\treturn false;\\n\\nwhile(x){\\n    rev = rev * 10 + x % 10;\\n    x /= 10;\\n\\t}\\n        \\nreturn (temp == rev);\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 513145,
                "title": "four-short-python-solutions",
                "content": "S1: Integer-only (compare the original number with the completely reversed number)\\n```python\\ndef isPalindrome(self, x: int) -> bool:\\n\\tif x < 0:\\n        return False\\n    a, b = x, 0\\n    while x:\\n        b *= 10\\n        b += x % 10\\n        x //= 10\\n    return a == b\\n```\\nS2: Integer-only with early stop (reversing only half number of digits is enough)\\n```python\\ndef isPalindrome(self, x: int) -> bool:\\n    if x and not x % 10:\\n        return False\\n    y = 0\\n    while x > y:\\n        y *= 10\\n        y += x % 10\\n        x //= 10\\n    return x == y or x == y // 10   # even/odd number of digits\\n```\\nS3: 1-line string (could it be shorter?)\\n```python\\ndef isPalindrome(self, x: int) -> bool:\\n\\treturn str(x)[::-1] == str(x)\\n```\\nS4: String with early stop\\n```python\\ndef isPalindrome(self, x: int) -> bool:\\n\\ts = str(x)\\n    for i in range(len(s) // 2):\\n        if s[i] != s[~i]:\\n            return False\\n    return True\\n```\\nVote up if you find them helpful, thanks!",
                "solutionTags": [
                    "Python"
                ],
                "code": "```python\\ndef isPalindrome(self, x: int) -> bool:\\n\\tif x < 0:\\n        return False\\n    a, b = x, 0\\n    while x:\\n        b *= 10\\n        b += x % 10\\n        x //= 10\\n    return a == b\\n```\n```python\\ndef isPalindrome(self, x: int) -> bool:\\n    if x and not x % 10:\\n        return False\\n    y = 0\\n    while x > y:\\n        y *= 10\\n        y += x % 10\\n        x //= 10\\n    return x == y or x == y // 10   # even/odd number of digits\\n```\n```python\\ndef isPalindrome(self, x: int) -> bool:\\n\\treturn str(x)[::-1] == str(x)\\n```\n```python\\ndef isPalindrome(self, x: int) -> bool:\\n\\ts = str(x)\\n    for i in range(len(s) // 2):\\n        if s[i] != s[~i]:\\n            return False\\n    return True\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 974775,
                "title": "c-4-line-solution-fast-easy-and-light-full-explanation-with-tips-and-tricks",
                "content": "**About:**\\nThis is a quick and easy way to solve this problem, which is both fast and consistent for any input within the integer range. Leetcode has input constraints, so integer overflow will never occur but in the real world you should first check that (x > INT_MAX), from a defensive programming standpoint.\\n\\n**A tip before beginning:**\\n*(Aimed at beginners, or those with a more formal, non-CP experience with C++)*\\nLeetcode automatically specifies ```using namespace std;``` so we do *not* need to prefix operations like \\'reverse\\' with the library identifier ```std``` using the scope operator ```::``` , such as ```std::reverse```. In the real world, it is bad practice to import the entire std namespace, and also bad practice to not specify the library that a function is a part of explicitly since it can cause conflicts during compilation. For competitive programming, it allows us to write faster, though, so definitely use it!\\n\\n**Performance:**\\nRuntime (leetcode runtime is inconsistent): 8ms.\\nMemory usage (consistent): 6.3MB.\\n\\n**Big idea:**\\nIf a reversed string representation of int x is the same as its original (forward) representation, it is a palindrome (return true). Otherwise, it is not, and we return false.\\n\\n**Solution:**\\n```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        string s = to_string(x); //convert int x to a string\\n        string s2 = s; //make a copy of the string representation of int x to reverse\\n        reverse(s2.begin(), s2.end()); //use reverse to reverse s2  from its beginning to end\\n        return (s == s2); //*see note below\\n    }\\n};\\n```\\n**Notes, tips, and tricks:**\\n*Since (s == s2) is a conditional, and evaluates to a boolean, true or false, we can simplify the following\\n```\\nif(s == s2) {\\n\\treturn true;\\n} else {\\n\\treturn false;\\n}\\n```\\nto \\n```\\nreturn (s == s2);\\n``` \\nwhich will either return true or false.\\n\\nNote also that if you wanted the full if-else statement, you can choose to omit the brackets\\n(i.e.)\\n```\\nif(s == s2)\\n\\treturn true;\\nelse\\n\\treturn false;\\n```\\n\\nwhich is valid for compilation, and common in competitive programming, but bad practice in the real world. This is because you can only have one statement after the conditional if you omit brackets, and it\\'s easy to miss that there aren\\'t brackets and add another statement while working on a project/codebase. So, include brackets in actual programming work! Keep the quick and dirty stuff for competitive programming!\\n\\nI hope this helps :)\\n-ayyitsnicmag",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```using namespace std;```\n```std```\n```::```\n```std::reverse```\n```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        string s = to_string(x); //convert int x to a string\\n        string s2 = s; //make a copy of the string representation of int x to reverse\\n        reverse(s2.begin(), s2.end()); //use reverse to reverse s2  from its beginning to end\\n        return (s == s2); //*see note below\\n    }\\n};\\n```\n```\\nif(s == s2) {\\n\\treturn true;\\n} else {\\n\\treturn false;\\n}\\n```\n```\\nreturn (s == s2);\\n```\n```\\nif(s == s2)\\n\\treturn true;\\nelse\\n\\treturn false;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 981758,
                "title": "go-8ms-solution",
                "content": "```\\nfunc isPalindrome(num int) bool {\\n\\tif num < 0 {\\n\\t\\treturn false\\n\\t}\\n\\tx := num\\n\\treversed := 0\\n\\tfor x != 0 {\\n\\t\\treversed = 10*reversed + x%10\\n\\t\\tx /= 10\\n\\t}\\n\\treturn (reversed == num)\\n}\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```\\nfunc isPalindrome(num int) bool {\\n\\tif num < 0 {\\n\\t\\treturn false\\n\\t}\\n\\tx := num\\n\\treversed := 0\\n\\tfor x != 0 {\\n\\t\\treversed = 10*reversed + x%10\\n\\t\\tx /= 10\\n\\t}\\n\\treturn (reversed == num)\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 467842,
                "title": "javascript",
                "content": "Runtime: 180 ms, faster than 86.82% of JavaScript online submissions for Palindrome Number.\\nMemory Usage: 45.4 MB, less than 64.65% of JavaScript online submissions for Palindrome Number.\\n\\n```\\nvar isPalindrome = function(x) {\\n    const s = x.toString();\\n    if (s.length === 1) {\\n        return true;\\n    }\\n    const start = s[0];\\n    const end = s[s.length - 1];\\n    if (start !== end) {\\n        return false;\\n    }\\n    if (s.length === 2) {\\n        return true;\\n    }\\n    const subStr = s.substring(1, s.length - 1);\\n    return isPalindrome(subStr);\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nvar isPalindrome = function(x) {\\n    const s = x.toString();\\n    if (s.length === 1) {\\n        return true;\\n    }\\n    const start = s[0];\\n    const end = s[s.length - 1];\\n    if (start !== end) {\\n        return false;\\n    }\\n    if (s.length === 2) {\\n        return true;\\n    }\\n    const subStr = s.substring(1, s.length - 1);\\n    return isPalindrome(subStr);\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 5583,
                "title": "is-this-simple-enough-what-is-the-so-called-generic-way",
                "content": "    class Solution {\\n    public:\\n        bool isPalindrome(int x) {\\n            int i = 0;;\\n            if ((x % 10 == 0 && x != 0) || x < 0) return false;\\n            while (i < x) {\\n                i = i * 10 + x % 10;\\n                x = x / 10;\\n            }\\n            return (i == x || i / 10 == x);        \\n        }\\n    };",
                "solutionTags": [],
                "code": "class Solution {\\n    public:\\n        bool isPalindrome(int x) {\\n            int i = 0;;\\n            if ((x % 10 == 0 && x != 0) || x < 0) return false;\\n            while (i < x) {\\n                i = i * 10 + x % 10;\\n                x = x / 10;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 2686747,
                "title": "python-one-liner",
                "content": "```\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return str(x) == str(x)[::-1]\\n```\\nWe convert the integer to a string and reverse it using index slicing (str(x)[::-1]). Next, we compare the reversed string to the original (str(x) == str(x)[::-1]). We perform the check in the return statement so that our function will return true if the number is a palindrome and false if it is not.\\n\\t\\t",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return str(x) == str(x)[::-1]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1310664,
                "title": "simple-solution-c",
                "content": "```\\nclass Solution {\\npublic:\\n    bool isPalindrome(long int x) {\\n       long int r,sum=0,t;\\n        t=x;\\n        while(t>0)\\n        {\\n            r=t%10;\\n            sum=sum*10+r;\\n            t/=10;\\n        }\\n        if(sum==x)\\n            return true;\\n        return false;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    bool isPalindrome(long int x) {\\n       long int r,sum=0,t;\\n        t=x;\\n        while(t>0)\\n        {\\n            r=t%10;\\n            sum=sum*10+r;\\n            t/=10;\\n        }\\n        if(sum==x)\\n            return true;\\n        return false;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3010225,
                "title": "c-3-line-solution-faster-than-99-65-explained",
                "content": "# Intuition\\nWe can easily solve this problem by looking at the definition of a palindrome. \"An integer is a palindrome when it reads the same forward and backward.\"\\n\\nFirst, we can convert `x` to a string, reverse it, and check if it is equal to the original.\\n\\nWe can convert the string into a char array and reverse it using `Array.Reverse()`.\\n\\nThen, we can concatenate all the values of the array by saying `new string(arr)`.\\n\\n\\n\\n\\nFor context in the solution below:\\n`y` is the char array where x is reversed in.\\n\\n# Code\\n```\\npublic class Solution\\n{\\n    public bool IsPalindrome(int x)\\n    {\\n\\t\\tvar y = x.ToString().ToCharArray();  \\n        Array.Reverse(y); //Reverses char array.\\n        return x.ToString() == new string(y);\\n        //Checks if original string is equal to its reverse.\\n    }\\n}\\n```\\n\\nEdit: Thanks to the comments below, I\\'ve learned that there is a built-in function for reversing the string (no need to convert it to a CharArray). Probably could be done in one line, Python style.\\n\\nInstead, it could be done like this:\\n\\n```\\npublic class Solution\\n{\\n    public bool IsPalindrome(int x)\\n    {\\n\\t\\treturn x.ToString().Reverse() == x.ToString()\\n    }\\n}\\n```\\n\\n(Much thanks to @rhazizi and @akimz08)",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution\\n{\\n    public bool IsPalindrome(int x)\\n    {\\n\\t\\tvar y = x.ToString().ToCharArray();  \\n        Array.Reverse(y); //Reverses char array.\\n        return x.ToString() == new string(y);\\n        //Checks if original string is equal to its reverse.\\n    }\\n}\\n```\n```\\npublic class Solution\\n{\\n    public bool IsPalindrome(int x)\\n    {\\n\\t\\treturn x.ToString().Reverse() == x.ToString()\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1178022,
                "title": "simple-and-clear-c",
                "content": "```\\npublic class Solution {\\n    public bool IsPalindrome(int x) {\\n        int rev = 0, temp = x;\\n        while(temp > 0){\\n            rev = rev*10 + temp%10;\\n            temp /= 10;\\n        }\\n        return x == rev;\\n        \\n    }\\n}\\n```\\n\\nAnother Approach using String in C#\\n```\\npublic class Solution {\\n    public bool IsPalindrome(int x) {\\n        string str = x.ToString();\\n        int low = 0;\\n        while(low < str.Length - low - 1){\\n            if(str[low] != str[str.Length-low-1])\\n                return false;\\n            low++;\\n        }\\n        return true;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic class Solution {\\n    public bool IsPalindrome(int x) {\\n        int rev = 0, temp = x;\\n        while(temp > 0){\\n            rev = rev*10 + temp%10;\\n            temp /= 10;\\n        }\\n        return x == rev;\\n        \\n    }\\n}\\n```\n```\\npublic class Solution {\\n    public bool IsPalindrome(int x) {\\n        string str = x.ToString();\\n        int low = 0;\\n        while(low < str.Length - low - 1){\\n            if(str[low] != str[str.Length-low-1])\\n                return false;\\n            low++;\\n        }\\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2797115,
                "title": "easy-python-solution-with-o-1-space",
                "content": "```\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if x < 0:\\n            return False\\n        \\n        res = 0\\n        temp = x\\n        \\n        while temp:\\n            temp, n = divmod(temp, 10)\\n            res = (res * 10) + n\\n                \\n        return res == x\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if x < 0:\\n            return False\\n        \\n        res = 0\\n        temp = x\\n        \\n        while temp:\\n            temp, n = divmod(temp, 10)\\n            res = (res * 10) + n\\n                \\n        return res == x\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2744540,
                "title": "piss-easy-javascript-solution-even-noobs-can-understand",
                "content": "```\\nvar isPalindrome = function(x) {\\n    let pali = x.toString()\\n    .split(\\'\\')\\n    .reverse()\\n    .join(\\'\\')\\n    let normal = x.toString()\\n   return (pali === normal)\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar isPalindrome = function(x) {\\n    let pali = x.toString()\\n    .split(\\'\\')\\n    .reverse()\\n    .join(\\'\\')\\n    let normal = x.toString()\\n   return (pali === normal)\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2350136,
                "title": "rust-one-liner",
                "content": "```\\nimpl Solution {\\n    pub fn is_palindrome(x: i32) -> bool {\\n        return x.to_string().chars().rev().eq(x.to_string().chars())\\n    }\\n}\\n```",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```\\nimpl Solution {\\n    pub fn is_palindrome(x: i32) -> bool {\\n        return x.to_string().chars().rev().eq(x.to_string().chars())\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1527951,
                "title": "java-tc-o-log10-n-2-sc-o-1-optimal-reverse-half-compare",
                "content": "```java\\n/**\\n * Reverse Half & Compare\\n *\\n * Time Complexity: O((log10 N) / 2)\\n *\\n * Space Complexity: O(1)\\n *\\n * N = Number of digits in input number.\\n */\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        if (x < 0 || (x != 0 && x % 10 == 0)) {\\n            return false;\\n        }\\n        if (x < 10) {\\n            return true;\\n        }\\n\\n        int reverse = 0;\\n        while (reverse < x) {\\n            reverse = reverse * 10 + x % 10;\\n            x /= 10;\\n        }\\n\\n       /**\\n         * If input number has even number of digits then check `x == reverse`.\\n         *\\n         * If input number has odd number of digits then check `x == reverse / 10`. This\\n         * is because, reverse will have one extra digit. Middle digit of original\\n         * number will be least significant digit of reverse.\\n         */\\n        return reverse == x || reverse / 10 == x;\\n    }\\n}\\n```\\n\\n---\\n\\nSolutions to other Palindrome questions on LeetCode:\\n- [5. Longest Palindromic Substring](https://leetcode.com/problems/longest-palindromic-substring/discuss/1539190/Java-or-TC:-O(N2)-or-SC:-O(1)-or-Two-Optimized-solutions-with-Early-Exit-Condition)\\n- [266. Palindrome Permutation](https://leetcode.com/problems/palindrome-permutation/discuss/1527941/Java-or-TC:-O(N)-or-SC:-O(N)-or-Early-Exit-and-Space-Optimized-HashSet-solution)\\n- [267. Palindrome Permutation II](https://leetcode.com/problems/palindrome-permutation-ii/discuss/1527948/Java-or-TC:-O(N*(N2)!)-or-SC:-O(N)-or-Optimal-Backtracking-using-CountMap)\\n- [647. Palindromic Substrings](https://leetcode.com/problems/palindromic-substrings/discuss/1539193/Java-or-TC:-O(N2)-or-SC:-O(1)-or-Optimized-solution-for-continuous-repeating-chars)\\n",
                "solutionTags": [
                    "Java",
                    "Math"
                ],
                "code": "```java\\n/**\\n * Reverse Half & Compare\\n *\\n * Time Complexity: O((log10 N) / 2)\\n *\\n * Space Complexity: O(1)\\n *\\n * N = Number of digits in input number.\\n */\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        if (x < 0 || (x != 0 && x % 10 == 0)) {\\n            return false;\\n        }\\n        if (x < 10) {\\n            return true;\\n        }\\n\\n        int reverse = 0;\\n        while (reverse < x) {\\n            reverse = reverse * 10 + x % 10;\\n            x /= 10;\\n        }\\n\\n       /**\\n         * If input number has even number of digits then check `x == reverse`.\\n         *\\n         * If input number has odd number of digits then check `x == reverse / 10`. This\\n         * is because, reverse will have one extra digit. Middle digit of original\\n         * number will be least significant digit of reverse.\\n         */\\n        return reverse == x || reverse / 10 == x;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 5594,
                "title": "sharing-my-simple-and-straightforward-solution-with-explanation",
                "content": "    bool isPalindrome(int x) {\\n        long reverse = 0;\\n        long num = abs(x);\\n        while(x != 0){\\n            reverse *= 10;\\n            reverse += x % 10;\\n            x /= 10;\\n        }\\n        return reverse == num;\\n    }\\n\\nThe basic idea is to reverse `x`.\\n\\nHowever, we need to handle two issues. First of all, what if reverse number overflows? We use `long` to solve. Secondly, negative number doesn't have palindrome. So we make num = abs(x).",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "    bool isPalindrome(int x) {\\n        long reverse = 0;\\n        long num = abs(x);\\n        while(x != 0){\\n            reverse *= 10;\\n            reverse += x % 10;\\n            x /= 10;\\n        }\\n        return reverse == num;\\n    }\\n\\nThe basic idea is to reverse `x`.\\n\\nHowever, we need to handle two issues. First of all, what if reverse number overflows? We use `long` to solve. Secondly, negative number doesn't have palindrome. So we make num = abs(x).",
                "codeTag": "Unknown"
            },
            {
                "id": 4033190,
                "title": "c-java-python-two-methods-explained-intuition",
                "content": "# Problem Description\\n**Given** an integer x, return **true** if x is a **palindrome**, and **false** otherwise.\\n\\n**Palindrome** is a **word**, **phrase**, **number**, or **other sequence of characters** that **reads** the **same** **forward** and **backward**. In simpler terms, it\\'s something that `remains unchanged when its order is reversed`.\\n\\nHere are a few examples of palindromes:\\n- Words :\"racecar\", \"madam\"\\n- Numbers: 121, 1331, 12321\\n\\n---\\n# Intuition\\n## First Approach (Convert to String)\\nThe **first** approach is to **convert our number into a string** and there we can **access** any digit **freely** unlike the integer that we can\\'t do that there.\\nthen we can make a **mirror** around the middle of the string and **compare** the first char with last char, the second with the one before last and so on.\\nif there is a **difference** then return false otherwise return true. \\n\\n![image.png](https://assets.leetcode.com/users/images/d6c0868b-843e-4f69-a092-4a5f4c39051f_1694475883.578209.png)\\n\\n![image.png](https://assets.leetcode.com/users/images/cf45160a-6169-463a-a4d0-8c85c5fa029a_1694475917.7519221.png)\\n\\n\\n## Second Approach (Extract Digits using %)\\n\\n**Modulo operation** is is a mathematical operation that returns the remainder when one number is divided by another.\\n- 7 % 3 = 1\\n- 9 % 5 = 4\\n\\nModulo operation is very helpful in our problem since it helps us to **extract the least digit in our number**.\\nThe solution is **extract** the digit from the original number then **put it as least digit** in our new reversed number then **delete** that digit by dividing by 10.\\n\\n**Example : 121**\\n```\\nnumber = 121 , reversed = 0 \\ndigit = 121 % 10 = 1 \\nreversed = 0 * 10 + 1 = 1\\nnumber = 121 / 10 = 12\\n```\\n```\\nnumber = 12 , reversed = 1 \\ndigit = 12 % 10 = 2 \\nreversed = 1 * 10 + 2 = 2\\nnumber = 12 / 10 = 1\\n```\\n```\\nnumber = 1 , reversed = 12\\ndigit = 1 % 10 = 1 \\nreversed = 12 * 10 + 1 = 121\\nnumber = 1 / 10 = 0\\n```\\nWe can see that reversed number **equal** to original number which means it is palindrome.\\n\\n\\n---\\n\\n\\n# Approach\\n## First Approach (Convert to String)\\n- **Convert** the integer x to a string representation.\\n- Determine the **length** of the string.\\n- Set up a for **loop** that iterates from the beginning of the string (index 0) to halfway through the string (length / 2).\\n- Inside the loop, **compare** the character at the **current** position (number[i]) with the character at the **corresponding** position from the end of the string (number[length - i - 1]).\\n- If the characters **do not match** (i.e., the number is not palindrome from the center outward), return **false** immediately, indicating that it\\'s not a palindrome.\\n- If the **loop** **completes** without finding any mismatches (all digits match), return **true**, indicating that the integer is a palindrome.\\n\\n# Complexity\\n- **Time complexity:**$$O(N)$$\\nSince we are iterating over all the digits.\\n- **Space complexity:**$$O(N)$$\\nSince we are storing the number as a string where `N` here is the number of the digits.\\n---\\n## Second Approach (Extract Digits using %)\\n- Create **two long variables**, number and reversed, both initially set to the value of the input integer x. The number variable stores the **original** number, and reversed will store the **number in reverse order**.\\n- Enter a while **loop** that continues as long as the value of x is greater than 0.\\n- Inside the **loop**:\\n    - Calculate the **last digit of x** by taking the remainder of x when divided by 10 **(x % 10)**. This digit is stored in the digit variable.\\n    - **Update the reversed variable** by multiplying it by 10 (shifting digits left) and then adding the digit to it. This effectively builds the reversed number digit by digit.\\n    - **Remove the last digit** from x by dividing it by 10 (x /= 10).\\n- After the loop completes, all digits of x have been processed and reversed in reversed.\\n- Check if the number (the original input) is **equal** to the reversed (the reversed input). If they are equal, return **true**, indicating that the integer is a palindrome. If they are not equal, return **false**.\\n\\n# Complexity\\n- **Time complexity:**$$O(N)$$\\nSince we are iterating over all the digits.\\n- **Space complexity:**$$O(1)$$\\nWe only store two additional variables.\\n\\n# Code\\n## First Approach (Convert to String)\\n```C++ []\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        string number = to_string(x) ;\\n        int length = number.size() ;\\n        for(int i = 0 ; i < length / 2 ; i ++){\\n            if(number[i] != number[length - i - 1])\\n                return false ;\\n        }\\n        return true;\\n    }\\n};\\n```\\n```Java []\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        String number = Integer.toString(x);\\n        int length = number.length();\\n        for (int i = 0; i < length / 2; i++) {\\n            if (number.charAt(i) != number.charAt(length - i - 1)) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n}\\n```\\n```Python []\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        number = str(x)\\n        length = len(number)\\n        \\n        for i in range(length // 2):\\n            if number[i] != number[length - i - 1]:\\n                return False\\n        \\n        return True\\n```\\n## Second Approach (Extract Digits using %)\\n```C++ []\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long long number = x, reversed = 0;\\n        while(x > 0){\\n            int digit = x % 10 ;\\n            reversed = (reversed * 10) + digit ; \\n            x /= 10 ;\\n        }\\n        return number == reversed ;\\n    }\\n};\\n```\\n```Java []\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        long number = x;\\n        long reversed = 0;\\n        \\n        while (x > 0) {\\n            int digit = x % 10;\\n            reversed = (reversed * 10) + digit;\\n            x /= 10;\\n        }\\n        return number == reversed;\\n    }\\n}\\n```\\n```Python []\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        number = x\\n        reversed_num = 0\\n        \\n        while x > 0:\\n            digit = x % 10\\n            reversed_num = (reversed_num * 10) + digit\\n            x //= 10\\n        \\n        return number == reversed_num\\n```\\n\\n\\n",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python3",
                    "Math"
                ],
                "code": "```\\nnumber = 121 , reversed = 0 \\ndigit = 121 % 10 = 1 \\nreversed = 0 * 10 + 1 = 1\\nnumber = 121 / 10 = 12\\n```\n```\\nnumber = 12 , reversed = 1 \\ndigit = 12 % 10 = 2 \\nreversed = 1 * 10 + 2 = 2\\nnumber = 12 / 10 = 1\\n```\n```\\nnumber = 1 , reversed = 12\\ndigit = 1 % 10 = 1 \\nreversed = 12 * 10 + 1 = 121\\nnumber = 1 / 10 = 0\\n```\n```C++ []\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        string number = to_string(x) ;\\n        int length = number.size() ;\\n        for(int i = 0 ; i < length / 2 ; i ++){\\n            if(number[i] != number[length - i - 1])\\n                return false ;\\n        }\\n        return true;\\n    }\\n};\\n```\n```Java []\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        String number = Integer.toString(x);\\n        int length = number.length();\\n        for (int i = 0; i < length / 2; i++) {\\n            if (number.charAt(i) != number.charAt(length - i - 1)) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n}\\n```\n```Python []\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        number = str(x)\\n        length = len(number)\\n        \\n        for i in range(length // 2):\\n            if number[i] != number[length - i - 1]:\\n                return False\\n        \\n        return True\\n```\n```C++ []\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long long number = x, reversed = 0;\\n        while(x > 0){\\n            int digit = x % 10 ;\\n            reversed = (reversed * 10) + digit ; \\n            x /= 10 ;\\n        }\\n        return number == reversed ;\\n    }\\n};\\n```\n```Java []\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        long number = x;\\n        long reversed = 0;\\n        \\n        while (x > 0) {\\n            int digit = x % 10;\\n            reversed = (reversed * 10) + digit;\\n            x /= 10;\\n        }\\n        return number == reversed;\\n    }\\n}\\n```\n```Python []\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        number = x\\n        reversed_num = 0\\n        \\n        while x > 0:\\n            digit = x % 10\\n            reversed_num = (reversed_num * 10) + digit\\n            x //= 10\\n        \\n        return number == reversed_num\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3928466,
                "title": "easiest-approach",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(n)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        if x<0:\\n            return False\\n\\n        empty = []\\n\\n        while x > 0:\\n            x, remd = divmod(x, 10)\\n            empty.append(remd)\\n\\n        a=empty[::-1]\\n        if a==empty:\\n            return True\\n        \\n        else:\\n            return False\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        if x<0:\\n            return False\\n\\n        empty = []\\n\\n        while x > 0:\\n            x, remd = divmod(x, 10)\\n            empty.append(remd)\\n\\n        a=empty[::-1]\\n        if a==empty:\\n            return True\\n        \\n        else:\\n            return False\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3065237,
                "title": "palindrome-number-easy-c-using-string",
                "content": "\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nusing to_string\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n0(n)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n0(1)\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x  <  0)return false;\\n        string s = to_string(x);\\n        for(int i=0;i<s.length()/2;i++){\\n            if(s[i] != s[s.length() -1 - i])return false;\\n        }\\n        return true;\\n\\n    }\\n};\\n```\\nupvote if you like it\\n",
                "solutionTags": [
                    "C++",
                    "String"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x  <  0)return false;\\n        string s = to_string(x);\\n        for(int i=0;i<s.length()/2;i++){\\n            if(s[i] != s[s.length() -1 - i])return false;\\n        }\\n        return true;\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3946947,
                "title": "java-runtime-4-ms-beats-100",
                "content": "# Intuition\\nMy initial approach to determining whether a given integer is a palindrome involves reversing the digits of the number and comparing the reversed number with the original number. If they are the same, the number is a palindrome.\\n\\n# Approach\\nI will reverse the digits of the given integer by repeatedly extracting the last digit of the number and building the reversed number. I\\'ll compare the reversed number with the original number, and if they match, the number is a palindrome.\\n\\n# Complexity\\n- Time complexity: O(log n)\\n  The number of digits in the input number is proportional to the logarithm of the number with respect to the base 10. Reversing the digits takes logarithmic time.\\n\\n- Space complexity: O(1)\\n  The algorithm uses a constant amount of extra space to store the reversed number and some variables.\\n\\n# Code\\n```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int revers = 0;\\n        int temp =  x;\\n        while (x > 0) {\\n            int digit = x % 10;\\n\\n\\n           revers = revers*10 + digit;\\n\\n\\n            x /= 10;\\n\\n\\n        }\\n\\n        if(revers==temp){\\n            return true;\\n        }\\n        \\n        return false;\\n        \\n    }\\n}\\n```\\n![c0504eaf-5fb8-4a1d-a769-833262d1b86e_1674433591.3836212.webp](https://assets.leetcode.com/users/images/8a3b41d1-f0ca-472f-a9f7-8346b34a824e_1693297402.2918687.webp)",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int revers = 0;\\n        int temp =  x;\\n        while (x > 0) {\\n            int digit = x % 10;\\n\\n\\n           revers = revers*10 + digit;\\n\\n\\n            x /= 10;\\n\\n\\n        }\\n\\n        if(revers==temp){\\n            return true;\\n        }\\n        \\n        return false;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3469770,
                "title": "o-logn-time-complexity-beginner-friendly-solution-c",
                "content": "- Description:\\n              Firstly, I declare two variables one is copy of x and another is sum which stores reverse number.\\n              I start one loop which stop when my original number is less than or equal to 0. inside it I just reverse that number by using modulo-division method. firstly, I do (x%10) which equal to last digit of original number which stores in sum but after each iteration I multiply 10 to it. and also divides original number to 10.\\n              After that loop I have one copy of original number(Here I can not compare to original number because after looping my original number is becomes 0 causing division in loop). so I compare that copy of number with sum variable which stores reverse number.\\n              If my reverse number is equal to original number then It is palindrome otherwise it doesn\\'t.\\n\\n# Complexity\\n- **Time complexity: O(logn) or O(lengthof(x)) or O(no.ofdigitsin(x))**\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- **Space complexity: O(1)**\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long long on=x;\\n        long long sum=0;\\n        while(x>0)\\n        {\\n            sum=(sum*10)+(x%10);\\n            x/=10;\\n        }\\n        if(sum==on)\\n        {\\n            return true;\\n        }\\n        return false;\\n    }\\n};\\n```\\n![upvote.jpg](https://assets.leetcode.com/users/images/d7e96e70-e0b8-4bd1-8949-6de3276d7cb0_1682854946.7058163.jpeg)\\n",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long long on=x;\\n        long long sum=0;\\n        while(x>0)\\n        {\\n            sum=(sum*10)+(x%10);\\n            x/=10;\\n        }\\n        if(sum==on)\\n        {\\n            return true;\\n        }\\n        return false;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2569908,
                "title": "easy-c-soution",
                "content": "```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long long int temp = x;\\n        long long int rev=0;\\n        while(x>0)\\n        {\\n            rev = rev*10 + x%10;\\n            x = x/10;\\n        }\\n        if(rev==temp)\\n            return true;\\n        return false;\\n    }\\n};\\n\\nup vote if you like it\\n```",
                "solutionTags": [
                    "Java",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long long int temp = x;\\n        long long int rev=0;\\n        while(x>0)\\n        {\\n            rev = rev*10 + x%10;\\n            x = x/10;\\n        }\\n        if(rev==temp)\\n            return true;\\n        return false;\\n    }\\n};\\n\\nup vote if you like it\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2770500,
                "title": "easy-c-solution-beginner-friendly",
                "content": "```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        string s = to_string(x);\\n        int i = 0, j = s.length() - 1;\\n        \\n        while(i <= j)\\n        {\\n            if(s[i] != s[j])\\n                return false;\\n            i++;\\n            j--;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        string s = to_string(x);\\n        int i = 0, j = s.length() - 1;\\n        \\n        while(i <= j)\\n        {\\n            if(s[i] != s[j])\\n                return false;\\n            i++;\\n            j--;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1756913,
                "title": "100-fastest-solution-explained",
                "content": "Easy to understand, detailed solution with step by step explanation and code in multiple languages:\\n\\nhttps://www.code-recipe.com/post/palindrome-number\\n\\nLet me know in comments section if you have any doubts. I will be happy to answer.\\n\\n**Kindly upvote if this helps you. Thank You**",
                "solutionTags": [
                    "Java",
                    "Python",
                    "Go"
                ],
                "code": "",
                "codeTag": "Unknown"
            },
            {
                "id": 5443,
                "title": "44ms-c-solution",
                "content": "You can also view more solution on [Github](https://github.com/flexwang/CodeTest)\\n\\n\\tclass Solution {\\n\\tpublic:\\n\\t\\tbool isPalindrome(int x) {\\n\\t\\t\\tif (x < 0) return false;\\n\\t\\t\\tint p1 = 0, p2 = x;\\n\\t\\t\\twhile (p2 > 0) {\\n\\t\\t\\t\\tp1 = p1*10 + p2%10;\\n\\t\\t\\t\\tp2 /= 10;\\n\\t\\t\\t}\\n\\t\\t\\treturn p1 == x;\\n\\t\\t}\\n\\t};",
                "solutionTags": [],
                "code": "class Solution {\\n\\tpublic:\\n\\t\\tbool isPalindrome(int x) {\\n\\t\\t\\tif (x < 0) return false;\\n\\t\\t\\tint p1 = 0, p2 = x;\\n\\t\\t\\twhile (p2 > 0) {\\n\\t\\t\\t\\tp1 = p1*10 + p2%10;\\n\\t\\t\\t\\tp2 /= 10;\\n\\t\\t\\t}",
                "codeTag": "Java"
            },
            {
                "id": 3341636,
                "title": "javascript-100-easy-explanation-overall-o-1-space",
                "content": "# Intuition\\nThis approach converts the input integer x into a string using the toString() method. It then creates two pointers, leftIndex and rightIndex, that start at opposite ends of the string. The algorithm then iterates over the string, comparing the characters at the leftIndex and rightIndex. If they are not the same, the function returns false, indicating that x is not a palindrome. If the pointers meet in the middle of the string and all characters match, the function returns true, indicating that x is a palindrome.\\n\\nThis approach has a time complexity of O(n), where n is the length of the string representation of x, and a space complexity of O(1), because it uses a constant amount of extra memory.\\n\\n# Approach\\nThis code checks if a given number is a palindrome or not by converting it into a string and then comparing its characters. A simpler approach can be to directly compare the digits of the number by reversing them and checking if they are equal.\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\n/**\\n * @param {number} x\\n * @return {boolean}\\n */\\nvar isPalindrome = function (x) {\\n  //TIME-COMPLEXITY: O(n);\\n  //MEMORY: O(1);\\n  const str = x.toString();\\n  let leftIndex = 0;\\n  let rightIndex = str.length - 1;\\n\\n  while (leftIndex < rightIndex) {\\n    if (str.charAt(leftIndex) !== str.charAt(rightIndex)) {\\n      return false;\\n    }\\n    leftIndex++;\\n    rightIndex--;\\n  }\\n\\n  return true;\\n};\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} x\\n * @return {boolean}\\n */\\nvar isPalindrome = function (x) {\\n  //TIME-COMPLEXITY: O(n);\\n  //MEMORY: O(1);\\n  const str = x.toString();\\n  let leftIndex = 0;\\n  let rightIndex = str.length - 1;\\n\\n  while (leftIndex < rightIndex) {\\n    if (str.charAt(leftIndex) !== str.charAt(rightIndex)) {\\n      return false;\\n    }\\n    leftIndex++;\\n    rightIndex--;\\n  }\\n\\n  return true;\\n};\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2728864,
                "title": "c-easy-to-understand-palindrome-number",
                "content": "# Upvote if its helps\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        vector<int> idkw;\\n        if(x<0) return false;\\n        int temp=x;\\n        while(temp){\\n            idkw.push_back(temp%10);\\n            temp/=10;\\n        }\\n        int l=0,r=idkw.size()-1;\\n        while(l<r){\\n            if(idkw[l]!=idkw[r]) return false;\\n            l++;r--;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        vector<int> idkw;\\n        if(x<0) return false;\\n        int temp=x;\\n        while(temp){\\n            idkw.push_back(temp%10);\\n            temp/=10;\\n        }\\n        int l=0,r=idkw.size()-1;\\n        while(l<r){\\n            if(idkw[l]!=idkw[r]) return false;\\n            l++;r--;\\n        }\\n        return true;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 429373,
                "title": "easy-java-solutions",
                "content": "##### Approach 1: Two-Pointer solution\\n``` java\\n     public boolean isPalindrome(int x) {\\n\\t\\t // convert input into an array and rest is nothing but a simple two pointer solution\\n         char[] nums = String.valueOf(x).toCharArray();\\n         int start = 0;\\n         int end = nums.length-1;\\n         while(start < end) {\\n             if(nums[start] != nums[end]) return false;\\n             start++; end--;\\n         }\\n        return true;\\n    }\\n```\\n##### Complexity Analysis\\n* Time Complexity: O(n)\\n* Space Complexity: O(n)\\n\\n##### Approach 2: Intuitive Arithematic Solution\\n```java\\n    public boolean isPalindrome(int x) {\\n\\t\\t// negative case\\n        if(x < 0 || (x!=0 && x%10 == 0)) return false;\\n        int res = 0;\\n\\t\\t// idea here is to recontruct the given input from reverse and later check whether \\n\\t\\t// the input and the result match\\n        while(res < x) {\\n            res = res*10 + x%10;\\n            x = x/10;\\n        }\\n        \\n        return (x==res || res/10 == x);\\n    }\\n```\\n##### Complexity Analysis\\n* Time Complexity: O(n)\\n* Space Complexity: O(1)",
                "solutionTags": [
                    "Java"
                ],
                "code": "``` java\\n     public boolean isPalindrome(int x) {\\n\\t\\t // convert input into an array and rest is nothing but a simple two pointer solution\\n         char[] nums = String.valueOf(x).toCharArray();\\n         int start = 0;\\n         int end = nums.length-1;\\n         while(start < end) {\\n             if(nums[start] != nums[end]) return false;\\n             start++; end--;\\n         }\\n        return true;\\n    }\\n```\n```java\\n    public boolean isPalindrome(int x) {\\n\\t\\t// negative case\\n        if(x < 0 || (x!=0 && x%10 == 0)) return false;\\n        int res = 0;\\n\\t\\t// idea here is to recontruct the given input from reverse and later check whether \\n\\t\\t// the input and the result match\\n        while(res < x) {\\n            res = res*10 + x%10;\\n            x = x/10;\\n        }\\n        \\n        return (x==res || res/10 == x);\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 272592,
                "title": "java-concise-6ms-beats-100",
                "content": "```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int rev = 0, y = x;\\n        while (y > 0) {\\n            rev = rev * 10 + y % 10;\\n            y /= 10;\\n        }\\n        return rev == x;\\n    }\\n}\\n```\\nTime complexity: O(logN)\\nSpace complexity: O(1)",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int rev = 0, y = x;\\n        while (y > 0) {\\n            rev = rev * 10 + y % 10;\\n            y /= 10;\\n        }\\n        return rev == x;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 5141,
                "title": "javascript-fast-optimized",
                "content": "Hi guys, let's check this optimised solution for JS\\n```\\nvar isPalindrome = function(x) {\\n    if (x < 0) return false;        // only positive number\\n    if (x < 10) return true;        // for 1-9 cases\\n    if (x % 10 === 0) return false; // in case of last 0 [3330, 123320, 1000, etc]\\n    let rev = 0;                    // reversed number\\n    while (x >= 10) {\\n        let cur = x % 10;\\n        rev = rev*10 + cur;\\n        if (x === rev) return true; // check before changing\\n        x = ~~(x / 10); // better replace for Math.floor(), bit operator '~' inverts all the bits in your number and in the process converts the number to an int\\n        if (x === rev) return true; // check after changing\\n        if (x < rev) return false;  // stop in case reversed number becomes greater than original value\\n    }\\n    return false; // the longest case (diff in the middle) // [77778777, 10004001] \\n};\\n```",
                "solutionTags": [],
                "code": "```\\nvar isPalindrome = function(x) {\\n    if (x < 0) return false;        // only positive number\\n    if (x < 10) return true;        // for 1-9 cases\\n    if (x % 10 === 0) return false; // in case of last 0 [3330, 123320, 1000, etc]\\n    let rev = 0;                    // reversed number\\n    while (x >= 10) {\\n        let cur = x % 10;\\n        rev = rev*10 + cur;\\n        if (x === rev) return true; // check before changing\\n        x = ~~(x / 10); // better replace for Math.floor(), bit operator '~' inverts all the bits in your number and in the process converts the number to an int\\n        if (x === rev) return true; // check after changing\\n        if (x < rev) return false;  // stop in case reversed number becomes greater than original value\\n    }\\n    return false; // the longest case (diff in the middle) // [77778777, 10004001] \\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2588907,
                "title": "simple-python-solution",
                "content": "This solution is a direct one, i am just comapring reverse of the string to the original string. As we are taking input as integer x. So, first convert it to a str() and then do [::-1] reverse.\\n\\n        if str(x)[::-1] == str(x):\\n            \\n            return True\\n        else:\\n            return False\\n        \\n        \\n You can directly return as well.\\n \\n \\n return True if str(x)[::-1] == str(x) else False\\n \\n \\n If you liked it, give it a Upvote.",
                "solutionTags": [
                    "Python",
                    "String"
                ],
                "code": "This solution is a direct one, i am just comapring reverse of the string to the original string. As we are taking input as integer x. So, first convert it to a str() and then do [::-1] reverse.\\n\\n        if str(x)[::-1] == str(x):\\n            \\n            return True\\n        else:\\n            return False\\n        \\n        \\n You can directly return as well.\\n \\n \\n return True if str(x)[::-1] == str(x) else False\\n \\n \\n If you liked it, give it a Upvote.",
                "codeTag": "Unknown"
            },
            {
                "id": 733411,
                "title": "palindrome-number-solution-with-c",
                "content": "bool isPalindrome(int x){\\n    int reverse = 0;\\n    int temp = x; \\n    if (x < 0 || x > 0 && x%10 == 0){\\n        return 0;\\n    }\\n    else{\\n        while(temp!= 0){\\n            if (reverse<= INT_MAX/10){\\n                reverse = reverse*10 + temp%10;\\n                temp /= 10; \\n            }\\n            else break;\\n        }\\n    }\\n    return x == reverse;\\n}",
                "solutionTags": [],
                "code": "bool isPalindrome(int x){\\n    int reverse = 0;\\n    int temp = x; \\n    if (x < 0 || x > 0 && x%10 == 0){\\n        return 0;\\n    }\\n    else{\\n        while(temp!= 0){\\n            if (reverse<= INT_MAX/10){\\n                reverse = reverse*10 + temp%10;\\n                temp /= 10; \\n            }\\n            else break;\\n        }\\n    }\\n    return x == reverse;\\n}",
                "codeTag": "Unknown"
            },
            {
                "id": 5325,
                "title": "an-accepted-solution-using-no-extra-variable",
                "content": "Yes I misunderstood the meaning of 'no extra space' and I took it for no extra local variable.\\nNevertheless I post a messy one here for those who are by any chance interested.\\nI know it's not what the author intended and it is quite inefficient because of all the repetitive formulas but the basic approach is simple and clear so please don't vote me down :)\\n```\\n#include <math.h>\\n\\n//number of digits of x\\n#define n_digit_of(x) ((int)log10(x))\\n\\n//10^n\\n#define ten_to_power_of(n) ((int)exp(log(10) * (n)))\\n\\n//e.g. the 'order' of 1221 is 1000\\n#define order_of(x) (ten_to_power_of(n_digit_of(x)))\\n\\n//e.g. the number of 'front' 0s of 3000458 is 3.\\n#define n_front_zero_of(x) (n_digit_of(x) - n_digit_of((x) % order_of(x)) - 1)\\n\\n\\nbool isPalindrome(int x) {\\n    if (x < 0) {\\n        return false;\\n    }\\n   \\n    while (x >= 10) {\\n        //compare the most significant and least significant digits\\n        if (x / order_of(x) != (x % 10)) {\\n            return false;\\n        }\\n        \\n        //in case like 400303004, we have to judge more digits\\n        if (n_digit_of(x) - n_digit_of(x % order_of(x)) > 1) {\\n            if (x % ten_to_power_of(n_front_zero_of(x) + 1) != (x % 10)) {\\n                return false;\\n            }\\n        }\\n\\n        //now strip the most significant and least significant parts and continue\\n        //e.g. 400303004 => 303        \\n        x = x % order_of(x) / ten_to_power_of((n_front_zero_of(x) + 1));\\n     }\\n    \\n    return true;\\n}",
                "solutionTags": [],
                "code": "Yes I misunderstood the meaning of 'no extra space' and I took it for no extra local variable.\\nNevertheless I post a messy one here for those who are by any chance interested.\\nI know it's not what the author intended and it is quite inefficient because of all the repetitive formulas but the basic approach is simple and clear so please don't vote me down :)\\n```\\n#include <math.h>\\n\\n//number of digits of x\\n#define n_digit_of(x) ((int)log10(x))\\n\\n//10^n\\n#define ten_to_power_of(n) ((int)exp(log(10) * (n)))\\n\\n//e.g. the 'order' of 1221 is 1000\\n#define order_of(x) (ten_to_power_of(n_digit_of(x)))\\n\\n//e.g. the number of 'front' 0s of 3000458 is 3.\\n#define n_front_zero_of(x) (n_digit_of(x) - n_digit_of((x) % order_of(x)) - 1)\\n\\n\\nbool isPalindrome(int x) {\\n    if (x < 0) {\\n        return false;\\n    }\\n   \\n    while (x >= 10) {\\n        //compare the most significant and least significant digits\\n        if (x / order_of(x) != (x % 10)) {\\n            return false;\\n        }\\n        \\n        //in case like 400303004, we have to judge more digits\\n        if (n_digit_of(x) - n_digit_of(x % order_of(x)) > 1) {\\n            if (x % ten_to_power_of(n_front_zero_of(x) + 1) != (x % 10)) {\\n                return false;\\n            }\\n        }\\n\\n        //now strip the most significant and least significant parts and continue\\n        //e.g. 400303004 => 303        \\n        x = x % order_of(x) / ten_to_power_of((n_front_zero_of(x) + 1));\\n     }\\n    \\n    return true;\\n}",
                "codeTag": "C++"
            },
            {
                "id": 5173,
                "title": "beat-90-in-java",
                "content": "     public boolean isPalindrome(int x) {\\n            if (x < 0) return false;\\n            int ans = 0;\\n            int num = x;\\n            while ( num > 0) {\\n                ans = ans * 10 + num % 10;\\n                num = num / 10;\\n            }\\n            if (ans != x) return false;\\n            return true;\\n        }",
                "solutionTags": [
                    "Java"
                ],
                "code": "     public boolean isPalindrome(int x) {\\n            if (x < 0) return false;\\n            int ans = 0;\\n            int num = x;\\n            while ( num > 0) {\\n                ans = ans * 10 + num % 10;\\n                num = num / 10;\\n            }\\n            if (ans != x) return false;\\n            return true;\\n        }",
                "codeTag": "Unknown"
            },
            {
                "id": 5478,
                "title": "my-72-ms-c-solution",
                "content": "Just remember two x==y checks needed to deal with odd and even digits cases.\\n\\n    class Solution {\\n    public:\\n        bool isPalindrome(int x) {\\n            if(!x) return true;\\n            if(x<0 || 0 == x%10 ) return false;\\n            int y =0;\\n            while(x>y)\\n            {\\n                y = y*10 + x%10;\\n                if(x==y) return true; // to deal with odd digits case, e.g. 232\\n                x = x/10; \\n            }\\n            return x==y; // to deal with even digits case, e.g. 22\\n        }\\n    };",
                "solutionTags": [],
                "code": "class Solution {\\n    public:\\n        bool isPalindrome(int x) {\\n            if(!x) return true;\\n            if(x<0 || 0 == x%10 ) return false;\\n            int y =0;\\n            while(x>y)\\n            {\\n                y = y*10 + x%10;\\n                if(x==y) return true; // to deal with odd digits case, e.g. 232\\n                x = x/10; \\n            }",
                "codeTag": "Java"
            },
            {
                "id": 5550,
                "title": "two-pointer-style-solution-walking-from-left-and-right-to-the-middle",
                "content": "I wanted to check if the number is a palindrome the same way you would check if a string is a palindrome, with a left pointer and right pointer that walk toward the middle. The only trick is finding the largest multiple of 10 smaller than x, for which I use the pow, floor, and log10 functions:\\n\\n    bool isPalindrome(int x) {\\n        if (x < 0) return false;\\n        \\n        int left = pow(10, floor(log10(x)));\\n        int right = 1;\\n        while (right < left) {\\n            if ((x / left - x / right) % 10 != 0) {\\n                return false;\\n            }\\n            right *= 10;\\n            left /= 10;\\n        }\\n        \\n        return true;\\n    }",
                "solutionTags": [],
                "code": "I wanted to check if the number is a palindrome the same way you would check if a string is a palindrome, with a left pointer and right pointer that walk toward the middle. The only trick is finding the largest multiple of 10 smaller than x, for which I use the pow, floor, and log10 functions:\\n\\n    bool isPalindrome(int x) {\\n        if (x < 0) return false;\\n        \\n        int left = pow(10, floor(log10(x)));\\n        int right = 1;\\n        while (right < left) {\\n            if ((x / left - x / right) % 10 != 0) {\\n                return false;\\n            }\\n            right *= 10;\\n            left /= 10;\\n        }\\n        \\n        return true;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 5598,
                "title": "a-straightforward-log-n-ac-solution",
                "content": "    class Solution {\\n    public:\\n        bool isPalindrome(long long x) {\\n            if (x < 0) return false;\\n            long long d = 10, e = 10;\\n            while (x / d) d *= 10;\\n            while (d > e)\\n            {\\n                if ((x % d) / (d / 10) != (x % e) / (e / 10))\\n                    return false;\\n                d /= 10;\\n                e *= 10;\\n            }\\n            return true;\\n        }\\n    };\\n\\ncompare the highest digit and lowest digit in each iteration. should the local variable d and e be regarded as 'extra memory'?",
                "solutionTags": [],
                "code": "class Solution {\\n    public:\\n        bool isPalindrome(long long x) {\\n            if (x < 0) return false;\\n            long long d = 10, e = 10;\\n            while (x / d) d *= 10;\\n            while (d > e)\\n            {\\n                if ((x % d) / (d / 10) != (x % e) / (e / 10))\\n                    return false;\\n                d /= 10;\\n                e *= 10;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 3871467,
                "title": "palindrome-without-using-convertation-to-str",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThe hint was not to use convertation x to string , so I used tricks of division. \\n\\n# Approach\\nWe start from the latest digit of initial number and build reverted number. Then check is real number equals to reverted and returns the result. \\n\\n# Complexity\\n- Time complexity: O(n) \\n*where n is length of x , we just go through all numbers of initial x \\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        if x < 0:\\n            return False\\n        reversed_number = 0\\n        number = x\\n        while x > 0:\\n            digit = x % 10\\n            x = x // 10\\n            reversed_number = reversed_number * 10 + digit\\n\\n        return number == reversed_number\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        if x < 0:\\n            return False\\n        reversed_number = 0\\n        number = x\\n        while x > 0:\\n            digit = x % 10\\n            x = x // 10\\n            reversed_number = reversed_number * 10 + digit\\n\\n        return number == reversed_number\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3278892,
                "title": "easy-to-understand-c",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n       int y=x;\\n        if(x<0)\\n            return false;\\n            \\n        long int temp=0;\\n        while(y)\\n        {\\n            temp=temp*10+y%10;\\n            y/=10;\\n        }\\n        if(temp==x)\\n            return true;\\n        else\\n            return false;\\n     \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n       int y=x;\\n        if(x<0)\\n            return false;\\n            \\n        long int temp=0;\\n        while(y)\\n        {\\n            temp=temp*10+y%10;\\n            y/=10;\\n        }\\n        if(temp==x)\\n            return true;\\n        else\\n            return false;\\n     \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2954045,
                "title": "5-line-c-code-beats-100",
                "content": "//-------------> \\uD83D\\uDC7B Pls Upvote if it is helpful for You \\uD83D\\uDC7B <--------------//\\n\\n\\n# Approach\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n - TypeCasting Integer  to String using \\n - to_string()  function\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        string s=to_string(x);      // convert int to string \\n        string s1=s;               \\n        reverse(s.begin(),s.end()); // reverse the string \\n        if(s==s1) return 1;        // check they are equal or not  \\n        return 0;\\n    }\\n};\\n```\\n---\\n\\n- \\uD83D\\uDC7B IF YOU LIKE THE SOLUTION THEN PLEASE UPVOTE MY SOLUTION BECAUSE IT GIVES ME MOTIVATION TO REGULARLY POST THE SOLUTION\\uD83D\\uDC7B*\\n![image.png](https://assets.leetcode.com/users/images/27dc1e17-5bbd-4e60-a870-bb322c16992f_1678436893.0397103.png)\\n",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        string s=to_string(x);      // convert int to string \\n        string s1=s;               \\n        reverse(s.begin(),s.end()); // reverse the string \\n        if(s==s1) return 1;        // check they are equal or not  \\n        return 0;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1297591,
                "title": "simple-java-code-faster-than-99-97-and-89-47-in-memory",
                "content": "please upvote if u find it usefull :)\\n```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n      int num = 0,temp = x;\\n      while(x>0){\\n              num = num*10 + x%10;\\n              x = x/10;\\n            }\\n      if(temp == num){\\n        return true;\\n      }\\n      return false;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n      int num = 0,temp = x;\\n      while(x>0){\\n              num = num*10 + x%10;\\n              x = x/10;\\n            }\\n      if(temp == num){\\n        return true;\\n      }\\n      return false;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 878340,
                "title": "best-java-solution",
                "content": "Best JAVA Solution\\n```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        if (x < 0) {\\n            return false;\\n        }\\n        \\n        int sub = x;\\n        int reversed = 0;\\n        while (sub != 0) {\\n            reversed = reversed * 10 + sub % 10;\\n            sub /= 10;\\n        }\\n        \\n        return x == reversed;\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        if (x < 0) {\\n            return false;\\n        }\\n        \\n        int sub = x;\\n        int reversed = 0;\\n        while (sub != 0) {\\n            reversed = reversed * 10 + sub % 10;\\n            sub /= 10;\\n        }\\n        \\n        return x == reversed;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 5507,
                "title": "my-simplest-ac-code-with-o-zero-space",
                "content": "    #define order(x) ((int)pow(10, (int)log10(x)))\\n    \\n    bool isPalindrome(int x) {\\n    \\t// non palindrome number for negative numbers\\n    \\tif (x < 0)\\n    \\t\\treturn false;\\n    \\n    \\twhile (x) {\\n    \\t\\t// non palindrome if the most significant digit\\n    \\t\\t// doesn't match the least one\\n    \\t\\tif (x % 10 != x / order(x))\\n    \\t\\t\\treturn false;\\n    \\n    \\t\\t// remove both the most and the least digit\\n    \\t\\t// if the second most significant digit is NOT 0,\\n    \\t\\tif (order(x) / 10 == order(x - x % 10 * order(x)))\\n    \\t\\t\\tx = (x - x % 10 * order(x)) / 10;\\n    \\n    \\t\\t// it's 0, then make sure the second least is also 0\\n    \\t\\t// non palindrome if otherwise\\n    \\t\\telse if (x / 10 % 10 != 0)\\n    \\t\\t\\treturn false;\\n    \\n    \\t\\t// now the second most and the second least are both 0,\\n    \\t\\t// remove the most and the least, and change the two 0's to 1's\\n    \\t\\telse\\n    \\t\\t\\tx = (x - x % 10 * order(x) + order(x) / 10) / 10 + 1;\\n    \\t}\\n    \\n    \\treturn true;\\n    }",
                "solutionTags": [],
                "code": "    #define order(x) ((int)pow(10, (int)log10(x)))\\n    \\n    bool isPalindrome(int x) {\\n    \\t// non palindrome number for negative numbers\\n    \\tif (x < 0)\\n    \\t\\treturn false;\\n    \\n    \\twhile (x) {\\n    \\t\\t// non palindrome if the most significant digit\\n    \\t\\t// doesn't match the least one\\n    \\t\\tif (x % 10 != x / order(x))\\n    \\t\\t\\treturn false;\\n    \\n    \\t\\t// remove both the most and the least digit\\n    \\t\\t// if the second most significant digit is NOT 0,\\n    \\t\\tif (order(x) / 10 == order(x - x % 10 * order(x)))\\n    \\t\\t\\tx = (x - x % 10 * order(x)) / 10;\\n    \\n    \\t\\t// it's 0, then make sure the second least is also 0\\n    \\t\\t// non palindrome if otherwise\\n    \\t\\telse if (x / 10 % 10 != 0)\\n    \\t\\t\\treturn false;\\n    \\n    \\t\\t// now the second most and the second least are both 0,\\n    \\t\\t// remove the most and the least, and change the two 0's to 1's\\n    \\t\\telse\\n    \\t\\t\\tx = (x - x % 10 * order(x) + order(x) / 10) / 10 + 1;\\n    \\t}\\n    \\n    \\treturn true;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 4082932,
                "title": "video-visualization-using-modulo-and-floor-division",
                "content": "https://www.youtube.com/watch?v=OlTk8wM48ww\\n\\nThe idea here is that we don\\'t need to reverse all the digits, only <i>half</i> the digits.  The first line checks some edge cases, and returns False immediately if the number is negative or ends with a 0 (with the exception of the number 0 itself).  The loop then uses the modulo and floor division operators to reverse the digits and transfer them to the `half` variable.\\n\\nOnce the halfway point is reached, we return True if the two halves are equal to each other.  If the number originally had an <i>odd</i> number of digits, then the two halves will be off by 1 digit, so we also remove that digit using floor division, then compare for equality.\\n# Code\\n```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        if x < 0 or (x != 0 and x % 10 == 0):\\n            return False\\n\\n        half = 0\\n        while x > half:\\n            half = (half * 10) + (x % 10)\\n            x = x // 10\\n\\n        return x == half or x == half // 10\\n```\\n\\n# Alternate solution\\n```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        x = str(x)\\n        return x == x[::-1]\\n```\\nAlternate solution: turn the number into a string, reverse it, and see if they\\'re equal.  This is the simplest solution, but the question does challenge us to solve it <i>without</i> turning the number into a string.\\n",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Math"
                ],
                "code": "```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        if x < 0 or (x != 0 and x % 10 == 0):\\n            return False\\n\\n        half = 0\\n        while x > half:\\n            half = (half * 10) + (x % 10)\\n            x = x // 10\\n\\n        return x == half or x == half // 10\\n```\n```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        x = str(x)\\n        return x == x[::-1]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3230465,
                "title": "faster-than-96-of-java-solutions-java",
                "content": "# Approach\\nStore the value of x in an integer, then reverse the original number using a while loop, where you will keep using modulous to get the remainder and keep adding that to the rev int initilized at the beginning.\\nLastly, check if the rev and the original are equal and or original >=0, return true else false.\\n<!-- Describe your approach to solving the problem. -->\\n\\n\\n# Code\\n```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int rev =0;\\n        int original = x;\\n        while(x !=0){\\n            int num = x % 10;\\n            rev = rev *10 + num;\\n            x = x/10;\\n\\n        }\\n\\n        if(original >= 0 && original == rev){\\n            return true;\\n        }\\n\\n        return false;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int rev =0;\\n        int original = x;\\n        while(x !=0){\\n            int num = x % 10;\\n            rev = rev *10 + num;\\n            x = x/10;\\n\\n        }\\n\\n        if(original >= 0 && original == rev){\\n            return true;\\n        }\\n\\n        return false;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2873538,
                "title": "one-line-solution-kotlin",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    fun isPalindrome(x: Int): Boolean {\\n\\n   return   x.toString().reversed() ==  x.toString()\\n    }\\n}\\n```",
                "solutionTags": [
                    "Kotlin"
                ],
                "code": "```\\nclass Solution {\\n    fun isPalindrome(x: Int): Boolean {\\n\\n   return   x.toString().reversed() ==  x.toString()\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2744506,
                "title": "two-pointers",
                "content": "```\\nbool isPalindrome(int x) {\\n    if (x < 0) \\n        return false;\\n    if (x == 0) // to avoid log10(0)\\n        return true;\\n\\n    int n = log10(x) + 1; // compute -> n digits\\n    int times = n / 2; // we need to compare n / 2 times (move two pointers at one move)\\n    int l = (int) pow(10, n - 1), r = 1;\\n    while (times--) { \\n        if ((x / l) % 10 != (x / r) % 10) { // if (left digit != right digit)\\n            return false;\\n        }\\n        l /= 10;\\n        r *= 10;\\n    }\\n    return true;\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nbool isPalindrome(int x) {\\n    if (x < 0) \\n        return false;\\n    if (x == 0) // to avoid log10(0)\\n        return true;\\n\\n    int n = log10(x) + 1; // compute -> n digits\\n    int times = n / 2; // we need to compare n / 2 times (move two pointers at one move)\\n    int l = (int) pow(10, n - 1), r = 1;\\n    while (times--) { \\n        if ((x / l) % 10 != (x / r) % 10) { // if (left digit != right digit)\\n            return false;\\n        }\\n        l /= 10;\\n        r *= 10;\\n    }\\n    return true;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2683670,
                "title": "code-along-with-explaination-faster-then-81",
                "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n \\n//         frst convert the number into string\\n        string str=to_string(x);\\n//         using builtin reverse function find reverse\\n        reverse(str.begin(),str.end());\\n//         convert original value of int into string and compare it with rev\\n        bool flag=to_string(x)==str;\\n        return flag;\\n            \\n    }\\n};\\n**upvote if u found it helpful**",
                "solutionTags": [
                    "C++"
                ],
                "code": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n \\n//         frst convert the number into string\\n        string str=to_string(x);\\n//         using builtin reverse function find reverse\\n        reverse(str.begin(),str.end());\\n//         convert original value of int into string and compare it with rev\\n        bool flag=to_string(x)==str;\\n        return flag;\\n            \\n    }",
                "codeTag": "Java"
            },
            {
                "id": 2329273,
                "title": "c-java-python3-javascript-solution-90-99-faster",
                "content": "See the code : \\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**\\uD83E\\uDDE1See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/5afaf588-9ac5-4ce7-ba46-bfbddb3e7586_1658709281.7354767.png)\\n\\n\\n",
                "solutionTags": [
                    "Java",
                    "Python3",
                    "JavaScript"
                ],
                "code": "See the code : \\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**\\uD83E\\uDDE1See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/5afaf588-9ac5-4ce7-ba46-bfbddb3e7586_1658709281.7354767.png)\\n\\n\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 1334247,
                "title": "two-c-solutions-competitive-other",
                "content": "Competative Solution\\n```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        string s = to_string(x);\\n        if(s == string(s.rbegin(), s.rend())) {\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n};\\n```\\n\\nOther Solution\\n```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long int rev = 0; \\n       int digit = 0, temp = x;\\n        if(x<0) {\\n            return false;\\n        } else {\\n            while(x != 0) {\\n            digit = x % 10;\\n            rev = rev * 10 + digit;\\n            x = x/10;\\n        }\\n        }      \\n        if(rev == temp) {\\n            return true;\\n        } else {\\n            return false;\\n        }     \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "C",
                    "String"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        string s = to_string(x);\\n        if(s == string(s.rbegin(), s.rend())) {\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long int rev = 0; \\n       int digit = 0, temp = x;\\n        if(x<0) {\\n            return false;\\n        } else {\\n            while(x != 0) {\\n            digit = x % 10;\\n            rev = rev * 10 + digit;\\n            x = x/10;\\n        }\\n        }      \\n        if(rev == temp) {\\n            return true;\\n        } else {\\n            return false;\\n        }     \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 986012,
                "title": "simple-c-solution",
                "content": "# Simple C++ Solution\\n\\n``` CPP\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x < 0) return false;\\n        long long y = 0, t = x;\\n        while (t != 0) {\\n    \\t    y = y * 10 + t % 10;\\n    \\t    t /= 10;\\n\\t    }\\n\\t    return x == y;\\n    }\\n};\\n```\\n\\n>- Just reverse the numbers of x to y and compare them.\\n>- You would not to care the overflow,  cause I used \"long long\".",
                "solutionTags": [],
                "code": "``` CPP\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x < 0) return false;\\n        long long y = 0, t = x;\\n        while (t != 0) {\\n    \\t    y = y * 10 + t % 10;\\n    \\t    t /= 10;\\n\\t    }\\n\\t    return x == y;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 771404,
                "title": "python-one-liner",
                "content": "```\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return str(x) == str(x)[::-1]\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return str(x) == str(x)[::-1]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 307258,
                "title": "9-php-string-and-math-solutions",
                "content": "The string-based solution looks faster than the math-based solution.\\n\\n> Runtime: **16 ms**, faster than *99.55%* of PHP online submissions\\n> Memory Usage: **14.9 MB**, less than *32.64%* of PHP online submissions\\n\\n```php\\nclass Solution\\n{\\n\\n    /**\\n     * @param Integer $x\\n     * @return Boolean\\n     */\\n    function isPalindrome($x)\\n    {\\n        return (string)$x === strrev($x);\\n    }\\n}\\n```\\n\\n> Runtime: **36 ms**, faster than *80.98%* of PHP online submissions\\n> Memory Usage: **14.9 MB**, less than *27.78%* of PHP online submissions\\n\\n```php\\nclass Solution\\n{\\n\\n    /**\\n     * @param Integer $x\\n     * @return Boolean\\n     */\\n    function isPalindrome($x)\\n    {\\n        if ($r = 0 === $x % 10 && $x !== 0 || $x < 0) return false;\\n        while ($r < $x) list($r, $x) = [$r * 10 + $x % 10, (int)($x / 10)];\\n        return $x === $r || $x === (int)($r / 10);\\n    }\\n}\\n```",
                "solutionTags": [
                    "PHP",
                    "Math",
                    "String"
                ],
                "code": "```php\\nclass Solution\\n{\\n\\n    /**\\n     * @param Integer $x\\n     * @return Boolean\\n     */\\n    function isPalindrome($x)\\n    {\\n        return (string)$x === strrev($x);\\n    }\\n}\\n```\n```php\\nclass Solution\\n{\\n\\n    /**\\n     * @param Integer $x\\n     * @return Boolean\\n     */\\n    function isPalindrome($x)\\n    {\\n        if ($r = 0 === $x % 10 && $x !== 0 || $x < 0) return false;\\n        while ($r < $x) list($r, $x) = [$r * 10 + $x % 10, (int)($x / 10)];\\n        return $x === $r || $x === (int)($r / 10);\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 258209,
                "title": "rust-solution",
                "content": "```\\nimpl Solution {\\n    pub fn is_palindrome(x: i32) -> bool {\\n        x.to_string()==x.to_string().chars().rev().collect::<String>()\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nimpl Solution {\\n    pub fn is_palindrome(x: i32) -> bool {\\n        x.to_string()==x.to_string().chars().rev().collect::<String>()\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 164574,
                "title": "can-you-please-explain-this-bit-of-code-used-for-fast-io",
                "content": "I understand this is used for fast input output using cin at speeds comparable to scanf.\\n\\n But I don\\'t understand what is this function looking thing inside which they have wrapped \\nthe fast IO code  ? It has [] of array, () of functions and also a return type of function\\n\\n```\\nstatic const auto _____ = []()\\n{\\n    // fast IO code : this I understand\\n    ios::sync_with_stdio(false);\\n    cin.tie(0);\\n    return 0;\\n}();\\n```\\n\\nCan you kindly explain, what is this feature of C++ ?\\n``` \\nstatic const auto _____ = [] ()\\n{\\n    // fast IO code\\n}(); \\n```",
                "solutionTags": [],
                "code": "```\\nstatic const auto _____ = []()\\n{\\n    // fast IO code : this I understand\\n    ios::sync_with_stdio(false);\\n    cin.tie(0);\\n    return 0;\\n}();\\n```\n``` \\nstatic const auto _____ = [] ()\\n{\\n    // fast IO code\\n}(); \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 5266,
                "title": "32ms-c-language-solution",
                "content": "    bool isPalindrome(int x) {\\n        if(x < 0) return false;\\n        if(x < 10) return true;\\n        int y = 0;\\n        int tmp = x;\\n        while(tmp)\\n        {\\n            y = y * 10 + (tmp % 10);\\n            tmp /= 10;\\n        }\\n        \\n        return x == y;\\n    }",
                "solutionTags": [],
                "code": "    bool isPalindrome(int x) {\\n        if(x < 0) return false;\\n        if(x < 10) return true;\\n        int y = 0;\\n        int tmp = x;\\n        while(tmp)\\n        {\\n            y = y * 10 + (tmp % 10);\\n            tmp /= 10;\\n        }\\n        \\n        return x == y;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 3611963,
                "title": "c-beginner-friendly",
                "content": "# Code\\n```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        \\n            int num = x;\\n        \\n        if(x<0){\\n            return false;\\n        }\\n        else{\\n            unsigned int rev=0;\\n            while(x!=0){\\n                 int rem = x % 10;\\n                 rev=rev*10 + rem ;\\n                 x = x/10;\\n            }\\n            if(num==rev){\\n                 return true;\\n            }\\n        \\n            else{\\n                 return false ;\\n            } \\n        }   \\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        \\n            int num = x;\\n        \\n        if(x<0){\\n            return false;\\n        }\\n        else{\\n            unsigned int rev=0;\\n            while(x!=0){\\n                 int rem = x % 10;\\n                 rev=rev*10 + rem ;\\n                 x = x/10;\\n            }\\n            if(num==rev){\\n                 return true;\\n            }\\n        \\n            else{\\n                 return false ;\\n            } \\n        }   \\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3059925,
                "title": "one-liner-in-swift",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    func isPalindrome(_ x: Int) -> Bool {\\n        return String(String(x).reversed()) == String(x)\\n    }\\n}\\n```",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\nclass Solution {\\n    func isPalindrome(_ x: Int) -> Bool {\\n        return String(String(x).reversed()) == String(x)\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2739236,
                "title": "c-two-pointers-math-with-comments",
                "content": "I\\'d love to stick to two pointers technique to check if the integer is palindrome like we do with strings :)\\nInstead of converting the integer to a string, some math can do we the favor.\\n```cpp\\nbool isPalindrome(int x) {\\n    if (x < 0) \\n        return false;\\n    if (x == 0) // to avoid log10(0)\\n        return true;\\n\\n    int n = log10(x) + 1; // compute -> n digits\\n    int times = n / 2; // we need to compare n / 2 times (move two pointers at one move)\\n    int l = (int) pow(10, n - 1), r = 1;\\n    while (times--) { \\n        if ((x / l) % 10 != (x / r) % 10) { // if (left digit != right digit)\\n            return false;\\n        }\\n        l /= 10;\\n        r *= 10;\\n    }\\n    return true;\\n}\\n```",
                "solutionTags": [
                    "C",
                    "Two Pointers"
                ],
                "code": "```cpp\\nbool isPalindrome(int x) {\\n    if (x < 0) \\n        return false;\\n    if (x == 0) // to avoid log10(0)\\n        return true;\\n\\n    int n = log10(x) + 1; // compute -> n digits\\n    int times = n / 2; // we need to compare n / 2 times (move two pointers at one move)\\n    int l = (int) pow(10, n - 1), r = 1;\\n    while (times--) { \\n        if ((x / l) % 10 != (x / r) % 10) { // if (left digit != right digit)\\n            return false;\\n        }\\n        l /= 10;\\n        r *= 10;\\n    }\\n    return true;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2711457,
                "title": "palindrome-number-using-recursion",
                "content": "Different and simple approach using Recursion, if useful please upvote\\n```\\nclass Solution {\\npublic:\\n    \\n    bool Check_Palindrome(int x, int left)\\n    {\\n\\t\\t//Convert the Integer to String\\n        stringstream ss;\\n        ss<<x;\\n        string s;\\n        ss>>s;\\n\\t\\t\\n\\t\\t//Since we use the two pointer concept using a single pointer (i.e left)\\n        if(left > s.length()/2)\\n        {\\n            return true;\\n        }\\n        \\n\\t\\t//Compare the String from Start and End(char by char)\\n        if(s[left] != s[s.length()-left-1])\\n        {\\n            return false;\\n        }\\n\\t\\t\\n\\t\\t//Keep repeating till any two of the base conditions execute\\n        return Check_Palindrome(x, left+1);\\n    }\\n    \\n    bool isPalindrome(int x)\\n    {\\n        int start = 0;\\n\\t\\t\\n\\t\\t//If not palindrome return false else true\\n        if(!Check_Palindrome(x, start))\\n        {\\n            return false;\\n        }\\n        return true;      \\n    }\\n};\\n```",
                "solutionTags": [
                    "Recursion"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    \\n    bool Check_Palindrome(int x, int left)\\n    {\\n\\t\\t//Convert the Integer to String\\n        stringstream ss;\\n        ss<<x;\\n        string s;\\n        ss>>s;\\n\\t\\t\\n\\t\\t//Since we use the two pointer concept using a single pointer (i.e left)\\n        if(left > s.length()/2)\\n        {\\n            return true;\\n        }\\n        \\n\\t\\t//Compare the String from Start and End(char by char)\\n        if(s[left] != s[s.length()-left-1])\\n        {\\n            return false;\\n        }\\n\\t\\t\\n\\t\\t//Keep repeating till any two of the base conditions execute\\n        return Check_Palindrome(x, left+1);\\n    }\\n    \\n    bool isPalindrome(int x)\\n    {\\n        int start = 0;\\n\\t\\t\\n\\t\\t//If not palindrome return false else true\\n        if(!Check_Palindrome(x, start))\\n        {\\n            return false;\\n        }\\n        return true;      \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1514381,
                "title": "c-faster-than-80-60-easy-to-understand",
                "content": "Palindrome Number -\\n\\n```\\nclass Solution \\n{\\npublic:\\n    bool isPalindrome(int x) \\n    {\\n       long int digit,reverse=0;\\n       int temp=x;\\n       while(x>0)\\n       {\\n           digit=x%10;\\n           reverse=(reverse*10)+digit;\\n           x=x/10;\\n       }\\n      if(temp==reverse)\\n      {return true;}\\n      else\\n      {return false;}  \\n    }\\n};\\n```\\n\\nPlease comment if you have any doubt.\\nWill get back to you as soon as possible.\\n**UPVOTE if you find it useful!**",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution \\n{\\npublic:\\n    bool isPalindrome(int x) \\n    {\\n       long int digit,reverse=0;\\n       int temp=x;\\n       while(x>0)\\n       {\\n           digit=x%10;\\n           reverse=(reverse*10)+digit;\\n           x=x/10;\\n       }\\n      if(temp==reverse)\\n      {return true;}\\n      else\\n      {return false;}  \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 480907,
                "title": "javascript-easy-to-read-solution",
                "content": "tried to go for something simple and clear. \\ntime & space: 98.33% & 96.55%\\n\\n```\\nvar isPalindrome = function(x) {\\n   const original = x\\n   let reversed = 0\\n   \\n   if(x < 10 && x >= 0) {\\n       return true\\n   }\\n    \\n    if(x % 10 === 0 || x < 0) {\\n       return false\\n   }\\n    \\n    while(x !== 0 ) {\\n        reversed = reversed * 10 + x % 10\\n        x = Math.trunc(x/10)\\n    }\\n    \\n    return !(original - reversed)\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar isPalindrome = function(x) {\\n   const original = x\\n   let reversed = 0\\n   \\n   if(x < 10 && x >= 0) {\\n       return true\\n   }\\n    \\n    if(x % 10 === 0 || x < 0) {\\n       return false\\n   }\\n    \\n    while(x !== 0 ) {\\n        reversed = reversed * 10 + x % 10\\n        x = Math.trunc(x/10)\\n    }\\n    \\n    return !(original - reversed)\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 5274,
                "title": "python-in-one-line",
                "content": "    class Solution(object):\\n        def isPalindrome(self, x):\\n            return x >= 0 and x == int(str(x)[::-1])",
                "solutionTags": [],
                "code": "    class Solution(object):\\n        def isPalindrome(self, x):\\n            return x >= 0 and x == int(str(x)[::-1])",
                "codeTag": "Java"
            },
            {
                "id": 5427,
                "title": "very-simple-java-solution",
                "content": "  \\n\\n    public boolean isPalindrome(int x) {\\n            int xx = x;\\n            int reversed = 0;\\n            \\n            while(xx > 0) {\\n                reversed = reversed * 10 + xx % 10;\\n                xx /= 10;\\n            }\\n            return x == reversed;\\n        }",
                "solutionTags": [],
                "code": "  \\n\\n    public boolean isPalindrome(int x) {\\n            int xx = x;\\n            int reversed = 0;\\n            \\n            while(xx > 0) {\\n                reversed = reversed * 10 + xx % 10;\\n                xx /= 10;\\n            }\\n            return x == reversed;\\n        }",
                "codeTag": "Unknown"
            },
            {
                "id": 3944219,
                "title": "putta-easy-solution-c-beats-95",
                "content": "\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        double ans = 0;\\n        int temp = x;\\n\\n        while(x>0){\\n            ans = ans*10 + x%10;\\n            x = x/10;\\n        }\\n        return temp == ans;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Math"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        double ans = 0;\\n        int temp = x;\\n\\n        while(x>0){\\n            ans = ans*10 + x%10;\\n            x = x/10;\\n        }\\n        return temp == ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3280798,
                "title": "python3-one-liner-easiest-solution",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\n- convert integer x to string.\\n- now return true if reverse of x and original order is same else false.\\n\\n# Complexity\\n- Time complexity: O(N)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return str(x) == str(x)[::-1]\\n```",
                "solutionTags": [
                    "Python3",
                    "Math"
                ],
                "code": "```\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return str(x) == str(x)[::-1]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3270193,
                "title": "typescript-int-solution",
                "content": "```\\nfunction isPalindrome(x: number): boolean {\\n    let reverseX: number\\n    const tempReverseString = x.toString().split(\"\").reverse().join(\\'\\')\\n    reverseX = parseInt(tempReverseString)\\n\\n    return reverseX === x\\n};\\n```",
                "solutionTags": [
                    "TypeScript"
                ],
                "code": "```\\nfunction isPalindrome(x: number): boolean {\\n    let reverseX: number\\n    const tempReverseString = x.toString().split(\"\").reverse().join(\\'\\')\\n    reverseX = parseInt(tempReverseString)\\n\\n    return reverseX === x\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3053140,
                "title": "converting-to-string",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {number} x\\n * @return {boolean}\\n */\\nvar isPalindrome = function(x) {\\n    x = x.toString();\\n    let k = x.length;\\n    for (let i = 0; i < k; i++) {\\n        if (x[i] != x[k - 1]) {\\n            return false;\\n        }\\n        k--;\\n    }\\n    return true;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} x\\n * @return {boolean}\\n */\\nvar isPalindrome = function(x) {\\n    x = x.toString();\\n    let k = x.length;\\n    for (let i = 0; i < k; i++) {\\n        if (x[i] != x[k - 1]) {\\n            return false;\\n        }\\n        k--;\\n    }\\n    return true;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3005334,
                "title": "c-easy",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n       long long  int d=x,m=0,z;\\n\\t\\tfor (int i = x; i > 0; i=i/10)\\n\\t\\t{z=i%10;\\n\\t     m=m*10+z;\\n\\t\\t\\t\\n\\t\\t}\\n\\t\\tif(d==m)\\n        {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n       long long  int d=x,m=0,z;\\n\\t\\tfor (int i = x; i > 0; i=i/10)\\n\\t\\t{z=i%10;\\n\\t     m=m*10+z;\\n\\t\\t\\t\\n\\t\\t}\\n\\t\\tif(d==m)\\n        {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3005289,
                "title": "op",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n       long long  int d=x,m=0,z;\\n\\t\\tfor (int i = x; i > 0; i=i/10)\\n\\t\\t{z=i%10;\\n\\t     m=m*10+z;\\n\\t\\t\\t\\n\\t\\t}\\n\\t\\tif(d==m)\\n        {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n       long long  int d=x,m=0,z;\\n\\t\\tfor (int i = x; i > 0; i=i/10)\\n\\t\\t{z=i%10;\\n\\t     m=m*10+z;\\n\\t\\t\\t\\n\\t\\t}\\n\\t\\tif(d==m)\\n        {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2332990,
                "title": "one-line-python-solution",
                "content": "```\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return str(x) == str(x)[::-1]\\n```\\n\\nplease upvote if you like",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return str(x) == str(x)[::-1]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2311737,
                "title": "python3-one-liner-solution",
                "content": "In this approach we are converting the interger into a string so that we can reverse the string using slicing method. Then we are comparing the original string to a reversed string and returning the boolean value.\\n\\n```\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return str(x) == str(x)[::-1]\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return str(x) == str(x)[::-1]\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2003259,
                "title": "python-32ms-beats-99-79-two-pointers-simple-with-explanation",
                "content": "We have two pointers, `i` and `j`, pointing at the start and end of the number respectively:\\n\\n1023201\\ni--> <--j\\n\\nEach iteration we move `i` to the left and `j` to the right, until they are on the same number (until `i >= j`). If the number `i` is pointing at is **not** equal to the number `j` is pointing at, then the number is not a palindrome. Otherwise, after the loop finishes, return `True`.\\n\\nThis is a better solution than reversing the string and comparing the two because not only do you use extra space, but comparing 2 strings is a linear operation, while iterating `i` and `j` simulaneously compare each side of the number.\\n\\n```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        nums = str(x)\\n        \\n        i = 0\\n        j = len(nums) - 1\\n        \\n        while i <= j:\\n            if nums[i] != nums[j]:\\n                return False\\n            i += 1\\n            j -= 1\\n        return True\\n```\\n\\n**If you liked this, please upvote to support me!**\\n\\n\\n",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        nums = str(x)\\n        \\n        i = 0\\n        j = len(nums) - 1\\n        \\n        while i <= j:\\n            if nums[i] != nums[j]:\\n                return False\\n            i += 1\\n            j -= 1\\n        return True\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1980816,
                "title": "java-c-python-javascript-kotlin-4lines-o-n-time-beats-99-97-memory-speed-0ms-april-2022",
                "content": "<iframe src=\"https://leetcode.com/playground/V3ZoeKhz/shared\" frameBorder=\"0\" width=\"1000\" height=\"1000\"></iframe>\\n\\n***Consider upvote if useful!***",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python",
                    "C",
                    "JavaScript",
                    "Kotlin"
                ],
                "code": "<iframe src=\"https://leetcode.com/playground/V3ZoeKhz/shared\" frameBorder=\"0\" width=\"1000\" height=\"1000\"></iframe>\\n\\n***Consider upvote if useful!***",
                "codeTag": "Unknown"
            },
            {
                "id": 1871376,
                "title": "c-6-line-simple-code-easy-to-understand-tc-o-log-n-sc-o-1",
                "content": "Please Upvote if it helps\\u2B06\\uFE0F\\n```\\nbool isPalindrome(int x) {\\n        if(x<0) return 0;\\n        long long int temp=x,rev=0;\\n        while(temp){\\n            rev=rev*10+temp%10;\\n            temp/=10;\\n        }\\n        return x==rev;\\n    }",
                "solutionTags": [
                    "C"
                ],
                "code": "Please Upvote if it helps\\u2B06\\uFE0F\\n```\\nbool isPalindrome(int x) {\\n        if(x<0) return 0;\\n        long long int temp=x,rev=0;\\n        while(temp){\\n            rev=rev*10+temp%10;\\n            temp/=10;\\n        }\\n        return x==rev;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 827129,
                "title": "0-ms-faster-than-100-00-c-solution",
                "content": "bool isPalindrome(int x) {\\n\\tbool arr[2] = { true, false };\\n\\tint revertedNumber = 0;\\n\\tint tmp = x;\\n\\n\\tif (x < 0 || (x % 10 == 0 && x != 0)) \\n\\t\\treturn false;\\n\\n\\twhile (x > revertedNumber) {\\n\\t\\trevertedNumber = revertedNumber * 10 + x % 10;\\n\\t\\tx /= 10;\\n\\t}\\n\\t\\n\\tif (x == revertedNumber || x == revertedNumber / 10)\\n\\t\\treturn true;\\n\\telse\\n\\t\\treturn false;\\n}",
                "solutionTags": [
                    "C"
                ],
                "code": "bool isPalindrome(int x) {\\n\\tbool arr[2] = { true, false };\\n\\tint revertedNumber = 0;\\n\\tint tmp = x;\\n\\n\\tif (x < 0 || (x % 10 == 0 && x != 0)) \\n\\t\\treturn false;\\n\\n\\twhile (x > revertedNumber) {\\n\\t\\trevertedNumber = revertedNumber * 10 + x % 10;\\n\\t\\tx /= 10;\\n\\t}\\n\\t\\n\\tif (x == revertedNumber || x == revertedNumber / 10)\\n\\t\\treturn true;\\n\\telse\\n\\t\\treturn false;\\n}",
                "codeTag": "Unknown"
            },
            {
                "id": 495963,
                "title": "1-line-kotlin-solution",
                "content": "```kotlin\\nclass Solution {\\n    fun isPalindrome(x: Int): Boolean =\\n        x.toString().let { it == it.reversed() }\\n}\\n```",
                "solutionTags": [
                    "Kotlin"
                ],
                "code": "```kotlin\\nclass Solution {\\n    fun isPalindrome(x: Int): Boolean =\\n        x.toString().let { it == it.reversed() }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 333683,
                "title": "rust-0ms-4ms",
                "content": "![image](https://assets.leetcode.com/users/obliquemotion/image_1563649353.png)\\n\\n\\n```rust\\nimpl Solution {\\n    pub fn is_palindrome(x: i32) -> bool {\\n        if x < 0 {\\n            return false;\\n        }\\n        let digit_count = 1 + (x as f32).log10() as u32;\\n        let half = (digit_count / 2) as usize;\\n        let digits = (0..digit_count).map(|exp| x / 10_i32.pow(exp) % 10);\\n        digits\\n            .clone()\\n            .take(half)\\n            .zip(digits.rev().take(half))\\n            .all(|(lhs, rhs)| lhs == rhs)\\n    }\\n}\\n```",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```rust\\nimpl Solution {\\n    pub fn is_palindrome(x: i32) -> bool {\\n        if x < 0 {\\n            return false;\\n        }\\n        let digit_count = 1 + (x as f32).log10() as u32;\\n        let half = (digit_count / 2) as usize;\\n        let digits = (0..digit_count).map(|exp| x / 10_i32.pow(exp) % 10);\\n        digits\\n            .clone()\\n            .take(half)\\n            .zip(digits.rev().take(half))\\n            .all(|(lhs, rhs)| lhs == rhs)\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 299402,
                "title": "go",
                "content": "```\\nfunc isPalindrome(x int) bool {\\n    s := strconv.Itoa(x)\\n    r := []rune(s)\\n    for i, j := 0, len(r) - 1; i < j; i, j = i + 1, j - 1 {\\n        if r[i] != r[j] {return false}\\n    }\\n    return true\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nfunc isPalindrome(x int) bool {\\n    s := strconv.Itoa(x)\\n    r := []rune(s)\\n    for i, j := 0, len(r) - 1; i < j; i, j = i + 1, j - 1 {\\n        if r[i] != r[j] {return false}\\n    }\\n    return true\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 278450,
                "title": "faster-than-100-of-python-submissions-in-one-line",
                "content": "```python\\ndef isPalindrome(self, x: int) -> bool:\\n        return str(x) == str(x)[::-1]\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```python\\ndef isPalindrome(self, x: int) -> bool:\\n        return str(x) == str(x)[::-1]\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 5124,
                "title": "javascript-two-pointers-solution",
                "content": "```\\nvar isPalindrome = function(x) {\\n    if(x < 0) return false;\\n    x = x.toString()\\n    var i = 0;\\n    var j = x.length - 1;\\n    while(i < j){\\n        if(x[i] !== x[j]) return false;\\n        i++;\\n        j--;\\n    }\\n    return true;\\n};",
                "solutionTags": [],
                "code": "```\\nvar isPalindrome = function(x) {\\n    if(x < 0) return false;\\n    x = x.toString()\\n    var i = 0;\\n    var j = x.length - 1;\\n    while(i < j){\\n        if(x[i] !== x[j]) return false;\\n        i++;\\n        j--;\\n    }\\n    return true;\\n};",
                "codeTag": "Unknown"
            },
            {
                "id": 5131,
                "title": "3-line-c-solution",
                "content": "Not the fastest or smartest of course, just trying to make the codes shorter.\\n```\\nlong long t = x, r = 0;\\nwhile (t) r = r * 10 + t % 10, t /= 10;\\nreturn x >= 0 && r == x;\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nlong long t = x, r = 0;\\nwhile (t) r = r * 10 + t % 10, t /= 10;\\nreturn x >= 0 && r == x;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 5281,
                "title": "golang-58ms-concise-solution",
                "content": "Please let me know if there is room to optimize this code.\\n\\n```\\nfunc isPalindrome(x int) bool {\\n    if x < 0 {\\n        return false\\n    } else if x <= 9 {\\n        return true\\n    } else if x % 10 == 0 {\\n        return false\\n    }\\n    \\n    var y int\\n    for x > y {\\n        r := x % 10\\n        x = x / 10\\n        y = y * 10 + r\\n        \\n        if x == y || x / 10 == y {\\n            return true\\n        }\\n    }\\n    return false\\n}\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```\\nfunc isPalindrome(x int) bool {\\n    if x < 0 {\\n        return false\\n    } else if x <= 9 {\\n        return true\\n    } else if x % 10 == 0 {\\n        return false\\n    }\\n    \\n    var y int\\n    for x > y {\\n        r := x % 10\\n        x = x / 10\\n        y = y * 10 + r\\n        \\n        if x == y || x / 10 == y {\\n            return true\\n        }\\n    }\\n    return false\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 5411,
                "title": "share-my-c-solution-easy-to-understand",
                "content": "    class Solution {\\n    public:\\n        bool isPalindrome(int x) {\\n            if (x < 0) return false;\\n            if (x < 10) return true;\\n            \\n            int high = 0, low = 0, weight = 1;\\n            \\n            while (x / weight > 9)\\n                weight *= 10;\\n            \\n            while (x > 0)\\n            {\\n                high = x / weight;\\n                low = x % 10;\\n                if (low != high)\\n                    return false;\\n                //x -= (high * weight);\\n                x %= weight;\\n                x /= 10;\\n                weight /= 100;\\n            }\\n            \\n            return true;\\n        }\\n    };",
                "solutionTags": [
                    "C++"
                ],
                "code": "class Solution {\\n    public:\\n        bool isPalindrome(int x) {\\n            if (x < 0) return false;\\n            if (x < 10) return true;\\n            \\n            int high = 0, low = 0, weight = 1;\\n            \\n            while (x / weight > 9)\\n                weight *= 10;\\n            \\n            while (x > 0)\\n            {\\n                high = x / weight;\\n                low = x % 10;\\n                if (low != high)\\n                    return false;\\n                //x -= (high * weight);\\n                x %= weight;\\n                x /= 10;\\n                weight /= 100;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 3726660,
                "title": "c-java-python3-solutions-90-99-faster",
                "content": "### C#,Java,Python3 different solutions with explanation\\n**\\u2B50[zyrastory.com - LeetCode #9 Solutions](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50**\\n\\n##### **Example : C# Code ( \\u2B06You can also find other languages  in the post )**\\nsolution1 - reverse the string and compare\\n```\\npublic class Solution {\\n    public bool IsPalindrome(int x) {\\n        string first = x.ToString();             //turn to string (easy to reverse)\\n        char[] charArr = first.ToCharArray();   //the original target\\n        char[] reverseArr = first.ToCharArray();   \\n\\n        Array.Reverse(reverseArr );                 \\n     \\n        return charArr.SequenceEqual(reverseArr); //compare two array\\n    }\\n}\\n```\\n\\n\\u2B50solution2\\n```\\npublic class Solution {\\n    public bool IsPalindrome(int x) {\\n        string k = x.ToString();        \\n        \\n        for(int i=0;i<k.Length/2;i++)   \\n        {\\n            if(k[i] != k[k.Length-1-i]) \\n            {\\n                return false;           // if any char not the same, return false\\n            }\\n        }\\n        return true;                    \\n    }\\n}\\n```\\n---\\n\\n#### **Java Solution**\\n```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        String k = String.valueOf(x);\\n      \\n        for(int i=0;i<k.length()/2;i++)\\n        {\\n            if(k.charAt(i) != k.charAt(k.length()-1-i))\\n            {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n}\\n```\\n---\\n#### **Python3 Solution**\\nsolution1\\n```\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return str(x)[::-1] == str(x);\\n```\\n\\nsolution2\\n```\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        xx = str(x);\\n        ll = int(len(xx)/2);\\n        \\n        for i in range(ll):\\n            if(xx[i] != xx[-i-1]):\\n                return False;\\n        return True;\\n```\\n---\\nIf you got any problem about the explanation or you need other programming language solution, please feel free to let me know (leave comment or messenger me).\\n\\n**Thanks!**\\n\\nYou can find out other LeetCode problems solution here\\n**\\uD83E\\uDDE1[Zyrastory - Food & Code Research Center](https://zyrastory.com/en/category/coding-en/leetcode-en/)**",
                "solutionTags": [
                    "Java",
                    "Python3",
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public bool IsPalindrome(int x) {\\n        string first = x.ToString();             //turn to string (easy to reverse)\\n        char[] charArr = first.ToCharArray();   //the original target\\n        char[] reverseArr = first.ToCharArray();   \\n\\n        Array.Reverse(reverseArr );                 \\n     \\n        return charArr.SequenceEqual(reverseArr); //compare two array\\n    }\\n}\\n```\n```\\npublic class Solution {\\n    public bool IsPalindrome(int x) {\\n        string k = x.ToString();        \\n        \\n        for(int i=0;i<k.Length/2;i++)   \\n        {\\n            if(k[i] != k[k.Length-1-i]) \\n            {\\n                return false;           // if any char not the same, return false\\n            }\\n        }\\n        return true;                    \\n    }\\n}\\n```\n```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        String k = String.valueOf(x);\\n      \\n        for(int i=0;i<k.length()/2;i++)\\n        {\\n            if(k.charAt(i) != k.charAt(k.length()-1-i))\\n            {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n}\\n```\n```\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return str(x)[::-1] == str(x);\\n```\n```\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        xx = str(x);\\n        ll = int(len(xx)/2);\\n        \\n        for i in range(ll):\\n            if(xx[i] != xx[-i-1]):\\n                return False;\\n        return True;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3509462,
                "title": "js-palindrome-super-fast-more-95-with-explain",
                "content": "# Intuition\\nMy way to determine if a number is a palindrome is to reverse the number and then compare it to the original. If they are the same, then it is a palindrome.\\n\\n# Approach\\nThe approach we are taking here is to construct the reverse of the given number and then compare it to the original number.\\n\\n1. We start by checking if the number is less than 0 or if it ends with 0 (but is not 0 itself). If either of these conditions is true, the number cannot be a palindrome and we return false.\\n\\n2. We initialize a variable reverse to 0. This will hold the reverse of our given number.\\n\\n3. We then enter a while loop where we continue to reverse the number. In each iteration, we multiply reverse by 10 (to shift the digits one place to the left) and add the last digit of our given number (which we get by num % 10).\\n\\n4. After adding the last digit of our given number to reverse, we remove the last digit from our given number by doing a floor division by 10 (num = Math.floor(num / 10)).\\n\\n5. We continue this process until our given number becomes 0, which means we have reversed all its digits.\\n\\n6. Finally, we compare the reversed number to the original number. If they are the same, we return true, indicating that the number is a palindrome. If they are different, we return false.\\n\\n# Code\\n```\\n/**\\n * @param {number} x\\n * @return {boolean}\\n */\\nvar isPalindrome = function(x) {\\n     if (x < 0 || (x % 10 === 0 && x !== 0)) {\\n        return false;\\n    }\\n    let num = x;\\n    let reverse = 0;\\n    while (num > 0) {\\n        reverse = reverse * 10 + (num % 10);\\n        num = Math.floor(num / 10);\\n    }\\n    return x === reverse\\n};\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} x\\n * @return {boolean}\\n */\\nvar isPalindrome = function(x) {\\n     if (x < 0 || (x % 10 === 0 && x !== 0)) {\\n        return false;\\n    }\\n    let num = x;\\n    let reverse = 0;\\n    while (num > 0) {\\n        reverse = reverse * 10 + (num % 10);\\n        num = Math.floor(num / 10);\\n    }\\n    return x === reverse\\n};\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3343410,
                "title": "91-beats-for-time-complexity-o-n-finding-palindrome",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nBotirjon Shokirov\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nWe are checking first and last element, if they are equal, we are going to check next numbers. if they are not equal, we are simply returning false as it will not be a Palindrome number.\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(n)\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nO(1)\\n# Code\\n```\\n/**\\n * @param {number} x\\n * @return {boolean}\\n */\\nvar isPalindrome = function(x) {\\n  const str = x.toString();\\n  let left = 0;\\n  let right = str.length - 1;\\n  \\n  while (left < right) {\\n    if (str.charAt(left) !== str.charAt(right)) {\\n      return false;\\n    }\\n    left++;\\n    right--;\\n  }\\n  \\n  return true;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number} x\\n * @return {boolean}\\n */\\nvar isPalindrome = function(x) {\\n  const str = x.toString();\\n  let left = 0;\\n  let right = str.length - 1;\\n  \\n  while (left < right) {\\n    if (str.charAt(left) !== str.charAt(right)) {\\n      return false;\\n    }\\n    left++;\\n    right--;\\n  }\\n  \\n  return true;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3127339,
                "title": "rust-iterators",
                "content": "- Using rust iterators \\n- Reducing runtime by 1/2\\n# Code\\n```\\nimpl Solution {\\n    pub fn is_palindrome(x: i32) -> bool {\\n        let x = x.to_string();\\n        let n = x.len();\\n        let x = x.chars().collect::<Vec<char>>();\\n        let head = x[..n/2].iter();\\n        let tail = x[n/2..].iter().rev();\\n        head.zip(tail).all(|(a, b)| a==b)\\n    }\\n}\\n```",
                "solutionTags": [
                    "Rust",
                    "String"
                ],
                "code": "```\\nimpl Solution {\\n    pub fn is_palindrome(x: i32) -> bool {\\n        let x = x.to_string();\\n        let n = x.len();\\n        let x = x.chars().collect::<Vec<char>>();\\n        let head = x[..n/2].iter();\\n        let tail = x[n/2..].iter().rev();\\n        head.zip(tail).all(|(a, b)| a==b)\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3080053,
                "title": "brute-force-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        long  n=x;\\n        long ans=0;\\n        while(x>0)\\n        {\\n            ans+=x%10;\\n            ans = ans*10;\\n            x=x/10;\\n        }\\n        ans = ans/10;\\n        // System.out.println(ans);\\n        if(ans == n)\\n            return true;\\n        return false;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        long  n=x;\\n        long ans=0;\\n        while(x>0)\\n        {\\n            ans+=x%10;\\n            ans = ans*10;\\n            x=x/10;\\n        }\\n        ans = ans/10;\\n        // System.out.println(ans);\\n        if(ans == n)\\n            return true;\\n        return false;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3005338,
                "title": "c-easy",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n       long long  int d=x,m=0,z;\\n\\t\\tfor (int i = x; i > 0; i=i/10)\\n\\t\\t{z=i%10;\\n\\t     m=m*10+z;\\n\\t\\t\\t\\n\\t\\t}\\n\\t\\tif(d==m)\\n        {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n\\n\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n       long long  int d=x,m=0,z;\\n\\t\\tfor (int i = x; i > 0; i=i/10)\\n\\t\\t{z=i%10;\\n\\t     m=m*10+z;\\n\\t\\t\\t\\n\\t\\t}\\n\\t\\tif(d==m)\\n        {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n\\n\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3003018,
                "title": "solution-using-array-no-string-conversion",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nMany of array operation are similar to string,thinking of the follow up question\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nwe can store all digits of array in string and iterate till its mid in reverse direction and match it with the digits of x with the help of modulo operator(default method to access digits of a number)\\nFor ex-\\nI/P: 10\\nthen arraylist would have\\n     [0,1] (in forward index manner)\\nwhen using modulo operator to access digits again we will get 0 as first element that\\'s why we start traversing from back of the arraylist \\nand match the elements,here in first iteration\\n0(from digits) and 1(from arraylist) will be checked ,they don\\'t match hence we return false\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n    O(digits of n)\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n    O(digits of n)\\n# Code\\n```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        if(x<0) return false;\\n        ArrayList<Integer> list\\n            = new ArrayList<Integer>();\\n            int n=x;\\n\\n        while(n>0){\\n            list.add(n%10);\\n            n=n/10;\\n        }\\n        \\n        n=x;\\n        for(int i=list.size()-1;i>=list.size()/2;i--){\\n            if((n%10)!=list.get(i)){\\n                return false;\\n            }\\n            n=n/10;\\n           // System.out.println(list.get(i));\\n        }\\n        return true;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Array"
                ],
                "code": "```\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        if(x<0) return false;\\n        ArrayList<Integer> list\\n            = new ArrayList<Integer>();\\n            int n=x;\\n\\n        while(n>0){\\n            list.add(n%10);\\n            n=n/10;\\n        }\\n        \\n        n=x;\\n        for(int i=list.size()-1;i>=list.size()/2;i--){\\n            if((n%10)!=list.get(i)){\\n                return false;\\n            }\\n            n=n/10;\\n           // System.out.println(list.get(i));\\n        }\\n        return true;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2972970,
                "title": "python-no-string-conversion",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n$$O(N)$$\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n$$O(N)$$\\n# Code\\n```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        if x < 0:\\n            return False\\n        lis = []\\n        while x >= 10:\\n            lis.append(x % 10)\\n            x //= 10\\n        lis.append(x)\\n        for i in range(int(math.ceil(len(lis)/2))):\\n            if lis[i] != lis[len(lis)-i-1]:\\n                return False\\n        return True\\n\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        if x < 0:\\n            return False\\n        lis = []\\n        while x >= 10:\\n            lis.append(x % 10)\\n            x //= 10\\n        lis.append(x)\\n        for i in range(int(math.ceil(len(lis)/2))):\\n            if lis[i] != lis[len(lis)-i-1]:\\n                return False\\n        return True\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2658882,
                "title": "solving-it-without-using-string-in-javascript",
                "content": "**Step one : declare two varables , one for reverse number and one for original number**\\nsince we are going to use reverse algorithm, the original number is gonna change so we need a refrence to the original number to compare it to the reversed one.\\n\\n```javascript\\nlet num = x;\\nlet reverse = 0\\n```\\n\\n**Step two : reverse algorithm**\\nfirst of all if it\\'s negative number, it is not Palindrome because in one side we have a negative sign and not on the other side\\n lets see how we can reverse a number like 124  \\n so we have the `reverse` variable and it is set to 0 and we want to somehow get the **last digit** and add it to our variable.   \\n we can find the last digit of a number by diving it by 10 , and the reminder is our last digit (we can get reminder of a number using `%` operator)\\n ```\\n 124 / 10 = 12.4  (124 % 10 = 4) // 4 is the reminder\\n 321/10 = 32.1  (321 % 10 = 1)  // 1 is the reminder\\n ```\\n**awesome!** so now we know how to find the last digit and we add it to `reverse`\\nnow we need to find a way to remove the last digit so we can add another digit to our `reverse` variable\\n**but how?** when we divide our number by 10 , we get a **decimal point**. in the examples above we have `12.4` and `32.1`. if we remove those we end up with `12` and `32`  (in javascript we do it with `Math.floor()` method)\\n**what now?** now we divide the new number by 10 , and get the reminder, so lets do it\\n```\\nfirst step\\n124 / 10 = 12.4 // we get the 4 and add it to the reverse . remove the decimal point and we have 12\\nsecond step\\n12 / 10 = 1.2 // we get the 2  but we don\\'t add it to reverse! because we will get 6. to go one level up we multipy the reverse by 10 so 4 * 10 = 40 and then we add the 2 so we have 42 .\\n```\\nwe keep doing (aka `loop`) this untill when we remove the decimal point , we get 0 and that\\'s when we are done!\\n\\n**Step three : lets implement this**\\n```javascript\\n// first if number is negative we return false, meaning it\\'s not palindrome;\\nif(x < 0) return false;\\n// our variables\\nlet num = x;\\nlet reverse = 0;\\n\\n// we use a while . we keep going untill we get x = 0\\nwhile( x > 0) {\\n\\t// multiply reverse by 10 and add the reminder\\n\\treverse = reverse * 10 + ( x % 10 )\\n\\t\\n\\t// devide x by 10 and remove decimal point. if x === 0 then it exists the loop\\n\\tx = Math.floor(x / 10)\\n}\\n\\n// now we are out of the while loop and we have the reverse number\\n// lastly we compare the original number with the reverse. we use return and compare these two numbers\\n// this will return True ( if they are equal ) or false( if they are not )\\nreturn reverse === num;\\n```\\n",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```javascript\\nlet num = x;\\nlet reverse = 0\\n```\n```\\n 124 / 10 = 12.4  (124 % 10 = 4) // 4 is the reminder\\n 321/10 = 32.1  (321 % 10 = 1)  // 1 is the reminder\\n ```\n```\\nfirst step\\n124 / 10 = 12.4 // we get the 4 and add it to the reverse . remove the decimal point and we have 12\\nsecond step\\n12 / 10 = 1.2 // we get the 2  but we don\\'t add it to reverse! because we will get 6. to go one level up we multipy the reverse by 10 so 4 * 10 = 40 and then we add the 2 so we have 42 .\\n```\n```javascript\\n// first if number is negative we return false, meaning it\\'s not palindrome;\\nif(x < 0) return false;\\n// our variables\\nlet num = x;\\nlet reverse = 0;\\n\\n// we use a while . we keep going untill we get x = 0\\nwhile( x > 0) {\\n\\t// multiply reverse by 10 and add the reminder\\n\\treverse = reverse * 10 + ( x % 10 )\\n\\t\\n\\t// devide x by 10 and remove decimal point. if x === 0 then it exists the loop\\n\\tx = Math.floor(x / 10)\\n}\\n\\n// now we are out of the while loop and we have the reverse number\\n// lastly we compare the original number with the reverse. we use return and compare these two numbers\\n// this will return True ( if they are equal ) or false( if they are not )\\nreturn reverse === num;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2458263,
                "title": "java-solution-easy-using-recursion",
                "content": "```\\nclass Solution {\\n    //finding reverse of the number using recursion\\n    int rev(int n,int s){\\n        if(n==0) return s;\\n        int sum=s*10+n%10;\\n        return rev(n/10,sum);\\n    }\\n    public boolean isPalindrome(int x) {\\n        if(x<0) return false;\\n        if(rev(x,0)==x) return true; \\n        \\n        //if the reverse of the number is\\n        //equal to the number returm true\\n        \\n        else return false;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    //finding reverse of the number using recursion\\n    int rev(int n,int s){\\n        if(n==0) return s;\\n        int sum=s*10+n%10;\\n        return rev(n/10,sum);\\n    }\\n    public boolean isPalindrome(int x) {\\n        if(x<0) return false;\\n        if(rev(x,0)==x) return true; \\n        \\n        //if the reverse of the number is\\n        //equal to the number returm true\\n        \\n        else return false;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1969553,
                "title": "typescript-strings-are-bad",
                "content": "Reverse number and compare.\\nNegatives filter out at first.\\nAvoid modulo operator to gain some perfornace points.\\n\\n```typescript\\nfunction isPalindrome(x: number): boolean {\\n    if (x < 0) return false;\\n    \\n    let x1 = 0;\\n    let div = x;\\n    while (div > 0) {\\n        const quotient = Math.floor(div / 10);\\n        const reminder = div - quotient * 10;\\n        div = quotient;\\n        x1 = x1 * 10 + reminder;\\n    }\\n    \\n    return x === x1;\\n};\\n```",
                "solutionTags": [
                    "JavaScript",
                    "TypeScript"
                ],
                "code": "```typescript\\nfunction isPalindrome(x: number): boolean {\\n    if (x < 0) return false;\\n    \\n    let x1 = 0;\\n    let div = x;\\n    while (div > 0) {\\n        const quotient = Math.floor(div / 10);\\n        const reminder = div - quotient * 10;\\n        div = quotient;\\n        x1 = x1 * 10 + reminder;\\n    }\\n    \\n    return x === x1;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1914722,
                "title": "simple-rust",
                "content": "```rust\\nfn is_palindrome(x: i32) -> bool {\\n\\tlet mut acc = x;\\n\\tlet mut y = 0;\\n\\twhile (acc > 0) {\\n\\t\\ty = y * 10 + acc % 10;\\n\\t\\tacc /= 10;\\n\\t}\\n\\tx == y\\n}\\n```",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```rust\\nfn is_palindrome(x: i32) -> bool {\\n\\tlet mut acc = x;\\n\\tlet mut y = 0;\\n\\twhile (acc > 0) {\\n\\t\\ty = y * 10 + acc % 10;\\n\\t\\tacc /= 10;\\n\\t}\\n\\tx == y\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1635684,
                "title": "one-line-js-solution-o-n",
                "content": "This may not be the idle interview way to answer this question but just wanted to share the beauty(?) of JS\\n\\n```\\nvar isPalindrome = function (x) {\\n  return x.toString() === x.toString().split(\"\").reverse().join(\"\");\\n};\\n```\\n\\nRuntime: 168 ms, faster than **92.57%** of JavaScript online submissions for Palindrome Number.\\nMemory Usage: 47.7 MB, less than **91.86%** of JavaScript online submissions for Palindrome Number.",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar isPalindrome = function (x) {\\n  return x.toString() === x.toString().split(\"\").reverse().join(\"\");\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1539657,
                "title": "ruby-simple-solution",
                "content": "Quick and easy solution in Ruby without converting to string (convert to array). 2 line solution.\\n```\\ndef is_palindrome(x)\\n   return false if x < 0\\n    return x.digits.join.to_i == x\\nend\\n```",
                "solutionTags": [
                    "Ruby",
                    "Array"
                ],
                "code": "```\\ndef is_palindrome(x)\\n   return false if x < 0\\n    return x.digits.join.to_i == x\\nend\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 1145916,
                "title": "javascript-easy",
                "content": "````\\n/**\\n * @param {number} x\\n * @return {boolean}\\n */\\nvar isPalindrome = function(x) {\\n    let arr = x.toString().split(\\'\\');\\n    let left = 0,\\n        right = arr.length - 1;\\n    while (left < right) {\\n        if (arr[left++] !== arr[right--]) return false;\\n    }\\n    return true;\\n    \\n};",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "````\\n/**\\n * @param {number} x\\n * @return {boolean}\\n */\\nvar isPalindrome = function(x) {\\n    let arr = x.toString().split(\\'\\');\\n    let left = 0,\\n        right = arr.length - 1;\\n    while (left < right) {\\n        if (arr[left++] !== arr[right--]) return false;\\n    }\\n    return true;\\n    \\n};",
                "codeTag": "Unknown"
            },
            {
                "id": 1045945,
                "title": "rust-loop-solution",
                "content": "Runtime: 8 ms, faster than 55.97% of Rust online submissions for Palindrome Number.\\nMemory Usage: 2 MB, less than 91.77% of Rust online submissions for Palindrome Number.\\n```\\nimpl Solution {\\n    pub fn is_palindrome(x: i32) -> bool {\\n        if x < 0 || (x % 10 == 0 && x != 0) {\\n            return false\\n        }\\n        \\n        let (mut x, mut rev) = (x, 0);\\n        while x > rev {\\n            rev = rev * 10 + x % 10;\\n            x /= 10;\\n        }\\n        x == rev || x == rev / 10\\n    }\\n}\\n```",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```\\nimpl Solution {\\n    pub fn is_palindrome(x: i32) -> bool {\\n        if x < 0 || (x % 10 == 0 && x != 0) {\\n            return false\\n        }\\n        \\n        let (mut x, mut rev) = (x, 0);\\n        while x > rev {\\n            rev = rev * 10 + x % 10;\\n            x /= 10;\\n        }\\n        x == rev || x == rev / 10\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1042511,
                "title": "python-solution",
                "content": "Python solution:\\n```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        pal = x\\n        n = 0\\n        while x > 0:\\n            n = n * 10 + x % 10\\n            x = x //10\\n        if pal == n:\\n            return True\\n        else:\\n            return False\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        pal = x\\n        n = 0\\n        while x > 0:\\n            n = n * 10 + x % 10\\n            x = x //10\\n        if pal == n:\\n            return True\\n        else:\\n            return False\\n```",
                "codeTag": "Java"
            },
            {
                "id": 747909,
                "title": "swift",
                "content": "```\\nfunc isPalindrome(_ x: Int) -> Bool {\\n        \\n     guard x >= 0 else {\\n        return false\\n    }\\n    \\n    if x < 10 {\\n        return true\\n    }\\n    \\n    var temp = x;\\n    var rev = 0;\\n    \\n    while temp != 0 {\\n        rev = (rev * 10) + (temp % 10)\\n        temp /= 10;\\n    }\\n    \\n    \\n    return  rev == x\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\nfunc isPalindrome(_ x: Int) -> Bool {\\n        \\n     guard x >= 0 else {\\n        return false\\n    }\\n    \\n    if x < 10 {\\n        return true\\n    }\\n    \\n    var temp = x;\\n    var rev = 0;\\n    \\n    while temp != 0 {\\n        rev = (rev * 10) + (temp % 10)\\n        temp /= 10;\\n    }\\n    \\n    \\n    return  rev == x\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 593587,
                "title": "python-one-line-solution-48ms-python-explained",
                "content": "In this problem we just need to reverse the integer and check for both.\\nFirst we will check if it\\'s less than \\'zero\\' return False if that\\'s the case else return the comparision between the both reversed string and the given. \\nIf Type cast the integer x to string first and then using x[::-1] we reversed it.\\nAnd we can write this is one line as given below\\n```\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return False if x<0 else str(x)[::-1]==str(x)\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return False if x<0 else str(x)[::-1]==str(x)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 483133,
                "title": "9-javascript-math-solution",
                "content": "Here\\'s a math-based solution solution different from any of the others I see here.\\n\\n> Runtime: **184 ms**, faster than *81.12%* of JavaScript online submissions\\n> Memory Usage: **44.7 MB**, less than *98.28%* of JavaScript online submissions\\n\\n```javascript\\nconst isPalindrome = x => {\\n  if (x < 0) return false;\\n  let left = 10 ** Math.trunc(Math.log10(Math.abs(x)));\\n  while (0 < x) {\\n    if (Math.trunc(x / left) !== x % 10) return false;\\n    x = Math.trunc((x % left) / 10);\\n    left /= 100;\\n  }\\n  return true;\\n};\\n```",
                "solutionTags": [
                    "JavaScript",
                    "Math"
                ],
                "code": "```javascript\\nconst isPalindrome = x => {\\n  if (x < 0) return false;\\n  let left = 10 ** Math.trunc(Math.log10(Math.abs(x)));\\n  while (0 < x) {\\n    if (Math.trunc(x / left) !== x % 10) return false;\\n    x = Math.trunc((x % left) / 10);\\n    left /= 100;\\n  }\\n  return true;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 317510,
                "title": "cpp-beats-100",
                "content": "```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x < 0 || (x > 0 && x % 10 == 0))\\n            return false;\\n        int tmp = 0;\\n        while(tmp < x && tmp < x / 10) {\\n            tmp *= 10;\\n            tmp += x % 10;\\n            x /= 10;\\n        }\\n        return tmp == x || tmp == x/10;\\n    }\\n};\\n```\\nTime: O(N)\\nSpace: O(1)",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x < 0 || (x > 0 && x % 10 == 0))\\n            return false;\\n        int tmp = 0;\\n        while(tmp < x && tmp < x / 10) {\\n            tmp *= 10;\\n            tmp += x % 10;\\n            x /= 10;\\n        }\\n        return tmp == x || tmp == x/10;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 287547,
                "title": "c-80ms-14-8mb",
                "content": "Runtime: 80 ms, faster than 99.96% of C# online submissions for Palindrome Number.\\nMemory Usage: 14.8 MB, less than 100.00% of C# online submissions for Palindrome Number.\\n\\n```\\npublic class Solution {\\n    public bool IsPalindrome(int x) {\\n        //all negetive integer are not palindrome\\n        if(x < 0){\\n            return false;\\n        } else {\\n            int y = 0;\\n            int temp = x;\\n            while(temp != 0) {\\n                y = y * 10 + temp % 10;\\n                temp = temp / 10;\\n            }\\n            if(y == x){\\n                return true;\\n            } else {\\n                return false;\\n            }\\n        }\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\npublic class Solution {\\n    public bool IsPalindrome(int x) {\\n        //all negetive integer are not palindrome\\n        if(x < 0){\\n            return false;\\n        } else {\\n            int y = 0;\\n            int temp = x;\\n            while(temp != 0) {\\n                y = y * 10 + temp % 10;\\n                temp = temp / 10;\\n            }\\n            if(y == x){\\n                return true;\\n            } else {\\n                return false;\\n            }\\n        }\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 176640,
                "title": "python3-solution-without-str",
                "content": "    def isPalindrome(self,x):\n        if ((x<0)or(x%10==0 and x!=0)):\n            return False\n        else:\n            revnum=0\n            while(x>revnum):\n                revnum=revnum*10 + x%10\n                x=x//10\n                \n            return (x == revnum) or (x == revnum//10)",
                "solutionTags": [],
                "code": "    def isPalindrome(self,x):\n        if ((x<0)or(x%10==0 and x!=0)):\n            revnum=0\n            while(x>revnum):\n                revnum=revnum*10 + x%10\n                x=x//10\n            return (x == revnum) or (x == revnum//10)",
                "codeTag": "Python3"
            },
            {
                "id": 164337,
                "title": "javascript-solution",
                "content": "```\\nvar isPalindrome = function(x) {\\n    if(x < 0) return false;\\n    x += \"\";\\n    let i = 0; \\n    let j = x.length - 1;\\n    while(i < j){\\n        if(x[i] !== x[j]) return false;\\n        else{\\n            i ++;\\n            j --;\\n        }\\n    }\\n    return true;\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nvar isPalindrome = function(x) {\\n    if(x < 0) return false;\\n    x += \"\";\\n    let i = 0; \\n    let j = x.length - 1;\\n    while(i < j){\\n        if(x[i] !== x[j]) return false;\\n        else{\\n            i ++;\\n            j --;\\n        }\\n    }\\n    return true;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 5358,
                "title": "you-wanted-solution-with-no-extra-space-you-got-it",
                "content": "But it's terribly silly. And the compiler might want to optimize it by using temporary variables, and that's a kind of extra space I'm not responsible for.\\n\\n    public boolean isPalindrome(int x) {\\n        if (x < 0 || x > 0 && x % 10 == 0) {\\n            return false;\\n        } else {\\n            return x / 10 == 0 || x / 10 == x % 10 || x / 100 > 0 && x / 100 == x % 10 // 1-3 digits\\n                   || x / 100 > 0 && x / 100 ==       x % 10 * 10   + x % 100 / 10 // 4 digits\\n                   || x / 1000 > 0 && x / 1000 ==     x % 10 * 10   + x % 100 / 10 // 5 digits\\n                   || x / 1000 > 0 && x / 1000 ==     x % 10 * 100  + x % 100 / 10 * 10  + x % 1000 / 100 // 6 digits\\n                   || x / 10000 > 0 && x / 10000 ==   x % 10 * 100  + x % 100 / 10 * 10  + x % 1000 / 100 // 7 digits\\n                   || x / 10000 > 0 && x / 10000 ==   x % 10 * 1000 + x % 100 / 10 * 100 + x % 1000 / 100 * 10\\n                                                      + x % 10000 / 1000 // 8 digits\\n                   || x / 100000 > 0 && x / 100000 == x % 10 * 1000 + x % 100 / 10 * 100 + x % 1000 / 100 * 10\\n                                                      + x % 10000 / 1000 // 9 digits\\n                   || x / 100000 > 0 && x / 100000 == x % 10 * 10000 + x % 100 / 10 * 1000 + x % 1000 / 100 * 100\\n                                                      + x % 10000 / 1000 * 10 + x % 100000 / 10000; // 10 digits\\n        }\\n    }",
                "solutionTags": [
                    "Java"
                ],
                "code": "But it's terribly silly. And the compiler might want to optimize it by using temporary variables, and that's a kind of extra space I'm not responsible for.\\n\\n    public boolean isPalindrome(int x) {\\n        if (x < 0 || x > 0 && x % 10 == 0) {\\n            return false;\\n        } else {\\n            return x / 10 == 0 || x / 10 == x % 10 || x / 100 > 0 && x / 100 == x % 10 // 1-3 digits\\n                   || x / 100 > 0 && x / 100 ==       x % 10 * 10   + x % 100 / 10 // 4 digits\\n                   || x / 1000 > 0 && x / 1000 ==     x % 10 * 10   + x % 100 / 10 // 5 digits\\n                   || x / 1000 > 0 && x / 1000 ==     x % 10 * 100  + x % 100 / 10 * 10  + x % 1000 / 100 // 6 digits\\n                   || x / 10000 > 0 && x / 10000 ==   x % 10 * 100  + x % 100 / 10 * 10  + x % 1000 / 100 // 7 digits\\n                   || x / 10000 > 0 && x / 10000 ==   x % 10 * 1000 + x % 100 / 10 * 100 + x % 1000 / 100 * 10\\n                                                      + x % 10000 / 1000 // 8 digits\\n                   || x / 100000 > 0 && x / 100000 == x % 10 * 1000 + x % 100 / 10 * 100 + x % 1000 / 100 * 10\\n                                                      + x % 10000 / 1000 // 9 digits\\n                   || x / 100000 > 0 && x / 100000 == x % 10 * 10000 + x % 100 / 10 * 1000 + x % 1000 / 100 * 100\\n                                                      + x % 10000 / 1000 * 10 + x % 100000 / 10000; // 10 digits\\n        }\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 5480,
                "title": "accepted-java-solution-with-short-lines",
                "content": "    public class Solution {\\n        public boolean isPalindrome(int x) {\\n            int temp = Math.abs(x);\\n            int n = temp % 10;\\n            while(temp / 10 != 0){\\n                temp = temp / 10;    \\n                n = n * 10 + temp % 10; \\n            }\\n            if(n == x){\\n                return true;\\n            }\\n            return false;\\n        }\\n    }",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n        public boolean isPalindrome(int x) {\\n            int temp = Math.abs(x);\\n            int n = temp % 10;\\n            while(temp / 10 != 0){\\n                temp = temp / 10;    \\n                n = n * 10 + temp % 10; \\n            }",
                "codeTag": "Java"
            },
            {
                "id": 5544,
                "title": "380ms-accepted-java-solution-what-no-extra-space-mean-though",
                "content": "    public boolean isPalindrome(int x) {\\n    \\n    if (x < 0) return false;\\n    else if (x < 10) return true;\\n    \\n    int n = (int) Math.log10(x);\\n    \\n    for (int i = n; i > n / 2; i--) {\\n    \\tif (x / (int) Math.pow(10, i) % 10 != x / (int) Math.pow(10, n - i) % 10)\\n    \\t\\treturn false;\\n    }\\n    \\n    return true;\\n    \\n    }",
                "solutionTags": [],
                "code": "    public boolean isPalindrome(int x) {\\n    \\n    if (x < 0) return false;\\n    else if (x < 10) return true;\\n    \\n    int n = (int) Math.log10(x);\\n    \\n    for (int i = n; i > n / 2; i--) {\\n    \\tif (x / (int) Math.pow(10, i) % 10 != x / (int) Math.pow(10, n - i) % 10)\\n    \\t\\treturn false;\\n    }\\n    \\n    return true;\\n    \\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 5571,
                "title": "my-c-code-compare-the-first-half-and-the-second-half-of-x",
                "content": "Here, it is assumed that  Palindrome numbers are non-negative and 0 is considered as \"true\"\\nThe basic idea is to construct a rX which includes the second half digits (in the reverse order) and x, which includes the first half digits (in the normal order) and compare them. Attention should be paid to the odd/even digits cases. In such way, overflow issue is avoided.\\n\\n       class Solution {\\n        public:\\n            bool isPalindrome(int x) {\\n                int rX = 0; // the second half of x\\n                if(!x)\\n                { // if x==0\\n                    return true;\\n                }\\n                else if(x<0 || x%10 == 0)\\n                { // all negative numbers are not Palindrome numbers by definition, also for \"0\" digit, false too\\n                    return false;\\n                }\\n                else\\n                {\\n                    while(rX < x)\\n                    {\\n                        rX = rX*10 + x % 10;\\n                        x = x/10;\\n                    }\\n                    return (rX==x) || (rX/10 == x); //(rX==x) is for the even digits case, (rX/10 == x) is for the odd digits case\\n                    \\n                }\\n                \\n            }\\n        };",
                "solutionTags": [],
                "code": "class Solution {\\n        public:\\n            bool isPalindrome(int x) {\\n                int rX = 0; // the second half of x\\n                if(!x)\\n                { // if x==0\\n                    return true;\\n                }",
                "codeTag": "Java"
            }
        ],
        "discussions": [
            {
                "id": 1574279,
                "content": [
                    {
                        "username": "NowyKumara",
                        "content": "First convert x into string \\nx = str(x)\\nThen get reverse of x\\nn = x[::-1]\\nNow equate if they are palindrome then teh values must be same>\\nif x == n:\\n\\treturn True\\nelse:\\n\\treturn False.\\nThis is my first ever code that I wrote myself without any help and I am moved to tears right now seeing it compile\\nI am sorry but had to say it, thanks to the community for being there, it means a lot."
                    },
                    {
                        "username": "SivaKrishna-2002",
                        "content": "can you write in java \\n"
                    },
                    {
                        "username": "daliamukherjee216",
                        "content": "[@Moonbeam8773](/Moonbeam8773) i am getting the use of undeclared identifier \\'x_str\\' error. any solution?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Solution in java :\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}\\n"
                    },
                    {
                        "username": "jedi8380",
                        "content": "I feel you when you said without any help lol, it gives you a sense of relief from having imposter syndrome"
                    },
                    {
                        "username": "Moonbeam8773",
                        "content": "What you\\'re typing is essentially:\\nif True:\\n  return True\\nelse:\\n  return False\\n\\nJust do:\\nx_str = str(x)\\nreturn x_str == x_str[::-1]"
                    },
                    {
                        "username": "Aurof",
                        "content": "you didnt read the follow up, the real challenge is do it without converting the int to a string"
                    },
                    {
                        "username": "muvvalasairamakrishna",
                        "content": "i wrote the same but its giving an erroe\\n"
                    },
                    {
                        "username": "rellik",
                        "content": "I am wondering how the other people got their code ACed, the testing result of **\"-2147447412\"** seems a little odd to me. Should it be a palindromic number or not?\\n\\nNote: I believe the range of int is [-2147483648, 2147483647] and **\"-2147447412\"** is not overflowed, plus I handled the overflow cases already (test case \"-2147483648\" in particular).\\n\\n\\n11499 / 11502 test cases passed.\\n\\nStatus: Wrong Answer\\n\\n\\nInput:\\t-2147447412\\n\\nOutput:\\ttrue\\n\\nExpected:\\tfalse\\n\\n------------------------------------------------------------------\\nHere's my second question:\\n\\n**Why does the function take \"int\" as input instead of \"unsigned int\", when we assume all negative numbers are NOT palindromic.**"
                    },
                    {
                        "username": "rohanrambroo",
                        "content": "i think in your code you should do if x<0 return false because we can never accept -ve numbers"
                    },
                    {
                        "username": "mukulvagh11",
                        "content": "Input: x = -121\\nOutput: false\\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\\n\\n"
                    },
                    {
                        "username": "izzattulaev",
                        "content": "Input: -2147447412 and output must show \"false\" (in the description)\\n"
                    },
                    {
                        "username": "kojosimtema",
                        "content": "i believe all negative numbers are not palindrome because \"-\" is considered part of the number, and in the reverse you will get the \"-\"  at the end of the number. \\n\\nSo in this case \"-2147447412\"  will be \"2147447412-\"  in the reverse"
                    },
                    {
                        "username": "LMunique",
                        "content": "If it says O(1) space I can understand how to do that, but what does no \"extra space\" mean? If I use another integer to save the reversed number does it mean I'm still using extra space? Or when I simply am using an integer i for loop does it mean I have extra space?"
                    },
                    {
                        "username": "hp273",
                        "content": "O(1) does not mean extra space, it means the space you are using is independent of any other factor for example if you are using fixed size array then the size will not grow as i/p size grows."
                    },
                    {
                        "username": "blueshipswims",
                        "content": "by \\'extra space\\' what it means is that does the space required for all the cases change with case ? is the space required \\'variable\\' . If you reverse a number like 123 it yields 321 and this would consume the same memory when you reverse a number like 94729726 because both are integers BUT if you are using an array to store the digits and then reverse it or whatever then the memory required becomes variable because the individual digits have their own space in the array and thus costing EXTRA SPACE. Hope it helps. "
                    },
                    {
                        "username": "krishankanhaya_",
                        "content": "yes, i get your intension but O(1) due to this extra space which you needed for solving problem not grow as your input size varies that\\'s why it is O(1)."
                    },
                    {
                        "username": "haikeren61",
                        "content": "![image](https://assets.leetcode.com/users/images/e119a3a4-d25c-4396-b675-ad1ff971633f_1636894502.7062209.png)\\n"
                    },
                    {
                        "username": "CandyRobbery",
                        "content": "- Impossible to solve without extra space. Always need space for constants, variables or whatever. Recursion calls will take space for call stack.\\n\\n- If you are talking about constant space, then even declaring a string / stack will take constant space. (In fact at most (log(10, INT_MAX) * sizeof char), which is no worse than declaring an integer or more). Actually, even recursion will take constant space."
                    },
                    {
                        "username": "Sudheer474",
                        "content": "what the hell output is whats wrong with my code\\n   int rev=0;\\n        if(x<0){\\n            return false;\\n        }\\n        while(x!=0){\\n            rev= rev*10 + x%10;\\n            x=x/10;\\n        }\\n        if(x!=rev){\\n            return false;\\n        }\\n        return true;\\n\\nit gives wrong for 121 test case my output is false.."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "class Solution {\\n\\n        public boolean isPalindrome(int x) {\\n\\n    if (x < 0 || (x != 0 && x % 10 == 0)) {\\n        return false;\\n    }\\n\\n    int reversed = 0;\\n    int originalX = x;\\n\\n\\n    while (x > 0) {\\n        int digit = x % 10;\\n        reversed = reversed * 10 + digit;\\n        x /= 10;\\n    }\\n\\n\\n    return reversed == originalX;\\n}\\nUse this approach"
                    },
                    {
                        "username": "Hari_Seenu_7",
                        "content": "bro just omit last if and return statement then write return rev "
                    },
                    {
                        "username": "omprakash1353",
                        "content": "Bro you have changed the value of x then you tried to compare them it obviously goona return wrong ans"
                    },
                    {
                        "username": "biswassubhojit6831",
                        "content": "your rev val will be 121 and x will be \"0\" either change the code or start focusing more on every line to find the solution"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "a/c to your code \\nx is changing (i.e., in while loop) &\\nyou are comparing with x.\\nSo you\\'ve to just copy x with y\\nthen you\\'ve compare y with rev.\\nlike...\\n\\nint rev=0,y;\\ny=x;\\nif(x<0) return false;\\nwhile(x!=0){\\n       rev= rev*10 + x%10;\\n       x=x/10;\\n}\\nif(y != rev) return false;\\nreturn true;\\n\\nthanks :)"
                    },
                    {
                        "username": "ps_27",
                        "content": "acc to your code x is changing ....and you are comparing with x ."
                    },
                    {
                        "username": "Rishiraj_30",
                        "content": "just store the value of x before performing any operation x.\\n\\nint copy_of_x = x;\\nint rev=0;\\nif(x<0){\\nreturn false;\\n}\\nwhile(x!=0){\\nrev= rev*10 + x%10;\\nx=x/10;\\n}\\nif(copy_of_x !=rev){\\nreturn false;\\n}\\nreturn true;"
                    },
                    {
                        "username": "satyamgarg1308",
                        "content": "if(x<0) this is your problem , Program says the value of X can be negative or positive ."
                    },
                    {
                        "username": "MenaiAla",
                        "content": "[@sonu2231kumar](/sonu2231kumar) It does not work."
                    },
                    {
                        "username": "f_murshid_",
                        "content": "due to x is gradually decresing so first initialize temp variable and declear x in it and then compare rev and temp"
                    },
                    {
                        "username": "sonu2231kumar",
                        "content": "rev = (rev*10)+(x%10)\\nor \\nif(x==rev)\\n          true;\\nfalse;\\n"
                    },
                    {
                        "username": "harshitgaur600",
                        "content": "[@MayankRathore](/MayankRathore) x is changing in the loop as you did x=x/10. so try to make a temp variable to store x.\\n"
                    },
                    {
                        "username": "Bit-creatorCK",
                        "content": "[@MayankRathore](/MayankRathore) The Value of x changes in while loop and ends to 0 i.e. the condition of your while loop. To check whether it\\'s palindrome or not, you have to keep a copy of the value of x into another variable. \\n\\nJust think, if the value of x wasn\\'t changing in your while loop, then why did it not end up to infinite loop? Hope you got it now."
                    },
                    {
                        "username": "brahadeeshram",
                        "content": "last if condition has wrong condition and return statement also wrong "
                    },
                    {
                        "username": "HegdeRam",
                        "content": "keep original copy of X at initial step. int org = x;"
                    },
                    {
                        "username": "Sofiyan_M",
                        "content": "use temp to store value x . bcoz  x\\'s value changes through out the program from original one\\'s and use if(temp != rev)"
                    },
                    {
                        "username": "MayankRathore",
                        "content": " bool isPalindrome(int x) {\\n        long long int ans=0;\\n        while(x!=0)\\n        {\\n            int temp= x % 10;\\n           \\n            ans= (ans *10 )+ temp;\\n             x = x / 10;\\n        }\\n        if(ans==x){\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n\\nsame problem with my code also......."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    },
                    {
                        "username": "cherishlc",
                        "content": "If a number is a palindrome,,  its reverse equals itself.  \\nWhich means its reverse is NOT overflow!!!\\nSo that ' reversed integer might overflow'  doesn't matter at all, since a overlowed number isn't a palindrome.\\n\\n\\nNow the question becomes whether a NONE palindrome  == its reverse if we do NOT deal with overflow."
                    },
                    {
                        "username": "aivanilov",
                        "content": "Integer max = 2147483647 and Integer min = -2147483648. May be this is the case?"
                    },
                    {
                        "username": "run2explore99",
                        "content": "BEATS 97%\\n `class Solution {\\n    public boolean isPalindrome(int x) {\\n       int reverse=0;\\n        int temp = x;\\n\\n        if (x < 0) return false;\\n        while(temp != 0)   \\n        {  \\n        int remainder = temp % 10;  \\n        reverse = reverse * 10 + remainder;  \\n        temp = temp/10;  \\n        }  \\n        return reverse == x;\\n\\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1564695,
                "content": [
                    {
                        "username": "NowyKumara",
                        "content": "First convert x into string \\nx = str(x)\\nThen get reverse of x\\nn = x[::-1]\\nNow equate if they are palindrome then teh values must be same>\\nif x == n:\\n\\treturn True\\nelse:\\n\\treturn False.\\nThis is my first ever code that I wrote myself without any help and I am moved to tears right now seeing it compile\\nI am sorry but had to say it, thanks to the community for being there, it means a lot."
                    },
                    {
                        "username": "SivaKrishna-2002",
                        "content": "can you write in java \\n"
                    },
                    {
                        "username": "daliamukherjee216",
                        "content": "[@Moonbeam8773](/Moonbeam8773) i am getting the use of undeclared identifier \\'x_str\\' error. any solution?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Solution in java :\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}\\n"
                    },
                    {
                        "username": "jedi8380",
                        "content": "I feel you when you said without any help lol, it gives you a sense of relief from having imposter syndrome"
                    },
                    {
                        "username": "Moonbeam8773",
                        "content": "What you\\'re typing is essentially:\\nif True:\\n  return True\\nelse:\\n  return False\\n\\nJust do:\\nx_str = str(x)\\nreturn x_str == x_str[::-1]"
                    },
                    {
                        "username": "Aurof",
                        "content": "you didnt read the follow up, the real challenge is do it without converting the int to a string"
                    },
                    {
                        "username": "muvvalasairamakrishna",
                        "content": "i wrote the same but its giving an erroe\\n"
                    },
                    {
                        "username": "rellik",
                        "content": "I am wondering how the other people got their code ACed, the testing result of **\"-2147447412\"** seems a little odd to me. Should it be a palindromic number or not?\\n\\nNote: I believe the range of int is [-2147483648, 2147483647] and **\"-2147447412\"** is not overflowed, plus I handled the overflow cases already (test case \"-2147483648\" in particular).\\n\\n\\n11499 / 11502 test cases passed.\\n\\nStatus: Wrong Answer\\n\\n\\nInput:\\t-2147447412\\n\\nOutput:\\ttrue\\n\\nExpected:\\tfalse\\n\\n------------------------------------------------------------------\\nHere's my second question:\\n\\n**Why does the function take \"int\" as input instead of \"unsigned int\", when we assume all negative numbers are NOT palindromic.**"
                    },
                    {
                        "username": "rohanrambroo",
                        "content": "i think in your code you should do if x<0 return false because we can never accept -ve numbers"
                    },
                    {
                        "username": "mukulvagh11",
                        "content": "Input: x = -121\\nOutput: false\\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\\n\\n"
                    },
                    {
                        "username": "izzattulaev",
                        "content": "Input: -2147447412 and output must show \"false\" (in the description)\\n"
                    },
                    {
                        "username": "kojosimtema",
                        "content": "i believe all negative numbers are not palindrome because \"-\" is considered part of the number, and in the reverse you will get the \"-\"  at the end of the number. \\n\\nSo in this case \"-2147447412\"  will be \"2147447412-\"  in the reverse"
                    },
                    {
                        "username": "LMunique",
                        "content": "If it says O(1) space I can understand how to do that, but what does no \"extra space\" mean? If I use another integer to save the reversed number does it mean I'm still using extra space? Or when I simply am using an integer i for loop does it mean I have extra space?"
                    },
                    {
                        "username": "hp273",
                        "content": "O(1) does not mean extra space, it means the space you are using is independent of any other factor for example if you are using fixed size array then the size will not grow as i/p size grows."
                    },
                    {
                        "username": "blueshipswims",
                        "content": "by \\'extra space\\' what it means is that does the space required for all the cases change with case ? is the space required \\'variable\\' . If you reverse a number like 123 it yields 321 and this would consume the same memory when you reverse a number like 94729726 because both are integers BUT if you are using an array to store the digits and then reverse it or whatever then the memory required becomes variable because the individual digits have their own space in the array and thus costing EXTRA SPACE. Hope it helps. "
                    },
                    {
                        "username": "krishankanhaya_",
                        "content": "yes, i get your intension but O(1) due to this extra space which you needed for solving problem not grow as your input size varies that\\'s why it is O(1)."
                    },
                    {
                        "username": "haikeren61",
                        "content": "![image](https://assets.leetcode.com/users/images/e119a3a4-d25c-4396-b675-ad1ff971633f_1636894502.7062209.png)\\n"
                    },
                    {
                        "username": "CandyRobbery",
                        "content": "- Impossible to solve without extra space. Always need space for constants, variables or whatever. Recursion calls will take space for call stack.\\n\\n- If you are talking about constant space, then even declaring a string / stack will take constant space. (In fact at most (log(10, INT_MAX) * sizeof char), which is no worse than declaring an integer or more). Actually, even recursion will take constant space."
                    },
                    {
                        "username": "Sudheer474",
                        "content": "what the hell output is whats wrong with my code\\n   int rev=0;\\n        if(x<0){\\n            return false;\\n        }\\n        while(x!=0){\\n            rev= rev*10 + x%10;\\n            x=x/10;\\n        }\\n        if(x!=rev){\\n            return false;\\n        }\\n        return true;\\n\\nit gives wrong for 121 test case my output is false.."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "class Solution {\\n\\n        public boolean isPalindrome(int x) {\\n\\n    if (x < 0 || (x != 0 && x % 10 == 0)) {\\n        return false;\\n    }\\n\\n    int reversed = 0;\\n    int originalX = x;\\n\\n\\n    while (x > 0) {\\n        int digit = x % 10;\\n        reversed = reversed * 10 + digit;\\n        x /= 10;\\n    }\\n\\n\\n    return reversed == originalX;\\n}\\nUse this approach"
                    },
                    {
                        "username": "Hari_Seenu_7",
                        "content": "bro just omit last if and return statement then write return rev "
                    },
                    {
                        "username": "omprakash1353",
                        "content": "Bro you have changed the value of x then you tried to compare them it obviously goona return wrong ans"
                    },
                    {
                        "username": "biswassubhojit6831",
                        "content": "your rev val will be 121 and x will be \"0\" either change the code or start focusing more on every line to find the solution"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "a/c to your code \\nx is changing (i.e., in while loop) &\\nyou are comparing with x.\\nSo you\\'ve to just copy x with y\\nthen you\\'ve compare y with rev.\\nlike...\\n\\nint rev=0,y;\\ny=x;\\nif(x<0) return false;\\nwhile(x!=0){\\n       rev= rev*10 + x%10;\\n       x=x/10;\\n}\\nif(y != rev) return false;\\nreturn true;\\n\\nthanks :)"
                    },
                    {
                        "username": "ps_27",
                        "content": "acc to your code x is changing ....and you are comparing with x ."
                    },
                    {
                        "username": "Rishiraj_30",
                        "content": "just store the value of x before performing any operation x.\\n\\nint copy_of_x = x;\\nint rev=0;\\nif(x<0){\\nreturn false;\\n}\\nwhile(x!=0){\\nrev= rev*10 + x%10;\\nx=x/10;\\n}\\nif(copy_of_x !=rev){\\nreturn false;\\n}\\nreturn true;"
                    },
                    {
                        "username": "satyamgarg1308",
                        "content": "if(x<0) this is your problem , Program says the value of X can be negative or positive ."
                    },
                    {
                        "username": "MenaiAla",
                        "content": "[@sonu2231kumar](/sonu2231kumar) It does not work."
                    },
                    {
                        "username": "f_murshid_",
                        "content": "due to x is gradually decresing so first initialize temp variable and declear x in it and then compare rev and temp"
                    },
                    {
                        "username": "sonu2231kumar",
                        "content": "rev = (rev*10)+(x%10)\\nor \\nif(x==rev)\\n          true;\\nfalse;\\n"
                    },
                    {
                        "username": "harshitgaur600",
                        "content": "[@MayankRathore](/MayankRathore) x is changing in the loop as you did x=x/10. so try to make a temp variable to store x.\\n"
                    },
                    {
                        "username": "Bit-creatorCK",
                        "content": "[@MayankRathore](/MayankRathore) The Value of x changes in while loop and ends to 0 i.e. the condition of your while loop. To check whether it\\'s palindrome or not, you have to keep a copy of the value of x into another variable. \\n\\nJust think, if the value of x wasn\\'t changing in your while loop, then why did it not end up to infinite loop? Hope you got it now."
                    },
                    {
                        "username": "brahadeeshram",
                        "content": "last if condition has wrong condition and return statement also wrong "
                    },
                    {
                        "username": "HegdeRam",
                        "content": "keep original copy of X at initial step. int org = x;"
                    },
                    {
                        "username": "Sofiyan_M",
                        "content": "use temp to store value x . bcoz  x\\'s value changes through out the program from original one\\'s and use if(temp != rev)"
                    },
                    {
                        "username": "MayankRathore",
                        "content": " bool isPalindrome(int x) {\\n        long long int ans=0;\\n        while(x!=0)\\n        {\\n            int temp= x % 10;\\n           \\n            ans= (ans *10 )+ temp;\\n             x = x / 10;\\n        }\\n        if(ans==x){\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n\\nsame problem with my code also......."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    },
                    {
                        "username": "cherishlc",
                        "content": "If a number is a palindrome,,  its reverse equals itself.  \\nWhich means its reverse is NOT overflow!!!\\nSo that ' reversed integer might overflow'  doesn't matter at all, since a overlowed number isn't a palindrome.\\n\\n\\nNow the question becomes whether a NONE palindrome  == its reverse if we do NOT deal with overflow."
                    },
                    {
                        "username": "aivanilov",
                        "content": "Integer max = 2147483647 and Integer min = -2147483648. May be this is the case?"
                    },
                    {
                        "username": "run2explore99",
                        "content": "BEATS 97%\\n `class Solution {\\n    public boolean isPalindrome(int x) {\\n       int reverse=0;\\n        int temp = x;\\n\\n        if (x < 0) return false;\\n        while(temp != 0)   \\n        {  \\n        int remainder = temp % 10;  \\n        reverse = reverse * 10 + remainder;  \\n        temp = temp/10;  \\n        }  \\n        return reverse == x;\\n\\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1565223,
                "content": [
                    {
                        "username": "NowyKumara",
                        "content": "First convert x into string \\nx = str(x)\\nThen get reverse of x\\nn = x[::-1]\\nNow equate if they are palindrome then teh values must be same>\\nif x == n:\\n\\treturn True\\nelse:\\n\\treturn False.\\nThis is my first ever code that I wrote myself without any help and I am moved to tears right now seeing it compile\\nI am sorry but had to say it, thanks to the community for being there, it means a lot."
                    },
                    {
                        "username": "SivaKrishna-2002",
                        "content": "can you write in java \\n"
                    },
                    {
                        "username": "daliamukherjee216",
                        "content": "[@Moonbeam8773](/Moonbeam8773) i am getting the use of undeclared identifier \\'x_str\\' error. any solution?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Solution in java :\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}\\n"
                    },
                    {
                        "username": "jedi8380",
                        "content": "I feel you when you said without any help lol, it gives you a sense of relief from having imposter syndrome"
                    },
                    {
                        "username": "Moonbeam8773",
                        "content": "What you\\'re typing is essentially:\\nif True:\\n  return True\\nelse:\\n  return False\\n\\nJust do:\\nx_str = str(x)\\nreturn x_str == x_str[::-1]"
                    },
                    {
                        "username": "Aurof",
                        "content": "you didnt read the follow up, the real challenge is do it without converting the int to a string"
                    },
                    {
                        "username": "muvvalasairamakrishna",
                        "content": "i wrote the same but its giving an erroe\\n"
                    },
                    {
                        "username": "rellik",
                        "content": "I am wondering how the other people got their code ACed, the testing result of **\"-2147447412\"** seems a little odd to me. Should it be a palindromic number or not?\\n\\nNote: I believe the range of int is [-2147483648, 2147483647] and **\"-2147447412\"** is not overflowed, plus I handled the overflow cases already (test case \"-2147483648\" in particular).\\n\\n\\n11499 / 11502 test cases passed.\\n\\nStatus: Wrong Answer\\n\\n\\nInput:\\t-2147447412\\n\\nOutput:\\ttrue\\n\\nExpected:\\tfalse\\n\\n------------------------------------------------------------------\\nHere's my second question:\\n\\n**Why does the function take \"int\" as input instead of \"unsigned int\", when we assume all negative numbers are NOT palindromic.**"
                    },
                    {
                        "username": "rohanrambroo",
                        "content": "i think in your code you should do if x<0 return false because we can never accept -ve numbers"
                    },
                    {
                        "username": "mukulvagh11",
                        "content": "Input: x = -121\\nOutput: false\\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\\n\\n"
                    },
                    {
                        "username": "izzattulaev",
                        "content": "Input: -2147447412 and output must show \"false\" (in the description)\\n"
                    },
                    {
                        "username": "kojosimtema",
                        "content": "i believe all negative numbers are not palindrome because \"-\" is considered part of the number, and in the reverse you will get the \"-\"  at the end of the number. \\n\\nSo in this case \"-2147447412\"  will be \"2147447412-\"  in the reverse"
                    },
                    {
                        "username": "LMunique",
                        "content": "If it says O(1) space I can understand how to do that, but what does no \"extra space\" mean? If I use another integer to save the reversed number does it mean I'm still using extra space? Or when I simply am using an integer i for loop does it mean I have extra space?"
                    },
                    {
                        "username": "hp273",
                        "content": "O(1) does not mean extra space, it means the space you are using is independent of any other factor for example if you are using fixed size array then the size will not grow as i/p size grows."
                    },
                    {
                        "username": "blueshipswims",
                        "content": "by \\'extra space\\' what it means is that does the space required for all the cases change with case ? is the space required \\'variable\\' . If you reverse a number like 123 it yields 321 and this would consume the same memory when you reverse a number like 94729726 because both are integers BUT if you are using an array to store the digits and then reverse it or whatever then the memory required becomes variable because the individual digits have their own space in the array and thus costing EXTRA SPACE. Hope it helps. "
                    },
                    {
                        "username": "krishankanhaya_",
                        "content": "yes, i get your intension but O(1) due to this extra space which you needed for solving problem not grow as your input size varies that\\'s why it is O(1)."
                    },
                    {
                        "username": "haikeren61",
                        "content": "![image](https://assets.leetcode.com/users/images/e119a3a4-d25c-4396-b675-ad1ff971633f_1636894502.7062209.png)\\n"
                    },
                    {
                        "username": "CandyRobbery",
                        "content": "- Impossible to solve without extra space. Always need space for constants, variables or whatever. Recursion calls will take space for call stack.\\n\\n- If you are talking about constant space, then even declaring a string / stack will take constant space. (In fact at most (log(10, INT_MAX) * sizeof char), which is no worse than declaring an integer or more). Actually, even recursion will take constant space."
                    },
                    {
                        "username": "Sudheer474",
                        "content": "what the hell output is whats wrong with my code\\n   int rev=0;\\n        if(x<0){\\n            return false;\\n        }\\n        while(x!=0){\\n            rev= rev*10 + x%10;\\n            x=x/10;\\n        }\\n        if(x!=rev){\\n            return false;\\n        }\\n        return true;\\n\\nit gives wrong for 121 test case my output is false.."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "class Solution {\\n\\n        public boolean isPalindrome(int x) {\\n\\n    if (x < 0 || (x != 0 && x % 10 == 0)) {\\n        return false;\\n    }\\n\\n    int reversed = 0;\\n    int originalX = x;\\n\\n\\n    while (x > 0) {\\n        int digit = x % 10;\\n        reversed = reversed * 10 + digit;\\n        x /= 10;\\n    }\\n\\n\\n    return reversed == originalX;\\n}\\nUse this approach"
                    },
                    {
                        "username": "Hari_Seenu_7",
                        "content": "bro just omit last if and return statement then write return rev "
                    },
                    {
                        "username": "omprakash1353",
                        "content": "Bro you have changed the value of x then you tried to compare them it obviously goona return wrong ans"
                    },
                    {
                        "username": "biswassubhojit6831",
                        "content": "your rev val will be 121 and x will be \"0\" either change the code or start focusing more on every line to find the solution"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "a/c to your code \\nx is changing (i.e., in while loop) &\\nyou are comparing with x.\\nSo you\\'ve to just copy x with y\\nthen you\\'ve compare y with rev.\\nlike...\\n\\nint rev=0,y;\\ny=x;\\nif(x<0) return false;\\nwhile(x!=0){\\n       rev= rev*10 + x%10;\\n       x=x/10;\\n}\\nif(y != rev) return false;\\nreturn true;\\n\\nthanks :)"
                    },
                    {
                        "username": "ps_27",
                        "content": "acc to your code x is changing ....and you are comparing with x ."
                    },
                    {
                        "username": "Rishiraj_30",
                        "content": "just store the value of x before performing any operation x.\\n\\nint copy_of_x = x;\\nint rev=0;\\nif(x<0){\\nreturn false;\\n}\\nwhile(x!=0){\\nrev= rev*10 + x%10;\\nx=x/10;\\n}\\nif(copy_of_x !=rev){\\nreturn false;\\n}\\nreturn true;"
                    },
                    {
                        "username": "satyamgarg1308",
                        "content": "if(x<0) this is your problem , Program says the value of X can be negative or positive ."
                    },
                    {
                        "username": "MenaiAla",
                        "content": "[@sonu2231kumar](/sonu2231kumar) It does not work."
                    },
                    {
                        "username": "f_murshid_",
                        "content": "due to x is gradually decresing so first initialize temp variable and declear x in it and then compare rev and temp"
                    },
                    {
                        "username": "sonu2231kumar",
                        "content": "rev = (rev*10)+(x%10)\\nor \\nif(x==rev)\\n          true;\\nfalse;\\n"
                    },
                    {
                        "username": "harshitgaur600",
                        "content": "[@MayankRathore](/MayankRathore) x is changing in the loop as you did x=x/10. so try to make a temp variable to store x.\\n"
                    },
                    {
                        "username": "Bit-creatorCK",
                        "content": "[@MayankRathore](/MayankRathore) The Value of x changes in while loop and ends to 0 i.e. the condition of your while loop. To check whether it\\'s palindrome or not, you have to keep a copy of the value of x into another variable. \\n\\nJust think, if the value of x wasn\\'t changing in your while loop, then why did it not end up to infinite loop? Hope you got it now."
                    },
                    {
                        "username": "brahadeeshram",
                        "content": "last if condition has wrong condition and return statement also wrong "
                    },
                    {
                        "username": "HegdeRam",
                        "content": "keep original copy of X at initial step. int org = x;"
                    },
                    {
                        "username": "Sofiyan_M",
                        "content": "use temp to store value x . bcoz  x\\'s value changes through out the program from original one\\'s and use if(temp != rev)"
                    },
                    {
                        "username": "MayankRathore",
                        "content": " bool isPalindrome(int x) {\\n        long long int ans=0;\\n        while(x!=0)\\n        {\\n            int temp= x % 10;\\n           \\n            ans= (ans *10 )+ temp;\\n             x = x / 10;\\n        }\\n        if(ans==x){\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n\\nsame problem with my code also......."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    },
                    {
                        "username": "cherishlc",
                        "content": "If a number is a palindrome,,  its reverse equals itself.  \\nWhich means its reverse is NOT overflow!!!\\nSo that ' reversed integer might overflow'  doesn't matter at all, since a overlowed number isn't a palindrome.\\n\\n\\nNow the question becomes whether a NONE palindrome  == its reverse if we do NOT deal with overflow."
                    },
                    {
                        "username": "aivanilov",
                        "content": "Integer max = 2147483647 and Integer min = -2147483648. May be this is the case?"
                    },
                    {
                        "username": "run2explore99",
                        "content": "BEATS 97%\\n `class Solution {\\n    public boolean isPalindrome(int x) {\\n       int reverse=0;\\n        int temp = x;\\n\\n        if (x < 0) return false;\\n        while(temp != 0)   \\n        {  \\n        int remainder = temp % 10;  \\n        reverse = reverse * 10 + remainder;  \\n        temp = temp/10;  \\n        }  \\n        return reverse == x;\\n\\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1567692,
                "content": [
                    {
                        "username": "NowyKumara",
                        "content": "First convert x into string \\nx = str(x)\\nThen get reverse of x\\nn = x[::-1]\\nNow equate if they are palindrome then teh values must be same>\\nif x == n:\\n\\treturn True\\nelse:\\n\\treturn False.\\nThis is my first ever code that I wrote myself without any help and I am moved to tears right now seeing it compile\\nI am sorry but had to say it, thanks to the community for being there, it means a lot."
                    },
                    {
                        "username": "SivaKrishna-2002",
                        "content": "can you write in java \\n"
                    },
                    {
                        "username": "daliamukherjee216",
                        "content": "[@Moonbeam8773](/Moonbeam8773) i am getting the use of undeclared identifier \\'x_str\\' error. any solution?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Solution in java :\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}\\n"
                    },
                    {
                        "username": "jedi8380",
                        "content": "I feel you when you said without any help lol, it gives you a sense of relief from having imposter syndrome"
                    },
                    {
                        "username": "Moonbeam8773",
                        "content": "What you\\'re typing is essentially:\\nif True:\\n  return True\\nelse:\\n  return False\\n\\nJust do:\\nx_str = str(x)\\nreturn x_str == x_str[::-1]"
                    },
                    {
                        "username": "Aurof",
                        "content": "you didnt read the follow up, the real challenge is do it without converting the int to a string"
                    },
                    {
                        "username": "muvvalasairamakrishna",
                        "content": "i wrote the same but its giving an erroe\\n"
                    },
                    {
                        "username": "rellik",
                        "content": "I am wondering how the other people got their code ACed, the testing result of **\"-2147447412\"** seems a little odd to me. Should it be a palindromic number or not?\\n\\nNote: I believe the range of int is [-2147483648, 2147483647] and **\"-2147447412\"** is not overflowed, plus I handled the overflow cases already (test case \"-2147483648\" in particular).\\n\\n\\n11499 / 11502 test cases passed.\\n\\nStatus: Wrong Answer\\n\\n\\nInput:\\t-2147447412\\n\\nOutput:\\ttrue\\n\\nExpected:\\tfalse\\n\\n------------------------------------------------------------------\\nHere's my second question:\\n\\n**Why does the function take \"int\" as input instead of \"unsigned int\", when we assume all negative numbers are NOT palindromic.**"
                    },
                    {
                        "username": "rohanrambroo",
                        "content": "i think in your code you should do if x<0 return false because we can never accept -ve numbers"
                    },
                    {
                        "username": "mukulvagh11",
                        "content": "Input: x = -121\\nOutput: false\\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\\n\\n"
                    },
                    {
                        "username": "izzattulaev",
                        "content": "Input: -2147447412 and output must show \"false\" (in the description)\\n"
                    },
                    {
                        "username": "kojosimtema",
                        "content": "i believe all negative numbers are not palindrome because \"-\" is considered part of the number, and in the reverse you will get the \"-\"  at the end of the number. \\n\\nSo in this case \"-2147447412\"  will be \"2147447412-\"  in the reverse"
                    },
                    {
                        "username": "LMunique",
                        "content": "If it says O(1) space I can understand how to do that, but what does no \"extra space\" mean? If I use another integer to save the reversed number does it mean I'm still using extra space? Or when I simply am using an integer i for loop does it mean I have extra space?"
                    },
                    {
                        "username": "hp273",
                        "content": "O(1) does not mean extra space, it means the space you are using is independent of any other factor for example if you are using fixed size array then the size will not grow as i/p size grows."
                    },
                    {
                        "username": "blueshipswims",
                        "content": "by \\'extra space\\' what it means is that does the space required for all the cases change with case ? is the space required \\'variable\\' . If you reverse a number like 123 it yields 321 and this would consume the same memory when you reverse a number like 94729726 because both are integers BUT if you are using an array to store the digits and then reverse it or whatever then the memory required becomes variable because the individual digits have their own space in the array and thus costing EXTRA SPACE. Hope it helps. "
                    },
                    {
                        "username": "krishankanhaya_",
                        "content": "yes, i get your intension but O(1) due to this extra space which you needed for solving problem not grow as your input size varies that\\'s why it is O(1)."
                    },
                    {
                        "username": "haikeren61",
                        "content": "![image](https://assets.leetcode.com/users/images/e119a3a4-d25c-4396-b675-ad1ff971633f_1636894502.7062209.png)\\n"
                    },
                    {
                        "username": "CandyRobbery",
                        "content": "- Impossible to solve without extra space. Always need space for constants, variables or whatever. Recursion calls will take space for call stack.\\n\\n- If you are talking about constant space, then even declaring a string / stack will take constant space. (In fact at most (log(10, INT_MAX) * sizeof char), which is no worse than declaring an integer or more). Actually, even recursion will take constant space."
                    },
                    {
                        "username": "Sudheer474",
                        "content": "what the hell output is whats wrong with my code\\n   int rev=0;\\n        if(x<0){\\n            return false;\\n        }\\n        while(x!=0){\\n            rev= rev*10 + x%10;\\n            x=x/10;\\n        }\\n        if(x!=rev){\\n            return false;\\n        }\\n        return true;\\n\\nit gives wrong for 121 test case my output is false.."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "class Solution {\\n\\n        public boolean isPalindrome(int x) {\\n\\n    if (x < 0 || (x != 0 && x % 10 == 0)) {\\n        return false;\\n    }\\n\\n    int reversed = 0;\\n    int originalX = x;\\n\\n\\n    while (x > 0) {\\n        int digit = x % 10;\\n        reversed = reversed * 10 + digit;\\n        x /= 10;\\n    }\\n\\n\\n    return reversed == originalX;\\n}\\nUse this approach"
                    },
                    {
                        "username": "Hari_Seenu_7",
                        "content": "bro just omit last if and return statement then write return rev "
                    },
                    {
                        "username": "omprakash1353",
                        "content": "Bro you have changed the value of x then you tried to compare them it obviously goona return wrong ans"
                    },
                    {
                        "username": "biswassubhojit6831",
                        "content": "your rev val will be 121 and x will be \"0\" either change the code or start focusing more on every line to find the solution"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "a/c to your code \\nx is changing (i.e., in while loop) &\\nyou are comparing with x.\\nSo you\\'ve to just copy x with y\\nthen you\\'ve compare y with rev.\\nlike...\\n\\nint rev=0,y;\\ny=x;\\nif(x<0) return false;\\nwhile(x!=0){\\n       rev= rev*10 + x%10;\\n       x=x/10;\\n}\\nif(y != rev) return false;\\nreturn true;\\n\\nthanks :)"
                    },
                    {
                        "username": "ps_27",
                        "content": "acc to your code x is changing ....and you are comparing with x ."
                    },
                    {
                        "username": "Rishiraj_30",
                        "content": "just store the value of x before performing any operation x.\\n\\nint copy_of_x = x;\\nint rev=0;\\nif(x<0){\\nreturn false;\\n}\\nwhile(x!=0){\\nrev= rev*10 + x%10;\\nx=x/10;\\n}\\nif(copy_of_x !=rev){\\nreturn false;\\n}\\nreturn true;"
                    },
                    {
                        "username": "satyamgarg1308",
                        "content": "if(x<0) this is your problem , Program says the value of X can be negative or positive ."
                    },
                    {
                        "username": "MenaiAla",
                        "content": "[@sonu2231kumar](/sonu2231kumar) It does not work."
                    },
                    {
                        "username": "f_murshid_",
                        "content": "due to x is gradually decresing so first initialize temp variable and declear x in it and then compare rev and temp"
                    },
                    {
                        "username": "sonu2231kumar",
                        "content": "rev = (rev*10)+(x%10)\\nor \\nif(x==rev)\\n          true;\\nfalse;\\n"
                    },
                    {
                        "username": "harshitgaur600",
                        "content": "[@MayankRathore](/MayankRathore) x is changing in the loop as you did x=x/10. so try to make a temp variable to store x.\\n"
                    },
                    {
                        "username": "Bit-creatorCK",
                        "content": "[@MayankRathore](/MayankRathore) The Value of x changes in while loop and ends to 0 i.e. the condition of your while loop. To check whether it\\'s palindrome or not, you have to keep a copy of the value of x into another variable. \\n\\nJust think, if the value of x wasn\\'t changing in your while loop, then why did it not end up to infinite loop? Hope you got it now."
                    },
                    {
                        "username": "brahadeeshram",
                        "content": "last if condition has wrong condition and return statement also wrong "
                    },
                    {
                        "username": "HegdeRam",
                        "content": "keep original copy of X at initial step. int org = x;"
                    },
                    {
                        "username": "Sofiyan_M",
                        "content": "use temp to store value x . bcoz  x\\'s value changes through out the program from original one\\'s and use if(temp != rev)"
                    },
                    {
                        "username": "MayankRathore",
                        "content": " bool isPalindrome(int x) {\\n        long long int ans=0;\\n        while(x!=0)\\n        {\\n            int temp= x % 10;\\n           \\n            ans= (ans *10 )+ temp;\\n             x = x / 10;\\n        }\\n        if(ans==x){\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n\\nsame problem with my code also......."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    },
                    {
                        "username": "cherishlc",
                        "content": "If a number is a palindrome,,  its reverse equals itself.  \\nWhich means its reverse is NOT overflow!!!\\nSo that ' reversed integer might overflow'  doesn't matter at all, since a overlowed number isn't a palindrome.\\n\\n\\nNow the question becomes whether a NONE palindrome  == its reverse if we do NOT deal with overflow."
                    },
                    {
                        "username": "aivanilov",
                        "content": "Integer max = 2147483647 and Integer min = -2147483648. May be this is the case?"
                    },
                    {
                        "username": "run2explore99",
                        "content": "BEATS 97%\\n `class Solution {\\n    public boolean isPalindrome(int x) {\\n       int reverse=0;\\n        int temp = x;\\n\\n        if (x < 0) return false;\\n        while(temp != 0)   \\n        {  \\n        int remainder = temp % 10;  \\n        reverse = reverse * 10 + remainder;  \\n        temp = temp/10;  \\n        }  \\n        return reverse == x;\\n\\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1564646,
                "content": [
                    {
                        "username": "NowyKumara",
                        "content": "First convert x into string \\nx = str(x)\\nThen get reverse of x\\nn = x[::-1]\\nNow equate if they are palindrome then teh values must be same>\\nif x == n:\\n\\treturn True\\nelse:\\n\\treturn False.\\nThis is my first ever code that I wrote myself without any help and I am moved to tears right now seeing it compile\\nI am sorry but had to say it, thanks to the community for being there, it means a lot."
                    },
                    {
                        "username": "SivaKrishna-2002",
                        "content": "can you write in java \\n"
                    },
                    {
                        "username": "daliamukherjee216",
                        "content": "[@Moonbeam8773](/Moonbeam8773) i am getting the use of undeclared identifier \\'x_str\\' error. any solution?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Solution in java :\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}\\n"
                    },
                    {
                        "username": "jedi8380",
                        "content": "I feel you when you said without any help lol, it gives you a sense of relief from having imposter syndrome"
                    },
                    {
                        "username": "Moonbeam8773",
                        "content": "What you\\'re typing is essentially:\\nif True:\\n  return True\\nelse:\\n  return False\\n\\nJust do:\\nx_str = str(x)\\nreturn x_str == x_str[::-1]"
                    },
                    {
                        "username": "Aurof",
                        "content": "you didnt read the follow up, the real challenge is do it without converting the int to a string"
                    },
                    {
                        "username": "muvvalasairamakrishna",
                        "content": "i wrote the same but its giving an erroe\\n"
                    },
                    {
                        "username": "rellik",
                        "content": "I am wondering how the other people got their code ACed, the testing result of **\"-2147447412\"** seems a little odd to me. Should it be a palindromic number or not?\\n\\nNote: I believe the range of int is [-2147483648, 2147483647] and **\"-2147447412\"** is not overflowed, plus I handled the overflow cases already (test case \"-2147483648\" in particular).\\n\\n\\n11499 / 11502 test cases passed.\\n\\nStatus: Wrong Answer\\n\\n\\nInput:\\t-2147447412\\n\\nOutput:\\ttrue\\n\\nExpected:\\tfalse\\n\\n------------------------------------------------------------------\\nHere's my second question:\\n\\n**Why does the function take \"int\" as input instead of \"unsigned int\", when we assume all negative numbers are NOT palindromic.**"
                    },
                    {
                        "username": "rohanrambroo",
                        "content": "i think in your code you should do if x<0 return false because we can never accept -ve numbers"
                    },
                    {
                        "username": "mukulvagh11",
                        "content": "Input: x = -121\\nOutput: false\\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\\n\\n"
                    },
                    {
                        "username": "izzattulaev",
                        "content": "Input: -2147447412 and output must show \"false\" (in the description)\\n"
                    },
                    {
                        "username": "kojosimtema",
                        "content": "i believe all negative numbers are not palindrome because \"-\" is considered part of the number, and in the reverse you will get the \"-\"  at the end of the number. \\n\\nSo in this case \"-2147447412\"  will be \"2147447412-\"  in the reverse"
                    },
                    {
                        "username": "LMunique",
                        "content": "If it says O(1) space I can understand how to do that, but what does no \"extra space\" mean? If I use another integer to save the reversed number does it mean I'm still using extra space? Or when I simply am using an integer i for loop does it mean I have extra space?"
                    },
                    {
                        "username": "hp273",
                        "content": "O(1) does not mean extra space, it means the space you are using is independent of any other factor for example if you are using fixed size array then the size will not grow as i/p size grows."
                    },
                    {
                        "username": "blueshipswims",
                        "content": "by \\'extra space\\' what it means is that does the space required for all the cases change with case ? is the space required \\'variable\\' . If you reverse a number like 123 it yields 321 and this would consume the same memory when you reverse a number like 94729726 because both are integers BUT if you are using an array to store the digits and then reverse it or whatever then the memory required becomes variable because the individual digits have their own space in the array and thus costing EXTRA SPACE. Hope it helps. "
                    },
                    {
                        "username": "krishankanhaya_",
                        "content": "yes, i get your intension but O(1) due to this extra space which you needed for solving problem not grow as your input size varies that\\'s why it is O(1)."
                    },
                    {
                        "username": "haikeren61",
                        "content": "![image](https://assets.leetcode.com/users/images/e119a3a4-d25c-4396-b675-ad1ff971633f_1636894502.7062209.png)\\n"
                    },
                    {
                        "username": "CandyRobbery",
                        "content": "- Impossible to solve without extra space. Always need space for constants, variables or whatever. Recursion calls will take space for call stack.\\n\\n- If you are talking about constant space, then even declaring a string / stack will take constant space. (In fact at most (log(10, INT_MAX) * sizeof char), which is no worse than declaring an integer or more). Actually, even recursion will take constant space."
                    },
                    {
                        "username": "Sudheer474",
                        "content": "what the hell output is whats wrong with my code\\n   int rev=0;\\n        if(x<0){\\n            return false;\\n        }\\n        while(x!=0){\\n            rev= rev*10 + x%10;\\n            x=x/10;\\n        }\\n        if(x!=rev){\\n            return false;\\n        }\\n        return true;\\n\\nit gives wrong for 121 test case my output is false.."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "class Solution {\\n\\n        public boolean isPalindrome(int x) {\\n\\n    if (x < 0 || (x != 0 && x % 10 == 0)) {\\n        return false;\\n    }\\n\\n    int reversed = 0;\\n    int originalX = x;\\n\\n\\n    while (x > 0) {\\n        int digit = x % 10;\\n        reversed = reversed * 10 + digit;\\n        x /= 10;\\n    }\\n\\n\\n    return reversed == originalX;\\n}\\nUse this approach"
                    },
                    {
                        "username": "Hari_Seenu_7",
                        "content": "bro just omit last if and return statement then write return rev "
                    },
                    {
                        "username": "omprakash1353",
                        "content": "Bro you have changed the value of x then you tried to compare them it obviously goona return wrong ans"
                    },
                    {
                        "username": "biswassubhojit6831",
                        "content": "your rev val will be 121 and x will be \"0\" either change the code or start focusing more on every line to find the solution"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "a/c to your code \\nx is changing (i.e., in while loop) &\\nyou are comparing with x.\\nSo you\\'ve to just copy x with y\\nthen you\\'ve compare y with rev.\\nlike...\\n\\nint rev=0,y;\\ny=x;\\nif(x<0) return false;\\nwhile(x!=0){\\n       rev= rev*10 + x%10;\\n       x=x/10;\\n}\\nif(y != rev) return false;\\nreturn true;\\n\\nthanks :)"
                    },
                    {
                        "username": "ps_27",
                        "content": "acc to your code x is changing ....and you are comparing with x ."
                    },
                    {
                        "username": "Rishiraj_30",
                        "content": "just store the value of x before performing any operation x.\\n\\nint copy_of_x = x;\\nint rev=0;\\nif(x<0){\\nreturn false;\\n}\\nwhile(x!=0){\\nrev= rev*10 + x%10;\\nx=x/10;\\n}\\nif(copy_of_x !=rev){\\nreturn false;\\n}\\nreturn true;"
                    },
                    {
                        "username": "satyamgarg1308",
                        "content": "if(x<0) this is your problem , Program says the value of X can be negative or positive ."
                    },
                    {
                        "username": "MenaiAla",
                        "content": "[@sonu2231kumar](/sonu2231kumar) It does not work."
                    },
                    {
                        "username": "f_murshid_",
                        "content": "due to x is gradually decresing so first initialize temp variable and declear x in it and then compare rev and temp"
                    },
                    {
                        "username": "sonu2231kumar",
                        "content": "rev = (rev*10)+(x%10)\\nor \\nif(x==rev)\\n          true;\\nfalse;\\n"
                    },
                    {
                        "username": "harshitgaur600",
                        "content": "[@MayankRathore](/MayankRathore) x is changing in the loop as you did x=x/10. so try to make a temp variable to store x.\\n"
                    },
                    {
                        "username": "Bit-creatorCK",
                        "content": "[@MayankRathore](/MayankRathore) The Value of x changes in while loop and ends to 0 i.e. the condition of your while loop. To check whether it\\'s palindrome or not, you have to keep a copy of the value of x into another variable. \\n\\nJust think, if the value of x wasn\\'t changing in your while loop, then why did it not end up to infinite loop? Hope you got it now."
                    },
                    {
                        "username": "brahadeeshram",
                        "content": "last if condition has wrong condition and return statement also wrong "
                    },
                    {
                        "username": "HegdeRam",
                        "content": "keep original copy of X at initial step. int org = x;"
                    },
                    {
                        "username": "Sofiyan_M",
                        "content": "use temp to store value x . bcoz  x\\'s value changes through out the program from original one\\'s and use if(temp != rev)"
                    },
                    {
                        "username": "MayankRathore",
                        "content": " bool isPalindrome(int x) {\\n        long long int ans=0;\\n        while(x!=0)\\n        {\\n            int temp= x % 10;\\n           \\n            ans= (ans *10 )+ temp;\\n             x = x / 10;\\n        }\\n        if(ans==x){\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n\\nsame problem with my code also......."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    },
                    {
                        "username": "cherishlc",
                        "content": "If a number is a palindrome,,  its reverse equals itself.  \\nWhich means its reverse is NOT overflow!!!\\nSo that ' reversed integer might overflow'  doesn't matter at all, since a overlowed number isn't a palindrome.\\n\\n\\nNow the question becomes whether a NONE palindrome  == its reverse if we do NOT deal with overflow."
                    },
                    {
                        "username": "aivanilov",
                        "content": "Integer max = 2147483647 and Integer min = -2147483648. May be this is the case?"
                    },
                    {
                        "username": "run2explore99",
                        "content": "BEATS 97%\\n `class Solution {\\n    public boolean isPalindrome(int x) {\\n       int reverse=0;\\n        int temp = x;\\n\\n        if (x < 0) return false;\\n        while(temp != 0)   \\n        {  \\n        int remainder = temp % 10;  \\n        reverse = reverse * 10 + remainder;  \\n        temp = temp/10;  \\n        }  \\n        return reverse == x;\\n\\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1711906,
                "content": [
                    {
                        "username": "NowyKumara",
                        "content": "First convert x into string \\nx = str(x)\\nThen get reverse of x\\nn = x[::-1]\\nNow equate if they are palindrome then teh values must be same>\\nif x == n:\\n\\treturn True\\nelse:\\n\\treturn False.\\nThis is my first ever code that I wrote myself without any help and I am moved to tears right now seeing it compile\\nI am sorry but had to say it, thanks to the community for being there, it means a lot."
                    },
                    {
                        "username": "SivaKrishna-2002",
                        "content": "can you write in java \\n"
                    },
                    {
                        "username": "daliamukherjee216",
                        "content": "[@Moonbeam8773](/Moonbeam8773) i am getting the use of undeclared identifier \\'x_str\\' error. any solution?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Solution in java :\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}\\n"
                    },
                    {
                        "username": "jedi8380",
                        "content": "I feel you when you said without any help lol, it gives you a sense of relief from having imposter syndrome"
                    },
                    {
                        "username": "Moonbeam8773",
                        "content": "What you\\'re typing is essentially:\\nif True:\\n  return True\\nelse:\\n  return False\\n\\nJust do:\\nx_str = str(x)\\nreturn x_str == x_str[::-1]"
                    },
                    {
                        "username": "Aurof",
                        "content": "you didnt read the follow up, the real challenge is do it without converting the int to a string"
                    },
                    {
                        "username": "muvvalasairamakrishna",
                        "content": "i wrote the same but its giving an erroe\\n"
                    },
                    {
                        "username": "rellik",
                        "content": "I am wondering how the other people got their code ACed, the testing result of **\"-2147447412\"** seems a little odd to me. Should it be a palindromic number or not?\\n\\nNote: I believe the range of int is [-2147483648, 2147483647] and **\"-2147447412\"** is not overflowed, plus I handled the overflow cases already (test case \"-2147483648\" in particular).\\n\\n\\n11499 / 11502 test cases passed.\\n\\nStatus: Wrong Answer\\n\\n\\nInput:\\t-2147447412\\n\\nOutput:\\ttrue\\n\\nExpected:\\tfalse\\n\\n------------------------------------------------------------------\\nHere's my second question:\\n\\n**Why does the function take \"int\" as input instead of \"unsigned int\", when we assume all negative numbers are NOT palindromic.**"
                    },
                    {
                        "username": "rohanrambroo",
                        "content": "i think in your code you should do if x<0 return false because we can never accept -ve numbers"
                    },
                    {
                        "username": "mukulvagh11",
                        "content": "Input: x = -121\\nOutput: false\\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\\n\\n"
                    },
                    {
                        "username": "izzattulaev",
                        "content": "Input: -2147447412 and output must show \"false\" (in the description)\\n"
                    },
                    {
                        "username": "kojosimtema",
                        "content": "i believe all negative numbers are not palindrome because \"-\" is considered part of the number, and in the reverse you will get the \"-\"  at the end of the number. \\n\\nSo in this case \"-2147447412\"  will be \"2147447412-\"  in the reverse"
                    },
                    {
                        "username": "LMunique",
                        "content": "If it says O(1) space I can understand how to do that, but what does no \"extra space\" mean? If I use another integer to save the reversed number does it mean I'm still using extra space? Or when I simply am using an integer i for loop does it mean I have extra space?"
                    },
                    {
                        "username": "hp273",
                        "content": "O(1) does not mean extra space, it means the space you are using is independent of any other factor for example if you are using fixed size array then the size will not grow as i/p size grows."
                    },
                    {
                        "username": "blueshipswims",
                        "content": "by \\'extra space\\' what it means is that does the space required for all the cases change with case ? is the space required \\'variable\\' . If you reverse a number like 123 it yields 321 and this would consume the same memory when you reverse a number like 94729726 because both are integers BUT if you are using an array to store the digits and then reverse it or whatever then the memory required becomes variable because the individual digits have their own space in the array and thus costing EXTRA SPACE. Hope it helps. "
                    },
                    {
                        "username": "krishankanhaya_",
                        "content": "yes, i get your intension but O(1) due to this extra space which you needed for solving problem not grow as your input size varies that\\'s why it is O(1)."
                    },
                    {
                        "username": "haikeren61",
                        "content": "![image](https://assets.leetcode.com/users/images/e119a3a4-d25c-4396-b675-ad1ff971633f_1636894502.7062209.png)\\n"
                    },
                    {
                        "username": "CandyRobbery",
                        "content": "- Impossible to solve without extra space. Always need space for constants, variables or whatever. Recursion calls will take space for call stack.\\n\\n- If you are talking about constant space, then even declaring a string / stack will take constant space. (In fact at most (log(10, INT_MAX) * sizeof char), which is no worse than declaring an integer or more). Actually, even recursion will take constant space."
                    },
                    {
                        "username": "Sudheer474",
                        "content": "what the hell output is whats wrong with my code\\n   int rev=0;\\n        if(x<0){\\n            return false;\\n        }\\n        while(x!=0){\\n            rev= rev*10 + x%10;\\n            x=x/10;\\n        }\\n        if(x!=rev){\\n            return false;\\n        }\\n        return true;\\n\\nit gives wrong for 121 test case my output is false.."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "class Solution {\\n\\n        public boolean isPalindrome(int x) {\\n\\n    if (x < 0 || (x != 0 && x % 10 == 0)) {\\n        return false;\\n    }\\n\\n    int reversed = 0;\\n    int originalX = x;\\n\\n\\n    while (x > 0) {\\n        int digit = x % 10;\\n        reversed = reversed * 10 + digit;\\n        x /= 10;\\n    }\\n\\n\\n    return reversed == originalX;\\n}\\nUse this approach"
                    },
                    {
                        "username": "Hari_Seenu_7",
                        "content": "bro just omit last if and return statement then write return rev "
                    },
                    {
                        "username": "omprakash1353",
                        "content": "Bro you have changed the value of x then you tried to compare them it obviously goona return wrong ans"
                    },
                    {
                        "username": "biswassubhojit6831",
                        "content": "your rev val will be 121 and x will be \"0\" either change the code or start focusing more on every line to find the solution"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "a/c to your code \\nx is changing (i.e., in while loop) &\\nyou are comparing with x.\\nSo you\\'ve to just copy x with y\\nthen you\\'ve compare y with rev.\\nlike...\\n\\nint rev=0,y;\\ny=x;\\nif(x<0) return false;\\nwhile(x!=0){\\n       rev= rev*10 + x%10;\\n       x=x/10;\\n}\\nif(y != rev) return false;\\nreturn true;\\n\\nthanks :)"
                    },
                    {
                        "username": "ps_27",
                        "content": "acc to your code x is changing ....and you are comparing with x ."
                    },
                    {
                        "username": "Rishiraj_30",
                        "content": "just store the value of x before performing any operation x.\\n\\nint copy_of_x = x;\\nint rev=0;\\nif(x<0){\\nreturn false;\\n}\\nwhile(x!=0){\\nrev= rev*10 + x%10;\\nx=x/10;\\n}\\nif(copy_of_x !=rev){\\nreturn false;\\n}\\nreturn true;"
                    },
                    {
                        "username": "satyamgarg1308",
                        "content": "if(x<0) this is your problem , Program says the value of X can be negative or positive ."
                    },
                    {
                        "username": "MenaiAla",
                        "content": "[@sonu2231kumar](/sonu2231kumar) It does not work."
                    },
                    {
                        "username": "f_murshid_",
                        "content": "due to x is gradually decresing so first initialize temp variable and declear x in it and then compare rev and temp"
                    },
                    {
                        "username": "sonu2231kumar",
                        "content": "rev = (rev*10)+(x%10)\\nor \\nif(x==rev)\\n          true;\\nfalse;\\n"
                    },
                    {
                        "username": "harshitgaur600",
                        "content": "[@MayankRathore](/MayankRathore) x is changing in the loop as you did x=x/10. so try to make a temp variable to store x.\\n"
                    },
                    {
                        "username": "Bit-creatorCK",
                        "content": "[@MayankRathore](/MayankRathore) The Value of x changes in while loop and ends to 0 i.e. the condition of your while loop. To check whether it\\'s palindrome or not, you have to keep a copy of the value of x into another variable. \\n\\nJust think, if the value of x wasn\\'t changing in your while loop, then why did it not end up to infinite loop? Hope you got it now."
                    },
                    {
                        "username": "brahadeeshram",
                        "content": "last if condition has wrong condition and return statement also wrong "
                    },
                    {
                        "username": "HegdeRam",
                        "content": "keep original copy of X at initial step. int org = x;"
                    },
                    {
                        "username": "Sofiyan_M",
                        "content": "use temp to store value x . bcoz  x\\'s value changes through out the program from original one\\'s and use if(temp != rev)"
                    },
                    {
                        "username": "MayankRathore",
                        "content": " bool isPalindrome(int x) {\\n        long long int ans=0;\\n        while(x!=0)\\n        {\\n            int temp= x % 10;\\n           \\n            ans= (ans *10 )+ temp;\\n             x = x / 10;\\n        }\\n        if(ans==x){\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n\\nsame problem with my code also......."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    },
                    {
                        "username": "cherishlc",
                        "content": "If a number is a palindrome,,  its reverse equals itself.  \\nWhich means its reverse is NOT overflow!!!\\nSo that ' reversed integer might overflow'  doesn't matter at all, since a overlowed number isn't a palindrome.\\n\\n\\nNow the question becomes whether a NONE palindrome  == its reverse if we do NOT deal with overflow."
                    },
                    {
                        "username": "aivanilov",
                        "content": "Integer max = 2147483647 and Integer min = -2147483648. May be this is the case?"
                    },
                    {
                        "username": "run2explore99",
                        "content": "BEATS 97%\\n `class Solution {\\n    public boolean isPalindrome(int x) {\\n       int reverse=0;\\n        int temp = x;\\n\\n        if (x < 0) return false;\\n        while(temp != 0)   \\n        {  \\n        int remainder = temp % 10;  \\n        reverse = reverse * 10 + remainder;  \\n        temp = temp/10;  \\n        }  \\n        return reverse == x;\\n\\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1565275,
                "content": [
                    {
                        "username": "NowyKumara",
                        "content": "First convert x into string \\nx = str(x)\\nThen get reverse of x\\nn = x[::-1]\\nNow equate if they are palindrome then teh values must be same>\\nif x == n:\\n\\treturn True\\nelse:\\n\\treturn False.\\nThis is my first ever code that I wrote myself without any help and I am moved to tears right now seeing it compile\\nI am sorry but had to say it, thanks to the community for being there, it means a lot."
                    },
                    {
                        "username": "SivaKrishna-2002",
                        "content": "can you write in java \\n"
                    },
                    {
                        "username": "daliamukherjee216",
                        "content": "[@Moonbeam8773](/Moonbeam8773) i am getting the use of undeclared identifier \\'x_str\\' error. any solution?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Solution in java :\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}\\n"
                    },
                    {
                        "username": "jedi8380",
                        "content": "I feel you when you said without any help lol, it gives you a sense of relief from having imposter syndrome"
                    },
                    {
                        "username": "Moonbeam8773",
                        "content": "What you\\'re typing is essentially:\\nif True:\\n  return True\\nelse:\\n  return False\\n\\nJust do:\\nx_str = str(x)\\nreturn x_str == x_str[::-1]"
                    },
                    {
                        "username": "Aurof",
                        "content": "you didnt read the follow up, the real challenge is do it without converting the int to a string"
                    },
                    {
                        "username": "muvvalasairamakrishna",
                        "content": "i wrote the same but its giving an erroe\\n"
                    },
                    {
                        "username": "rellik",
                        "content": "I am wondering how the other people got their code ACed, the testing result of **\"-2147447412\"** seems a little odd to me. Should it be a palindromic number or not?\\n\\nNote: I believe the range of int is [-2147483648, 2147483647] and **\"-2147447412\"** is not overflowed, plus I handled the overflow cases already (test case \"-2147483648\" in particular).\\n\\n\\n11499 / 11502 test cases passed.\\n\\nStatus: Wrong Answer\\n\\n\\nInput:\\t-2147447412\\n\\nOutput:\\ttrue\\n\\nExpected:\\tfalse\\n\\n------------------------------------------------------------------\\nHere's my second question:\\n\\n**Why does the function take \"int\" as input instead of \"unsigned int\", when we assume all negative numbers are NOT palindromic.**"
                    },
                    {
                        "username": "rohanrambroo",
                        "content": "i think in your code you should do if x<0 return false because we can never accept -ve numbers"
                    },
                    {
                        "username": "mukulvagh11",
                        "content": "Input: x = -121\\nOutput: false\\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\\n\\n"
                    },
                    {
                        "username": "izzattulaev",
                        "content": "Input: -2147447412 and output must show \"false\" (in the description)\\n"
                    },
                    {
                        "username": "kojosimtema",
                        "content": "i believe all negative numbers are not palindrome because \"-\" is considered part of the number, and in the reverse you will get the \"-\"  at the end of the number. \\n\\nSo in this case \"-2147447412\"  will be \"2147447412-\"  in the reverse"
                    },
                    {
                        "username": "LMunique",
                        "content": "If it says O(1) space I can understand how to do that, but what does no \"extra space\" mean? If I use another integer to save the reversed number does it mean I'm still using extra space? Or when I simply am using an integer i for loop does it mean I have extra space?"
                    },
                    {
                        "username": "hp273",
                        "content": "O(1) does not mean extra space, it means the space you are using is independent of any other factor for example if you are using fixed size array then the size will not grow as i/p size grows."
                    },
                    {
                        "username": "blueshipswims",
                        "content": "by \\'extra space\\' what it means is that does the space required for all the cases change with case ? is the space required \\'variable\\' . If you reverse a number like 123 it yields 321 and this would consume the same memory when you reverse a number like 94729726 because both are integers BUT if you are using an array to store the digits and then reverse it or whatever then the memory required becomes variable because the individual digits have their own space in the array and thus costing EXTRA SPACE. Hope it helps. "
                    },
                    {
                        "username": "krishankanhaya_",
                        "content": "yes, i get your intension but O(1) due to this extra space which you needed for solving problem not grow as your input size varies that\\'s why it is O(1)."
                    },
                    {
                        "username": "haikeren61",
                        "content": "![image](https://assets.leetcode.com/users/images/e119a3a4-d25c-4396-b675-ad1ff971633f_1636894502.7062209.png)\\n"
                    },
                    {
                        "username": "CandyRobbery",
                        "content": "- Impossible to solve without extra space. Always need space for constants, variables or whatever. Recursion calls will take space for call stack.\\n\\n- If you are talking about constant space, then even declaring a string / stack will take constant space. (In fact at most (log(10, INT_MAX) * sizeof char), which is no worse than declaring an integer or more). Actually, even recursion will take constant space."
                    },
                    {
                        "username": "Sudheer474",
                        "content": "what the hell output is whats wrong with my code\\n   int rev=0;\\n        if(x<0){\\n            return false;\\n        }\\n        while(x!=0){\\n            rev= rev*10 + x%10;\\n            x=x/10;\\n        }\\n        if(x!=rev){\\n            return false;\\n        }\\n        return true;\\n\\nit gives wrong for 121 test case my output is false.."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "class Solution {\\n\\n        public boolean isPalindrome(int x) {\\n\\n    if (x < 0 || (x != 0 && x % 10 == 0)) {\\n        return false;\\n    }\\n\\n    int reversed = 0;\\n    int originalX = x;\\n\\n\\n    while (x > 0) {\\n        int digit = x % 10;\\n        reversed = reversed * 10 + digit;\\n        x /= 10;\\n    }\\n\\n\\n    return reversed == originalX;\\n}\\nUse this approach"
                    },
                    {
                        "username": "Hari_Seenu_7",
                        "content": "bro just omit last if and return statement then write return rev "
                    },
                    {
                        "username": "omprakash1353",
                        "content": "Bro you have changed the value of x then you tried to compare them it obviously goona return wrong ans"
                    },
                    {
                        "username": "biswassubhojit6831",
                        "content": "your rev val will be 121 and x will be \"0\" either change the code or start focusing more on every line to find the solution"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "a/c to your code \\nx is changing (i.e., in while loop) &\\nyou are comparing with x.\\nSo you\\'ve to just copy x with y\\nthen you\\'ve compare y with rev.\\nlike...\\n\\nint rev=0,y;\\ny=x;\\nif(x<0) return false;\\nwhile(x!=0){\\n       rev= rev*10 + x%10;\\n       x=x/10;\\n}\\nif(y != rev) return false;\\nreturn true;\\n\\nthanks :)"
                    },
                    {
                        "username": "ps_27",
                        "content": "acc to your code x is changing ....and you are comparing with x ."
                    },
                    {
                        "username": "Rishiraj_30",
                        "content": "just store the value of x before performing any operation x.\\n\\nint copy_of_x = x;\\nint rev=0;\\nif(x<0){\\nreturn false;\\n}\\nwhile(x!=0){\\nrev= rev*10 + x%10;\\nx=x/10;\\n}\\nif(copy_of_x !=rev){\\nreturn false;\\n}\\nreturn true;"
                    },
                    {
                        "username": "satyamgarg1308",
                        "content": "if(x<0) this is your problem , Program says the value of X can be negative or positive ."
                    },
                    {
                        "username": "MenaiAla",
                        "content": "[@sonu2231kumar](/sonu2231kumar) It does not work."
                    },
                    {
                        "username": "f_murshid_",
                        "content": "due to x is gradually decresing so first initialize temp variable and declear x in it and then compare rev and temp"
                    },
                    {
                        "username": "sonu2231kumar",
                        "content": "rev = (rev*10)+(x%10)\\nor \\nif(x==rev)\\n          true;\\nfalse;\\n"
                    },
                    {
                        "username": "harshitgaur600",
                        "content": "[@MayankRathore](/MayankRathore) x is changing in the loop as you did x=x/10. so try to make a temp variable to store x.\\n"
                    },
                    {
                        "username": "Bit-creatorCK",
                        "content": "[@MayankRathore](/MayankRathore) The Value of x changes in while loop and ends to 0 i.e. the condition of your while loop. To check whether it\\'s palindrome or not, you have to keep a copy of the value of x into another variable. \\n\\nJust think, if the value of x wasn\\'t changing in your while loop, then why did it not end up to infinite loop? Hope you got it now."
                    },
                    {
                        "username": "brahadeeshram",
                        "content": "last if condition has wrong condition and return statement also wrong "
                    },
                    {
                        "username": "HegdeRam",
                        "content": "keep original copy of X at initial step. int org = x;"
                    },
                    {
                        "username": "Sofiyan_M",
                        "content": "use temp to store value x . bcoz  x\\'s value changes through out the program from original one\\'s and use if(temp != rev)"
                    },
                    {
                        "username": "MayankRathore",
                        "content": " bool isPalindrome(int x) {\\n        long long int ans=0;\\n        while(x!=0)\\n        {\\n            int temp= x % 10;\\n           \\n            ans= (ans *10 )+ temp;\\n             x = x / 10;\\n        }\\n        if(ans==x){\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n\\nsame problem with my code also......."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    },
                    {
                        "username": "cherishlc",
                        "content": "If a number is a palindrome,,  its reverse equals itself.  \\nWhich means its reverse is NOT overflow!!!\\nSo that ' reversed integer might overflow'  doesn't matter at all, since a overlowed number isn't a palindrome.\\n\\n\\nNow the question becomes whether a NONE palindrome  == its reverse if we do NOT deal with overflow."
                    },
                    {
                        "username": "aivanilov",
                        "content": "Integer max = 2147483647 and Integer min = -2147483648. May be this is the case?"
                    },
                    {
                        "username": "run2explore99",
                        "content": "BEATS 97%\\n `class Solution {\\n    public boolean isPalindrome(int x) {\\n       int reverse=0;\\n        int temp = x;\\n\\n        if (x < 0) return false;\\n        while(temp != 0)   \\n        {  \\n        int remainder = temp % 10;  \\n        reverse = reverse * 10 + remainder;  \\n        temp = temp/10;  \\n        }  \\n        return reverse == x;\\n\\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1566467,
                "content": [
                    {
                        "username": "NowyKumara",
                        "content": "First convert x into string \\nx = str(x)\\nThen get reverse of x\\nn = x[::-1]\\nNow equate if they are palindrome then teh values must be same>\\nif x == n:\\n\\treturn True\\nelse:\\n\\treturn False.\\nThis is my first ever code that I wrote myself without any help and I am moved to tears right now seeing it compile\\nI am sorry but had to say it, thanks to the community for being there, it means a lot."
                    },
                    {
                        "username": "SivaKrishna-2002",
                        "content": "can you write in java \\n"
                    },
                    {
                        "username": "daliamukherjee216",
                        "content": "[@Moonbeam8773](/Moonbeam8773) i am getting the use of undeclared identifier \\'x_str\\' error. any solution?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Solution in java :\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}\\n"
                    },
                    {
                        "username": "jedi8380",
                        "content": "I feel you when you said without any help lol, it gives you a sense of relief from having imposter syndrome"
                    },
                    {
                        "username": "Moonbeam8773",
                        "content": "What you\\'re typing is essentially:\\nif True:\\n  return True\\nelse:\\n  return False\\n\\nJust do:\\nx_str = str(x)\\nreturn x_str == x_str[::-1]"
                    },
                    {
                        "username": "Aurof",
                        "content": "you didnt read the follow up, the real challenge is do it without converting the int to a string"
                    },
                    {
                        "username": "muvvalasairamakrishna",
                        "content": "i wrote the same but its giving an erroe\\n"
                    },
                    {
                        "username": "rellik",
                        "content": "I am wondering how the other people got their code ACed, the testing result of **\"-2147447412\"** seems a little odd to me. Should it be a palindromic number or not?\\n\\nNote: I believe the range of int is [-2147483648, 2147483647] and **\"-2147447412\"** is not overflowed, plus I handled the overflow cases already (test case \"-2147483648\" in particular).\\n\\n\\n11499 / 11502 test cases passed.\\n\\nStatus: Wrong Answer\\n\\n\\nInput:\\t-2147447412\\n\\nOutput:\\ttrue\\n\\nExpected:\\tfalse\\n\\n------------------------------------------------------------------\\nHere's my second question:\\n\\n**Why does the function take \"int\" as input instead of \"unsigned int\", when we assume all negative numbers are NOT palindromic.**"
                    },
                    {
                        "username": "rohanrambroo",
                        "content": "i think in your code you should do if x<0 return false because we can never accept -ve numbers"
                    },
                    {
                        "username": "mukulvagh11",
                        "content": "Input: x = -121\\nOutput: false\\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\\n\\n"
                    },
                    {
                        "username": "izzattulaev",
                        "content": "Input: -2147447412 and output must show \"false\" (in the description)\\n"
                    },
                    {
                        "username": "kojosimtema",
                        "content": "i believe all negative numbers are not palindrome because \"-\" is considered part of the number, and in the reverse you will get the \"-\"  at the end of the number. \\n\\nSo in this case \"-2147447412\"  will be \"2147447412-\"  in the reverse"
                    },
                    {
                        "username": "LMunique",
                        "content": "If it says O(1) space I can understand how to do that, but what does no \"extra space\" mean? If I use another integer to save the reversed number does it mean I'm still using extra space? Or when I simply am using an integer i for loop does it mean I have extra space?"
                    },
                    {
                        "username": "hp273",
                        "content": "O(1) does not mean extra space, it means the space you are using is independent of any other factor for example if you are using fixed size array then the size will not grow as i/p size grows."
                    },
                    {
                        "username": "blueshipswims",
                        "content": "by \\'extra space\\' what it means is that does the space required for all the cases change with case ? is the space required \\'variable\\' . If you reverse a number like 123 it yields 321 and this would consume the same memory when you reverse a number like 94729726 because both are integers BUT if you are using an array to store the digits and then reverse it or whatever then the memory required becomes variable because the individual digits have their own space in the array and thus costing EXTRA SPACE. Hope it helps. "
                    },
                    {
                        "username": "krishankanhaya_",
                        "content": "yes, i get your intension but O(1) due to this extra space which you needed for solving problem not grow as your input size varies that\\'s why it is O(1)."
                    },
                    {
                        "username": "haikeren61",
                        "content": "![image](https://assets.leetcode.com/users/images/e119a3a4-d25c-4396-b675-ad1ff971633f_1636894502.7062209.png)\\n"
                    },
                    {
                        "username": "CandyRobbery",
                        "content": "- Impossible to solve without extra space. Always need space for constants, variables or whatever. Recursion calls will take space for call stack.\\n\\n- If you are talking about constant space, then even declaring a string / stack will take constant space. (In fact at most (log(10, INT_MAX) * sizeof char), which is no worse than declaring an integer or more). Actually, even recursion will take constant space."
                    },
                    {
                        "username": "Sudheer474",
                        "content": "what the hell output is whats wrong with my code\\n   int rev=0;\\n        if(x<0){\\n            return false;\\n        }\\n        while(x!=0){\\n            rev= rev*10 + x%10;\\n            x=x/10;\\n        }\\n        if(x!=rev){\\n            return false;\\n        }\\n        return true;\\n\\nit gives wrong for 121 test case my output is false.."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "class Solution {\\n\\n        public boolean isPalindrome(int x) {\\n\\n    if (x < 0 || (x != 0 && x % 10 == 0)) {\\n        return false;\\n    }\\n\\n    int reversed = 0;\\n    int originalX = x;\\n\\n\\n    while (x > 0) {\\n        int digit = x % 10;\\n        reversed = reversed * 10 + digit;\\n        x /= 10;\\n    }\\n\\n\\n    return reversed == originalX;\\n}\\nUse this approach"
                    },
                    {
                        "username": "Hari_Seenu_7",
                        "content": "bro just omit last if and return statement then write return rev "
                    },
                    {
                        "username": "omprakash1353",
                        "content": "Bro you have changed the value of x then you tried to compare them it obviously goona return wrong ans"
                    },
                    {
                        "username": "biswassubhojit6831",
                        "content": "your rev val will be 121 and x will be \"0\" either change the code or start focusing more on every line to find the solution"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "a/c to your code \\nx is changing (i.e., in while loop) &\\nyou are comparing with x.\\nSo you\\'ve to just copy x with y\\nthen you\\'ve compare y with rev.\\nlike...\\n\\nint rev=0,y;\\ny=x;\\nif(x<0) return false;\\nwhile(x!=0){\\n       rev= rev*10 + x%10;\\n       x=x/10;\\n}\\nif(y != rev) return false;\\nreturn true;\\n\\nthanks :)"
                    },
                    {
                        "username": "ps_27",
                        "content": "acc to your code x is changing ....and you are comparing with x ."
                    },
                    {
                        "username": "Rishiraj_30",
                        "content": "just store the value of x before performing any operation x.\\n\\nint copy_of_x = x;\\nint rev=0;\\nif(x<0){\\nreturn false;\\n}\\nwhile(x!=0){\\nrev= rev*10 + x%10;\\nx=x/10;\\n}\\nif(copy_of_x !=rev){\\nreturn false;\\n}\\nreturn true;"
                    },
                    {
                        "username": "satyamgarg1308",
                        "content": "if(x<0) this is your problem , Program says the value of X can be negative or positive ."
                    },
                    {
                        "username": "MenaiAla",
                        "content": "[@sonu2231kumar](/sonu2231kumar) It does not work."
                    },
                    {
                        "username": "f_murshid_",
                        "content": "due to x is gradually decresing so first initialize temp variable and declear x in it and then compare rev and temp"
                    },
                    {
                        "username": "sonu2231kumar",
                        "content": "rev = (rev*10)+(x%10)\\nor \\nif(x==rev)\\n          true;\\nfalse;\\n"
                    },
                    {
                        "username": "harshitgaur600",
                        "content": "[@MayankRathore](/MayankRathore) x is changing in the loop as you did x=x/10. so try to make a temp variable to store x.\\n"
                    },
                    {
                        "username": "Bit-creatorCK",
                        "content": "[@MayankRathore](/MayankRathore) The Value of x changes in while loop and ends to 0 i.e. the condition of your while loop. To check whether it\\'s palindrome or not, you have to keep a copy of the value of x into another variable. \\n\\nJust think, if the value of x wasn\\'t changing in your while loop, then why did it not end up to infinite loop? Hope you got it now."
                    },
                    {
                        "username": "brahadeeshram",
                        "content": "last if condition has wrong condition and return statement also wrong "
                    },
                    {
                        "username": "HegdeRam",
                        "content": "keep original copy of X at initial step. int org = x;"
                    },
                    {
                        "username": "Sofiyan_M",
                        "content": "use temp to store value x . bcoz  x\\'s value changes through out the program from original one\\'s and use if(temp != rev)"
                    },
                    {
                        "username": "MayankRathore",
                        "content": " bool isPalindrome(int x) {\\n        long long int ans=0;\\n        while(x!=0)\\n        {\\n            int temp= x % 10;\\n           \\n            ans= (ans *10 )+ temp;\\n             x = x / 10;\\n        }\\n        if(ans==x){\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n\\nsame problem with my code also......."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    },
                    {
                        "username": "cherishlc",
                        "content": "If a number is a palindrome,,  its reverse equals itself.  \\nWhich means its reverse is NOT overflow!!!\\nSo that ' reversed integer might overflow'  doesn't matter at all, since a overlowed number isn't a palindrome.\\n\\n\\nNow the question becomes whether a NONE palindrome  == its reverse if we do NOT deal with overflow."
                    },
                    {
                        "username": "aivanilov",
                        "content": "Integer max = 2147483647 and Integer min = -2147483648. May be this is the case?"
                    },
                    {
                        "username": "run2explore99",
                        "content": "BEATS 97%\\n `class Solution {\\n    public boolean isPalindrome(int x) {\\n       int reverse=0;\\n        int temp = x;\\n\\n        if (x < 0) return false;\\n        while(temp != 0)   \\n        {  \\n        int remainder = temp % 10;  \\n        reverse = reverse * 10 + remainder;  \\n        temp = temp/10;  \\n        }  \\n        return reverse == x;\\n\\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1636603,
                "content": [
                    {
                        "username": "NowyKumara",
                        "content": "First convert x into string \\nx = str(x)\\nThen get reverse of x\\nn = x[::-1]\\nNow equate if they are palindrome then teh values must be same>\\nif x == n:\\n\\treturn True\\nelse:\\n\\treturn False.\\nThis is my first ever code that I wrote myself without any help and I am moved to tears right now seeing it compile\\nI am sorry but had to say it, thanks to the community for being there, it means a lot."
                    },
                    {
                        "username": "SivaKrishna-2002",
                        "content": "can you write in java \\n"
                    },
                    {
                        "username": "daliamukherjee216",
                        "content": "[@Moonbeam8773](/Moonbeam8773) i am getting the use of undeclared identifier \\'x_str\\' error. any solution?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Solution in java :\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}\\n"
                    },
                    {
                        "username": "jedi8380",
                        "content": "I feel you when you said without any help lol, it gives you a sense of relief from having imposter syndrome"
                    },
                    {
                        "username": "Moonbeam8773",
                        "content": "What you\\'re typing is essentially:\\nif True:\\n  return True\\nelse:\\n  return False\\n\\nJust do:\\nx_str = str(x)\\nreturn x_str == x_str[::-1]"
                    },
                    {
                        "username": "Aurof",
                        "content": "you didnt read the follow up, the real challenge is do it without converting the int to a string"
                    },
                    {
                        "username": "muvvalasairamakrishna",
                        "content": "i wrote the same but its giving an erroe\\n"
                    },
                    {
                        "username": "rellik",
                        "content": "I am wondering how the other people got their code ACed, the testing result of **\"-2147447412\"** seems a little odd to me. Should it be a palindromic number or not?\\n\\nNote: I believe the range of int is [-2147483648, 2147483647] and **\"-2147447412\"** is not overflowed, plus I handled the overflow cases already (test case \"-2147483648\" in particular).\\n\\n\\n11499 / 11502 test cases passed.\\n\\nStatus: Wrong Answer\\n\\n\\nInput:\\t-2147447412\\n\\nOutput:\\ttrue\\n\\nExpected:\\tfalse\\n\\n------------------------------------------------------------------\\nHere's my second question:\\n\\n**Why does the function take \"int\" as input instead of \"unsigned int\", when we assume all negative numbers are NOT palindromic.**"
                    },
                    {
                        "username": "rohanrambroo",
                        "content": "i think in your code you should do if x<0 return false because we can never accept -ve numbers"
                    },
                    {
                        "username": "mukulvagh11",
                        "content": "Input: x = -121\\nOutput: false\\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\\n\\n"
                    },
                    {
                        "username": "izzattulaev",
                        "content": "Input: -2147447412 and output must show \"false\" (in the description)\\n"
                    },
                    {
                        "username": "kojosimtema",
                        "content": "i believe all negative numbers are not palindrome because \"-\" is considered part of the number, and in the reverse you will get the \"-\"  at the end of the number. \\n\\nSo in this case \"-2147447412\"  will be \"2147447412-\"  in the reverse"
                    },
                    {
                        "username": "LMunique",
                        "content": "If it says O(1) space I can understand how to do that, but what does no \"extra space\" mean? If I use another integer to save the reversed number does it mean I'm still using extra space? Or when I simply am using an integer i for loop does it mean I have extra space?"
                    },
                    {
                        "username": "hp273",
                        "content": "O(1) does not mean extra space, it means the space you are using is independent of any other factor for example if you are using fixed size array then the size will not grow as i/p size grows."
                    },
                    {
                        "username": "blueshipswims",
                        "content": "by \\'extra space\\' what it means is that does the space required for all the cases change with case ? is the space required \\'variable\\' . If you reverse a number like 123 it yields 321 and this would consume the same memory when you reverse a number like 94729726 because both are integers BUT if you are using an array to store the digits and then reverse it or whatever then the memory required becomes variable because the individual digits have their own space in the array and thus costing EXTRA SPACE. Hope it helps. "
                    },
                    {
                        "username": "krishankanhaya_",
                        "content": "yes, i get your intension but O(1) due to this extra space which you needed for solving problem not grow as your input size varies that\\'s why it is O(1)."
                    },
                    {
                        "username": "haikeren61",
                        "content": "![image](https://assets.leetcode.com/users/images/e119a3a4-d25c-4396-b675-ad1ff971633f_1636894502.7062209.png)\\n"
                    },
                    {
                        "username": "CandyRobbery",
                        "content": "- Impossible to solve without extra space. Always need space for constants, variables or whatever. Recursion calls will take space for call stack.\\n\\n- If you are talking about constant space, then even declaring a string / stack will take constant space. (In fact at most (log(10, INT_MAX) * sizeof char), which is no worse than declaring an integer or more). Actually, even recursion will take constant space."
                    },
                    {
                        "username": "Sudheer474",
                        "content": "what the hell output is whats wrong with my code\\n   int rev=0;\\n        if(x<0){\\n            return false;\\n        }\\n        while(x!=0){\\n            rev= rev*10 + x%10;\\n            x=x/10;\\n        }\\n        if(x!=rev){\\n            return false;\\n        }\\n        return true;\\n\\nit gives wrong for 121 test case my output is false.."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "class Solution {\\n\\n        public boolean isPalindrome(int x) {\\n\\n    if (x < 0 || (x != 0 && x % 10 == 0)) {\\n        return false;\\n    }\\n\\n    int reversed = 0;\\n    int originalX = x;\\n\\n\\n    while (x > 0) {\\n        int digit = x % 10;\\n        reversed = reversed * 10 + digit;\\n        x /= 10;\\n    }\\n\\n\\n    return reversed == originalX;\\n}\\nUse this approach"
                    },
                    {
                        "username": "Hari_Seenu_7",
                        "content": "bro just omit last if and return statement then write return rev "
                    },
                    {
                        "username": "omprakash1353",
                        "content": "Bro you have changed the value of x then you tried to compare them it obviously goona return wrong ans"
                    },
                    {
                        "username": "biswassubhojit6831",
                        "content": "your rev val will be 121 and x will be \"0\" either change the code or start focusing more on every line to find the solution"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "a/c to your code \\nx is changing (i.e., in while loop) &\\nyou are comparing with x.\\nSo you\\'ve to just copy x with y\\nthen you\\'ve compare y with rev.\\nlike...\\n\\nint rev=0,y;\\ny=x;\\nif(x<0) return false;\\nwhile(x!=0){\\n       rev= rev*10 + x%10;\\n       x=x/10;\\n}\\nif(y != rev) return false;\\nreturn true;\\n\\nthanks :)"
                    },
                    {
                        "username": "ps_27",
                        "content": "acc to your code x is changing ....and you are comparing with x ."
                    },
                    {
                        "username": "Rishiraj_30",
                        "content": "just store the value of x before performing any operation x.\\n\\nint copy_of_x = x;\\nint rev=0;\\nif(x<0){\\nreturn false;\\n}\\nwhile(x!=0){\\nrev= rev*10 + x%10;\\nx=x/10;\\n}\\nif(copy_of_x !=rev){\\nreturn false;\\n}\\nreturn true;"
                    },
                    {
                        "username": "satyamgarg1308",
                        "content": "if(x<0) this is your problem , Program says the value of X can be negative or positive ."
                    },
                    {
                        "username": "MenaiAla",
                        "content": "[@sonu2231kumar](/sonu2231kumar) It does not work."
                    },
                    {
                        "username": "f_murshid_",
                        "content": "due to x is gradually decresing so first initialize temp variable and declear x in it and then compare rev and temp"
                    },
                    {
                        "username": "sonu2231kumar",
                        "content": "rev = (rev*10)+(x%10)\\nor \\nif(x==rev)\\n          true;\\nfalse;\\n"
                    },
                    {
                        "username": "harshitgaur600",
                        "content": "[@MayankRathore](/MayankRathore) x is changing in the loop as you did x=x/10. so try to make a temp variable to store x.\\n"
                    },
                    {
                        "username": "Bit-creatorCK",
                        "content": "[@MayankRathore](/MayankRathore) The Value of x changes in while loop and ends to 0 i.e. the condition of your while loop. To check whether it\\'s palindrome or not, you have to keep a copy of the value of x into another variable. \\n\\nJust think, if the value of x wasn\\'t changing in your while loop, then why did it not end up to infinite loop? Hope you got it now."
                    },
                    {
                        "username": "brahadeeshram",
                        "content": "last if condition has wrong condition and return statement also wrong "
                    },
                    {
                        "username": "HegdeRam",
                        "content": "keep original copy of X at initial step. int org = x;"
                    },
                    {
                        "username": "Sofiyan_M",
                        "content": "use temp to store value x . bcoz  x\\'s value changes through out the program from original one\\'s and use if(temp != rev)"
                    },
                    {
                        "username": "MayankRathore",
                        "content": " bool isPalindrome(int x) {\\n        long long int ans=0;\\n        while(x!=0)\\n        {\\n            int temp= x % 10;\\n           \\n            ans= (ans *10 )+ temp;\\n             x = x / 10;\\n        }\\n        if(ans==x){\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n\\nsame problem with my code also......."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    },
                    {
                        "username": "cherishlc",
                        "content": "If a number is a palindrome,,  its reverse equals itself.  \\nWhich means its reverse is NOT overflow!!!\\nSo that ' reversed integer might overflow'  doesn't matter at all, since a overlowed number isn't a palindrome.\\n\\n\\nNow the question becomes whether a NONE palindrome  == its reverse if we do NOT deal with overflow."
                    },
                    {
                        "username": "aivanilov",
                        "content": "Integer max = 2147483647 and Integer min = -2147483648. May be this is the case?"
                    },
                    {
                        "username": "run2explore99",
                        "content": "BEATS 97%\\n `class Solution {\\n    public boolean isPalindrome(int x) {\\n       int reverse=0;\\n        int temp = x;\\n\\n        if (x < 0) return false;\\n        while(temp != 0)   \\n        {  \\n        int remainder = temp % 10;  \\n        reverse = reverse * 10 + remainder;  \\n        temp = temp/10;  \\n        }  \\n        return reverse == x;\\n\\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1566451,
                "content": [
                    {
                        "username": "NowyKumara",
                        "content": "First convert x into string \\nx = str(x)\\nThen get reverse of x\\nn = x[::-1]\\nNow equate if they are palindrome then teh values must be same>\\nif x == n:\\n\\treturn True\\nelse:\\n\\treturn False.\\nThis is my first ever code that I wrote myself without any help and I am moved to tears right now seeing it compile\\nI am sorry but had to say it, thanks to the community for being there, it means a lot."
                    },
                    {
                        "username": "SivaKrishna-2002",
                        "content": "can you write in java \\n"
                    },
                    {
                        "username": "daliamukherjee216",
                        "content": "[@Moonbeam8773](/Moonbeam8773) i am getting the use of undeclared identifier \\'x_str\\' error. any solution?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Solution in java :\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}\\n"
                    },
                    {
                        "username": "jedi8380",
                        "content": "I feel you when you said without any help lol, it gives you a sense of relief from having imposter syndrome"
                    },
                    {
                        "username": "Moonbeam8773",
                        "content": "What you\\'re typing is essentially:\\nif True:\\n  return True\\nelse:\\n  return False\\n\\nJust do:\\nx_str = str(x)\\nreturn x_str == x_str[::-1]"
                    },
                    {
                        "username": "Aurof",
                        "content": "you didnt read the follow up, the real challenge is do it without converting the int to a string"
                    },
                    {
                        "username": "muvvalasairamakrishna",
                        "content": "i wrote the same but its giving an erroe\\n"
                    },
                    {
                        "username": "rellik",
                        "content": "I am wondering how the other people got their code ACed, the testing result of **\"-2147447412\"** seems a little odd to me. Should it be a palindromic number or not?\\n\\nNote: I believe the range of int is [-2147483648, 2147483647] and **\"-2147447412\"** is not overflowed, plus I handled the overflow cases already (test case \"-2147483648\" in particular).\\n\\n\\n11499 / 11502 test cases passed.\\n\\nStatus: Wrong Answer\\n\\n\\nInput:\\t-2147447412\\n\\nOutput:\\ttrue\\n\\nExpected:\\tfalse\\n\\n------------------------------------------------------------------\\nHere's my second question:\\n\\n**Why does the function take \"int\" as input instead of \"unsigned int\", when we assume all negative numbers are NOT palindromic.**"
                    },
                    {
                        "username": "rohanrambroo",
                        "content": "i think in your code you should do if x<0 return false because we can never accept -ve numbers"
                    },
                    {
                        "username": "mukulvagh11",
                        "content": "Input: x = -121\\nOutput: false\\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\\n\\n"
                    },
                    {
                        "username": "izzattulaev",
                        "content": "Input: -2147447412 and output must show \"false\" (in the description)\\n"
                    },
                    {
                        "username": "kojosimtema",
                        "content": "i believe all negative numbers are not palindrome because \"-\" is considered part of the number, and in the reverse you will get the \"-\"  at the end of the number. \\n\\nSo in this case \"-2147447412\"  will be \"2147447412-\"  in the reverse"
                    },
                    {
                        "username": "LMunique",
                        "content": "If it says O(1) space I can understand how to do that, but what does no \"extra space\" mean? If I use another integer to save the reversed number does it mean I'm still using extra space? Or when I simply am using an integer i for loop does it mean I have extra space?"
                    },
                    {
                        "username": "hp273",
                        "content": "O(1) does not mean extra space, it means the space you are using is independent of any other factor for example if you are using fixed size array then the size will not grow as i/p size grows."
                    },
                    {
                        "username": "blueshipswims",
                        "content": "by \\'extra space\\' what it means is that does the space required for all the cases change with case ? is the space required \\'variable\\' . If you reverse a number like 123 it yields 321 and this would consume the same memory when you reverse a number like 94729726 because both are integers BUT if you are using an array to store the digits and then reverse it or whatever then the memory required becomes variable because the individual digits have their own space in the array and thus costing EXTRA SPACE. Hope it helps. "
                    },
                    {
                        "username": "krishankanhaya_",
                        "content": "yes, i get your intension but O(1) due to this extra space which you needed for solving problem not grow as your input size varies that\\'s why it is O(1)."
                    },
                    {
                        "username": "haikeren61",
                        "content": "![image](https://assets.leetcode.com/users/images/e119a3a4-d25c-4396-b675-ad1ff971633f_1636894502.7062209.png)\\n"
                    },
                    {
                        "username": "CandyRobbery",
                        "content": "- Impossible to solve without extra space. Always need space for constants, variables or whatever. Recursion calls will take space for call stack.\\n\\n- If you are talking about constant space, then even declaring a string / stack will take constant space. (In fact at most (log(10, INT_MAX) * sizeof char), which is no worse than declaring an integer or more). Actually, even recursion will take constant space."
                    },
                    {
                        "username": "Sudheer474",
                        "content": "what the hell output is whats wrong with my code\\n   int rev=0;\\n        if(x<0){\\n            return false;\\n        }\\n        while(x!=0){\\n            rev= rev*10 + x%10;\\n            x=x/10;\\n        }\\n        if(x!=rev){\\n            return false;\\n        }\\n        return true;\\n\\nit gives wrong for 121 test case my output is false.."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "class Solution {\\n\\n        public boolean isPalindrome(int x) {\\n\\n    if (x < 0 || (x != 0 && x % 10 == 0)) {\\n        return false;\\n    }\\n\\n    int reversed = 0;\\n    int originalX = x;\\n\\n\\n    while (x > 0) {\\n        int digit = x % 10;\\n        reversed = reversed * 10 + digit;\\n        x /= 10;\\n    }\\n\\n\\n    return reversed == originalX;\\n}\\nUse this approach"
                    },
                    {
                        "username": "Hari_Seenu_7",
                        "content": "bro just omit last if and return statement then write return rev "
                    },
                    {
                        "username": "omprakash1353",
                        "content": "Bro you have changed the value of x then you tried to compare them it obviously goona return wrong ans"
                    },
                    {
                        "username": "biswassubhojit6831",
                        "content": "your rev val will be 121 and x will be \"0\" either change the code or start focusing more on every line to find the solution"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "a/c to your code \\nx is changing (i.e., in while loop) &\\nyou are comparing with x.\\nSo you\\'ve to just copy x with y\\nthen you\\'ve compare y with rev.\\nlike...\\n\\nint rev=0,y;\\ny=x;\\nif(x<0) return false;\\nwhile(x!=0){\\n       rev= rev*10 + x%10;\\n       x=x/10;\\n}\\nif(y != rev) return false;\\nreturn true;\\n\\nthanks :)"
                    },
                    {
                        "username": "ps_27",
                        "content": "acc to your code x is changing ....and you are comparing with x ."
                    },
                    {
                        "username": "Rishiraj_30",
                        "content": "just store the value of x before performing any operation x.\\n\\nint copy_of_x = x;\\nint rev=0;\\nif(x<0){\\nreturn false;\\n}\\nwhile(x!=0){\\nrev= rev*10 + x%10;\\nx=x/10;\\n}\\nif(copy_of_x !=rev){\\nreturn false;\\n}\\nreturn true;"
                    },
                    {
                        "username": "satyamgarg1308",
                        "content": "if(x<0) this is your problem , Program says the value of X can be negative or positive ."
                    },
                    {
                        "username": "MenaiAla",
                        "content": "[@sonu2231kumar](/sonu2231kumar) It does not work."
                    },
                    {
                        "username": "f_murshid_",
                        "content": "due to x is gradually decresing so first initialize temp variable and declear x in it and then compare rev and temp"
                    },
                    {
                        "username": "sonu2231kumar",
                        "content": "rev = (rev*10)+(x%10)\\nor \\nif(x==rev)\\n          true;\\nfalse;\\n"
                    },
                    {
                        "username": "harshitgaur600",
                        "content": "[@MayankRathore](/MayankRathore) x is changing in the loop as you did x=x/10. so try to make a temp variable to store x.\\n"
                    },
                    {
                        "username": "Bit-creatorCK",
                        "content": "[@MayankRathore](/MayankRathore) The Value of x changes in while loop and ends to 0 i.e. the condition of your while loop. To check whether it\\'s palindrome or not, you have to keep a copy of the value of x into another variable. \\n\\nJust think, if the value of x wasn\\'t changing in your while loop, then why did it not end up to infinite loop? Hope you got it now."
                    },
                    {
                        "username": "brahadeeshram",
                        "content": "last if condition has wrong condition and return statement also wrong "
                    },
                    {
                        "username": "HegdeRam",
                        "content": "keep original copy of X at initial step. int org = x;"
                    },
                    {
                        "username": "Sofiyan_M",
                        "content": "use temp to store value x . bcoz  x\\'s value changes through out the program from original one\\'s and use if(temp != rev)"
                    },
                    {
                        "username": "MayankRathore",
                        "content": " bool isPalindrome(int x) {\\n        long long int ans=0;\\n        while(x!=0)\\n        {\\n            int temp= x % 10;\\n           \\n            ans= (ans *10 )+ temp;\\n             x = x / 10;\\n        }\\n        if(ans==x){\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n\\nsame problem with my code also......."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    },
                    {
                        "username": "cherishlc",
                        "content": "If a number is a palindrome,,  its reverse equals itself.  \\nWhich means its reverse is NOT overflow!!!\\nSo that ' reversed integer might overflow'  doesn't matter at all, since a overlowed number isn't a palindrome.\\n\\n\\nNow the question becomes whether a NONE palindrome  == its reverse if we do NOT deal with overflow."
                    },
                    {
                        "username": "aivanilov",
                        "content": "Integer max = 2147483647 and Integer min = -2147483648. May be this is the case?"
                    },
                    {
                        "username": "run2explore99",
                        "content": "BEATS 97%\\n `class Solution {\\n    public boolean isPalindrome(int x) {\\n       int reverse=0;\\n        int temp = x;\\n\\n        if (x < 0) return false;\\n        while(temp != 0)   \\n        {  \\n        int remainder = temp % 10;  \\n        reverse = reverse * 10 + remainder;  \\n        temp = temp/10;  \\n        }  \\n        return reverse == x;\\n\\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1574279,
                "content": [
                    {
                        "username": "NowyKumara",
                        "content": "First convert x into string \\nx = str(x)\\nThen get reverse of x\\nn = x[::-1]\\nNow equate if they are palindrome then teh values must be same>\\nif x == n:\\n\\treturn True\\nelse:\\n\\treturn False.\\nThis is my first ever code that I wrote myself without any help and I am moved to tears right now seeing it compile\\nI am sorry but had to say it, thanks to the community for being there, it means a lot."
                    },
                    {
                        "username": "SivaKrishna-2002",
                        "content": "can you write in java \\n"
                    },
                    {
                        "username": "daliamukherjee216",
                        "content": "[@Moonbeam8773](/Moonbeam8773) i am getting the use of undeclared identifier \\'x_str\\' error. any solution?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Solution in java :\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}\\n"
                    },
                    {
                        "username": "jedi8380",
                        "content": "I feel you when you said without any help lol, it gives you a sense of relief from having imposter syndrome"
                    },
                    {
                        "username": "Moonbeam8773",
                        "content": "What you\\'re typing is essentially:\\nif True:\\n  return True\\nelse:\\n  return False\\n\\nJust do:\\nx_str = str(x)\\nreturn x_str == x_str[::-1]"
                    },
                    {
                        "username": "Aurof",
                        "content": "you didnt read the follow up, the real challenge is do it without converting the int to a string"
                    },
                    {
                        "username": "muvvalasairamakrishna",
                        "content": "i wrote the same but its giving an erroe\\n"
                    },
                    {
                        "username": "rellik",
                        "content": "I am wondering how the other people got their code ACed, the testing result of **\"-2147447412\"** seems a little odd to me. Should it be a palindromic number or not?\\n\\nNote: I believe the range of int is [-2147483648, 2147483647] and **\"-2147447412\"** is not overflowed, plus I handled the overflow cases already (test case \"-2147483648\" in particular).\\n\\n\\n11499 / 11502 test cases passed.\\n\\nStatus: Wrong Answer\\n\\n\\nInput:\\t-2147447412\\n\\nOutput:\\ttrue\\n\\nExpected:\\tfalse\\n\\n------------------------------------------------------------------\\nHere's my second question:\\n\\n**Why does the function take \"int\" as input instead of \"unsigned int\", when we assume all negative numbers are NOT palindromic.**"
                    },
                    {
                        "username": "rohanrambroo",
                        "content": "i think in your code you should do if x<0 return false because we can never accept -ve numbers"
                    },
                    {
                        "username": "mukulvagh11",
                        "content": "Input: x = -121\\nOutput: false\\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\\n\\n"
                    },
                    {
                        "username": "izzattulaev",
                        "content": "Input: -2147447412 and output must show \"false\" (in the description)\\n"
                    },
                    {
                        "username": "kojosimtema",
                        "content": "i believe all negative numbers are not palindrome because \"-\" is considered part of the number, and in the reverse you will get the \"-\"  at the end of the number. \\n\\nSo in this case \"-2147447412\"  will be \"2147447412-\"  in the reverse"
                    },
                    {
                        "username": "LMunique",
                        "content": "If it says O(1) space I can understand how to do that, but what does no \"extra space\" mean? If I use another integer to save the reversed number does it mean I'm still using extra space? Or when I simply am using an integer i for loop does it mean I have extra space?"
                    },
                    {
                        "username": "hp273",
                        "content": "O(1) does not mean extra space, it means the space you are using is independent of any other factor for example if you are using fixed size array then the size will not grow as i/p size grows."
                    },
                    {
                        "username": "blueshipswims",
                        "content": "by \\'extra space\\' what it means is that does the space required for all the cases change with case ? is the space required \\'variable\\' . If you reverse a number like 123 it yields 321 and this would consume the same memory when you reverse a number like 94729726 because both are integers BUT if you are using an array to store the digits and then reverse it or whatever then the memory required becomes variable because the individual digits have their own space in the array and thus costing EXTRA SPACE. Hope it helps. "
                    },
                    {
                        "username": "krishankanhaya_",
                        "content": "yes, i get your intension but O(1) due to this extra space which you needed for solving problem not grow as your input size varies that\\'s why it is O(1)."
                    },
                    {
                        "username": "haikeren61",
                        "content": "![image](https://assets.leetcode.com/users/images/e119a3a4-d25c-4396-b675-ad1ff971633f_1636894502.7062209.png)\\n"
                    },
                    {
                        "username": "CandyRobbery",
                        "content": "- Impossible to solve without extra space. Always need space for constants, variables or whatever. Recursion calls will take space for call stack.\\n\\n- If you are talking about constant space, then even declaring a string / stack will take constant space. (In fact at most (log(10, INT_MAX) * sizeof char), which is no worse than declaring an integer or more). Actually, even recursion will take constant space."
                    },
                    {
                        "username": "Sudheer474",
                        "content": "what the hell output is whats wrong with my code\\n   int rev=0;\\n        if(x<0){\\n            return false;\\n        }\\n        while(x!=0){\\n            rev= rev*10 + x%10;\\n            x=x/10;\\n        }\\n        if(x!=rev){\\n            return false;\\n        }\\n        return true;\\n\\nit gives wrong for 121 test case my output is false.."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "class Solution {\\n\\n        public boolean isPalindrome(int x) {\\n\\n    if (x < 0 || (x != 0 && x % 10 == 0)) {\\n        return false;\\n    }\\n\\n    int reversed = 0;\\n    int originalX = x;\\n\\n\\n    while (x > 0) {\\n        int digit = x % 10;\\n        reversed = reversed * 10 + digit;\\n        x /= 10;\\n    }\\n\\n\\n    return reversed == originalX;\\n}\\nUse this approach"
                    },
                    {
                        "username": "Hari_Seenu_7",
                        "content": "bro just omit last if and return statement then write return rev "
                    },
                    {
                        "username": "omprakash1353",
                        "content": "Bro you have changed the value of x then you tried to compare them it obviously goona return wrong ans"
                    },
                    {
                        "username": "biswassubhojit6831",
                        "content": "your rev val will be 121 and x will be \"0\" either change the code or start focusing more on every line to find the solution"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "a/c to your code \\nx is changing (i.e., in while loop) &\\nyou are comparing with x.\\nSo you\\'ve to just copy x with y\\nthen you\\'ve compare y with rev.\\nlike...\\n\\nint rev=0,y;\\ny=x;\\nif(x<0) return false;\\nwhile(x!=0){\\n       rev= rev*10 + x%10;\\n       x=x/10;\\n}\\nif(y != rev) return false;\\nreturn true;\\n\\nthanks :)"
                    },
                    {
                        "username": "ps_27",
                        "content": "acc to your code x is changing ....and you are comparing with x ."
                    },
                    {
                        "username": "Rishiraj_30",
                        "content": "just store the value of x before performing any operation x.\\n\\nint copy_of_x = x;\\nint rev=0;\\nif(x<0){\\nreturn false;\\n}\\nwhile(x!=0){\\nrev= rev*10 + x%10;\\nx=x/10;\\n}\\nif(copy_of_x !=rev){\\nreturn false;\\n}\\nreturn true;"
                    },
                    {
                        "username": "satyamgarg1308",
                        "content": "if(x<0) this is your problem , Program says the value of X can be negative or positive ."
                    },
                    {
                        "username": "MenaiAla",
                        "content": "[@sonu2231kumar](/sonu2231kumar) It does not work."
                    },
                    {
                        "username": "f_murshid_",
                        "content": "due to x is gradually decresing so first initialize temp variable and declear x in it and then compare rev and temp"
                    },
                    {
                        "username": "sonu2231kumar",
                        "content": "rev = (rev*10)+(x%10)\\nor \\nif(x==rev)\\n          true;\\nfalse;\\n"
                    },
                    {
                        "username": "harshitgaur600",
                        "content": "[@MayankRathore](/MayankRathore) x is changing in the loop as you did x=x/10. so try to make a temp variable to store x.\\n"
                    },
                    {
                        "username": "Bit-creatorCK",
                        "content": "[@MayankRathore](/MayankRathore) The Value of x changes in while loop and ends to 0 i.e. the condition of your while loop. To check whether it\\'s palindrome or not, you have to keep a copy of the value of x into another variable. \\n\\nJust think, if the value of x wasn\\'t changing in your while loop, then why did it not end up to infinite loop? Hope you got it now."
                    },
                    {
                        "username": "brahadeeshram",
                        "content": "last if condition has wrong condition and return statement also wrong "
                    },
                    {
                        "username": "HegdeRam",
                        "content": "keep original copy of X at initial step. int org = x;"
                    },
                    {
                        "username": "Sofiyan_M",
                        "content": "use temp to store value x . bcoz  x\\'s value changes through out the program from original one\\'s and use if(temp != rev)"
                    },
                    {
                        "username": "MayankRathore",
                        "content": " bool isPalindrome(int x) {\\n        long long int ans=0;\\n        while(x!=0)\\n        {\\n            int temp= x % 10;\\n           \\n            ans= (ans *10 )+ temp;\\n             x = x / 10;\\n        }\\n        if(ans==x){\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n\\nsame problem with my code also......."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    },
                    {
                        "username": "cherishlc",
                        "content": "If a number is a palindrome,,  its reverse equals itself.  \\nWhich means its reverse is NOT overflow!!!\\nSo that ' reversed integer might overflow'  doesn't matter at all, since a overlowed number isn't a palindrome.\\n\\n\\nNow the question becomes whether a NONE palindrome  == its reverse if we do NOT deal with overflow."
                    },
                    {
                        "username": "aivanilov",
                        "content": "Integer max = 2147483647 and Integer min = -2147483648. May be this is the case?"
                    },
                    {
                        "username": "run2explore99",
                        "content": "BEATS 97%\\n `class Solution {\\n    public boolean isPalindrome(int x) {\\n       int reverse=0;\\n        int temp = x;\\n\\n        if (x < 0) return false;\\n        while(temp != 0)   \\n        {  \\n        int remainder = temp % 10;  \\n        reverse = reverse * 10 + remainder;  \\n        temp = temp/10;  \\n        }  \\n        return reverse == x;\\n\\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1564695,
                "content": [
                    {
                        "username": "NowyKumara",
                        "content": "First convert x into string \\nx = str(x)\\nThen get reverse of x\\nn = x[::-1]\\nNow equate if they are palindrome then teh values must be same>\\nif x == n:\\n\\treturn True\\nelse:\\n\\treturn False.\\nThis is my first ever code that I wrote myself without any help and I am moved to tears right now seeing it compile\\nI am sorry but had to say it, thanks to the community for being there, it means a lot."
                    },
                    {
                        "username": "SivaKrishna-2002",
                        "content": "can you write in java \\n"
                    },
                    {
                        "username": "daliamukherjee216",
                        "content": "[@Moonbeam8773](/Moonbeam8773) i am getting the use of undeclared identifier \\'x_str\\' error. any solution?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Solution in java :\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}\\n"
                    },
                    {
                        "username": "jedi8380",
                        "content": "I feel you when you said without any help lol, it gives you a sense of relief from having imposter syndrome"
                    },
                    {
                        "username": "Moonbeam8773",
                        "content": "What you\\'re typing is essentially:\\nif True:\\n  return True\\nelse:\\n  return False\\n\\nJust do:\\nx_str = str(x)\\nreturn x_str == x_str[::-1]"
                    },
                    {
                        "username": "Aurof",
                        "content": "you didnt read the follow up, the real challenge is do it without converting the int to a string"
                    },
                    {
                        "username": "muvvalasairamakrishna",
                        "content": "i wrote the same but its giving an erroe\\n"
                    },
                    {
                        "username": "rellik",
                        "content": "I am wondering how the other people got their code ACed, the testing result of **\"-2147447412\"** seems a little odd to me. Should it be a palindromic number or not?\\n\\nNote: I believe the range of int is [-2147483648, 2147483647] and **\"-2147447412\"** is not overflowed, plus I handled the overflow cases already (test case \"-2147483648\" in particular).\\n\\n\\n11499 / 11502 test cases passed.\\n\\nStatus: Wrong Answer\\n\\n\\nInput:\\t-2147447412\\n\\nOutput:\\ttrue\\n\\nExpected:\\tfalse\\n\\n------------------------------------------------------------------\\nHere's my second question:\\n\\n**Why does the function take \"int\" as input instead of \"unsigned int\", when we assume all negative numbers are NOT palindromic.**"
                    },
                    {
                        "username": "rohanrambroo",
                        "content": "i think in your code you should do if x<0 return false because we can never accept -ve numbers"
                    },
                    {
                        "username": "mukulvagh11",
                        "content": "Input: x = -121\\nOutput: false\\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\\n\\n"
                    },
                    {
                        "username": "izzattulaev",
                        "content": "Input: -2147447412 and output must show \"false\" (in the description)\\n"
                    },
                    {
                        "username": "kojosimtema",
                        "content": "i believe all negative numbers are not palindrome because \"-\" is considered part of the number, and in the reverse you will get the \"-\"  at the end of the number. \\n\\nSo in this case \"-2147447412\"  will be \"2147447412-\"  in the reverse"
                    },
                    {
                        "username": "LMunique",
                        "content": "If it says O(1) space I can understand how to do that, but what does no \"extra space\" mean? If I use another integer to save the reversed number does it mean I'm still using extra space? Or when I simply am using an integer i for loop does it mean I have extra space?"
                    },
                    {
                        "username": "hp273",
                        "content": "O(1) does not mean extra space, it means the space you are using is independent of any other factor for example if you are using fixed size array then the size will not grow as i/p size grows."
                    },
                    {
                        "username": "blueshipswims",
                        "content": "by \\'extra space\\' what it means is that does the space required for all the cases change with case ? is the space required \\'variable\\' . If you reverse a number like 123 it yields 321 and this would consume the same memory when you reverse a number like 94729726 because both are integers BUT if you are using an array to store the digits and then reverse it or whatever then the memory required becomes variable because the individual digits have their own space in the array and thus costing EXTRA SPACE. Hope it helps. "
                    },
                    {
                        "username": "krishankanhaya_",
                        "content": "yes, i get your intension but O(1) due to this extra space which you needed for solving problem not grow as your input size varies that\\'s why it is O(1)."
                    },
                    {
                        "username": "haikeren61",
                        "content": "![image](https://assets.leetcode.com/users/images/e119a3a4-d25c-4396-b675-ad1ff971633f_1636894502.7062209.png)\\n"
                    },
                    {
                        "username": "CandyRobbery",
                        "content": "- Impossible to solve without extra space. Always need space for constants, variables or whatever. Recursion calls will take space for call stack.\\n\\n- If you are talking about constant space, then even declaring a string / stack will take constant space. (In fact at most (log(10, INT_MAX) * sizeof char), which is no worse than declaring an integer or more). Actually, even recursion will take constant space."
                    },
                    {
                        "username": "Sudheer474",
                        "content": "what the hell output is whats wrong with my code\\n   int rev=0;\\n        if(x<0){\\n            return false;\\n        }\\n        while(x!=0){\\n            rev= rev*10 + x%10;\\n            x=x/10;\\n        }\\n        if(x!=rev){\\n            return false;\\n        }\\n        return true;\\n\\nit gives wrong for 121 test case my output is false.."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "class Solution {\\n\\n        public boolean isPalindrome(int x) {\\n\\n    if (x < 0 || (x != 0 && x % 10 == 0)) {\\n        return false;\\n    }\\n\\n    int reversed = 0;\\n    int originalX = x;\\n\\n\\n    while (x > 0) {\\n        int digit = x % 10;\\n        reversed = reversed * 10 + digit;\\n        x /= 10;\\n    }\\n\\n\\n    return reversed == originalX;\\n}\\nUse this approach"
                    },
                    {
                        "username": "Hari_Seenu_7",
                        "content": "bro just omit last if and return statement then write return rev "
                    },
                    {
                        "username": "omprakash1353",
                        "content": "Bro you have changed the value of x then you tried to compare them it obviously goona return wrong ans"
                    },
                    {
                        "username": "biswassubhojit6831",
                        "content": "your rev val will be 121 and x will be \"0\" either change the code or start focusing more on every line to find the solution"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "a/c to your code \\nx is changing (i.e., in while loop) &\\nyou are comparing with x.\\nSo you\\'ve to just copy x with y\\nthen you\\'ve compare y with rev.\\nlike...\\n\\nint rev=0,y;\\ny=x;\\nif(x<0) return false;\\nwhile(x!=0){\\n       rev= rev*10 + x%10;\\n       x=x/10;\\n}\\nif(y != rev) return false;\\nreturn true;\\n\\nthanks :)"
                    },
                    {
                        "username": "ps_27",
                        "content": "acc to your code x is changing ....and you are comparing with x ."
                    },
                    {
                        "username": "Rishiraj_30",
                        "content": "just store the value of x before performing any operation x.\\n\\nint copy_of_x = x;\\nint rev=0;\\nif(x<0){\\nreturn false;\\n}\\nwhile(x!=0){\\nrev= rev*10 + x%10;\\nx=x/10;\\n}\\nif(copy_of_x !=rev){\\nreturn false;\\n}\\nreturn true;"
                    },
                    {
                        "username": "satyamgarg1308",
                        "content": "if(x<0) this is your problem , Program says the value of X can be negative or positive ."
                    },
                    {
                        "username": "MenaiAla",
                        "content": "[@sonu2231kumar](/sonu2231kumar) It does not work."
                    },
                    {
                        "username": "f_murshid_",
                        "content": "due to x is gradually decresing so first initialize temp variable and declear x in it and then compare rev and temp"
                    },
                    {
                        "username": "sonu2231kumar",
                        "content": "rev = (rev*10)+(x%10)\\nor \\nif(x==rev)\\n          true;\\nfalse;\\n"
                    },
                    {
                        "username": "harshitgaur600",
                        "content": "[@MayankRathore](/MayankRathore) x is changing in the loop as you did x=x/10. so try to make a temp variable to store x.\\n"
                    },
                    {
                        "username": "Bit-creatorCK",
                        "content": "[@MayankRathore](/MayankRathore) The Value of x changes in while loop and ends to 0 i.e. the condition of your while loop. To check whether it\\'s palindrome or not, you have to keep a copy of the value of x into another variable. \\n\\nJust think, if the value of x wasn\\'t changing in your while loop, then why did it not end up to infinite loop? Hope you got it now."
                    },
                    {
                        "username": "brahadeeshram",
                        "content": "last if condition has wrong condition and return statement also wrong "
                    },
                    {
                        "username": "HegdeRam",
                        "content": "keep original copy of X at initial step. int org = x;"
                    },
                    {
                        "username": "Sofiyan_M",
                        "content": "use temp to store value x . bcoz  x\\'s value changes through out the program from original one\\'s and use if(temp != rev)"
                    },
                    {
                        "username": "MayankRathore",
                        "content": " bool isPalindrome(int x) {\\n        long long int ans=0;\\n        while(x!=0)\\n        {\\n            int temp= x % 10;\\n           \\n            ans= (ans *10 )+ temp;\\n             x = x / 10;\\n        }\\n        if(ans==x){\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n\\nsame problem with my code also......."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    },
                    {
                        "username": "cherishlc",
                        "content": "If a number is a palindrome,,  its reverse equals itself.  \\nWhich means its reverse is NOT overflow!!!\\nSo that ' reversed integer might overflow'  doesn't matter at all, since a overlowed number isn't a palindrome.\\n\\n\\nNow the question becomes whether a NONE palindrome  == its reverse if we do NOT deal with overflow."
                    },
                    {
                        "username": "aivanilov",
                        "content": "Integer max = 2147483647 and Integer min = -2147483648. May be this is the case?"
                    },
                    {
                        "username": "run2explore99",
                        "content": "BEATS 97%\\n `class Solution {\\n    public boolean isPalindrome(int x) {\\n       int reverse=0;\\n        int temp = x;\\n\\n        if (x < 0) return false;\\n        while(temp != 0)   \\n        {  \\n        int remainder = temp % 10;  \\n        reverse = reverse * 10 + remainder;  \\n        temp = temp/10;  \\n        }  \\n        return reverse == x;\\n\\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1565223,
                "content": [
                    {
                        "username": "NowyKumara",
                        "content": "First convert x into string \\nx = str(x)\\nThen get reverse of x\\nn = x[::-1]\\nNow equate if they are palindrome then teh values must be same>\\nif x == n:\\n\\treturn True\\nelse:\\n\\treturn False.\\nThis is my first ever code that I wrote myself without any help and I am moved to tears right now seeing it compile\\nI am sorry but had to say it, thanks to the community for being there, it means a lot."
                    },
                    {
                        "username": "SivaKrishna-2002",
                        "content": "can you write in java \\n"
                    },
                    {
                        "username": "daliamukherjee216",
                        "content": "[@Moonbeam8773](/Moonbeam8773) i am getting the use of undeclared identifier \\'x_str\\' error. any solution?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Solution in java :\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}\\n"
                    },
                    {
                        "username": "jedi8380",
                        "content": "I feel you when you said without any help lol, it gives you a sense of relief from having imposter syndrome"
                    },
                    {
                        "username": "Moonbeam8773",
                        "content": "What you\\'re typing is essentially:\\nif True:\\n  return True\\nelse:\\n  return False\\n\\nJust do:\\nx_str = str(x)\\nreturn x_str == x_str[::-1]"
                    },
                    {
                        "username": "Aurof",
                        "content": "you didnt read the follow up, the real challenge is do it without converting the int to a string"
                    },
                    {
                        "username": "muvvalasairamakrishna",
                        "content": "i wrote the same but its giving an erroe\\n"
                    },
                    {
                        "username": "rellik",
                        "content": "I am wondering how the other people got their code ACed, the testing result of **\"-2147447412\"** seems a little odd to me. Should it be a palindromic number or not?\\n\\nNote: I believe the range of int is [-2147483648, 2147483647] and **\"-2147447412\"** is not overflowed, plus I handled the overflow cases already (test case \"-2147483648\" in particular).\\n\\n\\n11499 / 11502 test cases passed.\\n\\nStatus: Wrong Answer\\n\\n\\nInput:\\t-2147447412\\n\\nOutput:\\ttrue\\n\\nExpected:\\tfalse\\n\\n------------------------------------------------------------------\\nHere's my second question:\\n\\n**Why does the function take \"int\" as input instead of \"unsigned int\", when we assume all negative numbers are NOT palindromic.**"
                    },
                    {
                        "username": "rohanrambroo",
                        "content": "i think in your code you should do if x<0 return false because we can never accept -ve numbers"
                    },
                    {
                        "username": "mukulvagh11",
                        "content": "Input: x = -121\\nOutput: false\\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\\n\\n"
                    },
                    {
                        "username": "izzattulaev",
                        "content": "Input: -2147447412 and output must show \"false\" (in the description)\\n"
                    },
                    {
                        "username": "kojosimtema",
                        "content": "i believe all negative numbers are not palindrome because \"-\" is considered part of the number, and in the reverse you will get the \"-\"  at the end of the number. \\n\\nSo in this case \"-2147447412\"  will be \"2147447412-\"  in the reverse"
                    },
                    {
                        "username": "LMunique",
                        "content": "If it says O(1) space I can understand how to do that, but what does no \"extra space\" mean? If I use another integer to save the reversed number does it mean I'm still using extra space? Or when I simply am using an integer i for loop does it mean I have extra space?"
                    },
                    {
                        "username": "hp273",
                        "content": "O(1) does not mean extra space, it means the space you are using is independent of any other factor for example if you are using fixed size array then the size will not grow as i/p size grows."
                    },
                    {
                        "username": "blueshipswims",
                        "content": "by \\'extra space\\' what it means is that does the space required for all the cases change with case ? is the space required \\'variable\\' . If you reverse a number like 123 it yields 321 and this would consume the same memory when you reverse a number like 94729726 because both are integers BUT if you are using an array to store the digits and then reverse it or whatever then the memory required becomes variable because the individual digits have their own space in the array and thus costing EXTRA SPACE. Hope it helps. "
                    },
                    {
                        "username": "krishankanhaya_",
                        "content": "yes, i get your intension but O(1) due to this extra space which you needed for solving problem not grow as your input size varies that\\'s why it is O(1)."
                    },
                    {
                        "username": "haikeren61",
                        "content": "![image](https://assets.leetcode.com/users/images/e119a3a4-d25c-4396-b675-ad1ff971633f_1636894502.7062209.png)\\n"
                    },
                    {
                        "username": "CandyRobbery",
                        "content": "- Impossible to solve without extra space. Always need space for constants, variables or whatever. Recursion calls will take space for call stack.\\n\\n- If you are talking about constant space, then even declaring a string / stack will take constant space. (In fact at most (log(10, INT_MAX) * sizeof char), which is no worse than declaring an integer or more). Actually, even recursion will take constant space."
                    },
                    {
                        "username": "Sudheer474",
                        "content": "what the hell output is whats wrong with my code\\n   int rev=0;\\n        if(x<0){\\n            return false;\\n        }\\n        while(x!=0){\\n            rev= rev*10 + x%10;\\n            x=x/10;\\n        }\\n        if(x!=rev){\\n            return false;\\n        }\\n        return true;\\n\\nit gives wrong for 121 test case my output is false.."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "class Solution {\\n\\n        public boolean isPalindrome(int x) {\\n\\n    if (x < 0 || (x != 0 && x % 10 == 0)) {\\n        return false;\\n    }\\n\\n    int reversed = 0;\\n    int originalX = x;\\n\\n\\n    while (x > 0) {\\n        int digit = x % 10;\\n        reversed = reversed * 10 + digit;\\n        x /= 10;\\n    }\\n\\n\\n    return reversed == originalX;\\n}\\nUse this approach"
                    },
                    {
                        "username": "Hari_Seenu_7",
                        "content": "bro just omit last if and return statement then write return rev "
                    },
                    {
                        "username": "omprakash1353",
                        "content": "Bro you have changed the value of x then you tried to compare them it obviously goona return wrong ans"
                    },
                    {
                        "username": "biswassubhojit6831",
                        "content": "your rev val will be 121 and x will be \"0\" either change the code or start focusing more on every line to find the solution"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "a/c to your code \\nx is changing (i.e., in while loop) &\\nyou are comparing with x.\\nSo you\\'ve to just copy x with y\\nthen you\\'ve compare y with rev.\\nlike...\\n\\nint rev=0,y;\\ny=x;\\nif(x<0) return false;\\nwhile(x!=0){\\n       rev= rev*10 + x%10;\\n       x=x/10;\\n}\\nif(y != rev) return false;\\nreturn true;\\n\\nthanks :)"
                    },
                    {
                        "username": "ps_27",
                        "content": "acc to your code x is changing ....and you are comparing with x ."
                    },
                    {
                        "username": "Rishiraj_30",
                        "content": "just store the value of x before performing any operation x.\\n\\nint copy_of_x = x;\\nint rev=0;\\nif(x<0){\\nreturn false;\\n}\\nwhile(x!=0){\\nrev= rev*10 + x%10;\\nx=x/10;\\n}\\nif(copy_of_x !=rev){\\nreturn false;\\n}\\nreturn true;"
                    },
                    {
                        "username": "satyamgarg1308",
                        "content": "if(x<0) this is your problem , Program says the value of X can be negative or positive ."
                    },
                    {
                        "username": "MenaiAla",
                        "content": "[@sonu2231kumar](/sonu2231kumar) It does not work."
                    },
                    {
                        "username": "f_murshid_",
                        "content": "due to x is gradually decresing so first initialize temp variable and declear x in it and then compare rev and temp"
                    },
                    {
                        "username": "sonu2231kumar",
                        "content": "rev = (rev*10)+(x%10)\\nor \\nif(x==rev)\\n          true;\\nfalse;\\n"
                    },
                    {
                        "username": "harshitgaur600",
                        "content": "[@MayankRathore](/MayankRathore) x is changing in the loop as you did x=x/10. so try to make a temp variable to store x.\\n"
                    },
                    {
                        "username": "Bit-creatorCK",
                        "content": "[@MayankRathore](/MayankRathore) The Value of x changes in while loop and ends to 0 i.e. the condition of your while loop. To check whether it\\'s palindrome or not, you have to keep a copy of the value of x into another variable. \\n\\nJust think, if the value of x wasn\\'t changing in your while loop, then why did it not end up to infinite loop? Hope you got it now."
                    },
                    {
                        "username": "brahadeeshram",
                        "content": "last if condition has wrong condition and return statement also wrong "
                    },
                    {
                        "username": "HegdeRam",
                        "content": "keep original copy of X at initial step. int org = x;"
                    },
                    {
                        "username": "Sofiyan_M",
                        "content": "use temp to store value x . bcoz  x\\'s value changes through out the program from original one\\'s and use if(temp != rev)"
                    },
                    {
                        "username": "MayankRathore",
                        "content": " bool isPalindrome(int x) {\\n        long long int ans=0;\\n        while(x!=0)\\n        {\\n            int temp= x % 10;\\n           \\n            ans= (ans *10 )+ temp;\\n             x = x / 10;\\n        }\\n        if(ans==x){\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n\\nsame problem with my code also......."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    },
                    {
                        "username": "cherishlc",
                        "content": "If a number is a palindrome,,  its reverse equals itself.  \\nWhich means its reverse is NOT overflow!!!\\nSo that ' reversed integer might overflow'  doesn't matter at all, since a overlowed number isn't a palindrome.\\n\\n\\nNow the question becomes whether a NONE palindrome  == its reverse if we do NOT deal with overflow."
                    },
                    {
                        "username": "aivanilov",
                        "content": "Integer max = 2147483647 and Integer min = -2147483648. May be this is the case?"
                    },
                    {
                        "username": "run2explore99",
                        "content": "BEATS 97%\\n `class Solution {\\n    public boolean isPalindrome(int x) {\\n       int reverse=0;\\n        int temp = x;\\n\\n        if (x < 0) return false;\\n        while(temp != 0)   \\n        {  \\n        int remainder = temp % 10;  \\n        reverse = reverse * 10 + remainder;  \\n        temp = temp/10;  \\n        }  \\n        return reverse == x;\\n\\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1567692,
                "content": [
                    {
                        "username": "NowyKumara",
                        "content": "First convert x into string \\nx = str(x)\\nThen get reverse of x\\nn = x[::-1]\\nNow equate if they are palindrome then teh values must be same>\\nif x == n:\\n\\treturn True\\nelse:\\n\\treturn False.\\nThis is my first ever code that I wrote myself without any help and I am moved to tears right now seeing it compile\\nI am sorry but had to say it, thanks to the community for being there, it means a lot."
                    },
                    {
                        "username": "SivaKrishna-2002",
                        "content": "can you write in java \\n"
                    },
                    {
                        "username": "daliamukherjee216",
                        "content": "[@Moonbeam8773](/Moonbeam8773) i am getting the use of undeclared identifier \\'x_str\\' error. any solution?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Solution in java :\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}\\n"
                    },
                    {
                        "username": "jedi8380",
                        "content": "I feel you when you said without any help lol, it gives you a sense of relief from having imposter syndrome"
                    },
                    {
                        "username": "Moonbeam8773",
                        "content": "What you\\'re typing is essentially:\\nif True:\\n  return True\\nelse:\\n  return False\\n\\nJust do:\\nx_str = str(x)\\nreturn x_str == x_str[::-1]"
                    },
                    {
                        "username": "Aurof",
                        "content": "you didnt read the follow up, the real challenge is do it without converting the int to a string"
                    },
                    {
                        "username": "muvvalasairamakrishna",
                        "content": "i wrote the same but its giving an erroe\\n"
                    },
                    {
                        "username": "rellik",
                        "content": "I am wondering how the other people got their code ACed, the testing result of **\"-2147447412\"** seems a little odd to me. Should it be a palindromic number or not?\\n\\nNote: I believe the range of int is [-2147483648, 2147483647] and **\"-2147447412\"** is not overflowed, plus I handled the overflow cases already (test case \"-2147483648\" in particular).\\n\\n\\n11499 / 11502 test cases passed.\\n\\nStatus: Wrong Answer\\n\\n\\nInput:\\t-2147447412\\n\\nOutput:\\ttrue\\n\\nExpected:\\tfalse\\n\\n------------------------------------------------------------------\\nHere's my second question:\\n\\n**Why does the function take \"int\" as input instead of \"unsigned int\", when we assume all negative numbers are NOT palindromic.**"
                    },
                    {
                        "username": "rohanrambroo",
                        "content": "i think in your code you should do if x<0 return false because we can never accept -ve numbers"
                    },
                    {
                        "username": "mukulvagh11",
                        "content": "Input: x = -121\\nOutput: false\\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\\n\\n"
                    },
                    {
                        "username": "izzattulaev",
                        "content": "Input: -2147447412 and output must show \"false\" (in the description)\\n"
                    },
                    {
                        "username": "kojosimtema",
                        "content": "i believe all negative numbers are not palindrome because \"-\" is considered part of the number, and in the reverse you will get the \"-\"  at the end of the number. \\n\\nSo in this case \"-2147447412\"  will be \"2147447412-\"  in the reverse"
                    },
                    {
                        "username": "LMunique",
                        "content": "If it says O(1) space I can understand how to do that, but what does no \"extra space\" mean? If I use another integer to save the reversed number does it mean I'm still using extra space? Or when I simply am using an integer i for loop does it mean I have extra space?"
                    },
                    {
                        "username": "hp273",
                        "content": "O(1) does not mean extra space, it means the space you are using is independent of any other factor for example if you are using fixed size array then the size will not grow as i/p size grows."
                    },
                    {
                        "username": "blueshipswims",
                        "content": "by \\'extra space\\' what it means is that does the space required for all the cases change with case ? is the space required \\'variable\\' . If you reverse a number like 123 it yields 321 and this would consume the same memory when you reverse a number like 94729726 because both are integers BUT if you are using an array to store the digits and then reverse it or whatever then the memory required becomes variable because the individual digits have their own space in the array and thus costing EXTRA SPACE. Hope it helps. "
                    },
                    {
                        "username": "krishankanhaya_",
                        "content": "yes, i get your intension but O(1) due to this extra space which you needed for solving problem not grow as your input size varies that\\'s why it is O(1)."
                    },
                    {
                        "username": "haikeren61",
                        "content": "![image](https://assets.leetcode.com/users/images/e119a3a4-d25c-4396-b675-ad1ff971633f_1636894502.7062209.png)\\n"
                    },
                    {
                        "username": "CandyRobbery",
                        "content": "- Impossible to solve without extra space. Always need space for constants, variables or whatever. Recursion calls will take space for call stack.\\n\\n- If you are talking about constant space, then even declaring a string / stack will take constant space. (In fact at most (log(10, INT_MAX) * sizeof char), which is no worse than declaring an integer or more). Actually, even recursion will take constant space."
                    },
                    {
                        "username": "Sudheer474",
                        "content": "what the hell output is whats wrong with my code\\n   int rev=0;\\n        if(x<0){\\n            return false;\\n        }\\n        while(x!=0){\\n            rev= rev*10 + x%10;\\n            x=x/10;\\n        }\\n        if(x!=rev){\\n            return false;\\n        }\\n        return true;\\n\\nit gives wrong for 121 test case my output is false.."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "class Solution {\\n\\n        public boolean isPalindrome(int x) {\\n\\n    if (x < 0 || (x != 0 && x % 10 == 0)) {\\n        return false;\\n    }\\n\\n    int reversed = 0;\\n    int originalX = x;\\n\\n\\n    while (x > 0) {\\n        int digit = x % 10;\\n        reversed = reversed * 10 + digit;\\n        x /= 10;\\n    }\\n\\n\\n    return reversed == originalX;\\n}\\nUse this approach"
                    },
                    {
                        "username": "Hari_Seenu_7",
                        "content": "bro just omit last if and return statement then write return rev "
                    },
                    {
                        "username": "omprakash1353",
                        "content": "Bro you have changed the value of x then you tried to compare them it obviously goona return wrong ans"
                    },
                    {
                        "username": "biswassubhojit6831",
                        "content": "your rev val will be 121 and x will be \"0\" either change the code or start focusing more on every line to find the solution"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "a/c to your code \\nx is changing (i.e., in while loop) &\\nyou are comparing with x.\\nSo you\\'ve to just copy x with y\\nthen you\\'ve compare y with rev.\\nlike...\\n\\nint rev=0,y;\\ny=x;\\nif(x<0) return false;\\nwhile(x!=0){\\n       rev= rev*10 + x%10;\\n       x=x/10;\\n}\\nif(y != rev) return false;\\nreturn true;\\n\\nthanks :)"
                    },
                    {
                        "username": "ps_27",
                        "content": "acc to your code x is changing ....and you are comparing with x ."
                    },
                    {
                        "username": "Rishiraj_30",
                        "content": "just store the value of x before performing any operation x.\\n\\nint copy_of_x = x;\\nint rev=0;\\nif(x<0){\\nreturn false;\\n}\\nwhile(x!=0){\\nrev= rev*10 + x%10;\\nx=x/10;\\n}\\nif(copy_of_x !=rev){\\nreturn false;\\n}\\nreturn true;"
                    },
                    {
                        "username": "satyamgarg1308",
                        "content": "if(x<0) this is your problem , Program says the value of X can be negative or positive ."
                    },
                    {
                        "username": "MenaiAla",
                        "content": "[@sonu2231kumar](/sonu2231kumar) It does not work."
                    },
                    {
                        "username": "f_murshid_",
                        "content": "due to x is gradually decresing so first initialize temp variable and declear x in it and then compare rev and temp"
                    },
                    {
                        "username": "sonu2231kumar",
                        "content": "rev = (rev*10)+(x%10)\\nor \\nif(x==rev)\\n          true;\\nfalse;\\n"
                    },
                    {
                        "username": "harshitgaur600",
                        "content": "[@MayankRathore](/MayankRathore) x is changing in the loop as you did x=x/10. so try to make a temp variable to store x.\\n"
                    },
                    {
                        "username": "Bit-creatorCK",
                        "content": "[@MayankRathore](/MayankRathore) The Value of x changes in while loop and ends to 0 i.e. the condition of your while loop. To check whether it\\'s palindrome or not, you have to keep a copy of the value of x into another variable. \\n\\nJust think, if the value of x wasn\\'t changing in your while loop, then why did it not end up to infinite loop? Hope you got it now."
                    },
                    {
                        "username": "brahadeeshram",
                        "content": "last if condition has wrong condition and return statement also wrong "
                    },
                    {
                        "username": "HegdeRam",
                        "content": "keep original copy of X at initial step. int org = x;"
                    },
                    {
                        "username": "Sofiyan_M",
                        "content": "use temp to store value x . bcoz  x\\'s value changes through out the program from original one\\'s and use if(temp != rev)"
                    },
                    {
                        "username": "MayankRathore",
                        "content": " bool isPalindrome(int x) {\\n        long long int ans=0;\\n        while(x!=0)\\n        {\\n            int temp= x % 10;\\n           \\n            ans= (ans *10 )+ temp;\\n             x = x / 10;\\n        }\\n        if(ans==x){\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n\\nsame problem with my code also......."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    },
                    {
                        "username": "cherishlc",
                        "content": "If a number is a palindrome,,  its reverse equals itself.  \\nWhich means its reverse is NOT overflow!!!\\nSo that ' reversed integer might overflow'  doesn't matter at all, since a overlowed number isn't a palindrome.\\n\\n\\nNow the question becomes whether a NONE palindrome  == its reverse if we do NOT deal with overflow."
                    },
                    {
                        "username": "aivanilov",
                        "content": "Integer max = 2147483647 and Integer min = -2147483648. May be this is the case?"
                    },
                    {
                        "username": "run2explore99",
                        "content": "BEATS 97%\\n `class Solution {\\n    public boolean isPalindrome(int x) {\\n       int reverse=0;\\n        int temp = x;\\n\\n        if (x < 0) return false;\\n        while(temp != 0)   \\n        {  \\n        int remainder = temp % 10;  \\n        reverse = reverse * 10 + remainder;  \\n        temp = temp/10;  \\n        }  \\n        return reverse == x;\\n\\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1564646,
                "content": [
                    {
                        "username": "NowyKumara",
                        "content": "First convert x into string \\nx = str(x)\\nThen get reverse of x\\nn = x[::-1]\\nNow equate if they are palindrome then teh values must be same>\\nif x == n:\\n\\treturn True\\nelse:\\n\\treturn False.\\nThis is my first ever code that I wrote myself without any help and I am moved to tears right now seeing it compile\\nI am sorry but had to say it, thanks to the community for being there, it means a lot."
                    },
                    {
                        "username": "SivaKrishna-2002",
                        "content": "can you write in java \\n"
                    },
                    {
                        "username": "daliamukherjee216",
                        "content": "[@Moonbeam8773](/Moonbeam8773) i am getting the use of undeclared identifier \\'x_str\\' error. any solution?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Solution in java :\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}\\n"
                    },
                    {
                        "username": "jedi8380",
                        "content": "I feel you when you said without any help lol, it gives you a sense of relief from having imposter syndrome"
                    },
                    {
                        "username": "Moonbeam8773",
                        "content": "What you\\'re typing is essentially:\\nif True:\\n  return True\\nelse:\\n  return False\\n\\nJust do:\\nx_str = str(x)\\nreturn x_str == x_str[::-1]"
                    },
                    {
                        "username": "Aurof",
                        "content": "you didnt read the follow up, the real challenge is do it without converting the int to a string"
                    },
                    {
                        "username": "muvvalasairamakrishna",
                        "content": "i wrote the same but its giving an erroe\\n"
                    },
                    {
                        "username": "rellik",
                        "content": "I am wondering how the other people got their code ACed, the testing result of **\"-2147447412\"** seems a little odd to me. Should it be a palindromic number or not?\\n\\nNote: I believe the range of int is [-2147483648, 2147483647] and **\"-2147447412\"** is not overflowed, plus I handled the overflow cases already (test case \"-2147483648\" in particular).\\n\\n\\n11499 / 11502 test cases passed.\\n\\nStatus: Wrong Answer\\n\\n\\nInput:\\t-2147447412\\n\\nOutput:\\ttrue\\n\\nExpected:\\tfalse\\n\\n------------------------------------------------------------------\\nHere's my second question:\\n\\n**Why does the function take \"int\" as input instead of \"unsigned int\", when we assume all negative numbers are NOT palindromic.**"
                    },
                    {
                        "username": "rohanrambroo",
                        "content": "i think in your code you should do if x<0 return false because we can never accept -ve numbers"
                    },
                    {
                        "username": "mukulvagh11",
                        "content": "Input: x = -121\\nOutput: false\\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\\n\\n"
                    },
                    {
                        "username": "izzattulaev",
                        "content": "Input: -2147447412 and output must show \"false\" (in the description)\\n"
                    },
                    {
                        "username": "kojosimtema",
                        "content": "i believe all negative numbers are not palindrome because \"-\" is considered part of the number, and in the reverse you will get the \"-\"  at the end of the number. \\n\\nSo in this case \"-2147447412\"  will be \"2147447412-\"  in the reverse"
                    },
                    {
                        "username": "LMunique",
                        "content": "If it says O(1) space I can understand how to do that, but what does no \"extra space\" mean? If I use another integer to save the reversed number does it mean I'm still using extra space? Or when I simply am using an integer i for loop does it mean I have extra space?"
                    },
                    {
                        "username": "hp273",
                        "content": "O(1) does not mean extra space, it means the space you are using is independent of any other factor for example if you are using fixed size array then the size will not grow as i/p size grows."
                    },
                    {
                        "username": "blueshipswims",
                        "content": "by \\'extra space\\' what it means is that does the space required for all the cases change with case ? is the space required \\'variable\\' . If you reverse a number like 123 it yields 321 and this would consume the same memory when you reverse a number like 94729726 because both are integers BUT if you are using an array to store the digits and then reverse it or whatever then the memory required becomes variable because the individual digits have their own space in the array and thus costing EXTRA SPACE. Hope it helps. "
                    },
                    {
                        "username": "krishankanhaya_",
                        "content": "yes, i get your intension but O(1) due to this extra space which you needed for solving problem not grow as your input size varies that\\'s why it is O(1)."
                    },
                    {
                        "username": "haikeren61",
                        "content": "![image](https://assets.leetcode.com/users/images/e119a3a4-d25c-4396-b675-ad1ff971633f_1636894502.7062209.png)\\n"
                    },
                    {
                        "username": "CandyRobbery",
                        "content": "- Impossible to solve without extra space. Always need space for constants, variables or whatever. Recursion calls will take space for call stack.\\n\\n- If you are talking about constant space, then even declaring a string / stack will take constant space. (In fact at most (log(10, INT_MAX) * sizeof char), which is no worse than declaring an integer or more). Actually, even recursion will take constant space."
                    },
                    {
                        "username": "Sudheer474",
                        "content": "what the hell output is whats wrong with my code\\n   int rev=0;\\n        if(x<0){\\n            return false;\\n        }\\n        while(x!=0){\\n            rev= rev*10 + x%10;\\n            x=x/10;\\n        }\\n        if(x!=rev){\\n            return false;\\n        }\\n        return true;\\n\\nit gives wrong for 121 test case my output is false.."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "class Solution {\\n\\n        public boolean isPalindrome(int x) {\\n\\n    if (x < 0 || (x != 0 && x % 10 == 0)) {\\n        return false;\\n    }\\n\\n    int reversed = 0;\\n    int originalX = x;\\n\\n\\n    while (x > 0) {\\n        int digit = x % 10;\\n        reversed = reversed * 10 + digit;\\n        x /= 10;\\n    }\\n\\n\\n    return reversed == originalX;\\n}\\nUse this approach"
                    },
                    {
                        "username": "Hari_Seenu_7",
                        "content": "bro just omit last if and return statement then write return rev "
                    },
                    {
                        "username": "omprakash1353",
                        "content": "Bro you have changed the value of x then you tried to compare them it obviously goona return wrong ans"
                    },
                    {
                        "username": "biswassubhojit6831",
                        "content": "your rev val will be 121 and x will be \"0\" either change the code or start focusing more on every line to find the solution"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "a/c to your code \\nx is changing (i.e., in while loop) &\\nyou are comparing with x.\\nSo you\\'ve to just copy x with y\\nthen you\\'ve compare y with rev.\\nlike...\\n\\nint rev=0,y;\\ny=x;\\nif(x<0) return false;\\nwhile(x!=0){\\n       rev= rev*10 + x%10;\\n       x=x/10;\\n}\\nif(y != rev) return false;\\nreturn true;\\n\\nthanks :)"
                    },
                    {
                        "username": "ps_27",
                        "content": "acc to your code x is changing ....and you are comparing with x ."
                    },
                    {
                        "username": "Rishiraj_30",
                        "content": "just store the value of x before performing any operation x.\\n\\nint copy_of_x = x;\\nint rev=0;\\nif(x<0){\\nreturn false;\\n}\\nwhile(x!=0){\\nrev= rev*10 + x%10;\\nx=x/10;\\n}\\nif(copy_of_x !=rev){\\nreturn false;\\n}\\nreturn true;"
                    },
                    {
                        "username": "satyamgarg1308",
                        "content": "if(x<0) this is your problem , Program says the value of X can be negative or positive ."
                    },
                    {
                        "username": "MenaiAla",
                        "content": "[@sonu2231kumar](/sonu2231kumar) It does not work."
                    },
                    {
                        "username": "f_murshid_",
                        "content": "due to x is gradually decresing so first initialize temp variable and declear x in it and then compare rev and temp"
                    },
                    {
                        "username": "sonu2231kumar",
                        "content": "rev = (rev*10)+(x%10)\\nor \\nif(x==rev)\\n          true;\\nfalse;\\n"
                    },
                    {
                        "username": "harshitgaur600",
                        "content": "[@MayankRathore](/MayankRathore) x is changing in the loop as you did x=x/10. so try to make a temp variable to store x.\\n"
                    },
                    {
                        "username": "Bit-creatorCK",
                        "content": "[@MayankRathore](/MayankRathore) The Value of x changes in while loop and ends to 0 i.e. the condition of your while loop. To check whether it\\'s palindrome or not, you have to keep a copy of the value of x into another variable. \\n\\nJust think, if the value of x wasn\\'t changing in your while loop, then why did it not end up to infinite loop? Hope you got it now."
                    },
                    {
                        "username": "brahadeeshram",
                        "content": "last if condition has wrong condition and return statement also wrong "
                    },
                    {
                        "username": "HegdeRam",
                        "content": "keep original copy of X at initial step. int org = x;"
                    },
                    {
                        "username": "Sofiyan_M",
                        "content": "use temp to store value x . bcoz  x\\'s value changes through out the program from original one\\'s and use if(temp != rev)"
                    },
                    {
                        "username": "MayankRathore",
                        "content": " bool isPalindrome(int x) {\\n        long long int ans=0;\\n        while(x!=0)\\n        {\\n            int temp= x % 10;\\n           \\n            ans= (ans *10 )+ temp;\\n             x = x / 10;\\n        }\\n        if(ans==x){\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n\\nsame problem with my code also......."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    },
                    {
                        "username": "cherishlc",
                        "content": "If a number is a palindrome,,  its reverse equals itself.  \\nWhich means its reverse is NOT overflow!!!\\nSo that ' reversed integer might overflow'  doesn't matter at all, since a overlowed number isn't a palindrome.\\n\\n\\nNow the question becomes whether a NONE palindrome  == its reverse if we do NOT deal with overflow."
                    },
                    {
                        "username": "aivanilov",
                        "content": "Integer max = 2147483647 and Integer min = -2147483648. May be this is the case?"
                    },
                    {
                        "username": "run2explore99",
                        "content": "BEATS 97%\\n `class Solution {\\n    public boolean isPalindrome(int x) {\\n       int reverse=0;\\n        int temp = x;\\n\\n        if (x < 0) return false;\\n        while(temp != 0)   \\n        {  \\n        int remainder = temp % 10;  \\n        reverse = reverse * 10 + remainder;  \\n        temp = temp/10;  \\n        }  \\n        return reverse == x;\\n\\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1711906,
                "content": [
                    {
                        "username": "NowyKumara",
                        "content": "First convert x into string \\nx = str(x)\\nThen get reverse of x\\nn = x[::-1]\\nNow equate if they are palindrome then teh values must be same>\\nif x == n:\\n\\treturn True\\nelse:\\n\\treturn False.\\nThis is my first ever code that I wrote myself without any help and I am moved to tears right now seeing it compile\\nI am sorry but had to say it, thanks to the community for being there, it means a lot."
                    },
                    {
                        "username": "SivaKrishna-2002",
                        "content": "can you write in java \\n"
                    },
                    {
                        "username": "daliamukherjee216",
                        "content": "[@Moonbeam8773](/Moonbeam8773) i am getting the use of undeclared identifier \\'x_str\\' error. any solution?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Solution in java :\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}\\n"
                    },
                    {
                        "username": "jedi8380",
                        "content": "I feel you when you said without any help lol, it gives you a sense of relief from having imposter syndrome"
                    },
                    {
                        "username": "Moonbeam8773",
                        "content": "What you\\'re typing is essentially:\\nif True:\\n  return True\\nelse:\\n  return False\\n\\nJust do:\\nx_str = str(x)\\nreturn x_str == x_str[::-1]"
                    },
                    {
                        "username": "Aurof",
                        "content": "you didnt read the follow up, the real challenge is do it without converting the int to a string"
                    },
                    {
                        "username": "muvvalasairamakrishna",
                        "content": "i wrote the same but its giving an erroe\\n"
                    },
                    {
                        "username": "rellik",
                        "content": "I am wondering how the other people got their code ACed, the testing result of **\"-2147447412\"** seems a little odd to me. Should it be a palindromic number or not?\\n\\nNote: I believe the range of int is [-2147483648, 2147483647] and **\"-2147447412\"** is not overflowed, plus I handled the overflow cases already (test case \"-2147483648\" in particular).\\n\\n\\n11499 / 11502 test cases passed.\\n\\nStatus: Wrong Answer\\n\\n\\nInput:\\t-2147447412\\n\\nOutput:\\ttrue\\n\\nExpected:\\tfalse\\n\\n------------------------------------------------------------------\\nHere's my second question:\\n\\n**Why does the function take \"int\" as input instead of \"unsigned int\", when we assume all negative numbers are NOT palindromic.**"
                    },
                    {
                        "username": "rohanrambroo",
                        "content": "i think in your code you should do if x<0 return false because we can never accept -ve numbers"
                    },
                    {
                        "username": "mukulvagh11",
                        "content": "Input: x = -121\\nOutput: false\\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\\n\\n"
                    },
                    {
                        "username": "izzattulaev",
                        "content": "Input: -2147447412 and output must show \"false\" (in the description)\\n"
                    },
                    {
                        "username": "kojosimtema",
                        "content": "i believe all negative numbers are not palindrome because \"-\" is considered part of the number, and in the reverse you will get the \"-\"  at the end of the number. \\n\\nSo in this case \"-2147447412\"  will be \"2147447412-\"  in the reverse"
                    },
                    {
                        "username": "LMunique",
                        "content": "If it says O(1) space I can understand how to do that, but what does no \"extra space\" mean? If I use another integer to save the reversed number does it mean I'm still using extra space? Or when I simply am using an integer i for loop does it mean I have extra space?"
                    },
                    {
                        "username": "hp273",
                        "content": "O(1) does not mean extra space, it means the space you are using is independent of any other factor for example if you are using fixed size array then the size will not grow as i/p size grows."
                    },
                    {
                        "username": "blueshipswims",
                        "content": "by \\'extra space\\' what it means is that does the space required for all the cases change with case ? is the space required \\'variable\\' . If you reverse a number like 123 it yields 321 and this would consume the same memory when you reverse a number like 94729726 because both are integers BUT if you are using an array to store the digits and then reverse it or whatever then the memory required becomes variable because the individual digits have their own space in the array and thus costing EXTRA SPACE. Hope it helps. "
                    },
                    {
                        "username": "krishankanhaya_",
                        "content": "yes, i get your intension but O(1) due to this extra space which you needed for solving problem not grow as your input size varies that\\'s why it is O(1)."
                    },
                    {
                        "username": "haikeren61",
                        "content": "![image](https://assets.leetcode.com/users/images/e119a3a4-d25c-4396-b675-ad1ff971633f_1636894502.7062209.png)\\n"
                    },
                    {
                        "username": "CandyRobbery",
                        "content": "- Impossible to solve without extra space. Always need space for constants, variables or whatever. Recursion calls will take space for call stack.\\n\\n- If you are talking about constant space, then even declaring a string / stack will take constant space. (In fact at most (log(10, INT_MAX) * sizeof char), which is no worse than declaring an integer or more). Actually, even recursion will take constant space."
                    },
                    {
                        "username": "Sudheer474",
                        "content": "what the hell output is whats wrong with my code\\n   int rev=0;\\n        if(x<0){\\n            return false;\\n        }\\n        while(x!=0){\\n            rev= rev*10 + x%10;\\n            x=x/10;\\n        }\\n        if(x!=rev){\\n            return false;\\n        }\\n        return true;\\n\\nit gives wrong for 121 test case my output is false.."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "class Solution {\\n\\n        public boolean isPalindrome(int x) {\\n\\n    if (x < 0 || (x != 0 && x % 10 == 0)) {\\n        return false;\\n    }\\n\\n    int reversed = 0;\\n    int originalX = x;\\n\\n\\n    while (x > 0) {\\n        int digit = x % 10;\\n        reversed = reversed * 10 + digit;\\n        x /= 10;\\n    }\\n\\n\\n    return reversed == originalX;\\n}\\nUse this approach"
                    },
                    {
                        "username": "Hari_Seenu_7",
                        "content": "bro just omit last if and return statement then write return rev "
                    },
                    {
                        "username": "omprakash1353",
                        "content": "Bro you have changed the value of x then you tried to compare them it obviously goona return wrong ans"
                    },
                    {
                        "username": "biswassubhojit6831",
                        "content": "your rev val will be 121 and x will be \"0\" either change the code or start focusing more on every line to find the solution"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "a/c to your code \\nx is changing (i.e., in while loop) &\\nyou are comparing with x.\\nSo you\\'ve to just copy x with y\\nthen you\\'ve compare y with rev.\\nlike...\\n\\nint rev=0,y;\\ny=x;\\nif(x<0) return false;\\nwhile(x!=0){\\n       rev= rev*10 + x%10;\\n       x=x/10;\\n}\\nif(y != rev) return false;\\nreturn true;\\n\\nthanks :)"
                    },
                    {
                        "username": "ps_27",
                        "content": "acc to your code x is changing ....and you are comparing with x ."
                    },
                    {
                        "username": "Rishiraj_30",
                        "content": "just store the value of x before performing any operation x.\\n\\nint copy_of_x = x;\\nint rev=0;\\nif(x<0){\\nreturn false;\\n}\\nwhile(x!=0){\\nrev= rev*10 + x%10;\\nx=x/10;\\n}\\nif(copy_of_x !=rev){\\nreturn false;\\n}\\nreturn true;"
                    },
                    {
                        "username": "satyamgarg1308",
                        "content": "if(x<0) this is your problem , Program says the value of X can be negative or positive ."
                    },
                    {
                        "username": "MenaiAla",
                        "content": "[@sonu2231kumar](/sonu2231kumar) It does not work."
                    },
                    {
                        "username": "f_murshid_",
                        "content": "due to x is gradually decresing so first initialize temp variable and declear x in it and then compare rev and temp"
                    },
                    {
                        "username": "sonu2231kumar",
                        "content": "rev = (rev*10)+(x%10)\\nor \\nif(x==rev)\\n          true;\\nfalse;\\n"
                    },
                    {
                        "username": "harshitgaur600",
                        "content": "[@MayankRathore](/MayankRathore) x is changing in the loop as you did x=x/10. so try to make a temp variable to store x.\\n"
                    },
                    {
                        "username": "Bit-creatorCK",
                        "content": "[@MayankRathore](/MayankRathore) The Value of x changes in while loop and ends to 0 i.e. the condition of your while loop. To check whether it\\'s palindrome or not, you have to keep a copy of the value of x into another variable. \\n\\nJust think, if the value of x wasn\\'t changing in your while loop, then why did it not end up to infinite loop? Hope you got it now."
                    },
                    {
                        "username": "brahadeeshram",
                        "content": "last if condition has wrong condition and return statement also wrong "
                    },
                    {
                        "username": "HegdeRam",
                        "content": "keep original copy of X at initial step. int org = x;"
                    },
                    {
                        "username": "Sofiyan_M",
                        "content": "use temp to store value x . bcoz  x\\'s value changes through out the program from original one\\'s and use if(temp != rev)"
                    },
                    {
                        "username": "MayankRathore",
                        "content": " bool isPalindrome(int x) {\\n        long long int ans=0;\\n        while(x!=0)\\n        {\\n            int temp= x % 10;\\n           \\n            ans= (ans *10 )+ temp;\\n             x = x / 10;\\n        }\\n        if(ans==x){\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n\\nsame problem with my code also......."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    },
                    {
                        "username": "cherishlc",
                        "content": "If a number is a palindrome,,  its reverse equals itself.  \\nWhich means its reverse is NOT overflow!!!\\nSo that ' reversed integer might overflow'  doesn't matter at all, since a overlowed number isn't a palindrome.\\n\\n\\nNow the question becomes whether a NONE palindrome  == its reverse if we do NOT deal with overflow."
                    },
                    {
                        "username": "aivanilov",
                        "content": "Integer max = 2147483647 and Integer min = -2147483648. May be this is the case?"
                    },
                    {
                        "username": "run2explore99",
                        "content": "BEATS 97%\\n `class Solution {\\n    public boolean isPalindrome(int x) {\\n       int reverse=0;\\n        int temp = x;\\n\\n        if (x < 0) return false;\\n        while(temp != 0)   \\n        {  \\n        int remainder = temp % 10;  \\n        reverse = reverse * 10 + remainder;  \\n        temp = temp/10;  \\n        }  \\n        return reverse == x;\\n\\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1565275,
                "content": [
                    {
                        "username": "NowyKumara",
                        "content": "First convert x into string \\nx = str(x)\\nThen get reverse of x\\nn = x[::-1]\\nNow equate if they are palindrome then teh values must be same>\\nif x == n:\\n\\treturn True\\nelse:\\n\\treturn False.\\nThis is my first ever code that I wrote myself without any help and I am moved to tears right now seeing it compile\\nI am sorry but had to say it, thanks to the community for being there, it means a lot."
                    },
                    {
                        "username": "SivaKrishna-2002",
                        "content": "can you write in java \\n"
                    },
                    {
                        "username": "daliamukherjee216",
                        "content": "[@Moonbeam8773](/Moonbeam8773) i am getting the use of undeclared identifier \\'x_str\\' error. any solution?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Solution in java :\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}\\n"
                    },
                    {
                        "username": "jedi8380",
                        "content": "I feel you when you said without any help lol, it gives you a sense of relief from having imposter syndrome"
                    },
                    {
                        "username": "Moonbeam8773",
                        "content": "What you\\'re typing is essentially:\\nif True:\\n  return True\\nelse:\\n  return False\\n\\nJust do:\\nx_str = str(x)\\nreturn x_str == x_str[::-1]"
                    },
                    {
                        "username": "Aurof",
                        "content": "you didnt read the follow up, the real challenge is do it without converting the int to a string"
                    },
                    {
                        "username": "muvvalasairamakrishna",
                        "content": "i wrote the same but its giving an erroe\\n"
                    },
                    {
                        "username": "rellik",
                        "content": "I am wondering how the other people got their code ACed, the testing result of **\"-2147447412\"** seems a little odd to me. Should it be a palindromic number or not?\\n\\nNote: I believe the range of int is [-2147483648, 2147483647] and **\"-2147447412\"** is not overflowed, plus I handled the overflow cases already (test case \"-2147483648\" in particular).\\n\\n\\n11499 / 11502 test cases passed.\\n\\nStatus: Wrong Answer\\n\\n\\nInput:\\t-2147447412\\n\\nOutput:\\ttrue\\n\\nExpected:\\tfalse\\n\\n------------------------------------------------------------------\\nHere's my second question:\\n\\n**Why does the function take \"int\" as input instead of \"unsigned int\", when we assume all negative numbers are NOT palindromic.**"
                    },
                    {
                        "username": "rohanrambroo",
                        "content": "i think in your code you should do if x<0 return false because we can never accept -ve numbers"
                    },
                    {
                        "username": "mukulvagh11",
                        "content": "Input: x = -121\\nOutput: false\\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\\n\\n"
                    },
                    {
                        "username": "izzattulaev",
                        "content": "Input: -2147447412 and output must show \"false\" (in the description)\\n"
                    },
                    {
                        "username": "kojosimtema",
                        "content": "i believe all negative numbers are not palindrome because \"-\" is considered part of the number, and in the reverse you will get the \"-\"  at the end of the number. \\n\\nSo in this case \"-2147447412\"  will be \"2147447412-\"  in the reverse"
                    },
                    {
                        "username": "LMunique",
                        "content": "If it says O(1) space I can understand how to do that, but what does no \"extra space\" mean? If I use another integer to save the reversed number does it mean I'm still using extra space? Or when I simply am using an integer i for loop does it mean I have extra space?"
                    },
                    {
                        "username": "hp273",
                        "content": "O(1) does not mean extra space, it means the space you are using is independent of any other factor for example if you are using fixed size array then the size will not grow as i/p size grows."
                    },
                    {
                        "username": "blueshipswims",
                        "content": "by \\'extra space\\' what it means is that does the space required for all the cases change with case ? is the space required \\'variable\\' . If you reverse a number like 123 it yields 321 and this would consume the same memory when you reverse a number like 94729726 because both are integers BUT if you are using an array to store the digits and then reverse it or whatever then the memory required becomes variable because the individual digits have their own space in the array and thus costing EXTRA SPACE. Hope it helps. "
                    },
                    {
                        "username": "krishankanhaya_",
                        "content": "yes, i get your intension but O(1) due to this extra space which you needed for solving problem not grow as your input size varies that\\'s why it is O(1)."
                    },
                    {
                        "username": "haikeren61",
                        "content": "![image](https://assets.leetcode.com/users/images/e119a3a4-d25c-4396-b675-ad1ff971633f_1636894502.7062209.png)\\n"
                    },
                    {
                        "username": "CandyRobbery",
                        "content": "- Impossible to solve without extra space. Always need space for constants, variables or whatever. Recursion calls will take space for call stack.\\n\\n- If you are talking about constant space, then even declaring a string / stack will take constant space. (In fact at most (log(10, INT_MAX) * sizeof char), which is no worse than declaring an integer or more). Actually, even recursion will take constant space."
                    },
                    {
                        "username": "Sudheer474",
                        "content": "what the hell output is whats wrong with my code\\n   int rev=0;\\n        if(x<0){\\n            return false;\\n        }\\n        while(x!=0){\\n            rev= rev*10 + x%10;\\n            x=x/10;\\n        }\\n        if(x!=rev){\\n            return false;\\n        }\\n        return true;\\n\\nit gives wrong for 121 test case my output is false.."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "class Solution {\\n\\n        public boolean isPalindrome(int x) {\\n\\n    if (x < 0 || (x != 0 && x % 10 == 0)) {\\n        return false;\\n    }\\n\\n    int reversed = 0;\\n    int originalX = x;\\n\\n\\n    while (x > 0) {\\n        int digit = x % 10;\\n        reversed = reversed * 10 + digit;\\n        x /= 10;\\n    }\\n\\n\\n    return reversed == originalX;\\n}\\nUse this approach"
                    },
                    {
                        "username": "Hari_Seenu_7",
                        "content": "bro just omit last if and return statement then write return rev "
                    },
                    {
                        "username": "omprakash1353",
                        "content": "Bro you have changed the value of x then you tried to compare them it obviously goona return wrong ans"
                    },
                    {
                        "username": "biswassubhojit6831",
                        "content": "your rev val will be 121 and x will be \"0\" either change the code or start focusing more on every line to find the solution"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "a/c to your code \\nx is changing (i.e., in while loop) &\\nyou are comparing with x.\\nSo you\\'ve to just copy x with y\\nthen you\\'ve compare y with rev.\\nlike...\\n\\nint rev=0,y;\\ny=x;\\nif(x<0) return false;\\nwhile(x!=0){\\n       rev= rev*10 + x%10;\\n       x=x/10;\\n}\\nif(y != rev) return false;\\nreturn true;\\n\\nthanks :)"
                    },
                    {
                        "username": "ps_27",
                        "content": "acc to your code x is changing ....and you are comparing with x ."
                    },
                    {
                        "username": "Rishiraj_30",
                        "content": "just store the value of x before performing any operation x.\\n\\nint copy_of_x = x;\\nint rev=0;\\nif(x<0){\\nreturn false;\\n}\\nwhile(x!=0){\\nrev= rev*10 + x%10;\\nx=x/10;\\n}\\nif(copy_of_x !=rev){\\nreturn false;\\n}\\nreturn true;"
                    },
                    {
                        "username": "satyamgarg1308",
                        "content": "if(x<0) this is your problem , Program says the value of X can be negative or positive ."
                    },
                    {
                        "username": "MenaiAla",
                        "content": "[@sonu2231kumar](/sonu2231kumar) It does not work."
                    },
                    {
                        "username": "f_murshid_",
                        "content": "due to x is gradually decresing so first initialize temp variable and declear x in it and then compare rev and temp"
                    },
                    {
                        "username": "sonu2231kumar",
                        "content": "rev = (rev*10)+(x%10)\\nor \\nif(x==rev)\\n          true;\\nfalse;\\n"
                    },
                    {
                        "username": "harshitgaur600",
                        "content": "[@MayankRathore](/MayankRathore) x is changing in the loop as you did x=x/10. so try to make a temp variable to store x.\\n"
                    },
                    {
                        "username": "Bit-creatorCK",
                        "content": "[@MayankRathore](/MayankRathore) The Value of x changes in while loop and ends to 0 i.e. the condition of your while loop. To check whether it\\'s palindrome or not, you have to keep a copy of the value of x into another variable. \\n\\nJust think, if the value of x wasn\\'t changing in your while loop, then why did it not end up to infinite loop? Hope you got it now."
                    },
                    {
                        "username": "brahadeeshram",
                        "content": "last if condition has wrong condition and return statement also wrong "
                    },
                    {
                        "username": "HegdeRam",
                        "content": "keep original copy of X at initial step. int org = x;"
                    },
                    {
                        "username": "Sofiyan_M",
                        "content": "use temp to store value x . bcoz  x\\'s value changes through out the program from original one\\'s and use if(temp != rev)"
                    },
                    {
                        "username": "MayankRathore",
                        "content": " bool isPalindrome(int x) {\\n        long long int ans=0;\\n        while(x!=0)\\n        {\\n            int temp= x % 10;\\n           \\n            ans= (ans *10 )+ temp;\\n             x = x / 10;\\n        }\\n        if(ans==x){\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n\\nsame problem with my code also......."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    },
                    {
                        "username": "cherishlc",
                        "content": "If a number is a palindrome,,  its reverse equals itself.  \\nWhich means its reverse is NOT overflow!!!\\nSo that ' reversed integer might overflow'  doesn't matter at all, since a overlowed number isn't a palindrome.\\n\\n\\nNow the question becomes whether a NONE palindrome  == its reverse if we do NOT deal with overflow."
                    },
                    {
                        "username": "aivanilov",
                        "content": "Integer max = 2147483647 and Integer min = -2147483648. May be this is the case?"
                    },
                    {
                        "username": "run2explore99",
                        "content": "BEATS 97%\\n `class Solution {\\n    public boolean isPalindrome(int x) {\\n       int reverse=0;\\n        int temp = x;\\n\\n        if (x < 0) return false;\\n        while(temp != 0)   \\n        {  \\n        int remainder = temp % 10;  \\n        reverse = reverse * 10 + remainder;  \\n        temp = temp/10;  \\n        }  \\n        return reverse == x;\\n\\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1566467,
                "content": [
                    {
                        "username": "NowyKumara",
                        "content": "First convert x into string \\nx = str(x)\\nThen get reverse of x\\nn = x[::-1]\\nNow equate if they are palindrome then teh values must be same>\\nif x == n:\\n\\treturn True\\nelse:\\n\\treturn False.\\nThis is my first ever code that I wrote myself without any help and I am moved to tears right now seeing it compile\\nI am sorry but had to say it, thanks to the community for being there, it means a lot."
                    },
                    {
                        "username": "SivaKrishna-2002",
                        "content": "can you write in java \\n"
                    },
                    {
                        "username": "daliamukherjee216",
                        "content": "[@Moonbeam8773](/Moonbeam8773) i am getting the use of undeclared identifier \\'x_str\\' error. any solution?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Solution in java :\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}\\n"
                    },
                    {
                        "username": "jedi8380",
                        "content": "I feel you when you said without any help lol, it gives you a sense of relief from having imposter syndrome"
                    },
                    {
                        "username": "Moonbeam8773",
                        "content": "What you\\'re typing is essentially:\\nif True:\\n  return True\\nelse:\\n  return False\\n\\nJust do:\\nx_str = str(x)\\nreturn x_str == x_str[::-1]"
                    },
                    {
                        "username": "Aurof",
                        "content": "you didnt read the follow up, the real challenge is do it without converting the int to a string"
                    },
                    {
                        "username": "muvvalasairamakrishna",
                        "content": "i wrote the same but its giving an erroe\\n"
                    },
                    {
                        "username": "rellik",
                        "content": "I am wondering how the other people got their code ACed, the testing result of **\"-2147447412\"** seems a little odd to me. Should it be a palindromic number or not?\\n\\nNote: I believe the range of int is [-2147483648, 2147483647] and **\"-2147447412\"** is not overflowed, plus I handled the overflow cases already (test case \"-2147483648\" in particular).\\n\\n\\n11499 / 11502 test cases passed.\\n\\nStatus: Wrong Answer\\n\\n\\nInput:\\t-2147447412\\n\\nOutput:\\ttrue\\n\\nExpected:\\tfalse\\n\\n------------------------------------------------------------------\\nHere's my second question:\\n\\n**Why does the function take \"int\" as input instead of \"unsigned int\", when we assume all negative numbers are NOT palindromic.**"
                    },
                    {
                        "username": "rohanrambroo",
                        "content": "i think in your code you should do if x<0 return false because we can never accept -ve numbers"
                    },
                    {
                        "username": "mukulvagh11",
                        "content": "Input: x = -121\\nOutput: false\\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\\n\\n"
                    },
                    {
                        "username": "izzattulaev",
                        "content": "Input: -2147447412 and output must show \"false\" (in the description)\\n"
                    },
                    {
                        "username": "kojosimtema",
                        "content": "i believe all negative numbers are not palindrome because \"-\" is considered part of the number, and in the reverse you will get the \"-\"  at the end of the number. \\n\\nSo in this case \"-2147447412\"  will be \"2147447412-\"  in the reverse"
                    },
                    {
                        "username": "LMunique",
                        "content": "If it says O(1) space I can understand how to do that, but what does no \"extra space\" mean? If I use another integer to save the reversed number does it mean I'm still using extra space? Or when I simply am using an integer i for loop does it mean I have extra space?"
                    },
                    {
                        "username": "hp273",
                        "content": "O(1) does not mean extra space, it means the space you are using is independent of any other factor for example if you are using fixed size array then the size will not grow as i/p size grows."
                    },
                    {
                        "username": "blueshipswims",
                        "content": "by \\'extra space\\' what it means is that does the space required for all the cases change with case ? is the space required \\'variable\\' . If you reverse a number like 123 it yields 321 and this would consume the same memory when you reverse a number like 94729726 because both are integers BUT if you are using an array to store the digits and then reverse it or whatever then the memory required becomes variable because the individual digits have their own space in the array and thus costing EXTRA SPACE. Hope it helps. "
                    },
                    {
                        "username": "krishankanhaya_",
                        "content": "yes, i get your intension but O(1) due to this extra space which you needed for solving problem not grow as your input size varies that\\'s why it is O(1)."
                    },
                    {
                        "username": "haikeren61",
                        "content": "![image](https://assets.leetcode.com/users/images/e119a3a4-d25c-4396-b675-ad1ff971633f_1636894502.7062209.png)\\n"
                    },
                    {
                        "username": "CandyRobbery",
                        "content": "- Impossible to solve without extra space. Always need space for constants, variables or whatever. Recursion calls will take space for call stack.\\n\\n- If you are talking about constant space, then even declaring a string / stack will take constant space. (In fact at most (log(10, INT_MAX) * sizeof char), which is no worse than declaring an integer or more). Actually, even recursion will take constant space."
                    },
                    {
                        "username": "Sudheer474",
                        "content": "what the hell output is whats wrong with my code\\n   int rev=0;\\n        if(x<0){\\n            return false;\\n        }\\n        while(x!=0){\\n            rev= rev*10 + x%10;\\n            x=x/10;\\n        }\\n        if(x!=rev){\\n            return false;\\n        }\\n        return true;\\n\\nit gives wrong for 121 test case my output is false.."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "class Solution {\\n\\n        public boolean isPalindrome(int x) {\\n\\n    if (x < 0 || (x != 0 && x % 10 == 0)) {\\n        return false;\\n    }\\n\\n    int reversed = 0;\\n    int originalX = x;\\n\\n\\n    while (x > 0) {\\n        int digit = x % 10;\\n        reversed = reversed * 10 + digit;\\n        x /= 10;\\n    }\\n\\n\\n    return reversed == originalX;\\n}\\nUse this approach"
                    },
                    {
                        "username": "Hari_Seenu_7",
                        "content": "bro just omit last if and return statement then write return rev "
                    },
                    {
                        "username": "omprakash1353",
                        "content": "Bro you have changed the value of x then you tried to compare them it obviously goona return wrong ans"
                    },
                    {
                        "username": "biswassubhojit6831",
                        "content": "your rev val will be 121 and x will be \"0\" either change the code or start focusing more on every line to find the solution"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "a/c to your code \\nx is changing (i.e., in while loop) &\\nyou are comparing with x.\\nSo you\\'ve to just copy x with y\\nthen you\\'ve compare y with rev.\\nlike...\\n\\nint rev=0,y;\\ny=x;\\nif(x<0) return false;\\nwhile(x!=0){\\n       rev= rev*10 + x%10;\\n       x=x/10;\\n}\\nif(y != rev) return false;\\nreturn true;\\n\\nthanks :)"
                    },
                    {
                        "username": "ps_27",
                        "content": "acc to your code x is changing ....and you are comparing with x ."
                    },
                    {
                        "username": "Rishiraj_30",
                        "content": "just store the value of x before performing any operation x.\\n\\nint copy_of_x = x;\\nint rev=0;\\nif(x<0){\\nreturn false;\\n}\\nwhile(x!=0){\\nrev= rev*10 + x%10;\\nx=x/10;\\n}\\nif(copy_of_x !=rev){\\nreturn false;\\n}\\nreturn true;"
                    },
                    {
                        "username": "satyamgarg1308",
                        "content": "if(x<0) this is your problem , Program says the value of X can be negative or positive ."
                    },
                    {
                        "username": "MenaiAla",
                        "content": "[@sonu2231kumar](/sonu2231kumar) It does not work."
                    },
                    {
                        "username": "f_murshid_",
                        "content": "due to x is gradually decresing so first initialize temp variable and declear x in it and then compare rev and temp"
                    },
                    {
                        "username": "sonu2231kumar",
                        "content": "rev = (rev*10)+(x%10)\\nor \\nif(x==rev)\\n          true;\\nfalse;\\n"
                    },
                    {
                        "username": "harshitgaur600",
                        "content": "[@MayankRathore](/MayankRathore) x is changing in the loop as you did x=x/10. so try to make a temp variable to store x.\\n"
                    },
                    {
                        "username": "Bit-creatorCK",
                        "content": "[@MayankRathore](/MayankRathore) The Value of x changes in while loop and ends to 0 i.e. the condition of your while loop. To check whether it\\'s palindrome or not, you have to keep a copy of the value of x into another variable. \\n\\nJust think, if the value of x wasn\\'t changing in your while loop, then why did it not end up to infinite loop? Hope you got it now."
                    },
                    {
                        "username": "brahadeeshram",
                        "content": "last if condition has wrong condition and return statement also wrong "
                    },
                    {
                        "username": "HegdeRam",
                        "content": "keep original copy of X at initial step. int org = x;"
                    },
                    {
                        "username": "Sofiyan_M",
                        "content": "use temp to store value x . bcoz  x\\'s value changes through out the program from original one\\'s and use if(temp != rev)"
                    },
                    {
                        "username": "MayankRathore",
                        "content": " bool isPalindrome(int x) {\\n        long long int ans=0;\\n        while(x!=0)\\n        {\\n            int temp= x % 10;\\n           \\n            ans= (ans *10 )+ temp;\\n             x = x / 10;\\n        }\\n        if(ans==x){\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n\\nsame problem with my code also......."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    },
                    {
                        "username": "cherishlc",
                        "content": "If a number is a palindrome,,  its reverse equals itself.  \\nWhich means its reverse is NOT overflow!!!\\nSo that ' reversed integer might overflow'  doesn't matter at all, since a overlowed number isn't a palindrome.\\n\\n\\nNow the question becomes whether a NONE palindrome  == its reverse if we do NOT deal with overflow."
                    },
                    {
                        "username": "aivanilov",
                        "content": "Integer max = 2147483647 and Integer min = -2147483648. May be this is the case?"
                    },
                    {
                        "username": "run2explore99",
                        "content": "BEATS 97%\\n `class Solution {\\n    public boolean isPalindrome(int x) {\\n       int reverse=0;\\n        int temp = x;\\n\\n        if (x < 0) return false;\\n        while(temp != 0)   \\n        {  \\n        int remainder = temp % 10;  \\n        reverse = reverse * 10 + remainder;  \\n        temp = temp/10;  \\n        }  \\n        return reverse == x;\\n\\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1636603,
                "content": [
                    {
                        "username": "NowyKumara",
                        "content": "First convert x into string \\nx = str(x)\\nThen get reverse of x\\nn = x[::-1]\\nNow equate if they are palindrome then teh values must be same>\\nif x == n:\\n\\treturn True\\nelse:\\n\\treturn False.\\nThis is my first ever code that I wrote myself without any help and I am moved to tears right now seeing it compile\\nI am sorry but had to say it, thanks to the community for being there, it means a lot."
                    },
                    {
                        "username": "SivaKrishna-2002",
                        "content": "can you write in java \\n"
                    },
                    {
                        "username": "daliamukherjee216",
                        "content": "[@Moonbeam8773](/Moonbeam8773) i am getting the use of undeclared identifier \\'x_str\\' error. any solution?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Solution in java :\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}\\n"
                    },
                    {
                        "username": "jedi8380",
                        "content": "I feel you when you said without any help lol, it gives you a sense of relief from having imposter syndrome"
                    },
                    {
                        "username": "Moonbeam8773",
                        "content": "What you\\'re typing is essentially:\\nif True:\\n  return True\\nelse:\\n  return False\\n\\nJust do:\\nx_str = str(x)\\nreturn x_str == x_str[::-1]"
                    },
                    {
                        "username": "Aurof",
                        "content": "you didnt read the follow up, the real challenge is do it without converting the int to a string"
                    },
                    {
                        "username": "muvvalasairamakrishna",
                        "content": "i wrote the same but its giving an erroe\\n"
                    },
                    {
                        "username": "rellik",
                        "content": "I am wondering how the other people got their code ACed, the testing result of **\"-2147447412\"** seems a little odd to me. Should it be a palindromic number or not?\\n\\nNote: I believe the range of int is [-2147483648, 2147483647] and **\"-2147447412\"** is not overflowed, plus I handled the overflow cases already (test case \"-2147483648\" in particular).\\n\\n\\n11499 / 11502 test cases passed.\\n\\nStatus: Wrong Answer\\n\\n\\nInput:\\t-2147447412\\n\\nOutput:\\ttrue\\n\\nExpected:\\tfalse\\n\\n------------------------------------------------------------------\\nHere's my second question:\\n\\n**Why does the function take \"int\" as input instead of \"unsigned int\", when we assume all negative numbers are NOT palindromic.**"
                    },
                    {
                        "username": "rohanrambroo",
                        "content": "i think in your code you should do if x<0 return false because we can never accept -ve numbers"
                    },
                    {
                        "username": "mukulvagh11",
                        "content": "Input: x = -121\\nOutput: false\\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\\n\\n"
                    },
                    {
                        "username": "izzattulaev",
                        "content": "Input: -2147447412 and output must show \"false\" (in the description)\\n"
                    },
                    {
                        "username": "kojosimtema",
                        "content": "i believe all negative numbers are not palindrome because \"-\" is considered part of the number, and in the reverse you will get the \"-\"  at the end of the number. \\n\\nSo in this case \"-2147447412\"  will be \"2147447412-\"  in the reverse"
                    },
                    {
                        "username": "LMunique",
                        "content": "If it says O(1) space I can understand how to do that, but what does no \"extra space\" mean? If I use another integer to save the reversed number does it mean I'm still using extra space? Or when I simply am using an integer i for loop does it mean I have extra space?"
                    },
                    {
                        "username": "hp273",
                        "content": "O(1) does not mean extra space, it means the space you are using is independent of any other factor for example if you are using fixed size array then the size will not grow as i/p size grows."
                    },
                    {
                        "username": "blueshipswims",
                        "content": "by \\'extra space\\' what it means is that does the space required for all the cases change with case ? is the space required \\'variable\\' . If you reverse a number like 123 it yields 321 and this would consume the same memory when you reverse a number like 94729726 because both are integers BUT if you are using an array to store the digits and then reverse it or whatever then the memory required becomes variable because the individual digits have their own space in the array and thus costing EXTRA SPACE. Hope it helps. "
                    },
                    {
                        "username": "krishankanhaya_",
                        "content": "yes, i get your intension but O(1) due to this extra space which you needed for solving problem not grow as your input size varies that\\'s why it is O(1)."
                    },
                    {
                        "username": "haikeren61",
                        "content": "![image](https://assets.leetcode.com/users/images/e119a3a4-d25c-4396-b675-ad1ff971633f_1636894502.7062209.png)\\n"
                    },
                    {
                        "username": "CandyRobbery",
                        "content": "- Impossible to solve without extra space. Always need space for constants, variables or whatever. Recursion calls will take space for call stack.\\n\\n- If you are talking about constant space, then even declaring a string / stack will take constant space. (In fact at most (log(10, INT_MAX) * sizeof char), which is no worse than declaring an integer or more). Actually, even recursion will take constant space."
                    },
                    {
                        "username": "Sudheer474",
                        "content": "what the hell output is whats wrong with my code\\n   int rev=0;\\n        if(x<0){\\n            return false;\\n        }\\n        while(x!=0){\\n            rev= rev*10 + x%10;\\n            x=x/10;\\n        }\\n        if(x!=rev){\\n            return false;\\n        }\\n        return true;\\n\\nit gives wrong for 121 test case my output is false.."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "class Solution {\\n\\n        public boolean isPalindrome(int x) {\\n\\n    if (x < 0 || (x != 0 && x % 10 == 0)) {\\n        return false;\\n    }\\n\\n    int reversed = 0;\\n    int originalX = x;\\n\\n\\n    while (x > 0) {\\n        int digit = x % 10;\\n        reversed = reversed * 10 + digit;\\n        x /= 10;\\n    }\\n\\n\\n    return reversed == originalX;\\n}\\nUse this approach"
                    },
                    {
                        "username": "Hari_Seenu_7",
                        "content": "bro just omit last if and return statement then write return rev "
                    },
                    {
                        "username": "omprakash1353",
                        "content": "Bro you have changed the value of x then you tried to compare them it obviously goona return wrong ans"
                    },
                    {
                        "username": "biswassubhojit6831",
                        "content": "your rev val will be 121 and x will be \"0\" either change the code or start focusing more on every line to find the solution"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "a/c to your code \\nx is changing (i.e., in while loop) &\\nyou are comparing with x.\\nSo you\\'ve to just copy x with y\\nthen you\\'ve compare y with rev.\\nlike...\\n\\nint rev=0,y;\\ny=x;\\nif(x<0) return false;\\nwhile(x!=0){\\n       rev= rev*10 + x%10;\\n       x=x/10;\\n}\\nif(y != rev) return false;\\nreturn true;\\n\\nthanks :)"
                    },
                    {
                        "username": "ps_27",
                        "content": "acc to your code x is changing ....and you are comparing with x ."
                    },
                    {
                        "username": "Rishiraj_30",
                        "content": "just store the value of x before performing any operation x.\\n\\nint copy_of_x = x;\\nint rev=0;\\nif(x<0){\\nreturn false;\\n}\\nwhile(x!=0){\\nrev= rev*10 + x%10;\\nx=x/10;\\n}\\nif(copy_of_x !=rev){\\nreturn false;\\n}\\nreturn true;"
                    },
                    {
                        "username": "satyamgarg1308",
                        "content": "if(x<0) this is your problem , Program says the value of X can be negative or positive ."
                    },
                    {
                        "username": "MenaiAla",
                        "content": "[@sonu2231kumar](/sonu2231kumar) It does not work."
                    },
                    {
                        "username": "f_murshid_",
                        "content": "due to x is gradually decresing so first initialize temp variable and declear x in it and then compare rev and temp"
                    },
                    {
                        "username": "sonu2231kumar",
                        "content": "rev = (rev*10)+(x%10)\\nor \\nif(x==rev)\\n          true;\\nfalse;\\n"
                    },
                    {
                        "username": "harshitgaur600",
                        "content": "[@MayankRathore](/MayankRathore) x is changing in the loop as you did x=x/10. so try to make a temp variable to store x.\\n"
                    },
                    {
                        "username": "Bit-creatorCK",
                        "content": "[@MayankRathore](/MayankRathore) The Value of x changes in while loop and ends to 0 i.e. the condition of your while loop. To check whether it\\'s palindrome or not, you have to keep a copy of the value of x into another variable. \\n\\nJust think, if the value of x wasn\\'t changing in your while loop, then why did it not end up to infinite loop? Hope you got it now."
                    },
                    {
                        "username": "brahadeeshram",
                        "content": "last if condition has wrong condition and return statement also wrong "
                    },
                    {
                        "username": "HegdeRam",
                        "content": "keep original copy of X at initial step. int org = x;"
                    },
                    {
                        "username": "Sofiyan_M",
                        "content": "use temp to store value x . bcoz  x\\'s value changes through out the program from original one\\'s and use if(temp != rev)"
                    },
                    {
                        "username": "MayankRathore",
                        "content": " bool isPalindrome(int x) {\\n        long long int ans=0;\\n        while(x!=0)\\n        {\\n            int temp= x % 10;\\n           \\n            ans= (ans *10 )+ temp;\\n             x = x / 10;\\n        }\\n        if(ans==x){\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n\\nsame problem with my code also......."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    },
                    {
                        "username": "cherishlc",
                        "content": "If a number is a palindrome,,  its reverse equals itself.  \\nWhich means its reverse is NOT overflow!!!\\nSo that ' reversed integer might overflow'  doesn't matter at all, since a overlowed number isn't a palindrome.\\n\\n\\nNow the question becomes whether a NONE palindrome  == its reverse if we do NOT deal with overflow."
                    },
                    {
                        "username": "aivanilov",
                        "content": "Integer max = 2147483647 and Integer min = -2147483648. May be this is the case?"
                    },
                    {
                        "username": "run2explore99",
                        "content": "BEATS 97%\\n `class Solution {\\n    public boolean isPalindrome(int x) {\\n       int reverse=0;\\n        int temp = x;\\n\\n        if (x < 0) return false;\\n        while(temp != 0)   \\n        {  \\n        int remainder = temp % 10;  \\n        reverse = reverse * 10 + remainder;  \\n        temp = temp/10;  \\n        }  \\n        return reverse == x;\\n\\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1566451,
                "content": [
                    {
                        "username": "NowyKumara",
                        "content": "First convert x into string \\nx = str(x)\\nThen get reverse of x\\nn = x[::-1]\\nNow equate if they are palindrome then teh values must be same>\\nif x == n:\\n\\treturn True\\nelse:\\n\\treturn False.\\nThis is my first ever code that I wrote myself without any help and I am moved to tears right now seeing it compile\\nI am sorry but had to say it, thanks to the community for being there, it means a lot."
                    },
                    {
                        "username": "SivaKrishna-2002",
                        "content": "can you write in java \\n"
                    },
                    {
                        "username": "daliamukherjee216",
                        "content": "[@Moonbeam8773](/Moonbeam8773) i am getting the use of undeclared identifier \\'x_str\\' error. any solution?"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "Solution in java :\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}\\n"
                    },
                    {
                        "username": "jedi8380",
                        "content": "I feel you when you said without any help lol, it gives you a sense of relief from having imposter syndrome"
                    },
                    {
                        "username": "Moonbeam8773",
                        "content": "What you\\'re typing is essentially:\\nif True:\\n  return True\\nelse:\\n  return False\\n\\nJust do:\\nx_str = str(x)\\nreturn x_str == x_str[::-1]"
                    },
                    {
                        "username": "Aurof",
                        "content": "you didnt read the follow up, the real challenge is do it without converting the int to a string"
                    },
                    {
                        "username": "muvvalasairamakrishna",
                        "content": "i wrote the same but its giving an erroe\\n"
                    },
                    {
                        "username": "rellik",
                        "content": "I am wondering how the other people got their code ACed, the testing result of **\"-2147447412\"** seems a little odd to me. Should it be a palindromic number or not?\\n\\nNote: I believe the range of int is [-2147483648, 2147483647] and **\"-2147447412\"** is not overflowed, plus I handled the overflow cases already (test case \"-2147483648\" in particular).\\n\\n\\n11499 / 11502 test cases passed.\\n\\nStatus: Wrong Answer\\n\\n\\nInput:\\t-2147447412\\n\\nOutput:\\ttrue\\n\\nExpected:\\tfalse\\n\\n------------------------------------------------------------------\\nHere's my second question:\\n\\n**Why does the function take \"int\" as input instead of \"unsigned int\", when we assume all negative numbers are NOT palindromic.**"
                    },
                    {
                        "username": "rohanrambroo",
                        "content": "i think in your code you should do if x<0 return false because we can never accept -ve numbers"
                    },
                    {
                        "username": "mukulvagh11",
                        "content": "Input: x = -121\\nOutput: false\\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\\n\\n"
                    },
                    {
                        "username": "izzattulaev",
                        "content": "Input: -2147447412 and output must show \"false\" (in the description)\\n"
                    },
                    {
                        "username": "kojosimtema",
                        "content": "i believe all negative numbers are not palindrome because \"-\" is considered part of the number, and in the reverse you will get the \"-\"  at the end of the number. \\n\\nSo in this case \"-2147447412\"  will be \"2147447412-\"  in the reverse"
                    },
                    {
                        "username": "LMunique",
                        "content": "If it says O(1) space I can understand how to do that, but what does no \"extra space\" mean? If I use another integer to save the reversed number does it mean I'm still using extra space? Or when I simply am using an integer i for loop does it mean I have extra space?"
                    },
                    {
                        "username": "hp273",
                        "content": "O(1) does not mean extra space, it means the space you are using is independent of any other factor for example if you are using fixed size array then the size will not grow as i/p size grows."
                    },
                    {
                        "username": "blueshipswims",
                        "content": "by \\'extra space\\' what it means is that does the space required for all the cases change with case ? is the space required \\'variable\\' . If you reverse a number like 123 it yields 321 and this would consume the same memory when you reverse a number like 94729726 because both are integers BUT if you are using an array to store the digits and then reverse it or whatever then the memory required becomes variable because the individual digits have their own space in the array and thus costing EXTRA SPACE. Hope it helps. "
                    },
                    {
                        "username": "krishankanhaya_",
                        "content": "yes, i get your intension but O(1) due to this extra space which you needed for solving problem not grow as your input size varies that\\'s why it is O(1)."
                    },
                    {
                        "username": "haikeren61",
                        "content": "![image](https://assets.leetcode.com/users/images/e119a3a4-d25c-4396-b675-ad1ff971633f_1636894502.7062209.png)\\n"
                    },
                    {
                        "username": "CandyRobbery",
                        "content": "- Impossible to solve without extra space. Always need space for constants, variables or whatever. Recursion calls will take space for call stack.\\n\\n- If you are talking about constant space, then even declaring a string / stack will take constant space. (In fact at most (log(10, INT_MAX) * sizeof char), which is no worse than declaring an integer or more). Actually, even recursion will take constant space."
                    },
                    {
                        "username": "Sudheer474",
                        "content": "what the hell output is whats wrong with my code\\n   int rev=0;\\n        if(x<0){\\n            return false;\\n        }\\n        while(x!=0){\\n            rev= rev*10 + x%10;\\n            x=x/10;\\n        }\\n        if(x!=rev){\\n            return false;\\n        }\\n        return true;\\n\\nit gives wrong for 121 test case my output is false.."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "class Solution {\\n\\n        public boolean isPalindrome(int x) {\\n\\n    if (x < 0 || (x != 0 && x % 10 == 0)) {\\n        return false;\\n    }\\n\\n    int reversed = 0;\\n    int originalX = x;\\n\\n\\n    while (x > 0) {\\n        int digit = x % 10;\\n        reversed = reversed * 10 + digit;\\n        x /= 10;\\n    }\\n\\n\\n    return reversed == originalX;\\n}\\nUse this approach"
                    },
                    {
                        "username": "Hari_Seenu_7",
                        "content": "bro just omit last if and return statement then write return rev "
                    },
                    {
                        "username": "omprakash1353",
                        "content": "Bro you have changed the value of x then you tried to compare them it obviously goona return wrong ans"
                    },
                    {
                        "username": "biswassubhojit6831",
                        "content": "your rev val will be 121 and x will be \"0\" either change the code or start focusing more on every line to find the solution"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "a/c to your code \\nx is changing (i.e., in while loop) &\\nyou are comparing with x.\\nSo you\\'ve to just copy x with y\\nthen you\\'ve compare y with rev.\\nlike...\\n\\nint rev=0,y;\\ny=x;\\nif(x<0) return false;\\nwhile(x!=0){\\n       rev= rev*10 + x%10;\\n       x=x/10;\\n}\\nif(y != rev) return false;\\nreturn true;\\n\\nthanks :)"
                    },
                    {
                        "username": "ps_27",
                        "content": "acc to your code x is changing ....and you are comparing with x ."
                    },
                    {
                        "username": "Rishiraj_30",
                        "content": "just store the value of x before performing any operation x.\\n\\nint copy_of_x = x;\\nint rev=0;\\nif(x<0){\\nreturn false;\\n}\\nwhile(x!=0){\\nrev= rev*10 + x%10;\\nx=x/10;\\n}\\nif(copy_of_x !=rev){\\nreturn false;\\n}\\nreturn true;"
                    },
                    {
                        "username": "satyamgarg1308",
                        "content": "if(x<0) this is your problem , Program says the value of X can be negative or positive ."
                    },
                    {
                        "username": "MenaiAla",
                        "content": "[@sonu2231kumar](/sonu2231kumar) It does not work."
                    },
                    {
                        "username": "f_murshid_",
                        "content": "due to x is gradually decresing so first initialize temp variable and declear x in it and then compare rev and temp"
                    },
                    {
                        "username": "sonu2231kumar",
                        "content": "rev = (rev*10)+(x%10)\\nor \\nif(x==rev)\\n          true;\\nfalse;\\n"
                    },
                    {
                        "username": "harshitgaur600",
                        "content": "[@MayankRathore](/MayankRathore) x is changing in the loop as you did x=x/10. so try to make a temp variable to store x.\\n"
                    },
                    {
                        "username": "Bit-creatorCK",
                        "content": "[@MayankRathore](/MayankRathore) The Value of x changes in while loop and ends to 0 i.e. the condition of your while loop. To check whether it\\'s palindrome or not, you have to keep a copy of the value of x into another variable. \\n\\nJust think, if the value of x wasn\\'t changing in your while loop, then why did it not end up to infinite loop? Hope you got it now."
                    },
                    {
                        "username": "brahadeeshram",
                        "content": "last if condition has wrong condition and return statement also wrong "
                    },
                    {
                        "username": "HegdeRam",
                        "content": "keep original copy of X at initial step. int org = x;"
                    },
                    {
                        "username": "Sofiyan_M",
                        "content": "use temp to store value x . bcoz  x\\'s value changes through out the program from original one\\'s and use if(temp != rev)"
                    },
                    {
                        "username": "MayankRathore",
                        "content": " bool isPalindrome(int x) {\\n        long long int ans=0;\\n        while(x!=0)\\n        {\\n            int temp= x % 10;\\n           \\n            ans= (ans *10 )+ temp;\\n             x = x / 10;\\n        }\\n        if(ans==x){\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n\\nsame problem with my code also......."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    },
                    {
                        "username": "cherishlc",
                        "content": "If a number is a palindrome,,  its reverse equals itself.  \\nWhich means its reverse is NOT overflow!!!\\nSo that ' reversed integer might overflow'  doesn't matter at all, since a overlowed number isn't a palindrome.\\n\\n\\nNow the question becomes whether a NONE palindrome  == its reverse if we do NOT deal with overflow."
                    },
                    {
                        "username": "aivanilov",
                        "content": "Integer max = 2147483647 and Integer min = -2147483648. May be this is the case?"
                    },
                    {
                        "username": "run2explore99",
                        "content": "BEATS 97%\\n `class Solution {\\n    public boolean isPalindrome(int x) {\\n       int reverse=0;\\n        int temp = x;\\n\\n        if (x < 0) return false;\\n        while(temp != 0)   \\n        {  \\n        int remainder = temp % 10;  \\n        reverse = reverse * 10 + remainder;  \\n        temp = temp/10;  \\n        }  \\n        return reverse == x;\\n\\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\n**See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1568819,
                "content": [
                    {
                        "username": "tang3117022",
                        "content": "\\nHi,\\n\\nI am a little confused about the restriction of this question.\\n\\nWe are not allowed to use extra space in this question, does it mean we can not declare any variables except for x?\\n\\nThanks."
                    },
                    {
                        "username": "sakshichoudhary148",
                        "content": "we can. it is not possible without using another variable."
                    },
                    {
                        "username": "luqmansen",
                        "content": "extra space that grow as the input grow. Defining variable that use constant memory is allowed"
                    },
                    {
                        "username": "AlgoEngine",
                        "content": "Video visualizing the official LeetCode solution:\n\nhttps://www.youtube.com/watch?v=OlTk8wM48ww"
                    },
                    {
                        "username": "abhinav__19",
                        "content": "A small hint for negative numbers, return false."
                    },
                    {
                        "username": "raja_1234_raja",
                        "content": "woww what a hit abhinav tqs da "
                    },
                    {
                        "username": "princejacob",
                        "content": "Folks, like many of you (maybe?) I stumbled on this question.  It\\'s categorized as Easy.  Sure...easy if you know the answer.  The challenge is, you can\\'t (shouldn\\'t) convert the integer to a string.  Why?  Because the question is about **math**.  \\n\\nThey\\'re not looking for substring manipulation, they\\'re looking for integer manipulation.  \\n"
                    },
                    {
                        "username": "yasaminashoori",
                        "content": "Hi, i run my code in Vs code and everything wroks correctly but I don't know why did it give me error in leetcode  and says WRONG ANSWER. Any idea ? "
                    },
                    {
                        "username": "krushna2604",
                        "content": "same problem in two other code also, but why?"
                    },
                    {
                        "username": "nasta978",
                        "content": "\\u0418 \\u0443 \\u043C\\u0435\\u043D\\u044F \\u0442\\u043E\\u0436\\u0435(("
                    },
                    {
                        "username": "Suryam_Pathak",
                        "content": "same problem bro"
                    },
                    {
                        "username": "pth_1641",
                        "content": "var isPalindrome = (x) => x.toString().split(\\'\\').reverse().join(\\'\\') === x.toString() ? true : false;"
                    },
                    {
                        "username": "emailsemails7",
                        "content": "let isPalindrome = x => x === +[...\\'\\'+x].reverse().join(\\'\\')"
                    },
                    {
                        "username": "jwheeler27",
                        "content": "return str(x) == str(x)[::-1]\\n\\nGotta love typecasting and string slicing."
                    },
                    {
                        "username": "saikot1223",
                        "content": "How can i make the int x into string in c++??"
                    },
                    {
                        "username": "user6235iz",
                        "content": "one would use google for that"
                    },
                    {
                        "username": "batrapunit1999",
                        "content": "Use to_string()."
                    },
                    {
                        "username": "mijitsu",
                        "content": "![image](https://assets.leetcode.com/users/images/906f8bfe-a327-4d38-b9a3-4fc94e417e41_1656541936.6629639.png)\\n"
                    },
                    {
                        "username": "shivamsingh_",
                        "content": "How did you resolve the problem?"
                    }
                ]
            },
            {
                "id": 1876487,
                "content": [
                    {
                        "username": "tang3117022",
                        "content": "\\nHi,\\n\\nI am a little confused about the restriction of this question.\\n\\nWe are not allowed to use extra space in this question, does it mean we can not declare any variables except for x?\\n\\nThanks."
                    },
                    {
                        "username": "sakshichoudhary148",
                        "content": "we can. it is not possible without using another variable."
                    },
                    {
                        "username": "luqmansen",
                        "content": "extra space that grow as the input grow. Defining variable that use constant memory is allowed"
                    },
                    {
                        "username": "AlgoEngine",
                        "content": "Video visualizing the official LeetCode solution:\n\nhttps://www.youtube.com/watch?v=OlTk8wM48ww"
                    },
                    {
                        "username": "abhinav__19",
                        "content": "A small hint for negative numbers, return false."
                    },
                    {
                        "username": "raja_1234_raja",
                        "content": "woww what a hit abhinav tqs da "
                    },
                    {
                        "username": "princejacob",
                        "content": "Folks, like many of you (maybe?) I stumbled on this question.  It\\'s categorized as Easy.  Sure...easy if you know the answer.  The challenge is, you can\\'t (shouldn\\'t) convert the integer to a string.  Why?  Because the question is about **math**.  \\n\\nThey\\'re not looking for substring manipulation, they\\'re looking for integer manipulation.  \\n"
                    },
                    {
                        "username": "yasaminashoori",
                        "content": "Hi, i run my code in Vs code and everything wroks correctly but I don't know why did it give me error in leetcode  and says WRONG ANSWER. Any idea ? "
                    },
                    {
                        "username": "krushna2604",
                        "content": "same problem in two other code also, but why?"
                    },
                    {
                        "username": "nasta978",
                        "content": "\\u0418 \\u0443 \\u043C\\u0435\\u043D\\u044F \\u0442\\u043E\\u0436\\u0435(("
                    },
                    {
                        "username": "Suryam_Pathak",
                        "content": "same problem bro"
                    },
                    {
                        "username": "pth_1641",
                        "content": "var isPalindrome = (x) => x.toString().split(\\'\\').reverse().join(\\'\\') === x.toString() ? true : false;"
                    },
                    {
                        "username": "emailsemails7",
                        "content": "let isPalindrome = x => x === +[...\\'\\'+x].reverse().join(\\'\\')"
                    },
                    {
                        "username": "jwheeler27",
                        "content": "return str(x) == str(x)[::-1]\\n\\nGotta love typecasting and string slicing."
                    },
                    {
                        "username": "saikot1223",
                        "content": "How can i make the int x into string in c++??"
                    },
                    {
                        "username": "user6235iz",
                        "content": "one would use google for that"
                    },
                    {
                        "username": "batrapunit1999",
                        "content": "Use to_string()."
                    },
                    {
                        "username": "mijitsu",
                        "content": "![image](https://assets.leetcode.com/users/images/906f8bfe-a327-4d38-b9a3-4fc94e417e41_1656541936.6629639.png)\\n"
                    },
                    {
                        "username": "shivamsingh_",
                        "content": "How did you resolve the problem?"
                    }
                ]
            },
            {
                "id": 1850648,
                "content": [
                    {
                        "username": "tang3117022",
                        "content": "\\nHi,\\n\\nI am a little confused about the restriction of this question.\\n\\nWe are not allowed to use extra space in this question, does it mean we can not declare any variables except for x?\\n\\nThanks."
                    },
                    {
                        "username": "sakshichoudhary148",
                        "content": "we can. it is not possible without using another variable."
                    },
                    {
                        "username": "luqmansen",
                        "content": "extra space that grow as the input grow. Defining variable that use constant memory is allowed"
                    },
                    {
                        "username": "AlgoEngine",
                        "content": "Video visualizing the official LeetCode solution:\n\nhttps://www.youtube.com/watch?v=OlTk8wM48ww"
                    },
                    {
                        "username": "abhinav__19",
                        "content": "A small hint for negative numbers, return false."
                    },
                    {
                        "username": "raja_1234_raja",
                        "content": "woww what a hit abhinav tqs da "
                    },
                    {
                        "username": "princejacob",
                        "content": "Folks, like many of you (maybe?) I stumbled on this question.  It\\'s categorized as Easy.  Sure...easy if you know the answer.  The challenge is, you can\\'t (shouldn\\'t) convert the integer to a string.  Why?  Because the question is about **math**.  \\n\\nThey\\'re not looking for substring manipulation, they\\'re looking for integer manipulation.  \\n"
                    },
                    {
                        "username": "yasaminashoori",
                        "content": "Hi, i run my code in Vs code and everything wroks correctly but I don't know why did it give me error in leetcode  and says WRONG ANSWER. Any idea ? "
                    },
                    {
                        "username": "krushna2604",
                        "content": "same problem in two other code also, but why?"
                    },
                    {
                        "username": "nasta978",
                        "content": "\\u0418 \\u0443 \\u043C\\u0435\\u043D\\u044F \\u0442\\u043E\\u0436\\u0435(("
                    },
                    {
                        "username": "Suryam_Pathak",
                        "content": "same problem bro"
                    },
                    {
                        "username": "pth_1641",
                        "content": "var isPalindrome = (x) => x.toString().split(\\'\\').reverse().join(\\'\\') === x.toString() ? true : false;"
                    },
                    {
                        "username": "emailsemails7",
                        "content": "let isPalindrome = x => x === +[...\\'\\'+x].reverse().join(\\'\\')"
                    },
                    {
                        "username": "jwheeler27",
                        "content": "return str(x) == str(x)[::-1]\\n\\nGotta love typecasting and string slicing."
                    },
                    {
                        "username": "saikot1223",
                        "content": "How can i make the int x into string in c++??"
                    },
                    {
                        "username": "user6235iz",
                        "content": "one would use google for that"
                    },
                    {
                        "username": "batrapunit1999",
                        "content": "Use to_string()."
                    },
                    {
                        "username": "mijitsu",
                        "content": "![image](https://assets.leetcode.com/users/images/906f8bfe-a327-4d38-b9a3-4fc94e417e41_1656541936.6629639.png)\\n"
                    },
                    {
                        "username": "shivamsingh_",
                        "content": "How did you resolve the problem?"
                    }
                ]
            },
            {
                "id": 1575867,
                "content": [
                    {
                        "username": "tang3117022",
                        "content": "\\nHi,\\n\\nI am a little confused about the restriction of this question.\\n\\nWe are not allowed to use extra space in this question, does it mean we can not declare any variables except for x?\\n\\nThanks."
                    },
                    {
                        "username": "sakshichoudhary148",
                        "content": "we can. it is not possible without using another variable."
                    },
                    {
                        "username": "luqmansen",
                        "content": "extra space that grow as the input grow. Defining variable that use constant memory is allowed"
                    },
                    {
                        "username": "AlgoEngine",
                        "content": "Video visualizing the official LeetCode solution:\n\nhttps://www.youtube.com/watch?v=OlTk8wM48ww"
                    },
                    {
                        "username": "abhinav__19",
                        "content": "A small hint for negative numbers, return false."
                    },
                    {
                        "username": "raja_1234_raja",
                        "content": "woww what a hit abhinav tqs da "
                    },
                    {
                        "username": "princejacob",
                        "content": "Folks, like many of you (maybe?) I stumbled on this question.  It\\'s categorized as Easy.  Sure...easy if you know the answer.  The challenge is, you can\\'t (shouldn\\'t) convert the integer to a string.  Why?  Because the question is about **math**.  \\n\\nThey\\'re not looking for substring manipulation, they\\'re looking for integer manipulation.  \\n"
                    },
                    {
                        "username": "yasaminashoori",
                        "content": "Hi, i run my code in Vs code and everything wroks correctly but I don't know why did it give me error in leetcode  and says WRONG ANSWER. Any idea ? "
                    },
                    {
                        "username": "krushna2604",
                        "content": "same problem in two other code also, but why?"
                    },
                    {
                        "username": "nasta978",
                        "content": "\\u0418 \\u0443 \\u043C\\u0435\\u043D\\u044F \\u0442\\u043E\\u0436\\u0435(("
                    },
                    {
                        "username": "Suryam_Pathak",
                        "content": "same problem bro"
                    },
                    {
                        "username": "pth_1641",
                        "content": "var isPalindrome = (x) => x.toString().split(\\'\\').reverse().join(\\'\\') === x.toString() ? true : false;"
                    },
                    {
                        "username": "emailsemails7",
                        "content": "let isPalindrome = x => x === +[...\\'\\'+x].reverse().join(\\'\\')"
                    },
                    {
                        "username": "jwheeler27",
                        "content": "return str(x) == str(x)[::-1]\\n\\nGotta love typecasting and string slicing."
                    },
                    {
                        "username": "saikot1223",
                        "content": "How can i make the int x into string in c++??"
                    },
                    {
                        "username": "user6235iz",
                        "content": "one would use google for that"
                    },
                    {
                        "username": "batrapunit1999",
                        "content": "Use to_string()."
                    },
                    {
                        "username": "mijitsu",
                        "content": "![image](https://assets.leetcode.com/users/images/906f8bfe-a327-4d38-b9a3-4fc94e417e41_1656541936.6629639.png)\\n"
                    },
                    {
                        "username": "shivamsingh_",
                        "content": "How did you resolve the problem?"
                    }
                ]
            },
            {
                "id": 1802228,
                "content": [
                    {
                        "username": "tang3117022",
                        "content": "\\nHi,\\n\\nI am a little confused about the restriction of this question.\\n\\nWe are not allowed to use extra space in this question, does it mean we can not declare any variables except for x?\\n\\nThanks."
                    },
                    {
                        "username": "sakshichoudhary148",
                        "content": "we can. it is not possible without using another variable."
                    },
                    {
                        "username": "luqmansen",
                        "content": "extra space that grow as the input grow. Defining variable that use constant memory is allowed"
                    },
                    {
                        "username": "AlgoEngine",
                        "content": "Video visualizing the official LeetCode solution:\n\nhttps://www.youtube.com/watch?v=OlTk8wM48ww"
                    },
                    {
                        "username": "abhinav__19",
                        "content": "A small hint for negative numbers, return false."
                    },
                    {
                        "username": "raja_1234_raja",
                        "content": "woww what a hit abhinav tqs da "
                    },
                    {
                        "username": "princejacob",
                        "content": "Folks, like many of you (maybe?) I stumbled on this question.  It\\'s categorized as Easy.  Sure...easy if you know the answer.  The challenge is, you can\\'t (shouldn\\'t) convert the integer to a string.  Why?  Because the question is about **math**.  \\n\\nThey\\'re not looking for substring manipulation, they\\'re looking for integer manipulation.  \\n"
                    },
                    {
                        "username": "yasaminashoori",
                        "content": "Hi, i run my code in Vs code and everything wroks correctly but I don't know why did it give me error in leetcode  and says WRONG ANSWER. Any idea ? "
                    },
                    {
                        "username": "krushna2604",
                        "content": "same problem in two other code also, but why?"
                    },
                    {
                        "username": "nasta978",
                        "content": "\\u0418 \\u0443 \\u043C\\u0435\\u043D\\u044F \\u0442\\u043E\\u0436\\u0435(("
                    },
                    {
                        "username": "Suryam_Pathak",
                        "content": "same problem bro"
                    },
                    {
                        "username": "pth_1641",
                        "content": "var isPalindrome = (x) => x.toString().split(\\'\\').reverse().join(\\'\\') === x.toString() ? true : false;"
                    },
                    {
                        "username": "emailsemails7",
                        "content": "let isPalindrome = x => x === +[...\\'\\'+x].reverse().join(\\'\\')"
                    },
                    {
                        "username": "jwheeler27",
                        "content": "return str(x) == str(x)[::-1]\\n\\nGotta love typecasting and string slicing."
                    },
                    {
                        "username": "saikot1223",
                        "content": "How can i make the int x into string in c++??"
                    },
                    {
                        "username": "user6235iz",
                        "content": "one would use google for that"
                    },
                    {
                        "username": "batrapunit1999",
                        "content": "Use to_string()."
                    },
                    {
                        "username": "mijitsu",
                        "content": "![image](https://assets.leetcode.com/users/images/906f8bfe-a327-4d38-b9a3-4fc94e417e41_1656541936.6629639.png)\\n"
                    },
                    {
                        "username": "shivamsingh_",
                        "content": "How did you resolve the problem?"
                    }
                ]
            },
            {
                "id": 1575578,
                "content": [
                    {
                        "username": "tang3117022",
                        "content": "\\nHi,\\n\\nI am a little confused about the restriction of this question.\\n\\nWe are not allowed to use extra space in this question, does it mean we can not declare any variables except for x?\\n\\nThanks."
                    },
                    {
                        "username": "sakshichoudhary148",
                        "content": "we can. it is not possible without using another variable."
                    },
                    {
                        "username": "luqmansen",
                        "content": "extra space that grow as the input grow. Defining variable that use constant memory is allowed"
                    },
                    {
                        "username": "AlgoEngine",
                        "content": "Video visualizing the official LeetCode solution:\n\nhttps://www.youtube.com/watch?v=OlTk8wM48ww"
                    },
                    {
                        "username": "abhinav__19",
                        "content": "A small hint for negative numbers, return false."
                    },
                    {
                        "username": "raja_1234_raja",
                        "content": "woww what a hit abhinav tqs da "
                    },
                    {
                        "username": "princejacob",
                        "content": "Folks, like many of you (maybe?) I stumbled on this question.  It\\'s categorized as Easy.  Sure...easy if you know the answer.  The challenge is, you can\\'t (shouldn\\'t) convert the integer to a string.  Why?  Because the question is about **math**.  \\n\\nThey\\'re not looking for substring manipulation, they\\'re looking for integer manipulation.  \\n"
                    },
                    {
                        "username": "yasaminashoori",
                        "content": "Hi, i run my code in Vs code and everything wroks correctly but I don't know why did it give me error in leetcode  and says WRONG ANSWER. Any idea ? "
                    },
                    {
                        "username": "krushna2604",
                        "content": "same problem in two other code also, but why?"
                    },
                    {
                        "username": "nasta978",
                        "content": "\\u0418 \\u0443 \\u043C\\u0435\\u043D\\u044F \\u0442\\u043E\\u0436\\u0435(("
                    },
                    {
                        "username": "Suryam_Pathak",
                        "content": "same problem bro"
                    },
                    {
                        "username": "pth_1641",
                        "content": "var isPalindrome = (x) => x.toString().split(\\'\\').reverse().join(\\'\\') === x.toString() ? true : false;"
                    },
                    {
                        "username": "emailsemails7",
                        "content": "let isPalindrome = x => x === +[...\\'\\'+x].reverse().join(\\'\\')"
                    },
                    {
                        "username": "jwheeler27",
                        "content": "return str(x) == str(x)[::-1]\\n\\nGotta love typecasting and string slicing."
                    },
                    {
                        "username": "saikot1223",
                        "content": "How can i make the int x into string in c++??"
                    },
                    {
                        "username": "user6235iz",
                        "content": "one would use google for that"
                    },
                    {
                        "username": "batrapunit1999",
                        "content": "Use to_string()."
                    },
                    {
                        "username": "mijitsu",
                        "content": "![image](https://assets.leetcode.com/users/images/906f8bfe-a327-4d38-b9a3-4fc94e417e41_1656541936.6629639.png)\\n"
                    },
                    {
                        "username": "shivamsingh_",
                        "content": "How did you resolve the problem?"
                    }
                ]
            },
            {
                "id": 1574137,
                "content": [
                    {
                        "username": "tang3117022",
                        "content": "\\nHi,\\n\\nI am a little confused about the restriction of this question.\\n\\nWe are not allowed to use extra space in this question, does it mean we can not declare any variables except for x?\\n\\nThanks."
                    },
                    {
                        "username": "sakshichoudhary148",
                        "content": "we can. it is not possible without using another variable."
                    },
                    {
                        "username": "luqmansen",
                        "content": "extra space that grow as the input grow. Defining variable that use constant memory is allowed"
                    },
                    {
                        "username": "AlgoEngine",
                        "content": "Video visualizing the official LeetCode solution:\n\nhttps://www.youtube.com/watch?v=OlTk8wM48ww"
                    },
                    {
                        "username": "abhinav__19",
                        "content": "A small hint for negative numbers, return false."
                    },
                    {
                        "username": "raja_1234_raja",
                        "content": "woww what a hit abhinav tqs da "
                    },
                    {
                        "username": "princejacob",
                        "content": "Folks, like many of you (maybe?) I stumbled on this question.  It\\'s categorized as Easy.  Sure...easy if you know the answer.  The challenge is, you can\\'t (shouldn\\'t) convert the integer to a string.  Why?  Because the question is about **math**.  \\n\\nThey\\'re not looking for substring manipulation, they\\'re looking for integer manipulation.  \\n"
                    },
                    {
                        "username": "yasaminashoori",
                        "content": "Hi, i run my code in Vs code and everything wroks correctly but I don't know why did it give me error in leetcode  and says WRONG ANSWER. Any idea ? "
                    },
                    {
                        "username": "krushna2604",
                        "content": "same problem in two other code also, but why?"
                    },
                    {
                        "username": "nasta978",
                        "content": "\\u0418 \\u0443 \\u043C\\u0435\\u043D\\u044F \\u0442\\u043E\\u0436\\u0435(("
                    },
                    {
                        "username": "Suryam_Pathak",
                        "content": "same problem bro"
                    },
                    {
                        "username": "pth_1641",
                        "content": "var isPalindrome = (x) => x.toString().split(\\'\\').reverse().join(\\'\\') === x.toString() ? true : false;"
                    },
                    {
                        "username": "emailsemails7",
                        "content": "let isPalindrome = x => x === +[...\\'\\'+x].reverse().join(\\'\\')"
                    },
                    {
                        "username": "jwheeler27",
                        "content": "return str(x) == str(x)[::-1]\\n\\nGotta love typecasting and string slicing."
                    },
                    {
                        "username": "saikot1223",
                        "content": "How can i make the int x into string in c++??"
                    },
                    {
                        "username": "user6235iz",
                        "content": "one would use google for that"
                    },
                    {
                        "username": "batrapunit1999",
                        "content": "Use to_string()."
                    },
                    {
                        "username": "mijitsu",
                        "content": "![image](https://assets.leetcode.com/users/images/906f8bfe-a327-4d38-b9a3-4fc94e417e41_1656541936.6629639.png)\\n"
                    },
                    {
                        "username": "shivamsingh_",
                        "content": "How did you resolve the problem?"
                    }
                ]
            },
            {
                "id": 1567056,
                "content": [
                    {
                        "username": "tang3117022",
                        "content": "\\nHi,\\n\\nI am a little confused about the restriction of this question.\\n\\nWe are not allowed to use extra space in this question, does it mean we can not declare any variables except for x?\\n\\nThanks."
                    },
                    {
                        "username": "sakshichoudhary148",
                        "content": "we can. it is not possible without using another variable."
                    },
                    {
                        "username": "luqmansen",
                        "content": "extra space that grow as the input grow. Defining variable that use constant memory is allowed"
                    },
                    {
                        "username": "AlgoEngine",
                        "content": "Video visualizing the official LeetCode solution:\n\nhttps://www.youtube.com/watch?v=OlTk8wM48ww"
                    },
                    {
                        "username": "abhinav__19",
                        "content": "A small hint for negative numbers, return false."
                    },
                    {
                        "username": "raja_1234_raja",
                        "content": "woww what a hit abhinav tqs da "
                    },
                    {
                        "username": "princejacob",
                        "content": "Folks, like many of you (maybe?) I stumbled on this question.  It\\'s categorized as Easy.  Sure...easy if you know the answer.  The challenge is, you can\\'t (shouldn\\'t) convert the integer to a string.  Why?  Because the question is about **math**.  \\n\\nThey\\'re not looking for substring manipulation, they\\'re looking for integer manipulation.  \\n"
                    },
                    {
                        "username": "yasaminashoori",
                        "content": "Hi, i run my code in Vs code and everything wroks correctly but I don't know why did it give me error in leetcode  and says WRONG ANSWER. Any idea ? "
                    },
                    {
                        "username": "krushna2604",
                        "content": "same problem in two other code also, but why?"
                    },
                    {
                        "username": "nasta978",
                        "content": "\\u0418 \\u0443 \\u043C\\u0435\\u043D\\u044F \\u0442\\u043E\\u0436\\u0435(("
                    },
                    {
                        "username": "Suryam_Pathak",
                        "content": "same problem bro"
                    },
                    {
                        "username": "pth_1641",
                        "content": "var isPalindrome = (x) => x.toString().split(\\'\\').reverse().join(\\'\\') === x.toString() ? true : false;"
                    },
                    {
                        "username": "emailsemails7",
                        "content": "let isPalindrome = x => x === +[...\\'\\'+x].reverse().join(\\'\\')"
                    },
                    {
                        "username": "jwheeler27",
                        "content": "return str(x) == str(x)[::-1]\\n\\nGotta love typecasting and string slicing."
                    },
                    {
                        "username": "saikot1223",
                        "content": "How can i make the int x into string in c++??"
                    },
                    {
                        "username": "user6235iz",
                        "content": "one would use google for that"
                    },
                    {
                        "username": "batrapunit1999",
                        "content": "Use to_string()."
                    },
                    {
                        "username": "mijitsu",
                        "content": "![image](https://assets.leetcode.com/users/images/906f8bfe-a327-4d38-b9a3-4fc94e417e41_1656541936.6629639.png)\\n"
                    },
                    {
                        "username": "shivamsingh_",
                        "content": "How did you resolve the problem?"
                    }
                ]
            },
            {
                "id": 1715373,
                "content": [
                    {
                        "username": "tang3117022",
                        "content": "\\nHi,\\n\\nI am a little confused about the restriction of this question.\\n\\nWe are not allowed to use extra space in this question, does it mean we can not declare any variables except for x?\\n\\nThanks."
                    },
                    {
                        "username": "sakshichoudhary148",
                        "content": "we can. it is not possible without using another variable."
                    },
                    {
                        "username": "luqmansen",
                        "content": "extra space that grow as the input grow. Defining variable that use constant memory is allowed"
                    },
                    {
                        "username": "AlgoEngine",
                        "content": "Video visualizing the official LeetCode solution:\n\nhttps://www.youtube.com/watch?v=OlTk8wM48ww"
                    },
                    {
                        "username": "abhinav__19",
                        "content": "A small hint for negative numbers, return false."
                    },
                    {
                        "username": "raja_1234_raja",
                        "content": "woww what a hit abhinav tqs da "
                    },
                    {
                        "username": "princejacob",
                        "content": "Folks, like many of you (maybe?) I stumbled on this question.  It\\'s categorized as Easy.  Sure...easy if you know the answer.  The challenge is, you can\\'t (shouldn\\'t) convert the integer to a string.  Why?  Because the question is about **math**.  \\n\\nThey\\'re not looking for substring manipulation, they\\'re looking for integer manipulation.  \\n"
                    },
                    {
                        "username": "yasaminashoori",
                        "content": "Hi, i run my code in Vs code and everything wroks correctly but I don't know why did it give me error in leetcode  and says WRONG ANSWER. Any idea ? "
                    },
                    {
                        "username": "krushna2604",
                        "content": "same problem in two other code also, but why?"
                    },
                    {
                        "username": "nasta978",
                        "content": "\\u0418 \\u0443 \\u043C\\u0435\\u043D\\u044F \\u0442\\u043E\\u0436\\u0435(("
                    },
                    {
                        "username": "Suryam_Pathak",
                        "content": "same problem bro"
                    },
                    {
                        "username": "pth_1641",
                        "content": "var isPalindrome = (x) => x.toString().split(\\'\\').reverse().join(\\'\\') === x.toString() ? true : false;"
                    },
                    {
                        "username": "emailsemails7",
                        "content": "let isPalindrome = x => x === +[...\\'\\'+x].reverse().join(\\'\\')"
                    },
                    {
                        "username": "jwheeler27",
                        "content": "return str(x) == str(x)[::-1]\\n\\nGotta love typecasting and string slicing."
                    },
                    {
                        "username": "saikot1223",
                        "content": "How can i make the int x into string in c++??"
                    },
                    {
                        "username": "user6235iz",
                        "content": "one would use google for that"
                    },
                    {
                        "username": "batrapunit1999",
                        "content": "Use to_string()."
                    },
                    {
                        "username": "mijitsu",
                        "content": "![image](https://assets.leetcode.com/users/images/906f8bfe-a327-4d38-b9a3-4fc94e417e41_1656541936.6629639.png)\\n"
                    },
                    {
                        "username": "shivamsingh_",
                        "content": "How did you resolve the problem?"
                    }
                ]
            },
            {
                "id": 1576968,
                "content": [
                    {
                        "username": "tang3117022",
                        "content": "\\nHi,\\n\\nI am a little confused about the restriction of this question.\\n\\nWe are not allowed to use extra space in this question, does it mean we can not declare any variables except for x?\\n\\nThanks."
                    },
                    {
                        "username": "sakshichoudhary148",
                        "content": "we can. it is not possible without using another variable."
                    },
                    {
                        "username": "luqmansen",
                        "content": "extra space that grow as the input grow. Defining variable that use constant memory is allowed"
                    },
                    {
                        "username": "AlgoEngine",
                        "content": "Video visualizing the official LeetCode solution:\n\nhttps://www.youtube.com/watch?v=OlTk8wM48ww"
                    },
                    {
                        "username": "abhinav__19",
                        "content": "A small hint for negative numbers, return false."
                    },
                    {
                        "username": "raja_1234_raja",
                        "content": "woww what a hit abhinav tqs da "
                    },
                    {
                        "username": "princejacob",
                        "content": "Folks, like many of you (maybe?) I stumbled on this question.  It\\'s categorized as Easy.  Sure...easy if you know the answer.  The challenge is, you can\\'t (shouldn\\'t) convert the integer to a string.  Why?  Because the question is about **math**.  \\n\\nThey\\'re not looking for substring manipulation, they\\'re looking for integer manipulation.  \\n"
                    },
                    {
                        "username": "yasaminashoori",
                        "content": "Hi, i run my code in Vs code and everything wroks correctly but I don't know why did it give me error in leetcode  and says WRONG ANSWER. Any idea ? "
                    },
                    {
                        "username": "krushna2604",
                        "content": "same problem in two other code also, but why?"
                    },
                    {
                        "username": "nasta978",
                        "content": "\\u0418 \\u0443 \\u043C\\u0435\\u043D\\u044F \\u0442\\u043E\\u0436\\u0435(("
                    },
                    {
                        "username": "Suryam_Pathak",
                        "content": "same problem bro"
                    },
                    {
                        "username": "pth_1641",
                        "content": "var isPalindrome = (x) => x.toString().split(\\'\\').reverse().join(\\'\\') === x.toString() ? true : false;"
                    },
                    {
                        "username": "emailsemails7",
                        "content": "let isPalindrome = x => x === +[...\\'\\'+x].reverse().join(\\'\\')"
                    },
                    {
                        "username": "jwheeler27",
                        "content": "return str(x) == str(x)[::-1]\\n\\nGotta love typecasting and string slicing."
                    },
                    {
                        "username": "saikot1223",
                        "content": "How can i make the int x into string in c++??"
                    },
                    {
                        "username": "user6235iz",
                        "content": "one would use google for that"
                    },
                    {
                        "username": "batrapunit1999",
                        "content": "Use to_string()."
                    },
                    {
                        "username": "mijitsu",
                        "content": "![image](https://assets.leetcode.com/users/images/906f8bfe-a327-4d38-b9a3-4fc94e417e41_1656541936.6629639.png)\\n"
                    },
                    {
                        "username": "shivamsingh_",
                        "content": "How did you resolve the problem?"
                    }
                ]
            },
            {
                "id": 1576136,
                "content": [
                    {
                        "username": "sairamravuri",
                        "content": "![image](https://assets.leetcode.com/users/images/69176788-e14e-48f0-9949-17b2faa2dd31_1640783105.5426483.jpeg)\\n"
                    },
                    {
                        "username": "camoverride",
                        "content": "Reversing the number and checking whether it equals the un-reversed version is a test of your coding ability, and might appear in a basic coding interview. The \"don\\'t convert to a string\" variation will NEVER appear in an interview and is a bullshit question. Here\\'s why:\\n\\n1) You solved the problem by stringifying it. Why overthink things and use complicated and hard-to-debug math?\\n2) The \"algorithmic\" component of this is NOT part of a broader problem-solving paradigm in comptuer science (think of dynamic programming, graph algorithms, etc). Rather, it\\'s a one-off math trick.\\n"
                    },
                    {
                        "username": "ananyaa1204",
                        "content": " `class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n      int temp, rev=0;\\n      temp = x;\\n      \\n      while(x != 0) {\\n         rev = (rev*10) + (x%10);\\n         x = x/10;\\n      }\\n      \\n      if(temp == rev)\\n        return true;\\n      else \\n       return false;\\n    }\\n};`\\nIDK what\\'s wrong with my  code. however the testcase is being failed for -121"
                    },
                    {
                        "username": "user3522n",
                        "content": "Make sure to short circuit the function if x is a negative number."
                    },
                    {
                        "username": "levebrains",
                        "content": "Hello. \\nI have problem with case x = 10. When I run my progam in PyCharm it works and return \\'false\\' but when I run it here I got wrong (my output \\'true\\'). Could anyone tell me please why it so? "
                    },
                    {
                        "username": "jayasrinadhp",
                        "content": "try this, i also had problem with test cases like 10,100.... Below code may resolve it.\\n\\nString s = Integer.toString(x);\\n    int i =0,j=s.length()-1;\\n    boolean f = true;\\n    while(i<=j){\\n        if(s.charAt(i)!=s.charAt(j))\\n          return false;\\n        i++;\\n        j--;\\n    }\\n    return f;"
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\nThe solutions will have detailed explaination.\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n**If you got any problem about the explanation or you need other programming language solution, please feel free to let me know.**\\n\\nSee more LeetCode solution : [https://zyrastory.com/en/category/coding-en/leetcode-en/](https://zyrastory.com/en/category/coding-en/leetcode-en/)\\n\\nThanks!\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "gd_daredevil",
                        "content": "![image](https://assets.leetcode.com/users/images/40d82a71-08a9-42ee-a9a2-fbbcf986ba2d_1653364187.5387318.png)\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/\\n"
                    },
                    {
                        "username": "ny25",
                        "content": "\\t\\n\\treturn str(x)==str(x)[::-1]\\n\\t"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "gignupg",
                        "content": "For all the noobs like me who struggle to understand the time complexity in the solution:\\nThe time complexity in this solution is O(log10(n)). Note that O(log10(n)) is ESSENTIALLY equivalent to O(n) if we use different values for n. So let\\'s do that real quick. Let\\'s replace each n with something else. O(log10(a)) where \"a\" is the input value itself and O(b) where \"b\" is the length of the input. \\nIf let\\'s say our input is 100, \"a\" will be 100 and \"b\" will be 3 (our input 100 consists of three numbers and has therefore a length of 3). \\nNote that O(a) does not equal O(b). However, O(log10(a)) equals O(b) or in other words log10(a) equals \"b\". \\nLet\\'s replace \"a\" with our input 100. So we get log10(100) which we can put in our calculator or simply do in our heads or on paper. Anyway, the result is 2. In other words, log10(100) = 2. Because 10\\xB2 = 100.  \\nWith an input of 1000, O(log10(1000)) will be 3 and with an input of 10000, O(log10(10000)) will be 4. As you can see, O(log10(a)) as well as O(b) both get gradually bigger as the input becomes bigger. So in both cases we\\'re dealing with linear time complexity and they are essentially saying the same thing. I hope that made sense and I hope it helped ;)"
                    }
                ]
            },
            {
                "id": 1568482,
                "content": [
                    {
                        "username": "sairamravuri",
                        "content": "![image](https://assets.leetcode.com/users/images/69176788-e14e-48f0-9949-17b2faa2dd31_1640783105.5426483.jpeg)\\n"
                    },
                    {
                        "username": "camoverride",
                        "content": "Reversing the number and checking whether it equals the un-reversed version is a test of your coding ability, and might appear in a basic coding interview. The \"don\\'t convert to a string\" variation will NEVER appear in an interview and is a bullshit question. Here\\'s why:\\n\\n1) You solved the problem by stringifying it. Why overthink things and use complicated and hard-to-debug math?\\n2) The \"algorithmic\" component of this is NOT part of a broader problem-solving paradigm in comptuer science (think of dynamic programming, graph algorithms, etc). Rather, it\\'s a one-off math trick.\\n"
                    },
                    {
                        "username": "ananyaa1204",
                        "content": " `class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n      int temp, rev=0;\\n      temp = x;\\n      \\n      while(x != 0) {\\n         rev = (rev*10) + (x%10);\\n         x = x/10;\\n      }\\n      \\n      if(temp == rev)\\n        return true;\\n      else \\n       return false;\\n    }\\n};`\\nIDK what\\'s wrong with my  code. however the testcase is being failed for -121"
                    },
                    {
                        "username": "user3522n",
                        "content": "Make sure to short circuit the function if x is a negative number."
                    },
                    {
                        "username": "levebrains",
                        "content": "Hello. \\nI have problem with case x = 10. When I run my progam in PyCharm it works and return \\'false\\' but when I run it here I got wrong (my output \\'true\\'). Could anyone tell me please why it so? "
                    },
                    {
                        "username": "jayasrinadhp",
                        "content": "try this, i also had problem with test cases like 10,100.... Below code may resolve it.\\n\\nString s = Integer.toString(x);\\n    int i =0,j=s.length()-1;\\n    boolean f = true;\\n    while(i<=j){\\n        if(s.charAt(i)!=s.charAt(j))\\n          return false;\\n        i++;\\n        j--;\\n    }\\n    return f;"
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\nThe solutions will have detailed explaination.\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n**If you got any problem about the explanation or you need other programming language solution, please feel free to let me know.**\\n\\nSee more LeetCode solution : [https://zyrastory.com/en/category/coding-en/leetcode-en/](https://zyrastory.com/en/category/coding-en/leetcode-en/)\\n\\nThanks!\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "gd_daredevil",
                        "content": "![image](https://assets.leetcode.com/users/images/40d82a71-08a9-42ee-a9a2-fbbcf986ba2d_1653364187.5387318.png)\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/\\n"
                    },
                    {
                        "username": "ny25",
                        "content": "\\t\\n\\treturn str(x)==str(x)[::-1]\\n\\t"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "gignupg",
                        "content": "For all the noobs like me who struggle to understand the time complexity in the solution:\\nThe time complexity in this solution is O(log10(n)). Note that O(log10(n)) is ESSENTIALLY equivalent to O(n) if we use different values for n. So let\\'s do that real quick. Let\\'s replace each n with something else. O(log10(a)) where \"a\" is the input value itself and O(b) where \"b\" is the length of the input. \\nIf let\\'s say our input is 100, \"a\" will be 100 and \"b\" will be 3 (our input 100 consists of three numbers and has therefore a length of 3). \\nNote that O(a) does not equal O(b). However, O(log10(a)) equals O(b) or in other words log10(a) equals \"b\". \\nLet\\'s replace \"a\" with our input 100. So we get log10(100) which we can put in our calculator or simply do in our heads or on paper. Anyway, the result is 2. In other words, log10(100) = 2. Because 10\\xB2 = 100.  \\nWith an input of 1000, O(log10(1000)) will be 3 and with an input of 10000, O(log10(10000)) will be 4. As you can see, O(log10(a)) as well as O(b) both get gradually bigger as the input becomes bigger. So in both cases we\\'re dealing with linear time complexity and they are essentially saying the same thing. I hope that made sense and I hope it helped ;)"
                    }
                ]
            },
            {
                "id": 2013450,
                "content": [
                    {
                        "username": "sairamravuri",
                        "content": "![image](https://assets.leetcode.com/users/images/69176788-e14e-48f0-9949-17b2faa2dd31_1640783105.5426483.jpeg)\\n"
                    },
                    {
                        "username": "camoverride",
                        "content": "Reversing the number and checking whether it equals the un-reversed version is a test of your coding ability, and might appear in a basic coding interview. The \"don\\'t convert to a string\" variation will NEVER appear in an interview and is a bullshit question. Here\\'s why:\\n\\n1) You solved the problem by stringifying it. Why overthink things and use complicated and hard-to-debug math?\\n2) The \"algorithmic\" component of this is NOT part of a broader problem-solving paradigm in comptuer science (think of dynamic programming, graph algorithms, etc). Rather, it\\'s a one-off math trick.\\n"
                    },
                    {
                        "username": "ananyaa1204",
                        "content": " `class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n      int temp, rev=0;\\n      temp = x;\\n      \\n      while(x != 0) {\\n         rev = (rev*10) + (x%10);\\n         x = x/10;\\n      }\\n      \\n      if(temp == rev)\\n        return true;\\n      else \\n       return false;\\n    }\\n};`\\nIDK what\\'s wrong with my  code. however the testcase is being failed for -121"
                    },
                    {
                        "username": "user3522n",
                        "content": "Make sure to short circuit the function if x is a negative number."
                    },
                    {
                        "username": "levebrains",
                        "content": "Hello. \\nI have problem with case x = 10. When I run my progam in PyCharm it works and return \\'false\\' but when I run it here I got wrong (my output \\'true\\'). Could anyone tell me please why it so? "
                    },
                    {
                        "username": "jayasrinadhp",
                        "content": "try this, i also had problem with test cases like 10,100.... Below code may resolve it.\\n\\nString s = Integer.toString(x);\\n    int i =0,j=s.length()-1;\\n    boolean f = true;\\n    while(i<=j){\\n        if(s.charAt(i)!=s.charAt(j))\\n          return false;\\n        i++;\\n        j--;\\n    }\\n    return f;"
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\nThe solutions will have detailed explaination.\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n**If you got any problem about the explanation or you need other programming language solution, please feel free to let me know.**\\n\\nSee more LeetCode solution : [https://zyrastory.com/en/category/coding-en/leetcode-en/](https://zyrastory.com/en/category/coding-en/leetcode-en/)\\n\\nThanks!\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "gd_daredevil",
                        "content": "![image](https://assets.leetcode.com/users/images/40d82a71-08a9-42ee-a9a2-fbbcf986ba2d_1653364187.5387318.png)\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/\\n"
                    },
                    {
                        "username": "ny25",
                        "content": "\\t\\n\\treturn str(x)==str(x)[::-1]\\n\\t"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "gignupg",
                        "content": "For all the noobs like me who struggle to understand the time complexity in the solution:\\nThe time complexity in this solution is O(log10(n)). Note that O(log10(n)) is ESSENTIALLY equivalent to O(n) if we use different values for n. So let\\'s do that real quick. Let\\'s replace each n with something else. O(log10(a)) where \"a\" is the input value itself and O(b) where \"b\" is the length of the input. \\nIf let\\'s say our input is 100, \"a\" will be 100 and \"b\" will be 3 (our input 100 consists of three numbers and has therefore a length of 3). \\nNote that O(a) does not equal O(b). However, O(log10(a)) equals O(b) or in other words log10(a) equals \"b\". \\nLet\\'s replace \"a\" with our input 100. So we get log10(100) which we can put in our calculator or simply do in our heads or on paper. Anyway, the result is 2. In other words, log10(100) = 2. Because 10\\xB2 = 100.  \\nWith an input of 1000, O(log10(1000)) will be 3 and with an input of 10000, O(log10(10000)) will be 4. As you can see, O(log10(a)) as well as O(b) both get gradually bigger as the input becomes bigger. So in both cases we\\'re dealing with linear time complexity and they are essentially saying the same thing. I hope that made sense and I hope it helped ;)"
                    }
                ]
            },
            {
                "id": 1845665,
                "content": [
                    {
                        "username": "sairamravuri",
                        "content": "![image](https://assets.leetcode.com/users/images/69176788-e14e-48f0-9949-17b2faa2dd31_1640783105.5426483.jpeg)\\n"
                    },
                    {
                        "username": "camoverride",
                        "content": "Reversing the number and checking whether it equals the un-reversed version is a test of your coding ability, and might appear in a basic coding interview. The \"don\\'t convert to a string\" variation will NEVER appear in an interview and is a bullshit question. Here\\'s why:\\n\\n1) You solved the problem by stringifying it. Why overthink things and use complicated and hard-to-debug math?\\n2) The \"algorithmic\" component of this is NOT part of a broader problem-solving paradigm in comptuer science (think of dynamic programming, graph algorithms, etc). Rather, it\\'s a one-off math trick.\\n"
                    },
                    {
                        "username": "ananyaa1204",
                        "content": " `class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n      int temp, rev=0;\\n      temp = x;\\n      \\n      while(x != 0) {\\n         rev = (rev*10) + (x%10);\\n         x = x/10;\\n      }\\n      \\n      if(temp == rev)\\n        return true;\\n      else \\n       return false;\\n    }\\n};`\\nIDK what\\'s wrong with my  code. however the testcase is being failed for -121"
                    },
                    {
                        "username": "user3522n",
                        "content": "Make sure to short circuit the function if x is a negative number."
                    },
                    {
                        "username": "levebrains",
                        "content": "Hello. \\nI have problem with case x = 10. When I run my progam in PyCharm it works and return \\'false\\' but when I run it here I got wrong (my output \\'true\\'). Could anyone tell me please why it so? "
                    },
                    {
                        "username": "jayasrinadhp",
                        "content": "try this, i also had problem with test cases like 10,100.... Below code may resolve it.\\n\\nString s = Integer.toString(x);\\n    int i =0,j=s.length()-1;\\n    boolean f = true;\\n    while(i<=j){\\n        if(s.charAt(i)!=s.charAt(j))\\n          return false;\\n        i++;\\n        j--;\\n    }\\n    return f;"
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\nThe solutions will have detailed explaination.\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n**If you got any problem about the explanation or you need other programming language solution, please feel free to let me know.**\\n\\nSee more LeetCode solution : [https://zyrastory.com/en/category/coding-en/leetcode-en/](https://zyrastory.com/en/category/coding-en/leetcode-en/)\\n\\nThanks!\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "gd_daredevil",
                        "content": "![image](https://assets.leetcode.com/users/images/40d82a71-08a9-42ee-a9a2-fbbcf986ba2d_1653364187.5387318.png)\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/\\n"
                    },
                    {
                        "username": "ny25",
                        "content": "\\t\\n\\treturn str(x)==str(x)[::-1]\\n\\t"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "gignupg",
                        "content": "For all the noobs like me who struggle to understand the time complexity in the solution:\\nThe time complexity in this solution is O(log10(n)). Note that O(log10(n)) is ESSENTIALLY equivalent to O(n) if we use different values for n. So let\\'s do that real quick. Let\\'s replace each n with something else. O(log10(a)) where \"a\" is the input value itself and O(b) where \"b\" is the length of the input. \\nIf let\\'s say our input is 100, \"a\" will be 100 and \"b\" will be 3 (our input 100 consists of three numbers and has therefore a length of 3). \\nNote that O(a) does not equal O(b). However, O(log10(a)) equals O(b) or in other words log10(a) equals \"b\". \\nLet\\'s replace \"a\" with our input 100. So we get log10(100) which we can put in our calculator or simply do in our heads or on paper. Anyway, the result is 2. In other words, log10(100) = 2. Because 10\\xB2 = 100.  \\nWith an input of 1000, O(log10(1000)) will be 3 and with an input of 10000, O(log10(10000)) will be 4. As you can see, O(log10(a)) as well as O(b) both get gradually bigger as the input becomes bigger. So in both cases we\\'re dealing with linear time complexity and they are essentially saying the same thing. I hope that made sense and I hope it helped ;)"
                    }
                ]
            },
            {
                "id": 1576849,
                "content": [
                    {
                        "username": "sairamravuri",
                        "content": "![image](https://assets.leetcode.com/users/images/69176788-e14e-48f0-9949-17b2faa2dd31_1640783105.5426483.jpeg)\\n"
                    },
                    {
                        "username": "camoverride",
                        "content": "Reversing the number and checking whether it equals the un-reversed version is a test of your coding ability, and might appear in a basic coding interview. The \"don\\'t convert to a string\" variation will NEVER appear in an interview and is a bullshit question. Here\\'s why:\\n\\n1) You solved the problem by stringifying it. Why overthink things and use complicated and hard-to-debug math?\\n2) The \"algorithmic\" component of this is NOT part of a broader problem-solving paradigm in comptuer science (think of dynamic programming, graph algorithms, etc). Rather, it\\'s a one-off math trick.\\n"
                    },
                    {
                        "username": "ananyaa1204",
                        "content": " `class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n      int temp, rev=0;\\n      temp = x;\\n      \\n      while(x != 0) {\\n         rev = (rev*10) + (x%10);\\n         x = x/10;\\n      }\\n      \\n      if(temp == rev)\\n        return true;\\n      else \\n       return false;\\n    }\\n};`\\nIDK what\\'s wrong with my  code. however the testcase is being failed for -121"
                    },
                    {
                        "username": "user3522n",
                        "content": "Make sure to short circuit the function if x is a negative number."
                    },
                    {
                        "username": "levebrains",
                        "content": "Hello. \\nI have problem with case x = 10. When I run my progam in PyCharm it works and return \\'false\\' but when I run it here I got wrong (my output \\'true\\'). Could anyone tell me please why it so? "
                    },
                    {
                        "username": "jayasrinadhp",
                        "content": "try this, i also had problem with test cases like 10,100.... Below code may resolve it.\\n\\nString s = Integer.toString(x);\\n    int i =0,j=s.length()-1;\\n    boolean f = true;\\n    while(i<=j){\\n        if(s.charAt(i)!=s.charAt(j))\\n          return false;\\n        i++;\\n        j--;\\n    }\\n    return f;"
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\nThe solutions will have detailed explaination.\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n**If you got any problem about the explanation or you need other programming language solution, please feel free to let me know.**\\n\\nSee more LeetCode solution : [https://zyrastory.com/en/category/coding-en/leetcode-en/](https://zyrastory.com/en/category/coding-en/leetcode-en/)\\n\\nThanks!\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "gd_daredevil",
                        "content": "![image](https://assets.leetcode.com/users/images/40d82a71-08a9-42ee-a9a2-fbbcf986ba2d_1653364187.5387318.png)\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/\\n"
                    },
                    {
                        "username": "ny25",
                        "content": "\\t\\n\\treturn str(x)==str(x)[::-1]\\n\\t"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "gignupg",
                        "content": "For all the noobs like me who struggle to understand the time complexity in the solution:\\nThe time complexity in this solution is O(log10(n)). Note that O(log10(n)) is ESSENTIALLY equivalent to O(n) if we use different values for n. So let\\'s do that real quick. Let\\'s replace each n with something else. O(log10(a)) where \"a\" is the input value itself and O(b) where \"b\" is the length of the input. \\nIf let\\'s say our input is 100, \"a\" will be 100 and \"b\" will be 3 (our input 100 consists of three numbers and has therefore a length of 3). \\nNote that O(a) does not equal O(b). However, O(log10(a)) equals O(b) or in other words log10(a) equals \"b\". \\nLet\\'s replace \"a\" with our input 100. So we get log10(100) which we can put in our calculator or simply do in our heads or on paper. Anyway, the result is 2. In other words, log10(100) = 2. Because 10\\xB2 = 100.  \\nWith an input of 1000, O(log10(1000)) will be 3 and with an input of 10000, O(log10(10000)) will be 4. As you can see, O(log10(a)) as well as O(b) both get gradually bigger as the input becomes bigger. So in both cases we\\'re dealing with linear time complexity and they are essentially saying the same thing. I hope that made sense and I hope it helped ;)"
                    }
                ]
            },
            {
                "id": 1576802,
                "content": [
                    {
                        "username": "sairamravuri",
                        "content": "![image](https://assets.leetcode.com/users/images/69176788-e14e-48f0-9949-17b2faa2dd31_1640783105.5426483.jpeg)\\n"
                    },
                    {
                        "username": "camoverride",
                        "content": "Reversing the number and checking whether it equals the un-reversed version is a test of your coding ability, and might appear in a basic coding interview. The \"don\\'t convert to a string\" variation will NEVER appear in an interview and is a bullshit question. Here\\'s why:\\n\\n1) You solved the problem by stringifying it. Why overthink things and use complicated and hard-to-debug math?\\n2) The \"algorithmic\" component of this is NOT part of a broader problem-solving paradigm in comptuer science (think of dynamic programming, graph algorithms, etc). Rather, it\\'s a one-off math trick.\\n"
                    },
                    {
                        "username": "ananyaa1204",
                        "content": " `class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n      int temp, rev=0;\\n      temp = x;\\n      \\n      while(x != 0) {\\n         rev = (rev*10) + (x%10);\\n         x = x/10;\\n      }\\n      \\n      if(temp == rev)\\n        return true;\\n      else \\n       return false;\\n    }\\n};`\\nIDK what\\'s wrong with my  code. however the testcase is being failed for -121"
                    },
                    {
                        "username": "user3522n",
                        "content": "Make sure to short circuit the function if x is a negative number."
                    },
                    {
                        "username": "levebrains",
                        "content": "Hello. \\nI have problem with case x = 10. When I run my progam in PyCharm it works and return \\'false\\' but when I run it here I got wrong (my output \\'true\\'). Could anyone tell me please why it so? "
                    },
                    {
                        "username": "jayasrinadhp",
                        "content": "try this, i also had problem with test cases like 10,100.... Below code may resolve it.\\n\\nString s = Integer.toString(x);\\n    int i =0,j=s.length()-1;\\n    boolean f = true;\\n    while(i<=j){\\n        if(s.charAt(i)!=s.charAt(j))\\n          return false;\\n        i++;\\n        j--;\\n    }\\n    return f;"
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\nThe solutions will have detailed explaination.\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n**If you got any problem about the explanation or you need other programming language solution, please feel free to let me know.**\\n\\nSee more LeetCode solution : [https://zyrastory.com/en/category/coding-en/leetcode-en/](https://zyrastory.com/en/category/coding-en/leetcode-en/)\\n\\nThanks!\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "gd_daredevil",
                        "content": "![image](https://assets.leetcode.com/users/images/40d82a71-08a9-42ee-a9a2-fbbcf986ba2d_1653364187.5387318.png)\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/\\n"
                    },
                    {
                        "username": "ny25",
                        "content": "\\t\\n\\treturn str(x)==str(x)[::-1]\\n\\t"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "gignupg",
                        "content": "For all the noobs like me who struggle to understand the time complexity in the solution:\\nThe time complexity in this solution is O(log10(n)). Note that O(log10(n)) is ESSENTIALLY equivalent to O(n) if we use different values for n. So let\\'s do that real quick. Let\\'s replace each n with something else. O(log10(a)) where \"a\" is the input value itself and O(b) where \"b\" is the length of the input. \\nIf let\\'s say our input is 100, \"a\" will be 100 and \"b\" will be 3 (our input 100 consists of three numbers and has therefore a length of 3). \\nNote that O(a) does not equal O(b). However, O(log10(a)) equals O(b) or in other words log10(a) equals \"b\". \\nLet\\'s replace \"a\" with our input 100. So we get log10(100) which we can put in our calculator or simply do in our heads or on paper. Anyway, the result is 2. In other words, log10(100) = 2. Because 10\\xB2 = 100.  \\nWith an input of 1000, O(log10(1000)) will be 3 and with an input of 10000, O(log10(10000)) will be 4. As you can see, O(log10(a)) as well as O(b) both get gradually bigger as the input becomes bigger. So in both cases we\\'re dealing with linear time complexity and they are essentially saying the same thing. I hope that made sense and I hope it helped ;)"
                    }
                ]
            },
            {
                "id": 1576801,
                "content": [
                    {
                        "username": "sairamravuri",
                        "content": "![image](https://assets.leetcode.com/users/images/69176788-e14e-48f0-9949-17b2faa2dd31_1640783105.5426483.jpeg)\\n"
                    },
                    {
                        "username": "camoverride",
                        "content": "Reversing the number and checking whether it equals the un-reversed version is a test of your coding ability, and might appear in a basic coding interview. The \"don\\'t convert to a string\" variation will NEVER appear in an interview and is a bullshit question. Here\\'s why:\\n\\n1) You solved the problem by stringifying it. Why overthink things and use complicated and hard-to-debug math?\\n2) The \"algorithmic\" component of this is NOT part of a broader problem-solving paradigm in comptuer science (think of dynamic programming, graph algorithms, etc). Rather, it\\'s a one-off math trick.\\n"
                    },
                    {
                        "username": "ananyaa1204",
                        "content": " `class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n      int temp, rev=0;\\n      temp = x;\\n      \\n      while(x != 0) {\\n         rev = (rev*10) + (x%10);\\n         x = x/10;\\n      }\\n      \\n      if(temp == rev)\\n        return true;\\n      else \\n       return false;\\n    }\\n};`\\nIDK what\\'s wrong with my  code. however the testcase is being failed for -121"
                    },
                    {
                        "username": "user3522n",
                        "content": "Make sure to short circuit the function if x is a negative number."
                    },
                    {
                        "username": "levebrains",
                        "content": "Hello. \\nI have problem with case x = 10. When I run my progam in PyCharm it works and return \\'false\\' but when I run it here I got wrong (my output \\'true\\'). Could anyone tell me please why it so? "
                    },
                    {
                        "username": "jayasrinadhp",
                        "content": "try this, i also had problem with test cases like 10,100.... Below code may resolve it.\\n\\nString s = Integer.toString(x);\\n    int i =0,j=s.length()-1;\\n    boolean f = true;\\n    while(i<=j){\\n        if(s.charAt(i)!=s.charAt(j))\\n          return false;\\n        i++;\\n        j--;\\n    }\\n    return f;"
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\nThe solutions will have detailed explaination.\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n**If you got any problem about the explanation or you need other programming language solution, please feel free to let me know.**\\n\\nSee more LeetCode solution : [https://zyrastory.com/en/category/coding-en/leetcode-en/](https://zyrastory.com/en/category/coding-en/leetcode-en/)\\n\\nThanks!\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "gd_daredevil",
                        "content": "![image](https://assets.leetcode.com/users/images/40d82a71-08a9-42ee-a9a2-fbbcf986ba2d_1653364187.5387318.png)\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/\\n"
                    },
                    {
                        "username": "ny25",
                        "content": "\\t\\n\\treturn str(x)==str(x)[::-1]\\n\\t"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "gignupg",
                        "content": "For all the noobs like me who struggle to understand the time complexity in the solution:\\nThe time complexity in this solution is O(log10(n)). Note that O(log10(n)) is ESSENTIALLY equivalent to O(n) if we use different values for n. So let\\'s do that real quick. Let\\'s replace each n with something else. O(log10(a)) where \"a\" is the input value itself and O(b) where \"b\" is the length of the input. \\nIf let\\'s say our input is 100, \"a\" will be 100 and \"b\" will be 3 (our input 100 consists of three numbers and has therefore a length of 3). \\nNote that O(a) does not equal O(b). However, O(log10(a)) equals O(b) or in other words log10(a) equals \"b\". \\nLet\\'s replace \"a\" with our input 100. So we get log10(100) which we can put in our calculator or simply do in our heads or on paper. Anyway, the result is 2. In other words, log10(100) = 2. Because 10\\xB2 = 100.  \\nWith an input of 1000, O(log10(1000)) will be 3 and with an input of 10000, O(log10(10000)) will be 4. As you can see, O(log10(a)) as well as O(b) both get gradually bigger as the input becomes bigger. So in both cases we\\'re dealing with linear time complexity and they are essentially saying the same thing. I hope that made sense and I hope it helped ;)"
                    }
                ]
            },
            {
                "id": 1576564,
                "content": [
                    {
                        "username": "sairamravuri",
                        "content": "![image](https://assets.leetcode.com/users/images/69176788-e14e-48f0-9949-17b2faa2dd31_1640783105.5426483.jpeg)\\n"
                    },
                    {
                        "username": "camoverride",
                        "content": "Reversing the number and checking whether it equals the un-reversed version is a test of your coding ability, and might appear in a basic coding interview. The \"don\\'t convert to a string\" variation will NEVER appear in an interview and is a bullshit question. Here\\'s why:\\n\\n1) You solved the problem by stringifying it. Why overthink things and use complicated and hard-to-debug math?\\n2) The \"algorithmic\" component of this is NOT part of a broader problem-solving paradigm in comptuer science (think of dynamic programming, graph algorithms, etc). Rather, it\\'s a one-off math trick.\\n"
                    },
                    {
                        "username": "ananyaa1204",
                        "content": " `class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n      int temp, rev=0;\\n      temp = x;\\n      \\n      while(x != 0) {\\n         rev = (rev*10) + (x%10);\\n         x = x/10;\\n      }\\n      \\n      if(temp == rev)\\n        return true;\\n      else \\n       return false;\\n    }\\n};`\\nIDK what\\'s wrong with my  code. however the testcase is being failed for -121"
                    },
                    {
                        "username": "user3522n",
                        "content": "Make sure to short circuit the function if x is a negative number."
                    },
                    {
                        "username": "levebrains",
                        "content": "Hello. \\nI have problem with case x = 10. When I run my progam in PyCharm it works and return \\'false\\' but when I run it here I got wrong (my output \\'true\\'). Could anyone tell me please why it so? "
                    },
                    {
                        "username": "jayasrinadhp",
                        "content": "try this, i also had problem with test cases like 10,100.... Below code may resolve it.\\n\\nString s = Integer.toString(x);\\n    int i =0,j=s.length()-1;\\n    boolean f = true;\\n    while(i<=j){\\n        if(s.charAt(i)!=s.charAt(j))\\n          return false;\\n        i++;\\n        j--;\\n    }\\n    return f;"
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\nThe solutions will have detailed explaination.\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n**If you got any problem about the explanation or you need other programming language solution, please feel free to let me know.**\\n\\nSee more LeetCode solution : [https://zyrastory.com/en/category/coding-en/leetcode-en/](https://zyrastory.com/en/category/coding-en/leetcode-en/)\\n\\nThanks!\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "gd_daredevil",
                        "content": "![image](https://assets.leetcode.com/users/images/40d82a71-08a9-42ee-a9a2-fbbcf986ba2d_1653364187.5387318.png)\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/\\n"
                    },
                    {
                        "username": "ny25",
                        "content": "\\t\\n\\treturn str(x)==str(x)[::-1]\\n\\t"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "gignupg",
                        "content": "For all the noobs like me who struggle to understand the time complexity in the solution:\\nThe time complexity in this solution is O(log10(n)). Note that O(log10(n)) is ESSENTIALLY equivalent to O(n) if we use different values for n. So let\\'s do that real quick. Let\\'s replace each n with something else. O(log10(a)) where \"a\" is the input value itself and O(b) where \"b\" is the length of the input. \\nIf let\\'s say our input is 100, \"a\" will be 100 and \"b\" will be 3 (our input 100 consists of three numbers and has therefore a length of 3). \\nNote that O(a) does not equal O(b). However, O(log10(a)) equals O(b) or in other words log10(a) equals \"b\". \\nLet\\'s replace \"a\" with our input 100. So we get log10(100) which we can put in our calculator or simply do in our heads or on paper. Anyway, the result is 2. In other words, log10(100) = 2. Because 10\\xB2 = 100.  \\nWith an input of 1000, O(log10(1000)) will be 3 and with an input of 10000, O(log10(10000)) will be 4. As you can see, O(log10(a)) as well as O(b) both get gradually bigger as the input becomes bigger. So in both cases we\\'re dealing with linear time complexity and they are essentially saying the same thing. I hope that made sense and I hope it helped ;)"
                    }
                ]
            },
            {
                "id": 1576325,
                "content": [
                    {
                        "username": "sairamravuri",
                        "content": "![image](https://assets.leetcode.com/users/images/69176788-e14e-48f0-9949-17b2faa2dd31_1640783105.5426483.jpeg)\\n"
                    },
                    {
                        "username": "camoverride",
                        "content": "Reversing the number and checking whether it equals the un-reversed version is a test of your coding ability, and might appear in a basic coding interview. The \"don\\'t convert to a string\" variation will NEVER appear in an interview and is a bullshit question. Here\\'s why:\\n\\n1) You solved the problem by stringifying it. Why overthink things and use complicated and hard-to-debug math?\\n2) The \"algorithmic\" component of this is NOT part of a broader problem-solving paradigm in comptuer science (think of dynamic programming, graph algorithms, etc). Rather, it\\'s a one-off math trick.\\n"
                    },
                    {
                        "username": "ananyaa1204",
                        "content": " `class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n      int temp, rev=0;\\n      temp = x;\\n      \\n      while(x != 0) {\\n         rev = (rev*10) + (x%10);\\n         x = x/10;\\n      }\\n      \\n      if(temp == rev)\\n        return true;\\n      else \\n       return false;\\n    }\\n};`\\nIDK what\\'s wrong with my  code. however the testcase is being failed for -121"
                    },
                    {
                        "username": "user3522n",
                        "content": "Make sure to short circuit the function if x is a negative number."
                    },
                    {
                        "username": "levebrains",
                        "content": "Hello. \\nI have problem with case x = 10. When I run my progam in PyCharm it works and return \\'false\\' but when I run it here I got wrong (my output \\'true\\'). Could anyone tell me please why it so? "
                    },
                    {
                        "username": "jayasrinadhp",
                        "content": "try this, i also had problem with test cases like 10,100.... Below code may resolve it.\\n\\nString s = Integer.toString(x);\\n    int i =0,j=s.length()-1;\\n    boolean f = true;\\n    while(i<=j){\\n        if(s.charAt(i)!=s.charAt(j))\\n          return false;\\n        i++;\\n        j--;\\n    }\\n    return f;"
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\nThe solutions will have detailed explaination.\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n**If you got any problem about the explanation or you need other programming language solution, please feel free to let me know.**\\n\\nSee more LeetCode solution : [https://zyrastory.com/en/category/coding-en/leetcode-en/](https://zyrastory.com/en/category/coding-en/leetcode-en/)\\n\\nThanks!\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "gd_daredevil",
                        "content": "![image](https://assets.leetcode.com/users/images/40d82a71-08a9-42ee-a9a2-fbbcf986ba2d_1653364187.5387318.png)\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/\\n"
                    },
                    {
                        "username": "ny25",
                        "content": "\\t\\n\\treturn str(x)==str(x)[::-1]\\n\\t"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "gignupg",
                        "content": "For all the noobs like me who struggle to understand the time complexity in the solution:\\nThe time complexity in this solution is O(log10(n)). Note that O(log10(n)) is ESSENTIALLY equivalent to O(n) if we use different values for n. So let\\'s do that real quick. Let\\'s replace each n with something else. O(log10(a)) where \"a\" is the input value itself and O(b) where \"b\" is the length of the input. \\nIf let\\'s say our input is 100, \"a\" will be 100 and \"b\" will be 3 (our input 100 consists of three numbers and has therefore a length of 3). \\nNote that O(a) does not equal O(b). However, O(log10(a)) equals O(b) or in other words log10(a) equals \"b\". \\nLet\\'s replace \"a\" with our input 100. So we get log10(100) which we can put in our calculator or simply do in our heads or on paper. Anyway, the result is 2. In other words, log10(100) = 2. Because 10\\xB2 = 100.  \\nWith an input of 1000, O(log10(1000)) will be 3 and with an input of 10000, O(log10(10000)) will be 4. As you can see, O(log10(a)) as well as O(b) both get gradually bigger as the input becomes bigger. So in both cases we\\'re dealing with linear time complexity and they are essentially saying the same thing. I hope that made sense and I hope it helped ;)"
                    }
                ]
            },
            {
                "id": 1574621,
                "content": [
                    {
                        "username": "sairamravuri",
                        "content": "![image](https://assets.leetcode.com/users/images/69176788-e14e-48f0-9949-17b2faa2dd31_1640783105.5426483.jpeg)\\n"
                    },
                    {
                        "username": "camoverride",
                        "content": "Reversing the number and checking whether it equals the un-reversed version is a test of your coding ability, and might appear in a basic coding interview. The \"don\\'t convert to a string\" variation will NEVER appear in an interview and is a bullshit question. Here\\'s why:\\n\\n1) You solved the problem by stringifying it. Why overthink things and use complicated and hard-to-debug math?\\n2) The \"algorithmic\" component of this is NOT part of a broader problem-solving paradigm in comptuer science (think of dynamic programming, graph algorithms, etc). Rather, it\\'s a one-off math trick.\\n"
                    },
                    {
                        "username": "ananyaa1204",
                        "content": " `class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n      int temp, rev=0;\\n      temp = x;\\n      \\n      while(x != 0) {\\n         rev = (rev*10) + (x%10);\\n         x = x/10;\\n      }\\n      \\n      if(temp == rev)\\n        return true;\\n      else \\n       return false;\\n    }\\n};`\\nIDK what\\'s wrong with my  code. however the testcase is being failed for -121"
                    },
                    {
                        "username": "user3522n",
                        "content": "Make sure to short circuit the function if x is a negative number."
                    },
                    {
                        "username": "levebrains",
                        "content": "Hello. \\nI have problem with case x = 10. When I run my progam in PyCharm it works and return \\'false\\' but when I run it here I got wrong (my output \\'true\\'). Could anyone tell me please why it so? "
                    },
                    {
                        "username": "jayasrinadhp",
                        "content": "try this, i also had problem with test cases like 10,100.... Below code may resolve it.\\n\\nString s = Integer.toString(x);\\n    int i =0,j=s.length()-1;\\n    boolean f = true;\\n    while(i<=j){\\n        if(s.charAt(i)!=s.charAt(j))\\n          return false;\\n        i++;\\n        j--;\\n    }\\n    return f;"
                    },
                    {
                        "username": "zyrastory",
                        "content": "Which have included C#, Java, Python3 solution\\n**(6/4 updated JavaScript version)**\\n\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-9-palindrome-number-solution-and-explanation-en/)\\u2B50\\n\\nThe solutions will have detailed explaination.\\n\\n![image](https://assets.leetcode.com/users/images/51586908-d770-44cf-8230-cd33d5906577_1654333005.8973863.jpeg)\\n\\n**If you got any problem about the explanation or you need other programming language solution, please feel free to let me know.**\\n\\nSee more LeetCode solution : [https://zyrastory.com/en/category/coding-en/leetcode-en/](https://zyrastory.com/en/category/coding-en/leetcode-en/)\\n\\nThanks!\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "gd_daredevil",
                        "content": "![image](https://assets.leetcode.com/users/images/40d82a71-08a9-42ee-a9a2-fbbcf986ba2d_1653364187.5387318.png)\\n"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/\\n"
                    },
                    {
                        "username": "ny25",
                        "content": "\\t\\n\\treturn str(x)==str(x)[::-1]\\n\\t"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "gignupg",
                        "content": "For all the noobs like me who struggle to understand the time complexity in the solution:\\nThe time complexity in this solution is O(log10(n)). Note that O(log10(n)) is ESSENTIALLY equivalent to O(n) if we use different values for n. So let\\'s do that real quick. Let\\'s replace each n with something else. O(log10(a)) where \"a\" is the input value itself and O(b) where \"b\" is the length of the input. \\nIf let\\'s say our input is 100, \"a\" will be 100 and \"b\" will be 3 (our input 100 consists of three numbers and has therefore a length of 3). \\nNote that O(a) does not equal O(b). However, O(log10(a)) equals O(b) or in other words log10(a) equals \"b\". \\nLet\\'s replace \"a\" with our input 100. So we get log10(100) which we can put in our calculator or simply do in our heads or on paper. Anyway, the result is 2. In other words, log10(100) = 2. Because 10\\xB2 = 100.  \\nWith an input of 1000, O(log10(1000)) will be 3 and with an input of 10000, O(log10(10000)) will be 4. As you can see, O(log10(a)) as well as O(b) both get gradually bigger as the input becomes bigger. So in both cases we\\'re dealing with linear time complexity and they are essentially saying the same thing. I hope that made sense and I hope it helped ;)"
                    }
                ]
            },
            {
                "id": 1574605,
                "content": [
                    {
                        "username": "Conane",
                        "content": "![image](https://assets.leetcode.com/users/images/4651264c-5e47-43f7-befe-b864610d07ac_1605656670.2109852.png)\\nWould you please do the complexity analysis for this solution.\\nThank you in advance"
                    },
                    {
                        "username": "msn_user",
                        "content": "No need for reversing the second half. There was more effcient ways to check for palindrome -\\nhttps://www.techiedelight.com/determine-given-number-palindrome-not/\\n"
                    },
                    {
                        "username": "Maruthi2000",
                        "content": "return str(x)==str(x)[::-1]"
                    },
                    {
                        "username": "muzik999",
                        "content": "return (x>=0 and x == int(str(x)[::-1]))"
                    },
                    {
                        "username": "Podilatis23",
                        "content": "return str(x) == str(x)[::-1]\\n\\n"
                    },
                    {
                        "username": "zhuzhua",
                        "content": "return x==int(str(abs(x))[::-1])"
                    },
                    {
                        "username": "hanburger97",
                        "content": "Perhaps someone can help me understand the time and space complexity here.\\nSince we are only processing integer, assuming that we convert it into a string, or an array of character, the fact that x is an integer (assuming long signed) makes it bounded by -2,147,483,648 to 2,147,483,647. Which means converting such into a string can never exceeds an array of 11 character.\\nSimilarly iterating through this character array can never exceed 11 iterations.\\nHence wouldn\\'t that make the string conversion O(1) for both space and time?"
                    },
                    {
                        "username": "HidyHan",
                        "content": "I think being nonnegative is a requirement of palindromes in this question. If so, I feel that it should be specified, since it does not seem intuitive to me..."
                    },
                    {
                        "username": "zhouji",
                        "content": "I don't think this is self-evident or has an obviously accepted convention. The question should be clarified."
                    },
                    {
                        "username": "ttsshh1990",
                        "content": "If a integer is palindrome number, then reversing this number will not cause overflow.\\nIn other words if overflow happened this number is not a palindrome number. \\nSo I am just wondering why we cannot just return false when overflow happens.\\nCan someone explain to me? Thanks a lot!"
                    }
                ]
            },
            {
                "id": 1574085,
                "content": [
                    {
                        "username": "Conane",
                        "content": "![image](https://assets.leetcode.com/users/images/4651264c-5e47-43f7-befe-b864610d07ac_1605656670.2109852.png)\\nWould you please do the complexity analysis for this solution.\\nThank you in advance"
                    },
                    {
                        "username": "msn_user",
                        "content": "No need for reversing the second half. There was more effcient ways to check for palindrome -\\nhttps://www.techiedelight.com/determine-given-number-palindrome-not/\\n"
                    },
                    {
                        "username": "Maruthi2000",
                        "content": "return str(x)==str(x)[::-1]"
                    },
                    {
                        "username": "muzik999",
                        "content": "return (x>=0 and x == int(str(x)[::-1]))"
                    },
                    {
                        "username": "Podilatis23",
                        "content": "return str(x) == str(x)[::-1]\\n\\n"
                    },
                    {
                        "username": "zhuzhua",
                        "content": "return x==int(str(abs(x))[::-1])"
                    },
                    {
                        "username": "hanburger97",
                        "content": "Perhaps someone can help me understand the time and space complexity here.\\nSince we are only processing integer, assuming that we convert it into a string, or an array of character, the fact that x is an integer (assuming long signed) makes it bounded by -2,147,483,648 to 2,147,483,647. Which means converting such into a string can never exceeds an array of 11 character.\\nSimilarly iterating through this character array can never exceed 11 iterations.\\nHence wouldn\\'t that make the string conversion O(1) for both space and time?"
                    },
                    {
                        "username": "HidyHan",
                        "content": "I think being nonnegative is a requirement of palindromes in this question. If so, I feel that it should be specified, since it does not seem intuitive to me..."
                    },
                    {
                        "username": "zhouji",
                        "content": "I don't think this is self-evident or has an obviously accepted convention. The question should be clarified."
                    },
                    {
                        "username": "ttsshh1990",
                        "content": "If a integer is palindrome number, then reversing this number will not cause overflow.\\nIn other words if overflow happened this number is not a palindrome number. \\nSo I am just wondering why we cannot just return false when overflow happens.\\nCan someone explain to me? Thanks a lot!"
                    }
                ]
            },
            {
                "id": 1573659,
                "content": [
                    {
                        "username": "Conane",
                        "content": "![image](https://assets.leetcode.com/users/images/4651264c-5e47-43f7-befe-b864610d07ac_1605656670.2109852.png)\\nWould you please do the complexity analysis for this solution.\\nThank you in advance"
                    },
                    {
                        "username": "msn_user",
                        "content": "No need for reversing the second half. There was more effcient ways to check for palindrome -\\nhttps://www.techiedelight.com/determine-given-number-palindrome-not/\\n"
                    },
                    {
                        "username": "Maruthi2000",
                        "content": "return str(x)==str(x)[::-1]"
                    },
                    {
                        "username": "muzik999",
                        "content": "return (x>=0 and x == int(str(x)[::-1]))"
                    },
                    {
                        "username": "Podilatis23",
                        "content": "return str(x) == str(x)[::-1]\\n\\n"
                    },
                    {
                        "username": "zhuzhua",
                        "content": "return x==int(str(abs(x))[::-1])"
                    },
                    {
                        "username": "hanburger97",
                        "content": "Perhaps someone can help me understand the time and space complexity here.\\nSince we are only processing integer, assuming that we convert it into a string, or an array of character, the fact that x is an integer (assuming long signed) makes it bounded by -2,147,483,648 to 2,147,483,647. Which means converting such into a string can never exceeds an array of 11 character.\\nSimilarly iterating through this character array can never exceed 11 iterations.\\nHence wouldn\\'t that make the string conversion O(1) for both space and time?"
                    },
                    {
                        "username": "HidyHan",
                        "content": "I think being nonnegative is a requirement of palindromes in this question. If so, I feel that it should be specified, since it does not seem intuitive to me..."
                    },
                    {
                        "username": "zhouji",
                        "content": "I don't think this is self-evident or has an obviously accepted convention. The question should be clarified."
                    },
                    {
                        "username": "ttsshh1990",
                        "content": "If a integer is palindrome number, then reversing this number will not cause overflow.\\nIn other words if overflow happened this number is not a palindrome number. \\nSo I am just wondering why we cannot just return false when overflow happens.\\nCan someone explain to me? Thanks a lot!"
                    }
                ]
            },
            {
                "id": 1573497,
                "content": [
                    {
                        "username": "Conane",
                        "content": "![image](https://assets.leetcode.com/users/images/4651264c-5e47-43f7-befe-b864610d07ac_1605656670.2109852.png)\\nWould you please do the complexity analysis for this solution.\\nThank you in advance"
                    },
                    {
                        "username": "msn_user",
                        "content": "No need for reversing the second half. There was more effcient ways to check for palindrome -\\nhttps://www.techiedelight.com/determine-given-number-palindrome-not/\\n"
                    },
                    {
                        "username": "Maruthi2000",
                        "content": "return str(x)==str(x)[::-1]"
                    },
                    {
                        "username": "muzik999",
                        "content": "return (x>=0 and x == int(str(x)[::-1]))"
                    },
                    {
                        "username": "Podilatis23",
                        "content": "return str(x) == str(x)[::-1]\\n\\n"
                    },
                    {
                        "username": "zhuzhua",
                        "content": "return x==int(str(abs(x))[::-1])"
                    },
                    {
                        "username": "hanburger97",
                        "content": "Perhaps someone can help me understand the time and space complexity here.\\nSince we are only processing integer, assuming that we convert it into a string, or an array of character, the fact that x is an integer (assuming long signed) makes it bounded by -2,147,483,648 to 2,147,483,647. Which means converting such into a string can never exceeds an array of 11 character.\\nSimilarly iterating through this character array can never exceed 11 iterations.\\nHence wouldn\\'t that make the string conversion O(1) for both space and time?"
                    },
                    {
                        "username": "HidyHan",
                        "content": "I think being nonnegative is a requirement of palindromes in this question. If so, I feel that it should be specified, since it does not seem intuitive to me..."
                    },
                    {
                        "username": "zhouji",
                        "content": "I don't think this is self-evident or has an obviously accepted convention. The question should be clarified."
                    },
                    {
                        "username": "ttsshh1990",
                        "content": "If a integer is palindrome number, then reversing this number will not cause overflow.\\nIn other words if overflow happened this number is not a palindrome number. \\nSo I am just wondering why we cannot just return false when overflow happens.\\nCan someone explain to me? Thanks a lot!"
                    }
                ]
            },
            {
                "id": 1573267,
                "content": [
                    {
                        "username": "Conane",
                        "content": "![image](https://assets.leetcode.com/users/images/4651264c-5e47-43f7-befe-b864610d07ac_1605656670.2109852.png)\\nWould you please do the complexity analysis for this solution.\\nThank you in advance"
                    },
                    {
                        "username": "msn_user",
                        "content": "No need for reversing the second half. There was more effcient ways to check for palindrome -\\nhttps://www.techiedelight.com/determine-given-number-palindrome-not/\\n"
                    },
                    {
                        "username": "Maruthi2000",
                        "content": "return str(x)==str(x)[::-1]"
                    },
                    {
                        "username": "muzik999",
                        "content": "return (x>=0 and x == int(str(x)[::-1]))"
                    },
                    {
                        "username": "Podilatis23",
                        "content": "return str(x) == str(x)[::-1]\\n\\n"
                    },
                    {
                        "username": "zhuzhua",
                        "content": "return x==int(str(abs(x))[::-1])"
                    },
                    {
                        "username": "hanburger97",
                        "content": "Perhaps someone can help me understand the time and space complexity here.\\nSince we are only processing integer, assuming that we convert it into a string, or an array of character, the fact that x is an integer (assuming long signed) makes it bounded by -2,147,483,648 to 2,147,483,647. Which means converting such into a string can never exceeds an array of 11 character.\\nSimilarly iterating through this character array can never exceed 11 iterations.\\nHence wouldn\\'t that make the string conversion O(1) for both space and time?"
                    },
                    {
                        "username": "HidyHan",
                        "content": "I think being nonnegative is a requirement of palindromes in this question. If so, I feel that it should be specified, since it does not seem intuitive to me..."
                    },
                    {
                        "username": "zhouji",
                        "content": "I don't think this is self-evident or has an obviously accepted convention. The question should be clarified."
                    },
                    {
                        "username": "ttsshh1990",
                        "content": "If a integer is palindrome number, then reversing this number will not cause overflow.\\nIn other words if overflow happened this number is not a palindrome number. \\nSo I am just wondering why we cannot just return false when overflow happens.\\nCan someone explain to me? Thanks a lot!"
                    }
                ]
            },
            {
                "id": 1572721,
                "content": [
                    {
                        "username": "Conane",
                        "content": "![image](https://assets.leetcode.com/users/images/4651264c-5e47-43f7-befe-b864610d07ac_1605656670.2109852.png)\\nWould you please do the complexity analysis for this solution.\\nThank you in advance"
                    },
                    {
                        "username": "msn_user",
                        "content": "No need for reversing the second half. There was more effcient ways to check for palindrome -\\nhttps://www.techiedelight.com/determine-given-number-palindrome-not/\\n"
                    },
                    {
                        "username": "Maruthi2000",
                        "content": "return str(x)==str(x)[::-1]"
                    },
                    {
                        "username": "muzik999",
                        "content": "return (x>=0 and x == int(str(x)[::-1]))"
                    },
                    {
                        "username": "Podilatis23",
                        "content": "return str(x) == str(x)[::-1]\\n\\n"
                    },
                    {
                        "username": "zhuzhua",
                        "content": "return x==int(str(abs(x))[::-1])"
                    },
                    {
                        "username": "hanburger97",
                        "content": "Perhaps someone can help me understand the time and space complexity here.\\nSince we are only processing integer, assuming that we convert it into a string, or an array of character, the fact that x is an integer (assuming long signed) makes it bounded by -2,147,483,648 to 2,147,483,647. Which means converting such into a string can never exceeds an array of 11 character.\\nSimilarly iterating through this character array can never exceed 11 iterations.\\nHence wouldn\\'t that make the string conversion O(1) for both space and time?"
                    },
                    {
                        "username": "HidyHan",
                        "content": "I think being nonnegative is a requirement of palindromes in this question. If so, I feel that it should be specified, since it does not seem intuitive to me..."
                    },
                    {
                        "username": "zhouji",
                        "content": "I don't think this is self-evident or has an obviously accepted convention. The question should be clarified."
                    },
                    {
                        "username": "ttsshh1990",
                        "content": "If a integer is palindrome number, then reversing this number will not cause overflow.\\nIn other words if overflow happened this number is not a palindrome number. \\nSo I am just wondering why we cannot just return false when overflow happens.\\nCan someone explain to me? Thanks a lot!"
                    }
                ]
            },
            {
                "id": 1572239,
                "content": [
                    {
                        "username": "Conane",
                        "content": "![image](https://assets.leetcode.com/users/images/4651264c-5e47-43f7-befe-b864610d07ac_1605656670.2109852.png)\\nWould you please do the complexity analysis for this solution.\\nThank you in advance"
                    },
                    {
                        "username": "msn_user",
                        "content": "No need for reversing the second half. There was more effcient ways to check for palindrome -\\nhttps://www.techiedelight.com/determine-given-number-palindrome-not/\\n"
                    },
                    {
                        "username": "Maruthi2000",
                        "content": "return str(x)==str(x)[::-1]"
                    },
                    {
                        "username": "muzik999",
                        "content": "return (x>=0 and x == int(str(x)[::-1]))"
                    },
                    {
                        "username": "Podilatis23",
                        "content": "return str(x) == str(x)[::-1]\\n\\n"
                    },
                    {
                        "username": "zhuzhua",
                        "content": "return x==int(str(abs(x))[::-1])"
                    },
                    {
                        "username": "hanburger97",
                        "content": "Perhaps someone can help me understand the time and space complexity here.\\nSince we are only processing integer, assuming that we convert it into a string, or an array of character, the fact that x is an integer (assuming long signed) makes it bounded by -2,147,483,648 to 2,147,483,647. Which means converting such into a string can never exceeds an array of 11 character.\\nSimilarly iterating through this character array can never exceed 11 iterations.\\nHence wouldn\\'t that make the string conversion O(1) for both space and time?"
                    },
                    {
                        "username": "HidyHan",
                        "content": "I think being nonnegative is a requirement of palindromes in this question. If so, I feel that it should be specified, since it does not seem intuitive to me..."
                    },
                    {
                        "username": "zhouji",
                        "content": "I don't think this is self-evident or has an obviously accepted convention. The question should be clarified."
                    },
                    {
                        "username": "ttsshh1990",
                        "content": "If a integer is palindrome number, then reversing this number will not cause overflow.\\nIn other words if overflow happened this number is not a palindrome number. \\nSo I am just wondering why we cannot just return false when overflow happens.\\nCan someone explain to me? Thanks a lot!"
                    }
                ]
            },
            {
                "id": 1571013,
                "content": [
                    {
                        "username": "Conane",
                        "content": "![image](https://assets.leetcode.com/users/images/4651264c-5e47-43f7-befe-b864610d07ac_1605656670.2109852.png)\\nWould you please do the complexity analysis for this solution.\\nThank you in advance"
                    },
                    {
                        "username": "msn_user",
                        "content": "No need for reversing the second half. There was more effcient ways to check for palindrome -\\nhttps://www.techiedelight.com/determine-given-number-palindrome-not/\\n"
                    },
                    {
                        "username": "Maruthi2000",
                        "content": "return str(x)==str(x)[::-1]"
                    },
                    {
                        "username": "muzik999",
                        "content": "return (x>=0 and x == int(str(x)[::-1]))"
                    },
                    {
                        "username": "Podilatis23",
                        "content": "return str(x) == str(x)[::-1]\\n\\n"
                    },
                    {
                        "username": "zhuzhua",
                        "content": "return x==int(str(abs(x))[::-1])"
                    },
                    {
                        "username": "hanburger97",
                        "content": "Perhaps someone can help me understand the time and space complexity here.\\nSince we are only processing integer, assuming that we convert it into a string, or an array of character, the fact that x is an integer (assuming long signed) makes it bounded by -2,147,483,648 to 2,147,483,647. Which means converting such into a string can never exceeds an array of 11 character.\\nSimilarly iterating through this character array can never exceed 11 iterations.\\nHence wouldn\\'t that make the string conversion O(1) for both space and time?"
                    },
                    {
                        "username": "HidyHan",
                        "content": "I think being nonnegative is a requirement of palindromes in this question. If so, I feel that it should be specified, since it does not seem intuitive to me..."
                    },
                    {
                        "username": "zhouji",
                        "content": "I don't think this is self-evident or has an obviously accepted convention. The question should be clarified."
                    },
                    {
                        "username": "ttsshh1990",
                        "content": "If a integer is palindrome number, then reversing this number will not cause overflow.\\nIn other words if overflow happened this number is not a palindrome number. \\nSo I am just wondering why we cannot just return false when overflow happens.\\nCan someone explain to me? Thanks a lot!"
                    }
                ]
            },
            {
                "id": 1571014,
                "content": [
                    {
                        "username": "Conane",
                        "content": "![image](https://assets.leetcode.com/users/images/4651264c-5e47-43f7-befe-b864610d07ac_1605656670.2109852.png)\\nWould you please do the complexity analysis for this solution.\\nThank you in advance"
                    },
                    {
                        "username": "msn_user",
                        "content": "No need for reversing the second half. There was more effcient ways to check for palindrome -\\nhttps://www.techiedelight.com/determine-given-number-palindrome-not/\\n"
                    },
                    {
                        "username": "Maruthi2000",
                        "content": "return str(x)==str(x)[::-1]"
                    },
                    {
                        "username": "muzik999",
                        "content": "return (x>=0 and x == int(str(x)[::-1]))"
                    },
                    {
                        "username": "Podilatis23",
                        "content": "return str(x) == str(x)[::-1]\\n\\n"
                    },
                    {
                        "username": "zhuzhua",
                        "content": "return x==int(str(abs(x))[::-1])"
                    },
                    {
                        "username": "hanburger97",
                        "content": "Perhaps someone can help me understand the time and space complexity here.\\nSince we are only processing integer, assuming that we convert it into a string, or an array of character, the fact that x is an integer (assuming long signed) makes it bounded by -2,147,483,648 to 2,147,483,647. Which means converting such into a string can never exceeds an array of 11 character.\\nSimilarly iterating through this character array can never exceed 11 iterations.\\nHence wouldn\\'t that make the string conversion O(1) for both space and time?"
                    },
                    {
                        "username": "HidyHan",
                        "content": "I think being nonnegative is a requirement of palindromes in this question. If so, I feel that it should be specified, since it does not seem intuitive to me..."
                    },
                    {
                        "username": "zhouji",
                        "content": "I don't think this is self-evident or has an obviously accepted convention. The question should be clarified."
                    },
                    {
                        "username": "ttsshh1990",
                        "content": "If a integer is palindrome number, then reversing this number will not cause overflow.\\nIn other words if overflow happened this number is not a palindrome number. \\nSo I am just wondering why we cannot just return false when overflow happens.\\nCan someone explain to me? Thanks a lot!"
                    }
                ]
            },
            {
                "id": 1571015,
                "content": [
                    {
                        "username": "Conane",
                        "content": "![image](https://assets.leetcode.com/users/images/4651264c-5e47-43f7-befe-b864610d07ac_1605656670.2109852.png)\\nWould you please do the complexity analysis for this solution.\\nThank you in advance"
                    },
                    {
                        "username": "msn_user",
                        "content": "No need for reversing the second half. There was more effcient ways to check for palindrome -\\nhttps://www.techiedelight.com/determine-given-number-palindrome-not/\\n"
                    },
                    {
                        "username": "Maruthi2000",
                        "content": "return str(x)==str(x)[::-1]"
                    },
                    {
                        "username": "muzik999",
                        "content": "return (x>=0 and x == int(str(x)[::-1]))"
                    },
                    {
                        "username": "Podilatis23",
                        "content": "return str(x) == str(x)[::-1]\\n\\n"
                    },
                    {
                        "username": "zhuzhua",
                        "content": "return x==int(str(abs(x))[::-1])"
                    },
                    {
                        "username": "hanburger97",
                        "content": "Perhaps someone can help me understand the time and space complexity here.\\nSince we are only processing integer, assuming that we convert it into a string, or an array of character, the fact that x is an integer (assuming long signed) makes it bounded by -2,147,483,648 to 2,147,483,647. Which means converting such into a string can never exceeds an array of 11 character.\\nSimilarly iterating through this character array can never exceed 11 iterations.\\nHence wouldn\\'t that make the string conversion O(1) for both space and time?"
                    },
                    {
                        "username": "HidyHan",
                        "content": "I think being nonnegative is a requirement of palindromes in this question. If so, I feel that it should be specified, since it does not seem intuitive to me..."
                    },
                    {
                        "username": "zhouji",
                        "content": "I don't think this is self-evident or has an obviously accepted convention. The question should be clarified."
                    },
                    {
                        "username": "ttsshh1990",
                        "content": "If a integer is palindrome number, then reversing this number will not cause overflow.\\nIn other words if overflow happened this number is not a palindrome number. \\nSo I am just wondering why we cannot just return false when overflow happens.\\nCan someone explain to me? Thanks a lot!"
                    }
                ]
            },
            {
                "id": 1570890,
                "content": [
                    {
                        "username": "tanay1502",
                        "content": "return str(x) == str(x)[::-1]"
                    },
                    {
                        "username": "Omyx",
                        "content": "\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion tab.\\n\\n2. The problem discussion tab is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nI don't think there is a boolean data type in C language. When we select the language as C, it shows the following function signature which I suppose is not correct.\\n\\n    bool isPalindrome(int x){\\n    }\\n\\nPlease correct it.\\n\\nThanks."
                    },
                    {
                        "username": "cattishToast",
                        "content": "bool Is a data type added in the <stdbool.h> header file"
                    },
                    {
                        "username": "alimjanovff",
                        "content": "IsPalindrome"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "4n33s",
                        "content": "return str(x)[::-1] == str(x)"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "RETURN (str(x)[::-1] == str(x))\\nWHY WE ARE USING STR(X)  AS IN QUESTION  IT MIGHT THE CONDITION AT WHICH ANY FLOAT VALUE CAN INPUT WHICH GOING TO CONVERTED INTO STRING AS WE ARE TYPECASTING X VALUE IN STR CLASS"
                    },
                    {
                        "username": "jsmith7677",
                        "content": "Input: -101\\nOutput: true\\nExpected: false\\n\\nHow can 101 not be a palindrome?"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "BRO SORRY BUT \\nFIRST GO AND HAVE TUTORIAL WHAT IS PALINDROME."
                    },
                    {
                        "username": "BishalGupta0",
                        "content": "its -101 not 101 i think"
                    },
                    {
                        "username": "shivahi",
                        "content": "This is very easiest question for me .I solve with in 2 min.\\nApproach :\\nSo we have to see is it palindrome or not.In string we use two pointer approach or we reverse it Then see is it same as x.\\nIt hard to this approach for me do with int.So I type caste the int into string(st) then \\nmake one blank string (result) to store the reverse value\\nthen i iterate the string from right to left and every iteration i store the value in the result.\\nAfter wards i check it is equal to st then True .else false\\n\\n\\nBut I want to anyother approach can i solve this without type casting or using list..\\nPlease feel free to reply??"
                    },
                    {
                        "username": "Iviwe_M",
                        "content": "I keep getting \"Time Limit Exceeded\" for:\\n\\npublic class Solution {\\n    public bool IsPalindrome(int x) {\\n\\n  int rev = 0;\\n\\n        while (x > 0) {\\n            rev *= 10 + (x % 10);\\n            rev /= 10;\\n        }\\n    return rev == x;\\n\\n  }  \\n}\\n\\nAny help as to why?"
                    },
                    {
                        "username": "kmooventhan98",
                        "content": "\nfor 10 I am getting true, but it should return false\nany error in this code\n\ndef is_palindrome(x)\n    return false if x < 0\n    div = 1\n    while div <= x\n      div *= 10\n    end\n    while x > 0\n      first_value = x / div\n      last_value = x % 10 \n     return false if first_value != last_value\n      # update x\n      x = (x/10) % div\n      # update div\n      div /= 100\n    end\n  true\nend\n\n"
                    },
                    {
                        "username": "unknownghost64",
                        "content": "\nclass Solution:\n    def isPalindrome(self, x: int) -> bool:\n        temp = x  \n        rev = 0  \n        while(x > 0):  \n            dig = x % 10  \n            rev = rev * 10 + dig  \n            x = x // 10  \n        if(temp != rev) or x<0:  \n            return \"false\"\n        else:  \n            return \"true\"        \n\nI have wrote this code on but it failed in the 2 and 3 and if run the same test case in PyCharm it well and good is something wrong in my code or is it something else. I have copied pasted the code so the indexing might me off  but indexing in my code is correct\n"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro you must  INCLUDE one more condition were you check weather the x is greater then  0 or not\\nIF (X<0):\\n     RETURN FALSE\\n"
                    }
                ]
            },
            {
                "id": 1576335,
                "content": [
                    {
                        "username": "tanay1502",
                        "content": "return str(x) == str(x)[::-1]"
                    },
                    {
                        "username": "Omyx",
                        "content": "\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion tab.\\n\\n2. The problem discussion tab is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nI don't think there is a boolean data type in C language. When we select the language as C, it shows the following function signature which I suppose is not correct.\\n\\n    bool isPalindrome(int x){\\n    }\\n\\nPlease correct it.\\n\\nThanks."
                    },
                    {
                        "username": "cattishToast",
                        "content": "bool Is a data type added in the <stdbool.h> header file"
                    },
                    {
                        "username": "alimjanovff",
                        "content": "IsPalindrome"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "4n33s",
                        "content": "return str(x)[::-1] == str(x)"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "RETURN (str(x)[::-1] == str(x))\\nWHY WE ARE USING STR(X)  AS IN QUESTION  IT MIGHT THE CONDITION AT WHICH ANY FLOAT VALUE CAN INPUT WHICH GOING TO CONVERTED INTO STRING AS WE ARE TYPECASTING X VALUE IN STR CLASS"
                    },
                    {
                        "username": "jsmith7677",
                        "content": "Input: -101\\nOutput: true\\nExpected: false\\n\\nHow can 101 not be a palindrome?"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "BRO SORRY BUT \\nFIRST GO AND HAVE TUTORIAL WHAT IS PALINDROME."
                    },
                    {
                        "username": "BishalGupta0",
                        "content": "its -101 not 101 i think"
                    },
                    {
                        "username": "shivahi",
                        "content": "This is very easiest question for me .I solve with in 2 min.\\nApproach :\\nSo we have to see is it palindrome or not.In string we use two pointer approach or we reverse it Then see is it same as x.\\nIt hard to this approach for me do with int.So I type caste the int into string(st) then \\nmake one blank string (result) to store the reverse value\\nthen i iterate the string from right to left and every iteration i store the value in the result.\\nAfter wards i check it is equal to st then True .else false\\n\\n\\nBut I want to anyother approach can i solve this without type casting or using list..\\nPlease feel free to reply??"
                    },
                    {
                        "username": "Iviwe_M",
                        "content": "I keep getting \"Time Limit Exceeded\" for:\\n\\npublic class Solution {\\n    public bool IsPalindrome(int x) {\\n\\n  int rev = 0;\\n\\n        while (x > 0) {\\n            rev *= 10 + (x % 10);\\n            rev /= 10;\\n        }\\n    return rev == x;\\n\\n  }  \\n}\\n\\nAny help as to why?"
                    },
                    {
                        "username": "kmooventhan98",
                        "content": "\nfor 10 I am getting true, but it should return false\nany error in this code\n\ndef is_palindrome(x)\n    return false if x < 0\n    div = 1\n    while div <= x\n      div *= 10\n    end\n    while x > 0\n      first_value = x / div\n      last_value = x % 10 \n     return false if first_value != last_value\n      # update x\n      x = (x/10) % div\n      # update div\n      div /= 100\n    end\n  true\nend\n\n"
                    },
                    {
                        "username": "unknownghost64",
                        "content": "\nclass Solution:\n    def isPalindrome(self, x: int) -> bool:\n        temp = x  \n        rev = 0  \n        while(x > 0):  \n            dig = x % 10  \n            rev = rev * 10 + dig  \n            x = x // 10  \n        if(temp != rev) or x<0:  \n            return \"false\"\n        else:  \n            return \"true\"        \n\nI have wrote this code on but it failed in the 2 and 3 and if run the same test case in PyCharm it well and good is something wrong in my code or is it something else. I have copied pasted the code so the indexing might me off  but indexing in my code is correct\n"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro you must  INCLUDE one more condition were you check weather the x is greater then  0 or not\\nIF (X<0):\\n     RETURN FALSE\\n"
                    }
                ]
            },
            {
                "id": 1568820,
                "content": [
                    {
                        "username": "tanay1502",
                        "content": "return str(x) == str(x)[::-1]"
                    },
                    {
                        "username": "Omyx",
                        "content": "\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion tab.\\n\\n2. The problem discussion tab is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nI don't think there is a boolean data type in C language. When we select the language as C, it shows the following function signature which I suppose is not correct.\\n\\n    bool isPalindrome(int x){\\n    }\\n\\nPlease correct it.\\n\\nThanks."
                    },
                    {
                        "username": "cattishToast",
                        "content": "bool Is a data type added in the <stdbool.h> header file"
                    },
                    {
                        "username": "alimjanovff",
                        "content": "IsPalindrome"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "4n33s",
                        "content": "return str(x)[::-1] == str(x)"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "RETURN (str(x)[::-1] == str(x))\\nWHY WE ARE USING STR(X)  AS IN QUESTION  IT MIGHT THE CONDITION AT WHICH ANY FLOAT VALUE CAN INPUT WHICH GOING TO CONVERTED INTO STRING AS WE ARE TYPECASTING X VALUE IN STR CLASS"
                    },
                    {
                        "username": "jsmith7677",
                        "content": "Input: -101\\nOutput: true\\nExpected: false\\n\\nHow can 101 not be a palindrome?"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "BRO SORRY BUT \\nFIRST GO AND HAVE TUTORIAL WHAT IS PALINDROME."
                    },
                    {
                        "username": "BishalGupta0",
                        "content": "its -101 not 101 i think"
                    },
                    {
                        "username": "shivahi",
                        "content": "This is very easiest question for me .I solve with in 2 min.\\nApproach :\\nSo we have to see is it palindrome or not.In string we use two pointer approach or we reverse it Then see is it same as x.\\nIt hard to this approach for me do with int.So I type caste the int into string(st) then \\nmake one blank string (result) to store the reverse value\\nthen i iterate the string from right to left and every iteration i store the value in the result.\\nAfter wards i check it is equal to st then True .else false\\n\\n\\nBut I want to anyother approach can i solve this without type casting or using list..\\nPlease feel free to reply??"
                    },
                    {
                        "username": "Iviwe_M",
                        "content": "I keep getting \"Time Limit Exceeded\" for:\\n\\npublic class Solution {\\n    public bool IsPalindrome(int x) {\\n\\n  int rev = 0;\\n\\n        while (x > 0) {\\n            rev *= 10 + (x % 10);\\n            rev /= 10;\\n        }\\n    return rev == x;\\n\\n  }  \\n}\\n\\nAny help as to why?"
                    },
                    {
                        "username": "kmooventhan98",
                        "content": "\nfor 10 I am getting true, but it should return false\nany error in this code\n\ndef is_palindrome(x)\n    return false if x < 0\n    div = 1\n    while div <= x\n      div *= 10\n    end\n    while x > 0\n      first_value = x / div\n      last_value = x % 10 \n     return false if first_value != last_value\n      # update x\n      x = (x/10) % div\n      # update div\n      div /= 100\n    end\n  true\nend\n\n"
                    },
                    {
                        "username": "unknownghost64",
                        "content": "\nclass Solution:\n    def isPalindrome(self, x: int) -> bool:\n        temp = x  \n        rev = 0  \n        while(x > 0):  \n            dig = x % 10  \n            rev = rev * 10 + dig  \n            x = x // 10  \n        if(temp != rev) or x<0:  \n            return \"false\"\n        else:  \n            return \"true\"        \n\nI have wrote this code on but it failed in the 2 and 3 and if run the same test case in PyCharm it well and good is something wrong in my code or is it something else. I have copied pasted the code so the indexing might me off  but indexing in my code is correct\n"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro you must  INCLUDE one more condition were you check weather the x is greater then  0 or not\\nIF (X<0):\\n     RETURN FALSE\\n"
                    }
                ]
            },
            {
                "id": 1576400,
                "content": [
                    {
                        "username": "tanay1502",
                        "content": "return str(x) == str(x)[::-1]"
                    },
                    {
                        "username": "Omyx",
                        "content": "\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion tab.\\n\\n2. The problem discussion tab is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nI don't think there is a boolean data type in C language. When we select the language as C, it shows the following function signature which I suppose is not correct.\\n\\n    bool isPalindrome(int x){\\n    }\\n\\nPlease correct it.\\n\\nThanks."
                    },
                    {
                        "username": "cattishToast",
                        "content": "bool Is a data type added in the <stdbool.h> header file"
                    },
                    {
                        "username": "alimjanovff",
                        "content": "IsPalindrome"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "4n33s",
                        "content": "return str(x)[::-1] == str(x)"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "RETURN (str(x)[::-1] == str(x))\\nWHY WE ARE USING STR(X)  AS IN QUESTION  IT MIGHT THE CONDITION AT WHICH ANY FLOAT VALUE CAN INPUT WHICH GOING TO CONVERTED INTO STRING AS WE ARE TYPECASTING X VALUE IN STR CLASS"
                    },
                    {
                        "username": "jsmith7677",
                        "content": "Input: -101\\nOutput: true\\nExpected: false\\n\\nHow can 101 not be a palindrome?"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "BRO SORRY BUT \\nFIRST GO AND HAVE TUTORIAL WHAT IS PALINDROME."
                    },
                    {
                        "username": "BishalGupta0",
                        "content": "its -101 not 101 i think"
                    },
                    {
                        "username": "shivahi",
                        "content": "This is very easiest question for me .I solve with in 2 min.\\nApproach :\\nSo we have to see is it palindrome or not.In string we use two pointer approach or we reverse it Then see is it same as x.\\nIt hard to this approach for me do with int.So I type caste the int into string(st) then \\nmake one blank string (result) to store the reverse value\\nthen i iterate the string from right to left and every iteration i store the value in the result.\\nAfter wards i check it is equal to st then True .else false\\n\\n\\nBut I want to anyother approach can i solve this without type casting or using list..\\nPlease feel free to reply??"
                    },
                    {
                        "username": "Iviwe_M",
                        "content": "I keep getting \"Time Limit Exceeded\" for:\\n\\npublic class Solution {\\n    public bool IsPalindrome(int x) {\\n\\n  int rev = 0;\\n\\n        while (x > 0) {\\n            rev *= 10 + (x % 10);\\n            rev /= 10;\\n        }\\n    return rev == x;\\n\\n  }  \\n}\\n\\nAny help as to why?"
                    },
                    {
                        "username": "kmooventhan98",
                        "content": "\nfor 10 I am getting true, but it should return false\nany error in this code\n\ndef is_palindrome(x)\n    return false if x < 0\n    div = 1\n    while div <= x\n      div *= 10\n    end\n    while x > 0\n      first_value = x / div\n      last_value = x % 10 \n     return false if first_value != last_value\n      # update x\n      x = (x/10) % div\n      # update div\n      div /= 100\n    end\n  true\nend\n\n"
                    },
                    {
                        "username": "unknownghost64",
                        "content": "\nclass Solution:\n    def isPalindrome(self, x: int) -> bool:\n        temp = x  \n        rev = 0  \n        while(x > 0):  \n            dig = x % 10  \n            rev = rev * 10 + dig  \n            x = x // 10  \n        if(temp != rev) or x<0:  \n            return \"false\"\n        else:  \n            return \"true\"        \n\nI have wrote this code on but it failed in the 2 and 3 and if run the same test case in PyCharm it well and good is something wrong in my code or is it something else. I have copied pasted the code so the indexing might me off  but indexing in my code is correct\n"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro you must  INCLUDE one more condition were you check weather the x is greater then  0 or not\\nIF (X<0):\\n     RETURN FALSE\\n"
                    }
                ]
            },
            {
                "id": 1576051,
                "content": [
                    {
                        "username": "tanay1502",
                        "content": "return str(x) == str(x)[::-1]"
                    },
                    {
                        "username": "Omyx",
                        "content": "\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion tab.\\n\\n2. The problem discussion tab is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nI don't think there is a boolean data type in C language. When we select the language as C, it shows the following function signature which I suppose is not correct.\\n\\n    bool isPalindrome(int x){\\n    }\\n\\nPlease correct it.\\n\\nThanks."
                    },
                    {
                        "username": "cattishToast",
                        "content": "bool Is a data type added in the <stdbool.h> header file"
                    },
                    {
                        "username": "alimjanovff",
                        "content": "IsPalindrome"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "4n33s",
                        "content": "return str(x)[::-1] == str(x)"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "RETURN (str(x)[::-1] == str(x))\\nWHY WE ARE USING STR(X)  AS IN QUESTION  IT MIGHT THE CONDITION AT WHICH ANY FLOAT VALUE CAN INPUT WHICH GOING TO CONVERTED INTO STRING AS WE ARE TYPECASTING X VALUE IN STR CLASS"
                    },
                    {
                        "username": "jsmith7677",
                        "content": "Input: -101\\nOutput: true\\nExpected: false\\n\\nHow can 101 not be a palindrome?"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "BRO SORRY BUT \\nFIRST GO AND HAVE TUTORIAL WHAT IS PALINDROME."
                    },
                    {
                        "username": "BishalGupta0",
                        "content": "its -101 not 101 i think"
                    },
                    {
                        "username": "shivahi",
                        "content": "This is very easiest question for me .I solve with in 2 min.\\nApproach :\\nSo we have to see is it palindrome or not.In string we use two pointer approach or we reverse it Then see is it same as x.\\nIt hard to this approach for me do with int.So I type caste the int into string(st) then \\nmake one blank string (result) to store the reverse value\\nthen i iterate the string from right to left and every iteration i store the value in the result.\\nAfter wards i check it is equal to st then True .else false\\n\\n\\nBut I want to anyother approach can i solve this without type casting or using list..\\nPlease feel free to reply??"
                    },
                    {
                        "username": "Iviwe_M",
                        "content": "I keep getting \"Time Limit Exceeded\" for:\\n\\npublic class Solution {\\n    public bool IsPalindrome(int x) {\\n\\n  int rev = 0;\\n\\n        while (x > 0) {\\n            rev *= 10 + (x % 10);\\n            rev /= 10;\\n        }\\n    return rev == x;\\n\\n  }  \\n}\\n\\nAny help as to why?"
                    },
                    {
                        "username": "kmooventhan98",
                        "content": "\nfor 10 I am getting true, but it should return false\nany error in this code\n\ndef is_palindrome(x)\n    return false if x < 0\n    div = 1\n    while div <= x\n      div *= 10\n    end\n    while x > 0\n      first_value = x / div\n      last_value = x % 10 \n     return false if first_value != last_value\n      # update x\n      x = (x/10) % div\n      # update div\n      div /= 100\n    end\n  true\nend\n\n"
                    },
                    {
                        "username": "unknownghost64",
                        "content": "\nclass Solution:\n    def isPalindrome(self, x: int) -> bool:\n        temp = x  \n        rev = 0  \n        while(x > 0):  \n            dig = x % 10  \n            rev = rev * 10 + dig  \n            x = x // 10  \n        if(temp != rev) or x<0:  \n            return \"false\"\n        else:  \n            return \"true\"        \n\nI have wrote this code on but it failed in the 2 and 3 and if run the same test case in PyCharm it well and good is something wrong in my code or is it something else. I have copied pasted the code so the indexing might me off  but indexing in my code is correct\n"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro you must  INCLUDE one more condition were you check weather the x is greater then  0 or not\\nIF (X<0):\\n     RETURN FALSE\\n"
                    }
                ]
            },
            {
                "id": 1571012,
                "content": [
                    {
                        "username": "tanay1502",
                        "content": "return str(x) == str(x)[::-1]"
                    },
                    {
                        "username": "Omyx",
                        "content": "\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion tab.\\n\\n2. The problem discussion tab is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nI don't think there is a boolean data type in C language. When we select the language as C, it shows the following function signature which I suppose is not correct.\\n\\n    bool isPalindrome(int x){\\n    }\\n\\nPlease correct it.\\n\\nThanks."
                    },
                    {
                        "username": "cattishToast",
                        "content": "bool Is a data type added in the <stdbool.h> header file"
                    },
                    {
                        "username": "alimjanovff",
                        "content": "IsPalindrome"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "4n33s",
                        "content": "return str(x)[::-1] == str(x)"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "RETURN (str(x)[::-1] == str(x))\\nWHY WE ARE USING STR(X)  AS IN QUESTION  IT MIGHT THE CONDITION AT WHICH ANY FLOAT VALUE CAN INPUT WHICH GOING TO CONVERTED INTO STRING AS WE ARE TYPECASTING X VALUE IN STR CLASS"
                    },
                    {
                        "username": "jsmith7677",
                        "content": "Input: -101\\nOutput: true\\nExpected: false\\n\\nHow can 101 not be a palindrome?"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "BRO SORRY BUT \\nFIRST GO AND HAVE TUTORIAL WHAT IS PALINDROME."
                    },
                    {
                        "username": "BishalGupta0",
                        "content": "its -101 not 101 i think"
                    },
                    {
                        "username": "shivahi",
                        "content": "This is very easiest question for me .I solve with in 2 min.\\nApproach :\\nSo we have to see is it palindrome or not.In string we use two pointer approach or we reverse it Then see is it same as x.\\nIt hard to this approach for me do with int.So I type caste the int into string(st) then \\nmake one blank string (result) to store the reverse value\\nthen i iterate the string from right to left and every iteration i store the value in the result.\\nAfter wards i check it is equal to st then True .else false\\n\\n\\nBut I want to anyother approach can i solve this without type casting or using list..\\nPlease feel free to reply??"
                    },
                    {
                        "username": "Iviwe_M",
                        "content": "I keep getting \"Time Limit Exceeded\" for:\\n\\npublic class Solution {\\n    public bool IsPalindrome(int x) {\\n\\n  int rev = 0;\\n\\n        while (x > 0) {\\n            rev *= 10 + (x % 10);\\n            rev /= 10;\\n        }\\n    return rev == x;\\n\\n  }  \\n}\\n\\nAny help as to why?"
                    },
                    {
                        "username": "kmooventhan98",
                        "content": "\nfor 10 I am getting true, but it should return false\nany error in this code\n\ndef is_palindrome(x)\n    return false if x < 0\n    div = 1\n    while div <= x\n      div *= 10\n    end\n    while x > 0\n      first_value = x / div\n      last_value = x % 10 \n     return false if first_value != last_value\n      # update x\n      x = (x/10) % div\n      # update div\n      div /= 100\n    end\n  true\nend\n\n"
                    },
                    {
                        "username": "unknownghost64",
                        "content": "\nclass Solution:\n    def isPalindrome(self, x: int) -> bool:\n        temp = x  \n        rev = 0  \n        while(x > 0):  \n            dig = x % 10  \n            rev = rev * 10 + dig  \n            x = x // 10  \n        if(temp != rev) or x<0:  \n            return \"false\"\n        else:  \n            return \"true\"        \n\nI have wrote this code on but it failed in the 2 and 3 and if run the same test case in PyCharm it well and good is something wrong in my code or is it something else. I have copied pasted the code so the indexing might me off  but indexing in my code is correct\n"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro you must  INCLUDE one more condition were you check weather the x is greater then  0 or not\\nIF (X<0):\\n     RETURN FALSE\\n"
                    }
                ]
            },
            {
                "id": 2077156,
                "content": [
                    {
                        "username": "tanay1502",
                        "content": "return str(x) == str(x)[::-1]"
                    },
                    {
                        "username": "Omyx",
                        "content": "\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion tab.\\n\\n2. The problem discussion tab is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nI don't think there is a boolean data type in C language. When we select the language as C, it shows the following function signature which I suppose is not correct.\\n\\n    bool isPalindrome(int x){\\n    }\\n\\nPlease correct it.\\n\\nThanks."
                    },
                    {
                        "username": "cattishToast",
                        "content": "bool Is a data type added in the <stdbool.h> header file"
                    },
                    {
                        "username": "alimjanovff",
                        "content": "IsPalindrome"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "4n33s",
                        "content": "return str(x)[::-1] == str(x)"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "RETURN (str(x)[::-1] == str(x))\\nWHY WE ARE USING STR(X)  AS IN QUESTION  IT MIGHT THE CONDITION AT WHICH ANY FLOAT VALUE CAN INPUT WHICH GOING TO CONVERTED INTO STRING AS WE ARE TYPECASTING X VALUE IN STR CLASS"
                    },
                    {
                        "username": "jsmith7677",
                        "content": "Input: -101\\nOutput: true\\nExpected: false\\n\\nHow can 101 not be a palindrome?"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "BRO SORRY BUT \\nFIRST GO AND HAVE TUTORIAL WHAT IS PALINDROME."
                    },
                    {
                        "username": "BishalGupta0",
                        "content": "its -101 not 101 i think"
                    },
                    {
                        "username": "shivahi",
                        "content": "This is very easiest question for me .I solve with in 2 min.\\nApproach :\\nSo we have to see is it palindrome or not.In string we use two pointer approach or we reverse it Then see is it same as x.\\nIt hard to this approach for me do with int.So I type caste the int into string(st) then \\nmake one blank string (result) to store the reverse value\\nthen i iterate the string from right to left and every iteration i store the value in the result.\\nAfter wards i check it is equal to st then True .else false\\n\\n\\nBut I want to anyother approach can i solve this without type casting or using list..\\nPlease feel free to reply??"
                    },
                    {
                        "username": "Iviwe_M",
                        "content": "I keep getting \"Time Limit Exceeded\" for:\\n\\npublic class Solution {\\n    public bool IsPalindrome(int x) {\\n\\n  int rev = 0;\\n\\n        while (x > 0) {\\n            rev *= 10 + (x % 10);\\n            rev /= 10;\\n        }\\n    return rev == x;\\n\\n  }  \\n}\\n\\nAny help as to why?"
                    },
                    {
                        "username": "kmooventhan98",
                        "content": "\nfor 10 I am getting true, but it should return false\nany error in this code\n\ndef is_palindrome(x)\n    return false if x < 0\n    div = 1\n    while div <= x\n      div *= 10\n    end\n    while x > 0\n      first_value = x / div\n      last_value = x % 10 \n     return false if first_value != last_value\n      # update x\n      x = (x/10) % div\n      # update div\n      div /= 100\n    end\n  true\nend\n\n"
                    },
                    {
                        "username": "unknownghost64",
                        "content": "\nclass Solution:\n    def isPalindrome(self, x: int) -> bool:\n        temp = x  \n        rev = 0  \n        while(x > 0):  \n            dig = x % 10  \n            rev = rev * 10 + dig  \n            x = x // 10  \n        if(temp != rev) or x<0:  \n            return \"false\"\n        else:  \n            return \"true\"        \n\nI have wrote this code on but it failed in the 2 and 3 and if run the same test case in PyCharm it well and good is something wrong in my code or is it something else. I have copied pasted the code so the indexing might me off  but indexing in my code is correct\n"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro you must  INCLUDE one more condition were you check weather the x is greater then  0 or not\\nIF (X<0):\\n     RETURN FALSE\\n"
                    }
                ]
            },
            {
                "id": 2076655,
                "content": [
                    {
                        "username": "tanay1502",
                        "content": "return str(x) == str(x)[::-1]"
                    },
                    {
                        "username": "Omyx",
                        "content": "\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion tab.\\n\\n2. The problem discussion tab is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nI don't think there is a boolean data type in C language. When we select the language as C, it shows the following function signature which I suppose is not correct.\\n\\n    bool isPalindrome(int x){\\n    }\\n\\nPlease correct it.\\n\\nThanks."
                    },
                    {
                        "username": "cattishToast",
                        "content": "bool Is a data type added in the <stdbool.h> header file"
                    },
                    {
                        "username": "alimjanovff",
                        "content": "IsPalindrome"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "4n33s",
                        "content": "return str(x)[::-1] == str(x)"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "RETURN (str(x)[::-1] == str(x))\\nWHY WE ARE USING STR(X)  AS IN QUESTION  IT MIGHT THE CONDITION AT WHICH ANY FLOAT VALUE CAN INPUT WHICH GOING TO CONVERTED INTO STRING AS WE ARE TYPECASTING X VALUE IN STR CLASS"
                    },
                    {
                        "username": "jsmith7677",
                        "content": "Input: -101\\nOutput: true\\nExpected: false\\n\\nHow can 101 not be a palindrome?"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "BRO SORRY BUT \\nFIRST GO AND HAVE TUTORIAL WHAT IS PALINDROME."
                    },
                    {
                        "username": "BishalGupta0",
                        "content": "its -101 not 101 i think"
                    },
                    {
                        "username": "shivahi",
                        "content": "This is very easiest question for me .I solve with in 2 min.\\nApproach :\\nSo we have to see is it palindrome or not.In string we use two pointer approach or we reverse it Then see is it same as x.\\nIt hard to this approach for me do with int.So I type caste the int into string(st) then \\nmake one blank string (result) to store the reverse value\\nthen i iterate the string from right to left and every iteration i store the value in the result.\\nAfter wards i check it is equal to st then True .else false\\n\\n\\nBut I want to anyother approach can i solve this without type casting or using list..\\nPlease feel free to reply??"
                    },
                    {
                        "username": "Iviwe_M",
                        "content": "I keep getting \"Time Limit Exceeded\" for:\\n\\npublic class Solution {\\n    public bool IsPalindrome(int x) {\\n\\n  int rev = 0;\\n\\n        while (x > 0) {\\n            rev *= 10 + (x % 10);\\n            rev /= 10;\\n        }\\n    return rev == x;\\n\\n  }  \\n}\\n\\nAny help as to why?"
                    },
                    {
                        "username": "kmooventhan98",
                        "content": "\nfor 10 I am getting true, but it should return false\nany error in this code\n\ndef is_palindrome(x)\n    return false if x < 0\n    div = 1\n    while div <= x\n      div *= 10\n    end\n    while x > 0\n      first_value = x / div\n      last_value = x % 10 \n     return false if first_value != last_value\n      # update x\n      x = (x/10) % div\n      # update div\n      div /= 100\n    end\n  true\nend\n\n"
                    },
                    {
                        "username": "unknownghost64",
                        "content": "\nclass Solution:\n    def isPalindrome(self, x: int) -> bool:\n        temp = x  \n        rev = 0  \n        while(x > 0):  \n            dig = x % 10  \n            rev = rev * 10 + dig  \n            x = x // 10  \n        if(temp != rev) or x<0:  \n            return \"false\"\n        else:  \n            return \"true\"        \n\nI have wrote this code on but it failed in the 2 and 3 and if run the same test case in PyCharm it well and good is something wrong in my code or is it something else. I have copied pasted the code so the indexing might me off  but indexing in my code is correct\n"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro you must  INCLUDE one more condition were you check weather the x is greater then  0 or not\\nIF (X<0):\\n     RETURN FALSE\\n"
                    }
                ]
            },
            {
                "id": 2076086,
                "content": [
                    {
                        "username": "tanay1502",
                        "content": "return str(x) == str(x)[::-1]"
                    },
                    {
                        "username": "Omyx",
                        "content": "\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion tab.\\n\\n2. The problem discussion tab is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nI don't think there is a boolean data type in C language. When we select the language as C, it shows the following function signature which I suppose is not correct.\\n\\n    bool isPalindrome(int x){\\n    }\\n\\nPlease correct it.\\n\\nThanks."
                    },
                    {
                        "username": "cattishToast",
                        "content": "bool Is a data type added in the <stdbool.h> header file"
                    },
                    {
                        "username": "alimjanovff",
                        "content": "IsPalindrome"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "4n33s",
                        "content": "return str(x)[::-1] == str(x)"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "RETURN (str(x)[::-1] == str(x))\\nWHY WE ARE USING STR(X)  AS IN QUESTION  IT MIGHT THE CONDITION AT WHICH ANY FLOAT VALUE CAN INPUT WHICH GOING TO CONVERTED INTO STRING AS WE ARE TYPECASTING X VALUE IN STR CLASS"
                    },
                    {
                        "username": "jsmith7677",
                        "content": "Input: -101\\nOutput: true\\nExpected: false\\n\\nHow can 101 not be a palindrome?"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "BRO SORRY BUT \\nFIRST GO AND HAVE TUTORIAL WHAT IS PALINDROME."
                    },
                    {
                        "username": "BishalGupta0",
                        "content": "its -101 not 101 i think"
                    },
                    {
                        "username": "shivahi",
                        "content": "This is very easiest question for me .I solve with in 2 min.\\nApproach :\\nSo we have to see is it palindrome or not.In string we use two pointer approach or we reverse it Then see is it same as x.\\nIt hard to this approach for me do with int.So I type caste the int into string(st) then \\nmake one blank string (result) to store the reverse value\\nthen i iterate the string from right to left and every iteration i store the value in the result.\\nAfter wards i check it is equal to st then True .else false\\n\\n\\nBut I want to anyother approach can i solve this without type casting or using list..\\nPlease feel free to reply??"
                    },
                    {
                        "username": "Iviwe_M",
                        "content": "I keep getting \"Time Limit Exceeded\" for:\\n\\npublic class Solution {\\n    public bool IsPalindrome(int x) {\\n\\n  int rev = 0;\\n\\n        while (x > 0) {\\n            rev *= 10 + (x % 10);\\n            rev /= 10;\\n        }\\n    return rev == x;\\n\\n  }  \\n}\\n\\nAny help as to why?"
                    },
                    {
                        "username": "kmooventhan98",
                        "content": "\nfor 10 I am getting true, but it should return false\nany error in this code\n\ndef is_palindrome(x)\n    return false if x < 0\n    div = 1\n    while div <= x\n      div *= 10\n    end\n    while x > 0\n      first_value = x / div\n      last_value = x % 10 \n     return false if first_value != last_value\n      # update x\n      x = (x/10) % div\n      # update div\n      div /= 100\n    end\n  true\nend\n\n"
                    },
                    {
                        "username": "unknownghost64",
                        "content": "\nclass Solution:\n    def isPalindrome(self, x: int) -> bool:\n        temp = x  \n        rev = 0  \n        while(x > 0):  \n            dig = x % 10  \n            rev = rev * 10 + dig  \n            x = x // 10  \n        if(temp != rev) or x<0:  \n            return \"false\"\n        else:  \n            return \"true\"        \n\nI have wrote this code on but it failed in the 2 and 3 and if run the same test case in PyCharm it well and good is something wrong in my code or is it something else. I have copied pasted the code so the indexing might me off  but indexing in my code is correct\n"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro you must  INCLUDE one more condition were you check weather the x is greater then  0 or not\\nIF (X<0):\\n     RETURN FALSE\\n"
                    }
                ]
            },
            {
                "id": 2074609,
                "content": [
                    {
                        "username": "tanay1502",
                        "content": "return str(x) == str(x)[::-1]"
                    },
                    {
                        "username": "Omyx",
                        "content": "\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion tab.\\n\\n2. The problem discussion tab is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "Vgn",
                        "content": "Dear LeetCode,\\n\\nI don't think there is a boolean data type in C language. When we select the language as C, it shows the following function signature which I suppose is not correct.\\n\\n    bool isPalindrome(int x){\\n    }\\n\\nPlease correct it.\\n\\nThanks."
                    },
                    {
                        "username": "cattishToast",
                        "content": "bool Is a data type added in the <stdbool.h> header file"
                    },
                    {
                        "username": "alimjanovff",
                        "content": "IsPalindrome"
                    },
                    {
                        "username": "ahtisham225ali",
                        "content": "The Simple Solution to the Problem in python is here https://hecodesit.com/palindrome-number-leetcode-python-python-solutions/"
                    },
                    {
                        "username": "4n33s",
                        "content": "return str(x)[::-1] == str(x)"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "RETURN (str(x)[::-1] == str(x))\\nWHY WE ARE USING STR(X)  AS IN QUESTION  IT MIGHT THE CONDITION AT WHICH ANY FLOAT VALUE CAN INPUT WHICH GOING TO CONVERTED INTO STRING AS WE ARE TYPECASTING X VALUE IN STR CLASS"
                    },
                    {
                        "username": "jsmith7677",
                        "content": "Input: -101\\nOutput: true\\nExpected: false\\n\\nHow can 101 not be a palindrome?"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "BRO SORRY BUT \\nFIRST GO AND HAVE TUTORIAL WHAT IS PALINDROME."
                    },
                    {
                        "username": "BishalGupta0",
                        "content": "its -101 not 101 i think"
                    },
                    {
                        "username": "shivahi",
                        "content": "This is very easiest question for me .I solve with in 2 min.\\nApproach :\\nSo we have to see is it palindrome or not.In string we use two pointer approach or we reverse it Then see is it same as x.\\nIt hard to this approach for me do with int.So I type caste the int into string(st) then \\nmake one blank string (result) to store the reverse value\\nthen i iterate the string from right to left and every iteration i store the value in the result.\\nAfter wards i check it is equal to st then True .else false\\n\\n\\nBut I want to anyother approach can i solve this without type casting or using list..\\nPlease feel free to reply??"
                    },
                    {
                        "username": "Iviwe_M",
                        "content": "I keep getting \"Time Limit Exceeded\" for:\\n\\npublic class Solution {\\n    public bool IsPalindrome(int x) {\\n\\n  int rev = 0;\\n\\n        while (x > 0) {\\n            rev *= 10 + (x % 10);\\n            rev /= 10;\\n        }\\n    return rev == x;\\n\\n  }  \\n}\\n\\nAny help as to why?"
                    },
                    {
                        "username": "kmooventhan98",
                        "content": "\nfor 10 I am getting true, but it should return false\nany error in this code\n\ndef is_palindrome(x)\n    return false if x < 0\n    div = 1\n    while div <= x\n      div *= 10\n    end\n    while x > 0\n      first_value = x / div\n      last_value = x % 10 \n     return false if first_value != last_value\n      # update x\n      x = (x/10) % div\n      # update div\n      div /= 100\n    end\n  true\nend\n\n"
                    },
                    {
                        "username": "unknownghost64",
                        "content": "\nclass Solution:\n    def isPalindrome(self, x: int) -> bool:\n        temp = x  \n        rev = 0  \n        while(x > 0):  \n            dig = x % 10  \n            rev = rev * 10 + dig  \n            x = x // 10  \n        if(temp != rev) or x<0:  \n            return \"false\"\n        else:  \n            return \"true\"        \n\nI have wrote this code on but it failed in the 2 and 3 and if run the same test case in PyCharm it well and good is something wrong in my code or is it something else. I have copied pasted the code so the indexing might me off  but indexing in my code is correct\n"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro you must  INCLUDE one more condition were you check weather the x is greater then  0 or not\\nIF (X<0):\\n     RETURN FALSE\\n"
                    }
                ]
            },
            {
                "id": 2073192,
                "content": [
                    {
                        "username": "arshiyankhan92",
                        "content": "#include<iostream>\\n#include<climits>\\nusing namespace std;\\nint main(){ \\n      int x;\\n        int rev=0;\\n        int rem=0;\\n        cout<<\"Enter number to check palindrome: \";\\n        cin>>x;\\n        while(x!=0){\\n            rem=x%10;\\n            rev=(rev*10)+rem;\\n            x=x/10;\\n        }\\n            if(rev){\\n                cout<<rev<<\" is palindrome\";\\n            }\\n              else\\n            cout<<rev<<\" is not palindrome\";\\n            }\\n          \\n        \\n        \\n\\n\\n   \\n        \\n       \\n        \\n    \\n    \\n    \\n    \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n "
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro you must INCLUDE one more condition were you check weather the x is greater then 0 or not\\nIF (X<0):\\nRETURN FALSE"
                    },
                    {
                        "username": "shreya_chaturvedi18",
                        "content": "what the hell with my code....plz help\\nclass Solution {\\n    public boolean isPalindrome(int no) \\n    {\\n        int no1= no;\\n        int rev=0;\\n        \\n        \\nwhile( no1!=0)\\n{\\nint rem=no1%10;\\n rev=rev*10+rem;\\nno1=no1/10;\\n}\\nif(  rev==no)\\n{\\nreturn true;\\n}\\nelse\\n{\\n    return false;\\n}\\n}\\n\\n    }\\n\\n"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "   if(no<0) return false;\\nyou have not check the condition if the n must greater than 0\\nin Result  case 2 will showing wrong Answer"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "just add a condition at the starting which returns false if input no. is less than 0. as the code requires false output for a negative no which can't be obtained by digit separation\nif(no<0){\n  return false;\n} \nthis at start would be enough to solve your problem"
                    },
                    {
                        "username": "shakhzodmakhmasoatov",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        if str(x)==str(x)[::-1]:\\n            r=True\\n        else:\\n            r=False\\n\\n        return r"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro your solution is correct but it is  python"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "one line solution\n\nin these question we are checking palindrome or not \nfor that we can check [::-1] of that element is same to the  original element\n return(str(x)==str(x)[::-1])\nstr(x)[::-1} these means slicing the x\nwe are using (str) because it may that value will in float  or integer and it is necessary to convert it into string \nfor getting  perfect value of x\n\n"
                    },
                    {
                        "username": "ChrisKeyber",
                        "content": "Using python, beat 90% of users in memory, but get beaten by 90% users in run time. "
                    },
                    {
                        "username": "nalluchakradhar",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        k=str(x)\\n        l=k[::-1]\\n        if k==l:\\n                   return(\"True\")\\n        else:\\n                   return(\"False\")\\ncan anyone help me with this code ...I\\'m getting wrong output"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "I Thought of using the coversion to string method but when i read the challenge below the problem to do it withtout a string then...\\nI Tried a basic c++solution  applying digit separation and comparing the numbers and returning it.\\nFor negative numbers i simply returned false as they cant be pallindrome acc to problem statement\\nWHEN I SUBMITTED MY ANS I GOT 3ms TIME AND SO I REMOVED SOME VARIABLE CREATION THINKING IT WOULD BE BETTER BUT INSTEAD I GOT 17 MS RUNTIME SO I JUST SUBMITTED MY PREVIOUS SOL. AND I GOT 17 MS RUNTIME AGAIN THEN AGAIN I TRIED AND I GOT 11 . \\n\\nIDK WHATS HAPPENING BUT WHY IS LEETCODE GIVING DIFF RUNTIME FOR SAME SOLUTION .....HOW DOES IT WORK PLEASE HELP"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "[@gregoryderner](/gregoryderner) Thanks brother, If i am not disturbing you will you please tell me what do you mean by creating an isolated environment here.How can i create that to compare time taken."
                    },
                    {
                        "username": "gregoryderner",
                        "content": "This happens because some values are generated randomly and therefore, even if you send the same code you will have different results. In javascript I created an isolated mechanism to test performance in a more controlled way and compare with other solutions to see how my code performs. Maybe it\\'s the case that you do something similar for yours."
                    },
                    {
                        "username": "hunterxcobby",
                        "content": "Wow, I am a junior developer who just got introduced to Leetcode and i am already loving it. This  is the best platform ever.\\n\\nso i kind of first used the extraction method which ended up not  satisfying the fifth edge cases and it made sense. So i checked the follow up and realised i could easily use string conversion"
                    },
                    {
                        "username": "IshaqAlkhairi",
                        "content": "my solution compiles perfectly anywhere but here and i keep facing this problem: \\nCompile Error\\n0 / 0 testcases passed\\nLine 49: Char 5: error: redefinition of \\u2018main\\u2019 [solution.c]\\n   52 | int main(int argc, char *argv[]) {\\n      |     ^~~~"
                    },
                    {
                        "username": "nein4matic",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        result = True if str(x) == str(x)[::-1] else False\\n        return result"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    }
                ]
            },
            {
                "id": 2072974,
                "content": [
                    {
                        "username": "arshiyankhan92",
                        "content": "#include<iostream>\\n#include<climits>\\nusing namespace std;\\nint main(){ \\n      int x;\\n        int rev=0;\\n        int rem=0;\\n        cout<<\"Enter number to check palindrome: \";\\n        cin>>x;\\n        while(x!=0){\\n            rem=x%10;\\n            rev=(rev*10)+rem;\\n            x=x/10;\\n        }\\n            if(rev){\\n                cout<<rev<<\" is palindrome\";\\n            }\\n              else\\n            cout<<rev<<\" is not palindrome\";\\n            }\\n          \\n        \\n        \\n\\n\\n   \\n        \\n       \\n        \\n    \\n    \\n    \\n    \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n "
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro you must INCLUDE one more condition were you check weather the x is greater then 0 or not\\nIF (X<0):\\nRETURN FALSE"
                    },
                    {
                        "username": "shreya_chaturvedi18",
                        "content": "what the hell with my code....plz help\\nclass Solution {\\n    public boolean isPalindrome(int no) \\n    {\\n        int no1= no;\\n        int rev=0;\\n        \\n        \\nwhile( no1!=0)\\n{\\nint rem=no1%10;\\n rev=rev*10+rem;\\nno1=no1/10;\\n}\\nif(  rev==no)\\n{\\nreturn true;\\n}\\nelse\\n{\\n    return false;\\n}\\n}\\n\\n    }\\n\\n"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "   if(no<0) return false;\\nyou have not check the condition if the n must greater than 0\\nin Result  case 2 will showing wrong Answer"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "just add a condition at the starting which returns false if input no. is less than 0. as the code requires false output for a negative no which can't be obtained by digit separation\nif(no<0){\n  return false;\n} \nthis at start would be enough to solve your problem"
                    },
                    {
                        "username": "shakhzodmakhmasoatov",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        if str(x)==str(x)[::-1]:\\n            r=True\\n        else:\\n            r=False\\n\\n        return r"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro your solution is correct but it is  python"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "one line solution\n\nin these question we are checking palindrome or not \nfor that we can check [::-1] of that element is same to the  original element\n return(str(x)==str(x)[::-1])\nstr(x)[::-1} these means slicing the x\nwe are using (str) because it may that value will in float  or integer and it is necessary to convert it into string \nfor getting  perfect value of x\n\n"
                    },
                    {
                        "username": "ChrisKeyber",
                        "content": "Using python, beat 90% of users in memory, but get beaten by 90% users in run time. "
                    },
                    {
                        "username": "nalluchakradhar",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        k=str(x)\\n        l=k[::-1]\\n        if k==l:\\n                   return(\"True\")\\n        else:\\n                   return(\"False\")\\ncan anyone help me with this code ...I\\'m getting wrong output"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "I Thought of using the coversion to string method but when i read the challenge below the problem to do it withtout a string then...\\nI Tried a basic c++solution  applying digit separation and comparing the numbers and returning it.\\nFor negative numbers i simply returned false as they cant be pallindrome acc to problem statement\\nWHEN I SUBMITTED MY ANS I GOT 3ms TIME AND SO I REMOVED SOME VARIABLE CREATION THINKING IT WOULD BE BETTER BUT INSTEAD I GOT 17 MS RUNTIME SO I JUST SUBMITTED MY PREVIOUS SOL. AND I GOT 17 MS RUNTIME AGAIN THEN AGAIN I TRIED AND I GOT 11 . \\n\\nIDK WHATS HAPPENING BUT WHY IS LEETCODE GIVING DIFF RUNTIME FOR SAME SOLUTION .....HOW DOES IT WORK PLEASE HELP"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "[@gregoryderner](/gregoryderner) Thanks brother, If i am not disturbing you will you please tell me what do you mean by creating an isolated environment here.How can i create that to compare time taken."
                    },
                    {
                        "username": "gregoryderner",
                        "content": "This happens because some values are generated randomly and therefore, even if you send the same code you will have different results. In javascript I created an isolated mechanism to test performance in a more controlled way and compare with other solutions to see how my code performs. Maybe it\\'s the case that you do something similar for yours."
                    },
                    {
                        "username": "hunterxcobby",
                        "content": "Wow, I am a junior developer who just got introduced to Leetcode and i am already loving it. This  is the best platform ever.\\n\\nso i kind of first used the extraction method which ended up not  satisfying the fifth edge cases and it made sense. So i checked the follow up and realised i could easily use string conversion"
                    },
                    {
                        "username": "IshaqAlkhairi",
                        "content": "my solution compiles perfectly anywhere but here and i keep facing this problem: \\nCompile Error\\n0 / 0 testcases passed\\nLine 49: Char 5: error: redefinition of \\u2018main\\u2019 [solution.c]\\n   52 | int main(int argc, char *argv[]) {\\n      |     ^~~~"
                    },
                    {
                        "username": "nein4matic",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        result = True if str(x) == str(x)[::-1] else False\\n        return result"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    }
                ]
            },
            {
                "id": 2072824,
                "content": [
                    {
                        "username": "arshiyankhan92",
                        "content": "#include<iostream>\\n#include<climits>\\nusing namespace std;\\nint main(){ \\n      int x;\\n        int rev=0;\\n        int rem=0;\\n        cout<<\"Enter number to check palindrome: \";\\n        cin>>x;\\n        while(x!=0){\\n            rem=x%10;\\n            rev=(rev*10)+rem;\\n            x=x/10;\\n        }\\n            if(rev){\\n                cout<<rev<<\" is palindrome\";\\n            }\\n              else\\n            cout<<rev<<\" is not palindrome\";\\n            }\\n          \\n        \\n        \\n\\n\\n   \\n        \\n       \\n        \\n    \\n    \\n    \\n    \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n "
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro you must INCLUDE one more condition were you check weather the x is greater then 0 or not\\nIF (X<0):\\nRETURN FALSE"
                    },
                    {
                        "username": "shreya_chaturvedi18",
                        "content": "what the hell with my code....plz help\\nclass Solution {\\n    public boolean isPalindrome(int no) \\n    {\\n        int no1= no;\\n        int rev=0;\\n        \\n        \\nwhile( no1!=0)\\n{\\nint rem=no1%10;\\n rev=rev*10+rem;\\nno1=no1/10;\\n}\\nif(  rev==no)\\n{\\nreturn true;\\n}\\nelse\\n{\\n    return false;\\n}\\n}\\n\\n    }\\n\\n"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "   if(no<0) return false;\\nyou have not check the condition if the n must greater than 0\\nin Result  case 2 will showing wrong Answer"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "just add a condition at the starting which returns false if input no. is less than 0. as the code requires false output for a negative no which can't be obtained by digit separation\nif(no<0){\n  return false;\n} \nthis at start would be enough to solve your problem"
                    },
                    {
                        "username": "shakhzodmakhmasoatov",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        if str(x)==str(x)[::-1]:\\n            r=True\\n        else:\\n            r=False\\n\\n        return r"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro your solution is correct but it is  python"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "one line solution\n\nin these question we are checking palindrome or not \nfor that we can check [::-1] of that element is same to the  original element\n return(str(x)==str(x)[::-1])\nstr(x)[::-1} these means slicing the x\nwe are using (str) because it may that value will in float  or integer and it is necessary to convert it into string \nfor getting  perfect value of x\n\n"
                    },
                    {
                        "username": "ChrisKeyber",
                        "content": "Using python, beat 90% of users in memory, but get beaten by 90% users in run time. "
                    },
                    {
                        "username": "nalluchakradhar",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        k=str(x)\\n        l=k[::-1]\\n        if k==l:\\n                   return(\"True\")\\n        else:\\n                   return(\"False\")\\ncan anyone help me with this code ...I\\'m getting wrong output"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "I Thought of using the coversion to string method but when i read the challenge below the problem to do it withtout a string then...\\nI Tried a basic c++solution  applying digit separation and comparing the numbers and returning it.\\nFor negative numbers i simply returned false as they cant be pallindrome acc to problem statement\\nWHEN I SUBMITTED MY ANS I GOT 3ms TIME AND SO I REMOVED SOME VARIABLE CREATION THINKING IT WOULD BE BETTER BUT INSTEAD I GOT 17 MS RUNTIME SO I JUST SUBMITTED MY PREVIOUS SOL. AND I GOT 17 MS RUNTIME AGAIN THEN AGAIN I TRIED AND I GOT 11 . \\n\\nIDK WHATS HAPPENING BUT WHY IS LEETCODE GIVING DIFF RUNTIME FOR SAME SOLUTION .....HOW DOES IT WORK PLEASE HELP"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "[@gregoryderner](/gregoryderner) Thanks brother, If i am not disturbing you will you please tell me what do you mean by creating an isolated environment here.How can i create that to compare time taken."
                    },
                    {
                        "username": "gregoryderner",
                        "content": "This happens because some values are generated randomly and therefore, even if you send the same code you will have different results. In javascript I created an isolated mechanism to test performance in a more controlled way and compare with other solutions to see how my code performs. Maybe it\\'s the case that you do something similar for yours."
                    },
                    {
                        "username": "hunterxcobby",
                        "content": "Wow, I am a junior developer who just got introduced to Leetcode and i am already loving it. This  is the best platform ever.\\n\\nso i kind of first used the extraction method which ended up not  satisfying the fifth edge cases and it made sense. So i checked the follow up and realised i could easily use string conversion"
                    },
                    {
                        "username": "IshaqAlkhairi",
                        "content": "my solution compiles perfectly anywhere but here and i keep facing this problem: \\nCompile Error\\n0 / 0 testcases passed\\nLine 49: Char 5: error: redefinition of \\u2018main\\u2019 [solution.c]\\n   52 | int main(int argc, char *argv[]) {\\n      |     ^~~~"
                    },
                    {
                        "username": "nein4matic",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        result = True if str(x) == str(x)[::-1] else False\\n        return result"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    }
                ]
            },
            {
                "id": 2071623,
                "content": [
                    {
                        "username": "arshiyankhan92",
                        "content": "#include<iostream>\\n#include<climits>\\nusing namespace std;\\nint main(){ \\n      int x;\\n        int rev=0;\\n        int rem=0;\\n        cout<<\"Enter number to check palindrome: \";\\n        cin>>x;\\n        while(x!=0){\\n            rem=x%10;\\n            rev=(rev*10)+rem;\\n            x=x/10;\\n        }\\n            if(rev){\\n                cout<<rev<<\" is palindrome\";\\n            }\\n              else\\n            cout<<rev<<\" is not palindrome\";\\n            }\\n          \\n        \\n        \\n\\n\\n   \\n        \\n       \\n        \\n    \\n    \\n    \\n    \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n "
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro you must INCLUDE one more condition were you check weather the x is greater then 0 or not\\nIF (X<0):\\nRETURN FALSE"
                    },
                    {
                        "username": "shreya_chaturvedi18",
                        "content": "what the hell with my code....plz help\\nclass Solution {\\n    public boolean isPalindrome(int no) \\n    {\\n        int no1= no;\\n        int rev=0;\\n        \\n        \\nwhile( no1!=0)\\n{\\nint rem=no1%10;\\n rev=rev*10+rem;\\nno1=no1/10;\\n}\\nif(  rev==no)\\n{\\nreturn true;\\n}\\nelse\\n{\\n    return false;\\n}\\n}\\n\\n    }\\n\\n"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "   if(no<0) return false;\\nyou have not check the condition if the n must greater than 0\\nin Result  case 2 will showing wrong Answer"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "just add a condition at the starting which returns false if input no. is less than 0. as the code requires false output for a negative no which can't be obtained by digit separation\nif(no<0){\n  return false;\n} \nthis at start would be enough to solve your problem"
                    },
                    {
                        "username": "shakhzodmakhmasoatov",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        if str(x)==str(x)[::-1]:\\n            r=True\\n        else:\\n            r=False\\n\\n        return r"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro your solution is correct but it is  python"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "one line solution\n\nin these question we are checking palindrome or not \nfor that we can check [::-1] of that element is same to the  original element\n return(str(x)==str(x)[::-1])\nstr(x)[::-1} these means slicing the x\nwe are using (str) because it may that value will in float  or integer and it is necessary to convert it into string \nfor getting  perfect value of x\n\n"
                    },
                    {
                        "username": "ChrisKeyber",
                        "content": "Using python, beat 90% of users in memory, but get beaten by 90% users in run time. "
                    },
                    {
                        "username": "nalluchakradhar",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        k=str(x)\\n        l=k[::-1]\\n        if k==l:\\n                   return(\"True\")\\n        else:\\n                   return(\"False\")\\ncan anyone help me with this code ...I\\'m getting wrong output"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "I Thought of using the coversion to string method but when i read the challenge below the problem to do it withtout a string then...\\nI Tried a basic c++solution  applying digit separation and comparing the numbers and returning it.\\nFor negative numbers i simply returned false as they cant be pallindrome acc to problem statement\\nWHEN I SUBMITTED MY ANS I GOT 3ms TIME AND SO I REMOVED SOME VARIABLE CREATION THINKING IT WOULD BE BETTER BUT INSTEAD I GOT 17 MS RUNTIME SO I JUST SUBMITTED MY PREVIOUS SOL. AND I GOT 17 MS RUNTIME AGAIN THEN AGAIN I TRIED AND I GOT 11 . \\n\\nIDK WHATS HAPPENING BUT WHY IS LEETCODE GIVING DIFF RUNTIME FOR SAME SOLUTION .....HOW DOES IT WORK PLEASE HELP"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "[@gregoryderner](/gregoryderner) Thanks brother, If i am not disturbing you will you please tell me what do you mean by creating an isolated environment here.How can i create that to compare time taken."
                    },
                    {
                        "username": "gregoryderner",
                        "content": "This happens because some values are generated randomly and therefore, even if you send the same code you will have different results. In javascript I created an isolated mechanism to test performance in a more controlled way and compare with other solutions to see how my code performs. Maybe it\\'s the case that you do something similar for yours."
                    },
                    {
                        "username": "hunterxcobby",
                        "content": "Wow, I am a junior developer who just got introduced to Leetcode and i am already loving it. This  is the best platform ever.\\n\\nso i kind of first used the extraction method which ended up not  satisfying the fifth edge cases and it made sense. So i checked the follow up and realised i could easily use string conversion"
                    },
                    {
                        "username": "IshaqAlkhairi",
                        "content": "my solution compiles perfectly anywhere but here and i keep facing this problem: \\nCompile Error\\n0 / 0 testcases passed\\nLine 49: Char 5: error: redefinition of \\u2018main\\u2019 [solution.c]\\n   52 | int main(int argc, char *argv[]) {\\n      |     ^~~~"
                    },
                    {
                        "username": "nein4matic",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        result = True if str(x) == str(x)[::-1] else False\\n        return result"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    }
                ]
            },
            {
                "id": 2070501,
                "content": [
                    {
                        "username": "arshiyankhan92",
                        "content": "#include<iostream>\\n#include<climits>\\nusing namespace std;\\nint main(){ \\n      int x;\\n        int rev=0;\\n        int rem=0;\\n        cout<<\"Enter number to check palindrome: \";\\n        cin>>x;\\n        while(x!=0){\\n            rem=x%10;\\n            rev=(rev*10)+rem;\\n            x=x/10;\\n        }\\n            if(rev){\\n                cout<<rev<<\" is palindrome\";\\n            }\\n              else\\n            cout<<rev<<\" is not palindrome\";\\n            }\\n          \\n        \\n        \\n\\n\\n   \\n        \\n       \\n        \\n    \\n    \\n    \\n    \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n "
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro you must INCLUDE one more condition were you check weather the x is greater then 0 or not\\nIF (X<0):\\nRETURN FALSE"
                    },
                    {
                        "username": "shreya_chaturvedi18",
                        "content": "what the hell with my code....plz help\\nclass Solution {\\n    public boolean isPalindrome(int no) \\n    {\\n        int no1= no;\\n        int rev=0;\\n        \\n        \\nwhile( no1!=0)\\n{\\nint rem=no1%10;\\n rev=rev*10+rem;\\nno1=no1/10;\\n}\\nif(  rev==no)\\n{\\nreturn true;\\n}\\nelse\\n{\\n    return false;\\n}\\n}\\n\\n    }\\n\\n"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "   if(no<0) return false;\\nyou have not check the condition if the n must greater than 0\\nin Result  case 2 will showing wrong Answer"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "just add a condition at the starting which returns false if input no. is less than 0. as the code requires false output for a negative no which can't be obtained by digit separation\nif(no<0){\n  return false;\n} \nthis at start would be enough to solve your problem"
                    },
                    {
                        "username": "shakhzodmakhmasoatov",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        if str(x)==str(x)[::-1]:\\n            r=True\\n        else:\\n            r=False\\n\\n        return r"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro your solution is correct but it is  python"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "one line solution\n\nin these question we are checking palindrome or not \nfor that we can check [::-1] of that element is same to the  original element\n return(str(x)==str(x)[::-1])\nstr(x)[::-1} these means slicing the x\nwe are using (str) because it may that value will in float  or integer and it is necessary to convert it into string \nfor getting  perfect value of x\n\n"
                    },
                    {
                        "username": "ChrisKeyber",
                        "content": "Using python, beat 90% of users in memory, but get beaten by 90% users in run time. "
                    },
                    {
                        "username": "nalluchakradhar",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        k=str(x)\\n        l=k[::-1]\\n        if k==l:\\n                   return(\"True\")\\n        else:\\n                   return(\"False\")\\ncan anyone help me with this code ...I\\'m getting wrong output"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "I Thought of using the coversion to string method but when i read the challenge below the problem to do it withtout a string then...\\nI Tried a basic c++solution  applying digit separation and comparing the numbers and returning it.\\nFor negative numbers i simply returned false as they cant be pallindrome acc to problem statement\\nWHEN I SUBMITTED MY ANS I GOT 3ms TIME AND SO I REMOVED SOME VARIABLE CREATION THINKING IT WOULD BE BETTER BUT INSTEAD I GOT 17 MS RUNTIME SO I JUST SUBMITTED MY PREVIOUS SOL. AND I GOT 17 MS RUNTIME AGAIN THEN AGAIN I TRIED AND I GOT 11 . \\n\\nIDK WHATS HAPPENING BUT WHY IS LEETCODE GIVING DIFF RUNTIME FOR SAME SOLUTION .....HOW DOES IT WORK PLEASE HELP"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "[@gregoryderner](/gregoryderner) Thanks brother, If i am not disturbing you will you please tell me what do you mean by creating an isolated environment here.How can i create that to compare time taken."
                    },
                    {
                        "username": "gregoryderner",
                        "content": "This happens because some values are generated randomly and therefore, even if you send the same code you will have different results. In javascript I created an isolated mechanism to test performance in a more controlled way and compare with other solutions to see how my code performs. Maybe it\\'s the case that you do something similar for yours."
                    },
                    {
                        "username": "hunterxcobby",
                        "content": "Wow, I am a junior developer who just got introduced to Leetcode and i am already loving it. This  is the best platform ever.\\n\\nso i kind of first used the extraction method which ended up not  satisfying the fifth edge cases and it made sense. So i checked the follow up and realised i could easily use string conversion"
                    },
                    {
                        "username": "IshaqAlkhairi",
                        "content": "my solution compiles perfectly anywhere but here and i keep facing this problem: \\nCompile Error\\n0 / 0 testcases passed\\nLine 49: Char 5: error: redefinition of \\u2018main\\u2019 [solution.c]\\n   52 | int main(int argc, char *argv[]) {\\n      |     ^~~~"
                    },
                    {
                        "username": "nein4matic",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        result = True if str(x) == str(x)[::-1] else False\\n        return result"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    }
                ]
            },
            {
                "id": 2068681,
                "content": [
                    {
                        "username": "arshiyankhan92",
                        "content": "#include<iostream>\\n#include<climits>\\nusing namespace std;\\nint main(){ \\n      int x;\\n        int rev=0;\\n        int rem=0;\\n        cout<<\"Enter number to check palindrome: \";\\n        cin>>x;\\n        while(x!=0){\\n            rem=x%10;\\n            rev=(rev*10)+rem;\\n            x=x/10;\\n        }\\n            if(rev){\\n                cout<<rev<<\" is palindrome\";\\n            }\\n              else\\n            cout<<rev<<\" is not palindrome\";\\n            }\\n          \\n        \\n        \\n\\n\\n   \\n        \\n       \\n        \\n    \\n    \\n    \\n    \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n "
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro you must INCLUDE one more condition were you check weather the x is greater then 0 or not\\nIF (X<0):\\nRETURN FALSE"
                    },
                    {
                        "username": "shreya_chaturvedi18",
                        "content": "what the hell with my code....plz help\\nclass Solution {\\n    public boolean isPalindrome(int no) \\n    {\\n        int no1= no;\\n        int rev=0;\\n        \\n        \\nwhile( no1!=0)\\n{\\nint rem=no1%10;\\n rev=rev*10+rem;\\nno1=no1/10;\\n}\\nif(  rev==no)\\n{\\nreturn true;\\n}\\nelse\\n{\\n    return false;\\n}\\n}\\n\\n    }\\n\\n"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "   if(no<0) return false;\\nyou have not check the condition if the n must greater than 0\\nin Result  case 2 will showing wrong Answer"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "just add a condition at the starting which returns false if input no. is less than 0. as the code requires false output for a negative no which can't be obtained by digit separation\nif(no<0){\n  return false;\n} \nthis at start would be enough to solve your problem"
                    },
                    {
                        "username": "shakhzodmakhmasoatov",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        if str(x)==str(x)[::-1]:\\n            r=True\\n        else:\\n            r=False\\n\\n        return r"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro your solution is correct but it is  python"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "one line solution\n\nin these question we are checking palindrome or not \nfor that we can check [::-1] of that element is same to the  original element\n return(str(x)==str(x)[::-1])\nstr(x)[::-1} these means slicing the x\nwe are using (str) because it may that value will in float  or integer and it is necessary to convert it into string \nfor getting  perfect value of x\n\n"
                    },
                    {
                        "username": "ChrisKeyber",
                        "content": "Using python, beat 90% of users in memory, but get beaten by 90% users in run time. "
                    },
                    {
                        "username": "nalluchakradhar",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        k=str(x)\\n        l=k[::-1]\\n        if k==l:\\n                   return(\"True\")\\n        else:\\n                   return(\"False\")\\ncan anyone help me with this code ...I\\'m getting wrong output"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "I Thought of using the coversion to string method but when i read the challenge below the problem to do it withtout a string then...\\nI Tried a basic c++solution  applying digit separation and comparing the numbers and returning it.\\nFor negative numbers i simply returned false as they cant be pallindrome acc to problem statement\\nWHEN I SUBMITTED MY ANS I GOT 3ms TIME AND SO I REMOVED SOME VARIABLE CREATION THINKING IT WOULD BE BETTER BUT INSTEAD I GOT 17 MS RUNTIME SO I JUST SUBMITTED MY PREVIOUS SOL. AND I GOT 17 MS RUNTIME AGAIN THEN AGAIN I TRIED AND I GOT 11 . \\n\\nIDK WHATS HAPPENING BUT WHY IS LEETCODE GIVING DIFF RUNTIME FOR SAME SOLUTION .....HOW DOES IT WORK PLEASE HELP"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "[@gregoryderner](/gregoryderner) Thanks brother, If i am not disturbing you will you please tell me what do you mean by creating an isolated environment here.How can i create that to compare time taken."
                    },
                    {
                        "username": "gregoryderner",
                        "content": "This happens because some values are generated randomly and therefore, even if you send the same code you will have different results. In javascript I created an isolated mechanism to test performance in a more controlled way and compare with other solutions to see how my code performs. Maybe it\\'s the case that you do something similar for yours."
                    },
                    {
                        "username": "hunterxcobby",
                        "content": "Wow, I am a junior developer who just got introduced to Leetcode and i am already loving it. This  is the best platform ever.\\n\\nso i kind of first used the extraction method which ended up not  satisfying the fifth edge cases and it made sense. So i checked the follow up and realised i could easily use string conversion"
                    },
                    {
                        "username": "IshaqAlkhairi",
                        "content": "my solution compiles perfectly anywhere but here and i keep facing this problem: \\nCompile Error\\n0 / 0 testcases passed\\nLine 49: Char 5: error: redefinition of \\u2018main\\u2019 [solution.c]\\n   52 | int main(int argc, char *argv[]) {\\n      |     ^~~~"
                    },
                    {
                        "username": "nein4matic",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        result = True if str(x) == str(x)[::-1] else False\\n        return result"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    }
                ]
            },
            {
                "id": 2068645,
                "content": [
                    {
                        "username": "arshiyankhan92",
                        "content": "#include<iostream>\\n#include<climits>\\nusing namespace std;\\nint main(){ \\n      int x;\\n        int rev=0;\\n        int rem=0;\\n        cout<<\"Enter number to check palindrome: \";\\n        cin>>x;\\n        while(x!=0){\\n            rem=x%10;\\n            rev=(rev*10)+rem;\\n            x=x/10;\\n        }\\n            if(rev){\\n                cout<<rev<<\" is palindrome\";\\n            }\\n              else\\n            cout<<rev<<\" is not palindrome\";\\n            }\\n          \\n        \\n        \\n\\n\\n   \\n        \\n       \\n        \\n    \\n    \\n    \\n    \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n "
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro you must INCLUDE one more condition were you check weather the x is greater then 0 or not\\nIF (X<0):\\nRETURN FALSE"
                    },
                    {
                        "username": "shreya_chaturvedi18",
                        "content": "what the hell with my code....plz help\\nclass Solution {\\n    public boolean isPalindrome(int no) \\n    {\\n        int no1= no;\\n        int rev=0;\\n        \\n        \\nwhile( no1!=0)\\n{\\nint rem=no1%10;\\n rev=rev*10+rem;\\nno1=no1/10;\\n}\\nif(  rev==no)\\n{\\nreturn true;\\n}\\nelse\\n{\\n    return false;\\n}\\n}\\n\\n    }\\n\\n"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "   if(no<0) return false;\\nyou have not check the condition if the n must greater than 0\\nin Result  case 2 will showing wrong Answer"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "just add a condition at the starting which returns false if input no. is less than 0. as the code requires false output for a negative no which can't be obtained by digit separation\nif(no<0){\n  return false;\n} \nthis at start would be enough to solve your problem"
                    },
                    {
                        "username": "shakhzodmakhmasoatov",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        if str(x)==str(x)[::-1]:\\n            r=True\\n        else:\\n            r=False\\n\\n        return r"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro your solution is correct but it is  python"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "one line solution\n\nin these question we are checking palindrome or not \nfor that we can check [::-1] of that element is same to the  original element\n return(str(x)==str(x)[::-1])\nstr(x)[::-1} these means slicing the x\nwe are using (str) because it may that value will in float  or integer and it is necessary to convert it into string \nfor getting  perfect value of x\n\n"
                    },
                    {
                        "username": "ChrisKeyber",
                        "content": "Using python, beat 90% of users in memory, but get beaten by 90% users in run time. "
                    },
                    {
                        "username": "nalluchakradhar",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        k=str(x)\\n        l=k[::-1]\\n        if k==l:\\n                   return(\"True\")\\n        else:\\n                   return(\"False\")\\ncan anyone help me with this code ...I\\'m getting wrong output"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "I Thought of using the coversion to string method but when i read the challenge below the problem to do it withtout a string then...\\nI Tried a basic c++solution  applying digit separation and comparing the numbers and returning it.\\nFor negative numbers i simply returned false as they cant be pallindrome acc to problem statement\\nWHEN I SUBMITTED MY ANS I GOT 3ms TIME AND SO I REMOVED SOME VARIABLE CREATION THINKING IT WOULD BE BETTER BUT INSTEAD I GOT 17 MS RUNTIME SO I JUST SUBMITTED MY PREVIOUS SOL. AND I GOT 17 MS RUNTIME AGAIN THEN AGAIN I TRIED AND I GOT 11 . \\n\\nIDK WHATS HAPPENING BUT WHY IS LEETCODE GIVING DIFF RUNTIME FOR SAME SOLUTION .....HOW DOES IT WORK PLEASE HELP"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "[@gregoryderner](/gregoryderner) Thanks brother, If i am not disturbing you will you please tell me what do you mean by creating an isolated environment here.How can i create that to compare time taken."
                    },
                    {
                        "username": "gregoryderner",
                        "content": "This happens because some values are generated randomly and therefore, even if you send the same code you will have different results. In javascript I created an isolated mechanism to test performance in a more controlled way and compare with other solutions to see how my code performs. Maybe it\\'s the case that you do something similar for yours."
                    },
                    {
                        "username": "hunterxcobby",
                        "content": "Wow, I am a junior developer who just got introduced to Leetcode and i am already loving it. This  is the best platform ever.\\n\\nso i kind of first used the extraction method which ended up not  satisfying the fifth edge cases and it made sense. So i checked the follow up and realised i could easily use string conversion"
                    },
                    {
                        "username": "IshaqAlkhairi",
                        "content": "my solution compiles perfectly anywhere but here and i keep facing this problem: \\nCompile Error\\n0 / 0 testcases passed\\nLine 49: Char 5: error: redefinition of \\u2018main\\u2019 [solution.c]\\n   52 | int main(int argc, char *argv[]) {\\n      |     ^~~~"
                    },
                    {
                        "username": "nein4matic",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        result = True if str(x) == str(x)[::-1] else False\\n        return result"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    }
                ]
            },
            {
                "id": 2068641,
                "content": [
                    {
                        "username": "arshiyankhan92",
                        "content": "#include<iostream>\\n#include<climits>\\nusing namespace std;\\nint main(){ \\n      int x;\\n        int rev=0;\\n        int rem=0;\\n        cout<<\"Enter number to check palindrome: \";\\n        cin>>x;\\n        while(x!=0){\\n            rem=x%10;\\n            rev=(rev*10)+rem;\\n            x=x/10;\\n        }\\n            if(rev){\\n                cout<<rev<<\" is palindrome\";\\n            }\\n              else\\n            cout<<rev<<\" is not palindrome\";\\n            }\\n          \\n        \\n        \\n\\n\\n   \\n        \\n       \\n        \\n    \\n    \\n    \\n    \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n "
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro you must INCLUDE one more condition were you check weather the x is greater then 0 or not\\nIF (X<0):\\nRETURN FALSE"
                    },
                    {
                        "username": "shreya_chaturvedi18",
                        "content": "what the hell with my code....plz help\\nclass Solution {\\n    public boolean isPalindrome(int no) \\n    {\\n        int no1= no;\\n        int rev=0;\\n        \\n        \\nwhile( no1!=0)\\n{\\nint rem=no1%10;\\n rev=rev*10+rem;\\nno1=no1/10;\\n}\\nif(  rev==no)\\n{\\nreturn true;\\n}\\nelse\\n{\\n    return false;\\n}\\n}\\n\\n    }\\n\\n"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "   if(no<0) return false;\\nyou have not check the condition if the n must greater than 0\\nin Result  case 2 will showing wrong Answer"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "just add a condition at the starting which returns false if input no. is less than 0. as the code requires false output for a negative no which can't be obtained by digit separation\nif(no<0){\n  return false;\n} \nthis at start would be enough to solve your problem"
                    },
                    {
                        "username": "shakhzodmakhmasoatov",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        if str(x)==str(x)[::-1]:\\n            r=True\\n        else:\\n            r=False\\n\\n        return r"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro your solution is correct but it is  python"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "one line solution\n\nin these question we are checking palindrome or not \nfor that we can check [::-1] of that element is same to the  original element\n return(str(x)==str(x)[::-1])\nstr(x)[::-1} these means slicing the x\nwe are using (str) because it may that value will in float  or integer and it is necessary to convert it into string \nfor getting  perfect value of x\n\n"
                    },
                    {
                        "username": "ChrisKeyber",
                        "content": "Using python, beat 90% of users in memory, but get beaten by 90% users in run time. "
                    },
                    {
                        "username": "nalluchakradhar",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        k=str(x)\\n        l=k[::-1]\\n        if k==l:\\n                   return(\"True\")\\n        else:\\n                   return(\"False\")\\ncan anyone help me with this code ...I\\'m getting wrong output"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "I Thought of using the coversion to string method but when i read the challenge below the problem to do it withtout a string then...\\nI Tried a basic c++solution  applying digit separation and comparing the numbers and returning it.\\nFor negative numbers i simply returned false as they cant be pallindrome acc to problem statement\\nWHEN I SUBMITTED MY ANS I GOT 3ms TIME AND SO I REMOVED SOME VARIABLE CREATION THINKING IT WOULD BE BETTER BUT INSTEAD I GOT 17 MS RUNTIME SO I JUST SUBMITTED MY PREVIOUS SOL. AND I GOT 17 MS RUNTIME AGAIN THEN AGAIN I TRIED AND I GOT 11 . \\n\\nIDK WHATS HAPPENING BUT WHY IS LEETCODE GIVING DIFF RUNTIME FOR SAME SOLUTION .....HOW DOES IT WORK PLEASE HELP"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "[@gregoryderner](/gregoryderner) Thanks brother, If i am not disturbing you will you please tell me what do you mean by creating an isolated environment here.How can i create that to compare time taken."
                    },
                    {
                        "username": "gregoryderner",
                        "content": "This happens because some values are generated randomly and therefore, even if you send the same code you will have different results. In javascript I created an isolated mechanism to test performance in a more controlled way and compare with other solutions to see how my code performs. Maybe it\\'s the case that you do something similar for yours."
                    },
                    {
                        "username": "hunterxcobby",
                        "content": "Wow, I am a junior developer who just got introduced to Leetcode and i am already loving it. This  is the best platform ever.\\n\\nso i kind of first used the extraction method which ended up not  satisfying the fifth edge cases and it made sense. So i checked the follow up and realised i could easily use string conversion"
                    },
                    {
                        "username": "IshaqAlkhairi",
                        "content": "my solution compiles perfectly anywhere but here and i keep facing this problem: \\nCompile Error\\n0 / 0 testcases passed\\nLine 49: Char 5: error: redefinition of \\u2018main\\u2019 [solution.c]\\n   52 | int main(int argc, char *argv[]) {\\n      |     ^~~~"
                    },
                    {
                        "username": "nein4matic",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        result = True if str(x) == str(x)[::-1] else False\\n        return result"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    }
                ]
            },
            {
                "id": 2066216,
                "content": [
                    {
                        "username": "arshiyankhan92",
                        "content": "#include<iostream>\\n#include<climits>\\nusing namespace std;\\nint main(){ \\n      int x;\\n        int rev=0;\\n        int rem=0;\\n        cout<<\"Enter number to check palindrome: \";\\n        cin>>x;\\n        while(x!=0){\\n            rem=x%10;\\n            rev=(rev*10)+rem;\\n            x=x/10;\\n        }\\n            if(rev){\\n                cout<<rev<<\" is palindrome\";\\n            }\\n              else\\n            cout<<rev<<\" is not palindrome\";\\n            }\\n          \\n        \\n        \\n\\n\\n   \\n        \\n       \\n        \\n    \\n    \\n    \\n    \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n "
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro you must INCLUDE one more condition were you check weather the x is greater then 0 or not\\nIF (X<0):\\nRETURN FALSE"
                    },
                    {
                        "username": "shreya_chaturvedi18",
                        "content": "what the hell with my code....plz help\\nclass Solution {\\n    public boolean isPalindrome(int no) \\n    {\\n        int no1= no;\\n        int rev=0;\\n        \\n        \\nwhile( no1!=0)\\n{\\nint rem=no1%10;\\n rev=rev*10+rem;\\nno1=no1/10;\\n}\\nif(  rev==no)\\n{\\nreturn true;\\n}\\nelse\\n{\\n    return false;\\n}\\n}\\n\\n    }\\n\\n"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "   if(no<0) return false;\\nyou have not check the condition if the n must greater than 0\\nin Result  case 2 will showing wrong Answer"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "just add a condition at the starting which returns false if input no. is less than 0. as the code requires false output for a negative no which can't be obtained by digit separation\nif(no<0){\n  return false;\n} \nthis at start would be enough to solve your problem"
                    },
                    {
                        "username": "shakhzodmakhmasoatov",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        if str(x)==str(x)[::-1]:\\n            r=True\\n        else:\\n            r=False\\n\\n        return r"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro your solution is correct but it is  python"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "one line solution\n\nin these question we are checking palindrome or not \nfor that we can check [::-1] of that element is same to the  original element\n return(str(x)==str(x)[::-1])\nstr(x)[::-1} these means slicing the x\nwe are using (str) because it may that value will in float  or integer and it is necessary to convert it into string \nfor getting  perfect value of x\n\n"
                    },
                    {
                        "username": "ChrisKeyber",
                        "content": "Using python, beat 90% of users in memory, but get beaten by 90% users in run time. "
                    },
                    {
                        "username": "nalluchakradhar",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        k=str(x)\\n        l=k[::-1]\\n        if k==l:\\n                   return(\"True\")\\n        else:\\n                   return(\"False\")\\ncan anyone help me with this code ...I\\'m getting wrong output"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "I Thought of using the coversion to string method but when i read the challenge below the problem to do it withtout a string then...\\nI Tried a basic c++solution  applying digit separation and comparing the numbers and returning it.\\nFor negative numbers i simply returned false as they cant be pallindrome acc to problem statement\\nWHEN I SUBMITTED MY ANS I GOT 3ms TIME AND SO I REMOVED SOME VARIABLE CREATION THINKING IT WOULD BE BETTER BUT INSTEAD I GOT 17 MS RUNTIME SO I JUST SUBMITTED MY PREVIOUS SOL. AND I GOT 17 MS RUNTIME AGAIN THEN AGAIN I TRIED AND I GOT 11 . \\n\\nIDK WHATS HAPPENING BUT WHY IS LEETCODE GIVING DIFF RUNTIME FOR SAME SOLUTION .....HOW DOES IT WORK PLEASE HELP"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "[@gregoryderner](/gregoryderner) Thanks brother, If i am not disturbing you will you please tell me what do you mean by creating an isolated environment here.How can i create that to compare time taken."
                    },
                    {
                        "username": "gregoryderner",
                        "content": "This happens because some values are generated randomly and therefore, even if you send the same code you will have different results. In javascript I created an isolated mechanism to test performance in a more controlled way and compare with other solutions to see how my code performs. Maybe it\\'s the case that you do something similar for yours."
                    },
                    {
                        "username": "hunterxcobby",
                        "content": "Wow, I am a junior developer who just got introduced to Leetcode and i am already loving it. This  is the best platform ever.\\n\\nso i kind of first used the extraction method which ended up not  satisfying the fifth edge cases and it made sense. So i checked the follow up and realised i could easily use string conversion"
                    },
                    {
                        "username": "IshaqAlkhairi",
                        "content": "my solution compiles perfectly anywhere but here and i keep facing this problem: \\nCompile Error\\n0 / 0 testcases passed\\nLine 49: Char 5: error: redefinition of \\u2018main\\u2019 [solution.c]\\n   52 | int main(int argc, char *argv[]) {\\n      |     ^~~~"
                    },
                    {
                        "username": "nein4matic",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        result = True if str(x) == str(x)[::-1] else False\\n        return result"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    }
                ]
            },
            {
                "id": 2065681,
                "content": [
                    {
                        "username": "arshiyankhan92",
                        "content": "#include<iostream>\\n#include<climits>\\nusing namespace std;\\nint main(){ \\n      int x;\\n        int rev=0;\\n        int rem=0;\\n        cout<<\"Enter number to check palindrome: \";\\n        cin>>x;\\n        while(x!=0){\\n            rem=x%10;\\n            rev=(rev*10)+rem;\\n            x=x/10;\\n        }\\n            if(rev){\\n                cout<<rev<<\" is palindrome\";\\n            }\\n              else\\n            cout<<rev<<\" is not palindrome\";\\n            }\\n          \\n        \\n        \\n\\n\\n   \\n        \\n       \\n        \\n    \\n    \\n    \\n    \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n "
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro you must INCLUDE one more condition were you check weather the x is greater then 0 or not\\nIF (X<0):\\nRETURN FALSE"
                    },
                    {
                        "username": "shreya_chaturvedi18",
                        "content": "what the hell with my code....plz help\\nclass Solution {\\n    public boolean isPalindrome(int no) \\n    {\\n        int no1= no;\\n        int rev=0;\\n        \\n        \\nwhile( no1!=0)\\n{\\nint rem=no1%10;\\n rev=rev*10+rem;\\nno1=no1/10;\\n}\\nif(  rev==no)\\n{\\nreturn true;\\n}\\nelse\\n{\\n    return false;\\n}\\n}\\n\\n    }\\n\\n"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "   if(no<0) return false;\\nyou have not check the condition if the n must greater than 0\\nin Result  case 2 will showing wrong Answer"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "just add a condition at the starting which returns false if input no. is less than 0. as the code requires false output for a negative no which can't be obtained by digit separation\nif(no<0){\n  return false;\n} \nthis at start would be enough to solve your problem"
                    },
                    {
                        "username": "shakhzodmakhmasoatov",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        if str(x)==str(x)[::-1]:\\n            r=True\\n        else:\\n            r=False\\n\\n        return r"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "bro your solution is correct but it is  python"
                    },
                    {
                        "username": "AbhishekChoubey_081",
                        "content": "one line solution\n\nin these question we are checking palindrome or not \nfor that we can check [::-1] of that element is same to the  original element\n return(str(x)==str(x)[::-1])\nstr(x)[::-1} these means slicing the x\nwe are using (str) because it may that value will in float  or integer and it is necessary to convert it into string \nfor getting  perfect value of x\n\n"
                    },
                    {
                        "username": "ChrisKeyber",
                        "content": "Using python, beat 90% of users in memory, but get beaten by 90% users in run time. "
                    },
                    {
                        "username": "nalluchakradhar",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        k=str(x)\\n        l=k[::-1]\\n        if k==l:\\n                   return(\"True\")\\n        else:\\n                   return(\"False\")\\ncan anyone help me with this code ...I\\'m getting wrong output"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "I Thought of using the coversion to string method but when i read the challenge below the problem to do it withtout a string then...\\nI Tried a basic c++solution  applying digit separation and comparing the numbers and returning it.\\nFor negative numbers i simply returned false as they cant be pallindrome acc to problem statement\\nWHEN I SUBMITTED MY ANS I GOT 3ms TIME AND SO I REMOVED SOME VARIABLE CREATION THINKING IT WOULD BE BETTER BUT INSTEAD I GOT 17 MS RUNTIME SO I JUST SUBMITTED MY PREVIOUS SOL. AND I GOT 17 MS RUNTIME AGAIN THEN AGAIN I TRIED AND I GOT 11 . \\n\\nIDK WHATS HAPPENING BUT WHY IS LEETCODE GIVING DIFF RUNTIME FOR SAME SOLUTION .....HOW DOES IT WORK PLEASE HELP"
                    },
                    {
                        "username": "pseudo_Coder1",
                        "content": "[@gregoryderner](/gregoryderner) Thanks brother, If i am not disturbing you will you please tell me what do you mean by creating an isolated environment here.How can i create that to compare time taken."
                    },
                    {
                        "username": "gregoryderner",
                        "content": "This happens because some values are generated randomly and therefore, even if you send the same code you will have different results. In javascript I created an isolated mechanism to test performance in a more controlled way and compare with other solutions to see how my code performs. Maybe it\\'s the case that you do something similar for yours."
                    },
                    {
                        "username": "hunterxcobby",
                        "content": "Wow, I am a junior developer who just got introduced to Leetcode and i am already loving it. This  is the best platform ever.\\n\\nso i kind of first used the extraction method which ended up not  satisfying the fifth edge cases and it made sense. So i checked the follow up and realised i could easily use string conversion"
                    },
                    {
                        "username": "IshaqAlkhairi",
                        "content": "my solution compiles perfectly anywhere but here and i keep facing this problem: \\nCompile Error\\n0 / 0 testcases passed\\nLine 49: Char 5: error: redefinition of \\u2018main\\u2019 [solution.c]\\n   52 | int main(int argc, char *argv[]) {\\n      |     ^~~~"
                    },
                    {
                        "username": "nein4matic",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        result = True if str(x) == str(x)[::-1] else False\\n        return result"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    }
                ]
            },
            {
                "id": 2062151,
                "content": [
                    {
                        "username": "ankitsingh01818",
                        "content": "class Solution {\n    public boolean isPalindrome(int x) {\n        int temp=x;\n        int reverse=0\n        if (x < 0 || (x % 10 == 0 && x != 0)) {\n            return false;\n        }\n        while(temp!=0){\n            int reminder=temp%10;\n            reverse=reverse*10+reminder;\n            temp/=10;\n        }\n        return x==reverse; \n    }\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "user4230Em",
                        "content": "My code is working on pyCharm and all the usecases are passed . But it is failing in LeetCode for usecase 2 & 3 and not sure why. \\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        a=str(x)\\n        length = len(a)-1\\n        j=bool\\n        i=0\\n        while i <= length:\\n            if a[i] == a[length]:\\n                length -= 1\\n                i += 1\\n                j=\\'true\\'\\n            else:\\n                j =\\'false\\'\\n                break\\n        return j\\nsol=Solution()\\nb=int(input(\"Enter a number\"))\\nprint(sol.isPalindrome(b))"
                    },
                    {
                        "username": "Codex_Psycho",
                        "content": "Hi, I am new to this platform, I generally use the IntelliJ IDEA compiler, and when I want to compile the code it does not work, but if it works in the IDEA compiler, how can I solve the problem? (the code is in java):\\n\\nimport java.util.Scanner;\\n\\npublic class IsPalindrome{\\n     public static void main(String[] args) {\\n         Scanner scanner = new Scanner(System.in);\\n         String num = \"0\";\\n         String palindrome = \"\";\\n         System.out.println(\"Enter an integer\");\\n         num = String.valueOf(scanner.nextInt());\\n         if(num.length()==1){\\n             System.out.println(\"the number \".concat(num).concat(\" is a palindrome\"));\\n         } else {\\n             int barrier = num.length()-1;\\n             for(int cycles = 0; cycles<num.length(); cycles++){\\n                 palindrome = palindrome + String.valueOf(num.charAt(barrier-cycles));\\n             }\\n             System.out.println(\"palindrome = \" + palindrome);\\n             if (num.equals(palindrome)){\\n                 System.out.println(\"the number: \".concat(num).concat(\" is a palindrome\"));\\n             }\\n             else{\\n                 System.out.println(\"the number : \".concat(num).concat(\" is not a palindrome\"));\\n             }\\n         }\\n     }\\n}"
                    },
                    {
                        "username": "anksum2022",
                        "content": "What is the point of allowing -ve numbers for this? ARen\\'t all -ve numbers going to return `False`?"
                    },
                    {
                        "username": "gregoryderner",
                        "content": "So that your code deals with this type of data.\\nFor example, there is code that deals directly with the data and goes into the process of validating the palindrome. Some just deny the information (as you rightly said) it will always be false."
                    },
                    {
                        "username": "Raknid",
                        "content": "why is my code showing runtime 4ms and memory 42.35 mb\nand sometimes it is showing runtime as 12ms or 10ms and memory 46 mb?\n "
                    },
                    {
                        "username": "gregoryderner",
                        "content": "This is because some data is generated randomly. And this also bothered me, as I really wanted to know the values, I created a git to do tests."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "can somebody explain it to me ?"
                    },
                    {
                        "username": "gregoryderner",
                        "content": "A palindrome is a palindrome, regardless of whether it is a number or not. \"eye\" is a palindrome. Palindrome in simple definition would be being able to read the characters backwards and it remains the same. That\\'s why we see several solutions immediately converting to a string. That\\'s why (it should be read the same backwards) that \"-101\" would not be a palindrome."
                    },
                    {
                        "username": "Raknid",
                        "content": "So a palindrome number is a number is a number whose value is the same even after reversing it.\\nWhen the number is negative, it can\\'t be a palindrome.       Eg:  -101 ,reversed number-> 101- , not same!\\nWhen the number is have a zero in the end ,it can\\'t be palindrome.\\nEg: 110 ,reversed number-> 011, not same!\\nconsidering these conditions try solving for the Palindrome problem."
                    },
                    {
                        "username": "Aayush_2511",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        x = str(x)\\n        y = x[::-1]\\n        return bool (y == x)"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "gregoryderner",
                        "content": "If anyone else, like me, was bothered to see that the \"runtime\" results were different even when sending the same algorithm, and like me, you want to know the performance of your code based on others. I did this benchmark to be able to test in a more isolated way.\\n\\nhttps://github.com/gregoryderner/leetcode-palindrome-benchmark"
                    },
                    {
                        "username": "badrsouhar",
                        "content": "how to convert int x to string or char * in c++, idk why itoa() isn\\'t working i want to code my own itoa but I got \"heap-buffer-overflow\"."
                    },
                    {
                        "username": "loveworld",
                        "content": "This question is very important to learn and know the simple way."
                    }
                ]
            },
            {
                "id": 2061890,
                "content": [
                    {
                        "username": "ankitsingh01818",
                        "content": "class Solution {\n    public boolean isPalindrome(int x) {\n        int temp=x;\n        int reverse=0\n        if (x < 0 || (x % 10 == 0 && x != 0)) {\n            return false;\n        }\n        while(temp!=0){\n            int reminder=temp%10;\n            reverse=reverse*10+reminder;\n            temp/=10;\n        }\n        return x==reverse; \n    }\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "user4230Em",
                        "content": "My code is working on pyCharm and all the usecases are passed . But it is failing in LeetCode for usecase 2 & 3 and not sure why. \\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        a=str(x)\\n        length = len(a)-1\\n        j=bool\\n        i=0\\n        while i <= length:\\n            if a[i] == a[length]:\\n                length -= 1\\n                i += 1\\n                j=\\'true\\'\\n            else:\\n                j =\\'false\\'\\n                break\\n        return j\\nsol=Solution()\\nb=int(input(\"Enter a number\"))\\nprint(sol.isPalindrome(b))"
                    },
                    {
                        "username": "Codex_Psycho",
                        "content": "Hi, I am new to this platform, I generally use the IntelliJ IDEA compiler, and when I want to compile the code it does not work, but if it works in the IDEA compiler, how can I solve the problem? (the code is in java):\\n\\nimport java.util.Scanner;\\n\\npublic class IsPalindrome{\\n     public static void main(String[] args) {\\n         Scanner scanner = new Scanner(System.in);\\n         String num = \"0\";\\n         String palindrome = \"\";\\n         System.out.println(\"Enter an integer\");\\n         num = String.valueOf(scanner.nextInt());\\n         if(num.length()==1){\\n             System.out.println(\"the number \".concat(num).concat(\" is a palindrome\"));\\n         } else {\\n             int barrier = num.length()-1;\\n             for(int cycles = 0; cycles<num.length(); cycles++){\\n                 palindrome = palindrome + String.valueOf(num.charAt(barrier-cycles));\\n             }\\n             System.out.println(\"palindrome = \" + palindrome);\\n             if (num.equals(palindrome)){\\n                 System.out.println(\"the number: \".concat(num).concat(\" is a palindrome\"));\\n             }\\n             else{\\n                 System.out.println(\"the number : \".concat(num).concat(\" is not a palindrome\"));\\n             }\\n         }\\n     }\\n}"
                    },
                    {
                        "username": "anksum2022",
                        "content": "What is the point of allowing -ve numbers for this? ARen\\'t all -ve numbers going to return `False`?"
                    },
                    {
                        "username": "gregoryderner",
                        "content": "So that your code deals with this type of data.\\nFor example, there is code that deals directly with the data and goes into the process of validating the palindrome. Some just deny the information (as you rightly said) it will always be false."
                    },
                    {
                        "username": "Raknid",
                        "content": "why is my code showing runtime 4ms and memory 42.35 mb\nand sometimes it is showing runtime as 12ms or 10ms and memory 46 mb?\n "
                    },
                    {
                        "username": "gregoryderner",
                        "content": "This is because some data is generated randomly. And this also bothered me, as I really wanted to know the values, I created a git to do tests."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "can somebody explain it to me ?"
                    },
                    {
                        "username": "gregoryderner",
                        "content": "A palindrome is a palindrome, regardless of whether it is a number or not. \"eye\" is a palindrome. Palindrome in simple definition would be being able to read the characters backwards and it remains the same. That\\'s why we see several solutions immediately converting to a string. That\\'s why (it should be read the same backwards) that \"-101\" would not be a palindrome."
                    },
                    {
                        "username": "Raknid",
                        "content": "So a palindrome number is a number is a number whose value is the same even after reversing it.\\nWhen the number is negative, it can\\'t be a palindrome.       Eg:  -101 ,reversed number-> 101- , not same!\\nWhen the number is have a zero in the end ,it can\\'t be palindrome.\\nEg: 110 ,reversed number-> 011, not same!\\nconsidering these conditions try solving for the Palindrome problem."
                    },
                    {
                        "username": "Aayush_2511",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        x = str(x)\\n        y = x[::-1]\\n        return bool (y == x)"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "gregoryderner",
                        "content": "If anyone else, like me, was bothered to see that the \"runtime\" results were different even when sending the same algorithm, and like me, you want to know the performance of your code based on others. I did this benchmark to be able to test in a more isolated way.\\n\\nhttps://github.com/gregoryderner/leetcode-palindrome-benchmark"
                    },
                    {
                        "username": "badrsouhar",
                        "content": "how to convert int x to string or char * in c++, idk why itoa() isn\\'t working i want to code my own itoa but I got \"heap-buffer-overflow\"."
                    },
                    {
                        "username": "loveworld",
                        "content": "This question is very important to learn and know the simple way."
                    }
                ]
            },
            {
                "id": 2061155,
                "content": [
                    {
                        "username": "ankitsingh01818",
                        "content": "class Solution {\n    public boolean isPalindrome(int x) {\n        int temp=x;\n        int reverse=0\n        if (x < 0 || (x % 10 == 0 && x != 0)) {\n            return false;\n        }\n        while(temp!=0){\n            int reminder=temp%10;\n            reverse=reverse*10+reminder;\n            temp/=10;\n        }\n        return x==reverse; \n    }\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "user4230Em",
                        "content": "My code is working on pyCharm and all the usecases are passed . But it is failing in LeetCode for usecase 2 & 3 and not sure why. \\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        a=str(x)\\n        length = len(a)-1\\n        j=bool\\n        i=0\\n        while i <= length:\\n            if a[i] == a[length]:\\n                length -= 1\\n                i += 1\\n                j=\\'true\\'\\n            else:\\n                j =\\'false\\'\\n                break\\n        return j\\nsol=Solution()\\nb=int(input(\"Enter a number\"))\\nprint(sol.isPalindrome(b))"
                    },
                    {
                        "username": "Codex_Psycho",
                        "content": "Hi, I am new to this platform, I generally use the IntelliJ IDEA compiler, and when I want to compile the code it does not work, but if it works in the IDEA compiler, how can I solve the problem? (the code is in java):\\n\\nimport java.util.Scanner;\\n\\npublic class IsPalindrome{\\n     public static void main(String[] args) {\\n         Scanner scanner = new Scanner(System.in);\\n         String num = \"0\";\\n         String palindrome = \"\";\\n         System.out.println(\"Enter an integer\");\\n         num = String.valueOf(scanner.nextInt());\\n         if(num.length()==1){\\n             System.out.println(\"the number \".concat(num).concat(\" is a palindrome\"));\\n         } else {\\n             int barrier = num.length()-1;\\n             for(int cycles = 0; cycles<num.length(); cycles++){\\n                 palindrome = palindrome + String.valueOf(num.charAt(barrier-cycles));\\n             }\\n             System.out.println(\"palindrome = \" + palindrome);\\n             if (num.equals(palindrome)){\\n                 System.out.println(\"the number: \".concat(num).concat(\" is a palindrome\"));\\n             }\\n             else{\\n                 System.out.println(\"the number : \".concat(num).concat(\" is not a palindrome\"));\\n             }\\n         }\\n     }\\n}"
                    },
                    {
                        "username": "anksum2022",
                        "content": "What is the point of allowing -ve numbers for this? ARen\\'t all -ve numbers going to return `False`?"
                    },
                    {
                        "username": "gregoryderner",
                        "content": "So that your code deals with this type of data.\\nFor example, there is code that deals directly with the data and goes into the process of validating the palindrome. Some just deny the information (as you rightly said) it will always be false."
                    },
                    {
                        "username": "Raknid",
                        "content": "why is my code showing runtime 4ms and memory 42.35 mb\nand sometimes it is showing runtime as 12ms or 10ms and memory 46 mb?\n "
                    },
                    {
                        "username": "gregoryderner",
                        "content": "This is because some data is generated randomly. And this also bothered me, as I really wanted to know the values, I created a git to do tests."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "can somebody explain it to me ?"
                    },
                    {
                        "username": "gregoryderner",
                        "content": "A palindrome is a palindrome, regardless of whether it is a number or not. \"eye\" is a palindrome. Palindrome in simple definition would be being able to read the characters backwards and it remains the same. That\\'s why we see several solutions immediately converting to a string. That\\'s why (it should be read the same backwards) that \"-101\" would not be a palindrome."
                    },
                    {
                        "username": "Raknid",
                        "content": "So a palindrome number is a number is a number whose value is the same even after reversing it.\\nWhen the number is negative, it can\\'t be a palindrome.       Eg:  -101 ,reversed number-> 101- , not same!\\nWhen the number is have a zero in the end ,it can\\'t be palindrome.\\nEg: 110 ,reversed number-> 011, not same!\\nconsidering these conditions try solving for the Palindrome problem."
                    },
                    {
                        "username": "Aayush_2511",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        x = str(x)\\n        y = x[::-1]\\n        return bool (y == x)"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "gregoryderner",
                        "content": "If anyone else, like me, was bothered to see that the \"runtime\" results were different even when sending the same algorithm, and like me, you want to know the performance of your code based on others. I did this benchmark to be able to test in a more isolated way.\\n\\nhttps://github.com/gregoryderner/leetcode-palindrome-benchmark"
                    },
                    {
                        "username": "badrsouhar",
                        "content": "how to convert int x to string or char * in c++, idk why itoa() isn\\'t working i want to code my own itoa but I got \"heap-buffer-overflow\"."
                    },
                    {
                        "username": "loveworld",
                        "content": "This question is very important to learn and know the simple way."
                    }
                ]
            },
            {
                "id": 2060827,
                "content": [
                    {
                        "username": "ankitsingh01818",
                        "content": "class Solution {\n    public boolean isPalindrome(int x) {\n        int temp=x;\n        int reverse=0\n        if (x < 0 || (x % 10 == 0 && x != 0)) {\n            return false;\n        }\n        while(temp!=0){\n            int reminder=temp%10;\n            reverse=reverse*10+reminder;\n            temp/=10;\n        }\n        return x==reverse; \n    }\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "user4230Em",
                        "content": "My code is working on pyCharm and all the usecases are passed . But it is failing in LeetCode for usecase 2 & 3 and not sure why. \\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        a=str(x)\\n        length = len(a)-1\\n        j=bool\\n        i=0\\n        while i <= length:\\n            if a[i] == a[length]:\\n                length -= 1\\n                i += 1\\n                j=\\'true\\'\\n            else:\\n                j =\\'false\\'\\n                break\\n        return j\\nsol=Solution()\\nb=int(input(\"Enter a number\"))\\nprint(sol.isPalindrome(b))"
                    },
                    {
                        "username": "Codex_Psycho",
                        "content": "Hi, I am new to this platform, I generally use the IntelliJ IDEA compiler, and when I want to compile the code it does not work, but if it works in the IDEA compiler, how can I solve the problem? (the code is in java):\\n\\nimport java.util.Scanner;\\n\\npublic class IsPalindrome{\\n     public static void main(String[] args) {\\n         Scanner scanner = new Scanner(System.in);\\n         String num = \"0\";\\n         String palindrome = \"\";\\n         System.out.println(\"Enter an integer\");\\n         num = String.valueOf(scanner.nextInt());\\n         if(num.length()==1){\\n             System.out.println(\"the number \".concat(num).concat(\" is a palindrome\"));\\n         } else {\\n             int barrier = num.length()-1;\\n             for(int cycles = 0; cycles<num.length(); cycles++){\\n                 palindrome = palindrome + String.valueOf(num.charAt(barrier-cycles));\\n             }\\n             System.out.println(\"palindrome = \" + palindrome);\\n             if (num.equals(palindrome)){\\n                 System.out.println(\"the number: \".concat(num).concat(\" is a palindrome\"));\\n             }\\n             else{\\n                 System.out.println(\"the number : \".concat(num).concat(\" is not a palindrome\"));\\n             }\\n         }\\n     }\\n}"
                    },
                    {
                        "username": "anksum2022",
                        "content": "What is the point of allowing -ve numbers for this? ARen\\'t all -ve numbers going to return `False`?"
                    },
                    {
                        "username": "gregoryderner",
                        "content": "So that your code deals with this type of data.\\nFor example, there is code that deals directly with the data and goes into the process of validating the palindrome. Some just deny the information (as you rightly said) it will always be false."
                    },
                    {
                        "username": "Raknid",
                        "content": "why is my code showing runtime 4ms and memory 42.35 mb\nand sometimes it is showing runtime as 12ms or 10ms and memory 46 mb?\n "
                    },
                    {
                        "username": "gregoryderner",
                        "content": "This is because some data is generated randomly. And this also bothered me, as I really wanted to know the values, I created a git to do tests."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "can somebody explain it to me ?"
                    },
                    {
                        "username": "gregoryderner",
                        "content": "A palindrome is a palindrome, regardless of whether it is a number or not. \"eye\" is a palindrome. Palindrome in simple definition would be being able to read the characters backwards and it remains the same. That\\'s why we see several solutions immediately converting to a string. That\\'s why (it should be read the same backwards) that \"-101\" would not be a palindrome."
                    },
                    {
                        "username": "Raknid",
                        "content": "So a palindrome number is a number is a number whose value is the same even after reversing it.\\nWhen the number is negative, it can\\'t be a palindrome.       Eg:  -101 ,reversed number-> 101- , not same!\\nWhen the number is have a zero in the end ,it can\\'t be palindrome.\\nEg: 110 ,reversed number-> 011, not same!\\nconsidering these conditions try solving for the Palindrome problem."
                    },
                    {
                        "username": "Aayush_2511",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        x = str(x)\\n        y = x[::-1]\\n        return bool (y == x)"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "gregoryderner",
                        "content": "If anyone else, like me, was bothered to see that the \"runtime\" results were different even when sending the same algorithm, and like me, you want to know the performance of your code based on others. I did this benchmark to be able to test in a more isolated way.\\n\\nhttps://github.com/gregoryderner/leetcode-palindrome-benchmark"
                    },
                    {
                        "username": "badrsouhar",
                        "content": "how to convert int x to string or char * in c++, idk why itoa() isn\\'t working i want to code my own itoa but I got \"heap-buffer-overflow\"."
                    },
                    {
                        "username": "loveworld",
                        "content": "This question is very important to learn and know the simple way."
                    }
                ]
            },
            {
                "id": 2060085,
                "content": [
                    {
                        "username": "ankitsingh01818",
                        "content": "class Solution {\n    public boolean isPalindrome(int x) {\n        int temp=x;\n        int reverse=0\n        if (x < 0 || (x % 10 == 0 && x != 0)) {\n            return false;\n        }\n        while(temp!=0){\n            int reminder=temp%10;\n            reverse=reverse*10+reminder;\n            temp/=10;\n        }\n        return x==reverse; \n    }\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "user4230Em",
                        "content": "My code is working on pyCharm and all the usecases are passed . But it is failing in LeetCode for usecase 2 & 3 and not sure why. \\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        a=str(x)\\n        length = len(a)-1\\n        j=bool\\n        i=0\\n        while i <= length:\\n            if a[i] == a[length]:\\n                length -= 1\\n                i += 1\\n                j=\\'true\\'\\n            else:\\n                j =\\'false\\'\\n                break\\n        return j\\nsol=Solution()\\nb=int(input(\"Enter a number\"))\\nprint(sol.isPalindrome(b))"
                    },
                    {
                        "username": "Codex_Psycho",
                        "content": "Hi, I am new to this platform, I generally use the IntelliJ IDEA compiler, and when I want to compile the code it does not work, but if it works in the IDEA compiler, how can I solve the problem? (the code is in java):\\n\\nimport java.util.Scanner;\\n\\npublic class IsPalindrome{\\n     public static void main(String[] args) {\\n         Scanner scanner = new Scanner(System.in);\\n         String num = \"0\";\\n         String palindrome = \"\";\\n         System.out.println(\"Enter an integer\");\\n         num = String.valueOf(scanner.nextInt());\\n         if(num.length()==1){\\n             System.out.println(\"the number \".concat(num).concat(\" is a palindrome\"));\\n         } else {\\n             int barrier = num.length()-1;\\n             for(int cycles = 0; cycles<num.length(); cycles++){\\n                 palindrome = palindrome + String.valueOf(num.charAt(barrier-cycles));\\n             }\\n             System.out.println(\"palindrome = \" + palindrome);\\n             if (num.equals(palindrome)){\\n                 System.out.println(\"the number: \".concat(num).concat(\" is a palindrome\"));\\n             }\\n             else{\\n                 System.out.println(\"the number : \".concat(num).concat(\" is not a palindrome\"));\\n             }\\n         }\\n     }\\n}"
                    },
                    {
                        "username": "anksum2022",
                        "content": "What is the point of allowing -ve numbers for this? ARen\\'t all -ve numbers going to return `False`?"
                    },
                    {
                        "username": "gregoryderner",
                        "content": "So that your code deals with this type of data.\\nFor example, there is code that deals directly with the data and goes into the process of validating the palindrome. Some just deny the information (as you rightly said) it will always be false."
                    },
                    {
                        "username": "Raknid",
                        "content": "why is my code showing runtime 4ms and memory 42.35 mb\nand sometimes it is showing runtime as 12ms or 10ms and memory 46 mb?\n "
                    },
                    {
                        "username": "gregoryderner",
                        "content": "This is because some data is generated randomly. And this also bothered me, as I really wanted to know the values, I created a git to do tests."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "can somebody explain it to me ?"
                    },
                    {
                        "username": "gregoryderner",
                        "content": "A palindrome is a palindrome, regardless of whether it is a number or not. \"eye\" is a palindrome. Palindrome in simple definition would be being able to read the characters backwards and it remains the same. That\\'s why we see several solutions immediately converting to a string. That\\'s why (it should be read the same backwards) that \"-101\" would not be a palindrome."
                    },
                    {
                        "username": "Raknid",
                        "content": "So a palindrome number is a number is a number whose value is the same even after reversing it.\\nWhen the number is negative, it can\\'t be a palindrome.       Eg:  -101 ,reversed number-> 101- , not same!\\nWhen the number is have a zero in the end ,it can\\'t be palindrome.\\nEg: 110 ,reversed number-> 011, not same!\\nconsidering these conditions try solving for the Palindrome problem."
                    },
                    {
                        "username": "Aayush_2511",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        x = str(x)\\n        y = x[::-1]\\n        return bool (y == x)"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "gregoryderner",
                        "content": "If anyone else, like me, was bothered to see that the \"runtime\" results were different even when sending the same algorithm, and like me, you want to know the performance of your code based on others. I did this benchmark to be able to test in a more isolated way.\\n\\nhttps://github.com/gregoryderner/leetcode-palindrome-benchmark"
                    },
                    {
                        "username": "badrsouhar",
                        "content": "how to convert int x to string or char * in c++, idk why itoa() isn\\'t working i want to code my own itoa but I got \"heap-buffer-overflow\"."
                    },
                    {
                        "username": "loveworld",
                        "content": "This question is very important to learn and know the simple way."
                    }
                ]
            },
            {
                "id": 2059748,
                "content": [
                    {
                        "username": "ankitsingh01818",
                        "content": "class Solution {\n    public boolean isPalindrome(int x) {\n        int temp=x;\n        int reverse=0\n        if (x < 0 || (x % 10 == 0 && x != 0)) {\n            return false;\n        }\n        while(temp!=0){\n            int reminder=temp%10;\n            reverse=reverse*10+reminder;\n            temp/=10;\n        }\n        return x==reverse; \n    }\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "user4230Em",
                        "content": "My code is working on pyCharm and all the usecases are passed . But it is failing in LeetCode for usecase 2 & 3 and not sure why. \\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        a=str(x)\\n        length = len(a)-1\\n        j=bool\\n        i=0\\n        while i <= length:\\n            if a[i] == a[length]:\\n                length -= 1\\n                i += 1\\n                j=\\'true\\'\\n            else:\\n                j =\\'false\\'\\n                break\\n        return j\\nsol=Solution()\\nb=int(input(\"Enter a number\"))\\nprint(sol.isPalindrome(b))"
                    },
                    {
                        "username": "Codex_Psycho",
                        "content": "Hi, I am new to this platform, I generally use the IntelliJ IDEA compiler, and when I want to compile the code it does not work, but if it works in the IDEA compiler, how can I solve the problem? (the code is in java):\\n\\nimport java.util.Scanner;\\n\\npublic class IsPalindrome{\\n     public static void main(String[] args) {\\n         Scanner scanner = new Scanner(System.in);\\n         String num = \"0\";\\n         String palindrome = \"\";\\n         System.out.println(\"Enter an integer\");\\n         num = String.valueOf(scanner.nextInt());\\n         if(num.length()==1){\\n             System.out.println(\"the number \".concat(num).concat(\" is a palindrome\"));\\n         } else {\\n             int barrier = num.length()-1;\\n             for(int cycles = 0; cycles<num.length(); cycles++){\\n                 palindrome = palindrome + String.valueOf(num.charAt(barrier-cycles));\\n             }\\n             System.out.println(\"palindrome = \" + palindrome);\\n             if (num.equals(palindrome)){\\n                 System.out.println(\"the number: \".concat(num).concat(\" is a palindrome\"));\\n             }\\n             else{\\n                 System.out.println(\"the number : \".concat(num).concat(\" is not a palindrome\"));\\n             }\\n         }\\n     }\\n}"
                    },
                    {
                        "username": "anksum2022",
                        "content": "What is the point of allowing -ve numbers for this? ARen\\'t all -ve numbers going to return `False`?"
                    },
                    {
                        "username": "gregoryderner",
                        "content": "So that your code deals with this type of data.\\nFor example, there is code that deals directly with the data and goes into the process of validating the palindrome. Some just deny the information (as you rightly said) it will always be false."
                    },
                    {
                        "username": "Raknid",
                        "content": "why is my code showing runtime 4ms and memory 42.35 mb\nand sometimes it is showing runtime as 12ms or 10ms and memory 46 mb?\n "
                    },
                    {
                        "username": "gregoryderner",
                        "content": "This is because some data is generated randomly. And this also bothered me, as I really wanted to know the values, I created a git to do tests."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "can somebody explain it to me ?"
                    },
                    {
                        "username": "gregoryderner",
                        "content": "A palindrome is a palindrome, regardless of whether it is a number or not. \"eye\" is a palindrome. Palindrome in simple definition would be being able to read the characters backwards and it remains the same. That\\'s why we see several solutions immediately converting to a string. That\\'s why (it should be read the same backwards) that \"-101\" would not be a palindrome."
                    },
                    {
                        "username": "Raknid",
                        "content": "So a palindrome number is a number is a number whose value is the same even after reversing it.\\nWhen the number is negative, it can\\'t be a palindrome.       Eg:  -101 ,reversed number-> 101- , not same!\\nWhen the number is have a zero in the end ,it can\\'t be palindrome.\\nEg: 110 ,reversed number-> 011, not same!\\nconsidering these conditions try solving for the Palindrome problem."
                    },
                    {
                        "username": "Aayush_2511",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        x = str(x)\\n        y = x[::-1]\\n        return bool (y == x)"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "gregoryderner",
                        "content": "If anyone else, like me, was bothered to see that the \"runtime\" results were different even when sending the same algorithm, and like me, you want to know the performance of your code based on others. I did this benchmark to be able to test in a more isolated way.\\n\\nhttps://github.com/gregoryderner/leetcode-palindrome-benchmark"
                    },
                    {
                        "username": "badrsouhar",
                        "content": "how to convert int x to string or char * in c++, idk why itoa() isn\\'t working i want to code my own itoa but I got \"heap-buffer-overflow\"."
                    },
                    {
                        "username": "loveworld",
                        "content": "This question is very important to learn and know the simple way."
                    }
                ]
            },
            {
                "id": 2059343,
                "content": [
                    {
                        "username": "ankitsingh01818",
                        "content": "class Solution {\n    public boolean isPalindrome(int x) {\n        int temp=x;\n        int reverse=0\n        if (x < 0 || (x % 10 == 0 && x != 0)) {\n            return false;\n        }\n        while(temp!=0){\n            int reminder=temp%10;\n            reverse=reverse*10+reminder;\n            temp/=10;\n        }\n        return x==reverse; \n    }\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "user4230Em",
                        "content": "My code is working on pyCharm and all the usecases are passed . But it is failing in LeetCode for usecase 2 & 3 and not sure why. \\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        a=str(x)\\n        length = len(a)-1\\n        j=bool\\n        i=0\\n        while i <= length:\\n            if a[i] == a[length]:\\n                length -= 1\\n                i += 1\\n                j=\\'true\\'\\n            else:\\n                j =\\'false\\'\\n                break\\n        return j\\nsol=Solution()\\nb=int(input(\"Enter a number\"))\\nprint(sol.isPalindrome(b))"
                    },
                    {
                        "username": "Codex_Psycho",
                        "content": "Hi, I am new to this platform, I generally use the IntelliJ IDEA compiler, and when I want to compile the code it does not work, but if it works in the IDEA compiler, how can I solve the problem? (the code is in java):\\n\\nimport java.util.Scanner;\\n\\npublic class IsPalindrome{\\n     public static void main(String[] args) {\\n         Scanner scanner = new Scanner(System.in);\\n         String num = \"0\";\\n         String palindrome = \"\";\\n         System.out.println(\"Enter an integer\");\\n         num = String.valueOf(scanner.nextInt());\\n         if(num.length()==1){\\n             System.out.println(\"the number \".concat(num).concat(\" is a palindrome\"));\\n         } else {\\n             int barrier = num.length()-1;\\n             for(int cycles = 0; cycles<num.length(); cycles++){\\n                 palindrome = palindrome + String.valueOf(num.charAt(barrier-cycles));\\n             }\\n             System.out.println(\"palindrome = \" + palindrome);\\n             if (num.equals(palindrome)){\\n                 System.out.println(\"the number: \".concat(num).concat(\" is a palindrome\"));\\n             }\\n             else{\\n                 System.out.println(\"the number : \".concat(num).concat(\" is not a palindrome\"));\\n             }\\n         }\\n     }\\n}"
                    },
                    {
                        "username": "anksum2022",
                        "content": "What is the point of allowing -ve numbers for this? ARen\\'t all -ve numbers going to return `False`?"
                    },
                    {
                        "username": "gregoryderner",
                        "content": "So that your code deals with this type of data.\\nFor example, there is code that deals directly with the data and goes into the process of validating the palindrome. Some just deny the information (as you rightly said) it will always be false."
                    },
                    {
                        "username": "Raknid",
                        "content": "why is my code showing runtime 4ms and memory 42.35 mb\nand sometimes it is showing runtime as 12ms or 10ms and memory 46 mb?\n "
                    },
                    {
                        "username": "gregoryderner",
                        "content": "This is because some data is generated randomly. And this also bothered me, as I really wanted to know the values, I created a git to do tests."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "can somebody explain it to me ?"
                    },
                    {
                        "username": "gregoryderner",
                        "content": "A palindrome is a palindrome, regardless of whether it is a number or not. \"eye\" is a palindrome. Palindrome in simple definition would be being able to read the characters backwards and it remains the same. That\\'s why we see several solutions immediately converting to a string. That\\'s why (it should be read the same backwards) that \"-101\" would not be a palindrome."
                    },
                    {
                        "username": "Raknid",
                        "content": "So a palindrome number is a number is a number whose value is the same even after reversing it.\\nWhen the number is negative, it can\\'t be a palindrome.       Eg:  -101 ,reversed number-> 101- , not same!\\nWhen the number is have a zero in the end ,it can\\'t be palindrome.\\nEg: 110 ,reversed number-> 011, not same!\\nconsidering these conditions try solving for the Palindrome problem."
                    },
                    {
                        "username": "Aayush_2511",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        x = str(x)\\n        y = x[::-1]\\n        return bool (y == x)"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "gregoryderner",
                        "content": "If anyone else, like me, was bothered to see that the \"runtime\" results were different even when sending the same algorithm, and like me, you want to know the performance of your code based on others. I did this benchmark to be able to test in a more isolated way.\\n\\nhttps://github.com/gregoryderner/leetcode-palindrome-benchmark"
                    },
                    {
                        "username": "badrsouhar",
                        "content": "how to convert int x to string or char * in c++, idk why itoa() isn\\'t working i want to code my own itoa but I got \"heap-buffer-overflow\"."
                    },
                    {
                        "username": "loveworld",
                        "content": "This question is very important to learn and know the simple way."
                    }
                ]
            },
            {
                "id": 2056356,
                "content": [
                    {
                        "username": "ankitsingh01818",
                        "content": "class Solution {\n    public boolean isPalindrome(int x) {\n        int temp=x;\n        int reverse=0\n        if (x < 0 || (x % 10 == 0 && x != 0)) {\n            return false;\n        }\n        while(temp!=0){\n            int reminder=temp%10;\n            reverse=reverse*10+reminder;\n            temp/=10;\n        }\n        return x==reverse; \n    }\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "user4230Em",
                        "content": "My code is working on pyCharm and all the usecases are passed . But it is failing in LeetCode for usecase 2 & 3 and not sure why. \\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        a=str(x)\\n        length = len(a)-1\\n        j=bool\\n        i=0\\n        while i <= length:\\n            if a[i] == a[length]:\\n                length -= 1\\n                i += 1\\n                j=\\'true\\'\\n            else:\\n                j =\\'false\\'\\n                break\\n        return j\\nsol=Solution()\\nb=int(input(\"Enter a number\"))\\nprint(sol.isPalindrome(b))"
                    },
                    {
                        "username": "Codex_Psycho",
                        "content": "Hi, I am new to this platform, I generally use the IntelliJ IDEA compiler, and when I want to compile the code it does not work, but if it works in the IDEA compiler, how can I solve the problem? (the code is in java):\\n\\nimport java.util.Scanner;\\n\\npublic class IsPalindrome{\\n     public static void main(String[] args) {\\n         Scanner scanner = new Scanner(System.in);\\n         String num = \"0\";\\n         String palindrome = \"\";\\n         System.out.println(\"Enter an integer\");\\n         num = String.valueOf(scanner.nextInt());\\n         if(num.length()==1){\\n             System.out.println(\"the number \".concat(num).concat(\" is a palindrome\"));\\n         } else {\\n             int barrier = num.length()-1;\\n             for(int cycles = 0; cycles<num.length(); cycles++){\\n                 palindrome = palindrome + String.valueOf(num.charAt(barrier-cycles));\\n             }\\n             System.out.println(\"palindrome = \" + palindrome);\\n             if (num.equals(palindrome)){\\n                 System.out.println(\"the number: \".concat(num).concat(\" is a palindrome\"));\\n             }\\n             else{\\n                 System.out.println(\"the number : \".concat(num).concat(\" is not a palindrome\"));\\n             }\\n         }\\n     }\\n}"
                    },
                    {
                        "username": "anksum2022",
                        "content": "What is the point of allowing -ve numbers for this? ARen\\'t all -ve numbers going to return `False`?"
                    },
                    {
                        "username": "gregoryderner",
                        "content": "So that your code deals with this type of data.\\nFor example, there is code that deals directly with the data and goes into the process of validating the palindrome. Some just deny the information (as you rightly said) it will always be false."
                    },
                    {
                        "username": "Raknid",
                        "content": "why is my code showing runtime 4ms and memory 42.35 mb\nand sometimes it is showing runtime as 12ms or 10ms and memory 46 mb?\n "
                    },
                    {
                        "username": "gregoryderner",
                        "content": "This is because some data is generated randomly. And this also bothered me, as I really wanted to know the values, I created a git to do tests."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "can somebody explain it to me ?"
                    },
                    {
                        "username": "gregoryderner",
                        "content": "A palindrome is a palindrome, regardless of whether it is a number or not. \"eye\" is a palindrome. Palindrome in simple definition would be being able to read the characters backwards and it remains the same. That\\'s why we see several solutions immediately converting to a string. That\\'s why (it should be read the same backwards) that \"-101\" would not be a palindrome."
                    },
                    {
                        "username": "Raknid",
                        "content": "So a palindrome number is a number is a number whose value is the same even after reversing it.\\nWhen the number is negative, it can\\'t be a palindrome.       Eg:  -101 ,reversed number-> 101- , not same!\\nWhen the number is have a zero in the end ,it can\\'t be palindrome.\\nEg: 110 ,reversed number-> 011, not same!\\nconsidering these conditions try solving for the Palindrome problem."
                    },
                    {
                        "username": "Aayush_2511",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        x = str(x)\\n        y = x[::-1]\\n        return bool (y == x)"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "gregoryderner",
                        "content": "If anyone else, like me, was bothered to see that the \"runtime\" results were different even when sending the same algorithm, and like me, you want to know the performance of your code based on others. I did this benchmark to be able to test in a more isolated way.\\n\\nhttps://github.com/gregoryderner/leetcode-palindrome-benchmark"
                    },
                    {
                        "username": "badrsouhar",
                        "content": "how to convert int x to string or char * in c++, idk why itoa() isn\\'t working i want to code my own itoa but I got \"heap-buffer-overflow\"."
                    },
                    {
                        "username": "loveworld",
                        "content": "This question is very important to learn and know the simple way."
                    }
                ]
            },
            {
                "id": 2054536,
                "content": [
                    {
                        "username": "ankitsingh01818",
                        "content": "class Solution {\n    public boolean isPalindrome(int x) {\n        int temp=x;\n        int reverse=0\n        if (x < 0 || (x % 10 == 0 && x != 0)) {\n            return false;\n        }\n        while(temp!=0){\n            int reminder=temp%10;\n            reverse=reverse*10+reminder;\n            temp/=10;\n        }\n        return x==reverse; \n    }\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "user4230Em",
                        "content": "My code is working on pyCharm and all the usecases are passed . But it is failing in LeetCode for usecase 2 & 3 and not sure why. \\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        a=str(x)\\n        length = len(a)-1\\n        j=bool\\n        i=0\\n        while i <= length:\\n            if a[i] == a[length]:\\n                length -= 1\\n                i += 1\\n                j=\\'true\\'\\n            else:\\n                j =\\'false\\'\\n                break\\n        return j\\nsol=Solution()\\nb=int(input(\"Enter a number\"))\\nprint(sol.isPalindrome(b))"
                    },
                    {
                        "username": "Codex_Psycho",
                        "content": "Hi, I am new to this platform, I generally use the IntelliJ IDEA compiler, and when I want to compile the code it does not work, but if it works in the IDEA compiler, how can I solve the problem? (the code is in java):\\n\\nimport java.util.Scanner;\\n\\npublic class IsPalindrome{\\n     public static void main(String[] args) {\\n         Scanner scanner = new Scanner(System.in);\\n         String num = \"0\";\\n         String palindrome = \"\";\\n         System.out.println(\"Enter an integer\");\\n         num = String.valueOf(scanner.nextInt());\\n         if(num.length()==1){\\n             System.out.println(\"the number \".concat(num).concat(\" is a palindrome\"));\\n         } else {\\n             int barrier = num.length()-1;\\n             for(int cycles = 0; cycles<num.length(); cycles++){\\n                 palindrome = palindrome + String.valueOf(num.charAt(barrier-cycles));\\n             }\\n             System.out.println(\"palindrome = \" + palindrome);\\n             if (num.equals(palindrome)){\\n                 System.out.println(\"the number: \".concat(num).concat(\" is a palindrome\"));\\n             }\\n             else{\\n                 System.out.println(\"the number : \".concat(num).concat(\" is not a palindrome\"));\\n             }\\n         }\\n     }\\n}"
                    },
                    {
                        "username": "anksum2022",
                        "content": "What is the point of allowing -ve numbers for this? ARen\\'t all -ve numbers going to return `False`?"
                    },
                    {
                        "username": "gregoryderner",
                        "content": "So that your code deals with this type of data.\\nFor example, there is code that deals directly with the data and goes into the process of validating the palindrome. Some just deny the information (as you rightly said) it will always be false."
                    },
                    {
                        "username": "Raknid",
                        "content": "why is my code showing runtime 4ms and memory 42.35 mb\nand sometimes it is showing runtime as 12ms or 10ms and memory 46 mb?\n "
                    },
                    {
                        "username": "gregoryderner",
                        "content": "This is because some data is generated randomly. And this also bothered me, as I really wanted to know the values, I created a git to do tests."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "can somebody explain it to me ?"
                    },
                    {
                        "username": "gregoryderner",
                        "content": "A palindrome is a palindrome, regardless of whether it is a number or not. \"eye\" is a palindrome. Palindrome in simple definition would be being able to read the characters backwards and it remains the same. That\\'s why we see several solutions immediately converting to a string. That\\'s why (it should be read the same backwards) that \"-101\" would not be a palindrome."
                    },
                    {
                        "username": "Raknid",
                        "content": "So a palindrome number is a number is a number whose value is the same even after reversing it.\\nWhen the number is negative, it can\\'t be a palindrome.       Eg:  -101 ,reversed number-> 101- , not same!\\nWhen the number is have a zero in the end ,it can\\'t be palindrome.\\nEg: 110 ,reversed number-> 011, not same!\\nconsidering these conditions try solving for the Palindrome problem."
                    },
                    {
                        "username": "Aayush_2511",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        x = str(x)\\n        y = x[::-1]\\n        return bool (y == x)"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "gregoryderner",
                        "content": "If anyone else, like me, was bothered to see that the \"runtime\" results were different even when sending the same algorithm, and like me, you want to know the performance of your code based on others. I did this benchmark to be able to test in a more isolated way.\\n\\nhttps://github.com/gregoryderner/leetcode-palindrome-benchmark"
                    },
                    {
                        "username": "badrsouhar",
                        "content": "how to convert int x to string or char * in c++, idk why itoa() isn\\'t working i want to code my own itoa but I got \"heap-buffer-overflow\"."
                    },
                    {
                        "username": "loveworld",
                        "content": "This question is very important to learn and know the simple way."
                    }
                ]
            },
            {
                "id": 2052856,
                "content": [
                    {
                        "username": "ankitsingh01818",
                        "content": "class Solution {\n    public boolean isPalindrome(int x) {\n        int temp=x;\n        int reverse=0\n        if (x < 0 || (x % 10 == 0 && x != 0)) {\n            return false;\n        }\n        while(temp!=0){\n            int reminder=temp%10;\n            reverse=reverse*10+reminder;\n            temp/=10;\n        }\n        return x==reverse; \n    }\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "user4230Em",
                        "content": "My code is working on pyCharm and all the usecases are passed . But it is failing in LeetCode for usecase 2 & 3 and not sure why. \\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        a=str(x)\\n        length = len(a)-1\\n        j=bool\\n        i=0\\n        while i <= length:\\n            if a[i] == a[length]:\\n                length -= 1\\n                i += 1\\n                j=\\'true\\'\\n            else:\\n                j =\\'false\\'\\n                break\\n        return j\\nsol=Solution()\\nb=int(input(\"Enter a number\"))\\nprint(sol.isPalindrome(b))"
                    },
                    {
                        "username": "Codex_Psycho",
                        "content": "Hi, I am new to this platform, I generally use the IntelliJ IDEA compiler, and when I want to compile the code it does not work, but if it works in the IDEA compiler, how can I solve the problem? (the code is in java):\\n\\nimport java.util.Scanner;\\n\\npublic class IsPalindrome{\\n     public static void main(String[] args) {\\n         Scanner scanner = new Scanner(System.in);\\n         String num = \"0\";\\n         String palindrome = \"\";\\n         System.out.println(\"Enter an integer\");\\n         num = String.valueOf(scanner.nextInt());\\n         if(num.length()==1){\\n             System.out.println(\"the number \".concat(num).concat(\" is a palindrome\"));\\n         } else {\\n             int barrier = num.length()-1;\\n             for(int cycles = 0; cycles<num.length(); cycles++){\\n                 palindrome = palindrome + String.valueOf(num.charAt(barrier-cycles));\\n             }\\n             System.out.println(\"palindrome = \" + palindrome);\\n             if (num.equals(palindrome)){\\n                 System.out.println(\"the number: \".concat(num).concat(\" is a palindrome\"));\\n             }\\n             else{\\n                 System.out.println(\"the number : \".concat(num).concat(\" is not a palindrome\"));\\n             }\\n         }\\n     }\\n}"
                    },
                    {
                        "username": "anksum2022",
                        "content": "What is the point of allowing -ve numbers for this? ARen\\'t all -ve numbers going to return `False`?"
                    },
                    {
                        "username": "gregoryderner",
                        "content": "So that your code deals with this type of data.\\nFor example, there is code that deals directly with the data and goes into the process of validating the palindrome. Some just deny the information (as you rightly said) it will always be false."
                    },
                    {
                        "username": "Raknid",
                        "content": "why is my code showing runtime 4ms and memory 42.35 mb\nand sometimes it is showing runtime as 12ms or 10ms and memory 46 mb?\n "
                    },
                    {
                        "username": "gregoryderner",
                        "content": "This is because some data is generated randomly. And this also bothered me, as I really wanted to know the values, I created a git to do tests."
                    },
                    {
                        "username": "Kalpesh9090",
                        "content": "can somebody explain it to me ?"
                    },
                    {
                        "username": "gregoryderner",
                        "content": "A palindrome is a palindrome, regardless of whether it is a number or not. \"eye\" is a palindrome. Palindrome in simple definition would be being able to read the characters backwards and it remains the same. That\\'s why we see several solutions immediately converting to a string. That\\'s why (it should be read the same backwards) that \"-101\" would not be a palindrome."
                    },
                    {
                        "username": "Raknid",
                        "content": "So a palindrome number is a number is a number whose value is the same even after reversing it.\\nWhen the number is negative, it can\\'t be a palindrome.       Eg:  -101 ,reversed number-> 101- , not same!\\nWhen the number is have a zero in the end ,it can\\'t be palindrome.\\nEg: 110 ,reversed number-> 011, not same!\\nconsidering these conditions try solving for the Palindrome problem."
                    },
                    {
                        "username": "Aayush_2511",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        x = str(x)\\n        y = x[::-1]\\n        return bool (y == x)"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "gregoryderner",
                        "content": "If anyone else, like me, was bothered to see that the \"runtime\" results were different even when sending the same algorithm, and like me, you want to know the performance of your code based on others. I did this benchmark to be able to test in a more isolated way.\\n\\nhttps://github.com/gregoryderner/leetcode-palindrome-benchmark"
                    },
                    {
                        "username": "badrsouhar",
                        "content": "how to convert int x to string or char * in c++, idk why itoa() isn\\'t working i want to code my own itoa but I got \"heap-buffer-overflow\"."
                    },
                    {
                        "username": "loveworld",
                        "content": "This question is very important to learn and know the simple way."
                    }
                ]
            },
            {
                "id": 2049855,
                "content": [
                    {
                        "username": "Akash-jaiswar786",
                        "content": "Tips  which beats 100%-> Just simply convert the integer into  string using (to_string) and than take two variables (i,j) take i = 0 and j = string.size()-1 and check if ( i != j ) return false and i++,j--\\nelse return true "
                    },
                    {
                        "username": "vishwa_099",
                        "content": "hey there look at my code.\\nI solved it without converting the number to the string.class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long long int ans=0;\\n        if(x<0){\\n            return 0;\\n        }\\n        long long int copy=x;\\n        while(copy!=0){\\n            int digit=copy%10;\\n            ans=(ans*10)+digit;\\n            copy/=10;\\n        }\\n        if(ans==x){\\n            return 1;\\n        }\\n        else\\n           return 0;\\n        \\n    }\\n};\\n"
                    },
                    {
                        "username": "VaibhavChougule_475",
                        "content": "1000000001 > INT_MAX /10  then it should return false\\noutput : false\\nexpected : true \\nwhy this ?"
                    },
                    {
                        "username": "yorachidi94",
                        "content": "my solution got accepted using C language but i know i can reduce time to half but i dont know how , if anyone can check my code and tell me how to let it check only yo the half of of numbers in x ?\\ndidnt use STRING ! Only math "
                    },
                    {
                        "username": "kcruz92",
                        "content": "I got 75% faster than other leet code submissions where I reversed the int and compared it to the original int using a while loop. Is there a faster approach to finding out the given int is a palindrome?\\n"
                    },
                    {
                        "username": "rtanishka",
                        "content": "Why is my code wrong? Its showing false for 121\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int y =0;\\n        y = x;\\n\\n        string ans1 = to_string(x);\\n        string ans2 = \"\";\\n        while(y > 0){\\n            ans2.push_back(y%10);\\n            y = y/10;\\n        }\\n        if(ans1 == ans2) return true;\\n        return false;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "BanjiBear",
                        "content": "Hi, I am new to coding here. \\nI am encountering something I do not know why. Any hints or explanation would be appreciated.\\n\\nThe following code is my solution but results in: Line 8: Char 27: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' [solution.c]\\nHowever, if I remove the variable value and use x directly, the error is gone, but x will be changed.\\nI wonder what causes all the things above.\\nThank you so much for your time\\n\\nbool isPalindrome(int x){\\n    if(x < 0){\\n        return false;\\n    }\\n\\n    int compare = 0, value = x;\\n    while(value > 0){\\n        compare = compare * 10 + value % 10;\\n        value = value / 10;\\n    }\\n    if(x == compare){\\n        return true;\\n    }\\n    return false;\\n}"
                    },
                    {
                        "username": "kyleTumlinson",
                        "content": "the issue is that the number will be too big for an integer. The only way i found around that case is to change from an int to a long int, long int has more space. however this takes up more memory so there is a trade off."
                    },
                    {
                        "username": "hibak27",
                        "content": "guys why my time limit is getting exeeded ? :(\\n `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        rev=0\\n        temp=x\\n        while temp!=0:\\n            last=temp%10\\n            rev=rev*10+last\\n            temp=temp//10\\n        return (rev==x)`"
                    },
                    {
                        "username": "zlinkkk",
                        "content": "in vsc when i test my code with 1 example it outputs true, and here it outputs false :("
                    },
                    {
                        "username": "nitya_333",
                        "content": "my all three test cases have passed.But for x=123 it returns true and i dont know what is wrong\\n"
                    }
                ]
            },
            {
                "id": 2049752,
                "content": [
                    {
                        "username": "Akash-jaiswar786",
                        "content": "Tips  which beats 100%-> Just simply convert the integer into  string using (to_string) and than take two variables (i,j) take i = 0 and j = string.size()-1 and check if ( i != j ) return false and i++,j--\\nelse return true "
                    },
                    {
                        "username": "vishwa_099",
                        "content": "hey there look at my code.\\nI solved it without converting the number to the string.class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long long int ans=0;\\n        if(x<0){\\n            return 0;\\n        }\\n        long long int copy=x;\\n        while(copy!=0){\\n            int digit=copy%10;\\n            ans=(ans*10)+digit;\\n            copy/=10;\\n        }\\n        if(ans==x){\\n            return 1;\\n        }\\n        else\\n           return 0;\\n        \\n    }\\n};\\n"
                    },
                    {
                        "username": "VaibhavChougule_475",
                        "content": "1000000001 > INT_MAX /10  then it should return false\\noutput : false\\nexpected : true \\nwhy this ?"
                    },
                    {
                        "username": "yorachidi94",
                        "content": "my solution got accepted using C language but i know i can reduce time to half but i dont know how , if anyone can check my code and tell me how to let it check only yo the half of of numbers in x ?\\ndidnt use STRING ! Only math "
                    },
                    {
                        "username": "kcruz92",
                        "content": "I got 75% faster than other leet code submissions where I reversed the int and compared it to the original int using a while loop. Is there a faster approach to finding out the given int is a palindrome?\\n"
                    },
                    {
                        "username": "rtanishka",
                        "content": "Why is my code wrong? Its showing false for 121\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int y =0;\\n        y = x;\\n\\n        string ans1 = to_string(x);\\n        string ans2 = \"\";\\n        while(y > 0){\\n            ans2.push_back(y%10);\\n            y = y/10;\\n        }\\n        if(ans1 == ans2) return true;\\n        return false;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "BanjiBear",
                        "content": "Hi, I am new to coding here. \\nI am encountering something I do not know why. Any hints or explanation would be appreciated.\\n\\nThe following code is my solution but results in: Line 8: Char 27: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' [solution.c]\\nHowever, if I remove the variable value and use x directly, the error is gone, but x will be changed.\\nI wonder what causes all the things above.\\nThank you so much for your time\\n\\nbool isPalindrome(int x){\\n    if(x < 0){\\n        return false;\\n    }\\n\\n    int compare = 0, value = x;\\n    while(value > 0){\\n        compare = compare * 10 + value % 10;\\n        value = value / 10;\\n    }\\n    if(x == compare){\\n        return true;\\n    }\\n    return false;\\n}"
                    },
                    {
                        "username": "kyleTumlinson",
                        "content": "the issue is that the number will be too big for an integer. The only way i found around that case is to change from an int to a long int, long int has more space. however this takes up more memory so there is a trade off."
                    },
                    {
                        "username": "hibak27",
                        "content": "guys why my time limit is getting exeeded ? :(\\n `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        rev=0\\n        temp=x\\n        while temp!=0:\\n            last=temp%10\\n            rev=rev*10+last\\n            temp=temp//10\\n        return (rev==x)`"
                    },
                    {
                        "username": "zlinkkk",
                        "content": "in vsc when i test my code with 1 example it outputs true, and here it outputs false :("
                    },
                    {
                        "username": "nitya_333",
                        "content": "my all three test cases have passed.But for x=123 it returns true and i dont know what is wrong\\n"
                    }
                ]
            },
            {
                "id": 2048270,
                "content": [
                    {
                        "username": "Akash-jaiswar786",
                        "content": "Tips  which beats 100%-> Just simply convert the integer into  string using (to_string) and than take two variables (i,j) take i = 0 and j = string.size()-1 and check if ( i != j ) return false and i++,j--\\nelse return true "
                    },
                    {
                        "username": "vishwa_099",
                        "content": "hey there look at my code.\\nI solved it without converting the number to the string.class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long long int ans=0;\\n        if(x<0){\\n            return 0;\\n        }\\n        long long int copy=x;\\n        while(copy!=0){\\n            int digit=copy%10;\\n            ans=(ans*10)+digit;\\n            copy/=10;\\n        }\\n        if(ans==x){\\n            return 1;\\n        }\\n        else\\n           return 0;\\n        \\n    }\\n};\\n"
                    },
                    {
                        "username": "VaibhavChougule_475",
                        "content": "1000000001 > INT_MAX /10  then it should return false\\noutput : false\\nexpected : true \\nwhy this ?"
                    },
                    {
                        "username": "yorachidi94",
                        "content": "my solution got accepted using C language but i know i can reduce time to half but i dont know how , if anyone can check my code and tell me how to let it check only yo the half of of numbers in x ?\\ndidnt use STRING ! Only math "
                    },
                    {
                        "username": "kcruz92",
                        "content": "I got 75% faster than other leet code submissions where I reversed the int and compared it to the original int using a while loop. Is there a faster approach to finding out the given int is a palindrome?\\n"
                    },
                    {
                        "username": "rtanishka",
                        "content": "Why is my code wrong? Its showing false for 121\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int y =0;\\n        y = x;\\n\\n        string ans1 = to_string(x);\\n        string ans2 = \"\";\\n        while(y > 0){\\n            ans2.push_back(y%10);\\n            y = y/10;\\n        }\\n        if(ans1 == ans2) return true;\\n        return false;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "BanjiBear",
                        "content": "Hi, I am new to coding here. \\nI am encountering something I do not know why. Any hints or explanation would be appreciated.\\n\\nThe following code is my solution but results in: Line 8: Char 27: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' [solution.c]\\nHowever, if I remove the variable value and use x directly, the error is gone, but x will be changed.\\nI wonder what causes all the things above.\\nThank you so much for your time\\n\\nbool isPalindrome(int x){\\n    if(x < 0){\\n        return false;\\n    }\\n\\n    int compare = 0, value = x;\\n    while(value > 0){\\n        compare = compare * 10 + value % 10;\\n        value = value / 10;\\n    }\\n    if(x == compare){\\n        return true;\\n    }\\n    return false;\\n}"
                    },
                    {
                        "username": "kyleTumlinson",
                        "content": "the issue is that the number will be too big for an integer. The only way i found around that case is to change from an int to a long int, long int has more space. however this takes up more memory so there is a trade off."
                    },
                    {
                        "username": "hibak27",
                        "content": "guys why my time limit is getting exeeded ? :(\\n `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        rev=0\\n        temp=x\\n        while temp!=0:\\n            last=temp%10\\n            rev=rev*10+last\\n            temp=temp//10\\n        return (rev==x)`"
                    },
                    {
                        "username": "zlinkkk",
                        "content": "in vsc when i test my code with 1 example it outputs true, and here it outputs false :("
                    },
                    {
                        "username": "nitya_333",
                        "content": "my all three test cases have passed.But for x=123 it returns true and i dont know what is wrong\\n"
                    }
                ]
            },
            {
                "id": 2047711,
                "content": [
                    {
                        "username": "Akash-jaiswar786",
                        "content": "Tips  which beats 100%-> Just simply convert the integer into  string using (to_string) and than take two variables (i,j) take i = 0 and j = string.size()-1 and check if ( i != j ) return false and i++,j--\\nelse return true "
                    },
                    {
                        "username": "vishwa_099",
                        "content": "hey there look at my code.\\nI solved it without converting the number to the string.class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long long int ans=0;\\n        if(x<0){\\n            return 0;\\n        }\\n        long long int copy=x;\\n        while(copy!=0){\\n            int digit=copy%10;\\n            ans=(ans*10)+digit;\\n            copy/=10;\\n        }\\n        if(ans==x){\\n            return 1;\\n        }\\n        else\\n           return 0;\\n        \\n    }\\n};\\n"
                    },
                    {
                        "username": "VaibhavChougule_475",
                        "content": "1000000001 > INT_MAX /10  then it should return false\\noutput : false\\nexpected : true \\nwhy this ?"
                    },
                    {
                        "username": "yorachidi94",
                        "content": "my solution got accepted using C language but i know i can reduce time to half but i dont know how , if anyone can check my code and tell me how to let it check only yo the half of of numbers in x ?\\ndidnt use STRING ! Only math "
                    },
                    {
                        "username": "kcruz92",
                        "content": "I got 75% faster than other leet code submissions where I reversed the int and compared it to the original int using a while loop. Is there a faster approach to finding out the given int is a palindrome?\\n"
                    },
                    {
                        "username": "rtanishka",
                        "content": "Why is my code wrong? Its showing false for 121\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int y =0;\\n        y = x;\\n\\n        string ans1 = to_string(x);\\n        string ans2 = \"\";\\n        while(y > 0){\\n            ans2.push_back(y%10);\\n            y = y/10;\\n        }\\n        if(ans1 == ans2) return true;\\n        return false;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "BanjiBear",
                        "content": "Hi, I am new to coding here. \\nI am encountering something I do not know why. Any hints or explanation would be appreciated.\\n\\nThe following code is my solution but results in: Line 8: Char 27: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' [solution.c]\\nHowever, if I remove the variable value and use x directly, the error is gone, but x will be changed.\\nI wonder what causes all the things above.\\nThank you so much for your time\\n\\nbool isPalindrome(int x){\\n    if(x < 0){\\n        return false;\\n    }\\n\\n    int compare = 0, value = x;\\n    while(value > 0){\\n        compare = compare * 10 + value % 10;\\n        value = value / 10;\\n    }\\n    if(x == compare){\\n        return true;\\n    }\\n    return false;\\n}"
                    },
                    {
                        "username": "kyleTumlinson",
                        "content": "the issue is that the number will be too big for an integer. The only way i found around that case is to change from an int to a long int, long int has more space. however this takes up more memory so there is a trade off."
                    },
                    {
                        "username": "hibak27",
                        "content": "guys why my time limit is getting exeeded ? :(\\n `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        rev=0\\n        temp=x\\n        while temp!=0:\\n            last=temp%10\\n            rev=rev*10+last\\n            temp=temp//10\\n        return (rev==x)`"
                    },
                    {
                        "username": "zlinkkk",
                        "content": "in vsc when i test my code with 1 example it outputs true, and here it outputs false :("
                    },
                    {
                        "username": "nitya_333",
                        "content": "my all three test cases have passed.But for x=123 it returns true and i dont know what is wrong\\n"
                    }
                ]
            },
            {
                "id": 2038707,
                "content": [
                    {
                        "username": "Akash-jaiswar786",
                        "content": "Tips  which beats 100%-> Just simply convert the integer into  string using (to_string) and than take two variables (i,j) take i = 0 and j = string.size()-1 and check if ( i != j ) return false and i++,j--\\nelse return true "
                    },
                    {
                        "username": "vishwa_099",
                        "content": "hey there look at my code.\\nI solved it without converting the number to the string.class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long long int ans=0;\\n        if(x<0){\\n            return 0;\\n        }\\n        long long int copy=x;\\n        while(copy!=0){\\n            int digit=copy%10;\\n            ans=(ans*10)+digit;\\n            copy/=10;\\n        }\\n        if(ans==x){\\n            return 1;\\n        }\\n        else\\n           return 0;\\n        \\n    }\\n};\\n"
                    },
                    {
                        "username": "VaibhavChougule_475",
                        "content": "1000000001 > INT_MAX /10  then it should return false\\noutput : false\\nexpected : true \\nwhy this ?"
                    },
                    {
                        "username": "yorachidi94",
                        "content": "my solution got accepted using C language but i know i can reduce time to half but i dont know how , if anyone can check my code and tell me how to let it check only yo the half of of numbers in x ?\\ndidnt use STRING ! Only math "
                    },
                    {
                        "username": "kcruz92",
                        "content": "I got 75% faster than other leet code submissions where I reversed the int and compared it to the original int using a while loop. Is there a faster approach to finding out the given int is a palindrome?\\n"
                    },
                    {
                        "username": "rtanishka",
                        "content": "Why is my code wrong? Its showing false for 121\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int y =0;\\n        y = x;\\n\\n        string ans1 = to_string(x);\\n        string ans2 = \"\";\\n        while(y > 0){\\n            ans2.push_back(y%10);\\n            y = y/10;\\n        }\\n        if(ans1 == ans2) return true;\\n        return false;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "BanjiBear",
                        "content": "Hi, I am new to coding here. \\nI am encountering something I do not know why. Any hints or explanation would be appreciated.\\n\\nThe following code is my solution but results in: Line 8: Char 27: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' [solution.c]\\nHowever, if I remove the variable value and use x directly, the error is gone, but x will be changed.\\nI wonder what causes all the things above.\\nThank you so much for your time\\n\\nbool isPalindrome(int x){\\n    if(x < 0){\\n        return false;\\n    }\\n\\n    int compare = 0, value = x;\\n    while(value > 0){\\n        compare = compare * 10 + value % 10;\\n        value = value / 10;\\n    }\\n    if(x == compare){\\n        return true;\\n    }\\n    return false;\\n}"
                    },
                    {
                        "username": "kyleTumlinson",
                        "content": "the issue is that the number will be too big for an integer. The only way i found around that case is to change from an int to a long int, long int has more space. however this takes up more memory so there is a trade off."
                    },
                    {
                        "username": "hibak27",
                        "content": "guys why my time limit is getting exeeded ? :(\\n `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        rev=0\\n        temp=x\\n        while temp!=0:\\n            last=temp%10\\n            rev=rev*10+last\\n            temp=temp//10\\n        return (rev==x)`"
                    },
                    {
                        "username": "zlinkkk",
                        "content": "in vsc when i test my code with 1 example it outputs true, and here it outputs false :("
                    },
                    {
                        "username": "nitya_333",
                        "content": "my all three test cases have passed.But for x=123 it returns true and i dont know what is wrong\\n"
                    }
                ]
            },
            {
                "id": 2038283,
                "content": [
                    {
                        "username": "Akash-jaiswar786",
                        "content": "Tips  which beats 100%-> Just simply convert the integer into  string using (to_string) and than take two variables (i,j) take i = 0 and j = string.size()-1 and check if ( i != j ) return false and i++,j--\\nelse return true "
                    },
                    {
                        "username": "vishwa_099",
                        "content": "hey there look at my code.\\nI solved it without converting the number to the string.class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long long int ans=0;\\n        if(x<0){\\n            return 0;\\n        }\\n        long long int copy=x;\\n        while(copy!=0){\\n            int digit=copy%10;\\n            ans=(ans*10)+digit;\\n            copy/=10;\\n        }\\n        if(ans==x){\\n            return 1;\\n        }\\n        else\\n           return 0;\\n        \\n    }\\n};\\n"
                    },
                    {
                        "username": "VaibhavChougule_475",
                        "content": "1000000001 > INT_MAX /10  then it should return false\\noutput : false\\nexpected : true \\nwhy this ?"
                    },
                    {
                        "username": "yorachidi94",
                        "content": "my solution got accepted using C language but i know i can reduce time to half but i dont know how , if anyone can check my code and tell me how to let it check only yo the half of of numbers in x ?\\ndidnt use STRING ! Only math "
                    },
                    {
                        "username": "kcruz92",
                        "content": "I got 75% faster than other leet code submissions where I reversed the int and compared it to the original int using a while loop. Is there a faster approach to finding out the given int is a palindrome?\\n"
                    },
                    {
                        "username": "rtanishka",
                        "content": "Why is my code wrong? Its showing false for 121\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int y =0;\\n        y = x;\\n\\n        string ans1 = to_string(x);\\n        string ans2 = \"\";\\n        while(y > 0){\\n            ans2.push_back(y%10);\\n            y = y/10;\\n        }\\n        if(ans1 == ans2) return true;\\n        return false;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "BanjiBear",
                        "content": "Hi, I am new to coding here. \\nI am encountering something I do not know why. Any hints or explanation would be appreciated.\\n\\nThe following code is my solution but results in: Line 8: Char 27: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' [solution.c]\\nHowever, if I remove the variable value and use x directly, the error is gone, but x will be changed.\\nI wonder what causes all the things above.\\nThank you so much for your time\\n\\nbool isPalindrome(int x){\\n    if(x < 0){\\n        return false;\\n    }\\n\\n    int compare = 0, value = x;\\n    while(value > 0){\\n        compare = compare * 10 + value % 10;\\n        value = value / 10;\\n    }\\n    if(x == compare){\\n        return true;\\n    }\\n    return false;\\n}"
                    },
                    {
                        "username": "kyleTumlinson",
                        "content": "the issue is that the number will be too big for an integer. The only way i found around that case is to change from an int to a long int, long int has more space. however this takes up more memory so there is a trade off."
                    },
                    {
                        "username": "hibak27",
                        "content": "guys why my time limit is getting exeeded ? :(\\n `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        rev=0\\n        temp=x\\n        while temp!=0:\\n            last=temp%10\\n            rev=rev*10+last\\n            temp=temp//10\\n        return (rev==x)`"
                    },
                    {
                        "username": "zlinkkk",
                        "content": "in vsc when i test my code with 1 example it outputs true, and here it outputs false :("
                    },
                    {
                        "username": "nitya_333",
                        "content": "my all three test cases have passed.But for x=123 it returns true and i dont know what is wrong\\n"
                    }
                ]
            },
            {
                "id": 2035993,
                "content": [
                    {
                        "username": "Akash-jaiswar786",
                        "content": "Tips  which beats 100%-> Just simply convert the integer into  string using (to_string) and than take two variables (i,j) take i = 0 and j = string.size()-1 and check if ( i != j ) return false and i++,j--\\nelse return true "
                    },
                    {
                        "username": "vishwa_099",
                        "content": "hey there look at my code.\\nI solved it without converting the number to the string.class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long long int ans=0;\\n        if(x<0){\\n            return 0;\\n        }\\n        long long int copy=x;\\n        while(copy!=0){\\n            int digit=copy%10;\\n            ans=(ans*10)+digit;\\n            copy/=10;\\n        }\\n        if(ans==x){\\n            return 1;\\n        }\\n        else\\n           return 0;\\n        \\n    }\\n};\\n"
                    },
                    {
                        "username": "VaibhavChougule_475",
                        "content": "1000000001 > INT_MAX /10  then it should return false\\noutput : false\\nexpected : true \\nwhy this ?"
                    },
                    {
                        "username": "yorachidi94",
                        "content": "my solution got accepted using C language but i know i can reduce time to half but i dont know how , if anyone can check my code and tell me how to let it check only yo the half of of numbers in x ?\\ndidnt use STRING ! Only math "
                    },
                    {
                        "username": "kcruz92",
                        "content": "I got 75% faster than other leet code submissions where I reversed the int and compared it to the original int using a while loop. Is there a faster approach to finding out the given int is a palindrome?\\n"
                    },
                    {
                        "username": "rtanishka",
                        "content": "Why is my code wrong? Its showing false for 121\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int y =0;\\n        y = x;\\n\\n        string ans1 = to_string(x);\\n        string ans2 = \"\";\\n        while(y > 0){\\n            ans2.push_back(y%10);\\n            y = y/10;\\n        }\\n        if(ans1 == ans2) return true;\\n        return false;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "BanjiBear",
                        "content": "Hi, I am new to coding here. \\nI am encountering something I do not know why. Any hints or explanation would be appreciated.\\n\\nThe following code is my solution but results in: Line 8: Char 27: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' [solution.c]\\nHowever, if I remove the variable value and use x directly, the error is gone, but x will be changed.\\nI wonder what causes all the things above.\\nThank you so much for your time\\n\\nbool isPalindrome(int x){\\n    if(x < 0){\\n        return false;\\n    }\\n\\n    int compare = 0, value = x;\\n    while(value > 0){\\n        compare = compare * 10 + value % 10;\\n        value = value / 10;\\n    }\\n    if(x == compare){\\n        return true;\\n    }\\n    return false;\\n}"
                    },
                    {
                        "username": "kyleTumlinson",
                        "content": "the issue is that the number will be too big for an integer. The only way i found around that case is to change from an int to a long int, long int has more space. however this takes up more memory so there is a trade off."
                    },
                    {
                        "username": "hibak27",
                        "content": "guys why my time limit is getting exeeded ? :(\\n `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        rev=0\\n        temp=x\\n        while temp!=0:\\n            last=temp%10\\n            rev=rev*10+last\\n            temp=temp//10\\n        return (rev==x)`"
                    },
                    {
                        "username": "zlinkkk",
                        "content": "in vsc when i test my code with 1 example it outputs true, and here it outputs false :("
                    },
                    {
                        "username": "nitya_333",
                        "content": "my all three test cases have passed.But for x=123 it returns true and i dont know what is wrong\\n"
                    }
                ]
            },
            {
                "id": 2033938,
                "content": [
                    {
                        "username": "Akash-jaiswar786",
                        "content": "Tips  which beats 100%-> Just simply convert the integer into  string using (to_string) and than take two variables (i,j) take i = 0 and j = string.size()-1 and check if ( i != j ) return false and i++,j--\\nelse return true "
                    },
                    {
                        "username": "vishwa_099",
                        "content": "hey there look at my code.\\nI solved it without converting the number to the string.class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long long int ans=0;\\n        if(x<0){\\n            return 0;\\n        }\\n        long long int copy=x;\\n        while(copy!=0){\\n            int digit=copy%10;\\n            ans=(ans*10)+digit;\\n            copy/=10;\\n        }\\n        if(ans==x){\\n            return 1;\\n        }\\n        else\\n           return 0;\\n        \\n    }\\n};\\n"
                    },
                    {
                        "username": "VaibhavChougule_475",
                        "content": "1000000001 > INT_MAX /10  then it should return false\\noutput : false\\nexpected : true \\nwhy this ?"
                    },
                    {
                        "username": "yorachidi94",
                        "content": "my solution got accepted using C language but i know i can reduce time to half but i dont know how , if anyone can check my code and tell me how to let it check only yo the half of of numbers in x ?\\ndidnt use STRING ! Only math "
                    },
                    {
                        "username": "kcruz92",
                        "content": "I got 75% faster than other leet code submissions where I reversed the int and compared it to the original int using a while loop. Is there a faster approach to finding out the given int is a palindrome?\\n"
                    },
                    {
                        "username": "rtanishka",
                        "content": "Why is my code wrong? Its showing false for 121\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int y =0;\\n        y = x;\\n\\n        string ans1 = to_string(x);\\n        string ans2 = \"\";\\n        while(y > 0){\\n            ans2.push_back(y%10);\\n            y = y/10;\\n        }\\n        if(ans1 == ans2) return true;\\n        return false;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "BanjiBear",
                        "content": "Hi, I am new to coding here. \\nI am encountering something I do not know why. Any hints or explanation would be appreciated.\\n\\nThe following code is my solution but results in: Line 8: Char 27: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' [solution.c]\\nHowever, if I remove the variable value and use x directly, the error is gone, but x will be changed.\\nI wonder what causes all the things above.\\nThank you so much for your time\\n\\nbool isPalindrome(int x){\\n    if(x < 0){\\n        return false;\\n    }\\n\\n    int compare = 0, value = x;\\n    while(value > 0){\\n        compare = compare * 10 + value % 10;\\n        value = value / 10;\\n    }\\n    if(x == compare){\\n        return true;\\n    }\\n    return false;\\n}"
                    },
                    {
                        "username": "kyleTumlinson",
                        "content": "the issue is that the number will be too big for an integer. The only way i found around that case is to change from an int to a long int, long int has more space. however this takes up more memory so there is a trade off."
                    },
                    {
                        "username": "hibak27",
                        "content": "guys why my time limit is getting exeeded ? :(\\n `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        rev=0\\n        temp=x\\n        while temp!=0:\\n            last=temp%10\\n            rev=rev*10+last\\n            temp=temp//10\\n        return (rev==x)`"
                    },
                    {
                        "username": "zlinkkk",
                        "content": "in vsc when i test my code with 1 example it outputs true, and here it outputs false :("
                    },
                    {
                        "username": "nitya_333",
                        "content": "my all three test cases have passed.But for x=123 it returns true and i dont know what is wrong\\n"
                    }
                ]
            },
            {
                "id": 2027545,
                "content": [
                    {
                        "username": "Akash-jaiswar786",
                        "content": "Tips  which beats 100%-> Just simply convert the integer into  string using (to_string) and than take two variables (i,j) take i = 0 and j = string.size()-1 and check if ( i != j ) return false and i++,j--\\nelse return true "
                    },
                    {
                        "username": "vishwa_099",
                        "content": "hey there look at my code.\\nI solved it without converting the number to the string.class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long long int ans=0;\\n        if(x<0){\\n            return 0;\\n        }\\n        long long int copy=x;\\n        while(copy!=0){\\n            int digit=copy%10;\\n            ans=(ans*10)+digit;\\n            copy/=10;\\n        }\\n        if(ans==x){\\n            return 1;\\n        }\\n        else\\n           return 0;\\n        \\n    }\\n};\\n"
                    },
                    {
                        "username": "VaibhavChougule_475",
                        "content": "1000000001 > INT_MAX /10  then it should return false\\noutput : false\\nexpected : true \\nwhy this ?"
                    },
                    {
                        "username": "yorachidi94",
                        "content": "my solution got accepted using C language but i know i can reduce time to half but i dont know how , if anyone can check my code and tell me how to let it check only yo the half of of numbers in x ?\\ndidnt use STRING ! Only math "
                    },
                    {
                        "username": "kcruz92",
                        "content": "I got 75% faster than other leet code submissions where I reversed the int and compared it to the original int using a while loop. Is there a faster approach to finding out the given int is a palindrome?\\n"
                    },
                    {
                        "username": "rtanishka",
                        "content": "Why is my code wrong? Its showing false for 121\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int y =0;\\n        y = x;\\n\\n        string ans1 = to_string(x);\\n        string ans2 = \"\";\\n        while(y > 0){\\n            ans2.push_back(y%10);\\n            y = y/10;\\n        }\\n        if(ans1 == ans2) return true;\\n        return false;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "BanjiBear",
                        "content": "Hi, I am new to coding here. \\nI am encountering something I do not know why. Any hints or explanation would be appreciated.\\n\\nThe following code is my solution but results in: Line 8: Char 27: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' [solution.c]\\nHowever, if I remove the variable value and use x directly, the error is gone, but x will be changed.\\nI wonder what causes all the things above.\\nThank you so much for your time\\n\\nbool isPalindrome(int x){\\n    if(x < 0){\\n        return false;\\n    }\\n\\n    int compare = 0, value = x;\\n    while(value > 0){\\n        compare = compare * 10 + value % 10;\\n        value = value / 10;\\n    }\\n    if(x == compare){\\n        return true;\\n    }\\n    return false;\\n}"
                    },
                    {
                        "username": "kyleTumlinson",
                        "content": "the issue is that the number will be too big for an integer. The only way i found around that case is to change from an int to a long int, long int has more space. however this takes up more memory so there is a trade off."
                    },
                    {
                        "username": "hibak27",
                        "content": "guys why my time limit is getting exeeded ? :(\\n `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        rev=0\\n        temp=x\\n        while temp!=0:\\n            last=temp%10\\n            rev=rev*10+last\\n            temp=temp//10\\n        return (rev==x)`"
                    },
                    {
                        "username": "zlinkkk",
                        "content": "in vsc when i test my code with 1 example it outputs true, and here it outputs false :("
                    },
                    {
                        "username": "nitya_333",
                        "content": "my all three test cases have passed.But for x=123 it returns true and i dont know what is wrong\\n"
                    }
                ]
            },
            {
                "id": 2020910,
                "content": [
                    {
                        "username": "Akash-jaiswar786",
                        "content": "Tips  which beats 100%-> Just simply convert the integer into  string using (to_string) and than take two variables (i,j) take i = 0 and j = string.size()-1 and check if ( i != j ) return false and i++,j--\\nelse return true "
                    },
                    {
                        "username": "vishwa_099",
                        "content": "hey there look at my code.\\nI solved it without converting the number to the string.class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long long int ans=0;\\n        if(x<0){\\n            return 0;\\n        }\\n        long long int copy=x;\\n        while(copy!=0){\\n            int digit=copy%10;\\n            ans=(ans*10)+digit;\\n            copy/=10;\\n        }\\n        if(ans==x){\\n            return 1;\\n        }\\n        else\\n           return 0;\\n        \\n    }\\n};\\n"
                    },
                    {
                        "username": "VaibhavChougule_475",
                        "content": "1000000001 > INT_MAX /10  then it should return false\\noutput : false\\nexpected : true \\nwhy this ?"
                    },
                    {
                        "username": "yorachidi94",
                        "content": "my solution got accepted using C language but i know i can reduce time to half but i dont know how , if anyone can check my code and tell me how to let it check only yo the half of of numbers in x ?\\ndidnt use STRING ! Only math "
                    },
                    {
                        "username": "kcruz92",
                        "content": "I got 75% faster than other leet code submissions where I reversed the int and compared it to the original int using a while loop. Is there a faster approach to finding out the given int is a palindrome?\\n"
                    },
                    {
                        "username": "rtanishka",
                        "content": "Why is my code wrong? Its showing false for 121\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int y =0;\\n        y = x;\\n\\n        string ans1 = to_string(x);\\n        string ans2 = \"\";\\n        while(y > 0){\\n            ans2.push_back(y%10);\\n            y = y/10;\\n        }\\n        if(ans1 == ans2) return true;\\n        return false;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "BanjiBear",
                        "content": "Hi, I am new to coding here. \\nI am encountering something I do not know why. Any hints or explanation would be appreciated.\\n\\nThe following code is my solution but results in: Line 8: Char 27: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' [solution.c]\\nHowever, if I remove the variable value and use x directly, the error is gone, but x will be changed.\\nI wonder what causes all the things above.\\nThank you so much for your time\\n\\nbool isPalindrome(int x){\\n    if(x < 0){\\n        return false;\\n    }\\n\\n    int compare = 0, value = x;\\n    while(value > 0){\\n        compare = compare * 10 + value % 10;\\n        value = value / 10;\\n    }\\n    if(x == compare){\\n        return true;\\n    }\\n    return false;\\n}"
                    },
                    {
                        "username": "kyleTumlinson",
                        "content": "the issue is that the number will be too big for an integer. The only way i found around that case is to change from an int to a long int, long int has more space. however this takes up more memory so there is a trade off."
                    },
                    {
                        "username": "hibak27",
                        "content": "guys why my time limit is getting exeeded ? :(\\n `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        rev=0\\n        temp=x\\n        while temp!=0:\\n            last=temp%10\\n            rev=rev*10+last\\n            temp=temp//10\\n        return (rev==x)`"
                    },
                    {
                        "username": "zlinkkk",
                        "content": "in vsc when i test my code with 1 example it outputs true, and here it outputs false :("
                    },
                    {
                        "username": "nitya_333",
                        "content": "my all three test cases have passed.But for x=123 it returns true and i dont know what is wrong\\n"
                    }
                ]
            },
            {
                "id": 2015533,
                "content": [
                    {
                        "username": "Anil-Gehlot",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n\\n        int num = x;\\n        int rev = 0;\\n\\n        \\n        if(x<0){\\n            return false;\\n        }\\n        while(num!=0){\\n            int l_digit = num%10;\\n            rev = (rev*10) + l_digit;\\n            num = num/10;\\n\\n        }\\n        if (x==rev){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n}"
                    },
                    {
                        "username": "Abhishek09012004",
                        "content": "why am I getting time limit exceeded as the result?"
                    },
                    {
                        "username": "nurim",
                        "content": "it\\'s so easy but i can\\'t solve 121 in my IDE return True and in leetcode it return like False,why....\\nlast_digit=x % 10\\nfirst_digit = x\\nwhile first_digit >= 10:\\n     first_digit//=10\\n\\nr=str(x)\\nif r == r[::-1]:\\n      print(\\'True\\')\\n else:\\n      print(\\'False\\')"
                    },
                    {
                        "username": "s99000",
                        "content": "#include<bits/stdc++.h>\\n\\nusing namespace std;\\nint main()\\n{\\nint x;\\ncin>>x;\\n   int c=x;\\n   int rev=0;\\n    while(x>0)\\n    {\\n        int ld=x%10;\\n     rev =(rev*10)+ld;\\n    x=x/10;\\n    }\\n    if (c==rev)\\n    cout<<\"true\";\\n    else \\n    cout<<\"false\";\\n}\\n\\n\\n what is the solution of this\\n"
                    },
                    {
                        "username": "theshrish46",
                        "content": "let pali = x.toString().split(\\'\\').reverse().join()\\nlet temp = x.toString()\\nreturn (temp == pali)\\n\\ncan anybody tell me whats wrong with this code"
                    },
                    {
                        "username": "JordanDMcGuire",
                        "content": "Something missing from the explanation of this problem. When I run the code in my IDE I get the correct answer but when I run it on this site it says its wrong."
                    },
                    {
                        "username": "ingilteremuhasebe",
                        "content": "really good idea"
                    },
                    {
                        "username": "_SamChristopher_",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int reverse = 0;\\n        int originalNum=x;\\n        for(;x!=0;){\\n            int remind = x%10;\\n            reverse = reverse *10 +remind;\\n            x/=10;\\n        }\\n        if(reverse == originalNum){\\n            return true;\\n        }else{\\n            return false;\\n        }\\n    }\\n}\\n\\nwhat wrong in my code ?? i get error"
                    },
                    {
                        "username": "guptasam318",
                        "content": "Try to convert int reverse into long reverse "
                    },
                    {
                        "username": "guptasam318",
                        "content": "The real challenge was to solve this question without converting to string, almost all the top solutions are converting int to string.\nBut I managed to solve this question without converting to string....woohoooo :D\nif you are thinking how -121 will be marked as false then the solution is really really simple, you just need a condition for that (number<0)."
                    },
                    {
                        "username": "MynameisTri-2004",
                        "content": "Hi. I am a newbie. What happened to my code ? Can you help me to fix this code ? thank you for reading this comment . \nBool isPalindrome(int x){\n  int x  ;   \nfor (x=0, x<10, x++) \n  if (\"x is palindrome\") { \n  printf (\"It is true\") ;\n  scanf (\"%d\", x) ; \n  return true ; \n  }\n}\nelse if (\"x is not a palindrome\") {\n  printf (\"it is not true\"); \n  scanf (\"%d\", x); \n  return false ; \n} \n"
                    }
                ]
            },
            {
                "id": 2014980,
                "content": [
                    {
                        "username": "Anil-Gehlot",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n\\n        int num = x;\\n        int rev = 0;\\n\\n        \\n        if(x<0){\\n            return false;\\n        }\\n        while(num!=0){\\n            int l_digit = num%10;\\n            rev = (rev*10) + l_digit;\\n            num = num/10;\\n\\n        }\\n        if (x==rev){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n}"
                    },
                    {
                        "username": "Abhishek09012004",
                        "content": "why am I getting time limit exceeded as the result?"
                    },
                    {
                        "username": "nurim",
                        "content": "it\\'s so easy but i can\\'t solve 121 in my IDE return True and in leetcode it return like False,why....\\nlast_digit=x % 10\\nfirst_digit = x\\nwhile first_digit >= 10:\\n     first_digit//=10\\n\\nr=str(x)\\nif r == r[::-1]:\\n      print(\\'True\\')\\n else:\\n      print(\\'False\\')"
                    },
                    {
                        "username": "s99000",
                        "content": "#include<bits/stdc++.h>\\n\\nusing namespace std;\\nint main()\\n{\\nint x;\\ncin>>x;\\n   int c=x;\\n   int rev=0;\\n    while(x>0)\\n    {\\n        int ld=x%10;\\n     rev =(rev*10)+ld;\\n    x=x/10;\\n    }\\n    if (c==rev)\\n    cout<<\"true\";\\n    else \\n    cout<<\"false\";\\n}\\n\\n\\n what is the solution of this\\n"
                    },
                    {
                        "username": "theshrish46",
                        "content": "let pali = x.toString().split(\\'\\').reverse().join()\\nlet temp = x.toString()\\nreturn (temp == pali)\\n\\ncan anybody tell me whats wrong with this code"
                    },
                    {
                        "username": "JordanDMcGuire",
                        "content": "Something missing from the explanation of this problem. When I run the code in my IDE I get the correct answer but when I run it on this site it says its wrong."
                    },
                    {
                        "username": "ingilteremuhasebe",
                        "content": "really good idea"
                    },
                    {
                        "username": "_SamChristopher_",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int reverse = 0;\\n        int originalNum=x;\\n        for(;x!=0;){\\n            int remind = x%10;\\n            reverse = reverse *10 +remind;\\n            x/=10;\\n        }\\n        if(reverse == originalNum){\\n            return true;\\n        }else{\\n            return false;\\n        }\\n    }\\n}\\n\\nwhat wrong in my code ?? i get error"
                    },
                    {
                        "username": "guptasam318",
                        "content": "Try to convert int reverse into long reverse "
                    },
                    {
                        "username": "guptasam318",
                        "content": "The real challenge was to solve this question without converting to string, almost all the top solutions are converting int to string.\nBut I managed to solve this question without converting to string....woohoooo :D\nif you are thinking how -121 will be marked as false then the solution is really really simple, you just need a condition for that (number<0)."
                    },
                    {
                        "username": "MynameisTri-2004",
                        "content": "Hi. I am a newbie. What happened to my code ? Can you help me to fix this code ? thank you for reading this comment . \nBool isPalindrome(int x){\n  int x  ;   \nfor (x=0, x<10, x++) \n  if (\"x is palindrome\") { \n  printf (\"It is true\") ;\n  scanf (\"%d\", x) ; \n  return true ; \n  }\n}\nelse if (\"x is not a palindrome\") {\n  printf (\"it is not true\"); \n  scanf (\"%d\", x); \n  return false ; \n} \n"
                    }
                ]
            },
            {
                "id": 2002794,
                "content": [
                    {
                        "username": "Anil-Gehlot",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n\\n        int num = x;\\n        int rev = 0;\\n\\n        \\n        if(x<0){\\n            return false;\\n        }\\n        while(num!=0){\\n            int l_digit = num%10;\\n            rev = (rev*10) + l_digit;\\n            num = num/10;\\n\\n        }\\n        if (x==rev){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n}"
                    },
                    {
                        "username": "Abhishek09012004",
                        "content": "why am I getting time limit exceeded as the result?"
                    },
                    {
                        "username": "nurim",
                        "content": "it\\'s so easy but i can\\'t solve 121 in my IDE return True and in leetcode it return like False,why....\\nlast_digit=x % 10\\nfirst_digit = x\\nwhile first_digit >= 10:\\n     first_digit//=10\\n\\nr=str(x)\\nif r == r[::-1]:\\n      print(\\'True\\')\\n else:\\n      print(\\'False\\')"
                    },
                    {
                        "username": "s99000",
                        "content": "#include<bits/stdc++.h>\\n\\nusing namespace std;\\nint main()\\n{\\nint x;\\ncin>>x;\\n   int c=x;\\n   int rev=0;\\n    while(x>0)\\n    {\\n        int ld=x%10;\\n     rev =(rev*10)+ld;\\n    x=x/10;\\n    }\\n    if (c==rev)\\n    cout<<\"true\";\\n    else \\n    cout<<\"false\";\\n}\\n\\n\\n what is the solution of this\\n"
                    },
                    {
                        "username": "theshrish46",
                        "content": "let pali = x.toString().split(\\'\\').reverse().join()\\nlet temp = x.toString()\\nreturn (temp == pali)\\n\\ncan anybody tell me whats wrong with this code"
                    },
                    {
                        "username": "JordanDMcGuire",
                        "content": "Something missing from the explanation of this problem. When I run the code in my IDE I get the correct answer but when I run it on this site it says its wrong."
                    },
                    {
                        "username": "ingilteremuhasebe",
                        "content": "really good idea"
                    },
                    {
                        "username": "_SamChristopher_",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int reverse = 0;\\n        int originalNum=x;\\n        for(;x!=0;){\\n            int remind = x%10;\\n            reverse = reverse *10 +remind;\\n            x/=10;\\n        }\\n        if(reverse == originalNum){\\n            return true;\\n        }else{\\n            return false;\\n        }\\n    }\\n}\\n\\nwhat wrong in my code ?? i get error"
                    },
                    {
                        "username": "guptasam318",
                        "content": "Try to convert int reverse into long reverse "
                    },
                    {
                        "username": "guptasam318",
                        "content": "The real challenge was to solve this question without converting to string, almost all the top solutions are converting int to string.\nBut I managed to solve this question without converting to string....woohoooo :D\nif you are thinking how -121 will be marked as false then the solution is really really simple, you just need a condition for that (number<0)."
                    },
                    {
                        "username": "MynameisTri-2004",
                        "content": "Hi. I am a newbie. What happened to my code ? Can you help me to fix this code ? thank you for reading this comment . \nBool isPalindrome(int x){\n  int x  ;   \nfor (x=0, x<10, x++) \n  if (\"x is palindrome\") { \n  printf (\"It is true\") ;\n  scanf (\"%d\", x) ; \n  return true ; \n  }\n}\nelse if (\"x is not a palindrome\") {\n  printf (\"it is not true\"); \n  scanf (\"%d\", x); \n  return false ; \n} \n"
                    }
                ]
            },
            {
                "id": 1997618,
                "content": [
                    {
                        "username": "Anil-Gehlot",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n\\n        int num = x;\\n        int rev = 0;\\n\\n        \\n        if(x<0){\\n            return false;\\n        }\\n        while(num!=0){\\n            int l_digit = num%10;\\n            rev = (rev*10) + l_digit;\\n            num = num/10;\\n\\n        }\\n        if (x==rev){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n}"
                    },
                    {
                        "username": "Abhishek09012004",
                        "content": "why am I getting time limit exceeded as the result?"
                    },
                    {
                        "username": "nurim",
                        "content": "it\\'s so easy but i can\\'t solve 121 in my IDE return True and in leetcode it return like False,why....\\nlast_digit=x % 10\\nfirst_digit = x\\nwhile first_digit >= 10:\\n     first_digit//=10\\n\\nr=str(x)\\nif r == r[::-1]:\\n      print(\\'True\\')\\n else:\\n      print(\\'False\\')"
                    },
                    {
                        "username": "s99000",
                        "content": "#include<bits/stdc++.h>\\n\\nusing namespace std;\\nint main()\\n{\\nint x;\\ncin>>x;\\n   int c=x;\\n   int rev=0;\\n    while(x>0)\\n    {\\n        int ld=x%10;\\n     rev =(rev*10)+ld;\\n    x=x/10;\\n    }\\n    if (c==rev)\\n    cout<<\"true\";\\n    else \\n    cout<<\"false\";\\n}\\n\\n\\n what is the solution of this\\n"
                    },
                    {
                        "username": "theshrish46",
                        "content": "let pali = x.toString().split(\\'\\').reverse().join()\\nlet temp = x.toString()\\nreturn (temp == pali)\\n\\ncan anybody tell me whats wrong with this code"
                    },
                    {
                        "username": "JordanDMcGuire",
                        "content": "Something missing from the explanation of this problem. When I run the code in my IDE I get the correct answer but when I run it on this site it says its wrong."
                    },
                    {
                        "username": "ingilteremuhasebe",
                        "content": "really good idea"
                    },
                    {
                        "username": "_SamChristopher_",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int reverse = 0;\\n        int originalNum=x;\\n        for(;x!=0;){\\n            int remind = x%10;\\n            reverse = reverse *10 +remind;\\n            x/=10;\\n        }\\n        if(reverse == originalNum){\\n            return true;\\n        }else{\\n            return false;\\n        }\\n    }\\n}\\n\\nwhat wrong in my code ?? i get error"
                    },
                    {
                        "username": "guptasam318",
                        "content": "Try to convert int reverse into long reverse "
                    },
                    {
                        "username": "guptasam318",
                        "content": "The real challenge was to solve this question without converting to string, almost all the top solutions are converting int to string.\nBut I managed to solve this question without converting to string....woohoooo :D\nif you are thinking how -121 will be marked as false then the solution is really really simple, you just need a condition for that (number<0)."
                    },
                    {
                        "username": "MynameisTri-2004",
                        "content": "Hi. I am a newbie. What happened to my code ? Can you help me to fix this code ? thank you for reading this comment . \nBool isPalindrome(int x){\n  int x  ;   \nfor (x=0, x<10, x++) \n  if (\"x is palindrome\") { \n  printf (\"It is true\") ;\n  scanf (\"%d\", x) ; \n  return true ; \n  }\n}\nelse if (\"x is not a palindrome\") {\n  printf (\"it is not true\"); \n  scanf (\"%d\", x); \n  return false ; \n} \n"
                    }
                ]
            },
            {
                "id": 1997513,
                "content": [
                    {
                        "username": "Anil-Gehlot",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n\\n        int num = x;\\n        int rev = 0;\\n\\n        \\n        if(x<0){\\n            return false;\\n        }\\n        while(num!=0){\\n            int l_digit = num%10;\\n            rev = (rev*10) + l_digit;\\n            num = num/10;\\n\\n        }\\n        if (x==rev){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n}"
                    },
                    {
                        "username": "Abhishek09012004",
                        "content": "why am I getting time limit exceeded as the result?"
                    },
                    {
                        "username": "nurim",
                        "content": "it\\'s so easy but i can\\'t solve 121 in my IDE return True and in leetcode it return like False,why....\\nlast_digit=x % 10\\nfirst_digit = x\\nwhile first_digit >= 10:\\n     first_digit//=10\\n\\nr=str(x)\\nif r == r[::-1]:\\n      print(\\'True\\')\\n else:\\n      print(\\'False\\')"
                    },
                    {
                        "username": "s99000",
                        "content": "#include<bits/stdc++.h>\\n\\nusing namespace std;\\nint main()\\n{\\nint x;\\ncin>>x;\\n   int c=x;\\n   int rev=0;\\n    while(x>0)\\n    {\\n        int ld=x%10;\\n     rev =(rev*10)+ld;\\n    x=x/10;\\n    }\\n    if (c==rev)\\n    cout<<\"true\";\\n    else \\n    cout<<\"false\";\\n}\\n\\n\\n what is the solution of this\\n"
                    },
                    {
                        "username": "theshrish46",
                        "content": "let pali = x.toString().split(\\'\\').reverse().join()\\nlet temp = x.toString()\\nreturn (temp == pali)\\n\\ncan anybody tell me whats wrong with this code"
                    },
                    {
                        "username": "JordanDMcGuire",
                        "content": "Something missing from the explanation of this problem. When I run the code in my IDE I get the correct answer but when I run it on this site it says its wrong."
                    },
                    {
                        "username": "ingilteremuhasebe",
                        "content": "really good idea"
                    },
                    {
                        "username": "_SamChristopher_",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int reverse = 0;\\n        int originalNum=x;\\n        for(;x!=0;){\\n            int remind = x%10;\\n            reverse = reverse *10 +remind;\\n            x/=10;\\n        }\\n        if(reverse == originalNum){\\n            return true;\\n        }else{\\n            return false;\\n        }\\n    }\\n}\\n\\nwhat wrong in my code ?? i get error"
                    },
                    {
                        "username": "guptasam318",
                        "content": "Try to convert int reverse into long reverse "
                    },
                    {
                        "username": "guptasam318",
                        "content": "The real challenge was to solve this question without converting to string, almost all the top solutions are converting int to string.\nBut I managed to solve this question without converting to string....woohoooo :D\nif you are thinking how -121 will be marked as false then the solution is really really simple, you just need a condition for that (number<0)."
                    },
                    {
                        "username": "MynameisTri-2004",
                        "content": "Hi. I am a newbie. What happened to my code ? Can you help me to fix this code ? thank you for reading this comment . \nBool isPalindrome(int x){\n  int x  ;   \nfor (x=0, x<10, x++) \n  if (\"x is palindrome\") { \n  printf (\"It is true\") ;\n  scanf (\"%d\", x) ; \n  return true ; \n  }\n}\nelse if (\"x is not a palindrome\") {\n  printf (\"it is not true\"); \n  scanf (\"%d\", x); \n  return false ; \n} \n"
                    }
                ]
            },
            {
                "id": 1996201,
                "content": [
                    {
                        "username": "Anil-Gehlot",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n\\n        int num = x;\\n        int rev = 0;\\n\\n        \\n        if(x<0){\\n            return false;\\n        }\\n        while(num!=0){\\n            int l_digit = num%10;\\n            rev = (rev*10) + l_digit;\\n            num = num/10;\\n\\n        }\\n        if (x==rev){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n}"
                    },
                    {
                        "username": "Abhishek09012004",
                        "content": "why am I getting time limit exceeded as the result?"
                    },
                    {
                        "username": "nurim",
                        "content": "it\\'s so easy but i can\\'t solve 121 in my IDE return True and in leetcode it return like False,why....\\nlast_digit=x % 10\\nfirst_digit = x\\nwhile first_digit >= 10:\\n     first_digit//=10\\n\\nr=str(x)\\nif r == r[::-1]:\\n      print(\\'True\\')\\n else:\\n      print(\\'False\\')"
                    },
                    {
                        "username": "s99000",
                        "content": "#include<bits/stdc++.h>\\n\\nusing namespace std;\\nint main()\\n{\\nint x;\\ncin>>x;\\n   int c=x;\\n   int rev=0;\\n    while(x>0)\\n    {\\n        int ld=x%10;\\n     rev =(rev*10)+ld;\\n    x=x/10;\\n    }\\n    if (c==rev)\\n    cout<<\"true\";\\n    else \\n    cout<<\"false\";\\n}\\n\\n\\n what is the solution of this\\n"
                    },
                    {
                        "username": "theshrish46",
                        "content": "let pali = x.toString().split(\\'\\').reverse().join()\\nlet temp = x.toString()\\nreturn (temp == pali)\\n\\ncan anybody tell me whats wrong with this code"
                    },
                    {
                        "username": "JordanDMcGuire",
                        "content": "Something missing from the explanation of this problem. When I run the code in my IDE I get the correct answer but when I run it on this site it says its wrong."
                    },
                    {
                        "username": "ingilteremuhasebe",
                        "content": "really good idea"
                    },
                    {
                        "username": "_SamChristopher_",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int reverse = 0;\\n        int originalNum=x;\\n        for(;x!=0;){\\n            int remind = x%10;\\n            reverse = reverse *10 +remind;\\n            x/=10;\\n        }\\n        if(reverse == originalNum){\\n            return true;\\n        }else{\\n            return false;\\n        }\\n    }\\n}\\n\\nwhat wrong in my code ?? i get error"
                    },
                    {
                        "username": "guptasam318",
                        "content": "Try to convert int reverse into long reverse "
                    },
                    {
                        "username": "guptasam318",
                        "content": "The real challenge was to solve this question without converting to string, almost all the top solutions are converting int to string.\nBut I managed to solve this question without converting to string....woohoooo :D\nif you are thinking how -121 will be marked as false then the solution is really really simple, you just need a condition for that (number<0)."
                    },
                    {
                        "username": "MynameisTri-2004",
                        "content": "Hi. I am a newbie. What happened to my code ? Can you help me to fix this code ? thank you for reading this comment . \nBool isPalindrome(int x){\n  int x  ;   \nfor (x=0, x<10, x++) \n  if (\"x is palindrome\") { \n  printf (\"It is true\") ;\n  scanf (\"%d\", x) ; \n  return true ; \n  }\n}\nelse if (\"x is not a palindrome\") {\n  printf (\"it is not true\"); \n  scanf (\"%d\", x); \n  return false ; \n} \n"
                    }
                ]
            },
            {
                "id": 1994518,
                "content": [
                    {
                        "username": "Anil-Gehlot",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n\\n        int num = x;\\n        int rev = 0;\\n\\n        \\n        if(x<0){\\n            return false;\\n        }\\n        while(num!=0){\\n            int l_digit = num%10;\\n            rev = (rev*10) + l_digit;\\n            num = num/10;\\n\\n        }\\n        if (x==rev){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n}"
                    },
                    {
                        "username": "Abhishek09012004",
                        "content": "why am I getting time limit exceeded as the result?"
                    },
                    {
                        "username": "nurim",
                        "content": "it\\'s so easy but i can\\'t solve 121 in my IDE return True and in leetcode it return like False,why....\\nlast_digit=x % 10\\nfirst_digit = x\\nwhile first_digit >= 10:\\n     first_digit//=10\\n\\nr=str(x)\\nif r == r[::-1]:\\n      print(\\'True\\')\\n else:\\n      print(\\'False\\')"
                    },
                    {
                        "username": "s99000",
                        "content": "#include<bits/stdc++.h>\\n\\nusing namespace std;\\nint main()\\n{\\nint x;\\ncin>>x;\\n   int c=x;\\n   int rev=0;\\n    while(x>0)\\n    {\\n        int ld=x%10;\\n     rev =(rev*10)+ld;\\n    x=x/10;\\n    }\\n    if (c==rev)\\n    cout<<\"true\";\\n    else \\n    cout<<\"false\";\\n}\\n\\n\\n what is the solution of this\\n"
                    },
                    {
                        "username": "theshrish46",
                        "content": "let pali = x.toString().split(\\'\\').reverse().join()\\nlet temp = x.toString()\\nreturn (temp == pali)\\n\\ncan anybody tell me whats wrong with this code"
                    },
                    {
                        "username": "JordanDMcGuire",
                        "content": "Something missing from the explanation of this problem. When I run the code in my IDE I get the correct answer but when I run it on this site it says its wrong."
                    },
                    {
                        "username": "ingilteremuhasebe",
                        "content": "really good idea"
                    },
                    {
                        "username": "_SamChristopher_",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int reverse = 0;\\n        int originalNum=x;\\n        for(;x!=0;){\\n            int remind = x%10;\\n            reverse = reverse *10 +remind;\\n            x/=10;\\n        }\\n        if(reverse == originalNum){\\n            return true;\\n        }else{\\n            return false;\\n        }\\n    }\\n}\\n\\nwhat wrong in my code ?? i get error"
                    },
                    {
                        "username": "guptasam318",
                        "content": "Try to convert int reverse into long reverse "
                    },
                    {
                        "username": "guptasam318",
                        "content": "The real challenge was to solve this question without converting to string, almost all the top solutions are converting int to string.\nBut I managed to solve this question without converting to string....woohoooo :D\nif you are thinking how -121 will be marked as false then the solution is really really simple, you just need a condition for that (number<0)."
                    },
                    {
                        "username": "MynameisTri-2004",
                        "content": "Hi. I am a newbie. What happened to my code ? Can you help me to fix this code ? thank you for reading this comment . \nBool isPalindrome(int x){\n  int x  ;   \nfor (x=0, x<10, x++) \n  if (\"x is palindrome\") { \n  printf (\"It is true\") ;\n  scanf (\"%d\", x) ; \n  return true ; \n  }\n}\nelse if (\"x is not a palindrome\") {\n  printf (\"it is not true\"); \n  scanf (\"%d\", x); \n  return false ; \n} \n"
                    }
                ]
            },
            {
                "id": 1994457,
                "content": [
                    {
                        "username": "Anil-Gehlot",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n\\n        int num = x;\\n        int rev = 0;\\n\\n        \\n        if(x<0){\\n            return false;\\n        }\\n        while(num!=0){\\n            int l_digit = num%10;\\n            rev = (rev*10) + l_digit;\\n            num = num/10;\\n\\n        }\\n        if (x==rev){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n}"
                    },
                    {
                        "username": "Abhishek09012004",
                        "content": "why am I getting time limit exceeded as the result?"
                    },
                    {
                        "username": "nurim",
                        "content": "it\\'s so easy but i can\\'t solve 121 in my IDE return True and in leetcode it return like False,why....\\nlast_digit=x % 10\\nfirst_digit = x\\nwhile first_digit >= 10:\\n     first_digit//=10\\n\\nr=str(x)\\nif r == r[::-1]:\\n      print(\\'True\\')\\n else:\\n      print(\\'False\\')"
                    },
                    {
                        "username": "s99000",
                        "content": "#include<bits/stdc++.h>\\n\\nusing namespace std;\\nint main()\\n{\\nint x;\\ncin>>x;\\n   int c=x;\\n   int rev=0;\\n    while(x>0)\\n    {\\n        int ld=x%10;\\n     rev =(rev*10)+ld;\\n    x=x/10;\\n    }\\n    if (c==rev)\\n    cout<<\"true\";\\n    else \\n    cout<<\"false\";\\n}\\n\\n\\n what is the solution of this\\n"
                    },
                    {
                        "username": "theshrish46",
                        "content": "let pali = x.toString().split(\\'\\').reverse().join()\\nlet temp = x.toString()\\nreturn (temp == pali)\\n\\ncan anybody tell me whats wrong with this code"
                    },
                    {
                        "username": "JordanDMcGuire",
                        "content": "Something missing from the explanation of this problem. When I run the code in my IDE I get the correct answer but when I run it on this site it says its wrong."
                    },
                    {
                        "username": "ingilteremuhasebe",
                        "content": "really good idea"
                    },
                    {
                        "username": "_SamChristopher_",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int reverse = 0;\\n        int originalNum=x;\\n        for(;x!=0;){\\n            int remind = x%10;\\n            reverse = reverse *10 +remind;\\n            x/=10;\\n        }\\n        if(reverse == originalNum){\\n            return true;\\n        }else{\\n            return false;\\n        }\\n    }\\n}\\n\\nwhat wrong in my code ?? i get error"
                    },
                    {
                        "username": "guptasam318",
                        "content": "Try to convert int reverse into long reverse "
                    },
                    {
                        "username": "guptasam318",
                        "content": "The real challenge was to solve this question without converting to string, almost all the top solutions are converting int to string.\nBut I managed to solve this question without converting to string....woohoooo :D\nif you are thinking how -121 will be marked as false then the solution is really really simple, you just need a condition for that (number<0)."
                    },
                    {
                        "username": "MynameisTri-2004",
                        "content": "Hi. I am a newbie. What happened to my code ? Can you help me to fix this code ? thank you for reading this comment . \nBool isPalindrome(int x){\n  int x  ;   \nfor (x=0, x<10, x++) \n  if (\"x is palindrome\") { \n  printf (\"It is true\") ;\n  scanf (\"%d\", x) ; \n  return true ; \n  }\n}\nelse if (\"x is not a palindrome\") {\n  printf (\"it is not true\"); \n  scanf (\"%d\", x); \n  return false ; \n} \n"
                    }
                ]
            },
            {
                "id": 1983130,
                "content": [
                    {
                        "username": "Anil-Gehlot",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n\\n        int num = x;\\n        int rev = 0;\\n\\n        \\n        if(x<0){\\n            return false;\\n        }\\n        while(num!=0){\\n            int l_digit = num%10;\\n            rev = (rev*10) + l_digit;\\n            num = num/10;\\n\\n        }\\n        if (x==rev){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n}"
                    },
                    {
                        "username": "Abhishek09012004",
                        "content": "why am I getting time limit exceeded as the result?"
                    },
                    {
                        "username": "nurim",
                        "content": "it\\'s so easy but i can\\'t solve 121 in my IDE return True and in leetcode it return like False,why....\\nlast_digit=x % 10\\nfirst_digit = x\\nwhile first_digit >= 10:\\n     first_digit//=10\\n\\nr=str(x)\\nif r == r[::-1]:\\n      print(\\'True\\')\\n else:\\n      print(\\'False\\')"
                    },
                    {
                        "username": "s99000",
                        "content": "#include<bits/stdc++.h>\\n\\nusing namespace std;\\nint main()\\n{\\nint x;\\ncin>>x;\\n   int c=x;\\n   int rev=0;\\n    while(x>0)\\n    {\\n        int ld=x%10;\\n     rev =(rev*10)+ld;\\n    x=x/10;\\n    }\\n    if (c==rev)\\n    cout<<\"true\";\\n    else \\n    cout<<\"false\";\\n}\\n\\n\\n what is the solution of this\\n"
                    },
                    {
                        "username": "theshrish46",
                        "content": "let pali = x.toString().split(\\'\\').reverse().join()\\nlet temp = x.toString()\\nreturn (temp == pali)\\n\\ncan anybody tell me whats wrong with this code"
                    },
                    {
                        "username": "JordanDMcGuire",
                        "content": "Something missing from the explanation of this problem. When I run the code in my IDE I get the correct answer but when I run it on this site it says its wrong."
                    },
                    {
                        "username": "ingilteremuhasebe",
                        "content": "really good idea"
                    },
                    {
                        "username": "_SamChristopher_",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int reverse = 0;\\n        int originalNum=x;\\n        for(;x!=0;){\\n            int remind = x%10;\\n            reverse = reverse *10 +remind;\\n            x/=10;\\n        }\\n        if(reverse == originalNum){\\n            return true;\\n        }else{\\n            return false;\\n        }\\n    }\\n}\\n\\nwhat wrong in my code ?? i get error"
                    },
                    {
                        "username": "guptasam318",
                        "content": "Try to convert int reverse into long reverse "
                    },
                    {
                        "username": "guptasam318",
                        "content": "The real challenge was to solve this question without converting to string, almost all the top solutions are converting int to string.\nBut I managed to solve this question without converting to string....woohoooo :D\nif you are thinking how -121 will be marked as false then the solution is really really simple, you just need a condition for that (number<0)."
                    },
                    {
                        "username": "MynameisTri-2004",
                        "content": "Hi. I am a newbie. What happened to my code ? Can you help me to fix this code ? thank you for reading this comment . \nBool isPalindrome(int x){\n  int x  ;   \nfor (x=0, x<10, x++) \n  if (\"x is palindrome\") { \n  printf (\"It is true\") ;\n  scanf (\"%d\", x) ; \n  return true ; \n  }\n}\nelse if (\"x is not a palindrome\") {\n  printf (\"it is not true\"); \n  scanf (\"%d\", x); \n  return false ; \n} \n"
                    }
                ]
            },
            {
                "id": 1978337,
                "content": [
                    {
                        "username": "Anil-Gehlot",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n\\n        int num = x;\\n        int rev = 0;\\n\\n        \\n        if(x<0){\\n            return false;\\n        }\\n        while(num!=0){\\n            int l_digit = num%10;\\n            rev = (rev*10) + l_digit;\\n            num = num/10;\\n\\n        }\\n        if (x==rev){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n}"
                    },
                    {
                        "username": "Abhishek09012004",
                        "content": "why am I getting time limit exceeded as the result?"
                    },
                    {
                        "username": "nurim",
                        "content": "it\\'s so easy but i can\\'t solve 121 in my IDE return True and in leetcode it return like False,why....\\nlast_digit=x % 10\\nfirst_digit = x\\nwhile first_digit >= 10:\\n     first_digit//=10\\n\\nr=str(x)\\nif r == r[::-1]:\\n      print(\\'True\\')\\n else:\\n      print(\\'False\\')"
                    },
                    {
                        "username": "s99000",
                        "content": "#include<bits/stdc++.h>\\n\\nusing namespace std;\\nint main()\\n{\\nint x;\\ncin>>x;\\n   int c=x;\\n   int rev=0;\\n    while(x>0)\\n    {\\n        int ld=x%10;\\n     rev =(rev*10)+ld;\\n    x=x/10;\\n    }\\n    if (c==rev)\\n    cout<<\"true\";\\n    else \\n    cout<<\"false\";\\n}\\n\\n\\n what is the solution of this\\n"
                    },
                    {
                        "username": "theshrish46",
                        "content": "let pali = x.toString().split(\\'\\').reverse().join()\\nlet temp = x.toString()\\nreturn (temp == pali)\\n\\ncan anybody tell me whats wrong with this code"
                    },
                    {
                        "username": "JordanDMcGuire",
                        "content": "Something missing from the explanation of this problem. When I run the code in my IDE I get the correct answer but when I run it on this site it says its wrong."
                    },
                    {
                        "username": "ingilteremuhasebe",
                        "content": "really good idea"
                    },
                    {
                        "username": "_SamChristopher_",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int reverse = 0;\\n        int originalNum=x;\\n        for(;x!=0;){\\n            int remind = x%10;\\n            reverse = reverse *10 +remind;\\n            x/=10;\\n        }\\n        if(reverse == originalNum){\\n            return true;\\n        }else{\\n            return false;\\n        }\\n    }\\n}\\n\\nwhat wrong in my code ?? i get error"
                    },
                    {
                        "username": "guptasam318",
                        "content": "Try to convert int reverse into long reverse "
                    },
                    {
                        "username": "guptasam318",
                        "content": "The real challenge was to solve this question without converting to string, almost all the top solutions are converting int to string.\nBut I managed to solve this question without converting to string....woohoooo :D\nif you are thinking how -121 will be marked as false then the solution is really really simple, you just need a condition for that (number<0)."
                    },
                    {
                        "username": "MynameisTri-2004",
                        "content": "Hi. I am a newbie. What happened to my code ? Can you help me to fix this code ? thank you for reading this comment . \nBool isPalindrome(int x){\n  int x  ;   \nfor (x=0, x<10, x++) \n  if (\"x is palindrome\") { \n  printf (\"It is true\") ;\n  scanf (\"%d\", x) ; \n  return true ; \n  }\n}\nelse if (\"x is not a palindrome\") {\n  printf (\"it is not true\"); \n  scanf (\"%d\", x); \n  return false ; \n} \n"
                    }
                ]
            },
            {
                "id": 1978048,
                "content": [
                    {
                        "username": "piyush_malviya22",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int rev = 0;\\n        int temp = x;\\n        while(x != 0){\\n            int d = x%10;\\n            rev = rev*10+d;\\n            x = x/10;\\n            if(rev >= 0){\\n            if(rev == temp){\\n                \\n                return true;\\n            }\\n            }\\n\\n    }\\n    return false;\\n}\\n}\\n\\nthis give wrong answer in case x=0"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "class Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}"
                    },
                    {
                        "username": "SSelahattin",
                        "content": "Is there anyone solved this with 8ms runtime \\nI searched but couldn\\'t find\\nmy best try was 9ms "
                    },
                    {
                        "username": "mbedru",
                        "content": "6ms, 42.97mb\\n\\nif(x<0) return false;\\n\\n        char [] xString = String.valueOf(x).toCharArray();\\n        int a=0, b=xString.length-1;\\n        while(a!=b && a<b) {\\n            if(a==b) break;\\n            if(xString[a] != xString[b]) return false;\\n            a++; b--;"
                    },
                    {
                        "username": "piyush_malviya22",
                        "content": "my is also 9ms"
                    },
                    {
                        "username": "CamMcG",
                        "content": "I know this isn\\'t the most efficient way of coding this but I\\'m confused on why it\\'s wrong please may you reply if you understand my mistake as when i print palindromeChecker and x they both equal the same number for 121 but don\\'t equal eachother\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        convertedX = str(x)\\n        convertedXlen = len(convertedX)\\n        palindromeChecker = \"\"\\n        for i in range(convertedXlen):\\n            numberGrabber = convertedX[-i - 1]\\n            palindromeChecker += numberGrabber\\n        print(palindromeChecker)\\n        print(x)\\n        if palindromeChecker == x:\\n            return True\\n        else:\\n            return False\\n\\n\\n            "
                    },
                    {
                        "username": "Divvyesh",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        StringBuilder a = new StringBuilder(Integer.toString(x));\\n        if(a.equals(a.reverse())){\\n            return true;\\n        }\\n        else{\\n            return false; \\n        }\\n    }\\n}\\n\\nwhat is wrong with my code"
                    },
                    {
                        "username": "ASRISATWIK",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        xi=str(x)\\n        s=xi[::-1]\\n        if(x==s):\\n            return True\\n        else:\\n            return False\\nwhy is it showing wrong for x=121"
                    },
                    {
                        "username": "ASRISATWIK",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        xi=str(x)\\n        s=xi[::-1]\\n        if(s==x):\\n            print(\"True\")\\n        else:\\n            print(\"False\")\\n\\n  IT IS SHOWING ERROR\\n\\n\\nfor this code the \\nstdout is False\\n output is false\\n expected is true"
                    },
                    {
                        "username": "rahulthakurking2017",
                        "content": "Best Solution for C Language \\n\\nbool isPalindrome(int x){\\nint num=x,rem;\\nint sum=0;\\n    while(x>0){\\n        rem=x%10;\\n        sum=(sum*10)+rem;\\n        x/=10;\\n    }\\n    if(sum==num)\\n    {\\n        return true;\\n    }\\n    else\\n    {\\n        return false;\\n    }"
                    },
                    {
                        "username": "Janani_2104",
                        "content": "what is the issue in my code.. i got a error in case 1?\\nbool isPalindrome(int x){\\n    int r,sum=0,temp;\\n    x=temp;\\n    while(x>0)\\n    {\\n        r=x%10;\\n        sum=(sum*10)+r;\\n        x=x/10;\\n    }\\n\\n     return sum;\\n}"
                    },
                    {
                        "username": "abhishekmuhuri",
                        "content": "Read the example 2: They are assuming the x value as a string and checking for pallin. x = -121. Reversing as a text will give you 121-  . Which is not equal to -121.  So just return false for all negative values of x"
                    },
                    {
                        "username": "amanthapliyal14",
                        "content": "Hey please explain why -121 is not palindrone when i reverse it i get -121 which is equal to that no"
                    },
                    {
                        "username": "Rehan_khan_07",
                        "content": "bro listen last digit of -121 is 1 and first digit of -121 is -1 . see here and compare the last digit and first digit of given number ,1 and -1 is equal ? ofcourse not .\\nhope you understand.\\uD83D\\uDE05\\uD83D\\uDE05"
                    },
                    {
                        "username": "adarsh_91",
                        "content": "because modular function does not work for negative number"
                    },
                    {
                        "username": "wailmansourouahchia",
                        "content": "no when you revers it you'll get 121-.  you have to treat it like string i wish you understand\n"
                    }
                ]
            },
            {
                "id": 1975173,
                "content": [
                    {
                        "username": "piyush_malviya22",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int rev = 0;\\n        int temp = x;\\n        while(x != 0){\\n            int d = x%10;\\n            rev = rev*10+d;\\n            x = x/10;\\n            if(rev >= 0){\\n            if(rev == temp){\\n                \\n                return true;\\n            }\\n            }\\n\\n    }\\n    return false;\\n}\\n}\\n\\nthis give wrong answer in case x=0"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "class Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}"
                    },
                    {
                        "username": "SSelahattin",
                        "content": "Is there anyone solved this with 8ms runtime \\nI searched but couldn\\'t find\\nmy best try was 9ms "
                    },
                    {
                        "username": "mbedru",
                        "content": "6ms, 42.97mb\\n\\nif(x<0) return false;\\n\\n        char [] xString = String.valueOf(x).toCharArray();\\n        int a=0, b=xString.length-1;\\n        while(a!=b && a<b) {\\n            if(a==b) break;\\n            if(xString[a] != xString[b]) return false;\\n            a++; b--;"
                    },
                    {
                        "username": "piyush_malviya22",
                        "content": "my is also 9ms"
                    },
                    {
                        "username": "CamMcG",
                        "content": "I know this isn\\'t the most efficient way of coding this but I\\'m confused on why it\\'s wrong please may you reply if you understand my mistake as when i print palindromeChecker and x they both equal the same number for 121 but don\\'t equal eachother\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        convertedX = str(x)\\n        convertedXlen = len(convertedX)\\n        palindromeChecker = \"\"\\n        for i in range(convertedXlen):\\n            numberGrabber = convertedX[-i - 1]\\n            palindromeChecker += numberGrabber\\n        print(palindromeChecker)\\n        print(x)\\n        if palindromeChecker == x:\\n            return True\\n        else:\\n            return False\\n\\n\\n            "
                    },
                    {
                        "username": "Divvyesh",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        StringBuilder a = new StringBuilder(Integer.toString(x));\\n        if(a.equals(a.reverse())){\\n            return true;\\n        }\\n        else{\\n            return false; \\n        }\\n    }\\n}\\n\\nwhat is wrong with my code"
                    },
                    {
                        "username": "ASRISATWIK",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        xi=str(x)\\n        s=xi[::-1]\\n        if(x==s):\\n            return True\\n        else:\\n            return False\\nwhy is it showing wrong for x=121"
                    },
                    {
                        "username": "ASRISATWIK",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        xi=str(x)\\n        s=xi[::-1]\\n        if(s==x):\\n            print(\"True\")\\n        else:\\n            print(\"False\")\\n\\n  IT IS SHOWING ERROR\\n\\n\\nfor this code the \\nstdout is False\\n output is false\\n expected is true"
                    },
                    {
                        "username": "rahulthakurking2017",
                        "content": "Best Solution for C Language \\n\\nbool isPalindrome(int x){\\nint num=x,rem;\\nint sum=0;\\n    while(x>0){\\n        rem=x%10;\\n        sum=(sum*10)+rem;\\n        x/=10;\\n    }\\n    if(sum==num)\\n    {\\n        return true;\\n    }\\n    else\\n    {\\n        return false;\\n    }"
                    },
                    {
                        "username": "Janani_2104",
                        "content": "what is the issue in my code.. i got a error in case 1?\\nbool isPalindrome(int x){\\n    int r,sum=0,temp;\\n    x=temp;\\n    while(x>0)\\n    {\\n        r=x%10;\\n        sum=(sum*10)+r;\\n        x=x/10;\\n    }\\n\\n     return sum;\\n}"
                    },
                    {
                        "username": "abhishekmuhuri",
                        "content": "Read the example 2: They are assuming the x value as a string and checking for pallin. x = -121. Reversing as a text will give you 121-  . Which is not equal to -121.  So just return false for all negative values of x"
                    },
                    {
                        "username": "amanthapliyal14",
                        "content": "Hey please explain why -121 is not palindrone when i reverse it i get -121 which is equal to that no"
                    },
                    {
                        "username": "Rehan_khan_07",
                        "content": "bro listen last digit of -121 is 1 and first digit of -121 is -1 . see here and compare the last digit and first digit of given number ,1 and -1 is equal ? ofcourse not .\\nhope you understand.\\uD83D\\uDE05\\uD83D\\uDE05"
                    },
                    {
                        "username": "adarsh_91",
                        "content": "because modular function does not work for negative number"
                    },
                    {
                        "username": "wailmansourouahchia",
                        "content": "no when you revers it you'll get 121-.  you have to treat it like string i wish you understand\n"
                    }
                ]
            },
            {
                "id": 1974947,
                "content": [
                    {
                        "username": "piyush_malviya22",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int rev = 0;\\n        int temp = x;\\n        while(x != 0){\\n            int d = x%10;\\n            rev = rev*10+d;\\n            x = x/10;\\n            if(rev >= 0){\\n            if(rev == temp){\\n                \\n                return true;\\n            }\\n            }\\n\\n    }\\n    return false;\\n}\\n}\\n\\nthis give wrong answer in case x=0"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "class Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}"
                    },
                    {
                        "username": "SSelahattin",
                        "content": "Is there anyone solved this with 8ms runtime \\nI searched but couldn\\'t find\\nmy best try was 9ms "
                    },
                    {
                        "username": "mbedru",
                        "content": "6ms, 42.97mb\\n\\nif(x<0) return false;\\n\\n        char [] xString = String.valueOf(x).toCharArray();\\n        int a=0, b=xString.length-1;\\n        while(a!=b && a<b) {\\n            if(a==b) break;\\n            if(xString[a] != xString[b]) return false;\\n            a++; b--;"
                    },
                    {
                        "username": "piyush_malviya22",
                        "content": "my is also 9ms"
                    },
                    {
                        "username": "CamMcG",
                        "content": "I know this isn\\'t the most efficient way of coding this but I\\'m confused on why it\\'s wrong please may you reply if you understand my mistake as when i print palindromeChecker and x they both equal the same number for 121 but don\\'t equal eachother\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        convertedX = str(x)\\n        convertedXlen = len(convertedX)\\n        palindromeChecker = \"\"\\n        for i in range(convertedXlen):\\n            numberGrabber = convertedX[-i - 1]\\n            palindromeChecker += numberGrabber\\n        print(palindromeChecker)\\n        print(x)\\n        if palindromeChecker == x:\\n            return True\\n        else:\\n            return False\\n\\n\\n            "
                    },
                    {
                        "username": "Divvyesh",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        StringBuilder a = new StringBuilder(Integer.toString(x));\\n        if(a.equals(a.reverse())){\\n            return true;\\n        }\\n        else{\\n            return false; \\n        }\\n    }\\n}\\n\\nwhat is wrong with my code"
                    },
                    {
                        "username": "ASRISATWIK",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        xi=str(x)\\n        s=xi[::-1]\\n        if(x==s):\\n            return True\\n        else:\\n            return False\\nwhy is it showing wrong for x=121"
                    },
                    {
                        "username": "ASRISATWIK",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        xi=str(x)\\n        s=xi[::-1]\\n        if(s==x):\\n            print(\"True\")\\n        else:\\n            print(\"False\")\\n\\n  IT IS SHOWING ERROR\\n\\n\\nfor this code the \\nstdout is False\\n output is false\\n expected is true"
                    },
                    {
                        "username": "rahulthakurking2017",
                        "content": "Best Solution for C Language \\n\\nbool isPalindrome(int x){\\nint num=x,rem;\\nint sum=0;\\n    while(x>0){\\n        rem=x%10;\\n        sum=(sum*10)+rem;\\n        x/=10;\\n    }\\n    if(sum==num)\\n    {\\n        return true;\\n    }\\n    else\\n    {\\n        return false;\\n    }"
                    },
                    {
                        "username": "Janani_2104",
                        "content": "what is the issue in my code.. i got a error in case 1?\\nbool isPalindrome(int x){\\n    int r,sum=0,temp;\\n    x=temp;\\n    while(x>0)\\n    {\\n        r=x%10;\\n        sum=(sum*10)+r;\\n        x=x/10;\\n    }\\n\\n     return sum;\\n}"
                    },
                    {
                        "username": "abhishekmuhuri",
                        "content": "Read the example 2: They are assuming the x value as a string and checking for pallin. x = -121. Reversing as a text will give you 121-  . Which is not equal to -121.  So just return false for all negative values of x"
                    },
                    {
                        "username": "amanthapliyal14",
                        "content": "Hey please explain why -121 is not palindrone when i reverse it i get -121 which is equal to that no"
                    },
                    {
                        "username": "Rehan_khan_07",
                        "content": "bro listen last digit of -121 is 1 and first digit of -121 is -1 . see here and compare the last digit and first digit of given number ,1 and -1 is equal ? ofcourse not .\\nhope you understand.\\uD83D\\uDE05\\uD83D\\uDE05"
                    },
                    {
                        "username": "adarsh_91",
                        "content": "because modular function does not work for negative number"
                    },
                    {
                        "username": "wailmansourouahchia",
                        "content": "no when you revers it you'll get 121-.  you have to treat it like string i wish you understand\n"
                    }
                ]
            },
            {
                "id": 1966197,
                "content": [
                    {
                        "username": "piyush_malviya22",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int rev = 0;\\n        int temp = x;\\n        while(x != 0){\\n            int d = x%10;\\n            rev = rev*10+d;\\n            x = x/10;\\n            if(rev >= 0){\\n            if(rev == temp){\\n                \\n                return true;\\n            }\\n            }\\n\\n    }\\n    return false;\\n}\\n}\\n\\nthis give wrong answer in case x=0"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "class Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}"
                    },
                    {
                        "username": "SSelahattin",
                        "content": "Is there anyone solved this with 8ms runtime \\nI searched but couldn\\'t find\\nmy best try was 9ms "
                    },
                    {
                        "username": "mbedru",
                        "content": "6ms, 42.97mb\\n\\nif(x<0) return false;\\n\\n        char [] xString = String.valueOf(x).toCharArray();\\n        int a=0, b=xString.length-1;\\n        while(a!=b && a<b) {\\n            if(a==b) break;\\n            if(xString[a] != xString[b]) return false;\\n            a++; b--;"
                    },
                    {
                        "username": "piyush_malviya22",
                        "content": "my is also 9ms"
                    },
                    {
                        "username": "CamMcG",
                        "content": "I know this isn\\'t the most efficient way of coding this but I\\'m confused on why it\\'s wrong please may you reply if you understand my mistake as when i print palindromeChecker and x they both equal the same number for 121 but don\\'t equal eachother\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        convertedX = str(x)\\n        convertedXlen = len(convertedX)\\n        palindromeChecker = \"\"\\n        for i in range(convertedXlen):\\n            numberGrabber = convertedX[-i - 1]\\n            palindromeChecker += numberGrabber\\n        print(palindromeChecker)\\n        print(x)\\n        if palindromeChecker == x:\\n            return True\\n        else:\\n            return False\\n\\n\\n            "
                    },
                    {
                        "username": "Divvyesh",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        StringBuilder a = new StringBuilder(Integer.toString(x));\\n        if(a.equals(a.reverse())){\\n            return true;\\n        }\\n        else{\\n            return false; \\n        }\\n    }\\n}\\n\\nwhat is wrong with my code"
                    },
                    {
                        "username": "ASRISATWIK",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        xi=str(x)\\n        s=xi[::-1]\\n        if(x==s):\\n            return True\\n        else:\\n            return False\\nwhy is it showing wrong for x=121"
                    },
                    {
                        "username": "ASRISATWIK",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        xi=str(x)\\n        s=xi[::-1]\\n        if(s==x):\\n            print(\"True\")\\n        else:\\n            print(\"False\")\\n\\n  IT IS SHOWING ERROR\\n\\n\\nfor this code the \\nstdout is False\\n output is false\\n expected is true"
                    },
                    {
                        "username": "rahulthakurking2017",
                        "content": "Best Solution for C Language \\n\\nbool isPalindrome(int x){\\nint num=x,rem;\\nint sum=0;\\n    while(x>0){\\n        rem=x%10;\\n        sum=(sum*10)+rem;\\n        x/=10;\\n    }\\n    if(sum==num)\\n    {\\n        return true;\\n    }\\n    else\\n    {\\n        return false;\\n    }"
                    },
                    {
                        "username": "Janani_2104",
                        "content": "what is the issue in my code.. i got a error in case 1?\\nbool isPalindrome(int x){\\n    int r,sum=0,temp;\\n    x=temp;\\n    while(x>0)\\n    {\\n        r=x%10;\\n        sum=(sum*10)+r;\\n        x=x/10;\\n    }\\n\\n     return sum;\\n}"
                    },
                    {
                        "username": "abhishekmuhuri",
                        "content": "Read the example 2: They are assuming the x value as a string and checking for pallin. x = -121. Reversing as a text will give you 121-  . Which is not equal to -121.  So just return false for all negative values of x"
                    },
                    {
                        "username": "amanthapliyal14",
                        "content": "Hey please explain why -121 is not palindrone when i reverse it i get -121 which is equal to that no"
                    },
                    {
                        "username": "Rehan_khan_07",
                        "content": "bro listen last digit of -121 is 1 and first digit of -121 is -1 . see here and compare the last digit and first digit of given number ,1 and -1 is equal ? ofcourse not .\\nhope you understand.\\uD83D\\uDE05\\uD83D\\uDE05"
                    },
                    {
                        "username": "adarsh_91",
                        "content": "because modular function does not work for negative number"
                    },
                    {
                        "username": "wailmansourouahchia",
                        "content": "no when you revers it you'll get 121-.  you have to treat it like string i wish you understand\n"
                    }
                ]
            },
            {
                "id": 1960174,
                "content": [
                    {
                        "username": "piyush_malviya22",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int rev = 0;\\n        int temp = x;\\n        while(x != 0){\\n            int d = x%10;\\n            rev = rev*10+d;\\n            x = x/10;\\n            if(rev >= 0){\\n            if(rev == temp){\\n                \\n                return true;\\n            }\\n            }\\n\\n    }\\n    return false;\\n}\\n}\\n\\nthis give wrong answer in case x=0"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "class Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}"
                    },
                    {
                        "username": "SSelahattin",
                        "content": "Is there anyone solved this with 8ms runtime \\nI searched but couldn\\'t find\\nmy best try was 9ms "
                    },
                    {
                        "username": "mbedru",
                        "content": "6ms, 42.97mb\\n\\nif(x<0) return false;\\n\\n        char [] xString = String.valueOf(x).toCharArray();\\n        int a=0, b=xString.length-1;\\n        while(a!=b && a<b) {\\n            if(a==b) break;\\n            if(xString[a] != xString[b]) return false;\\n            a++; b--;"
                    },
                    {
                        "username": "piyush_malviya22",
                        "content": "my is also 9ms"
                    },
                    {
                        "username": "CamMcG",
                        "content": "I know this isn\\'t the most efficient way of coding this but I\\'m confused on why it\\'s wrong please may you reply if you understand my mistake as when i print palindromeChecker and x they both equal the same number for 121 but don\\'t equal eachother\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        convertedX = str(x)\\n        convertedXlen = len(convertedX)\\n        palindromeChecker = \"\"\\n        for i in range(convertedXlen):\\n            numberGrabber = convertedX[-i - 1]\\n            palindromeChecker += numberGrabber\\n        print(palindromeChecker)\\n        print(x)\\n        if palindromeChecker == x:\\n            return True\\n        else:\\n            return False\\n\\n\\n            "
                    },
                    {
                        "username": "Divvyesh",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        StringBuilder a = new StringBuilder(Integer.toString(x));\\n        if(a.equals(a.reverse())){\\n            return true;\\n        }\\n        else{\\n            return false; \\n        }\\n    }\\n}\\n\\nwhat is wrong with my code"
                    },
                    {
                        "username": "ASRISATWIK",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        xi=str(x)\\n        s=xi[::-1]\\n        if(x==s):\\n            return True\\n        else:\\n            return False\\nwhy is it showing wrong for x=121"
                    },
                    {
                        "username": "ASRISATWIK",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        xi=str(x)\\n        s=xi[::-1]\\n        if(s==x):\\n            print(\"True\")\\n        else:\\n            print(\"False\")\\n\\n  IT IS SHOWING ERROR\\n\\n\\nfor this code the \\nstdout is False\\n output is false\\n expected is true"
                    },
                    {
                        "username": "rahulthakurking2017",
                        "content": "Best Solution for C Language \\n\\nbool isPalindrome(int x){\\nint num=x,rem;\\nint sum=0;\\n    while(x>0){\\n        rem=x%10;\\n        sum=(sum*10)+rem;\\n        x/=10;\\n    }\\n    if(sum==num)\\n    {\\n        return true;\\n    }\\n    else\\n    {\\n        return false;\\n    }"
                    },
                    {
                        "username": "Janani_2104",
                        "content": "what is the issue in my code.. i got a error in case 1?\\nbool isPalindrome(int x){\\n    int r,sum=0,temp;\\n    x=temp;\\n    while(x>0)\\n    {\\n        r=x%10;\\n        sum=(sum*10)+r;\\n        x=x/10;\\n    }\\n\\n     return sum;\\n}"
                    },
                    {
                        "username": "abhishekmuhuri",
                        "content": "Read the example 2: They are assuming the x value as a string and checking for pallin. x = -121. Reversing as a text will give you 121-  . Which is not equal to -121.  So just return false for all negative values of x"
                    },
                    {
                        "username": "amanthapliyal14",
                        "content": "Hey please explain why -121 is not palindrone when i reverse it i get -121 which is equal to that no"
                    },
                    {
                        "username": "Rehan_khan_07",
                        "content": "bro listen last digit of -121 is 1 and first digit of -121 is -1 . see here and compare the last digit and first digit of given number ,1 and -1 is equal ? ofcourse not .\\nhope you understand.\\uD83D\\uDE05\\uD83D\\uDE05"
                    },
                    {
                        "username": "adarsh_91",
                        "content": "because modular function does not work for negative number"
                    },
                    {
                        "username": "wailmansourouahchia",
                        "content": "no when you revers it you'll get 121-.  you have to treat it like string i wish you understand\n"
                    }
                ]
            },
            {
                "id": 1957078,
                "content": [
                    {
                        "username": "piyush_malviya22",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int rev = 0;\\n        int temp = x;\\n        while(x != 0){\\n            int d = x%10;\\n            rev = rev*10+d;\\n            x = x/10;\\n            if(rev >= 0){\\n            if(rev == temp){\\n                \\n                return true;\\n            }\\n            }\\n\\n    }\\n    return false;\\n}\\n}\\n\\nthis give wrong answer in case x=0"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "class Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}"
                    },
                    {
                        "username": "SSelahattin",
                        "content": "Is there anyone solved this with 8ms runtime \\nI searched but couldn\\'t find\\nmy best try was 9ms "
                    },
                    {
                        "username": "mbedru",
                        "content": "6ms, 42.97mb\\n\\nif(x<0) return false;\\n\\n        char [] xString = String.valueOf(x).toCharArray();\\n        int a=0, b=xString.length-1;\\n        while(a!=b && a<b) {\\n            if(a==b) break;\\n            if(xString[a] != xString[b]) return false;\\n            a++; b--;"
                    },
                    {
                        "username": "piyush_malviya22",
                        "content": "my is also 9ms"
                    },
                    {
                        "username": "CamMcG",
                        "content": "I know this isn\\'t the most efficient way of coding this but I\\'m confused on why it\\'s wrong please may you reply if you understand my mistake as when i print palindromeChecker and x they both equal the same number for 121 but don\\'t equal eachother\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        convertedX = str(x)\\n        convertedXlen = len(convertedX)\\n        palindromeChecker = \"\"\\n        for i in range(convertedXlen):\\n            numberGrabber = convertedX[-i - 1]\\n            palindromeChecker += numberGrabber\\n        print(palindromeChecker)\\n        print(x)\\n        if palindromeChecker == x:\\n            return True\\n        else:\\n            return False\\n\\n\\n            "
                    },
                    {
                        "username": "Divvyesh",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        StringBuilder a = new StringBuilder(Integer.toString(x));\\n        if(a.equals(a.reverse())){\\n            return true;\\n        }\\n        else{\\n            return false; \\n        }\\n    }\\n}\\n\\nwhat is wrong with my code"
                    },
                    {
                        "username": "ASRISATWIK",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        xi=str(x)\\n        s=xi[::-1]\\n        if(x==s):\\n            return True\\n        else:\\n            return False\\nwhy is it showing wrong for x=121"
                    },
                    {
                        "username": "ASRISATWIK",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        xi=str(x)\\n        s=xi[::-1]\\n        if(s==x):\\n            print(\"True\")\\n        else:\\n            print(\"False\")\\n\\n  IT IS SHOWING ERROR\\n\\n\\nfor this code the \\nstdout is False\\n output is false\\n expected is true"
                    },
                    {
                        "username": "rahulthakurking2017",
                        "content": "Best Solution for C Language \\n\\nbool isPalindrome(int x){\\nint num=x,rem;\\nint sum=0;\\n    while(x>0){\\n        rem=x%10;\\n        sum=(sum*10)+rem;\\n        x/=10;\\n    }\\n    if(sum==num)\\n    {\\n        return true;\\n    }\\n    else\\n    {\\n        return false;\\n    }"
                    },
                    {
                        "username": "Janani_2104",
                        "content": "what is the issue in my code.. i got a error in case 1?\\nbool isPalindrome(int x){\\n    int r,sum=0,temp;\\n    x=temp;\\n    while(x>0)\\n    {\\n        r=x%10;\\n        sum=(sum*10)+r;\\n        x=x/10;\\n    }\\n\\n     return sum;\\n}"
                    },
                    {
                        "username": "abhishekmuhuri",
                        "content": "Read the example 2: They are assuming the x value as a string and checking for pallin. x = -121. Reversing as a text will give you 121-  . Which is not equal to -121.  So just return false for all negative values of x"
                    },
                    {
                        "username": "amanthapliyal14",
                        "content": "Hey please explain why -121 is not palindrone when i reverse it i get -121 which is equal to that no"
                    },
                    {
                        "username": "Rehan_khan_07",
                        "content": "bro listen last digit of -121 is 1 and first digit of -121 is -1 . see here and compare the last digit and first digit of given number ,1 and -1 is equal ? ofcourse not .\\nhope you understand.\\uD83D\\uDE05\\uD83D\\uDE05"
                    },
                    {
                        "username": "adarsh_91",
                        "content": "because modular function does not work for negative number"
                    },
                    {
                        "username": "wailmansourouahchia",
                        "content": "no when you revers it you'll get 121-.  you have to treat it like string i wish you understand\n"
                    }
                ]
            },
            {
                "id": 1956501,
                "content": [
                    {
                        "username": "piyush_malviya22",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int rev = 0;\\n        int temp = x;\\n        while(x != 0){\\n            int d = x%10;\\n            rev = rev*10+d;\\n            x = x/10;\\n            if(rev >= 0){\\n            if(rev == temp){\\n                \\n                return true;\\n            }\\n            }\\n\\n    }\\n    return false;\\n}\\n}\\n\\nthis give wrong answer in case x=0"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "class Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}"
                    },
                    {
                        "username": "SSelahattin",
                        "content": "Is there anyone solved this with 8ms runtime \\nI searched but couldn\\'t find\\nmy best try was 9ms "
                    },
                    {
                        "username": "mbedru",
                        "content": "6ms, 42.97mb\\n\\nif(x<0) return false;\\n\\n        char [] xString = String.valueOf(x).toCharArray();\\n        int a=0, b=xString.length-1;\\n        while(a!=b && a<b) {\\n            if(a==b) break;\\n            if(xString[a] != xString[b]) return false;\\n            a++; b--;"
                    },
                    {
                        "username": "piyush_malviya22",
                        "content": "my is also 9ms"
                    },
                    {
                        "username": "CamMcG",
                        "content": "I know this isn\\'t the most efficient way of coding this but I\\'m confused on why it\\'s wrong please may you reply if you understand my mistake as when i print palindromeChecker and x they both equal the same number for 121 but don\\'t equal eachother\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        convertedX = str(x)\\n        convertedXlen = len(convertedX)\\n        palindromeChecker = \"\"\\n        for i in range(convertedXlen):\\n            numberGrabber = convertedX[-i - 1]\\n            palindromeChecker += numberGrabber\\n        print(palindromeChecker)\\n        print(x)\\n        if palindromeChecker == x:\\n            return True\\n        else:\\n            return False\\n\\n\\n            "
                    },
                    {
                        "username": "Divvyesh",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        StringBuilder a = new StringBuilder(Integer.toString(x));\\n        if(a.equals(a.reverse())){\\n            return true;\\n        }\\n        else{\\n            return false; \\n        }\\n    }\\n}\\n\\nwhat is wrong with my code"
                    },
                    {
                        "username": "ASRISATWIK",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        xi=str(x)\\n        s=xi[::-1]\\n        if(x==s):\\n            return True\\n        else:\\n            return False\\nwhy is it showing wrong for x=121"
                    },
                    {
                        "username": "ASRISATWIK",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        xi=str(x)\\n        s=xi[::-1]\\n        if(s==x):\\n            print(\"True\")\\n        else:\\n            print(\"False\")\\n\\n  IT IS SHOWING ERROR\\n\\n\\nfor this code the \\nstdout is False\\n output is false\\n expected is true"
                    },
                    {
                        "username": "rahulthakurking2017",
                        "content": "Best Solution for C Language \\n\\nbool isPalindrome(int x){\\nint num=x,rem;\\nint sum=0;\\n    while(x>0){\\n        rem=x%10;\\n        sum=(sum*10)+rem;\\n        x/=10;\\n    }\\n    if(sum==num)\\n    {\\n        return true;\\n    }\\n    else\\n    {\\n        return false;\\n    }"
                    },
                    {
                        "username": "Janani_2104",
                        "content": "what is the issue in my code.. i got a error in case 1?\\nbool isPalindrome(int x){\\n    int r,sum=0,temp;\\n    x=temp;\\n    while(x>0)\\n    {\\n        r=x%10;\\n        sum=(sum*10)+r;\\n        x=x/10;\\n    }\\n\\n     return sum;\\n}"
                    },
                    {
                        "username": "abhishekmuhuri",
                        "content": "Read the example 2: They are assuming the x value as a string and checking for pallin. x = -121. Reversing as a text will give you 121-  . Which is not equal to -121.  So just return false for all negative values of x"
                    },
                    {
                        "username": "amanthapliyal14",
                        "content": "Hey please explain why -121 is not palindrone when i reverse it i get -121 which is equal to that no"
                    },
                    {
                        "username": "Rehan_khan_07",
                        "content": "bro listen last digit of -121 is 1 and first digit of -121 is -1 . see here and compare the last digit and first digit of given number ,1 and -1 is equal ? ofcourse not .\\nhope you understand.\\uD83D\\uDE05\\uD83D\\uDE05"
                    },
                    {
                        "username": "adarsh_91",
                        "content": "because modular function does not work for negative number"
                    },
                    {
                        "username": "wailmansourouahchia",
                        "content": "no when you revers it you'll get 121-.  you have to treat it like string i wish you understand\n"
                    }
                ]
            },
            {
                "id": 1953797,
                "content": [
                    {
                        "username": "piyush_malviya22",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int rev = 0;\\n        int temp = x;\\n        while(x != 0){\\n            int d = x%10;\\n            rev = rev*10+d;\\n            x = x/10;\\n            if(rev >= 0){\\n            if(rev == temp){\\n                \\n                return true;\\n            }\\n            }\\n\\n    }\\n    return false;\\n}\\n}\\n\\nthis give wrong answer in case x=0"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "class Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}"
                    },
                    {
                        "username": "SSelahattin",
                        "content": "Is there anyone solved this with 8ms runtime \\nI searched but couldn\\'t find\\nmy best try was 9ms "
                    },
                    {
                        "username": "mbedru",
                        "content": "6ms, 42.97mb\\n\\nif(x<0) return false;\\n\\n        char [] xString = String.valueOf(x).toCharArray();\\n        int a=0, b=xString.length-1;\\n        while(a!=b && a<b) {\\n            if(a==b) break;\\n            if(xString[a] != xString[b]) return false;\\n            a++; b--;"
                    },
                    {
                        "username": "piyush_malviya22",
                        "content": "my is also 9ms"
                    },
                    {
                        "username": "CamMcG",
                        "content": "I know this isn\\'t the most efficient way of coding this but I\\'m confused on why it\\'s wrong please may you reply if you understand my mistake as when i print palindromeChecker and x they both equal the same number for 121 but don\\'t equal eachother\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        convertedX = str(x)\\n        convertedXlen = len(convertedX)\\n        palindromeChecker = \"\"\\n        for i in range(convertedXlen):\\n            numberGrabber = convertedX[-i - 1]\\n            palindromeChecker += numberGrabber\\n        print(palindromeChecker)\\n        print(x)\\n        if palindromeChecker == x:\\n            return True\\n        else:\\n            return False\\n\\n\\n            "
                    },
                    {
                        "username": "Divvyesh",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        StringBuilder a = new StringBuilder(Integer.toString(x));\\n        if(a.equals(a.reverse())){\\n            return true;\\n        }\\n        else{\\n            return false; \\n        }\\n    }\\n}\\n\\nwhat is wrong with my code"
                    },
                    {
                        "username": "ASRISATWIK",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        xi=str(x)\\n        s=xi[::-1]\\n        if(x==s):\\n            return True\\n        else:\\n            return False\\nwhy is it showing wrong for x=121"
                    },
                    {
                        "username": "ASRISATWIK",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        xi=str(x)\\n        s=xi[::-1]\\n        if(s==x):\\n            print(\"True\")\\n        else:\\n            print(\"False\")\\n\\n  IT IS SHOWING ERROR\\n\\n\\nfor this code the \\nstdout is False\\n output is false\\n expected is true"
                    },
                    {
                        "username": "rahulthakurking2017",
                        "content": "Best Solution for C Language \\n\\nbool isPalindrome(int x){\\nint num=x,rem;\\nint sum=0;\\n    while(x>0){\\n        rem=x%10;\\n        sum=(sum*10)+rem;\\n        x/=10;\\n    }\\n    if(sum==num)\\n    {\\n        return true;\\n    }\\n    else\\n    {\\n        return false;\\n    }"
                    },
                    {
                        "username": "Janani_2104",
                        "content": "what is the issue in my code.. i got a error in case 1?\\nbool isPalindrome(int x){\\n    int r,sum=0,temp;\\n    x=temp;\\n    while(x>0)\\n    {\\n        r=x%10;\\n        sum=(sum*10)+r;\\n        x=x/10;\\n    }\\n\\n     return sum;\\n}"
                    },
                    {
                        "username": "abhishekmuhuri",
                        "content": "Read the example 2: They are assuming the x value as a string and checking for pallin. x = -121. Reversing as a text will give you 121-  . Which is not equal to -121.  So just return false for all negative values of x"
                    },
                    {
                        "username": "amanthapliyal14",
                        "content": "Hey please explain why -121 is not palindrone when i reverse it i get -121 which is equal to that no"
                    },
                    {
                        "username": "Rehan_khan_07",
                        "content": "bro listen last digit of -121 is 1 and first digit of -121 is -1 . see here and compare the last digit and first digit of given number ,1 and -1 is equal ? ofcourse not .\\nhope you understand.\\uD83D\\uDE05\\uD83D\\uDE05"
                    },
                    {
                        "username": "adarsh_91",
                        "content": "because modular function does not work for negative number"
                    },
                    {
                        "username": "wailmansourouahchia",
                        "content": "no when you revers it you'll get 121-.  you have to treat it like string i wish you understand\n"
                    }
                ]
            },
            {
                "id": 1947646,
                "content": [
                    {
                        "username": "piyush_malviya22",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int rev = 0;\\n        int temp = x;\\n        while(x != 0){\\n            int d = x%10;\\n            rev = rev*10+d;\\n            x = x/10;\\n            if(rev >= 0){\\n            if(rev == temp){\\n                \\n                return true;\\n            }\\n            }\\n\\n    }\\n    return false;\\n}\\n}\\n\\nthis give wrong answer in case x=0"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "class Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}"
                    },
                    {
                        "username": "SSelahattin",
                        "content": "Is there anyone solved this with 8ms runtime \\nI searched but couldn\\'t find\\nmy best try was 9ms "
                    },
                    {
                        "username": "mbedru",
                        "content": "6ms, 42.97mb\\n\\nif(x<0) return false;\\n\\n        char [] xString = String.valueOf(x).toCharArray();\\n        int a=0, b=xString.length-1;\\n        while(a!=b && a<b) {\\n            if(a==b) break;\\n            if(xString[a] != xString[b]) return false;\\n            a++; b--;"
                    },
                    {
                        "username": "piyush_malviya22",
                        "content": "my is also 9ms"
                    },
                    {
                        "username": "CamMcG",
                        "content": "I know this isn\\'t the most efficient way of coding this but I\\'m confused on why it\\'s wrong please may you reply if you understand my mistake as when i print palindromeChecker and x they both equal the same number for 121 but don\\'t equal eachother\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        convertedX = str(x)\\n        convertedXlen = len(convertedX)\\n        palindromeChecker = \"\"\\n        for i in range(convertedXlen):\\n            numberGrabber = convertedX[-i - 1]\\n            palindromeChecker += numberGrabber\\n        print(palindromeChecker)\\n        print(x)\\n        if palindromeChecker == x:\\n            return True\\n        else:\\n            return False\\n\\n\\n            "
                    },
                    {
                        "username": "Divvyesh",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        StringBuilder a = new StringBuilder(Integer.toString(x));\\n        if(a.equals(a.reverse())){\\n            return true;\\n        }\\n        else{\\n            return false; \\n        }\\n    }\\n}\\n\\nwhat is wrong with my code"
                    },
                    {
                        "username": "ASRISATWIK",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        xi=str(x)\\n        s=xi[::-1]\\n        if(x==s):\\n            return True\\n        else:\\n            return False\\nwhy is it showing wrong for x=121"
                    },
                    {
                        "username": "ASRISATWIK",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        xi=str(x)\\n        s=xi[::-1]\\n        if(s==x):\\n            print(\"True\")\\n        else:\\n            print(\"False\")\\n\\n  IT IS SHOWING ERROR\\n\\n\\nfor this code the \\nstdout is False\\n output is false\\n expected is true"
                    },
                    {
                        "username": "rahulthakurking2017",
                        "content": "Best Solution for C Language \\n\\nbool isPalindrome(int x){\\nint num=x,rem;\\nint sum=0;\\n    while(x>0){\\n        rem=x%10;\\n        sum=(sum*10)+rem;\\n        x/=10;\\n    }\\n    if(sum==num)\\n    {\\n        return true;\\n    }\\n    else\\n    {\\n        return false;\\n    }"
                    },
                    {
                        "username": "Janani_2104",
                        "content": "what is the issue in my code.. i got a error in case 1?\\nbool isPalindrome(int x){\\n    int r,sum=0,temp;\\n    x=temp;\\n    while(x>0)\\n    {\\n        r=x%10;\\n        sum=(sum*10)+r;\\n        x=x/10;\\n    }\\n\\n     return sum;\\n}"
                    },
                    {
                        "username": "abhishekmuhuri",
                        "content": "Read the example 2: They are assuming the x value as a string and checking for pallin. x = -121. Reversing as a text will give you 121-  . Which is not equal to -121.  So just return false for all negative values of x"
                    },
                    {
                        "username": "amanthapliyal14",
                        "content": "Hey please explain why -121 is not palindrone when i reverse it i get -121 which is equal to that no"
                    },
                    {
                        "username": "Rehan_khan_07",
                        "content": "bro listen last digit of -121 is 1 and first digit of -121 is -1 . see here and compare the last digit and first digit of given number ,1 and -1 is equal ? ofcourse not .\\nhope you understand.\\uD83D\\uDE05\\uD83D\\uDE05"
                    },
                    {
                        "username": "adarsh_91",
                        "content": "because modular function does not work for negative number"
                    },
                    {
                        "username": "wailmansourouahchia",
                        "content": "no when you revers it you'll get 121-.  you have to treat it like string i wish you understand\n"
                    }
                ]
            },
            {
                "id": 1943413,
                "content": [
                    {
                        "username": "piyush_malviya22",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int rev = 0;\\n        int temp = x;\\n        while(x != 0){\\n            int d = x%10;\\n            rev = rev*10+d;\\n            x = x/10;\\n            if(rev >= 0){\\n            if(rev == temp){\\n                \\n                return true;\\n            }\\n            }\\n\\n    }\\n    return false;\\n}\\n}\\n\\nthis give wrong answer in case x=0"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "class Solution {\\n    public static boolean isPalindrome(int x) {\\n    String str = String.valueOf(x);\\n    int left = 0;\\n    int right = str.length() - 1;\\n    while (left < right) {\\n      if (str.charAt(left) != str.charAt(right)) {\\n        return false;\\n      }\\n      left++;\\n      right--;\\n    }\\n\\n    return true;\\n  }\\n}"
                    },
                    {
                        "username": "SSelahattin",
                        "content": "Is there anyone solved this with 8ms runtime \\nI searched but couldn\\'t find\\nmy best try was 9ms "
                    },
                    {
                        "username": "mbedru",
                        "content": "6ms, 42.97mb\\n\\nif(x<0) return false;\\n\\n        char [] xString = String.valueOf(x).toCharArray();\\n        int a=0, b=xString.length-1;\\n        while(a!=b && a<b) {\\n            if(a==b) break;\\n            if(xString[a] != xString[b]) return false;\\n            a++; b--;"
                    },
                    {
                        "username": "piyush_malviya22",
                        "content": "my is also 9ms"
                    },
                    {
                        "username": "CamMcG",
                        "content": "I know this isn\\'t the most efficient way of coding this but I\\'m confused on why it\\'s wrong please may you reply if you understand my mistake as when i print palindromeChecker and x they both equal the same number for 121 but don\\'t equal eachother\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        convertedX = str(x)\\n        convertedXlen = len(convertedX)\\n        palindromeChecker = \"\"\\n        for i in range(convertedXlen):\\n            numberGrabber = convertedX[-i - 1]\\n            palindromeChecker += numberGrabber\\n        print(palindromeChecker)\\n        print(x)\\n        if palindromeChecker == x:\\n            return True\\n        else:\\n            return False\\n\\n\\n            "
                    },
                    {
                        "username": "Divvyesh",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        StringBuilder a = new StringBuilder(Integer.toString(x));\\n        if(a.equals(a.reverse())){\\n            return true;\\n        }\\n        else{\\n            return false; \\n        }\\n    }\\n}\\n\\nwhat is wrong with my code"
                    },
                    {
                        "username": "ASRISATWIK",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        xi=str(x)\\n        s=xi[::-1]\\n        if(x==s):\\n            return True\\n        else:\\n            return False\\nwhy is it showing wrong for x=121"
                    },
                    {
                        "username": "ASRISATWIK",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        xi=str(x)\\n        s=xi[::-1]\\n        if(s==x):\\n            print(\"True\")\\n        else:\\n            print(\"False\")\\n\\n  IT IS SHOWING ERROR\\n\\n\\nfor this code the \\nstdout is False\\n output is false\\n expected is true"
                    },
                    {
                        "username": "rahulthakurking2017",
                        "content": "Best Solution for C Language \\n\\nbool isPalindrome(int x){\\nint num=x,rem;\\nint sum=0;\\n    while(x>0){\\n        rem=x%10;\\n        sum=(sum*10)+rem;\\n        x/=10;\\n    }\\n    if(sum==num)\\n    {\\n        return true;\\n    }\\n    else\\n    {\\n        return false;\\n    }"
                    },
                    {
                        "username": "Janani_2104",
                        "content": "what is the issue in my code.. i got a error in case 1?\\nbool isPalindrome(int x){\\n    int r,sum=0,temp;\\n    x=temp;\\n    while(x>0)\\n    {\\n        r=x%10;\\n        sum=(sum*10)+r;\\n        x=x/10;\\n    }\\n\\n     return sum;\\n}"
                    },
                    {
                        "username": "abhishekmuhuri",
                        "content": "Read the example 2: They are assuming the x value as a string and checking for pallin. x = -121. Reversing as a text will give you 121-  . Which is not equal to -121.  So just return false for all negative values of x"
                    },
                    {
                        "username": "amanthapliyal14",
                        "content": "Hey please explain why -121 is not palindrone when i reverse it i get -121 which is equal to that no"
                    },
                    {
                        "username": "Rehan_khan_07",
                        "content": "bro listen last digit of -121 is 1 and first digit of -121 is -1 . see here and compare the last digit and first digit of given number ,1 and -1 is equal ? ofcourse not .\\nhope you understand.\\uD83D\\uDE05\\uD83D\\uDE05"
                    },
                    {
                        "username": "adarsh_91",
                        "content": "because modular function does not work for negative number"
                    },
                    {
                        "username": "wailmansourouahchia",
                        "content": "no when you revers it you'll get 121-.  you have to treat it like string i wish you understand\n"
                    }
                ]
            },
            {
                "id": 1943029,
                "content": [
                    {
                        "username": "rumi",
                        "content": "can someone do it without converting to string?\n"
                    },
                    {
                        "username": "abhishekmuhuri",
                        "content": "class Solution {\npublic:\n    bool isPalindrome(int x) {\n        if(x<0)return false;\n        int orig_x=x;\n        long long num=0;\n        while(x>0)\n        {\n            int r=x%10;\n            num*=10;\n            num+=r;\n            x=x/10;\n        }\n        return orig_x==num;\n    }\n};"
                    },
                    {
                        "username": "wailmansourouahchia",
                        "content": " why he told me Time Limit Exceeded  "
                    },
                    {
                        "username": "adarsh_91",
                        "content": "so many codes i have seen one major change in brute force approach is make \\nfun==ans  && fun>=0 in if condition ur code will run\\n"
                    },
                    {
                        "username": "veers24774",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        String abc=String.valueOf(x);\\n        StringBuffer cd= new StringBuffer(abc);\\n        return cd.reverse().toString()==abc;\\n    }\\n} why this is failing and always giving false\\n"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "The code you provided is close, but there\\'s a small issue. In Java, you should use the \\' .equals() \\' method to compare strings for equality, not the \\' == \\' operator. The \\' == \\' operator compares object references, not the actual contents of the strings. Here\\'s the corrected version of the code:\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        String abc = String.valueOf(x);\\n        StringBuffer cd = new StringBuffer(abc);\\n        return cd.reverse().toString().equals(abc);\\n    }\\n}\\n"
                    },
                    {
                        "username": "0901_muki",
                        "content": "#include <stdio.h>\\n#include <stdbool.h>\\n\\nbool isPalindrome(int x) {\\n    if (x < 0) {\\n        return false; // Negative numbers cannot be palindromes\\n    }\\n    \\n    int reversed = 0;\\n    int original = x;\\n    \\n    while (x > 0) {\\n        int remainder = x % 10;\\n        reversed = reversed * 10 + remainder;\\n        x /= 10;\\n    }\\n    \\n    return original == reversed;\\n}\\n\\nint main() {\\n    int x=121;\\n   \\n    \\n    bool result = isPalindrome(x);\\n    \\n    if (result) {\\n        printf(\"true\\\\n\");\\n    } else {\\n        printf(\"false\\\\n\");\\n    }\\n    \\n    return 0;\\n}\\n\\n\\nLine 37: Char 5: error: redefinition of \\u2018main\\u2019 [solution.c]\\n int main(int argc, char *argv[]) {\\n     ^~~~\\n\\nwhy am getting this error?\\n"
                    },
                    {
                        "username": "SMajumder2003",
                        "content": "I am unable to use void datatype method in this program, when I am using void rather than boolean type by default. In the terminal it is showing compile error because incompatible types: void cannot be converted to boolean [in __Driver__.java]"
                    },
                    {
                        "username": "Asabito",
                        "content": "how to solve it wihtout convert it to str?"
                    },
                    {
                        "username": "SMajumder2003",
                        "content": "Read the question carefully, here all the outputs are in numerical form, so there is no chance to using String datatype parameter or any String datatype variables to use, use simply integer datatype parameter. Add a \\'reverted number\\' variable and initialize it 0. Then solve it."
                    },
                    {
                        "username": "harmeet-io",
                        "content": "==22==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\\n==22==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you\\'re using ulimit -v\\n\\nI am getting this everytime I am running any code here. \\nalso, when  I submit the code, it works by on running it shows me this. Can anyone help?"
                    },
                    {
                        "username": "ABID_NAZEER",
                        "content": "-2^31 = -2147483648\\n2^31 - 1 = 2147483647"
                    },
                    {
                        "username": "Mohammed_Asad",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        unsigned int reverse=0;\\n        int remainder;\\n        if(x<0){\\n            return false;\\n        }\\n        else{\\n        while(x!=0){\\n        remainder=x%10;\\n        reverse=reverse*10+remainder;\\n        x=x/10;\\n        }\\n        if(x==reverse){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n        }\\n    }\\n};\\n\\nwhy my code is always returning false?? "
                    }
                ]
            },
            {
                "id": 1942933,
                "content": [
                    {
                        "username": "rumi",
                        "content": "can someone do it without converting to string?\n"
                    },
                    {
                        "username": "abhishekmuhuri",
                        "content": "class Solution {\npublic:\n    bool isPalindrome(int x) {\n        if(x<0)return false;\n        int orig_x=x;\n        long long num=0;\n        while(x>0)\n        {\n            int r=x%10;\n            num*=10;\n            num+=r;\n            x=x/10;\n        }\n        return orig_x==num;\n    }\n};"
                    },
                    {
                        "username": "wailmansourouahchia",
                        "content": " why he told me Time Limit Exceeded  "
                    },
                    {
                        "username": "adarsh_91",
                        "content": "so many codes i have seen one major change in brute force approach is make \\nfun==ans  && fun>=0 in if condition ur code will run\\n"
                    },
                    {
                        "username": "veers24774",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        String abc=String.valueOf(x);\\n        StringBuffer cd= new StringBuffer(abc);\\n        return cd.reverse().toString()==abc;\\n    }\\n} why this is failing and always giving false\\n"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "The code you provided is close, but there\\'s a small issue. In Java, you should use the \\' .equals() \\' method to compare strings for equality, not the \\' == \\' operator. The \\' == \\' operator compares object references, not the actual contents of the strings. Here\\'s the corrected version of the code:\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        String abc = String.valueOf(x);\\n        StringBuffer cd = new StringBuffer(abc);\\n        return cd.reverse().toString().equals(abc);\\n    }\\n}\\n"
                    },
                    {
                        "username": "0901_muki",
                        "content": "#include <stdio.h>\\n#include <stdbool.h>\\n\\nbool isPalindrome(int x) {\\n    if (x < 0) {\\n        return false; // Negative numbers cannot be palindromes\\n    }\\n    \\n    int reversed = 0;\\n    int original = x;\\n    \\n    while (x > 0) {\\n        int remainder = x % 10;\\n        reversed = reversed * 10 + remainder;\\n        x /= 10;\\n    }\\n    \\n    return original == reversed;\\n}\\n\\nint main() {\\n    int x=121;\\n   \\n    \\n    bool result = isPalindrome(x);\\n    \\n    if (result) {\\n        printf(\"true\\\\n\");\\n    } else {\\n        printf(\"false\\\\n\");\\n    }\\n    \\n    return 0;\\n}\\n\\n\\nLine 37: Char 5: error: redefinition of \\u2018main\\u2019 [solution.c]\\n int main(int argc, char *argv[]) {\\n     ^~~~\\n\\nwhy am getting this error?\\n"
                    },
                    {
                        "username": "SMajumder2003",
                        "content": "I am unable to use void datatype method in this program, when I am using void rather than boolean type by default. In the terminal it is showing compile error because incompatible types: void cannot be converted to boolean [in __Driver__.java]"
                    },
                    {
                        "username": "Asabito",
                        "content": "how to solve it wihtout convert it to str?"
                    },
                    {
                        "username": "SMajumder2003",
                        "content": "Read the question carefully, here all the outputs are in numerical form, so there is no chance to using String datatype parameter or any String datatype variables to use, use simply integer datatype parameter. Add a \\'reverted number\\' variable and initialize it 0. Then solve it."
                    },
                    {
                        "username": "harmeet-io",
                        "content": "==22==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\\n==22==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you\\'re using ulimit -v\\n\\nI am getting this everytime I am running any code here. \\nalso, when  I submit the code, it works by on running it shows me this. Can anyone help?"
                    },
                    {
                        "username": "ABID_NAZEER",
                        "content": "-2^31 = -2147483648\\n2^31 - 1 = 2147483647"
                    },
                    {
                        "username": "Mohammed_Asad",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        unsigned int reverse=0;\\n        int remainder;\\n        if(x<0){\\n            return false;\\n        }\\n        else{\\n        while(x!=0){\\n        remainder=x%10;\\n        reverse=reverse*10+remainder;\\n        x=x/10;\\n        }\\n        if(x==reverse){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n        }\\n    }\\n};\\n\\nwhy my code is always returning false?? "
                    }
                ]
            },
            {
                "id": 1937206,
                "content": [
                    {
                        "username": "rumi",
                        "content": "can someone do it without converting to string?\n"
                    },
                    {
                        "username": "abhishekmuhuri",
                        "content": "class Solution {\npublic:\n    bool isPalindrome(int x) {\n        if(x<0)return false;\n        int orig_x=x;\n        long long num=0;\n        while(x>0)\n        {\n            int r=x%10;\n            num*=10;\n            num+=r;\n            x=x/10;\n        }\n        return orig_x==num;\n    }\n};"
                    },
                    {
                        "username": "wailmansourouahchia",
                        "content": " why he told me Time Limit Exceeded  "
                    },
                    {
                        "username": "adarsh_91",
                        "content": "so many codes i have seen one major change in brute force approach is make \\nfun==ans  && fun>=0 in if condition ur code will run\\n"
                    },
                    {
                        "username": "veers24774",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        String abc=String.valueOf(x);\\n        StringBuffer cd= new StringBuffer(abc);\\n        return cd.reverse().toString()==abc;\\n    }\\n} why this is failing and always giving false\\n"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "The code you provided is close, but there\\'s a small issue. In Java, you should use the \\' .equals() \\' method to compare strings for equality, not the \\' == \\' operator. The \\' == \\' operator compares object references, not the actual contents of the strings. Here\\'s the corrected version of the code:\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        String abc = String.valueOf(x);\\n        StringBuffer cd = new StringBuffer(abc);\\n        return cd.reverse().toString().equals(abc);\\n    }\\n}\\n"
                    },
                    {
                        "username": "0901_muki",
                        "content": "#include <stdio.h>\\n#include <stdbool.h>\\n\\nbool isPalindrome(int x) {\\n    if (x < 0) {\\n        return false; // Negative numbers cannot be palindromes\\n    }\\n    \\n    int reversed = 0;\\n    int original = x;\\n    \\n    while (x > 0) {\\n        int remainder = x % 10;\\n        reversed = reversed * 10 + remainder;\\n        x /= 10;\\n    }\\n    \\n    return original == reversed;\\n}\\n\\nint main() {\\n    int x=121;\\n   \\n    \\n    bool result = isPalindrome(x);\\n    \\n    if (result) {\\n        printf(\"true\\\\n\");\\n    } else {\\n        printf(\"false\\\\n\");\\n    }\\n    \\n    return 0;\\n}\\n\\n\\nLine 37: Char 5: error: redefinition of \\u2018main\\u2019 [solution.c]\\n int main(int argc, char *argv[]) {\\n     ^~~~\\n\\nwhy am getting this error?\\n"
                    },
                    {
                        "username": "SMajumder2003",
                        "content": "I am unable to use void datatype method in this program, when I am using void rather than boolean type by default. In the terminal it is showing compile error because incompatible types: void cannot be converted to boolean [in __Driver__.java]"
                    },
                    {
                        "username": "Asabito",
                        "content": "how to solve it wihtout convert it to str?"
                    },
                    {
                        "username": "SMajumder2003",
                        "content": "Read the question carefully, here all the outputs are in numerical form, so there is no chance to using String datatype parameter or any String datatype variables to use, use simply integer datatype parameter. Add a \\'reverted number\\' variable and initialize it 0. Then solve it."
                    },
                    {
                        "username": "harmeet-io",
                        "content": "==22==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\\n==22==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you\\'re using ulimit -v\\n\\nI am getting this everytime I am running any code here. \\nalso, when  I submit the code, it works by on running it shows me this. Can anyone help?"
                    },
                    {
                        "username": "ABID_NAZEER",
                        "content": "-2^31 = -2147483648\\n2^31 - 1 = 2147483647"
                    },
                    {
                        "username": "Mohammed_Asad",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        unsigned int reverse=0;\\n        int remainder;\\n        if(x<0){\\n            return false;\\n        }\\n        else{\\n        while(x!=0){\\n        remainder=x%10;\\n        reverse=reverse*10+remainder;\\n        x=x/10;\\n        }\\n        if(x==reverse){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n        }\\n    }\\n};\\n\\nwhy my code is always returning false?? "
                    }
                ]
            },
            {
                "id": 1936957,
                "content": [
                    {
                        "username": "rumi",
                        "content": "can someone do it without converting to string?\n"
                    },
                    {
                        "username": "abhishekmuhuri",
                        "content": "class Solution {\npublic:\n    bool isPalindrome(int x) {\n        if(x<0)return false;\n        int orig_x=x;\n        long long num=0;\n        while(x>0)\n        {\n            int r=x%10;\n            num*=10;\n            num+=r;\n            x=x/10;\n        }\n        return orig_x==num;\n    }\n};"
                    },
                    {
                        "username": "wailmansourouahchia",
                        "content": " why he told me Time Limit Exceeded  "
                    },
                    {
                        "username": "adarsh_91",
                        "content": "so many codes i have seen one major change in brute force approach is make \\nfun==ans  && fun>=0 in if condition ur code will run\\n"
                    },
                    {
                        "username": "veers24774",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        String abc=String.valueOf(x);\\n        StringBuffer cd= new StringBuffer(abc);\\n        return cd.reverse().toString()==abc;\\n    }\\n} why this is failing and always giving false\\n"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "The code you provided is close, but there\\'s a small issue. In Java, you should use the \\' .equals() \\' method to compare strings for equality, not the \\' == \\' operator. The \\' == \\' operator compares object references, not the actual contents of the strings. Here\\'s the corrected version of the code:\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        String abc = String.valueOf(x);\\n        StringBuffer cd = new StringBuffer(abc);\\n        return cd.reverse().toString().equals(abc);\\n    }\\n}\\n"
                    },
                    {
                        "username": "0901_muki",
                        "content": "#include <stdio.h>\\n#include <stdbool.h>\\n\\nbool isPalindrome(int x) {\\n    if (x < 0) {\\n        return false; // Negative numbers cannot be palindromes\\n    }\\n    \\n    int reversed = 0;\\n    int original = x;\\n    \\n    while (x > 0) {\\n        int remainder = x % 10;\\n        reversed = reversed * 10 + remainder;\\n        x /= 10;\\n    }\\n    \\n    return original == reversed;\\n}\\n\\nint main() {\\n    int x=121;\\n   \\n    \\n    bool result = isPalindrome(x);\\n    \\n    if (result) {\\n        printf(\"true\\\\n\");\\n    } else {\\n        printf(\"false\\\\n\");\\n    }\\n    \\n    return 0;\\n}\\n\\n\\nLine 37: Char 5: error: redefinition of \\u2018main\\u2019 [solution.c]\\n int main(int argc, char *argv[]) {\\n     ^~~~\\n\\nwhy am getting this error?\\n"
                    },
                    {
                        "username": "SMajumder2003",
                        "content": "I am unable to use void datatype method in this program, when I am using void rather than boolean type by default. In the terminal it is showing compile error because incompatible types: void cannot be converted to boolean [in __Driver__.java]"
                    },
                    {
                        "username": "Asabito",
                        "content": "how to solve it wihtout convert it to str?"
                    },
                    {
                        "username": "SMajumder2003",
                        "content": "Read the question carefully, here all the outputs are in numerical form, so there is no chance to using String datatype parameter or any String datatype variables to use, use simply integer datatype parameter. Add a \\'reverted number\\' variable and initialize it 0. Then solve it."
                    },
                    {
                        "username": "harmeet-io",
                        "content": "==22==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\\n==22==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you\\'re using ulimit -v\\n\\nI am getting this everytime I am running any code here. \\nalso, when  I submit the code, it works by on running it shows me this. Can anyone help?"
                    },
                    {
                        "username": "ABID_NAZEER",
                        "content": "-2^31 = -2147483648\\n2^31 - 1 = 2147483647"
                    },
                    {
                        "username": "Mohammed_Asad",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        unsigned int reverse=0;\\n        int remainder;\\n        if(x<0){\\n            return false;\\n        }\\n        else{\\n        while(x!=0){\\n        remainder=x%10;\\n        reverse=reverse*10+remainder;\\n        x=x/10;\\n        }\\n        if(x==reverse){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n        }\\n    }\\n};\\n\\nwhy my code is always returning false?? "
                    }
                ]
            },
            {
                "id": 1935873,
                "content": [
                    {
                        "username": "rumi",
                        "content": "can someone do it without converting to string?\n"
                    },
                    {
                        "username": "abhishekmuhuri",
                        "content": "class Solution {\npublic:\n    bool isPalindrome(int x) {\n        if(x<0)return false;\n        int orig_x=x;\n        long long num=0;\n        while(x>0)\n        {\n            int r=x%10;\n            num*=10;\n            num+=r;\n            x=x/10;\n        }\n        return orig_x==num;\n    }\n};"
                    },
                    {
                        "username": "wailmansourouahchia",
                        "content": " why he told me Time Limit Exceeded  "
                    },
                    {
                        "username": "adarsh_91",
                        "content": "so many codes i have seen one major change in brute force approach is make \\nfun==ans  && fun>=0 in if condition ur code will run\\n"
                    },
                    {
                        "username": "veers24774",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        String abc=String.valueOf(x);\\n        StringBuffer cd= new StringBuffer(abc);\\n        return cd.reverse().toString()==abc;\\n    }\\n} why this is failing and always giving false\\n"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "The code you provided is close, but there\\'s a small issue. In Java, you should use the \\' .equals() \\' method to compare strings for equality, not the \\' == \\' operator. The \\' == \\' operator compares object references, not the actual contents of the strings. Here\\'s the corrected version of the code:\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        String abc = String.valueOf(x);\\n        StringBuffer cd = new StringBuffer(abc);\\n        return cd.reverse().toString().equals(abc);\\n    }\\n}\\n"
                    },
                    {
                        "username": "0901_muki",
                        "content": "#include <stdio.h>\\n#include <stdbool.h>\\n\\nbool isPalindrome(int x) {\\n    if (x < 0) {\\n        return false; // Negative numbers cannot be palindromes\\n    }\\n    \\n    int reversed = 0;\\n    int original = x;\\n    \\n    while (x > 0) {\\n        int remainder = x % 10;\\n        reversed = reversed * 10 + remainder;\\n        x /= 10;\\n    }\\n    \\n    return original == reversed;\\n}\\n\\nint main() {\\n    int x=121;\\n   \\n    \\n    bool result = isPalindrome(x);\\n    \\n    if (result) {\\n        printf(\"true\\\\n\");\\n    } else {\\n        printf(\"false\\\\n\");\\n    }\\n    \\n    return 0;\\n}\\n\\n\\nLine 37: Char 5: error: redefinition of \\u2018main\\u2019 [solution.c]\\n int main(int argc, char *argv[]) {\\n     ^~~~\\n\\nwhy am getting this error?\\n"
                    },
                    {
                        "username": "SMajumder2003",
                        "content": "I am unable to use void datatype method in this program, when I am using void rather than boolean type by default. In the terminal it is showing compile error because incompatible types: void cannot be converted to boolean [in __Driver__.java]"
                    },
                    {
                        "username": "Asabito",
                        "content": "how to solve it wihtout convert it to str?"
                    },
                    {
                        "username": "SMajumder2003",
                        "content": "Read the question carefully, here all the outputs are in numerical form, so there is no chance to using String datatype parameter or any String datatype variables to use, use simply integer datatype parameter. Add a \\'reverted number\\' variable and initialize it 0. Then solve it."
                    },
                    {
                        "username": "harmeet-io",
                        "content": "==22==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\\n==22==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you\\'re using ulimit -v\\n\\nI am getting this everytime I am running any code here. \\nalso, when  I submit the code, it works by on running it shows me this. Can anyone help?"
                    },
                    {
                        "username": "ABID_NAZEER",
                        "content": "-2^31 = -2147483648\\n2^31 - 1 = 2147483647"
                    },
                    {
                        "username": "Mohammed_Asad",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        unsigned int reverse=0;\\n        int remainder;\\n        if(x<0){\\n            return false;\\n        }\\n        else{\\n        while(x!=0){\\n        remainder=x%10;\\n        reverse=reverse*10+remainder;\\n        x=x/10;\\n        }\\n        if(x==reverse){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n        }\\n    }\\n};\\n\\nwhy my code is always returning false?? "
                    }
                ]
            },
            {
                "id": 1934685,
                "content": [
                    {
                        "username": "rumi",
                        "content": "can someone do it without converting to string?\n"
                    },
                    {
                        "username": "abhishekmuhuri",
                        "content": "class Solution {\npublic:\n    bool isPalindrome(int x) {\n        if(x<0)return false;\n        int orig_x=x;\n        long long num=0;\n        while(x>0)\n        {\n            int r=x%10;\n            num*=10;\n            num+=r;\n            x=x/10;\n        }\n        return orig_x==num;\n    }\n};"
                    },
                    {
                        "username": "wailmansourouahchia",
                        "content": " why he told me Time Limit Exceeded  "
                    },
                    {
                        "username": "adarsh_91",
                        "content": "so many codes i have seen one major change in brute force approach is make \\nfun==ans  && fun>=0 in if condition ur code will run\\n"
                    },
                    {
                        "username": "veers24774",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        String abc=String.valueOf(x);\\n        StringBuffer cd= new StringBuffer(abc);\\n        return cd.reverse().toString()==abc;\\n    }\\n} why this is failing and always giving false\\n"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "The code you provided is close, but there\\'s a small issue. In Java, you should use the \\' .equals() \\' method to compare strings for equality, not the \\' == \\' operator. The \\' == \\' operator compares object references, not the actual contents of the strings. Here\\'s the corrected version of the code:\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        String abc = String.valueOf(x);\\n        StringBuffer cd = new StringBuffer(abc);\\n        return cd.reverse().toString().equals(abc);\\n    }\\n}\\n"
                    },
                    {
                        "username": "0901_muki",
                        "content": "#include <stdio.h>\\n#include <stdbool.h>\\n\\nbool isPalindrome(int x) {\\n    if (x < 0) {\\n        return false; // Negative numbers cannot be palindromes\\n    }\\n    \\n    int reversed = 0;\\n    int original = x;\\n    \\n    while (x > 0) {\\n        int remainder = x % 10;\\n        reversed = reversed * 10 + remainder;\\n        x /= 10;\\n    }\\n    \\n    return original == reversed;\\n}\\n\\nint main() {\\n    int x=121;\\n   \\n    \\n    bool result = isPalindrome(x);\\n    \\n    if (result) {\\n        printf(\"true\\\\n\");\\n    } else {\\n        printf(\"false\\\\n\");\\n    }\\n    \\n    return 0;\\n}\\n\\n\\nLine 37: Char 5: error: redefinition of \\u2018main\\u2019 [solution.c]\\n int main(int argc, char *argv[]) {\\n     ^~~~\\n\\nwhy am getting this error?\\n"
                    },
                    {
                        "username": "SMajumder2003",
                        "content": "I am unable to use void datatype method in this program, when I am using void rather than boolean type by default. In the terminal it is showing compile error because incompatible types: void cannot be converted to boolean [in __Driver__.java]"
                    },
                    {
                        "username": "Asabito",
                        "content": "how to solve it wihtout convert it to str?"
                    },
                    {
                        "username": "SMajumder2003",
                        "content": "Read the question carefully, here all the outputs are in numerical form, so there is no chance to using String datatype parameter or any String datatype variables to use, use simply integer datatype parameter. Add a \\'reverted number\\' variable and initialize it 0. Then solve it."
                    },
                    {
                        "username": "harmeet-io",
                        "content": "==22==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\\n==22==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you\\'re using ulimit -v\\n\\nI am getting this everytime I am running any code here. \\nalso, when  I submit the code, it works by on running it shows me this. Can anyone help?"
                    },
                    {
                        "username": "ABID_NAZEER",
                        "content": "-2^31 = -2147483648\\n2^31 - 1 = 2147483647"
                    },
                    {
                        "username": "Mohammed_Asad",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        unsigned int reverse=0;\\n        int remainder;\\n        if(x<0){\\n            return false;\\n        }\\n        else{\\n        while(x!=0){\\n        remainder=x%10;\\n        reverse=reverse*10+remainder;\\n        x=x/10;\\n        }\\n        if(x==reverse){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n        }\\n    }\\n};\\n\\nwhy my code is always returning false?? "
                    }
                ]
            },
            {
                "id": 1934140,
                "content": [
                    {
                        "username": "rumi",
                        "content": "can someone do it without converting to string?\n"
                    },
                    {
                        "username": "abhishekmuhuri",
                        "content": "class Solution {\npublic:\n    bool isPalindrome(int x) {\n        if(x<0)return false;\n        int orig_x=x;\n        long long num=0;\n        while(x>0)\n        {\n            int r=x%10;\n            num*=10;\n            num+=r;\n            x=x/10;\n        }\n        return orig_x==num;\n    }\n};"
                    },
                    {
                        "username": "wailmansourouahchia",
                        "content": " why he told me Time Limit Exceeded  "
                    },
                    {
                        "username": "adarsh_91",
                        "content": "so many codes i have seen one major change in brute force approach is make \\nfun==ans  && fun>=0 in if condition ur code will run\\n"
                    },
                    {
                        "username": "veers24774",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        String abc=String.valueOf(x);\\n        StringBuffer cd= new StringBuffer(abc);\\n        return cd.reverse().toString()==abc;\\n    }\\n} why this is failing and always giving false\\n"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "The code you provided is close, but there\\'s a small issue. In Java, you should use the \\' .equals() \\' method to compare strings for equality, not the \\' == \\' operator. The \\' == \\' operator compares object references, not the actual contents of the strings. Here\\'s the corrected version of the code:\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        String abc = String.valueOf(x);\\n        StringBuffer cd = new StringBuffer(abc);\\n        return cd.reverse().toString().equals(abc);\\n    }\\n}\\n"
                    },
                    {
                        "username": "0901_muki",
                        "content": "#include <stdio.h>\\n#include <stdbool.h>\\n\\nbool isPalindrome(int x) {\\n    if (x < 0) {\\n        return false; // Negative numbers cannot be palindromes\\n    }\\n    \\n    int reversed = 0;\\n    int original = x;\\n    \\n    while (x > 0) {\\n        int remainder = x % 10;\\n        reversed = reversed * 10 + remainder;\\n        x /= 10;\\n    }\\n    \\n    return original == reversed;\\n}\\n\\nint main() {\\n    int x=121;\\n   \\n    \\n    bool result = isPalindrome(x);\\n    \\n    if (result) {\\n        printf(\"true\\\\n\");\\n    } else {\\n        printf(\"false\\\\n\");\\n    }\\n    \\n    return 0;\\n}\\n\\n\\nLine 37: Char 5: error: redefinition of \\u2018main\\u2019 [solution.c]\\n int main(int argc, char *argv[]) {\\n     ^~~~\\n\\nwhy am getting this error?\\n"
                    },
                    {
                        "username": "SMajumder2003",
                        "content": "I am unable to use void datatype method in this program, when I am using void rather than boolean type by default. In the terminal it is showing compile error because incompatible types: void cannot be converted to boolean [in __Driver__.java]"
                    },
                    {
                        "username": "Asabito",
                        "content": "how to solve it wihtout convert it to str?"
                    },
                    {
                        "username": "SMajumder2003",
                        "content": "Read the question carefully, here all the outputs are in numerical form, so there is no chance to using String datatype parameter or any String datatype variables to use, use simply integer datatype parameter. Add a \\'reverted number\\' variable and initialize it 0. Then solve it."
                    },
                    {
                        "username": "harmeet-io",
                        "content": "==22==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\\n==22==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you\\'re using ulimit -v\\n\\nI am getting this everytime I am running any code here. \\nalso, when  I submit the code, it works by on running it shows me this. Can anyone help?"
                    },
                    {
                        "username": "ABID_NAZEER",
                        "content": "-2^31 = -2147483648\\n2^31 - 1 = 2147483647"
                    },
                    {
                        "username": "Mohammed_Asad",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        unsigned int reverse=0;\\n        int remainder;\\n        if(x<0){\\n            return false;\\n        }\\n        else{\\n        while(x!=0){\\n        remainder=x%10;\\n        reverse=reverse*10+remainder;\\n        x=x/10;\\n        }\\n        if(x==reverse){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n        }\\n    }\\n};\\n\\nwhy my code is always returning false?? "
                    }
                ]
            },
            {
                "id": 1930986,
                "content": [
                    {
                        "username": "rumi",
                        "content": "can someone do it without converting to string?\n"
                    },
                    {
                        "username": "abhishekmuhuri",
                        "content": "class Solution {\npublic:\n    bool isPalindrome(int x) {\n        if(x<0)return false;\n        int orig_x=x;\n        long long num=0;\n        while(x>0)\n        {\n            int r=x%10;\n            num*=10;\n            num+=r;\n            x=x/10;\n        }\n        return orig_x==num;\n    }\n};"
                    },
                    {
                        "username": "wailmansourouahchia",
                        "content": " why he told me Time Limit Exceeded  "
                    },
                    {
                        "username": "adarsh_91",
                        "content": "so many codes i have seen one major change in brute force approach is make \\nfun==ans  && fun>=0 in if condition ur code will run\\n"
                    },
                    {
                        "username": "veers24774",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        String abc=String.valueOf(x);\\n        StringBuffer cd= new StringBuffer(abc);\\n        return cd.reverse().toString()==abc;\\n    }\\n} why this is failing and always giving false\\n"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "The code you provided is close, but there\\'s a small issue. In Java, you should use the \\' .equals() \\' method to compare strings for equality, not the \\' == \\' operator. The \\' == \\' operator compares object references, not the actual contents of the strings. Here\\'s the corrected version of the code:\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        String abc = String.valueOf(x);\\n        StringBuffer cd = new StringBuffer(abc);\\n        return cd.reverse().toString().equals(abc);\\n    }\\n}\\n"
                    },
                    {
                        "username": "0901_muki",
                        "content": "#include <stdio.h>\\n#include <stdbool.h>\\n\\nbool isPalindrome(int x) {\\n    if (x < 0) {\\n        return false; // Negative numbers cannot be palindromes\\n    }\\n    \\n    int reversed = 0;\\n    int original = x;\\n    \\n    while (x > 0) {\\n        int remainder = x % 10;\\n        reversed = reversed * 10 + remainder;\\n        x /= 10;\\n    }\\n    \\n    return original == reversed;\\n}\\n\\nint main() {\\n    int x=121;\\n   \\n    \\n    bool result = isPalindrome(x);\\n    \\n    if (result) {\\n        printf(\"true\\\\n\");\\n    } else {\\n        printf(\"false\\\\n\");\\n    }\\n    \\n    return 0;\\n}\\n\\n\\nLine 37: Char 5: error: redefinition of \\u2018main\\u2019 [solution.c]\\n int main(int argc, char *argv[]) {\\n     ^~~~\\n\\nwhy am getting this error?\\n"
                    },
                    {
                        "username": "SMajumder2003",
                        "content": "I am unable to use void datatype method in this program, when I am using void rather than boolean type by default. In the terminal it is showing compile error because incompatible types: void cannot be converted to boolean [in __Driver__.java]"
                    },
                    {
                        "username": "Asabito",
                        "content": "how to solve it wihtout convert it to str?"
                    },
                    {
                        "username": "SMajumder2003",
                        "content": "Read the question carefully, here all the outputs are in numerical form, so there is no chance to using String datatype parameter or any String datatype variables to use, use simply integer datatype parameter. Add a \\'reverted number\\' variable and initialize it 0. Then solve it."
                    },
                    {
                        "username": "harmeet-io",
                        "content": "==22==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\\n==22==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you\\'re using ulimit -v\\n\\nI am getting this everytime I am running any code here. \\nalso, when  I submit the code, it works by on running it shows me this. Can anyone help?"
                    },
                    {
                        "username": "ABID_NAZEER",
                        "content": "-2^31 = -2147483648\\n2^31 - 1 = 2147483647"
                    },
                    {
                        "username": "Mohammed_Asad",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        unsigned int reverse=0;\\n        int remainder;\\n        if(x<0){\\n            return false;\\n        }\\n        else{\\n        while(x!=0){\\n        remainder=x%10;\\n        reverse=reverse*10+remainder;\\n        x=x/10;\\n        }\\n        if(x==reverse){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n        }\\n    }\\n};\\n\\nwhy my code is always returning false?? "
                    }
                ]
            },
            {
                "id": 1930402,
                "content": [
                    {
                        "username": "rumi",
                        "content": "can someone do it without converting to string?\n"
                    },
                    {
                        "username": "abhishekmuhuri",
                        "content": "class Solution {\npublic:\n    bool isPalindrome(int x) {\n        if(x<0)return false;\n        int orig_x=x;\n        long long num=0;\n        while(x>0)\n        {\n            int r=x%10;\n            num*=10;\n            num+=r;\n            x=x/10;\n        }\n        return orig_x==num;\n    }\n};"
                    },
                    {
                        "username": "wailmansourouahchia",
                        "content": " why he told me Time Limit Exceeded  "
                    },
                    {
                        "username": "adarsh_91",
                        "content": "so many codes i have seen one major change in brute force approach is make \\nfun==ans  && fun>=0 in if condition ur code will run\\n"
                    },
                    {
                        "username": "veers24774",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        String abc=String.valueOf(x);\\n        StringBuffer cd= new StringBuffer(abc);\\n        return cd.reverse().toString()==abc;\\n    }\\n} why this is failing and always giving false\\n"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "The code you provided is close, but there\\'s a small issue. In Java, you should use the \\' .equals() \\' method to compare strings for equality, not the \\' == \\' operator. The \\' == \\' operator compares object references, not the actual contents of the strings. Here\\'s the corrected version of the code:\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        String abc = String.valueOf(x);\\n        StringBuffer cd = new StringBuffer(abc);\\n        return cd.reverse().toString().equals(abc);\\n    }\\n}\\n"
                    },
                    {
                        "username": "0901_muki",
                        "content": "#include <stdio.h>\\n#include <stdbool.h>\\n\\nbool isPalindrome(int x) {\\n    if (x < 0) {\\n        return false; // Negative numbers cannot be palindromes\\n    }\\n    \\n    int reversed = 0;\\n    int original = x;\\n    \\n    while (x > 0) {\\n        int remainder = x % 10;\\n        reversed = reversed * 10 + remainder;\\n        x /= 10;\\n    }\\n    \\n    return original == reversed;\\n}\\n\\nint main() {\\n    int x=121;\\n   \\n    \\n    bool result = isPalindrome(x);\\n    \\n    if (result) {\\n        printf(\"true\\\\n\");\\n    } else {\\n        printf(\"false\\\\n\");\\n    }\\n    \\n    return 0;\\n}\\n\\n\\nLine 37: Char 5: error: redefinition of \\u2018main\\u2019 [solution.c]\\n int main(int argc, char *argv[]) {\\n     ^~~~\\n\\nwhy am getting this error?\\n"
                    },
                    {
                        "username": "SMajumder2003",
                        "content": "I am unable to use void datatype method in this program, when I am using void rather than boolean type by default. In the terminal it is showing compile error because incompatible types: void cannot be converted to boolean [in __Driver__.java]"
                    },
                    {
                        "username": "Asabito",
                        "content": "how to solve it wihtout convert it to str?"
                    },
                    {
                        "username": "SMajumder2003",
                        "content": "Read the question carefully, here all the outputs are in numerical form, so there is no chance to using String datatype parameter or any String datatype variables to use, use simply integer datatype parameter. Add a \\'reverted number\\' variable and initialize it 0. Then solve it."
                    },
                    {
                        "username": "harmeet-io",
                        "content": "==22==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\\n==22==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you\\'re using ulimit -v\\n\\nI am getting this everytime I am running any code here. \\nalso, when  I submit the code, it works by on running it shows me this. Can anyone help?"
                    },
                    {
                        "username": "ABID_NAZEER",
                        "content": "-2^31 = -2147483648\\n2^31 - 1 = 2147483647"
                    },
                    {
                        "username": "Mohammed_Asad",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        unsigned int reverse=0;\\n        int remainder;\\n        if(x<0){\\n            return false;\\n        }\\n        else{\\n        while(x!=0){\\n        remainder=x%10;\\n        reverse=reverse*10+remainder;\\n        x=x/10;\\n        }\\n        if(x==reverse){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n        }\\n    }\\n};\\n\\nwhy my code is always returning false?? "
                    }
                ]
            },
            {
                "id": 1925672,
                "content": [
                    {
                        "username": "rumi",
                        "content": "can someone do it without converting to string?\n"
                    },
                    {
                        "username": "abhishekmuhuri",
                        "content": "class Solution {\npublic:\n    bool isPalindrome(int x) {\n        if(x<0)return false;\n        int orig_x=x;\n        long long num=0;\n        while(x>0)\n        {\n            int r=x%10;\n            num*=10;\n            num+=r;\n            x=x/10;\n        }\n        return orig_x==num;\n    }\n};"
                    },
                    {
                        "username": "wailmansourouahchia",
                        "content": " why he told me Time Limit Exceeded  "
                    },
                    {
                        "username": "adarsh_91",
                        "content": "so many codes i have seen one major change in brute force approach is make \\nfun==ans  && fun>=0 in if condition ur code will run\\n"
                    },
                    {
                        "username": "veers24774",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        String abc=String.valueOf(x);\\n        StringBuffer cd= new StringBuffer(abc);\\n        return cd.reverse().toString()==abc;\\n    }\\n} why this is failing and always giving false\\n"
                    },
                    {
                        "username": "ankitcse2410",
                        "content": "The code you provided is close, but there\\'s a small issue. In Java, you should use the \\' .equals() \\' method to compare strings for equality, not the \\' == \\' operator. The \\' == \\' operator compares object references, not the actual contents of the strings. Here\\'s the corrected version of the code:\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        String abc = String.valueOf(x);\\n        StringBuffer cd = new StringBuffer(abc);\\n        return cd.reverse().toString().equals(abc);\\n    }\\n}\\n"
                    },
                    {
                        "username": "0901_muki",
                        "content": "#include <stdio.h>\\n#include <stdbool.h>\\n\\nbool isPalindrome(int x) {\\n    if (x < 0) {\\n        return false; // Negative numbers cannot be palindromes\\n    }\\n    \\n    int reversed = 0;\\n    int original = x;\\n    \\n    while (x > 0) {\\n        int remainder = x % 10;\\n        reversed = reversed * 10 + remainder;\\n        x /= 10;\\n    }\\n    \\n    return original == reversed;\\n}\\n\\nint main() {\\n    int x=121;\\n   \\n    \\n    bool result = isPalindrome(x);\\n    \\n    if (result) {\\n        printf(\"true\\\\n\");\\n    } else {\\n        printf(\"false\\\\n\");\\n    }\\n    \\n    return 0;\\n}\\n\\n\\nLine 37: Char 5: error: redefinition of \\u2018main\\u2019 [solution.c]\\n int main(int argc, char *argv[]) {\\n     ^~~~\\n\\nwhy am getting this error?\\n"
                    },
                    {
                        "username": "SMajumder2003",
                        "content": "I am unable to use void datatype method in this program, when I am using void rather than boolean type by default. In the terminal it is showing compile error because incompatible types: void cannot be converted to boolean [in __Driver__.java]"
                    },
                    {
                        "username": "Asabito",
                        "content": "how to solve it wihtout convert it to str?"
                    },
                    {
                        "username": "SMajumder2003",
                        "content": "Read the question carefully, here all the outputs are in numerical form, so there is no chance to using String datatype parameter or any String datatype variables to use, use simply integer datatype parameter. Add a \\'reverted number\\' variable and initialize it 0. Then solve it."
                    },
                    {
                        "username": "harmeet-io",
                        "content": "==22==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\\n==22==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you\\'re using ulimit -v\\n\\nI am getting this everytime I am running any code here. \\nalso, when  I submit the code, it works by on running it shows me this. Can anyone help?"
                    },
                    {
                        "username": "ABID_NAZEER",
                        "content": "-2^31 = -2147483648\\n2^31 - 1 = 2147483647"
                    },
                    {
                        "username": "Mohammed_Asad",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        unsigned int reverse=0;\\n        int remainder;\\n        if(x<0){\\n            return false;\\n        }\\n        else{\\n        while(x!=0){\\n        remainder=x%10;\\n        reverse=reverse*10+remainder;\\n        x=x/10;\\n        }\\n        if(x==reverse){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n        }\\n    }\\n};\\n\\nwhy my code is always returning false?? "
                    }
                ]
            },
            {
                "id": 1922076,
                "content": [
                    {
                        "username": "user2646kj",
                        "content": "class Solution {\\n     public static void main(String[] args) {\\n\\n        System.out.println(isPalindrome(10));\\n\\n\\n    }\\n    static boolean isPalindrome(int x)\\n   {\\n       int temp=x;\\n       int rev=0;\\n\\n       while(x>0)\\n       {\\n           int digit=x%10;\\n           rev=(rev*10)+digit;\\n           x=x/10;\\n       }\\n       if(rev==temp)\\n       {\\n           return true;\\n       }\\nreturn false;\\n\\n   }\\n}\\n"
                    },
                    {
                        "username": "saeed0home",
                        "content": "# Is palindrome\n\n\"\"\nclass Solution:\n    def isPalindrome(self, x):\n        x_ = str(x)\n        y = x_[::-1]\n\n        if y == x_:\n            print('true')\n        else:\n            print('false')\n\nSolution().isPalindrome(int(input()))\n\"\"\n\n\nSomebody tell me what is wrong in this code !"
                    },
                    {
                        "username": "nebula1776",
                        "content": "Well this prints true and false, isn't it supposed to ### return ### true and false?"
                    },
                    {
                        "username": "AnubhavDevnath",
                        "content": "y = x\\nrev = 0\\nr = 0\\nwhile x>0:\\n                rev = ((rev*10)+x%10)\\n                x = x//10\\nif rev == y:\\n                return True\\nelse:\\n                return False"
                    },
                    {
                        "username": "sharad907",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int n) {\\n        int rem, rev = 0;\\n        int temp = n;\\n        while (temp) {\\n            rem = temp % 10;\\n            rev = rev * 10 + rem;\\n            temp = temp / 10;\\n        }\\n        \\n        return rev == n;\\n    }\\n};\\nwhy mine not working  on negativw no how to make it work\\n"
                    },
                    {
                        "username": "Deep_down",
                        "content": "I think it is easy .\\nLet try to solve yourself.\\uD83D\\uDE0A"
                    },
                    {
                        "username": "Piyapiku",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n\\n        int reverse =0;\\n        int originalX = x;\\n        while(x>0)\\n        {\\n            reverse = (reverse*10) + (x%10);\\n            x/=10;\\n        }\\n        if(reverse == originalX )\\n        {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};\\n\\nwhat is the problem in this code\\nI am getting error in this // reverse = (reverse*10) + (x%10); \\ncan someone help me with this."
                    },
                    {
                        "username": "Abi0800",
                        "content": "what is the difference between these codes...(check out loops)\n\n\n\nbool isPalindrome(int x){\n    long long int i,j,z;\n    for(i=x;i>0;i/10){\n        j=i%10;\n        z=z*10+j;\n    }\n    if(x==z)\n        return true;\n    else\n        return false;\n\n}\n\nthis code says error\nOn other hand check these code\n\nbool isPalindrome(int x){\n    long long int i,j,k;\n    for(i=x;i>0;){\n        j=i%10;\n        k=k*10+j;\n        i=i/10;\n\n    }\n    if(x==k)\n        return true;\n    else\n        return false;\n\n}"
                    },
                    {
                        "username": "Rehan_khan_07",
                        "content": "   int ans = 0, sol = 0;\\n   \\n    int originalNumber = x;\\n    \\n    while (x != 0) {\\n        int digit = x % 10;\\n        if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            if(x<0){\\n                return false;\\n            }\\n        ans = (ans * 10) + digit;\\n        x /= 10;\\n    }\\n    \\n   \\n    \\n    if (originalNumber == ans) {\\n       return true;\\n    } else {\\n        return false;\\n    }\\n    \\n\\n}\\n    \\n};\\ni have solved this by broot force."
                    },
                    {
                        "username": "ibnabdeljelil",
                        "content": "Trying to solve it without converting, I need to figure out the number of digits in x"
                    },
                    {
                        "username": "foodmanhuffy",
                        "content": "why th is my code wrong?\\n\\n        l = list(str(x))\\n        o = list(str(x))\\n        o.reverse()\\n        if o == l:\\n            print(o)\\n            print(l)\\n            return(\"true\")\\n        else:\\n            print(o)\\n            print(l)\\n            return(\"false\")"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, your code is correct. However, you forgot to add the \"class\" and \"def\" keywords. Without these, LeetCode cannot check the test cases.\\n\\nThe corrected code would be (Btw. I removed the print functions):\\n\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        l = list(str(x))\\n        o = list(str(x))\\n        o.reverse()\\n        if o == l:\\n            return True\\n        else:\\n            return False\\n\\n\\nPlease notice that this code is pretty slow. I highly recommend trying to solve this problem using the \"slice\" method.\\n\\nIf you have any questions, feel free to ask me anytime. :)"
                    }
                ]
            },
            {
                "id": 1921431,
                "content": [
                    {
                        "username": "user2646kj",
                        "content": "class Solution {\\n     public static void main(String[] args) {\\n\\n        System.out.println(isPalindrome(10));\\n\\n\\n    }\\n    static boolean isPalindrome(int x)\\n   {\\n       int temp=x;\\n       int rev=0;\\n\\n       while(x>0)\\n       {\\n           int digit=x%10;\\n           rev=(rev*10)+digit;\\n           x=x/10;\\n       }\\n       if(rev==temp)\\n       {\\n           return true;\\n       }\\nreturn false;\\n\\n   }\\n}\\n"
                    },
                    {
                        "username": "saeed0home",
                        "content": "# Is palindrome\n\n\"\"\nclass Solution:\n    def isPalindrome(self, x):\n        x_ = str(x)\n        y = x_[::-1]\n\n        if y == x_:\n            print('true')\n        else:\n            print('false')\n\nSolution().isPalindrome(int(input()))\n\"\"\n\n\nSomebody tell me what is wrong in this code !"
                    },
                    {
                        "username": "nebula1776",
                        "content": "Well this prints true and false, isn't it supposed to ### return ### true and false?"
                    },
                    {
                        "username": "AnubhavDevnath",
                        "content": "y = x\\nrev = 0\\nr = 0\\nwhile x>0:\\n                rev = ((rev*10)+x%10)\\n                x = x//10\\nif rev == y:\\n                return True\\nelse:\\n                return False"
                    },
                    {
                        "username": "sharad907",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int n) {\\n        int rem, rev = 0;\\n        int temp = n;\\n        while (temp) {\\n            rem = temp % 10;\\n            rev = rev * 10 + rem;\\n            temp = temp / 10;\\n        }\\n        \\n        return rev == n;\\n    }\\n};\\nwhy mine not working  on negativw no how to make it work\\n"
                    },
                    {
                        "username": "Deep_down",
                        "content": "I think it is easy .\\nLet try to solve yourself.\\uD83D\\uDE0A"
                    },
                    {
                        "username": "Piyapiku",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n\\n        int reverse =0;\\n        int originalX = x;\\n        while(x>0)\\n        {\\n            reverse = (reverse*10) + (x%10);\\n            x/=10;\\n        }\\n        if(reverse == originalX )\\n        {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};\\n\\nwhat is the problem in this code\\nI am getting error in this // reverse = (reverse*10) + (x%10); \\ncan someone help me with this."
                    },
                    {
                        "username": "Abi0800",
                        "content": "what is the difference between these codes...(check out loops)\n\n\n\nbool isPalindrome(int x){\n    long long int i,j,z;\n    for(i=x;i>0;i/10){\n        j=i%10;\n        z=z*10+j;\n    }\n    if(x==z)\n        return true;\n    else\n        return false;\n\n}\n\nthis code says error\nOn other hand check these code\n\nbool isPalindrome(int x){\n    long long int i,j,k;\n    for(i=x;i>0;){\n        j=i%10;\n        k=k*10+j;\n        i=i/10;\n\n    }\n    if(x==k)\n        return true;\n    else\n        return false;\n\n}"
                    },
                    {
                        "username": "Rehan_khan_07",
                        "content": "   int ans = 0, sol = 0;\\n   \\n    int originalNumber = x;\\n    \\n    while (x != 0) {\\n        int digit = x % 10;\\n        if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            if(x<0){\\n                return false;\\n            }\\n        ans = (ans * 10) + digit;\\n        x /= 10;\\n    }\\n    \\n   \\n    \\n    if (originalNumber == ans) {\\n       return true;\\n    } else {\\n        return false;\\n    }\\n    \\n\\n}\\n    \\n};\\ni have solved this by broot force."
                    },
                    {
                        "username": "ibnabdeljelil",
                        "content": "Trying to solve it without converting, I need to figure out the number of digits in x"
                    },
                    {
                        "username": "foodmanhuffy",
                        "content": "why th is my code wrong?\\n\\n        l = list(str(x))\\n        o = list(str(x))\\n        o.reverse()\\n        if o == l:\\n            print(o)\\n            print(l)\\n            return(\"true\")\\n        else:\\n            print(o)\\n            print(l)\\n            return(\"false\")"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, your code is correct. However, you forgot to add the \"class\" and \"def\" keywords. Without these, LeetCode cannot check the test cases.\\n\\nThe corrected code would be (Btw. I removed the print functions):\\n\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        l = list(str(x))\\n        o = list(str(x))\\n        o.reverse()\\n        if o == l:\\n            return True\\n        else:\\n            return False\\n\\n\\nPlease notice that this code is pretty slow. I highly recommend trying to solve this problem using the \"slice\" method.\\n\\nIf you have any questions, feel free to ask me anytime. :)"
                    }
                ]
            },
            {
                "id": 1920384,
                "content": [
                    {
                        "username": "user2646kj",
                        "content": "class Solution {\\n     public static void main(String[] args) {\\n\\n        System.out.println(isPalindrome(10));\\n\\n\\n    }\\n    static boolean isPalindrome(int x)\\n   {\\n       int temp=x;\\n       int rev=0;\\n\\n       while(x>0)\\n       {\\n           int digit=x%10;\\n           rev=(rev*10)+digit;\\n           x=x/10;\\n       }\\n       if(rev==temp)\\n       {\\n           return true;\\n       }\\nreturn false;\\n\\n   }\\n}\\n"
                    },
                    {
                        "username": "saeed0home",
                        "content": "# Is palindrome\n\n\"\"\nclass Solution:\n    def isPalindrome(self, x):\n        x_ = str(x)\n        y = x_[::-1]\n\n        if y == x_:\n            print('true')\n        else:\n            print('false')\n\nSolution().isPalindrome(int(input()))\n\"\"\n\n\nSomebody tell me what is wrong in this code !"
                    },
                    {
                        "username": "nebula1776",
                        "content": "Well this prints true and false, isn't it supposed to ### return ### true and false?"
                    },
                    {
                        "username": "AnubhavDevnath",
                        "content": "y = x\\nrev = 0\\nr = 0\\nwhile x>0:\\n                rev = ((rev*10)+x%10)\\n                x = x//10\\nif rev == y:\\n                return True\\nelse:\\n                return False"
                    },
                    {
                        "username": "sharad907",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int n) {\\n        int rem, rev = 0;\\n        int temp = n;\\n        while (temp) {\\n            rem = temp % 10;\\n            rev = rev * 10 + rem;\\n            temp = temp / 10;\\n        }\\n        \\n        return rev == n;\\n    }\\n};\\nwhy mine not working  on negativw no how to make it work\\n"
                    },
                    {
                        "username": "Deep_down",
                        "content": "I think it is easy .\\nLet try to solve yourself.\\uD83D\\uDE0A"
                    },
                    {
                        "username": "Piyapiku",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n\\n        int reverse =0;\\n        int originalX = x;\\n        while(x>0)\\n        {\\n            reverse = (reverse*10) + (x%10);\\n            x/=10;\\n        }\\n        if(reverse == originalX )\\n        {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};\\n\\nwhat is the problem in this code\\nI am getting error in this // reverse = (reverse*10) + (x%10); \\ncan someone help me with this."
                    },
                    {
                        "username": "Abi0800",
                        "content": "what is the difference between these codes...(check out loops)\n\n\n\nbool isPalindrome(int x){\n    long long int i,j,z;\n    for(i=x;i>0;i/10){\n        j=i%10;\n        z=z*10+j;\n    }\n    if(x==z)\n        return true;\n    else\n        return false;\n\n}\n\nthis code says error\nOn other hand check these code\n\nbool isPalindrome(int x){\n    long long int i,j,k;\n    for(i=x;i>0;){\n        j=i%10;\n        k=k*10+j;\n        i=i/10;\n\n    }\n    if(x==k)\n        return true;\n    else\n        return false;\n\n}"
                    },
                    {
                        "username": "Rehan_khan_07",
                        "content": "   int ans = 0, sol = 0;\\n   \\n    int originalNumber = x;\\n    \\n    while (x != 0) {\\n        int digit = x % 10;\\n        if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            if(x<0){\\n                return false;\\n            }\\n        ans = (ans * 10) + digit;\\n        x /= 10;\\n    }\\n    \\n   \\n    \\n    if (originalNumber == ans) {\\n       return true;\\n    } else {\\n        return false;\\n    }\\n    \\n\\n}\\n    \\n};\\ni have solved this by broot force."
                    },
                    {
                        "username": "ibnabdeljelil",
                        "content": "Trying to solve it without converting, I need to figure out the number of digits in x"
                    },
                    {
                        "username": "foodmanhuffy",
                        "content": "why th is my code wrong?\\n\\n        l = list(str(x))\\n        o = list(str(x))\\n        o.reverse()\\n        if o == l:\\n            print(o)\\n            print(l)\\n            return(\"true\")\\n        else:\\n            print(o)\\n            print(l)\\n            return(\"false\")"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, your code is correct. However, you forgot to add the \"class\" and \"def\" keywords. Without these, LeetCode cannot check the test cases.\\n\\nThe corrected code would be (Btw. I removed the print functions):\\n\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        l = list(str(x))\\n        o = list(str(x))\\n        o.reverse()\\n        if o == l:\\n            return True\\n        else:\\n            return False\\n\\n\\nPlease notice that this code is pretty slow. I highly recommend trying to solve this problem using the \"slice\" method.\\n\\nIf you have any questions, feel free to ask me anytime. :)"
                    }
                ]
            },
            {
                "id": 1918185,
                "content": [
                    {
                        "username": "user2646kj",
                        "content": "class Solution {\\n     public static void main(String[] args) {\\n\\n        System.out.println(isPalindrome(10));\\n\\n\\n    }\\n    static boolean isPalindrome(int x)\\n   {\\n       int temp=x;\\n       int rev=0;\\n\\n       while(x>0)\\n       {\\n           int digit=x%10;\\n           rev=(rev*10)+digit;\\n           x=x/10;\\n       }\\n       if(rev==temp)\\n       {\\n           return true;\\n       }\\nreturn false;\\n\\n   }\\n}\\n"
                    },
                    {
                        "username": "saeed0home",
                        "content": "# Is palindrome\n\n\"\"\nclass Solution:\n    def isPalindrome(self, x):\n        x_ = str(x)\n        y = x_[::-1]\n\n        if y == x_:\n            print('true')\n        else:\n            print('false')\n\nSolution().isPalindrome(int(input()))\n\"\"\n\n\nSomebody tell me what is wrong in this code !"
                    },
                    {
                        "username": "nebula1776",
                        "content": "Well this prints true and false, isn't it supposed to ### return ### true and false?"
                    },
                    {
                        "username": "AnubhavDevnath",
                        "content": "y = x\\nrev = 0\\nr = 0\\nwhile x>0:\\n                rev = ((rev*10)+x%10)\\n                x = x//10\\nif rev == y:\\n                return True\\nelse:\\n                return False"
                    },
                    {
                        "username": "sharad907",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int n) {\\n        int rem, rev = 0;\\n        int temp = n;\\n        while (temp) {\\n            rem = temp % 10;\\n            rev = rev * 10 + rem;\\n            temp = temp / 10;\\n        }\\n        \\n        return rev == n;\\n    }\\n};\\nwhy mine not working  on negativw no how to make it work\\n"
                    },
                    {
                        "username": "Deep_down",
                        "content": "I think it is easy .\\nLet try to solve yourself.\\uD83D\\uDE0A"
                    },
                    {
                        "username": "Piyapiku",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n\\n        int reverse =0;\\n        int originalX = x;\\n        while(x>0)\\n        {\\n            reverse = (reverse*10) + (x%10);\\n            x/=10;\\n        }\\n        if(reverse == originalX )\\n        {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};\\n\\nwhat is the problem in this code\\nI am getting error in this // reverse = (reverse*10) + (x%10); \\ncan someone help me with this."
                    },
                    {
                        "username": "Abi0800",
                        "content": "what is the difference between these codes...(check out loops)\n\n\n\nbool isPalindrome(int x){\n    long long int i,j,z;\n    for(i=x;i>0;i/10){\n        j=i%10;\n        z=z*10+j;\n    }\n    if(x==z)\n        return true;\n    else\n        return false;\n\n}\n\nthis code says error\nOn other hand check these code\n\nbool isPalindrome(int x){\n    long long int i,j,k;\n    for(i=x;i>0;){\n        j=i%10;\n        k=k*10+j;\n        i=i/10;\n\n    }\n    if(x==k)\n        return true;\n    else\n        return false;\n\n}"
                    },
                    {
                        "username": "Rehan_khan_07",
                        "content": "   int ans = 0, sol = 0;\\n   \\n    int originalNumber = x;\\n    \\n    while (x != 0) {\\n        int digit = x % 10;\\n        if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            if(x<0){\\n                return false;\\n            }\\n        ans = (ans * 10) + digit;\\n        x /= 10;\\n    }\\n    \\n   \\n    \\n    if (originalNumber == ans) {\\n       return true;\\n    } else {\\n        return false;\\n    }\\n    \\n\\n}\\n    \\n};\\ni have solved this by broot force."
                    },
                    {
                        "username": "ibnabdeljelil",
                        "content": "Trying to solve it without converting, I need to figure out the number of digits in x"
                    },
                    {
                        "username": "foodmanhuffy",
                        "content": "why th is my code wrong?\\n\\n        l = list(str(x))\\n        o = list(str(x))\\n        o.reverse()\\n        if o == l:\\n            print(o)\\n            print(l)\\n            return(\"true\")\\n        else:\\n            print(o)\\n            print(l)\\n            return(\"false\")"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, your code is correct. However, you forgot to add the \"class\" and \"def\" keywords. Without these, LeetCode cannot check the test cases.\\n\\nThe corrected code would be (Btw. I removed the print functions):\\n\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        l = list(str(x))\\n        o = list(str(x))\\n        o.reverse()\\n        if o == l:\\n            return True\\n        else:\\n            return False\\n\\n\\nPlease notice that this code is pretty slow. I highly recommend trying to solve this problem using the \"slice\" method.\\n\\nIf you have any questions, feel free to ask me anytime. :)"
                    }
                ]
            },
            {
                "id": 1918012,
                "content": [
                    {
                        "username": "user2646kj",
                        "content": "class Solution {\\n     public static void main(String[] args) {\\n\\n        System.out.println(isPalindrome(10));\\n\\n\\n    }\\n    static boolean isPalindrome(int x)\\n   {\\n       int temp=x;\\n       int rev=0;\\n\\n       while(x>0)\\n       {\\n           int digit=x%10;\\n           rev=(rev*10)+digit;\\n           x=x/10;\\n       }\\n       if(rev==temp)\\n       {\\n           return true;\\n       }\\nreturn false;\\n\\n   }\\n}\\n"
                    },
                    {
                        "username": "saeed0home",
                        "content": "# Is palindrome\n\n\"\"\nclass Solution:\n    def isPalindrome(self, x):\n        x_ = str(x)\n        y = x_[::-1]\n\n        if y == x_:\n            print('true')\n        else:\n            print('false')\n\nSolution().isPalindrome(int(input()))\n\"\"\n\n\nSomebody tell me what is wrong in this code !"
                    },
                    {
                        "username": "nebula1776",
                        "content": "Well this prints true and false, isn't it supposed to ### return ### true and false?"
                    },
                    {
                        "username": "AnubhavDevnath",
                        "content": "y = x\\nrev = 0\\nr = 0\\nwhile x>0:\\n                rev = ((rev*10)+x%10)\\n                x = x//10\\nif rev == y:\\n                return True\\nelse:\\n                return False"
                    },
                    {
                        "username": "sharad907",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int n) {\\n        int rem, rev = 0;\\n        int temp = n;\\n        while (temp) {\\n            rem = temp % 10;\\n            rev = rev * 10 + rem;\\n            temp = temp / 10;\\n        }\\n        \\n        return rev == n;\\n    }\\n};\\nwhy mine not working  on negativw no how to make it work\\n"
                    },
                    {
                        "username": "Deep_down",
                        "content": "I think it is easy .\\nLet try to solve yourself.\\uD83D\\uDE0A"
                    },
                    {
                        "username": "Piyapiku",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n\\n        int reverse =0;\\n        int originalX = x;\\n        while(x>0)\\n        {\\n            reverse = (reverse*10) + (x%10);\\n            x/=10;\\n        }\\n        if(reverse == originalX )\\n        {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};\\n\\nwhat is the problem in this code\\nI am getting error in this // reverse = (reverse*10) + (x%10); \\ncan someone help me with this."
                    },
                    {
                        "username": "Abi0800",
                        "content": "what is the difference between these codes...(check out loops)\n\n\n\nbool isPalindrome(int x){\n    long long int i,j,z;\n    for(i=x;i>0;i/10){\n        j=i%10;\n        z=z*10+j;\n    }\n    if(x==z)\n        return true;\n    else\n        return false;\n\n}\n\nthis code says error\nOn other hand check these code\n\nbool isPalindrome(int x){\n    long long int i,j,k;\n    for(i=x;i>0;){\n        j=i%10;\n        k=k*10+j;\n        i=i/10;\n\n    }\n    if(x==k)\n        return true;\n    else\n        return false;\n\n}"
                    },
                    {
                        "username": "Rehan_khan_07",
                        "content": "   int ans = 0, sol = 0;\\n   \\n    int originalNumber = x;\\n    \\n    while (x != 0) {\\n        int digit = x % 10;\\n        if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            if(x<0){\\n                return false;\\n            }\\n        ans = (ans * 10) + digit;\\n        x /= 10;\\n    }\\n    \\n   \\n    \\n    if (originalNumber == ans) {\\n       return true;\\n    } else {\\n        return false;\\n    }\\n    \\n\\n}\\n    \\n};\\ni have solved this by broot force."
                    },
                    {
                        "username": "ibnabdeljelil",
                        "content": "Trying to solve it without converting, I need to figure out the number of digits in x"
                    },
                    {
                        "username": "foodmanhuffy",
                        "content": "why th is my code wrong?\\n\\n        l = list(str(x))\\n        o = list(str(x))\\n        o.reverse()\\n        if o == l:\\n            print(o)\\n            print(l)\\n            return(\"true\")\\n        else:\\n            print(o)\\n            print(l)\\n            return(\"false\")"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, your code is correct. However, you forgot to add the \"class\" and \"def\" keywords. Without these, LeetCode cannot check the test cases.\\n\\nThe corrected code would be (Btw. I removed the print functions):\\n\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        l = list(str(x))\\n        o = list(str(x))\\n        o.reverse()\\n        if o == l:\\n            return True\\n        else:\\n            return False\\n\\n\\nPlease notice that this code is pretty slow. I highly recommend trying to solve this problem using the \"slice\" method.\\n\\nIf you have any questions, feel free to ask me anytime. :)"
                    }
                ]
            },
            {
                "id": 1917667,
                "content": [
                    {
                        "username": "user2646kj",
                        "content": "class Solution {\\n     public static void main(String[] args) {\\n\\n        System.out.println(isPalindrome(10));\\n\\n\\n    }\\n    static boolean isPalindrome(int x)\\n   {\\n       int temp=x;\\n       int rev=0;\\n\\n       while(x>0)\\n       {\\n           int digit=x%10;\\n           rev=(rev*10)+digit;\\n           x=x/10;\\n       }\\n       if(rev==temp)\\n       {\\n           return true;\\n       }\\nreturn false;\\n\\n   }\\n}\\n"
                    },
                    {
                        "username": "saeed0home",
                        "content": "# Is palindrome\n\n\"\"\nclass Solution:\n    def isPalindrome(self, x):\n        x_ = str(x)\n        y = x_[::-1]\n\n        if y == x_:\n            print('true')\n        else:\n            print('false')\n\nSolution().isPalindrome(int(input()))\n\"\"\n\n\nSomebody tell me what is wrong in this code !"
                    },
                    {
                        "username": "nebula1776",
                        "content": "Well this prints true and false, isn't it supposed to ### return ### true and false?"
                    },
                    {
                        "username": "AnubhavDevnath",
                        "content": "y = x\\nrev = 0\\nr = 0\\nwhile x>0:\\n                rev = ((rev*10)+x%10)\\n                x = x//10\\nif rev == y:\\n                return True\\nelse:\\n                return False"
                    },
                    {
                        "username": "sharad907",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int n) {\\n        int rem, rev = 0;\\n        int temp = n;\\n        while (temp) {\\n            rem = temp % 10;\\n            rev = rev * 10 + rem;\\n            temp = temp / 10;\\n        }\\n        \\n        return rev == n;\\n    }\\n};\\nwhy mine not working  on negativw no how to make it work\\n"
                    },
                    {
                        "username": "Deep_down",
                        "content": "I think it is easy .\\nLet try to solve yourself.\\uD83D\\uDE0A"
                    },
                    {
                        "username": "Piyapiku",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n\\n        int reverse =0;\\n        int originalX = x;\\n        while(x>0)\\n        {\\n            reverse = (reverse*10) + (x%10);\\n            x/=10;\\n        }\\n        if(reverse == originalX )\\n        {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};\\n\\nwhat is the problem in this code\\nI am getting error in this // reverse = (reverse*10) + (x%10); \\ncan someone help me with this."
                    },
                    {
                        "username": "Abi0800",
                        "content": "what is the difference between these codes...(check out loops)\n\n\n\nbool isPalindrome(int x){\n    long long int i,j,z;\n    for(i=x;i>0;i/10){\n        j=i%10;\n        z=z*10+j;\n    }\n    if(x==z)\n        return true;\n    else\n        return false;\n\n}\n\nthis code says error\nOn other hand check these code\n\nbool isPalindrome(int x){\n    long long int i,j,k;\n    for(i=x;i>0;){\n        j=i%10;\n        k=k*10+j;\n        i=i/10;\n\n    }\n    if(x==k)\n        return true;\n    else\n        return false;\n\n}"
                    },
                    {
                        "username": "Rehan_khan_07",
                        "content": "   int ans = 0, sol = 0;\\n   \\n    int originalNumber = x;\\n    \\n    while (x != 0) {\\n        int digit = x % 10;\\n        if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            if(x<0){\\n                return false;\\n            }\\n        ans = (ans * 10) + digit;\\n        x /= 10;\\n    }\\n    \\n   \\n    \\n    if (originalNumber == ans) {\\n       return true;\\n    } else {\\n        return false;\\n    }\\n    \\n\\n}\\n    \\n};\\ni have solved this by broot force."
                    },
                    {
                        "username": "ibnabdeljelil",
                        "content": "Trying to solve it without converting, I need to figure out the number of digits in x"
                    },
                    {
                        "username": "foodmanhuffy",
                        "content": "why th is my code wrong?\\n\\n        l = list(str(x))\\n        o = list(str(x))\\n        o.reverse()\\n        if o == l:\\n            print(o)\\n            print(l)\\n            return(\"true\")\\n        else:\\n            print(o)\\n            print(l)\\n            return(\"false\")"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, your code is correct. However, you forgot to add the \"class\" and \"def\" keywords. Without these, LeetCode cannot check the test cases.\\n\\nThe corrected code would be (Btw. I removed the print functions):\\n\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        l = list(str(x))\\n        o = list(str(x))\\n        o.reverse()\\n        if o == l:\\n            return True\\n        else:\\n            return False\\n\\n\\nPlease notice that this code is pretty slow. I highly recommend trying to solve this problem using the \"slice\" method.\\n\\nIf you have any questions, feel free to ask me anytime. :)"
                    }
                ]
            },
            {
                "id": 1914886,
                "content": [
                    {
                        "username": "user2646kj",
                        "content": "class Solution {\\n     public static void main(String[] args) {\\n\\n        System.out.println(isPalindrome(10));\\n\\n\\n    }\\n    static boolean isPalindrome(int x)\\n   {\\n       int temp=x;\\n       int rev=0;\\n\\n       while(x>0)\\n       {\\n           int digit=x%10;\\n           rev=(rev*10)+digit;\\n           x=x/10;\\n       }\\n       if(rev==temp)\\n       {\\n           return true;\\n       }\\nreturn false;\\n\\n   }\\n}\\n"
                    },
                    {
                        "username": "saeed0home",
                        "content": "# Is palindrome\n\n\"\"\nclass Solution:\n    def isPalindrome(self, x):\n        x_ = str(x)\n        y = x_[::-1]\n\n        if y == x_:\n            print('true')\n        else:\n            print('false')\n\nSolution().isPalindrome(int(input()))\n\"\"\n\n\nSomebody tell me what is wrong in this code !"
                    },
                    {
                        "username": "nebula1776",
                        "content": "Well this prints true and false, isn't it supposed to ### return ### true and false?"
                    },
                    {
                        "username": "AnubhavDevnath",
                        "content": "y = x\\nrev = 0\\nr = 0\\nwhile x>0:\\n                rev = ((rev*10)+x%10)\\n                x = x//10\\nif rev == y:\\n                return True\\nelse:\\n                return False"
                    },
                    {
                        "username": "sharad907",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int n) {\\n        int rem, rev = 0;\\n        int temp = n;\\n        while (temp) {\\n            rem = temp % 10;\\n            rev = rev * 10 + rem;\\n            temp = temp / 10;\\n        }\\n        \\n        return rev == n;\\n    }\\n};\\nwhy mine not working  on negativw no how to make it work\\n"
                    },
                    {
                        "username": "Deep_down",
                        "content": "I think it is easy .\\nLet try to solve yourself.\\uD83D\\uDE0A"
                    },
                    {
                        "username": "Piyapiku",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n\\n        int reverse =0;\\n        int originalX = x;\\n        while(x>0)\\n        {\\n            reverse = (reverse*10) + (x%10);\\n            x/=10;\\n        }\\n        if(reverse == originalX )\\n        {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};\\n\\nwhat is the problem in this code\\nI am getting error in this // reverse = (reverse*10) + (x%10); \\ncan someone help me with this."
                    },
                    {
                        "username": "Abi0800",
                        "content": "what is the difference between these codes...(check out loops)\n\n\n\nbool isPalindrome(int x){\n    long long int i,j,z;\n    for(i=x;i>0;i/10){\n        j=i%10;\n        z=z*10+j;\n    }\n    if(x==z)\n        return true;\n    else\n        return false;\n\n}\n\nthis code says error\nOn other hand check these code\n\nbool isPalindrome(int x){\n    long long int i,j,k;\n    for(i=x;i>0;){\n        j=i%10;\n        k=k*10+j;\n        i=i/10;\n\n    }\n    if(x==k)\n        return true;\n    else\n        return false;\n\n}"
                    },
                    {
                        "username": "Rehan_khan_07",
                        "content": "   int ans = 0, sol = 0;\\n   \\n    int originalNumber = x;\\n    \\n    while (x != 0) {\\n        int digit = x % 10;\\n        if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            if(x<0){\\n                return false;\\n            }\\n        ans = (ans * 10) + digit;\\n        x /= 10;\\n    }\\n    \\n   \\n    \\n    if (originalNumber == ans) {\\n       return true;\\n    } else {\\n        return false;\\n    }\\n    \\n\\n}\\n    \\n};\\ni have solved this by broot force."
                    },
                    {
                        "username": "ibnabdeljelil",
                        "content": "Trying to solve it without converting, I need to figure out the number of digits in x"
                    },
                    {
                        "username": "foodmanhuffy",
                        "content": "why th is my code wrong?\\n\\n        l = list(str(x))\\n        o = list(str(x))\\n        o.reverse()\\n        if o == l:\\n            print(o)\\n            print(l)\\n            return(\"true\")\\n        else:\\n            print(o)\\n            print(l)\\n            return(\"false\")"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, your code is correct. However, you forgot to add the \"class\" and \"def\" keywords. Without these, LeetCode cannot check the test cases.\\n\\nThe corrected code would be (Btw. I removed the print functions):\\n\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        l = list(str(x))\\n        o = list(str(x))\\n        o.reverse()\\n        if o == l:\\n            return True\\n        else:\\n            return False\\n\\n\\nPlease notice that this code is pretty slow. I highly recommend trying to solve this problem using the \"slice\" method.\\n\\nIf you have any questions, feel free to ask me anytime. :)"
                    }
                ]
            },
            {
                "id": 1914166,
                "content": [
                    {
                        "username": "user2646kj",
                        "content": "class Solution {\\n     public static void main(String[] args) {\\n\\n        System.out.println(isPalindrome(10));\\n\\n\\n    }\\n    static boolean isPalindrome(int x)\\n   {\\n       int temp=x;\\n       int rev=0;\\n\\n       while(x>0)\\n       {\\n           int digit=x%10;\\n           rev=(rev*10)+digit;\\n           x=x/10;\\n       }\\n       if(rev==temp)\\n       {\\n           return true;\\n       }\\nreturn false;\\n\\n   }\\n}\\n"
                    },
                    {
                        "username": "saeed0home",
                        "content": "# Is palindrome\n\n\"\"\nclass Solution:\n    def isPalindrome(self, x):\n        x_ = str(x)\n        y = x_[::-1]\n\n        if y == x_:\n            print('true')\n        else:\n            print('false')\n\nSolution().isPalindrome(int(input()))\n\"\"\n\n\nSomebody tell me what is wrong in this code !"
                    },
                    {
                        "username": "nebula1776",
                        "content": "Well this prints true and false, isn't it supposed to ### return ### true and false?"
                    },
                    {
                        "username": "AnubhavDevnath",
                        "content": "y = x\\nrev = 0\\nr = 0\\nwhile x>0:\\n                rev = ((rev*10)+x%10)\\n                x = x//10\\nif rev == y:\\n                return True\\nelse:\\n                return False"
                    },
                    {
                        "username": "sharad907",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int n) {\\n        int rem, rev = 0;\\n        int temp = n;\\n        while (temp) {\\n            rem = temp % 10;\\n            rev = rev * 10 + rem;\\n            temp = temp / 10;\\n        }\\n        \\n        return rev == n;\\n    }\\n};\\nwhy mine not working  on negativw no how to make it work\\n"
                    },
                    {
                        "username": "Deep_down",
                        "content": "I think it is easy .\\nLet try to solve yourself.\\uD83D\\uDE0A"
                    },
                    {
                        "username": "Piyapiku",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n\\n        int reverse =0;\\n        int originalX = x;\\n        while(x>0)\\n        {\\n            reverse = (reverse*10) + (x%10);\\n            x/=10;\\n        }\\n        if(reverse == originalX )\\n        {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};\\n\\nwhat is the problem in this code\\nI am getting error in this // reverse = (reverse*10) + (x%10); \\ncan someone help me with this."
                    },
                    {
                        "username": "Abi0800",
                        "content": "what is the difference between these codes...(check out loops)\n\n\n\nbool isPalindrome(int x){\n    long long int i,j,z;\n    for(i=x;i>0;i/10){\n        j=i%10;\n        z=z*10+j;\n    }\n    if(x==z)\n        return true;\n    else\n        return false;\n\n}\n\nthis code says error\nOn other hand check these code\n\nbool isPalindrome(int x){\n    long long int i,j,k;\n    for(i=x;i>0;){\n        j=i%10;\n        k=k*10+j;\n        i=i/10;\n\n    }\n    if(x==k)\n        return true;\n    else\n        return false;\n\n}"
                    },
                    {
                        "username": "Rehan_khan_07",
                        "content": "   int ans = 0, sol = 0;\\n   \\n    int originalNumber = x;\\n    \\n    while (x != 0) {\\n        int digit = x % 10;\\n        if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            if(x<0){\\n                return false;\\n            }\\n        ans = (ans * 10) + digit;\\n        x /= 10;\\n    }\\n    \\n   \\n    \\n    if (originalNumber == ans) {\\n       return true;\\n    } else {\\n        return false;\\n    }\\n    \\n\\n}\\n    \\n};\\ni have solved this by broot force."
                    },
                    {
                        "username": "ibnabdeljelil",
                        "content": "Trying to solve it without converting, I need to figure out the number of digits in x"
                    },
                    {
                        "username": "foodmanhuffy",
                        "content": "why th is my code wrong?\\n\\n        l = list(str(x))\\n        o = list(str(x))\\n        o.reverse()\\n        if o == l:\\n            print(o)\\n            print(l)\\n            return(\"true\")\\n        else:\\n            print(o)\\n            print(l)\\n            return(\"false\")"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, your code is correct. However, you forgot to add the \"class\" and \"def\" keywords. Without these, LeetCode cannot check the test cases.\\n\\nThe corrected code would be (Btw. I removed the print functions):\\n\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        l = list(str(x))\\n        o = list(str(x))\\n        o.reverse()\\n        if o == l:\\n            return True\\n        else:\\n            return False\\n\\n\\nPlease notice that this code is pretty slow. I highly recommend trying to solve this problem using the \"slice\" method.\\n\\nIf you have any questions, feel free to ask me anytime. :)"
                    }
                ]
            },
            {
                "id": 1906518,
                "content": [
                    {
                        "username": "user2646kj",
                        "content": "class Solution {\\n     public static void main(String[] args) {\\n\\n        System.out.println(isPalindrome(10));\\n\\n\\n    }\\n    static boolean isPalindrome(int x)\\n   {\\n       int temp=x;\\n       int rev=0;\\n\\n       while(x>0)\\n       {\\n           int digit=x%10;\\n           rev=(rev*10)+digit;\\n           x=x/10;\\n       }\\n       if(rev==temp)\\n       {\\n           return true;\\n       }\\nreturn false;\\n\\n   }\\n}\\n"
                    },
                    {
                        "username": "saeed0home",
                        "content": "# Is palindrome\n\n\"\"\nclass Solution:\n    def isPalindrome(self, x):\n        x_ = str(x)\n        y = x_[::-1]\n\n        if y == x_:\n            print('true')\n        else:\n            print('false')\n\nSolution().isPalindrome(int(input()))\n\"\"\n\n\nSomebody tell me what is wrong in this code !"
                    },
                    {
                        "username": "nebula1776",
                        "content": "Well this prints true and false, isn't it supposed to ### return ### true and false?"
                    },
                    {
                        "username": "AnubhavDevnath",
                        "content": "y = x\\nrev = 0\\nr = 0\\nwhile x>0:\\n                rev = ((rev*10)+x%10)\\n                x = x//10\\nif rev == y:\\n                return True\\nelse:\\n                return False"
                    },
                    {
                        "username": "sharad907",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int n) {\\n        int rem, rev = 0;\\n        int temp = n;\\n        while (temp) {\\n            rem = temp % 10;\\n            rev = rev * 10 + rem;\\n            temp = temp / 10;\\n        }\\n        \\n        return rev == n;\\n    }\\n};\\nwhy mine not working  on negativw no how to make it work\\n"
                    },
                    {
                        "username": "Deep_down",
                        "content": "I think it is easy .\\nLet try to solve yourself.\\uD83D\\uDE0A"
                    },
                    {
                        "username": "Piyapiku",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n\\n        int reverse =0;\\n        int originalX = x;\\n        while(x>0)\\n        {\\n            reverse = (reverse*10) + (x%10);\\n            x/=10;\\n        }\\n        if(reverse == originalX )\\n        {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};\\n\\nwhat is the problem in this code\\nI am getting error in this // reverse = (reverse*10) + (x%10); \\ncan someone help me with this."
                    },
                    {
                        "username": "Abi0800",
                        "content": "what is the difference between these codes...(check out loops)\n\n\n\nbool isPalindrome(int x){\n    long long int i,j,z;\n    for(i=x;i>0;i/10){\n        j=i%10;\n        z=z*10+j;\n    }\n    if(x==z)\n        return true;\n    else\n        return false;\n\n}\n\nthis code says error\nOn other hand check these code\n\nbool isPalindrome(int x){\n    long long int i,j,k;\n    for(i=x;i>0;){\n        j=i%10;\n        k=k*10+j;\n        i=i/10;\n\n    }\n    if(x==k)\n        return true;\n    else\n        return false;\n\n}"
                    },
                    {
                        "username": "Rehan_khan_07",
                        "content": "   int ans = 0, sol = 0;\\n   \\n    int originalNumber = x;\\n    \\n    while (x != 0) {\\n        int digit = x % 10;\\n        if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            if(x<0){\\n                return false;\\n            }\\n        ans = (ans * 10) + digit;\\n        x /= 10;\\n    }\\n    \\n   \\n    \\n    if (originalNumber == ans) {\\n       return true;\\n    } else {\\n        return false;\\n    }\\n    \\n\\n}\\n    \\n};\\ni have solved this by broot force."
                    },
                    {
                        "username": "ibnabdeljelil",
                        "content": "Trying to solve it without converting, I need to figure out the number of digits in x"
                    },
                    {
                        "username": "foodmanhuffy",
                        "content": "why th is my code wrong?\\n\\n        l = list(str(x))\\n        o = list(str(x))\\n        o.reverse()\\n        if o == l:\\n            print(o)\\n            print(l)\\n            return(\"true\")\\n        else:\\n            print(o)\\n            print(l)\\n            return(\"false\")"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, your code is correct. However, you forgot to add the \"class\" and \"def\" keywords. Without these, LeetCode cannot check the test cases.\\n\\nThe corrected code would be (Btw. I removed the print functions):\\n\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        l = list(str(x))\\n        o = list(str(x))\\n        o.reverse()\\n        if o == l:\\n            return True\\n        else:\\n            return False\\n\\n\\nPlease notice that this code is pretty slow. I highly recommend trying to solve this problem using the \"slice\" method.\\n\\nIf you have any questions, feel free to ask me anytime. :)"
                    }
                ]
            },
            {
                "id": 1905849,
                "content": [
                    {
                        "username": "user2646kj",
                        "content": "class Solution {\\n     public static void main(String[] args) {\\n\\n        System.out.println(isPalindrome(10));\\n\\n\\n    }\\n    static boolean isPalindrome(int x)\\n   {\\n       int temp=x;\\n       int rev=0;\\n\\n       while(x>0)\\n       {\\n           int digit=x%10;\\n           rev=(rev*10)+digit;\\n           x=x/10;\\n       }\\n       if(rev==temp)\\n       {\\n           return true;\\n       }\\nreturn false;\\n\\n   }\\n}\\n"
                    },
                    {
                        "username": "saeed0home",
                        "content": "# Is palindrome\n\n\"\"\nclass Solution:\n    def isPalindrome(self, x):\n        x_ = str(x)\n        y = x_[::-1]\n\n        if y == x_:\n            print('true')\n        else:\n            print('false')\n\nSolution().isPalindrome(int(input()))\n\"\"\n\n\nSomebody tell me what is wrong in this code !"
                    },
                    {
                        "username": "nebula1776",
                        "content": "Well this prints true and false, isn't it supposed to ### return ### true and false?"
                    },
                    {
                        "username": "AnubhavDevnath",
                        "content": "y = x\\nrev = 0\\nr = 0\\nwhile x>0:\\n                rev = ((rev*10)+x%10)\\n                x = x//10\\nif rev == y:\\n                return True\\nelse:\\n                return False"
                    },
                    {
                        "username": "sharad907",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int n) {\\n        int rem, rev = 0;\\n        int temp = n;\\n        while (temp) {\\n            rem = temp % 10;\\n            rev = rev * 10 + rem;\\n            temp = temp / 10;\\n        }\\n        \\n        return rev == n;\\n    }\\n};\\nwhy mine not working  on negativw no how to make it work\\n"
                    },
                    {
                        "username": "Deep_down",
                        "content": "I think it is easy .\\nLet try to solve yourself.\\uD83D\\uDE0A"
                    },
                    {
                        "username": "Piyapiku",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n\\n        int reverse =0;\\n        int originalX = x;\\n        while(x>0)\\n        {\\n            reverse = (reverse*10) + (x%10);\\n            x/=10;\\n        }\\n        if(reverse == originalX )\\n        {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};\\n\\nwhat is the problem in this code\\nI am getting error in this // reverse = (reverse*10) + (x%10); \\ncan someone help me with this."
                    },
                    {
                        "username": "Abi0800",
                        "content": "what is the difference between these codes...(check out loops)\n\n\n\nbool isPalindrome(int x){\n    long long int i,j,z;\n    for(i=x;i>0;i/10){\n        j=i%10;\n        z=z*10+j;\n    }\n    if(x==z)\n        return true;\n    else\n        return false;\n\n}\n\nthis code says error\nOn other hand check these code\n\nbool isPalindrome(int x){\n    long long int i,j,k;\n    for(i=x;i>0;){\n        j=i%10;\n        k=k*10+j;\n        i=i/10;\n\n    }\n    if(x==k)\n        return true;\n    else\n        return false;\n\n}"
                    },
                    {
                        "username": "Rehan_khan_07",
                        "content": "   int ans = 0, sol = 0;\\n   \\n    int originalNumber = x;\\n    \\n    while (x != 0) {\\n        int digit = x % 10;\\n        if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            if(x<0){\\n                return false;\\n            }\\n        ans = (ans * 10) + digit;\\n        x /= 10;\\n    }\\n    \\n   \\n    \\n    if (originalNumber == ans) {\\n       return true;\\n    } else {\\n        return false;\\n    }\\n    \\n\\n}\\n    \\n};\\ni have solved this by broot force."
                    },
                    {
                        "username": "ibnabdeljelil",
                        "content": "Trying to solve it without converting, I need to figure out the number of digits in x"
                    },
                    {
                        "username": "foodmanhuffy",
                        "content": "why th is my code wrong?\\n\\n        l = list(str(x))\\n        o = list(str(x))\\n        o.reverse()\\n        if o == l:\\n            print(o)\\n            print(l)\\n            return(\"true\")\\n        else:\\n            print(o)\\n            print(l)\\n            return(\"false\")"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, your code is correct. However, you forgot to add the \"class\" and \"def\" keywords. Without these, LeetCode cannot check the test cases.\\n\\nThe corrected code would be (Btw. I removed the print functions):\\n\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        l = list(str(x))\\n        o = list(str(x))\\n        o.reverse()\\n        if o == l:\\n            return True\\n        else:\\n            return False\\n\\n\\nPlease notice that this code is pretty slow. I highly recommend trying to solve this problem using the \"slice\" method.\\n\\nIf you have any questions, feel free to ask me anytime. :)"
                    }
                ]
            },
            {
                "id": 1905582,
                "content": [
                    {
                        "username": "motl_c",
                        "content": "I am new to C++ and am having so trouble with this one. \n\nclass Solution {\npublic:\n    bool isPalindrome(int x) {\n        int r, revnum = 0 ;\n        const int n = x; \n        while( x > 0){\n            r = x%10; \n            x = x / 10;\n            revnum = (revnum * 10)+ r ; \n            return (revnum); \n\n        }\n        return x== revnum || x == revnum /10; \n    }\n};\n\n\nthis is my code so far and it works for 11500/11511 of the test cases. Was wondering if anyone knew why it is not work for 11 of the cases. an example of a case it doesn't work for is 123. Let me know if anyone has an idea. Thanks :) "
                    },
                    {
                        "username": "vigneshwa027",
                        "content": "i dont see a way to do without converting to string.. is thr any?\\n"
                    },
                    {
                        "username": "aasthajain7078",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n      if(x < 0){\\n}\\n\\n        int reverse = 0;\\n        int num=x;\\n\\n\\n        while(x > 0){\\n            reverse = reverse*10 + x%10;\\n            x = x/10;\\n        }\\n\\n        if(reverse == num)\\n          return true;\\n\\n        return false;\\n    }\\n}"
                    },
                    {
                        "username": "Pooriya740",
                        "content": "My code is working correctly when i run it in my console (with same test cases and other tests), but here it shows wrong output. why?? "
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, could u please share your code? "
                    },
                    {
                        "username": "sammeshach023",
                        "content": "x = input()\\ny = x[::-1]\\nif x == y:\\n    print(\"true\")\\nelse:\\n    print(\"false\")\\n\\n CAN ANYONE FIND THE ERROR??"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, you understood the problem at its core. However, there are some issues in your code.\n1. The variable `x` doesn't need to be explicitly defined since you are using a \"def\" method. Platforms like LeetCode automatically assign a value to `x` when testing your code.\n\n2. In this case, slicing `x` and assigning it to `y` causes unnecessary trouble and conflicts with your code (as mentioned in point 3).\n\n3.Because x is not an input (string), you have to define x as a string. In your example str(x). Make always sure to convert an int. into a string, if u want to slice it.  (You can't slice integers, because they are not sequences.)\n\n4. Using the `print` function is fine, but for long-term use (especially in advanced tasks), using the `return` statement is preferred. Instead of using `print(\"true\")`, you can simply use `return True`, or `return False`.\n\nIf you have any questions, feel free to ask me anytime. Moreover, if you would like the solution, I can provide mine. Have a nice day and good luck on your coding adventure!\n\n"
                    },
                    {
                        "username": "hamzakhan_15",
                        "content": "Can any one tell why it is showing runtime error\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int rev=0;\\n        int rem;\\n        int v=x;\\n        while(v!=0)\\n        {   \\n            rem=v%10;\\n            rev= (rev*10) + rem;\\n            v/10;\\n        }\\n        if(v==x)\\n            return(true);\\n        else\\n            return(false);\\n\\n        \\n        \\n    }\\n};"
                    },
                    {
                        "username": "NSAIBALAJI",
                        "content": "when im testing same code in pycharm im getting correct answer but when im testing here its showing wrong answer and this is the code i written\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        x=str(x)\\n        if(x[::-1]==x):\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\nobj=Solution()\\nobj.isPalindrome(int(input()))\\nanyone reply why its showing a mistake"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, just write: \\nx_str = str(x)\\nreturn x_str == x_str[::-1]\\n\\nThe problem is, that you print true, if the condition is true and the same thing for false. This can lead to missunderstandings and errors in future. Because there are plenty of missunderstandings of the difference between return and print, wich are 2 completely different things, I highly recommend the awnser of \"Thavas Antonio\" ( https://stackoverflow.com/questions/67941485/python-why-do-we-use-boolean-values-in-functions-to-return-print-statement-in-o ).\\nHave a nice day and good luck!\\n"
                    },
                    {
                        "username": "mechatron2022",
                        "content": "This testing guys are reversing sign also\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02(121-) which is never happen. How could you reverse a sign of a number in maths."
                    },
                    {
                        "username": "sunjidarahmanmysha",
                        "content": "why is showing compile error for this code?what is wrong\\n\\n#include <iostream>\\nusing namespace std;\\n\\nvoid isPalindrome(int x) {\\n    if (x < 0) {\\n        cout << \"false\" << endl;\\n    } else {\\n        int original = x;\\n        int reversed = 0;\\n        while (x > 0) {\\n            int digit = x % 10;\\n            reversed = reversed * 10 + digit;\\n            x /= 10;\\n        }\\n        if (original == reversed) {\\n            cout << \"true\" << endl;\\n        } else {\\n            cout << \"false\" << endl;\\n        }\\n    }\\n}\\n\\nint main() {\\n     int x;\\n    cin>>x;\\n    isPalindrome(x);\\n\\n    return 0;\\n}"
                    },
                    {
                        "username": "himanshugola1111",
                        "content": "just use modulo operator to reverse a number and for negetive numbers use if(x < 0){\\n        return false;\\n    }\\nbecause negetive numbers never equals to their palindrome"
                    }
                ]
            },
            {
                "id": 1905413,
                "content": [
                    {
                        "username": "motl_c",
                        "content": "I am new to C++ and am having so trouble with this one. \n\nclass Solution {\npublic:\n    bool isPalindrome(int x) {\n        int r, revnum = 0 ;\n        const int n = x; \n        while( x > 0){\n            r = x%10; \n            x = x / 10;\n            revnum = (revnum * 10)+ r ; \n            return (revnum); \n\n        }\n        return x== revnum || x == revnum /10; \n    }\n};\n\n\nthis is my code so far and it works for 11500/11511 of the test cases. Was wondering if anyone knew why it is not work for 11 of the cases. an example of a case it doesn't work for is 123. Let me know if anyone has an idea. Thanks :) "
                    },
                    {
                        "username": "vigneshwa027",
                        "content": "i dont see a way to do without converting to string.. is thr any?\\n"
                    },
                    {
                        "username": "aasthajain7078",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n      if(x < 0){\\n}\\n\\n        int reverse = 0;\\n        int num=x;\\n\\n\\n        while(x > 0){\\n            reverse = reverse*10 + x%10;\\n            x = x/10;\\n        }\\n\\n        if(reverse == num)\\n          return true;\\n\\n        return false;\\n    }\\n}"
                    },
                    {
                        "username": "Pooriya740",
                        "content": "My code is working correctly when i run it in my console (with same test cases and other tests), but here it shows wrong output. why?? "
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, could u please share your code? "
                    },
                    {
                        "username": "sammeshach023",
                        "content": "x = input()\\ny = x[::-1]\\nif x == y:\\n    print(\"true\")\\nelse:\\n    print(\"false\")\\n\\n CAN ANYONE FIND THE ERROR??"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, you understood the problem at its core. However, there are some issues in your code.\n1. The variable `x` doesn't need to be explicitly defined since you are using a \"def\" method. Platforms like LeetCode automatically assign a value to `x` when testing your code.\n\n2. In this case, slicing `x` and assigning it to `y` causes unnecessary trouble and conflicts with your code (as mentioned in point 3).\n\n3.Because x is not an input (string), you have to define x as a string. In your example str(x). Make always sure to convert an int. into a string, if u want to slice it.  (You can't slice integers, because they are not sequences.)\n\n4. Using the `print` function is fine, but for long-term use (especially in advanced tasks), using the `return` statement is preferred. Instead of using `print(\"true\")`, you can simply use `return True`, or `return False`.\n\nIf you have any questions, feel free to ask me anytime. Moreover, if you would like the solution, I can provide mine. Have a nice day and good luck on your coding adventure!\n\n"
                    },
                    {
                        "username": "hamzakhan_15",
                        "content": "Can any one tell why it is showing runtime error\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int rev=0;\\n        int rem;\\n        int v=x;\\n        while(v!=0)\\n        {   \\n            rem=v%10;\\n            rev= (rev*10) + rem;\\n            v/10;\\n        }\\n        if(v==x)\\n            return(true);\\n        else\\n            return(false);\\n\\n        \\n        \\n    }\\n};"
                    },
                    {
                        "username": "NSAIBALAJI",
                        "content": "when im testing same code in pycharm im getting correct answer but when im testing here its showing wrong answer and this is the code i written\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        x=str(x)\\n        if(x[::-1]==x):\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\nobj=Solution()\\nobj.isPalindrome(int(input()))\\nanyone reply why its showing a mistake"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, just write: \\nx_str = str(x)\\nreturn x_str == x_str[::-1]\\n\\nThe problem is, that you print true, if the condition is true and the same thing for false. This can lead to missunderstandings and errors in future. Because there are plenty of missunderstandings of the difference between return and print, wich are 2 completely different things, I highly recommend the awnser of \"Thavas Antonio\" ( https://stackoverflow.com/questions/67941485/python-why-do-we-use-boolean-values-in-functions-to-return-print-statement-in-o ).\\nHave a nice day and good luck!\\n"
                    },
                    {
                        "username": "mechatron2022",
                        "content": "This testing guys are reversing sign also\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02(121-) which is never happen. How could you reverse a sign of a number in maths."
                    },
                    {
                        "username": "sunjidarahmanmysha",
                        "content": "why is showing compile error for this code?what is wrong\\n\\n#include <iostream>\\nusing namespace std;\\n\\nvoid isPalindrome(int x) {\\n    if (x < 0) {\\n        cout << \"false\" << endl;\\n    } else {\\n        int original = x;\\n        int reversed = 0;\\n        while (x > 0) {\\n            int digit = x % 10;\\n            reversed = reversed * 10 + digit;\\n            x /= 10;\\n        }\\n        if (original == reversed) {\\n            cout << \"true\" << endl;\\n        } else {\\n            cout << \"false\" << endl;\\n        }\\n    }\\n}\\n\\nint main() {\\n     int x;\\n    cin>>x;\\n    isPalindrome(x);\\n\\n    return 0;\\n}"
                    },
                    {
                        "username": "himanshugola1111",
                        "content": "just use modulo operator to reverse a number and for negetive numbers use if(x < 0){\\n        return false;\\n    }\\nbecause negetive numbers never equals to their palindrome"
                    }
                ]
            },
            {
                "id": 1904849,
                "content": [
                    {
                        "username": "motl_c",
                        "content": "I am new to C++ and am having so trouble with this one. \n\nclass Solution {\npublic:\n    bool isPalindrome(int x) {\n        int r, revnum = 0 ;\n        const int n = x; \n        while( x > 0){\n            r = x%10; \n            x = x / 10;\n            revnum = (revnum * 10)+ r ; \n            return (revnum); \n\n        }\n        return x== revnum || x == revnum /10; \n    }\n};\n\n\nthis is my code so far and it works for 11500/11511 of the test cases. Was wondering if anyone knew why it is not work for 11 of the cases. an example of a case it doesn't work for is 123. Let me know if anyone has an idea. Thanks :) "
                    },
                    {
                        "username": "vigneshwa027",
                        "content": "i dont see a way to do without converting to string.. is thr any?\\n"
                    },
                    {
                        "username": "aasthajain7078",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n      if(x < 0){\\n}\\n\\n        int reverse = 0;\\n        int num=x;\\n\\n\\n        while(x > 0){\\n            reverse = reverse*10 + x%10;\\n            x = x/10;\\n        }\\n\\n        if(reverse == num)\\n          return true;\\n\\n        return false;\\n    }\\n}"
                    },
                    {
                        "username": "Pooriya740",
                        "content": "My code is working correctly when i run it in my console (with same test cases and other tests), but here it shows wrong output. why?? "
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, could u please share your code? "
                    },
                    {
                        "username": "sammeshach023",
                        "content": "x = input()\\ny = x[::-1]\\nif x == y:\\n    print(\"true\")\\nelse:\\n    print(\"false\")\\n\\n CAN ANYONE FIND THE ERROR??"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, you understood the problem at its core. However, there are some issues in your code.\n1. The variable `x` doesn't need to be explicitly defined since you are using a \"def\" method. Platforms like LeetCode automatically assign a value to `x` when testing your code.\n\n2. In this case, slicing `x` and assigning it to `y` causes unnecessary trouble and conflicts with your code (as mentioned in point 3).\n\n3.Because x is not an input (string), you have to define x as a string. In your example str(x). Make always sure to convert an int. into a string, if u want to slice it.  (You can't slice integers, because they are not sequences.)\n\n4. Using the `print` function is fine, but for long-term use (especially in advanced tasks), using the `return` statement is preferred. Instead of using `print(\"true\")`, you can simply use `return True`, or `return False`.\n\nIf you have any questions, feel free to ask me anytime. Moreover, if you would like the solution, I can provide mine. Have a nice day and good luck on your coding adventure!\n\n"
                    },
                    {
                        "username": "hamzakhan_15",
                        "content": "Can any one tell why it is showing runtime error\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int rev=0;\\n        int rem;\\n        int v=x;\\n        while(v!=0)\\n        {   \\n            rem=v%10;\\n            rev= (rev*10) + rem;\\n            v/10;\\n        }\\n        if(v==x)\\n            return(true);\\n        else\\n            return(false);\\n\\n        \\n        \\n    }\\n};"
                    },
                    {
                        "username": "NSAIBALAJI",
                        "content": "when im testing same code in pycharm im getting correct answer but when im testing here its showing wrong answer and this is the code i written\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        x=str(x)\\n        if(x[::-1]==x):\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\nobj=Solution()\\nobj.isPalindrome(int(input()))\\nanyone reply why its showing a mistake"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, just write: \\nx_str = str(x)\\nreturn x_str == x_str[::-1]\\n\\nThe problem is, that you print true, if the condition is true and the same thing for false. This can lead to missunderstandings and errors in future. Because there are plenty of missunderstandings of the difference between return and print, wich are 2 completely different things, I highly recommend the awnser of \"Thavas Antonio\" ( https://stackoverflow.com/questions/67941485/python-why-do-we-use-boolean-values-in-functions-to-return-print-statement-in-o ).\\nHave a nice day and good luck!\\n"
                    },
                    {
                        "username": "mechatron2022",
                        "content": "This testing guys are reversing sign also\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02(121-) which is never happen. How could you reverse a sign of a number in maths."
                    },
                    {
                        "username": "sunjidarahmanmysha",
                        "content": "why is showing compile error for this code?what is wrong\\n\\n#include <iostream>\\nusing namespace std;\\n\\nvoid isPalindrome(int x) {\\n    if (x < 0) {\\n        cout << \"false\" << endl;\\n    } else {\\n        int original = x;\\n        int reversed = 0;\\n        while (x > 0) {\\n            int digit = x % 10;\\n            reversed = reversed * 10 + digit;\\n            x /= 10;\\n        }\\n        if (original == reversed) {\\n            cout << \"true\" << endl;\\n        } else {\\n            cout << \"false\" << endl;\\n        }\\n    }\\n}\\n\\nint main() {\\n     int x;\\n    cin>>x;\\n    isPalindrome(x);\\n\\n    return 0;\\n}"
                    },
                    {
                        "username": "himanshugola1111",
                        "content": "just use modulo operator to reverse a number and for negetive numbers use if(x < 0){\\n        return false;\\n    }\\nbecause negetive numbers never equals to their palindrome"
                    }
                ]
            },
            {
                "id": 1904023,
                "content": [
                    {
                        "username": "motl_c",
                        "content": "I am new to C++ and am having so trouble with this one. \n\nclass Solution {\npublic:\n    bool isPalindrome(int x) {\n        int r, revnum = 0 ;\n        const int n = x; \n        while( x > 0){\n            r = x%10; \n            x = x / 10;\n            revnum = (revnum * 10)+ r ; \n            return (revnum); \n\n        }\n        return x== revnum || x == revnum /10; \n    }\n};\n\n\nthis is my code so far and it works for 11500/11511 of the test cases. Was wondering if anyone knew why it is not work for 11 of the cases. an example of a case it doesn't work for is 123. Let me know if anyone has an idea. Thanks :) "
                    },
                    {
                        "username": "vigneshwa027",
                        "content": "i dont see a way to do without converting to string.. is thr any?\\n"
                    },
                    {
                        "username": "aasthajain7078",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n      if(x < 0){\\n}\\n\\n        int reverse = 0;\\n        int num=x;\\n\\n\\n        while(x > 0){\\n            reverse = reverse*10 + x%10;\\n            x = x/10;\\n        }\\n\\n        if(reverse == num)\\n          return true;\\n\\n        return false;\\n    }\\n}"
                    },
                    {
                        "username": "Pooriya740",
                        "content": "My code is working correctly when i run it in my console (with same test cases and other tests), but here it shows wrong output. why?? "
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, could u please share your code? "
                    },
                    {
                        "username": "sammeshach023",
                        "content": "x = input()\\ny = x[::-1]\\nif x == y:\\n    print(\"true\")\\nelse:\\n    print(\"false\")\\n\\n CAN ANYONE FIND THE ERROR??"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, you understood the problem at its core. However, there are some issues in your code.\n1. The variable `x` doesn't need to be explicitly defined since you are using a \"def\" method. Platforms like LeetCode automatically assign a value to `x` when testing your code.\n\n2. In this case, slicing `x` and assigning it to `y` causes unnecessary trouble and conflicts with your code (as mentioned in point 3).\n\n3.Because x is not an input (string), you have to define x as a string. In your example str(x). Make always sure to convert an int. into a string, if u want to slice it.  (You can't slice integers, because they are not sequences.)\n\n4. Using the `print` function is fine, but for long-term use (especially in advanced tasks), using the `return` statement is preferred. Instead of using `print(\"true\")`, you can simply use `return True`, or `return False`.\n\nIf you have any questions, feel free to ask me anytime. Moreover, if you would like the solution, I can provide mine. Have a nice day and good luck on your coding adventure!\n\n"
                    },
                    {
                        "username": "hamzakhan_15",
                        "content": "Can any one tell why it is showing runtime error\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int rev=0;\\n        int rem;\\n        int v=x;\\n        while(v!=0)\\n        {   \\n            rem=v%10;\\n            rev= (rev*10) + rem;\\n            v/10;\\n        }\\n        if(v==x)\\n            return(true);\\n        else\\n            return(false);\\n\\n        \\n        \\n    }\\n};"
                    },
                    {
                        "username": "NSAIBALAJI",
                        "content": "when im testing same code in pycharm im getting correct answer but when im testing here its showing wrong answer and this is the code i written\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        x=str(x)\\n        if(x[::-1]==x):\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\nobj=Solution()\\nobj.isPalindrome(int(input()))\\nanyone reply why its showing a mistake"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, just write: \\nx_str = str(x)\\nreturn x_str == x_str[::-1]\\n\\nThe problem is, that you print true, if the condition is true and the same thing for false. This can lead to missunderstandings and errors in future. Because there are plenty of missunderstandings of the difference between return and print, wich are 2 completely different things, I highly recommend the awnser of \"Thavas Antonio\" ( https://stackoverflow.com/questions/67941485/python-why-do-we-use-boolean-values-in-functions-to-return-print-statement-in-o ).\\nHave a nice day and good luck!\\n"
                    },
                    {
                        "username": "mechatron2022",
                        "content": "This testing guys are reversing sign also\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02(121-) which is never happen. How could you reverse a sign of a number in maths."
                    },
                    {
                        "username": "sunjidarahmanmysha",
                        "content": "why is showing compile error for this code?what is wrong\\n\\n#include <iostream>\\nusing namespace std;\\n\\nvoid isPalindrome(int x) {\\n    if (x < 0) {\\n        cout << \"false\" << endl;\\n    } else {\\n        int original = x;\\n        int reversed = 0;\\n        while (x > 0) {\\n            int digit = x % 10;\\n            reversed = reversed * 10 + digit;\\n            x /= 10;\\n        }\\n        if (original == reversed) {\\n            cout << \"true\" << endl;\\n        } else {\\n            cout << \"false\" << endl;\\n        }\\n    }\\n}\\n\\nint main() {\\n     int x;\\n    cin>>x;\\n    isPalindrome(x);\\n\\n    return 0;\\n}"
                    },
                    {
                        "username": "himanshugola1111",
                        "content": "just use modulo operator to reverse a number and for negetive numbers use if(x < 0){\\n        return false;\\n    }\\nbecause negetive numbers never equals to their palindrome"
                    }
                ]
            },
            {
                "id": 1903278,
                "content": [
                    {
                        "username": "motl_c",
                        "content": "I am new to C++ and am having so trouble with this one. \n\nclass Solution {\npublic:\n    bool isPalindrome(int x) {\n        int r, revnum = 0 ;\n        const int n = x; \n        while( x > 0){\n            r = x%10; \n            x = x / 10;\n            revnum = (revnum * 10)+ r ; \n            return (revnum); \n\n        }\n        return x== revnum || x == revnum /10; \n    }\n};\n\n\nthis is my code so far and it works for 11500/11511 of the test cases. Was wondering if anyone knew why it is not work for 11 of the cases. an example of a case it doesn't work for is 123. Let me know if anyone has an idea. Thanks :) "
                    },
                    {
                        "username": "vigneshwa027",
                        "content": "i dont see a way to do without converting to string.. is thr any?\\n"
                    },
                    {
                        "username": "aasthajain7078",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n      if(x < 0){\\n}\\n\\n        int reverse = 0;\\n        int num=x;\\n\\n\\n        while(x > 0){\\n            reverse = reverse*10 + x%10;\\n            x = x/10;\\n        }\\n\\n        if(reverse == num)\\n          return true;\\n\\n        return false;\\n    }\\n}"
                    },
                    {
                        "username": "Pooriya740",
                        "content": "My code is working correctly when i run it in my console (with same test cases and other tests), but here it shows wrong output. why?? "
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, could u please share your code? "
                    },
                    {
                        "username": "sammeshach023",
                        "content": "x = input()\\ny = x[::-1]\\nif x == y:\\n    print(\"true\")\\nelse:\\n    print(\"false\")\\n\\n CAN ANYONE FIND THE ERROR??"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, you understood the problem at its core. However, there are some issues in your code.\n1. The variable `x` doesn't need to be explicitly defined since you are using a \"def\" method. Platforms like LeetCode automatically assign a value to `x` when testing your code.\n\n2. In this case, slicing `x` and assigning it to `y` causes unnecessary trouble and conflicts with your code (as mentioned in point 3).\n\n3.Because x is not an input (string), you have to define x as a string. In your example str(x). Make always sure to convert an int. into a string, if u want to slice it.  (You can't slice integers, because they are not sequences.)\n\n4. Using the `print` function is fine, but for long-term use (especially in advanced tasks), using the `return` statement is preferred. Instead of using `print(\"true\")`, you can simply use `return True`, or `return False`.\n\nIf you have any questions, feel free to ask me anytime. Moreover, if you would like the solution, I can provide mine. Have a nice day and good luck on your coding adventure!\n\n"
                    },
                    {
                        "username": "hamzakhan_15",
                        "content": "Can any one tell why it is showing runtime error\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int rev=0;\\n        int rem;\\n        int v=x;\\n        while(v!=0)\\n        {   \\n            rem=v%10;\\n            rev= (rev*10) + rem;\\n            v/10;\\n        }\\n        if(v==x)\\n            return(true);\\n        else\\n            return(false);\\n\\n        \\n        \\n    }\\n};"
                    },
                    {
                        "username": "NSAIBALAJI",
                        "content": "when im testing same code in pycharm im getting correct answer but when im testing here its showing wrong answer and this is the code i written\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        x=str(x)\\n        if(x[::-1]==x):\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\nobj=Solution()\\nobj.isPalindrome(int(input()))\\nanyone reply why its showing a mistake"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, just write: \\nx_str = str(x)\\nreturn x_str == x_str[::-1]\\n\\nThe problem is, that you print true, if the condition is true and the same thing for false. This can lead to missunderstandings and errors in future. Because there are plenty of missunderstandings of the difference between return and print, wich are 2 completely different things, I highly recommend the awnser of \"Thavas Antonio\" ( https://stackoverflow.com/questions/67941485/python-why-do-we-use-boolean-values-in-functions-to-return-print-statement-in-o ).\\nHave a nice day and good luck!\\n"
                    },
                    {
                        "username": "mechatron2022",
                        "content": "This testing guys are reversing sign also\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02(121-) which is never happen. How could you reverse a sign of a number in maths."
                    },
                    {
                        "username": "sunjidarahmanmysha",
                        "content": "why is showing compile error for this code?what is wrong\\n\\n#include <iostream>\\nusing namespace std;\\n\\nvoid isPalindrome(int x) {\\n    if (x < 0) {\\n        cout << \"false\" << endl;\\n    } else {\\n        int original = x;\\n        int reversed = 0;\\n        while (x > 0) {\\n            int digit = x % 10;\\n            reversed = reversed * 10 + digit;\\n            x /= 10;\\n        }\\n        if (original == reversed) {\\n            cout << \"true\" << endl;\\n        } else {\\n            cout << \"false\" << endl;\\n        }\\n    }\\n}\\n\\nint main() {\\n     int x;\\n    cin>>x;\\n    isPalindrome(x);\\n\\n    return 0;\\n}"
                    },
                    {
                        "username": "himanshugola1111",
                        "content": "just use modulo operator to reverse a number and for negetive numbers use if(x < 0){\\n        return false;\\n    }\\nbecause negetive numbers never equals to their palindrome"
                    }
                ]
            },
            {
                "id": 1900327,
                "content": [
                    {
                        "username": "motl_c",
                        "content": "I am new to C++ and am having so trouble with this one. \n\nclass Solution {\npublic:\n    bool isPalindrome(int x) {\n        int r, revnum = 0 ;\n        const int n = x; \n        while( x > 0){\n            r = x%10; \n            x = x / 10;\n            revnum = (revnum * 10)+ r ; \n            return (revnum); \n\n        }\n        return x== revnum || x == revnum /10; \n    }\n};\n\n\nthis is my code so far and it works for 11500/11511 of the test cases. Was wondering if anyone knew why it is not work for 11 of the cases. an example of a case it doesn't work for is 123. Let me know if anyone has an idea. Thanks :) "
                    },
                    {
                        "username": "vigneshwa027",
                        "content": "i dont see a way to do without converting to string.. is thr any?\\n"
                    },
                    {
                        "username": "aasthajain7078",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n      if(x < 0){\\n}\\n\\n        int reverse = 0;\\n        int num=x;\\n\\n\\n        while(x > 0){\\n            reverse = reverse*10 + x%10;\\n            x = x/10;\\n        }\\n\\n        if(reverse == num)\\n          return true;\\n\\n        return false;\\n    }\\n}"
                    },
                    {
                        "username": "Pooriya740",
                        "content": "My code is working correctly when i run it in my console (with same test cases and other tests), but here it shows wrong output. why?? "
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, could u please share your code? "
                    },
                    {
                        "username": "sammeshach023",
                        "content": "x = input()\\ny = x[::-1]\\nif x == y:\\n    print(\"true\")\\nelse:\\n    print(\"false\")\\n\\n CAN ANYONE FIND THE ERROR??"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, you understood the problem at its core. However, there are some issues in your code.\n1. The variable `x` doesn't need to be explicitly defined since you are using a \"def\" method. Platforms like LeetCode automatically assign a value to `x` when testing your code.\n\n2. In this case, slicing `x` and assigning it to `y` causes unnecessary trouble and conflicts with your code (as mentioned in point 3).\n\n3.Because x is not an input (string), you have to define x as a string. In your example str(x). Make always sure to convert an int. into a string, if u want to slice it.  (You can't slice integers, because they are not sequences.)\n\n4. Using the `print` function is fine, but for long-term use (especially in advanced tasks), using the `return` statement is preferred. Instead of using `print(\"true\")`, you can simply use `return True`, or `return False`.\n\nIf you have any questions, feel free to ask me anytime. Moreover, if you would like the solution, I can provide mine. Have a nice day and good luck on your coding adventure!\n\n"
                    },
                    {
                        "username": "hamzakhan_15",
                        "content": "Can any one tell why it is showing runtime error\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int rev=0;\\n        int rem;\\n        int v=x;\\n        while(v!=0)\\n        {   \\n            rem=v%10;\\n            rev= (rev*10) + rem;\\n            v/10;\\n        }\\n        if(v==x)\\n            return(true);\\n        else\\n            return(false);\\n\\n        \\n        \\n    }\\n};"
                    },
                    {
                        "username": "NSAIBALAJI",
                        "content": "when im testing same code in pycharm im getting correct answer but when im testing here its showing wrong answer and this is the code i written\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        x=str(x)\\n        if(x[::-1]==x):\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\nobj=Solution()\\nobj.isPalindrome(int(input()))\\nanyone reply why its showing a mistake"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, just write: \\nx_str = str(x)\\nreturn x_str == x_str[::-1]\\n\\nThe problem is, that you print true, if the condition is true and the same thing for false. This can lead to missunderstandings and errors in future. Because there are plenty of missunderstandings of the difference between return and print, wich are 2 completely different things, I highly recommend the awnser of \"Thavas Antonio\" ( https://stackoverflow.com/questions/67941485/python-why-do-we-use-boolean-values-in-functions-to-return-print-statement-in-o ).\\nHave a nice day and good luck!\\n"
                    },
                    {
                        "username": "mechatron2022",
                        "content": "This testing guys are reversing sign also\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02(121-) which is never happen. How could you reverse a sign of a number in maths."
                    },
                    {
                        "username": "sunjidarahmanmysha",
                        "content": "why is showing compile error for this code?what is wrong\\n\\n#include <iostream>\\nusing namespace std;\\n\\nvoid isPalindrome(int x) {\\n    if (x < 0) {\\n        cout << \"false\" << endl;\\n    } else {\\n        int original = x;\\n        int reversed = 0;\\n        while (x > 0) {\\n            int digit = x % 10;\\n            reversed = reversed * 10 + digit;\\n            x /= 10;\\n        }\\n        if (original == reversed) {\\n            cout << \"true\" << endl;\\n        } else {\\n            cout << \"false\" << endl;\\n        }\\n    }\\n}\\n\\nint main() {\\n     int x;\\n    cin>>x;\\n    isPalindrome(x);\\n\\n    return 0;\\n}"
                    },
                    {
                        "username": "himanshugola1111",
                        "content": "just use modulo operator to reverse a number and for negetive numbers use if(x < 0){\\n        return false;\\n    }\\nbecause negetive numbers never equals to their palindrome"
                    }
                ]
            },
            {
                "id": 1897681,
                "content": [
                    {
                        "username": "motl_c",
                        "content": "I am new to C++ and am having so trouble with this one. \n\nclass Solution {\npublic:\n    bool isPalindrome(int x) {\n        int r, revnum = 0 ;\n        const int n = x; \n        while( x > 0){\n            r = x%10; \n            x = x / 10;\n            revnum = (revnum * 10)+ r ; \n            return (revnum); \n\n        }\n        return x== revnum || x == revnum /10; \n    }\n};\n\n\nthis is my code so far and it works for 11500/11511 of the test cases. Was wondering if anyone knew why it is not work for 11 of the cases. an example of a case it doesn't work for is 123. Let me know if anyone has an idea. Thanks :) "
                    },
                    {
                        "username": "vigneshwa027",
                        "content": "i dont see a way to do without converting to string.. is thr any?\\n"
                    },
                    {
                        "username": "aasthajain7078",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n      if(x < 0){\\n}\\n\\n        int reverse = 0;\\n        int num=x;\\n\\n\\n        while(x > 0){\\n            reverse = reverse*10 + x%10;\\n            x = x/10;\\n        }\\n\\n        if(reverse == num)\\n          return true;\\n\\n        return false;\\n    }\\n}"
                    },
                    {
                        "username": "Pooriya740",
                        "content": "My code is working correctly when i run it in my console (with same test cases and other tests), but here it shows wrong output. why?? "
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, could u please share your code? "
                    },
                    {
                        "username": "sammeshach023",
                        "content": "x = input()\\ny = x[::-1]\\nif x == y:\\n    print(\"true\")\\nelse:\\n    print(\"false\")\\n\\n CAN ANYONE FIND THE ERROR??"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, you understood the problem at its core. However, there are some issues in your code.\n1. The variable `x` doesn't need to be explicitly defined since you are using a \"def\" method. Platforms like LeetCode automatically assign a value to `x` when testing your code.\n\n2. In this case, slicing `x` and assigning it to `y` causes unnecessary trouble and conflicts with your code (as mentioned in point 3).\n\n3.Because x is not an input (string), you have to define x as a string. In your example str(x). Make always sure to convert an int. into a string, if u want to slice it.  (You can't slice integers, because they are not sequences.)\n\n4. Using the `print` function is fine, but for long-term use (especially in advanced tasks), using the `return` statement is preferred. Instead of using `print(\"true\")`, you can simply use `return True`, or `return False`.\n\nIf you have any questions, feel free to ask me anytime. Moreover, if you would like the solution, I can provide mine. Have a nice day and good luck on your coding adventure!\n\n"
                    },
                    {
                        "username": "hamzakhan_15",
                        "content": "Can any one tell why it is showing runtime error\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int rev=0;\\n        int rem;\\n        int v=x;\\n        while(v!=0)\\n        {   \\n            rem=v%10;\\n            rev= (rev*10) + rem;\\n            v/10;\\n        }\\n        if(v==x)\\n            return(true);\\n        else\\n            return(false);\\n\\n        \\n        \\n    }\\n};"
                    },
                    {
                        "username": "NSAIBALAJI",
                        "content": "when im testing same code in pycharm im getting correct answer but when im testing here its showing wrong answer and this is the code i written\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        x=str(x)\\n        if(x[::-1]==x):\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\nobj=Solution()\\nobj.isPalindrome(int(input()))\\nanyone reply why its showing a mistake"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, just write: \\nx_str = str(x)\\nreturn x_str == x_str[::-1]\\n\\nThe problem is, that you print true, if the condition is true and the same thing for false. This can lead to missunderstandings and errors in future. Because there are plenty of missunderstandings of the difference between return and print, wich are 2 completely different things, I highly recommend the awnser of \"Thavas Antonio\" ( https://stackoverflow.com/questions/67941485/python-why-do-we-use-boolean-values-in-functions-to-return-print-statement-in-o ).\\nHave a nice day and good luck!\\n"
                    },
                    {
                        "username": "mechatron2022",
                        "content": "This testing guys are reversing sign also\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02(121-) which is never happen. How could you reverse a sign of a number in maths."
                    },
                    {
                        "username": "sunjidarahmanmysha",
                        "content": "why is showing compile error for this code?what is wrong\\n\\n#include <iostream>\\nusing namespace std;\\n\\nvoid isPalindrome(int x) {\\n    if (x < 0) {\\n        cout << \"false\" << endl;\\n    } else {\\n        int original = x;\\n        int reversed = 0;\\n        while (x > 0) {\\n            int digit = x % 10;\\n            reversed = reversed * 10 + digit;\\n            x /= 10;\\n        }\\n        if (original == reversed) {\\n            cout << \"true\" << endl;\\n        } else {\\n            cout << \"false\" << endl;\\n        }\\n    }\\n}\\n\\nint main() {\\n     int x;\\n    cin>>x;\\n    isPalindrome(x);\\n\\n    return 0;\\n}"
                    },
                    {
                        "username": "himanshugola1111",
                        "content": "just use modulo operator to reverse a number and for negetive numbers use if(x < 0){\\n        return false;\\n    }\\nbecause negetive numbers never equals to their palindrome"
                    }
                ]
            },
            {
                "id": 1895626,
                "content": [
                    {
                        "username": "motl_c",
                        "content": "I am new to C++ and am having so trouble with this one. \n\nclass Solution {\npublic:\n    bool isPalindrome(int x) {\n        int r, revnum = 0 ;\n        const int n = x; \n        while( x > 0){\n            r = x%10; \n            x = x / 10;\n            revnum = (revnum * 10)+ r ; \n            return (revnum); \n\n        }\n        return x== revnum || x == revnum /10; \n    }\n};\n\n\nthis is my code so far and it works for 11500/11511 of the test cases. Was wondering if anyone knew why it is not work for 11 of the cases. an example of a case it doesn't work for is 123. Let me know if anyone has an idea. Thanks :) "
                    },
                    {
                        "username": "vigneshwa027",
                        "content": "i dont see a way to do without converting to string.. is thr any?\\n"
                    },
                    {
                        "username": "aasthajain7078",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n      if(x < 0){\\n}\\n\\n        int reverse = 0;\\n        int num=x;\\n\\n\\n        while(x > 0){\\n            reverse = reverse*10 + x%10;\\n            x = x/10;\\n        }\\n\\n        if(reverse == num)\\n          return true;\\n\\n        return false;\\n    }\\n}"
                    },
                    {
                        "username": "Pooriya740",
                        "content": "My code is working correctly when i run it in my console (with same test cases and other tests), but here it shows wrong output. why?? "
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, could u please share your code? "
                    },
                    {
                        "username": "sammeshach023",
                        "content": "x = input()\\ny = x[::-1]\\nif x == y:\\n    print(\"true\")\\nelse:\\n    print(\"false\")\\n\\n CAN ANYONE FIND THE ERROR??"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, you understood the problem at its core. However, there are some issues in your code.\n1. The variable `x` doesn't need to be explicitly defined since you are using a \"def\" method. Platforms like LeetCode automatically assign a value to `x` when testing your code.\n\n2. In this case, slicing `x` and assigning it to `y` causes unnecessary trouble and conflicts with your code (as mentioned in point 3).\n\n3.Because x is not an input (string), you have to define x as a string. In your example str(x). Make always sure to convert an int. into a string, if u want to slice it.  (You can't slice integers, because they are not sequences.)\n\n4. Using the `print` function is fine, but for long-term use (especially in advanced tasks), using the `return` statement is preferred. Instead of using `print(\"true\")`, you can simply use `return True`, or `return False`.\n\nIf you have any questions, feel free to ask me anytime. Moreover, if you would like the solution, I can provide mine. Have a nice day and good luck on your coding adventure!\n\n"
                    },
                    {
                        "username": "hamzakhan_15",
                        "content": "Can any one tell why it is showing runtime error\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int rev=0;\\n        int rem;\\n        int v=x;\\n        while(v!=0)\\n        {   \\n            rem=v%10;\\n            rev= (rev*10) + rem;\\n            v/10;\\n        }\\n        if(v==x)\\n            return(true);\\n        else\\n            return(false);\\n\\n        \\n        \\n    }\\n};"
                    },
                    {
                        "username": "NSAIBALAJI",
                        "content": "when im testing same code in pycharm im getting correct answer but when im testing here its showing wrong answer and this is the code i written\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        x=str(x)\\n        if(x[::-1]==x):\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\nobj=Solution()\\nobj.isPalindrome(int(input()))\\nanyone reply why its showing a mistake"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, just write: \\nx_str = str(x)\\nreturn x_str == x_str[::-1]\\n\\nThe problem is, that you print true, if the condition is true and the same thing for false. This can lead to missunderstandings and errors in future. Because there are plenty of missunderstandings of the difference between return and print, wich are 2 completely different things, I highly recommend the awnser of \"Thavas Antonio\" ( https://stackoverflow.com/questions/67941485/python-why-do-we-use-boolean-values-in-functions-to-return-print-statement-in-o ).\\nHave a nice day and good luck!\\n"
                    },
                    {
                        "username": "mechatron2022",
                        "content": "This testing guys are reversing sign also\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02(121-) which is never happen. How could you reverse a sign of a number in maths."
                    },
                    {
                        "username": "sunjidarahmanmysha",
                        "content": "why is showing compile error for this code?what is wrong\\n\\n#include <iostream>\\nusing namespace std;\\n\\nvoid isPalindrome(int x) {\\n    if (x < 0) {\\n        cout << \"false\" << endl;\\n    } else {\\n        int original = x;\\n        int reversed = 0;\\n        while (x > 0) {\\n            int digit = x % 10;\\n            reversed = reversed * 10 + digit;\\n            x /= 10;\\n        }\\n        if (original == reversed) {\\n            cout << \"true\" << endl;\\n        } else {\\n            cout << \"false\" << endl;\\n        }\\n    }\\n}\\n\\nint main() {\\n     int x;\\n    cin>>x;\\n    isPalindrome(x);\\n\\n    return 0;\\n}"
                    },
                    {
                        "username": "himanshugola1111",
                        "content": "just use modulo operator to reverse a number and for negetive numbers use if(x < 0){\\n        return false;\\n    }\\nbecause negetive numbers never equals to their palindrome"
                    }
                ]
            },
            {
                "id": 1888070,
                "content": [
                    {
                        "username": "motl_c",
                        "content": "I am new to C++ and am having so trouble with this one. \n\nclass Solution {\npublic:\n    bool isPalindrome(int x) {\n        int r, revnum = 0 ;\n        const int n = x; \n        while( x > 0){\n            r = x%10; \n            x = x / 10;\n            revnum = (revnum * 10)+ r ; \n            return (revnum); \n\n        }\n        return x== revnum || x == revnum /10; \n    }\n};\n\n\nthis is my code so far and it works for 11500/11511 of the test cases. Was wondering if anyone knew why it is not work for 11 of the cases. an example of a case it doesn't work for is 123. Let me know if anyone has an idea. Thanks :) "
                    },
                    {
                        "username": "vigneshwa027",
                        "content": "i dont see a way to do without converting to string.. is thr any?\\n"
                    },
                    {
                        "username": "aasthajain7078",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n      if(x < 0){\\n}\\n\\n        int reverse = 0;\\n        int num=x;\\n\\n\\n        while(x > 0){\\n            reverse = reverse*10 + x%10;\\n            x = x/10;\\n        }\\n\\n        if(reverse == num)\\n          return true;\\n\\n        return false;\\n    }\\n}"
                    },
                    {
                        "username": "Pooriya740",
                        "content": "My code is working correctly when i run it in my console (with same test cases and other tests), but here it shows wrong output. why?? "
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, could u please share your code? "
                    },
                    {
                        "username": "sammeshach023",
                        "content": "x = input()\\ny = x[::-1]\\nif x == y:\\n    print(\"true\")\\nelse:\\n    print(\"false\")\\n\\n CAN ANYONE FIND THE ERROR??"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, you understood the problem at its core. However, there are some issues in your code.\n1. The variable `x` doesn't need to be explicitly defined since you are using a \"def\" method. Platforms like LeetCode automatically assign a value to `x` when testing your code.\n\n2. In this case, slicing `x` and assigning it to `y` causes unnecessary trouble and conflicts with your code (as mentioned in point 3).\n\n3.Because x is not an input (string), you have to define x as a string. In your example str(x). Make always sure to convert an int. into a string, if u want to slice it.  (You can't slice integers, because they are not sequences.)\n\n4. Using the `print` function is fine, but for long-term use (especially in advanced tasks), using the `return` statement is preferred. Instead of using `print(\"true\")`, you can simply use `return True`, or `return False`.\n\nIf you have any questions, feel free to ask me anytime. Moreover, if you would like the solution, I can provide mine. Have a nice day and good luck on your coding adventure!\n\n"
                    },
                    {
                        "username": "hamzakhan_15",
                        "content": "Can any one tell why it is showing runtime error\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int rev=0;\\n        int rem;\\n        int v=x;\\n        while(v!=0)\\n        {   \\n            rem=v%10;\\n            rev= (rev*10) + rem;\\n            v/10;\\n        }\\n        if(v==x)\\n            return(true);\\n        else\\n            return(false);\\n\\n        \\n        \\n    }\\n};"
                    },
                    {
                        "username": "NSAIBALAJI",
                        "content": "when im testing same code in pycharm im getting correct answer but when im testing here its showing wrong answer and this is the code i written\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        x=str(x)\\n        if(x[::-1]==x):\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\nobj=Solution()\\nobj.isPalindrome(int(input()))\\nanyone reply why its showing a mistake"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, just write: \\nx_str = str(x)\\nreturn x_str == x_str[::-1]\\n\\nThe problem is, that you print true, if the condition is true and the same thing for false. This can lead to missunderstandings and errors in future. Because there are plenty of missunderstandings of the difference between return and print, wich are 2 completely different things, I highly recommend the awnser of \"Thavas Antonio\" ( https://stackoverflow.com/questions/67941485/python-why-do-we-use-boolean-values-in-functions-to-return-print-statement-in-o ).\\nHave a nice day and good luck!\\n"
                    },
                    {
                        "username": "mechatron2022",
                        "content": "This testing guys are reversing sign also\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02(121-) which is never happen. How could you reverse a sign of a number in maths."
                    },
                    {
                        "username": "sunjidarahmanmysha",
                        "content": "why is showing compile error for this code?what is wrong\\n\\n#include <iostream>\\nusing namespace std;\\n\\nvoid isPalindrome(int x) {\\n    if (x < 0) {\\n        cout << \"false\" << endl;\\n    } else {\\n        int original = x;\\n        int reversed = 0;\\n        while (x > 0) {\\n            int digit = x % 10;\\n            reversed = reversed * 10 + digit;\\n            x /= 10;\\n        }\\n        if (original == reversed) {\\n            cout << \"true\" << endl;\\n        } else {\\n            cout << \"false\" << endl;\\n        }\\n    }\\n}\\n\\nint main() {\\n     int x;\\n    cin>>x;\\n    isPalindrome(x);\\n\\n    return 0;\\n}"
                    },
                    {
                        "username": "himanshugola1111",
                        "content": "just use modulo operator to reverse a number and for negetive numbers use if(x < 0){\\n        return false;\\n    }\\nbecause negetive numbers never equals to their palindrome"
                    }
                ]
            },
            {
                "id": 1887277,
                "content": [
                    {
                        "username": "motl_c",
                        "content": "I am new to C++ and am having so trouble with this one. \n\nclass Solution {\npublic:\n    bool isPalindrome(int x) {\n        int r, revnum = 0 ;\n        const int n = x; \n        while( x > 0){\n            r = x%10; \n            x = x / 10;\n            revnum = (revnum * 10)+ r ; \n            return (revnum); \n\n        }\n        return x== revnum || x == revnum /10; \n    }\n};\n\n\nthis is my code so far and it works for 11500/11511 of the test cases. Was wondering if anyone knew why it is not work for 11 of the cases. an example of a case it doesn't work for is 123. Let me know if anyone has an idea. Thanks :) "
                    },
                    {
                        "username": "vigneshwa027",
                        "content": "i dont see a way to do without converting to string.. is thr any?\\n"
                    },
                    {
                        "username": "aasthajain7078",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n      if(x < 0){\\n}\\n\\n        int reverse = 0;\\n        int num=x;\\n\\n\\n        while(x > 0){\\n            reverse = reverse*10 + x%10;\\n            x = x/10;\\n        }\\n\\n        if(reverse == num)\\n          return true;\\n\\n        return false;\\n    }\\n}"
                    },
                    {
                        "username": "Pooriya740",
                        "content": "My code is working correctly when i run it in my console (with same test cases and other tests), but here it shows wrong output. why?? "
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, could u please share your code? "
                    },
                    {
                        "username": "sammeshach023",
                        "content": "x = input()\\ny = x[::-1]\\nif x == y:\\n    print(\"true\")\\nelse:\\n    print(\"false\")\\n\\n CAN ANYONE FIND THE ERROR??"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, you understood the problem at its core. However, there are some issues in your code.\n1. The variable `x` doesn't need to be explicitly defined since you are using a \"def\" method. Platforms like LeetCode automatically assign a value to `x` when testing your code.\n\n2. In this case, slicing `x` and assigning it to `y` causes unnecessary trouble and conflicts with your code (as mentioned in point 3).\n\n3.Because x is not an input (string), you have to define x as a string. In your example str(x). Make always sure to convert an int. into a string, if u want to slice it.  (You can't slice integers, because they are not sequences.)\n\n4. Using the `print` function is fine, but for long-term use (especially in advanced tasks), using the `return` statement is preferred. Instead of using `print(\"true\")`, you can simply use `return True`, or `return False`.\n\nIf you have any questions, feel free to ask me anytime. Moreover, if you would like the solution, I can provide mine. Have a nice day and good luck on your coding adventure!\n\n"
                    },
                    {
                        "username": "hamzakhan_15",
                        "content": "Can any one tell why it is showing runtime error\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int rev=0;\\n        int rem;\\n        int v=x;\\n        while(v!=0)\\n        {   \\n            rem=v%10;\\n            rev= (rev*10) + rem;\\n            v/10;\\n        }\\n        if(v==x)\\n            return(true);\\n        else\\n            return(false);\\n\\n        \\n        \\n    }\\n};"
                    },
                    {
                        "username": "NSAIBALAJI",
                        "content": "when im testing same code in pycharm im getting correct answer but when im testing here its showing wrong answer and this is the code i written\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        x=str(x)\\n        if(x[::-1]==x):\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\nobj=Solution()\\nobj.isPalindrome(int(input()))\\nanyone reply why its showing a mistake"
                    },
                    {
                        "username": "Maruuuko",
                        "content": "Hey, just write: \\nx_str = str(x)\\nreturn x_str == x_str[::-1]\\n\\nThe problem is, that you print true, if the condition is true and the same thing for false. This can lead to missunderstandings and errors in future. Because there are plenty of missunderstandings of the difference between return and print, wich are 2 completely different things, I highly recommend the awnser of \"Thavas Antonio\" ( https://stackoverflow.com/questions/67941485/python-why-do-we-use-boolean-values-in-functions-to-return-print-statement-in-o ).\\nHave a nice day and good luck!\\n"
                    },
                    {
                        "username": "mechatron2022",
                        "content": "This testing guys are reversing sign also\\uD83D\\uDE02\\uD83D\\uDE02\\uD83D\\uDE02(121-) which is never happen. How could you reverse a sign of a number in maths."
                    },
                    {
                        "username": "sunjidarahmanmysha",
                        "content": "why is showing compile error for this code?what is wrong\\n\\n#include <iostream>\\nusing namespace std;\\n\\nvoid isPalindrome(int x) {\\n    if (x < 0) {\\n        cout << \"false\" << endl;\\n    } else {\\n        int original = x;\\n        int reversed = 0;\\n        while (x > 0) {\\n            int digit = x % 10;\\n            reversed = reversed * 10 + digit;\\n            x /= 10;\\n        }\\n        if (original == reversed) {\\n            cout << \"true\" << endl;\\n        } else {\\n            cout << \"false\" << endl;\\n        }\\n    }\\n}\\n\\nint main() {\\n     int x;\\n    cin>>x;\\n    isPalindrome(x);\\n\\n    return 0;\\n}"
                    },
                    {
                        "username": "himanshugola1111",
                        "content": "just use modulo operator to reverse a number and for negetive numbers use if(x < 0){\\n        return false;\\n    }\\nbecause negetive numbers never equals to their palindrome"
                    }
                ]
            },
            {
                "id": 1887272,
                "content": [
                    {
                        "username": "samarofficial65",
                        "content": "just take input as a number and for negetive which is not equals to its palindrome write if (x<0){return false}"
                    },
                    {
                        "username": "ivanpadeliya",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        if str(x) == str(x)[::-1]:\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\n\\nWhat is the problem with this code why is it showing error in the test case 1 while 2,3 are passed and even if i run this code in the python application it does not show wrong answer while it does in leetcode"
                    },
                    {
                        "username": "amaturecoder18",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int num,n =x;\\n        float  sum=0;\\n        \\n        while(n!=0)\\n        {\\n                        num = n%10;\\n                        sum = sum*10+num;\\n                        n=n/10;\\n                    \\n            \\n        }\\n        \\n        if(sum == x)\\n        {\\n            return true;\\n        }\\n        else if( x<0)\\n        {\\n            return false;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n       \\n        \\n    }\\n};\\n\\nCan someone tell me what\\'s wrong with this code? I\\'m facing problem with testcase 2 where the answer for -121 should be false, but I\\'m getting true ."
                    },
                    {
                        "username": "user5835xp",
                        "content": "in every case it gives false result what\\'s wrong with this code\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int y = 0;\\n        while(x != 0){\\n\\n           y = y*10 + x%10;\\n           x = x/10;\\n        }\\n        if(y == x)\\n         return true;\\n        \\n        else\\n        return false;\\n        \\n    }\\n}"
                    },
                    {
                        "username": "younusalinahid",
                        "content": "testing "
                    },
                    {
                        "username": "WajahatFarooq",
                        "content": "Hello, A little suggestion would be appreciated!\\nI have written the code and it\\'s running successfully but I\\'m getting \"wrong answer\"  with a Run time: 0ms. So Let me explain my problem, When I give -121 to x then it shows green dot on both case 2 and 3 and red dot on case 1 but when i remove it, it shows green dot on case 1 but red dot on both case 2 and 3. It\\'s kinda complicated lol"
                    },
                    {
                        "username": "harshitg141975",
                        "content": "bool checkPalindrome(char str[]) {\\n    // Write your code here\\n     int  count = 0 ; \\n\\n    for (int  i = 0 ; str[i] != \\'\\\\0\\' ; i++)\\n    {\\n        count = count + 1  ; \\n    }\\n\\n    for ( int i = 0 ,  j = count - 1  ;  i <= j  ; i++ , j-- )\\n    {\\n        if ( str[i] != str[j] )\\n        {\\n              return false ;\\n        }\\n        else\\n        {\\n\\n        }\\n    }\\n     return true ; \\n}"
                    },
                    {
                        "username": "DevilGuru",
                        "content": "Tooooooooooooo Easy\\n\\nclass Solution {\\n\\n    \\n    public boolean isPalindrome(int x) {\\nint rem = 0;\\n        if( x<0){\\n            return false;\\n        }\\n\\n        if(x==0){\\n            return true;\\n        }\\n        int temp = x;\\n        while(x!=0){\\n\\n\\n          rem = rem* 10 + x%10;\\n          x /= 10;\\n           \\n        }\\n\\n        if(rem == temp){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n\\n          \\n        \\n    }\\n}"
                    },
                    {
                        "username": "Joshua0711",
                        "content": "I would like to know if the number is an even digit like 1221 is it a palindrome?"
                    },
                    {
                        "username": "potatoGuy",
                        "content": "Best way how to solved  this problem\\n\\n\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\nif(x<0||x==10){\\n    return false;\\n}return true;\\n}\\n}   \\n \\n\\n"
                    }
                ]
            },
            {
                "id": 1880246,
                "content": [
                    {
                        "username": "samarofficial65",
                        "content": "just take input as a number and for negetive which is not equals to its palindrome write if (x<0){return false}"
                    },
                    {
                        "username": "ivanpadeliya",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        if str(x) == str(x)[::-1]:\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\n\\nWhat is the problem with this code why is it showing error in the test case 1 while 2,3 are passed and even if i run this code in the python application it does not show wrong answer while it does in leetcode"
                    },
                    {
                        "username": "amaturecoder18",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int num,n =x;\\n        float  sum=0;\\n        \\n        while(n!=0)\\n        {\\n                        num = n%10;\\n                        sum = sum*10+num;\\n                        n=n/10;\\n                    \\n            \\n        }\\n        \\n        if(sum == x)\\n        {\\n            return true;\\n        }\\n        else if( x<0)\\n        {\\n            return false;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n       \\n        \\n    }\\n};\\n\\nCan someone tell me what\\'s wrong with this code? I\\'m facing problem with testcase 2 where the answer for -121 should be false, but I\\'m getting true ."
                    },
                    {
                        "username": "user5835xp",
                        "content": "in every case it gives false result what\\'s wrong with this code\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int y = 0;\\n        while(x != 0){\\n\\n           y = y*10 + x%10;\\n           x = x/10;\\n        }\\n        if(y == x)\\n         return true;\\n        \\n        else\\n        return false;\\n        \\n    }\\n}"
                    },
                    {
                        "username": "younusalinahid",
                        "content": "testing "
                    },
                    {
                        "username": "WajahatFarooq",
                        "content": "Hello, A little suggestion would be appreciated!\\nI have written the code and it\\'s running successfully but I\\'m getting \"wrong answer\"  with a Run time: 0ms. So Let me explain my problem, When I give -121 to x then it shows green dot on both case 2 and 3 and red dot on case 1 but when i remove it, it shows green dot on case 1 but red dot on both case 2 and 3. It\\'s kinda complicated lol"
                    },
                    {
                        "username": "harshitg141975",
                        "content": "bool checkPalindrome(char str[]) {\\n    // Write your code here\\n     int  count = 0 ; \\n\\n    for (int  i = 0 ; str[i] != \\'\\\\0\\' ; i++)\\n    {\\n        count = count + 1  ; \\n    }\\n\\n    for ( int i = 0 ,  j = count - 1  ;  i <= j  ; i++ , j-- )\\n    {\\n        if ( str[i] != str[j] )\\n        {\\n              return false ;\\n        }\\n        else\\n        {\\n\\n        }\\n    }\\n     return true ; \\n}"
                    },
                    {
                        "username": "DevilGuru",
                        "content": "Tooooooooooooo Easy\\n\\nclass Solution {\\n\\n    \\n    public boolean isPalindrome(int x) {\\nint rem = 0;\\n        if( x<0){\\n            return false;\\n        }\\n\\n        if(x==0){\\n            return true;\\n        }\\n        int temp = x;\\n        while(x!=0){\\n\\n\\n          rem = rem* 10 + x%10;\\n          x /= 10;\\n           \\n        }\\n\\n        if(rem == temp){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n\\n          \\n        \\n    }\\n}"
                    },
                    {
                        "username": "Joshua0711",
                        "content": "I would like to know if the number is an even digit like 1221 is it a palindrome?"
                    },
                    {
                        "username": "potatoGuy",
                        "content": "Best way how to solved  this problem\\n\\n\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\nif(x<0||x==10){\\n    return false;\\n}return true;\\n}\\n}   \\n \\n\\n"
                    }
                ]
            },
            {
                "id": 1878994,
                "content": [
                    {
                        "username": "samarofficial65",
                        "content": "just take input as a number and for negetive which is not equals to its palindrome write if (x<0){return false}"
                    },
                    {
                        "username": "ivanpadeliya",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        if str(x) == str(x)[::-1]:\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\n\\nWhat is the problem with this code why is it showing error in the test case 1 while 2,3 are passed and even if i run this code in the python application it does not show wrong answer while it does in leetcode"
                    },
                    {
                        "username": "amaturecoder18",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int num,n =x;\\n        float  sum=0;\\n        \\n        while(n!=0)\\n        {\\n                        num = n%10;\\n                        sum = sum*10+num;\\n                        n=n/10;\\n                    \\n            \\n        }\\n        \\n        if(sum == x)\\n        {\\n            return true;\\n        }\\n        else if( x<0)\\n        {\\n            return false;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n       \\n        \\n    }\\n};\\n\\nCan someone tell me what\\'s wrong with this code? I\\'m facing problem with testcase 2 where the answer for -121 should be false, but I\\'m getting true ."
                    },
                    {
                        "username": "user5835xp",
                        "content": "in every case it gives false result what\\'s wrong with this code\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int y = 0;\\n        while(x != 0){\\n\\n           y = y*10 + x%10;\\n           x = x/10;\\n        }\\n        if(y == x)\\n         return true;\\n        \\n        else\\n        return false;\\n        \\n    }\\n}"
                    },
                    {
                        "username": "younusalinahid",
                        "content": "testing "
                    },
                    {
                        "username": "WajahatFarooq",
                        "content": "Hello, A little suggestion would be appreciated!\\nI have written the code and it\\'s running successfully but I\\'m getting \"wrong answer\"  with a Run time: 0ms. So Let me explain my problem, When I give -121 to x then it shows green dot on both case 2 and 3 and red dot on case 1 but when i remove it, it shows green dot on case 1 but red dot on both case 2 and 3. It\\'s kinda complicated lol"
                    },
                    {
                        "username": "harshitg141975",
                        "content": "bool checkPalindrome(char str[]) {\\n    // Write your code here\\n     int  count = 0 ; \\n\\n    for (int  i = 0 ; str[i] != \\'\\\\0\\' ; i++)\\n    {\\n        count = count + 1  ; \\n    }\\n\\n    for ( int i = 0 ,  j = count - 1  ;  i <= j  ; i++ , j-- )\\n    {\\n        if ( str[i] != str[j] )\\n        {\\n              return false ;\\n        }\\n        else\\n        {\\n\\n        }\\n    }\\n     return true ; \\n}"
                    },
                    {
                        "username": "DevilGuru",
                        "content": "Tooooooooooooo Easy\\n\\nclass Solution {\\n\\n    \\n    public boolean isPalindrome(int x) {\\nint rem = 0;\\n        if( x<0){\\n            return false;\\n        }\\n\\n        if(x==0){\\n            return true;\\n        }\\n        int temp = x;\\n        while(x!=0){\\n\\n\\n          rem = rem* 10 + x%10;\\n          x /= 10;\\n           \\n        }\\n\\n        if(rem == temp){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n\\n          \\n        \\n    }\\n}"
                    },
                    {
                        "username": "Joshua0711",
                        "content": "I would like to know if the number is an even digit like 1221 is it a palindrome?"
                    },
                    {
                        "username": "potatoGuy",
                        "content": "Best way how to solved  this problem\\n\\n\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\nif(x<0||x==10){\\n    return false;\\n}return true;\\n}\\n}   \\n \\n\\n"
                    }
                ]
            },
            {
                "id": 1876627,
                "content": [
                    {
                        "username": "samarofficial65",
                        "content": "just take input as a number and for negetive which is not equals to its palindrome write if (x<0){return false}"
                    },
                    {
                        "username": "ivanpadeliya",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        if str(x) == str(x)[::-1]:\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\n\\nWhat is the problem with this code why is it showing error in the test case 1 while 2,3 are passed and even if i run this code in the python application it does not show wrong answer while it does in leetcode"
                    },
                    {
                        "username": "amaturecoder18",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int num,n =x;\\n        float  sum=0;\\n        \\n        while(n!=0)\\n        {\\n                        num = n%10;\\n                        sum = sum*10+num;\\n                        n=n/10;\\n                    \\n            \\n        }\\n        \\n        if(sum == x)\\n        {\\n            return true;\\n        }\\n        else if( x<0)\\n        {\\n            return false;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n       \\n        \\n    }\\n};\\n\\nCan someone tell me what\\'s wrong with this code? I\\'m facing problem with testcase 2 where the answer for -121 should be false, but I\\'m getting true ."
                    },
                    {
                        "username": "user5835xp",
                        "content": "in every case it gives false result what\\'s wrong with this code\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int y = 0;\\n        while(x != 0){\\n\\n           y = y*10 + x%10;\\n           x = x/10;\\n        }\\n        if(y == x)\\n         return true;\\n        \\n        else\\n        return false;\\n        \\n    }\\n}"
                    },
                    {
                        "username": "younusalinahid",
                        "content": "testing "
                    },
                    {
                        "username": "WajahatFarooq",
                        "content": "Hello, A little suggestion would be appreciated!\\nI have written the code and it\\'s running successfully but I\\'m getting \"wrong answer\"  with a Run time: 0ms. So Let me explain my problem, When I give -121 to x then it shows green dot on both case 2 and 3 and red dot on case 1 but when i remove it, it shows green dot on case 1 but red dot on both case 2 and 3. It\\'s kinda complicated lol"
                    },
                    {
                        "username": "harshitg141975",
                        "content": "bool checkPalindrome(char str[]) {\\n    // Write your code here\\n     int  count = 0 ; \\n\\n    for (int  i = 0 ; str[i] != \\'\\\\0\\' ; i++)\\n    {\\n        count = count + 1  ; \\n    }\\n\\n    for ( int i = 0 ,  j = count - 1  ;  i <= j  ; i++ , j-- )\\n    {\\n        if ( str[i] != str[j] )\\n        {\\n              return false ;\\n        }\\n        else\\n        {\\n\\n        }\\n    }\\n     return true ; \\n}"
                    },
                    {
                        "username": "DevilGuru",
                        "content": "Tooooooooooooo Easy\\n\\nclass Solution {\\n\\n    \\n    public boolean isPalindrome(int x) {\\nint rem = 0;\\n        if( x<0){\\n            return false;\\n        }\\n\\n        if(x==0){\\n            return true;\\n        }\\n        int temp = x;\\n        while(x!=0){\\n\\n\\n          rem = rem* 10 + x%10;\\n          x /= 10;\\n           \\n        }\\n\\n        if(rem == temp){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n\\n          \\n        \\n    }\\n}"
                    },
                    {
                        "username": "Joshua0711",
                        "content": "I would like to know if the number is an even digit like 1221 is it a palindrome?"
                    },
                    {
                        "username": "potatoGuy",
                        "content": "Best way how to solved  this problem\\n\\n\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\nif(x<0||x==10){\\n    return false;\\n}return true;\\n}\\n}   \\n \\n\\n"
                    }
                ]
            },
            {
                "id": 1872250,
                "content": [
                    {
                        "username": "samarofficial65",
                        "content": "just take input as a number and for negetive which is not equals to its palindrome write if (x<0){return false}"
                    },
                    {
                        "username": "ivanpadeliya",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        if str(x) == str(x)[::-1]:\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\n\\nWhat is the problem with this code why is it showing error in the test case 1 while 2,3 are passed and even if i run this code in the python application it does not show wrong answer while it does in leetcode"
                    },
                    {
                        "username": "amaturecoder18",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int num,n =x;\\n        float  sum=0;\\n        \\n        while(n!=0)\\n        {\\n                        num = n%10;\\n                        sum = sum*10+num;\\n                        n=n/10;\\n                    \\n            \\n        }\\n        \\n        if(sum == x)\\n        {\\n            return true;\\n        }\\n        else if( x<0)\\n        {\\n            return false;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n       \\n        \\n    }\\n};\\n\\nCan someone tell me what\\'s wrong with this code? I\\'m facing problem with testcase 2 where the answer for -121 should be false, but I\\'m getting true ."
                    },
                    {
                        "username": "user5835xp",
                        "content": "in every case it gives false result what\\'s wrong with this code\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int y = 0;\\n        while(x != 0){\\n\\n           y = y*10 + x%10;\\n           x = x/10;\\n        }\\n        if(y == x)\\n         return true;\\n        \\n        else\\n        return false;\\n        \\n    }\\n}"
                    },
                    {
                        "username": "younusalinahid",
                        "content": "testing "
                    },
                    {
                        "username": "WajahatFarooq",
                        "content": "Hello, A little suggestion would be appreciated!\\nI have written the code and it\\'s running successfully but I\\'m getting \"wrong answer\"  with a Run time: 0ms. So Let me explain my problem, When I give -121 to x then it shows green dot on both case 2 and 3 and red dot on case 1 but when i remove it, it shows green dot on case 1 but red dot on both case 2 and 3. It\\'s kinda complicated lol"
                    },
                    {
                        "username": "harshitg141975",
                        "content": "bool checkPalindrome(char str[]) {\\n    // Write your code here\\n     int  count = 0 ; \\n\\n    for (int  i = 0 ; str[i] != \\'\\\\0\\' ; i++)\\n    {\\n        count = count + 1  ; \\n    }\\n\\n    for ( int i = 0 ,  j = count - 1  ;  i <= j  ; i++ , j-- )\\n    {\\n        if ( str[i] != str[j] )\\n        {\\n              return false ;\\n        }\\n        else\\n        {\\n\\n        }\\n    }\\n     return true ; \\n}"
                    },
                    {
                        "username": "DevilGuru",
                        "content": "Tooooooooooooo Easy\\n\\nclass Solution {\\n\\n    \\n    public boolean isPalindrome(int x) {\\nint rem = 0;\\n        if( x<0){\\n            return false;\\n        }\\n\\n        if(x==0){\\n            return true;\\n        }\\n        int temp = x;\\n        while(x!=0){\\n\\n\\n          rem = rem* 10 + x%10;\\n          x /= 10;\\n           \\n        }\\n\\n        if(rem == temp){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n\\n          \\n        \\n    }\\n}"
                    },
                    {
                        "username": "Joshua0711",
                        "content": "I would like to know if the number is an even digit like 1221 is it a palindrome?"
                    },
                    {
                        "username": "potatoGuy",
                        "content": "Best way how to solved  this problem\\n\\n\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\nif(x<0||x==10){\\n    return false;\\n}return true;\\n}\\n}   \\n \\n\\n"
                    }
                ]
            },
            {
                "id": 1869646,
                "content": [
                    {
                        "username": "samarofficial65",
                        "content": "just take input as a number and for negetive which is not equals to its palindrome write if (x<0){return false}"
                    },
                    {
                        "username": "ivanpadeliya",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        if str(x) == str(x)[::-1]:\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\n\\nWhat is the problem with this code why is it showing error in the test case 1 while 2,3 are passed and even if i run this code in the python application it does not show wrong answer while it does in leetcode"
                    },
                    {
                        "username": "amaturecoder18",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int num,n =x;\\n        float  sum=0;\\n        \\n        while(n!=0)\\n        {\\n                        num = n%10;\\n                        sum = sum*10+num;\\n                        n=n/10;\\n                    \\n            \\n        }\\n        \\n        if(sum == x)\\n        {\\n            return true;\\n        }\\n        else if( x<0)\\n        {\\n            return false;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n       \\n        \\n    }\\n};\\n\\nCan someone tell me what\\'s wrong with this code? I\\'m facing problem with testcase 2 where the answer for -121 should be false, but I\\'m getting true ."
                    },
                    {
                        "username": "user5835xp",
                        "content": "in every case it gives false result what\\'s wrong with this code\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int y = 0;\\n        while(x != 0){\\n\\n           y = y*10 + x%10;\\n           x = x/10;\\n        }\\n        if(y == x)\\n         return true;\\n        \\n        else\\n        return false;\\n        \\n    }\\n}"
                    },
                    {
                        "username": "younusalinahid",
                        "content": "testing "
                    },
                    {
                        "username": "WajahatFarooq",
                        "content": "Hello, A little suggestion would be appreciated!\\nI have written the code and it\\'s running successfully but I\\'m getting \"wrong answer\"  with a Run time: 0ms. So Let me explain my problem, When I give -121 to x then it shows green dot on both case 2 and 3 and red dot on case 1 but when i remove it, it shows green dot on case 1 but red dot on both case 2 and 3. It\\'s kinda complicated lol"
                    },
                    {
                        "username": "harshitg141975",
                        "content": "bool checkPalindrome(char str[]) {\\n    // Write your code here\\n     int  count = 0 ; \\n\\n    for (int  i = 0 ; str[i] != \\'\\\\0\\' ; i++)\\n    {\\n        count = count + 1  ; \\n    }\\n\\n    for ( int i = 0 ,  j = count - 1  ;  i <= j  ; i++ , j-- )\\n    {\\n        if ( str[i] != str[j] )\\n        {\\n              return false ;\\n        }\\n        else\\n        {\\n\\n        }\\n    }\\n     return true ; \\n}"
                    },
                    {
                        "username": "DevilGuru",
                        "content": "Tooooooooooooo Easy\\n\\nclass Solution {\\n\\n    \\n    public boolean isPalindrome(int x) {\\nint rem = 0;\\n        if( x<0){\\n            return false;\\n        }\\n\\n        if(x==0){\\n            return true;\\n        }\\n        int temp = x;\\n        while(x!=0){\\n\\n\\n          rem = rem* 10 + x%10;\\n          x /= 10;\\n           \\n        }\\n\\n        if(rem == temp){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n\\n          \\n        \\n    }\\n}"
                    },
                    {
                        "username": "Joshua0711",
                        "content": "I would like to know if the number is an even digit like 1221 is it a palindrome?"
                    },
                    {
                        "username": "potatoGuy",
                        "content": "Best way how to solved  this problem\\n\\n\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\nif(x<0||x==10){\\n    return false;\\n}return true;\\n}\\n}   \\n \\n\\n"
                    }
                ]
            },
            {
                "id": 1865403,
                "content": [
                    {
                        "username": "samarofficial65",
                        "content": "just take input as a number and for negetive which is not equals to its palindrome write if (x<0){return false}"
                    },
                    {
                        "username": "ivanpadeliya",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        if str(x) == str(x)[::-1]:\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\n\\nWhat is the problem with this code why is it showing error in the test case 1 while 2,3 are passed and even if i run this code in the python application it does not show wrong answer while it does in leetcode"
                    },
                    {
                        "username": "amaturecoder18",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int num,n =x;\\n        float  sum=0;\\n        \\n        while(n!=0)\\n        {\\n                        num = n%10;\\n                        sum = sum*10+num;\\n                        n=n/10;\\n                    \\n            \\n        }\\n        \\n        if(sum == x)\\n        {\\n            return true;\\n        }\\n        else if( x<0)\\n        {\\n            return false;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n       \\n        \\n    }\\n};\\n\\nCan someone tell me what\\'s wrong with this code? I\\'m facing problem with testcase 2 where the answer for -121 should be false, but I\\'m getting true ."
                    },
                    {
                        "username": "user5835xp",
                        "content": "in every case it gives false result what\\'s wrong with this code\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int y = 0;\\n        while(x != 0){\\n\\n           y = y*10 + x%10;\\n           x = x/10;\\n        }\\n        if(y == x)\\n         return true;\\n        \\n        else\\n        return false;\\n        \\n    }\\n}"
                    },
                    {
                        "username": "younusalinahid",
                        "content": "testing "
                    },
                    {
                        "username": "WajahatFarooq",
                        "content": "Hello, A little suggestion would be appreciated!\\nI have written the code and it\\'s running successfully but I\\'m getting \"wrong answer\"  with a Run time: 0ms. So Let me explain my problem, When I give -121 to x then it shows green dot on both case 2 and 3 and red dot on case 1 but when i remove it, it shows green dot on case 1 but red dot on both case 2 and 3. It\\'s kinda complicated lol"
                    },
                    {
                        "username": "harshitg141975",
                        "content": "bool checkPalindrome(char str[]) {\\n    // Write your code here\\n     int  count = 0 ; \\n\\n    for (int  i = 0 ; str[i] != \\'\\\\0\\' ; i++)\\n    {\\n        count = count + 1  ; \\n    }\\n\\n    for ( int i = 0 ,  j = count - 1  ;  i <= j  ; i++ , j-- )\\n    {\\n        if ( str[i] != str[j] )\\n        {\\n              return false ;\\n        }\\n        else\\n        {\\n\\n        }\\n    }\\n     return true ; \\n}"
                    },
                    {
                        "username": "DevilGuru",
                        "content": "Tooooooooooooo Easy\\n\\nclass Solution {\\n\\n    \\n    public boolean isPalindrome(int x) {\\nint rem = 0;\\n        if( x<0){\\n            return false;\\n        }\\n\\n        if(x==0){\\n            return true;\\n        }\\n        int temp = x;\\n        while(x!=0){\\n\\n\\n          rem = rem* 10 + x%10;\\n          x /= 10;\\n           \\n        }\\n\\n        if(rem == temp){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n\\n          \\n        \\n    }\\n}"
                    },
                    {
                        "username": "Joshua0711",
                        "content": "I would like to know if the number is an even digit like 1221 is it a palindrome?"
                    },
                    {
                        "username": "potatoGuy",
                        "content": "Best way how to solved  this problem\\n\\n\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\nif(x<0||x==10){\\n    return false;\\n}return true;\\n}\\n}   \\n \\n\\n"
                    }
                ]
            },
            {
                "id": 1863442,
                "content": [
                    {
                        "username": "samarofficial65",
                        "content": "just take input as a number and for negetive which is not equals to its palindrome write if (x<0){return false}"
                    },
                    {
                        "username": "ivanpadeliya",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        if str(x) == str(x)[::-1]:\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\n\\nWhat is the problem with this code why is it showing error in the test case 1 while 2,3 are passed and even if i run this code in the python application it does not show wrong answer while it does in leetcode"
                    },
                    {
                        "username": "amaturecoder18",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int num,n =x;\\n        float  sum=0;\\n        \\n        while(n!=0)\\n        {\\n                        num = n%10;\\n                        sum = sum*10+num;\\n                        n=n/10;\\n                    \\n            \\n        }\\n        \\n        if(sum == x)\\n        {\\n            return true;\\n        }\\n        else if( x<0)\\n        {\\n            return false;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n       \\n        \\n    }\\n};\\n\\nCan someone tell me what\\'s wrong with this code? I\\'m facing problem with testcase 2 where the answer for -121 should be false, but I\\'m getting true ."
                    },
                    {
                        "username": "user5835xp",
                        "content": "in every case it gives false result what\\'s wrong with this code\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int y = 0;\\n        while(x != 0){\\n\\n           y = y*10 + x%10;\\n           x = x/10;\\n        }\\n        if(y == x)\\n         return true;\\n        \\n        else\\n        return false;\\n        \\n    }\\n}"
                    },
                    {
                        "username": "younusalinahid",
                        "content": "testing "
                    },
                    {
                        "username": "WajahatFarooq",
                        "content": "Hello, A little suggestion would be appreciated!\\nI have written the code and it\\'s running successfully but I\\'m getting \"wrong answer\"  with a Run time: 0ms. So Let me explain my problem, When I give -121 to x then it shows green dot on both case 2 and 3 and red dot on case 1 but when i remove it, it shows green dot on case 1 but red dot on both case 2 and 3. It\\'s kinda complicated lol"
                    },
                    {
                        "username": "harshitg141975",
                        "content": "bool checkPalindrome(char str[]) {\\n    // Write your code here\\n     int  count = 0 ; \\n\\n    for (int  i = 0 ; str[i] != \\'\\\\0\\' ; i++)\\n    {\\n        count = count + 1  ; \\n    }\\n\\n    for ( int i = 0 ,  j = count - 1  ;  i <= j  ; i++ , j-- )\\n    {\\n        if ( str[i] != str[j] )\\n        {\\n              return false ;\\n        }\\n        else\\n        {\\n\\n        }\\n    }\\n     return true ; \\n}"
                    },
                    {
                        "username": "DevilGuru",
                        "content": "Tooooooooooooo Easy\\n\\nclass Solution {\\n\\n    \\n    public boolean isPalindrome(int x) {\\nint rem = 0;\\n        if( x<0){\\n            return false;\\n        }\\n\\n        if(x==0){\\n            return true;\\n        }\\n        int temp = x;\\n        while(x!=0){\\n\\n\\n          rem = rem* 10 + x%10;\\n          x /= 10;\\n           \\n        }\\n\\n        if(rem == temp){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n\\n          \\n        \\n    }\\n}"
                    },
                    {
                        "username": "Joshua0711",
                        "content": "I would like to know if the number is an even digit like 1221 is it a palindrome?"
                    },
                    {
                        "username": "potatoGuy",
                        "content": "Best way how to solved  this problem\\n\\n\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\nif(x<0||x==10){\\n    return false;\\n}return true;\\n}\\n}   \\n \\n\\n"
                    }
                ]
            },
            {
                "id": 1861099,
                "content": [
                    {
                        "username": "samarofficial65",
                        "content": "just take input as a number and for negetive which is not equals to its palindrome write if (x<0){return false}"
                    },
                    {
                        "username": "ivanpadeliya",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        if str(x) == str(x)[::-1]:\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\n\\nWhat is the problem with this code why is it showing error in the test case 1 while 2,3 are passed and even if i run this code in the python application it does not show wrong answer while it does in leetcode"
                    },
                    {
                        "username": "amaturecoder18",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int num,n =x;\\n        float  sum=0;\\n        \\n        while(n!=0)\\n        {\\n                        num = n%10;\\n                        sum = sum*10+num;\\n                        n=n/10;\\n                    \\n            \\n        }\\n        \\n        if(sum == x)\\n        {\\n            return true;\\n        }\\n        else if( x<0)\\n        {\\n            return false;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n       \\n        \\n    }\\n};\\n\\nCan someone tell me what\\'s wrong with this code? I\\'m facing problem with testcase 2 where the answer for -121 should be false, but I\\'m getting true ."
                    },
                    {
                        "username": "user5835xp",
                        "content": "in every case it gives false result what\\'s wrong with this code\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int y = 0;\\n        while(x != 0){\\n\\n           y = y*10 + x%10;\\n           x = x/10;\\n        }\\n        if(y == x)\\n         return true;\\n        \\n        else\\n        return false;\\n        \\n    }\\n}"
                    },
                    {
                        "username": "younusalinahid",
                        "content": "testing "
                    },
                    {
                        "username": "WajahatFarooq",
                        "content": "Hello, A little suggestion would be appreciated!\\nI have written the code and it\\'s running successfully but I\\'m getting \"wrong answer\"  with a Run time: 0ms. So Let me explain my problem, When I give -121 to x then it shows green dot on both case 2 and 3 and red dot on case 1 but when i remove it, it shows green dot on case 1 but red dot on both case 2 and 3. It\\'s kinda complicated lol"
                    },
                    {
                        "username": "harshitg141975",
                        "content": "bool checkPalindrome(char str[]) {\\n    // Write your code here\\n     int  count = 0 ; \\n\\n    for (int  i = 0 ; str[i] != \\'\\\\0\\' ; i++)\\n    {\\n        count = count + 1  ; \\n    }\\n\\n    for ( int i = 0 ,  j = count - 1  ;  i <= j  ; i++ , j-- )\\n    {\\n        if ( str[i] != str[j] )\\n        {\\n              return false ;\\n        }\\n        else\\n        {\\n\\n        }\\n    }\\n     return true ; \\n}"
                    },
                    {
                        "username": "DevilGuru",
                        "content": "Tooooooooooooo Easy\\n\\nclass Solution {\\n\\n    \\n    public boolean isPalindrome(int x) {\\nint rem = 0;\\n        if( x<0){\\n            return false;\\n        }\\n\\n        if(x==0){\\n            return true;\\n        }\\n        int temp = x;\\n        while(x!=0){\\n\\n\\n          rem = rem* 10 + x%10;\\n          x /= 10;\\n           \\n        }\\n\\n        if(rem == temp){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n\\n          \\n        \\n    }\\n}"
                    },
                    {
                        "username": "Joshua0711",
                        "content": "I would like to know if the number is an even digit like 1221 is it a palindrome?"
                    },
                    {
                        "username": "potatoGuy",
                        "content": "Best way how to solved  this problem\\n\\n\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\nif(x<0||x==10){\\n    return false;\\n}return true;\\n}\\n}   \\n \\n\\n"
                    }
                ]
            },
            {
                "id": 1860789,
                "content": [
                    {
                        "username": "samarofficial65",
                        "content": "just take input as a number and for negetive which is not equals to its palindrome write if (x<0){return false}"
                    },
                    {
                        "username": "ivanpadeliya",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        if str(x) == str(x)[::-1]:\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\n\\nWhat is the problem with this code why is it showing error in the test case 1 while 2,3 are passed and even if i run this code in the python application it does not show wrong answer while it does in leetcode"
                    },
                    {
                        "username": "amaturecoder18",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int num,n =x;\\n        float  sum=0;\\n        \\n        while(n!=0)\\n        {\\n                        num = n%10;\\n                        sum = sum*10+num;\\n                        n=n/10;\\n                    \\n            \\n        }\\n        \\n        if(sum == x)\\n        {\\n            return true;\\n        }\\n        else if( x<0)\\n        {\\n            return false;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n       \\n        \\n    }\\n};\\n\\nCan someone tell me what\\'s wrong with this code? I\\'m facing problem with testcase 2 where the answer for -121 should be false, but I\\'m getting true ."
                    },
                    {
                        "username": "user5835xp",
                        "content": "in every case it gives false result what\\'s wrong with this code\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int y = 0;\\n        while(x != 0){\\n\\n           y = y*10 + x%10;\\n           x = x/10;\\n        }\\n        if(y == x)\\n         return true;\\n        \\n        else\\n        return false;\\n        \\n    }\\n}"
                    },
                    {
                        "username": "younusalinahid",
                        "content": "testing "
                    },
                    {
                        "username": "WajahatFarooq",
                        "content": "Hello, A little suggestion would be appreciated!\\nI have written the code and it\\'s running successfully but I\\'m getting \"wrong answer\"  with a Run time: 0ms. So Let me explain my problem, When I give -121 to x then it shows green dot on both case 2 and 3 and red dot on case 1 but when i remove it, it shows green dot on case 1 but red dot on both case 2 and 3. It\\'s kinda complicated lol"
                    },
                    {
                        "username": "harshitg141975",
                        "content": "bool checkPalindrome(char str[]) {\\n    // Write your code here\\n     int  count = 0 ; \\n\\n    for (int  i = 0 ; str[i] != \\'\\\\0\\' ; i++)\\n    {\\n        count = count + 1  ; \\n    }\\n\\n    for ( int i = 0 ,  j = count - 1  ;  i <= j  ; i++ , j-- )\\n    {\\n        if ( str[i] != str[j] )\\n        {\\n              return false ;\\n        }\\n        else\\n        {\\n\\n        }\\n    }\\n     return true ; \\n}"
                    },
                    {
                        "username": "DevilGuru",
                        "content": "Tooooooooooooo Easy\\n\\nclass Solution {\\n\\n    \\n    public boolean isPalindrome(int x) {\\nint rem = 0;\\n        if( x<0){\\n            return false;\\n        }\\n\\n        if(x==0){\\n            return true;\\n        }\\n        int temp = x;\\n        while(x!=0){\\n\\n\\n          rem = rem* 10 + x%10;\\n          x /= 10;\\n           \\n        }\\n\\n        if(rem == temp){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n\\n          \\n        \\n    }\\n}"
                    },
                    {
                        "username": "Joshua0711",
                        "content": "I would like to know if the number is an even digit like 1221 is it a palindrome?"
                    },
                    {
                        "username": "potatoGuy",
                        "content": "Best way how to solved  this problem\\n\\n\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\nif(x<0||x==10){\\n    return false;\\n}return true;\\n}\\n}   \\n \\n\\n"
                    }
                ]
            },
            {
                "id": 1857630,
                "content": [
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        x = str(x)\\n        s = \\'\\'\\n        for i in range(len(x) - 1, -1, -1):\\n            s += x[i]\\n        if s == x:\\n            return True\\n        else:\\n            return False\\n```\\nEasy way \\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "albertshorov",
                        "content": "can someone help me? why i get this Runtime Error?\\n\\nUnhandled exception. System.FormatException: Input string was not in a correct format.\\nAt System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)\\nAt Solution.IsPalindrome(Int32 x)\\nAt __Driver__.Main(String[] args)\\n\\nin VS all working without any problems. My code:\\npublic class Solution\\n{\\n    public bool IsPalindrome(int x)\\n    {\\n        string array = int.Parse(x.ToString()).ToString();\\n        int[] firstArray = new int[array.Length];\\n        int[] secondArray = new int[array.Length];\\n        string firstString;\\n        string secondString;\\n        for (int i = 0; i < array.Length; i++)\\n        {\\n            firstArray[i] = int.Parse(array[i].ToString());\\n        }\\n        for (int i = array.Length - 1; i >= 0; i--)\\n        {\\n            secondArray[array.Length - 1 - i] = int.Parse(array[i].ToString());\\n        }\\n        return(string.Join(\"\", firstArray) == string.Join(\"\", secondArray));\\n    }\\n}"
                    },
                    {
                        "username": "miha4406",
                        "content": "Array.Reverse() is not working?"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "**Note for passersby:**\\n\\nif implementing this in a language that would keep the fractional part of num after division (looser typing), you\\'ll need to make that `num = floor(num / 10).`"
                    },
                    {
                        "username": "tarikulislamriko910",
                        "content": "use long long for reversed number"
                    },
                    {
                        "username": "tarikulislamriko910",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int c=x ,remainder;\\n        long long  rev=0;\\n        if(x<0)\\n        return false;\\n        while(x>0)\\n        {\\n        remainder=x%10;\\n        rev=rev*10+remainder;\\n        x=x/10;\\n        }\\n        if(c!=rev)\\n        return false;\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "ankush920",
                        "content": "quick read comment code with optimized approach\\nankush920\\n-1\\nin a few seconds\\nIntuition\\nchecking last half ==first half\\n\\nApproach\\nreverse last half and compare with first half\\n\\nComplexity\\nTime complexity:\\n0(n)\\n\\nSpace complexity:\\n0(n)\\n\\nCode\\n//find useful upvote it vro :)\\n\\n//we can do full reverse but for that we need to take rev -->double type  but  is so, simple \\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0||x%10==0 & x!=0) //negative is always not palindrome and 10 mutliple is edge case for this approach \\n        {\\n             return false;\\n        }\\n        if(x==0)\\n        {\\n             return true;\\n        }\\nint rev =0;\\n\\n        while( x>rev)\\n        {\\n     rev = rev*10+x%10;\\n             \\n             x=x/10;\\n      \\n        }\\n        if( x==rev||(rev/10==x) )   // rev/10==x because if odd digit no. exist\\n             {\\n                  return true ;\\n             }\\n        return false;\\n    }\\n};"
                    },
                    {
                        "username": "user5940qQ",
                        "content": "\nHello,  what the hell is wrong with these code? I've been looking at it for hours.\n\n\nclass Solution {\npublic:\n    bool isPalindrome(int x){\n      int base = x;\n      \n\n      \n      if(x<0){\n        return false;\n      }\n  \n      int number = 0;\n\n      while(x>0){\n        number = number * 10 + (x%10);\n        x=x/10;\n      }\n      if(base==number){\n        return true;\n      } else {\n        return false;\n      }\n            \n}\n        \n    \n        \n};\n"
                    },
                    {
                        "username": "teddu_lokesh18",
                        "content": "bro can anyone tell me what\\'s the use of (self, parameter ) in these problem?"
                    },
                    {
                        "username": "abdealidiwan",
                        "content": " `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if x >= 0:\\n            y = str(x)\\n            reversed(y)\\n            if x in reversed(y) == x:\\n                return True\\n        else:\\n            return False`\\n\\nThe follow code is working for all cases other than 121. Please help me understand why"
                    }
                ]
            },
            {
                "id": 1856775,
                "content": [
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        x = str(x)\\n        s = \\'\\'\\n        for i in range(len(x) - 1, -1, -1):\\n            s += x[i]\\n        if s == x:\\n            return True\\n        else:\\n            return False\\n```\\nEasy way \\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "albertshorov",
                        "content": "can someone help me? why i get this Runtime Error?\\n\\nUnhandled exception. System.FormatException: Input string was not in a correct format.\\nAt System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)\\nAt Solution.IsPalindrome(Int32 x)\\nAt __Driver__.Main(String[] args)\\n\\nin VS all working without any problems. My code:\\npublic class Solution\\n{\\n    public bool IsPalindrome(int x)\\n    {\\n        string array = int.Parse(x.ToString()).ToString();\\n        int[] firstArray = new int[array.Length];\\n        int[] secondArray = new int[array.Length];\\n        string firstString;\\n        string secondString;\\n        for (int i = 0; i < array.Length; i++)\\n        {\\n            firstArray[i] = int.Parse(array[i].ToString());\\n        }\\n        for (int i = array.Length - 1; i >= 0; i--)\\n        {\\n            secondArray[array.Length - 1 - i] = int.Parse(array[i].ToString());\\n        }\\n        return(string.Join(\"\", firstArray) == string.Join(\"\", secondArray));\\n    }\\n}"
                    },
                    {
                        "username": "miha4406",
                        "content": "Array.Reverse() is not working?"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "**Note for passersby:**\\n\\nif implementing this in a language that would keep the fractional part of num after division (looser typing), you\\'ll need to make that `num = floor(num / 10).`"
                    },
                    {
                        "username": "tarikulislamriko910",
                        "content": "use long long for reversed number"
                    },
                    {
                        "username": "tarikulislamriko910",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int c=x ,remainder;\\n        long long  rev=0;\\n        if(x<0)\\n        return false;\\n        while(x>0)\\n        {\\n        remainder=x%10;\\n        rev=rev*10+remainder;\\n        x=x/10;\\n        }\\n        if(c!=rev)\\n        return false;\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "ankush920",
                        "content": "quick read comment code with optimized approach\\nankush920\\n-1\\nin a few seconds\\nIntuition\\nchecking last half ==first half\\n\\nApproach\\nreverse last half and compare with first half\\n\\nComplexity\\nTime complexity:\\n0(n)\\n\\nSpace complexity:\\n0(n)\\n\\nCode\\n//find useful upvote it vro :)\\n\\n//we can do full reverse but for that we need to take rev -->double type  but  is so, simple \\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0||x%10==0 & x!=0) //negative is always not palindrome and 10 mutliple is edge case for this approach \\n        {\\n             return false;\\n        }\\n        if(x==0)\\n        {\\n             return true;\\n        }\\nint rev =0;\\n\\n        while( x>rev)\\n        {\\n     rev = rev*10+x%10;\\n             \\n             x=x/10;\\n      \\n        }\\n        if( x==rev||(rev/10==x) )   // rev/10==x because if odd digit no. exist\\n             {\\n                  return true ;\\n             }\\n        return false;\\n    }\\n};"
                    },
                    {
                        "username": "user5940qQ",
                        "content": "\nHello,  what the hell is wrong with these code? I've been looking at it for hours.\n\n\nclass Solution {\npublic:\n    bool isPalindrome(int x){\n      int base = x;\n      \n\n      \n      if(x<0){\n        return false;\n      }\n  \n      int number = 0;\n\n      while(x>0){\n        number = number * 10 + (x%10);\n        x=x/10;\n      }\n      if(base==number){\n        return true;\n      } else {\n        return false;\n      }\n            \n}\n        \n    \n        \n};\n"
                    },
                    {
                        "username": "teddu_lokesh18",
                        "content": "bro can anyone tell me what\\'s the use of (self, parameter ) in these problem?"
                    },
                    {
                        "username": "abdealidiwan",
                        "content": " `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if x >= 0:\\n            y = str(x)\\n            reversed(y)\\n            if x in reversed(y) == x:\\n                return True\\n        else:\\n            return False`\\n\\nThe follow code is working for all cases other than 121. Please help me understand why"
                    }
                ]
            },
            {
                "id": 1853214,
                "content": [
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        x = str(x)\\n        s = \\'\\'\\n        for i in range(len(x) - 1, -1, -1):\\n            s += x[i]\\n        if s == x:\\n            return True\\n        else:\\n            return False\\n```\\nEasy way \\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "albertshorov",
                        "content": "can someone help me? why i get this Runtime Error?\\n\\nUnhandled exception. System.FormatException: Input string was not in a correct format.\\nAt System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)\\nAt Solution.IsPalindrome(Int32 x)\\nAt __Driver__.Main(String[] args)\\n\\nin VS all working without any problems. My code:\\npublic class Solution\\n{\\n    public bool IsPalindrome(int x)\\n    {\\n        string array = int.Parse(x.ToString()).ToString();\\n        int[] firstArray = new int[array.Length];\\n        int[] secondArray = new int[array.Length];\\n        string firstString;\\n        string secondString;\\n        for (int i = 0; i < array.Length; i++)\\n        {\\n            firstArray[i] = int.Parse(array[i].ToString());\\n        }\\n        for (int i = array.Length - 1; i >= 0; i--)\\n        {\\n            secondArray[array.Length - 1 - i] = int.Parse(array[i].ToString());\\n        }\\n        return(string.Join(\"\", firstArray) == string.Join(\"\", secondArray));\\n    }\\n}"
                    },
                    {
                        "username": "miha4406",
                        "content": "Array.Reverse() is not working?"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "**Note for passersby:**\\n\\nif implementing this in a language that would keep the fractional part of num after division (looser typing), you\\'ll need to make that `num = floor(num / 10).`"
                    },
                    {
                        "username": "tarikulislamriko910",
                        "content": "use long long for reversed number"
                    },
                    {
                        "username": "tarikulislamriko910",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int c=x ,remainder;\\n        long long  rev=0;\\n        if(x<0)\\n        return false;\\n        while(x>0)\\n        {\\n        remainder=x%10;\\n        rev=rev*10+remainder;\\n        x=x/10;\\n        }\\n        if(c!=rev)\\n        return false;\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "ankush920",
                        "content": "quick read comment code with optimized approach\\nankush920\\n-1\\nin a few seconds\\nIntuition\\nchecking last half ==first half\\n\\nApproach\\nreverse last half and compare with first half\\n\\nComplexity\\nTime complexity:\\n0(n)\\n\\nSpace complexity:\\n0(n)\\n\\nCode\\n//find useful upvote it vro :)\\n\\n//we can do full reverse but for that we need to take rev -->double type  but  is so, simple \\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0||x%10==0 & x!=0) //negative is always not palindrome and 10 mutliple is edge case for this approach \\n        {\\n             return false;\\n        }\\n        if(x==0)\\n        {\\n             return true;\\n        }\\nint rev =0;\\n\\n        while( x>rev)\\n        {\\n     rev = rev*10+x%10;\\n             \\n             x=x/10;\\n      \\n        }\\n        if( x==rev||(rev/10==x) )   // rev/10==x because if odd digit no. exist\\n             {\\n                  return true ;\\n             }\\n        return false;\\n    }\\n};"
                    },
                    {
                        "username": "user5940qQ",
                        "content": "\nHello,  what the hell is wrong with these code? I've been looking at it for hours.\n\n\nclass Solution {\npublic:\n    bool isPalindrome(int x){\n      int base = x;\n      \n\n      \n      if(x<0){\n        return false;\n      }\n  \n      int number = 0;\n\n      while(x>0){\n        number = number * 10 + (x%10);\n        x=x/10;\n      }\n      if(base==number){\n        return true;\n      } else {\n        return false;\n      }\n            \n}\n        \n    \n        \n};\n"
                    },
                    {
                        "username": "teddu_lokesh18",
                        "content": "bro can anyone tell me what\\'s the use of (self, parameter ) in these problem?"
                    },
                    {
                        "username": "abdealidiwan",
                        "content": " `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if x >= 0:\\n            y = str(x)\\n            reversed(y)\\n            if x in reversed(y) == x:\\n                return True\\n        else:\\n            return False`\\n\\nThe follow code is working for all cases other than 121. Please help me understand why"
                    }
                ]
            },
            {
                "id": 1852840,
                "content": [
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        x = str(x)\\n        s = \\'\\'\\n        for i in range(len(x) - 1, -1, -1):\\n            s += x[i]\\n        if s == x:\\n            return True\\n        else:\\n            return False\\n```\\nEasy way \\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "albertshorov",
                        "content": "can someone help me? why i get this Runtime Error?\\n\\nUnhandled exception. System.FormatException: Input string was not in a correct format.\\nAt System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)\\nAt Solution.IsPalindrome(Int32 x)\\nAt __Driver__.Main(String[] args)\\n\\nin VS all working without any problems. My code:\\npublic class Solution\\n{\\n    public bool IsPalindrome(int x)\\n    {\\n        string array = int.Parse(x.ToString()).ToString();\\n        int[] firstArray = new int[array.Length];\\n        int[] secondArray = new int[array.Length];\\n        string firstString;\\n        string secondString;\\n        for (int i = 0; i < array.Length; i++)\\n        {\\n            firstArray[i] = int.Parse(array[i].ToString());\\n        }\\n        for (int i = array.Length - 1; i >= 0; i--)\\n        {\\n            secondArray[array.Length - 1 - i] = int.Parse(array[i].ToString());\\n        }\\n        return(string.Join(\"\", firstArray) == string.Join(\"\", secondArray));\\n    }\\n}"
                    },
                    {
                        "username": "miha4406",
                        "content": "Array.Reverse() is not working?"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "**Note for passersby:**\\n\\nif implementing this in a language that would keep the fractional part of num after division (looser typing), you\\'ll need to make that `num = floor(num / 10).`"
                    },
                    {
                        "username": "tarikulislamriko910",
                        "content": "use long long for reversed number"
                    },
                    {
                        "username": "tarikulislamriko910",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int c=x ,remainder;\\n        long long  rev=0;\\n        if(x<0)\\n        return false;\\n        while(x>0)\\n        {\\n        remainder=x%10;\\n        rev=rev*10+remainder;\\n        x=x/10;\\n        }\\n        if(c!=rev)\\n        return false;\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "ankush920",
                        "content": "quick read comment code with optimized approach\\nankush920\\n-1\\nin a few seconds\\nIntuition\\nchecking last half ==first half\\n\\nApproach\\nreverse last half and compare with first half\\n\\nComplexity\\nTime complexity:\\n0(n)\\n\\nSpace complexity:\\n0(n)\\n\\nCode\\n//find useful upvote it vro :)\\n\\n//we can do full reverse but for that we need to take rev -->double type  but  is so, simple \\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0||x%10==0 & x!=0) //negative is always not palindrome and 10 mutliple is edge case for this approach \\n        {\\n             return false;\\n        }\\n        if(x==0)\\n        {\\n             return true;\\n        }\\nint rev =0;\\n\\n        while( x>rev)\\n        {\\n     rev = rev*10+x%10;\\n             \\n             x=x/10;\\n      \\n        }\\n        if( x==rev||(rev/10==x) )   // rev/10==x because if odd digit no. exist\\n             {\\n                  return true ;\\n             }\\n        return false;\\n    }\\n};"
                    },
                    {
                        "username": "user5940qQ",
                        "content": "\nHello,  what the hell is wrong with these code? I've been looking at it for hours.\n\n\nclass Solution {\npublic:\n    bool isPalindrome(int x){\n      int base = x;\n      \n\n      \n      if(x<0){\n        return false;\n      }\n  \n      int number = 0;\n\n      while(x>0){\n        number = number * 10 + (x%10);\n        x=x/10;\n      }\n      if(base==number){\n        return true;\n      } else {\n        return false;\n      }\n            \n}\n        \n    \n        \n};\n"
                    },
                    {
                        "username": "teddu_lokesh18",
                        "content": "bro can anyone tell me what\\'s the use of (self, parameter ) in these problem?"
                    },
                    {
                        "username": "abdealidiwan",
                        "content": " `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if x >= 0:\\n            y = str(x)\\n            reversed(y)\\n            if x in reversed(y) == x:\\n                return True\\n        else:\\n            return False`\\n\\nThe follow code is working for all cases other than 121. Please help me understand why"
                    }
                ]
            },
            {
                "id": 1846138,
                "content": [
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        x = str(x)\\n        s = \\'\\'\\n        for i in range(len(x) - 1, -1, -1):\\n            s += x[i]\\n        if s == x:\\n            return True\\n        else:\\n            return False\\n```\\nEasy way \\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "albertshorov",
                        "content": "can someone help me? why i get this Runtime Error?\\n\\nUnhandled exception. System.FormatException: Input string was not in a correct format.\\nAt System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)\\nAt Solution.IsPalindrome(Int32 x)\\nAt __Driver__.Main(String[] args)\\n\\nin VS all working without any problems. My code:\\npublic class Solution\\n{\\n    public bool IsPalindrome(int x)\\n    {\\n        string array = int.Parse(x.ToString()).ToString();\\n        int[] firstArray = new int[array.Length];\\n        int[] secondArray = new int[array.Length];\\n        string firstString;\\n        string secondString;\\n        for (int i = 0; i < array.Length; i++)\\n        {\\n            firstArray[i] = int.Parse(array[i].ToString());\\n        }\\n        for (int i = array.Length - 1; i >= 0; i--)\\n        {\\n            secondArray[array.Length - 1 - i] = int.Parse(array[i].ToString());\\n        }\\n        return(string.Join(\"\", firstArray) == string.Join(\"\", secondArray));\\n    }\\n}"
                    },
                    {
                        "username": "miha4406",
                        "content": "Array.Reverse() is not working?"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "**Note for passersby:**\\n\\nif implementing this in a language that would keep the fractional part of num after division (looser typing), you\\'ll need to make that `num = floor(num / 10).`"
                    },
                    {
                        "username": "tarikulislamriko910",
                        "content": "use long long for reversed number"
                    },
                    {
                        "username": "tarikulislamriko910",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int c=x ,remainder;\\n        long long  rev=0;\\n        if(x<0)\\n        return false;\\n        while(x>0)\\n        {\\n        remainder=x%10;\\n        rev=rev*10+remainder;\\n        x=x/10;\\n        }\\n        if(c!=rev)\\n        return false;\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "ankush920",
                        "content": "quick read comment code with optimized approach\\nankush920\\n-1\\nin a few seconds\\nIntuition\\nchecking last half ==first half\\n\\nApproach\\nreverse last half and compare with first half\\n\\nComplexity\\nTime complexity:\\n0(n)\\n\\nSpace complexity:\\n0(n)\\n\\nCode\\n//find useful upvote it vro :)\\n\\n//we can do full reverse but for that we need to take rev -->double type  but  is so, simple \\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0||x%10==0 & x!=0) //negative is always not palindrome and 10 mutliple is edge case for this approach \\n        {\\n             return false;\\n        }\\n        if(x==0)\\n        {\\n             return true;\\n        }\\nint rev =0;\\n\\n        while( x>rev)\\n        {\\n     rev = rev*10+x%10;\\n             \\n             x=x/10;\\n      \\n        }\\n        if( x==rev||(rev/10==x) )   // rev/10==x because if odd digit no. exist\\n             {\\n                  return true ;\\n             }\\n        return false;\\n    }\\n};"
                    },
                    {
                        "username": "user5940qQ",
                        "content": "\nHello,  what the hell is wrong with these code? I've been looking at it for hours.\n\n\nclass Solution {\npublic:\n    bool isPalindrome(int x){\n      int base = x;\n      \n\n      \n      if(x<0){\n        return false;\n      }\n  \n      int number = 0;\n\n      while(x>0){\n        number = number * 10 + (x%10);\n        x=x/10;\n      }\n      if(base==number){\n        return true;\n      } else {\n        return false;\n      }\n            \n}\n        \n    \n        \n};\n"
                    },
                    {
                        "username": "teddu_lokesh18",
                        "content": "bro can anyone tell me what\\'s the use of (self, parameter ) in these problem?"
                    },
                    {
                        "username": "abdealidiwan",
                        "content": " `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if x >= 0:\\n            y = str(x)\\n            reversed(y)\\n            if x in reversed(y) == x:\\n                return True\\n        else:\\n            return False`\\n\\nThe follow code is working for all cases other than 121. Please help me understand why"
                    }
                ]
            },
            {
                "id": 1846137,
                "content": [
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        x = str(x)\\n        s = \\'\\'\\n        for i in range(len(x) - 1, -1, -1):\\n            s += x[i]\\n        if s == x:\\n            return True\\n        else:\\n            return False\\n```\\nEasy way \\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "albertshorov",
                        "content": "can someone help me? why i get this Runtime Error?\\n\\nUnhandled exception. System.FormatException: Input string was not in a correct format.\\nAt System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)\\nAt Solution.IsPalindrome(Int32 x)\\nAt __Driver__.Main(String[] args)\\n\\nin VS all working without any problems. My code:\\npublic class Solution\\n{\\n    public bool IsPalindrome(int x)\\n    {\\n        string array = int.Parse(x.ToString()).ToString();\\n        int[] firstArray = new int[array.Length];\\n        int[] secondArray = new int[array.Length];\\n        string firstString;\\n        string secondString;\\n        for (int i = 0; i < array.Length; i++)\\n        {\\n            firstArray[i] = int.Parse(array[i].ToString());\\n        }\\n        for (int i = array.Length - 1; i >= 0; i--)\\n        {\\n            secondArray[array.Length - 1 - i] = int.Parse(array[i].ToString());\\n        }\\n        return(string.Join(\"\", firstArray) == string.Join(\"\", secondArray));\\n    }\\n}"
                    },
                    {
                        "username": "miha4406",
                        "content": "Array.Reverse() is not working?"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "**Note for passersby:**\\n\\nif implementing this in a language that would keep the fractional part of num after division (looser typing), you\\'ll need to make that `num = floor(num / 10).`"
                    },
                    {
                        "username": "tarikulislamriko910",
                        "content": "use long long for reversed number"
                    },
                    {
                        "username": "tarikulislamriko910",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int c=x ,remainder;\\n        long long  rev=0;\\n        if(x<0)\\n        return false;\\n        while(x>0)\\n        {\\n        remainder=x%10;\\n        rev=rev*10+remainder;\\n        x=x/10;\\n        }\\n        if(c!=rev)\\n        return false;\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "ankush920",
                        "content": "quick read comment code with optimized approach\\nankush920\\n-1\\nin a few seconds\\nIntuition\\nchecking last half ==first half\\n\\nApproach\\nreverse last half and compare with first half\\n\\nComplexity\\nTime complexity:\\n0(n)\\n\\nSpace complexity:\\n0(n)\\n\\nCode\\n//find useful upvote it vro :)\\n\\n//we can do full reverse but for that we need to take rev -->double type  but  is so, simple \\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0||x%10==0 & x!=0) //negative is always not palindrome and 10 mutliple is edge case for this approach \\n        {\\n             return false;\\n        }\\n        if(x==0)\\n        {\\n             return true;\\n        }\\nint rev =0;\\n\\n        while( x>rev)\\n        {\\n     rev = rev*10+x%10;\\n             \\n             x=x/10;\\n      \\n        }\\n        if( x==rev||(rev/10==x) )   // rev/10==x because if odd digit no. exist\\n             {\\n                  return true ;\\n             }\\n        return false;\\n    }\\n};"
                    },
                    {
                        "username": "user5940qQ",
                        "content": "\nHello,  what the hell is wrong with these code? I've been looking at it for hours.\n\n\nclass Solution {\npublic:\n    bool isPalindrome(int x){\n      int base = x;\n      \n\n      \n      if(x<0){\n        return false;\n      }\n  \n      int number = 0;\n\n      while(x>0){\n        number = number * 10 + (x%10);\n        x=x/10;\n      }\n      if(base==number){\n        return true;\n      } else {\n        return false;\n      }\n            \n}\n        \n    \n        \n};\n"
                    },
                    {
                        "username": "teddu_lokesh18",
                        "content": "bro can anyone tell me what\\'s the use of (self, parameter ) in these problem?"
                    },
                    {
                        "username": "abdealidiwan",
                        "content": " `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if x >= 0:\\n            y = str(x)\\n            reversed(y)\\n            if x in reversed(y) == x:\\n                return True\\n        else:\\n            return False`\\n\\nThe follow code is working for all cases other than 121. Please help me understand why"
                    }
                ]
            },
            {
                "id": 1846136,
                "content": [
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        x = str(x)\\n        s = \\'\\'\\n        for i in range(len(x) - 1, -1, -1):\\n            s += x[i]\\n        if s == x:\\n            return True\\n        else:\\n            return False\\n```\\nEasy way \\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "albertshorov",
                        "content": "can someone help me? why i get this Runtime Error?\\n\\nUnhandled exception. System.FormatException: Input string was not in a correct format.\\nAt System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)\\nAt Solution.IsPalindrome(Int32 x)\\nAt __Driver__.Main(String[] args)\\n\\nin VS all working without any problems. My code:\\npublic class Solution\\n{\\n    public bool IsPalindrome(int x)\\n    {\\n        string array = int.Parse(x.ToString()).ToString();\\n        int[] firstArray = new int[array.Length];\\n        int[] secondArray = new int[array.Length];\\n        string firstString;\\n        string secondString;\\n        for (int i = 0; i < array.Length; i++)\\n        {\\n            firstArray[i] = int.Parse(array[i].ToString());\\n        }\\n        for (int i = array.Length - 1; i >= 0; i--)\\n        {\\n            secondArray[array.Length - 1 - i] = int.Parse(array[i].ToString());\\n        }\\n        return(string.Join(\"\", firstArray) == string.Join(\"\", secondArray));\\n    }\\n}"
                    },
                    {
                        "username": "miha4406",
                        "content": "Array.Reverse() is not working?"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "**Note for passersby:**\\n\\nif implementing this in a language that would keep the fractional part of num after division (looser typing), you\\'ll need to make that `num = floor(num / 10).`"
                    },
                    {
                        "username": "tarikulislamriko910",
                        "content": "use long long for reversed number"
                    },
                    {
                        "username": "tarikulislamriko910",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int c=x ,remainder;\\n        long long  rev=0;\\n        if(x<0)\\n        return false;\\n        while(x>0)\\n        {\\n        remainder=x%10;\\n        rev=rev*10+remainder;\\n        x=x/10;\\n        }\\n        if(c!=rev)\\n        return false;\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "ankush920",
                        "content": "quick read comment code with optimized approach\\nankush920\\n-1\\nin a few seconds\\nIntuition\\nchecking last half ==first half\\n\\nApproach\\nreverse last half and compare with first half\\n\\nComplexity\\nTime complexity:\\n0(n)\\n\\nSpace complexity:\\n0(n)\\n\\nCode\\n//find useful upvote it vro :)\\n\\n//we can do full reverse but for that we need to take rev -->double type  but  is so, simple \\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0||x%10==0 & x!=0) //negative is always not palindrome and 10 mutliple is edge case for this approach \\n        {\\n             return false;\\n        }\\n        if(x==0)\\n        {\\n             return true;\\n        }\\nint rev =0;\\n\\n        while( x>rev)\\n        {\\n     rev = rev*10+x%10;\\n             \\n             x=x/10;\\n      \\n        }\\n        if( x==rev||(rev/10==x) )   // rev/10==x because if odd digit no. exist\\n             {\\n                  return true ;\\n             }\\n        return false;\\n    }\\n};"
                    },
                    {
                        "username": "user5940qQ",
                        "content": "\nHello,  what the hell is wrong with these code? I've been looking at it for hours.\n\n\nclass Solution {\npublic:\n    bool isPalindrome(int x){\n      int base = x;\n      \n\n      \n      if(x<0){\n        return false;\n      }\n  \n      int number = 0;\n\n      while(x>0){\n        number = number * 10 + (x%10);\n        x=x/10;\n      }\n      if(base==number){\n        return true;\n      } else {\n        return false;\n      }\n            \n}\n        \n    \n        \n};\n"
                    },
                    {
                        "username": "teddu_lokesh18",
                        "content": "bro can anyone tell me what\\'s the use of (self, parameter ) in these problem?"
                    },
                    {
                        "username": "abdealidiwan",
                        "content": " `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if x >= 0:\\n            y = str(x)\\n            reversed(y)\\n            if x in reversed(y) == x:\\n                return True\\n        else:\\n            return False`\\n\\nThe follow code is working for all cases other than 121. Please help me understand why"
                    }
                ]
            },
            {
                "id": 1844382,
                "content": [
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        x = str(x)\\n        s = \\'\\'\\n        for i in range(len(x) - 1, -1, -1):\\n            s += x[i]\\n        if s == x:\\n            return True\\n        else:\\n            return False\\n```\\nEasy way \\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "albertshorov",
                        "content": "can someone help me? why i get this Runtime Error?\\n\\nUnhandled exception. System.FormatException: Input string was not in a correct format.\\nAt System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)\\nAt Solution.IsPalindrome(Int32 x)\\nAt __Driver__.Main(String[] args)\\n\\nin VS all working without any problems. My code:\\npublic class Solution\\n{\\n    public bool IsPalindrome(int x)\\n    {\\n        string array = int.Parse(x.ToString()).ToString();\\n        int[] firstArray = new int[array.Length];\\n        int[] secondArray = new int[array.Length];\\n        string firstString;\\n        string secondString;\\n        for (int i = 0; i < array.Length; i++)\\n        {\\n            firstArray[i] = int.Parse(array[i].ToString());\\n        }\\n        for (int i = array.Length - 1; i >= 0; i--)\\n        {\\n            secondArray[array.Length - 1 - i] = int.Parse(array[i].ToString());\\n        }\\n        return(string.Join(\"\", firstArray) == string.Join(\"\", secondArray));\\n    }\\n}"
                    },
                    {
                        "username": "miha4406",
                        "content": "Array.Reverse() is not working?"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "**Note for passersby:**\\n\\nif implementing this in a language that would keep the fractional part of num after division (looser typing), you\\'ll need to make that `num = floor(num / 10).`"
                    },
                    {
                        "username": "tarikulislamriko910",
                        "content": "use long long for reversed number"
                    },
                    {
                        "username": "tarikulislamriko910",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int c=x ,remainder;\\n        long long  rev=0;\\n        if(x<0)\\n        return false;\\n        while(x>0)\\n        {\\n        remainder=x%10;\\n        rev=rev*10+remainder;\\n        x=x/10;\\n        }\\n        if(c!=rev)\\n        return false;\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "ankush920",
                        "content": "quick read comment code with optimized approach\\nankush920\\n-1\\nin a few seconds\\nIntuition\\nchecking last half ==first half\\n\\nApproach\\nreverse last half and compare with first half\\n\\nComplexity\\nTime complexity:\\n0(n)\\n\\nSpace complexity:\\n0(n)\\n\\nCode\\n//find useful upvote it vro :)\\n\\n//we can do full reverse but for that we need to take rev -->double type  but  is so, simple \\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0||x%10==0 & x!=0) //negative is always not palindrome and 10 mutliple is edge case for this approach \\n        {\\n             return false;\\n        }\\n        if(x==0)\\n        {\\n             return true;\\n        }\\nint rev =0;\\n\\n        while( x>rev)\\n        {\\n     rev = rev*10+x%10;\\n             \\n             x=x/10;\\n      \\n        }\\n        if( x==rev||(rev/10==x) )   // rev/10==x because if odd digit no. exist\\n             {\\n                  return true ;\\n             }\\n        return false;\\n    }\\n};"
                    },
                    {
                        "username": "user5940qQ",
                        "content": "\nHello,  what the hell is wrong with these code? I've been looking at it for hours.\n\n\nclass Solution {\npublic:\n    bool isPalindrome(int x){\n      int base = x;\n      \n\n      \n      if(x<0){\n        return false;\n      }\n  \n      int number = 0;\n\n      while(x>0){\n        number = number * 10 + (x%10);\n        x=x/10;\n      }\n      if(base==number){\n        return true;\n      } else {\n        return false;\n      }\n            \n}\n        \n    \n        \n};\n"
                    },
                    {
                        "username": "teddu_lokesh18",
                        "content": "bro can anyone tell me what\\'s the use of (self, parameter ) in these problem?"
                    },
                    {
                        "username": "abdealidiwan",
                        "content": " `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if x >= 0:\\n            y = str(x)\\n            reversed(y)\\n            if x in reversed(y) == x:\\n                return True\\n        else:\\n            return False`\\n\\nThe follow code is working for all cases other than 121. Please help me understand why"
                    }
                ]
            },
            {
                "id": 1843462,
                "content": [
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        x = str(x)\\n        s = \\'\\'\\n        for i in range(len(x) - 1, -1, -1):\\n            s += x[i]\\n        if s == x:\\n            return True\\n        else:\\n            return False\\n```\\nEasy way \\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "albertshorov",
                        "content": "can someone help me? why i get this Runtime Error?\\n\\nUnhandled exception. System.FormatException: Input string was not in a correct format.\\nAt System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)\\nAt Solution.IsPalindrome(Int32 x)\\nAt __Driver__.Main(String[] args)\\n\\nin VS all working without any problems. My code:\\npublic class Solution\\n{\\n    public bool IsPalindrome(int x)\\n    {\\n        string array = int.Parse(x.ToString()).ToString();\\n        int[] firstArray = new int[array.Length];\\n        int[] secondArray = new int[array.Length];\\n        string firstString;\\n        string secondString;\\n        for (int i = 0; i < array.Length; i++)\\n        {\\n            firstArray[i] = int.Parse(array[i].ToString());\\n        }\\n        for (int i = array.Length - 1; i >= 0; i--)\\n        {\\n            secondArray[array.Length - 1 - i] = int.Parse(array[i].ToString());\\n        }\\n        return(string.Join(\"\", firstArray) == string.Join(\"\", secondArray));\\n    }\\n}"
                    },
                    {
                        "username": "miha4406",
                        "content": "Array.Reverse() is not working?"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "**Note for passersby:**\\n\\nif implementing this in a language that would keep the fractional part of num after division (looser typing), you\\'ll need to make that `num = floor(num / 10).`"
                    },
                    {
                        "username": "tarikulislamriko910",
                        "content": "use long long for reversed number"
                    },
                    {
                        "username": "tarikulislamriko910",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int c=x ,remainder;\\n        long long  rev=0;\\n        if(x<0)\\n        return false;\\n        while(x>0)\\n        {\\n        remainder=x%10;\\n        rev=rev*10+remainder;\\n        x=x/10;\\n        }\\n        if(c!=rev)\\n        return false;\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "ankush920",
                        "content": "quick read comment code with optimized approach\\nankush920\\n-1\\nin a few seconds\\nIntuition\\nchecking last half ==first half\\n\\nApproach\\nreverse last half and compare with first half\\n\\nComplexity\\nTime complexity:\\n0(n)\\n\\nSpace complexity:\\n0(n)\\n\\nCode\\n//find useful upvote it vro :)\\n\\n//we can do full reverse but for that we need to take rev -->double type  but  is so, simple \\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0||x%10==0 & x!=0) //negative is always not palindrome and 10 mutliple is edge case for this approach \\n        {\\n             return false;\\n        }\\n        if(x==0)\\n        {\\n             return true;\\n        }\\nint rev =0;\\n\\n        while( x>rev)\\n        {\\n     rev = rev*10+x%10;\\n             \\n             x=x/10;\\n      \\n        }\\n        if( x==rev||(rev/10==x) )   // rev/10==x because if odd digit no. exist\\n             {\\n                  return true ;\\n             }\\n        return false;\\n    }\\n};"
                    },
                    {
                        "username": "user5940qQ",
                        "content": "\nHello,  what the hell is wrong with these code? I've been looking at it for hours.\n\n\nclass Solution {\npublic:\n    bool isPalindrome(int x){\n      int base = x;\n      \n\n      \n      if(x<0){\n        return false;\n      }\n  \n      int number = 0;\n\n      while(x>0){\n        number = number * 10 + (x%10);\n        x=x/10;\n      }\n      if(base==number){\n        return true;\n      } else {\n        return false;\n      }\n            \n}\n        \n    \n        \n};\n"
                    },
                    {
                        "username": "teddu_lokesh18",
                        "content": "bro can anyone tell me what\\'s the use of (self, parameter ) in these problem?"
                    },
                    {
                        "username": "abdealidiwan",
                        "content": " `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if x >= 0:\\n            y = str(x)\\n            reversed(y)\\n            if x in reversed(y) == x:\\n                return True\\n        else:\\n            return False`\\n\\nThe follow code is working for all cases other than 121. Please help me understand why"
                    }
                ]
            },
            {
                "id": 1841640,
                "content": [
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        x = str(x)\\n        s = \\'\\'\\n        for i in range(len(x) - 1, -1, -1):\\n            s += x[i]\\n        if s == x:\\n            return True\\n        else:\\n            return False\\n```\\nEasy way \\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "albertshorov",
                        "content": "can someone help me? why i get this Runtime Error?\\n\\nUnhandled exception. System.FormatException: Input string was not in a correct format.\\nAt System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)\\nAt Solution.IsPalindrome(Int32 x)\\nAt __Driver__.Main(String[] args)\\n\\nin VS all working without any problems. My code:\\npublic class Solution\\n{\\n    public bool IsPalindrome(int x)\\n    {\\n        string array = int.Parse(x.ToString()).ToString();\\n        int[] firstArray = new int[array.Length];\\n        int[] secondArray = new int[array.Length];\\n        string firstString;\\n        string secondString;\\n        for (int i = 0; i < array.Length; i++)\\n        {\\n            firstArray[i] = int.Parse(array[i].ToString());\\n        }\\n        for (int i = array.Length - 1; i >= 0; i--)\\n        {\\n            secondArray[array.Length - 1 - i] = int.Parse(array[i].ToString());\\n        }\\n        return(string.Join(\"\", firstArray) == string.Join(\"\", secondArray));\\n    }\\n}"
                    },
                    {
                        "username": "miha4406",
                        "content": "Array.Reverse() is not working?"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "**Note for passersby:**\\n\\nif implementing this in a language that would keep the fractional part of num after division (looser typing), you\\'ll need to make that `num = floor(num / 10).`"
                    },
                    {
                        "username": "tarikulislamriko910",
                        "content": "use long long for reversed number"
                    },
                    {
                        "username": "tarikulislamriko910",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int c=x ,remainder;\\n        long long  rev=0;\\n        if(x<0)\\n        return false;\\n        while(x>0)\\n        {\\n        remainder=x%10;\\n        rev=rev*10+remainder;\\n        x=x/10;\\n        }\\n        if(c!=rev)\\n        return false;\\n        return true;\\n    }\\n};"
                    },
                    {
                        "username": "ankush920",
                        "content": "quick read comment code with optimized approach\\nankush920\\n-1\\nin a few seconds\\nIntuition\\nchecking last half ==first half\\n\\nApproach\\nreverse last half and compare with first half\\n\\nComplexity\\nTime complexity:\\n0(n)\\n\\nSpace complexity:\\n0(n)\\n\\nCode\\n//find useful upvote it vro :)\\n\\n//we can do full reverse but for that we need to take rev -->double type  but  is so, simple \\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0||x%10==0 & x!=0) //negative is always not palindrome and 10 mutliple is edge case for this approach \\n        {\\n             return false;\\n        }\\n        if(x==0)\\n        {\\n             return true;\\n        }\\nint rev =0;\\n\\n        while( x>rev)\\n        {\\n     rev = rev*10+x%10;\\n             \\n             x=x/10;\\n      \\n        }\\n        if( x==rev||(rev/10==x) )   // rev/10==x because if odd digit no. exist\\n             {\\n                  return true ;\\n             }\\n        return false;\\n    }\\n};"
                    },
                    {
                        "username": "user5940qQ",
                        "content": "\nHello,  what the hell is wrong with these code? I've been looking at it for hours.\n\n\nclass Solution {\npublic:\n    bool isPalindrome(int x){\n      int base = x;\n      \n\n      \n      if(x<0){\n        return false;\n      }\n  \n      int number = 0;\n\n      while(x>0){\n        number = number * 10 + (x%10);\n        x=x/10;\n      }\n      if(base==number){\n        return true;\n      } else {\n        return false;\n      }\n            \n}\n        \n    \n        \n};\n"
                    },
                    {
                        "username": "teddu_lokesh18",
                        "content": "bro can anyone tell me what\\'s the use of (self, parameter ) in these problem?"
                    },
                    {
                        "username": "abdealidiwan",
                        "content": " `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if x >= 0:\\n            y = str(x)\\n            reversed(y)\\n            if x in reversed(y) == x:\\n                return True\\n        else:\\n            return False`\\n\\nThe follow code is working for all cases other than 121. Please help me understand why"
                    }
                ]
            },
            {
                "id": 1826383,
                "content": [
                    {
                        "username": "GoldenMode",
                        "content": "Can you help please!\\nThe code written in Visual Studio Code writes \"true\", and the verified code here writes \"false\" and complains about the number \"11\"\\nWhat could be the problem?\\nI published a post in solutions called \"Can you help please? GoldenMode\""
                    },
                    {
                        "username": "AsmitaMutgekar",
                        "content": "Below is my code for Palindrome\nwhen input is 0 it says false but as per code it should be true\n\npublic boolean isPalindrome(int x) {\n        int n=x;\n        int sum=0; \n        if(x<0 || x%10==0 )\n            return false;\n        while (n>0) {\n        sum=sum *10 + (n%10);\n         n=n/10;   \n        }\n        return x==sum; //  when x=0 it should directly come here which means true since sum=0 and x=0 but the result says false\n    }"
                    },
                    {
                        "username": "kumarryogeshh",
                        "content": "Using Typescript\\n `return x.toString() === x.toString().split(\\'\\').reverse().join(\\'\\')`"
                    },
                    {
                        "username": "Ganesh_Reddy_G",
                        "content": "My code is working fine in local but not here\\n\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        x = str(x)\\n        y = x[::-1]\\n\\n        try:\\n            if int(x) == int(y):\\n                return \"true\"\\n            else:\\n                return \"fasle\"\\n        except ValueError as v:\\n            return \"false\""
                    },
                    {
                        "username": "shubh_214",
                        "content": "This is my code but it is not working why...?\\n\\nimport java.util.Scanner;\\nclass Solution {\\n    static boolean isPal(int n){\\n        int sum=0, d, temp=n;\\n        while(n>0){\\n            d=n%10;\\n            sum=sum*10+d;\\n            n=n/10;\\n        }\\n        return sum==temp;\\n    }\\n   public static void main(String args[]){\\n       Scanner sc = new Scanner(System.in);\\n       int n=sc.nextInt();\\n       boolean p = isPal(n);\\n       System.out.println(p);\\n   }\\n}\\n\\nShowing that error only :-\\nLine 7: error: cannot find symbol [in __Driver__.java]\\n      boolean ret = new Solution().isPalindrome(param_1);\\n                                  ^\\n  symbol:   method isPalindrome(int)\\n  location: class Solution"
                    },
                    {
                        "username": "ajayshetty",
                        "content": "Is there anything wrong in the below code. I am getting test cases failed.\\n\\ndef isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        num = x;\\n        if num < 0:\\n            print(\\'negative\\');\\n            \\n        else :\\n            print(\\'positive\\');\\n            num = str(num);\\n            print(num);\\n            print(num[::-1]);\\n            if num == num[::-1]:\\n                print(num);\\n                return \\'true\\';\\n            \\n        return \\'false\\';"
                    },
                    {
                        "username": "IAmJuniorB",
                        "content": "My code doesn\\'t pass the first test, why?\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if str(x) == str(x)[::-1]:\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\n"
                    },
                    {
                        "username": "AchintyaShende",
                        "content": "What is wrong whit this code...\\nERROR IS :\\nLine 13: Char 20: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:22:20\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int temp=x;\\n        int rev=0;\\n        if(x<0)\\n        {\\n            return false;\\n        }\\n        while(x>0)\\n        {\\n            \\n            rev=rev*10+x%10;\\n            x/=10;\\n        }\\n        if(temp==rev)\\n        {\\n            return true;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n        \\n    }\\n};"
                    },
                    {
                        "username": "shyam_pandey",
                        "content": "class Solution {\\n    \\n    int reverse(int x){\\n        long long int temp = 0;\\n        int d = 0;\\n\\n        while(x!=0){\\n            d = x%10;\\n            temp = temp*10 + d;\\n            x = x/10;\\n        }\\n        return temp;\\n    }\\n\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0) return 0;\\n\\n        else{\\n\\n            long long int check = reverse(x);\\n\\n            if(check-x ==0 ) return 1;\\n\\n            else return 0;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "shyam_pandey",
                        "content": "class Solution {\\n    \\n    int reverse(int x){\\n        long long int temp = 0;\\n        int d = 0;\\n\\n        while(x!=0){\\n            d = x%10;\\n            temp = temp*10 + d;\\n            x = x/10;\\n        }\\n        return temp;\\n    }\\n\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0) return 0;\\n\\n        else{\\n\\n            long long int check = reverse(x);\\n\\n            if(check-x ==0 ) return 1;\\n\\n            else return 0;\\n        }\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1825934,
                "content": [
                    {
                        "username": "GoldenMode",
                        "content": "Can you help please!\\nThe code written in Visual Studio Code writes \"true\", and the verified code here writes \"false\" and complains about the number \"11\"\\nWhat could be the problem?\\nI published a post in solutions called \"Can you help please? GoldenMode\""
                    },
                    {
                        "username": "AsmitaMutgekar",
                        "content": "Below is my code for Palindrome\nwhen input is 0 it says false but as per code it should be true\n\npublic boolean isPalindrome(int x) {\n        int n=x;\n        int sum=0; \n        if(x<0 || x%10==0 )\n            return false;\n        while (n>0) {\n        sum=sum *10 + (n%10);\n         n=n/10;   \n        }\n        return x==sum; //  when x=0 it should directly come here which means true since sum=0 and x=0 but the result says false\n    }"
                    },
                    {
                        "username": "kumarryogeshh",
                        "content": "Using Typescript\\n `return x.toString() === x.toString().split(\\'\\').reverse().join(\\'\\')`"
                    },
                    {
                        "username": "Ganesh_Reddy_G",
                        "content": "My code is working fine in local but not here\\n\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        x = str(x)\\n        y = x[::-1]\\n\\n        try:\\n            if int(x) == int(y):\\n                return \"true\"\\n            else:\\n                return \"fasle\"\\n        except ValueError as v:\\n            return \"false\""
                    },
                    {
                        "username": "shubh_214",
                        "content": "This is my code but it is not working why...?\\n\\nimport java.util.Scanner;\\nclass Solution {\\n    static boolean isPal(int n){\\n        int sum=0, d, temp=n;\\n        while(n>0){\\n            d=n%10;\\n            sum=sum*10+d;\\n            n=n/10;\\n        }\\n        return sum==temp;\\n    }\\n   public static void main(String args[]){\\n       Scanner sc = new Scanner(System.in);\\n       int n=sc.nextInt();\\n       boolean p = isPal(n);\\n       System.out.println(p);\\n   }\\n}\\n\\nShowing that error only :-\\nLine 7: error: cannot find symbol [in __Driver__.java]\\n      boolean ret = new Solution().isPalindrome(param_1);\\n                                  ^\\n  symbol:   method isPalindrome(int)\\n  location: class Solution"
                    },
                    {
                        "username": "ajayshetty",
                        "content": "Is there anything wrong in the below code. I am getting test cases failed.\\n\\ndef isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        num = x;\\n        if num < 0:\\n            print(\\'negative\\');\\n            \\n        else :\\n            print(\\'positive\\');\\n            num = str(num);\\n            print(num);\\n            print(num[::-1]);\\n            if num == num[::-1]:\\n                print(num);\\n                return \\'true\\';\\n            \\n        return \\'false\\';"
                    },
                    {
                        "username": "IAmJuniorB",
                        "content": "My code doesn\\'t pass the first test, why?\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if str(x) == str(x)[::-1]:\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\n"
                    },
                    {
                        "username": "AchintyaShende",
                        "content": "What is wrong whit this code...\\nERROR IS :\\nLine 13: Char 20: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:22:20\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int temp=x;\\n        int rev=0;\\n        if(x<0)\\n        {\\n            return false;\\n        }\\n        while(x>0)\\n        {\\n            \\n            rev=rev*10+x%10;\\n            x/=10;\\n        }\\n        if(temp==rev)\\n        {\\n            return true;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n        \\n    }\\n};"
                    },
                    {
                        "username": "shyam_pandey",
                        "content": "class Solution {\\n    \\n    int reverse(int x){\\n        long long int temp = 0;\\n        int d = 0;\\n\\n        while(x!=0){\\n            d = x%10;\\n            temp = temp*10 + d;\\n            x = x/10;\\n        }\\n        return temp;\\n    }\\n\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0) return 0;\\n\\n        else{\\n\\n            long long int check = reverse(x);\\n\\n            if(check-x ==0 ) return 1;\\n\\n            else return 0;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "shyam_pandey",
                        "content": "class Solution {\\n    \\n    int reverse(int x){\\n        long long int temp = 0;\\n        int d = 0;\\n\\n        while(x!=0){\\n            d = x%10;\\n            temp = temp*10 + d;\\n            x = x/10;\\n        }\\n        return temp;\\n    }\\n\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0) return 0;\\n\\n        else{\\n\\n            long long int check = reverse(x);\\n\\n            if(check-x ==0 ) return 1;\\n\\n            else return 0;\\n        }\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1823284,
                "content": [
                    {
                        "username": "GoldenMode",
                        "content": "Can you help please!\\nThe code written in Visual Studio Code writes \"true\", and the verified code here writes \"false\" and complains about the number \"11\"\\nWhat could be the problem?\\nI published a post in solutions called \"Can you help please? GoldenMode\""
                    },
                    {
                        "username": "AsmitaMutgekar",
                        "content": "Below is my code for Palindrome\nwhen input is 0 it says false but as per code it should be true\n\npublic boolean isPalindrome(int x) {\n        int n=x;\n        int sum=0; \n        if(x<0 || x%10==0 )\n            return false;\n        while (n>0) {\n        sum=sum *10 + (n%10);\n         n=n/10;   \n        }\n        return x==sum; //  when x=0 it should directly come here which means true since sum=0 and x=0 but the result says false\n    }"
                    },
                    {
                        "username": "kumarryogeshh",
                        "content": "Using Typescript\\n `return x.toString() === x.toString().split(\\'\\').reverse().join(\\'\\')`"
                    },
                    {
                        "username": "Ganesh_Reddy_G",
                        "content": "My code is working fine in local but not here\\n\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        x = str(x)\\n        y = x[::-1]\\n\\n        try:\\n            if int(x) == int(y):\\n                return \"true\"\\n            else:\\n                return \"fasle\"\\n        except ValueError as v:\\n            return \"false\""
                    },
                    {
                        "username": "shubh_214",
                        "content": "This is my code but it is not working why...?\\n\\nimport java.util.Scanner;\\nclass Solution {\\n    static boolean isPal(int n){\\n        int sum=0, d, temp=n;\\n        while(n>0){\\n            d=n%10;\\n            sum=sum*10+d;\\n            n=n/10;\\n        }\\n        return sum==temp;\\n    }\\n   public static void main(String args[]){\\n       Scanner sc = new Scanner(System.in);\\n       int n=sc.nextInt();\\n       boolean p = isPal(n);\\n       System.out.println(p);\\n   }\\n}\\n\\nShowing that error only :-\\nLine 7: error: cannot find symbol [in __Driver__.java]\\n      boolean ret = new Solution().isPalindrome(param_1);\\n                                  ^\\n  symbol:   method isPalindrome(int)\\n  location: class Solution"
                    },
                    {
                        "username": "ajayshetty",
                        "content": "Is there anything wrong in the below code. I am getting test cases failed.\\n\\ndef isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        num = x;\\n        if num < 0:\\n            print(\\'negative\\');\\n            \\n        else :\\n            print(\\'positive\\');\\n            num = str(num);\\n            print(num);\\n            print(num[::-1]);\\n            if num == num[::-1]:\\n                print(num);\\n                return \\'true\\';\\n            \\n        return \\'false\\';"
                    },
                    {
                        "username": "IAmJuniorB",
                        "content": "My code doesn\\'t pass the first test, why?\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if str(x) == str(x)[::-1]:\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\n"
                    },
                    {
                        "username": "AchintyaShende",
                        "content": "What is wrong whit this code...\\nERROR IS :\\nLine 13: Char 20: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:22:20\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int temp=x;\\n        int rev=0;\\n        if(x<0)\\n        {\\n            return false;\\n        }\\n        while(x>0)\\n        {\\n            \\n            rev=rev*10+x%10;\\n            x/=10;\\n        }\\n        if(temp==rev)\\n        {\\n            return true;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n        \\n    }\\n};"
                    },
                    {
                        "username": "shyam_pandey",
                        "content": "class Solution {\\n    \\n    int reverse(int x){\\n        long long int temp = 0;\\n        int d = 0;\\n\\n        while(x!=0){\\n            d = x%10;\\n            temp = temp*10 + d;\\n            x = x/10;\\n        }\\n        return temp;\\n    }\\n\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0) return 0;\\n\\n        else{\\n\\n            long long int check = reverse(x);\\n\\n            if(check-x ==0 ) return 1;\\n\\n            else return 0;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "shyam_pandey",
                        "content": "class Solution {\\n    \\n    int reverse(int x){\\n        long long int temp = 0;\\n        int d = 0;\\n\\n        while(x!=0){\\n            d = x%10;\\n            temp = temp*10 + d;\\n            x = x/10;\\n        }\\n        return temp;\\n    }\\n\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0) return 0;\\n\\n        else{\\n\\n            long long int check = reverse(x);\\n\\n            if(check-x ==0 ) return 1;\\n\\n            else return 0;\\n        }\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1816438,
                "content": [
                    {
                        "username": "GoldenMode",
                        "content": "Can you help please!\\nThe code written in Visual Studio Code writes \"true\", and the verified code here writes \"false\" and complains about the number \"11\"\\nWhat could be the problem?\\nI published a post in solutions called \"Can you help please? GoldenMode\""
                    },
                    {
                        "username": "AsmitaMutgekar",
                        "content": "Below is my code for Palindrome\nwhen input is 0 it says false but as per code it should be true\n\npublic boolean isPalindrome(int x) {\n        int n=x;\n        int sum=0; \n        if(x<0 || x%10==0 )\n            return false;\n        while (n>0) {\n        sum=sum *10 + (n%10);\n         n=n/10;   \n        }\n        return x==sum; //  when x=0 it should directly come here which means true since sum=0 and x=0 but the result says false\n    }"
                    },
                    {
                        "username": "kumarryogeshh",
                        "content": "Using Typescript\\n `return x.toString() === x.toString().split(\\'\\').reverse().join(\\'\\')`"
                    },
                    {
                        "username": "Ganesh_Reddy_G",
                        "content": "My code is working fine in local but not here\\n\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        x = str(x)\\n        y = x[::-1]\\n\\n        try:\\n            if int(x) == int(y):\\n                return \"true\"\\n            else:\\n                return \"fasle\"\\n        except ValueError as v:\\n            return \"false\""
                    },
                    {
                        "username": "shubh_214",
                        "content": "This is my code but it is not working why...?\\n\\nimport java.util.Scanner;\\nclass Solution {\\n    static boolean isPal(int n){\\n        int sum=0, d, temp=n;\\n        while(n>0){\\n            d=n%10;\\n            sum=sum*10+d;\\n            n=n/10;\\n        }\\n        return sum==temp;\\n    }\\n   public static void main(String args[]){\\n       Scanner sc = new Scanner(System.in);\\n       int n=sc.nextInt();\\n       boolean p = isPal(n);\\n       System.out.println(p);\\n   }\\n}\\n\\nShowing that error only :-\\nLine 7: error: cannot find symbol [in __Driver__.java]\\n      boolean ret = new Solution().isPalindrome(param_1);\\n                                  ^\\n  symbol:   method isPalindrome(int)\\n  location: class Solution"
                    },
                    {
                        "username": "ajayshetty",
                        "content": "Is there anything wrong in the below code. I am getting test cases failed.\\n\\ndef isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        num = x;\\n        if num < 0:\\n            print(\\'negative\\');\\n            \\n        else :\\n            print(\\'positive\\');\\n            num = str(num);\\n            print(num);\\n            print(num[::-1]);\\n            if num == num[::-1]:\\n                print(num);\\n                return \\'true\\';\\n            \\n        return \\'false\\';"
                    },
                    {
                        "username": "IAmJuniorB",
                        "content": "My code doesn\\'t pass the first test, why?\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if str(x) == str(x)[::-1]:\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\n"
                    },
                    {
                        "username": "AchintyaShende",
                        "content": "What is wrong whit this code...\\nERROR IS :\\nLine 13: Char 20: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:22:20\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int temp=x;\\n        int rev=0;\\n        if(x<0)\\n        {\\n            return false;\\n        }\\n        while(x>0)\\n        {\\n            \\n            rev=rev*10+x%10;\\n            x/=10;\\n        }\\n        if(temp==rev)\\n        {\\n            return true;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n        \\n    }\\n};"
                    },
                    {
                        "username": "shyam_pandey",
                        "content": "class Solution {\\n    \\n    int reverse(int x){\\n        long long int temp = 0;\\n        int d = 0;\\n\\n        while(x!=0){\\n            d = x%10;\\n            temp = temp*10 + d;\\n            x = x/10;\\n        }\\n        return temp;\\n    }\\n\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0) return 0;\\n\\n        else{\\n\\n            long long int check = reverse(x);\\n\\n            if(check-x ==0 ) return 1;\\n\\n            else return 0;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "shyam_pandey",
                        "content": "class Solution {\\n    \\n    int reverse(int x){\\n        long long int temp = 0;\\n        int d = 0;\\n\\n        while(x!=0){\\n            d = x%10;\\n            temp = temp*10 + d;\\n            x = x/10;\\n        }\\n        return temp;\\n    }\\n\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0) return 0;\\n\\n        else{\\n\\n            long long int check = reverse(x);\\n\\n            if(check-x ==0 ) return 1;\\n\\n            else return 0;\\n        }\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1813478,
                "content": [
                    {
                        "username": "GoldenMode",
                        "content": "Can you help please!\\nThe code written in Visual Studio Code writes \"true\", and the verified code here writes \"false\" and complains about the number \"11\"\\nWhat could be the problem?\\nI published a post in solutions called \"Can you help please? GoldenMode\""
                    },
                    {
                        "username": "AsmitaMutgekar",
                        "content": "Below is my code for Palindrome\nwhen input is 0 it says false but as per code it should be true\n\npublic boolean isPalindrome(int x) {\n        int n=x;\n        int sum=0; \n        if(x<0 || x%10==0 )\n            return false;\n        while (n>0) {\n        sum=sum *10 + (n%10);\n         n=n/10;   \n        }\n        return x==sum; //  when x=0 it should directly come here which means true since sum=0 and x=0 but the result says false\n    }"
                    },
                    {
                        "username": "kumarryogeshh",
                        "content": "Using Typescript\\n `return x.toString() === x.toString().split(\\'\\').reverse().join(\\'\\')`"
                    },
                    {
                        "username": "Ganesh_Reddy_G",
                        "content": "My code is working fine in local but not here\\n\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        x = str(x)\\n        y = x[::-1]\\n\\n        try:\\n            if int(x) == int(y):\\n                return \"true\"\\n            else:\\n                return \"fasle\"\\n        except ValueError as v:\\n            return \"false\""
                    },
                    {
                        "username": "shubh_214",
                        "content": "This is my code but it is not working why...?\\n\\nimport java.util.Scanner;\\nclass Solution {\\n    static boolean isPal(int n){\\n        int sum=0, d, temp=n;\\n        while(n>0){\\n            d=n%10;\\n            sum=sum*10+d;\\n            n=n/10;\\n        }\\n        return sum==temp;\\n    }\\n   public static void main(String args[]){\\n       Scanner sc = new Scanner(System.in);\\n       int n=sc.nextInt();\\n       boolean p = isPal(n);\\n       System.out.println(p);\\n   }\\n}\\n\\nShowing that error only :-\\nLine 7: error: cannot find symbol [in __Driver__.java]\\n      boolean ret = new Solution().isPalindrome(param_1);\\n                                  ^\\n  symbol:   method isPalindrome(int)\\n  location: class Solution"
                    },
                    {
                        "username": "ajayshetty",
                        "content": "Is there anything wrong in the below code. I am getting test cases failed.\\n\\ndef isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        num = x;\\n        if num < 0:\\n            print(\\'negative\\');\\n            \\n        else :\\n            print(\\'positive\\');\\n            num = str(num);\\n            print(num);\\n            print(num[::-1]);\\n            if num == num[::-1]:\\n                print(num);\\n                return \\'true\\';\\n            \\n        return \\'false\\';"
                    },
                    {
                        "username": "IAmJuniorB",
                        "content": "My code doesn\\'t pass the first test, why?\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if str(x) == str(x)[::-1]:\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\n"
                    },
                    {
                        "username": "AchintyaShende",
                        "content": "What is wrong whit this code...\\nERROR IS :\\nLine 13: Char 20: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:22:20\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int temp=x;\\n        int rev=0;\\n        if(x<0)\\n        {\\n            return false;\\n        }\\n        while(x>0)\\n        {\\n            \\n            rev=rev*10+x%10;\\n            x/=10;\\n        }\\n        if(temp==rev)\\n        {\\n            return true;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n        \\n    }\\n};"
                    },
                    {
                        "username": "shyam_pandey",
                        "content": "class Solution {\\n    \\n    int reverse(int x){\\n        long long int temp = 0;\\n        int d = 0;\\n\\n        while(x!=0){\\n            d = x%10;\\n            temp = temp*10 + d;\\n            x = x/10;\\n        }\\n        return temp;\\n    }\\n\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0) return 0;\\n\\n        else{\\n\\n            long long int check = reverse(x);\\n\\n            if(check-x ==0 ) return 1;\\n\\n            else return 0;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "shyam_pandey",
                        "content": "class Solution {\\n    \\n    int reverse(int x){\\n        long long int temp = 0;\\n        int d = 0;\\n\\n        while(x!=0){\\n            d = x%10;\\n            temp = temp*10 + d;\\n            x = x/10;\\n        }\\n        return temp;\\n    }\\n\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0) return 0;\\n\\n        else{\\n\\n            long long int check = reverse(x);\\n\\n            if(check-x ==0 ) return 1;\\n\\n            else return 0;\\n        }\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1810922,
                "content": [
                    {
                        "username": "GoldenMode",
                        "content": "Can you help please!\\nThe code written in Visual Studio Code writes \"true\", and the verified code here writes \"false\" and complains about the number \"11\"\\nWhat could be the problem?\\nI published a post in solutions called \"Can you help please? GoldenMode\""
                    },
                    {
                        "username": "AsmitaMutgekar",
                        "content": "Below is my code for Palindrome\nwhen input is 0 it says false but as per code it should be true\n\npublic boolean isPalindrome(int x) {\n        int n=x;\n        int sum=0; \n        if(x<0 || x%10==0 )\n            return false;\n        while (n>0) {\n        sum=sum *10 + (n%10);\n         n=n/10;   \n        }\n        return x==sum; //  when x=0 it should directly come here which means true since sum=0 and x=0 but the result says false\n    }"
                    },
                    {
                        "username": "kumarryogeshh",
                        "content": "Using Typescript\\n `return x.toString() === x.toString().split(\\'\\').reverse().join(\\'\\')`"
                    },
                    {
                        "username": "Ganesh_Reddy_G",
                        "content": "My code is working fine in local but not here\\n\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        x = str(x)\\n        y = x[::-1]\\n\\n        try:\\n            if int(x) == int(y):\\n                return \"true\"\\n            else:\\n                return \"fasle\"\\n        except ValueError as v:\\n            return \"false\""
                    },
                    {
                        "username": "shubh_214",
                        "content": "This is my code but it is not working why...?\\n\\nimport java.util.Scanner;\\nclass Solution {\\n    static boolean isPal(int n){\\n        int sum=0, d, temp=n;\\n        while(n>0){\\n            d=n%10;\\n            sum=sum*10+d;\\n            n=n/10;\\n        }\\n        return sum==temp;\\n    }\\n   public static void main(String args[]){\\n       Scanner sc = new Scanner(System.in);\\n       int n=sc.nextInt();\\n       boolean p = isPal(n);\\n       System.out.println(p);\\n   }\\n}\\n\\nShowing that error only :-\\nLine 7: error: cannot find symbol [in __Driver__.java]\\n      boolean ret = new Solution().isPalindrome(param_1);\\n                                  ^\\n  symbol:   method isPalindrome(int)\\n  location: class Solution"
                    },
                    {
                        "username": "ajayshetty",
                        "content": "Is there anything wrong in the below code. I am getting test cases failed.\\n\\ndef isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        num = x;\\n        if num < 0:\\n            print(\\'negative\\');\\n            \\n        else :\\n            print(\\'positive\\');\\n            num = str(num);\\n            print(num);\\n            print(num[::-1]);\\n            if num == num[::-1]:\\n                print(num);\\n                return \\'true\\';\\n            \\n        return \\'false\\';"
                    },
                    {
                        "username": "IAmJuniorB",
                        "content": "My code doesn\\'t pass the first test, why?\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if str(x) == str(x)[::-1]:\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\n"
                    },
                    {
                        "username": "AchintyaShende",
                        "content": "What is wrong whit this code...\\nERROR IS :\\nLine 13: Char 20: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:22:20\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int temp=x;\\n        int rev=0;\\n        if(x<0)\\n        {\\n            return false;\\n        }\\n        while(x>0)\\n        {\\n            \\n            rev=rev*10+x%10;\\n            x/=10;\\n        }\\n        if(temp==rev)\\n        {\\n            return true;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n        \\n    }\\n};"
                    },
                    {
                        "username": "shyam_pandey",
                        "content": "class Solution {\\n    \\n    int reverse(int x){\\n        long long int temp = 0;\\n        int d = 0;\\n\\n        while(x!=0){\\n            d = x%10;\\n            temp = temp*10 + d;\\n            x = x/10;\\n        }\\n        return temp;\\n    }\\n\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0) return 0;\\n\\n        else{\\n\\n            long long int check = reverse(x);\\n\\n            if(check-x ==0 ) return 1;\\n\\n            else return 0;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "shyam_pandey",
                        "content": "class Solution {\\n    \\n    int reverse(int x){\\n        long long int temp = 0;\\n        int d = 0;\\n\\n        while(x!=0){\\n            d = x%10;\\n            temp = temp*10 + d;\\n            x = x/10;\\n        }\\n        return temp;\\n    }\\n\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0) return 0;\\n\\n        else{\\n\\n            long long int check = reverse(x);\\n\\n            if(check-x ==0 ) return 1;\\n\\n            else return 0;\\n        }\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1807668,
                "content": [
                    {
                        "username": "GoldenMode",
                        "content": "Can you help please!\\nThe code written in Visual Studio Code writes \"true\", and the verified code here writes \"false\" and complains about the number \"11\"\\nWhat could be the problem?\\nI published a post in solutions called \"Can you help please? GoldenMode\""
                    },
                    {
                        "username": "AsmitaMutgekar",
                        "content": "Below is my code for Palindrome\nwhen input is 0 it says false but as per code it should be true\n\npublic boolean isPalindrome(int x) {\n        int n=x;\n        int sum=0; \n        if(x<0 || x%10==0 )\n            return false;\n        while (n>0) {\n        sum=sum *10 + (n%10);\n         n=n/10;   \n        }\n        return x==sum; //  when x=0 it should directly come here which means true since sum=0 and x=0 but the result says false\n    }"
                    },
                    {
                        "username": "kumarryogeshh",
                        "content": "Using Typescript\\n `return x.toString() === x.toString().split(\\'\\').reverse().join(\\'\\')`"
                    },
                    {
                        "username": "Ganesh_Reddy_G",
                        "content": "My code is working fine in local but not here\\n\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        x = str(x)\\n        y = x[::-1]\\n\\n        try:\\n            if int(x) == int(y):\\n                return \"true\"\\n            else:\\n                return \"fasle\"\\n        except ValueError as v:\\n            return \"false\""
                    },
                    {
                        "username": "shubh_214",
                        "content": "This is my code but it is not working why...?\\n\\nimport java.util.Scanner;\\nclass Solution {\\n    static boolean isPal(int n){\\n        int sum=0, d, temp=n;\\n        while(n>0){\\n            d=n%10;\\n            sum=sum*10+d;\\n            n=n/10;\\n        }\\n        return sum==temp;\\n    }\\n   public static void main(String args[]){\\n       Scanner sc = new Scanner(System.in);\\n       int n=sc.nextInt();\\n       boolean p = isPal(n);\\n       System.out.println(p);\\n   }\\n}\\n\\nShowing that error only :-\\nLine 7: error: cannot find symbol [in __Driver__.java]\\n      boolean ret = new Solution().isPalindrome(param_1);\\n                                  ^\\n  symbol:   method isPalindrome(int)\\n  location: class Solution"
                    },
                    {
                        "username": "ajayshetty",
                        "content": "Is there anything wrong in the below code. I am getting test cases failed.\\n\\ndef isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        num = x;\\n        if num < 0:\\n            print(\\'negative\\');\\n            \\n        else :\\n            print(\\'positive\\');\\n            num = str(num);\\n            print(num);\\n            print(num[::-1]);\\n            if num == num[::-1]:\\n                print(num);\\n                return \\'true\\';\\n            \\n        return \\'false\\';"
                    },
                    {
                        "username": "IAmJuniorB",
                        "content": "My code doesn\\'t pass the first test, why?\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if str(x) == str(x)[::-1]:\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\n"
                    },
                    {
                        "username": "AchintyaShende",
                        "content": "What is wrong whit this code...\\nERROR IS :\\nLine 13: Char 20: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:22:20\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int temp=x;\\n        int rev=0;\\n        if(x<0)\\n        {\\n            return false;\\n        }\\n        while(x>0)\\n        {\\n            \\n            rev=rev*10+x%10;\\n            x/=10;\\n        }\\n        if(temp==rev)\\n        {\\n            return true;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n        \\n    }\\n};"
                    },
                    {
                        "username": "shyam_pandey",
                        "content": "class Solution {\\n    \\n    int reverse(int x){\\n        long long int temp = 0;\\n        int d = 0;\\n\\n        while(x!=0){\\n            d = x%10;\\n            temp = temp*10 + d;\\n            x = x/10;\\n        }\\n        return temp;\\n    }\\n\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0) return 0;\\n\\n        else{\\n\\n            long long int check = reverse(x);\\n\\n            if(check-x ==0 ) return 1;\\n\\n            else return 0;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "shyam_pandey",
                        "content": "class Solution {\\n    \\n    int reverse(int x){\\n        long long int temp = 0;\\n        int d = 0;\\n\\n        while(x!=0){\\n            d = x%10;\\n            temp = temp*10 + d;\\n            x = x/10;\\n        }\\n        return temp;\\n    }\\n\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0) return 0;\\n\\n        else{\\n\\n            long long int check = reverse(x);\\n\\n            if(check-x ==0 ) return 1;\\n\\n            else return 0;\\n        }\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1807169,
                "content": [
                    {
                        "username": "GoldenMode",
                        "content": "Can you help please!\\nThe code written in Visual Studio Code writes \"true\", and the verified code here writes \"false\" and complains about the number \"11\"\\nWhat could be the problem?\\nI published a post in solutions called \"Can you help please? GoldenMode\""
                    },
                    {
                        "username": "AsmitaMutgekar",
                        "content": "Below is my code for Palindrome\nwhen input is 0 it says false but as per code it should be true\n\npublic boolean isPalindrome(int x) {\n        int n=x;\n        int sum=0; \n        if(x<0 || x%10==0 )\n            return false;\n        while (n>0) {\n        sum=sum *10 + (n%10);\n         n=n/10;   \n        }\n        return x==sum; //  when x=0 it should directly come here which means true since sum=0 and x=0 but the result says false\n    }"
                    },
                    {
                        "username": "kumarryogeshh",
                        "content": "Using Typescript\\n `return x.toString() === x.toString().split(\\'\\').reverse().join(\\'\\')`"
                    },
                    {
                        "username": "Ganesh_Reddy_G",
                        "content": "My code is working fine in local but not here\\n\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        x = str(x)\\n        y = x[::-1]\\n\\n        try:\\n            if int(x) == int(y):\\n                return \"true\"\\n            else:\\n                return \"fasle\"\\n        except ValueError as v:\\n            return \"false\""
                    },
                    {
                        "username": "shubh_214",
                        "content": "This is my code but it is not working why...?\\n\\nimport java.util.Scanner;\\nclass Solution {\\n    static boolean isPal(int n){\\n        int sum=0, d, temp=n;\\n        while(n>0){\\n            d=n%10;\\n            sum=sum*10+d;\\n            n=n/10;\\n        }\\n        return sum==temp;\\n    }\\n   public static void main(String args[]){\\n       Scanner sc = new Scanner(System.in);\\n       int n=sc.nextInt();\\n       boolean p = isPal(n);\\n       System.out.println(p);\\n   }\\n}\\n\\nShowing that error only :-\\nLine 7: error: cannot find symbol [in __Driver__.java]\\n      boolean ret = new Solution().isPalindrome(param_1);\\n                                  ^\\n  symbol:   method isPalindrome(int)\\n  location: class Solution"
                    },
                    {
                        "username": "ajayshetty",
                        "content": "Is there anything wrong in the below code. I am getting test cases failed.\\n\\ndef isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        num = x;\\n        if num < 0:\\n            print(\\'negative\\');\\n            \\n        else :\\n            print(\\'positive\\');\\n            num = str(num);\\n            print(num);\\n            print(num[::-1]);\\n            if num == num[::-1]:\\n                print(num);\\n                return \\'true\\';\\n            \\n        return \\'false\\';"
                    },
                    {
                        "username": "IAmJuniorB",
                        "content": "My code doesn\\'t pass the first test, why?\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if str(x) == str(x)[::-1]:\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\n"
                    },
                    {
                        "username": "AchintyaShende",
                        "content": "What is wrong whit this code...\\nERROR IS :\\nLine 13: Char 20: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:22:20\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int temp=x;\\n        int rev=0;\\n        if(x<0)\\n        {\\n            return false;\\n        }\\n        while(x>0)\\n        {\\n            \\n            rev=rev*10+x%10;\\n            x/=10;\\n        }\\n        if(temp==rev)\\n        {\\n            return true;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n        \\n    }\\n};"
                    },
                    {
                        "username": "shyam_pandey",
                        "content": "class Solution {\\n    \\n    int reverse(int x){\\n        long long int temp = 0;\\n        int d = 0;\\n\\n        while(x!=0){\\n            d = x%10;\\n            temp = temp*10 + d;\\n            x = x/10;\\n        }\\n        return temp;\\n    }\\n\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0) return 0;\\n\\n        else{\\n\\n            long long int check = reverse(x);\\n\\n            if(check-x ==0 ) return 1;\\n\\n            else return 0;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "shyam_pandey",
                        "content": "class Solution {\\n    \\n    int reverse(int x){\\n        long long int temp = 0;\\n        int d = 0;\\n\\n        while(x!=0){\\n            d = x%10;\\n            temp = temp*10 + d;\\n            x = x/10;\\n        }\\n        return temp;\\n    }\\n\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0) return 0;\\n\\n        else{\\n\\n            long long int check = reverse(x);\\n\\n            if(check-x ==0 ) return 1;\\n\\n            else return 0;\\n        }\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1806824,
                "content": [
                    {
                        "username": "GoldenMode",
                        "content": "Can you help please!\\nThe code written in Visual Studio Code writes \"true\", and the verified code here writes \"false\" and complains about the number \"11\"\\nWhat could be the problem?\\nI published a post in solutions called \"Can you help please? GoldenMode\""
                    },
                    {
                        "username": "AsmitaMutgekar",
                        "content": "Below is my code for Palindrome\nwhen input is 0 it says false but as per code it should be true\n\npublic boolean isPalindrome(int x) {\n        int n=x;\n        int sum=0; \n        if(x<0 || x%10==0 )\n            return false;\n        while (n>0) {\n        sum=sum *10 + (n%10);\n         n=n/10;   \n        }\n        return x==sum; //  when x=0 it should directly come here which means true since sum=0 and x=0 but the result says false\n    }"
                    },
                    {
                        "username": "kumarryogeshh",
                        "content": "Using Typescript\\n `return x.toString() === x.toString().split(\\'\\').reverse().join(\\'\\')`"
                    },
                    {
                        "username": "Ganesh_Reddy_G",
                        "content": "My code is working fine in local but not here\\n\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        x = str(x)\\n        y = x[::-1]\\n\\n        try:\\n            if int(x) == int(y):\\n                return \"true\"\\n            else:\\n                return \"fasle\"\\n        except ValueError as v:\\n            return \"false\""
                    },
                    {
                        "username": "shubh_214",
                        "content": "This is my code but it is not working why...?\\n\\nimport java.util.Scanner;\\nclass Solution {\\n    static boolean isPal(int n){\\n        int sum=0, d, temp=n;\\n        while(n>0){\\n            d=n%10;\\n            sum=sum*10+d;\\n            n=n/10;\\n        }\\n        return sum==temp;\\n    }\\n   public static void main(String args[]){\\n       Scanner sc = new Scanner(System.in);\\n       int n=sc.nextInt();\\n       boolean p = isPal(n);\\n       System.out.println(p);\\n   }\\n}\\n\\nShowing that error only :-\\nLine 7: error: cannot find symbol [in __Driver__.java]\\n      boolean ret = new Solution().isPalindrome(param_1);\\n                                  ^\\n  symbol:   method isPalindrome(int)\\n  location: class Solution"
                    },
                    {
                        "username": "ajayshetty",
                        "content": "Is there anything wrong in the below code. I am getting test cases failed.\\n\\ndef isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        num = x;\\n        if num < 0:\\n            print(\\'negative\\');\\n            \\n        else :\\n            print(\\'positive\\');\\n            num = str(num);\\n            print(num);\\n            print(num[::-1]);\\n            if num == num[::-1]:\\n                print(num);\\n                return \\'true\\';\\n            \\n        return \\'false\\';"
                    },
                    {
                        "username": "IAmJuniorB",
                        "content": "My code doesn\\'t pass the first test, why?\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if str(x) == str(x)[::-1]:\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\n"
                    },
                    {
                        "username": "AchintyaShende",
                        "content": "What is wrong whit this code...\\nERROR IS :\\nLine 13: Char 20: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:22:20\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int temp=x;\\n        int rev=0;\\n        if(x<0)\\n        {\\n            return false;\\n        }\\n        while(x>0)\\n        {\\n            \\n            rev=rev*10+x%10;\\n            x/=10;\\n        }\\n        if(temp==rev)\\n        {\\n            return true;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n        \\n    }\\n};"
                    },
                    {
                        "username": "shyam_pandey",
                        "content": "class Solution {\\n    \\n    int reverse(int x){\\n        long long int temp = 0;\\n        int d = 0;\\n\\n        while(x!=0){\\n            d = x%10;\\n            temp = temp*10 + d;\\n            x = x/10;\\n        }\\n        return temp;\\n    }\\n\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0) return 0;\\n\\n        else{\\n\\n            long long int check = reverse(x);\\n\\n            if(check-x ==0 ) return 1;\\n\\n            else return 0;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "shyam_pandey",
                        "content": "class Solution {\\n    \\n    int reverse(int x){\\n        long long int temp = 0;\\n        int d = 0;\\n\\n        while(x!=0){\\n            d = x%10;\\n            temp = temp*10 + d;\\n            x = x/10;\\n        }\\n        return temp;\\n    }\\n\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0) return 0;\\n\\n        else{\\n\\n            long long int check = reverse(x);\\n\\n            if(check-x ==0 ) return 1;\\n\\n            else return 0;\\n        }\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1806823,
                "content": [
                    {
                        "username": "GoldenMode",
                        "content": "Can you help please!\\nThe code written in Visual Studio Code writes \"true\", and the verified code here writes \"false\" and complains about the number \"11\"\\nWhat could be the problem?\\nI published a post in solutions called \"Can you help please? GoldenMode\""
                    },
                    {
                        "username": "AsmitaMutgekar",
                        "content": "Below is my code for Palindrome\nwhen input is 0 it says false but as per code it should be true\n\npublic boolean isPalindrome(int x) {\n        int n=x;\n        int sum=0; \n        if(x<0 || x%10==0 )\n            return false;\n        while (n>0) {\n        sum=sum *10 + (n%10);\n         n=n/10;   \n        }\n        return x==sum; //  when x=0 it should directly come here which means true since sum=0 and x=0 but the result says false\n    }"
                    },
                    {
                        "username": "kumarryogeshh",
                        "content": "Using Typescript\\n `return x.toString() === x.toString().split(\\'\\').reverse().join(\\'\\')`"
                    },
                    {
                        "username": "Ganesh_Reddy_G",
                        "content": "My code is working fine in local but not here\\n\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        x = str(x)\\n        y = x[::-1]\\n\\n        try:\\n            if int(x) == int(y):\\n                return \"true\"\\n            else:\\n                return \"fasle\"\\n        except ValueError as v:\\n            return \"false\""
                    },
                    {
                        "username": "shubh_214",
                        "content": "This is my code but it is not working why...?\\n\\nimport java.util.Scanner;\\nclass Solution {\\n    static boolean isPal(int n){\\n        int sum=0, d, temp=n;\\n        while(n>0){\\n            d=n%10;\\n            sum=sum*10+d;\\n            n=n/10;\\n        }\\n        return sum==temp;\\n    }\\n   public static void main(String args[]){\\n       Scanner sc = new Scanner(System.in);\\n       int n=sc.nextInt();\\n       boolean p = isPal(n);\\n       System.out.println(p);\\n   }\\n}\\n\\nShowing that error only :-\\nLine 7: error: cannot find symbol [in __Driver__.java]\\n      boolean ret = new Solution().isPalindrome(param_1);\\n                                  ^\\n  symbol:   method isPalindrome(int)\\n  location: class Solution"
                    },
                    {
                        "username": "ajayshetty",
                        "content": "Is there anything wrong in the below code. I am getting test cases failed.\\n\\ndef isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        num = x;\\n        if num < 0:\\n            print(\\'negative\\');\\n            \\n        else :\\n            print(\\'positive\\');\\n            num = str(num);\\n            print(num);\\n            print(num[::-1]);\\n            if num == num[::-1]:\\n                print(num);\\n                return \\'true\\';\\n            \\n        return \\'false\\';"
                    },
                    {
                        "username": "IAmJuniorB",
                        "content": "My code doesn\\'t pass the first test, why?\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        if str(x) == str(x)[::-1]:\\n            print(\"true\")\\n        else:\\n            print(\"false\")\\n"
                    },
                    {
                        "username": "AchintyaShende",
                        "content": "What is wrong whit this code...\\nERROR IS :\\nLine 13: Char 20: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:22:20\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int temp=x;\\n        int rev=0;\\n        if(x<0)\\n        {\\n            return false;\\n        }\\n        while(x>0)\\n        {\\n            \\n            rev=rev*10+x%10;\\n            x/=10;\\n        }\\n        if(temp==rev)\\n        {\\n            return true;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n        \\n    }\\n};"
                    },
                    {
                        "username": "shyam_pandey",
                        "content": "class Solution {\\n    \\n    int reverse(int x){\\n        long long int temp = 0;\\n        int d = 0;\\n\\n        while(x!=0){\\n            d = x%10;\\n            temp = temp*10 + d;\\n            x = x/10;\\n        }\\n        return temp;\\n    }\\n\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0) return 0;\\n\\n        else{\\n\\n            long long int check = reverse(x);\\n\\n            if(check-x ==0 ) return 1;\\n\\n            else return 0;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "shyam_pandey",
                        "content": "class Solution {\\n    \\n    int reverse(int x){\\n        long long int temp = 0;\\n        int d = 0;\\n\\n        while(x!=0){\\n            d = x%10;\\n            temp = temp*10 + d;\\n            x = x/10;\\n        }\\n        return temp;\\n    }\\n\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0) return 0;\\n\\n        else{\\n\\n            long long int check = reverse(x);\\n\\n            if(check-x ==0 ) return 1;\\n\\n            else return 0;\\n        }\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1805990,
                "content": [
                    {
                        "username": "raghavbakshee",
                        "content": "Getting exception - WHY??\n\njava.lang.NumberFormatException: For input string: \"\"\n \nSmall part of Code Snippet - \n..\n..\n..\nString answer = \"\";\n        while(temp != 0){\n            res = res * 10 + temp % 10;\n            answer = answer + temp % 10;\n            temp = temp / 10;\n        }\n        if(res > Integer.MAX_VALUE || res < Integer.MIN_VALUE) return false;\n        if(Integer.parseInt(answer) == x) return true;\n        return false;"
                    },
                    {
                        "username": "2k20csbs22",
                        "content": " `JAVA CODE\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int sum=0,r,n;\\n        n =x;\\n        while(n>0){\\n            r = n%10;\\n            sum = (sum*10)+r;\\n            n = n/10;\\n        }\\n        if(x==sum)\\n            return true;\\n        else\\n            return false;\\n    }\\n}`"
                    },
                    {
                        "username": "rishabhdevbandhudas",
                        "content": "without converting into string ,, see my solution"
                    },
                    {
                        "username": "SouvikDas2002",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int rev=0;\\n        int n=x;\\n        int ld;\\n\\n        if(x<0)\\n        return false;\\n\\n        while(x>0){\\n            ld=x%10;\\n            rev=rev*10+ld;\\n            x=x/10;\\n        }\\n        if(rev==n){\\n            return 1;\\n        }\\n        return 0;\\n        \\n    }\\n};\\n\\nwhy this code give me this type error?\\n\\nLine 13: Char 20: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:22:20"
                    },
                    {
                        "username": "Casual_0101",
                        "content": "\\u30B3\\u30FC\\u30C9\\u826F\\u3044\\n"
                    },
                    {
                        "username": "samadhan_03",
                        "content": "Line 19: Char 5: error: non-void function does not return a value [-Werror,-Wreturn-type]\\n    }\\n    ^\\n1 error generated.\\n\\n\\nmy solution is correct but its shows the error\\n\\n"
                    },
                    {
                        "username": "aravindnethi1632",
                        "content": "Hey Everyone,\\n\\nI have used below code 11509/11510 testcase passed only one test case not passed can anyone please check it.\\n\\n`` strr=str(x)\\n  if (strr==strr[::-1]):\\n            return x\\n`` "
                    },
                    {
                        "username": "taiyaljitin",
                        "content": "can anyone tell me why is this error showing when i run\\n\\nlong long int rev = 0;\\n\\n..........\\n\\nrev = (10*rev) +rem;\\n\\n\\nError\\n\\nLine 9: Char 19: runtime error: signed integer overflow: 10 * 1210000000000000000 cannot be represented in type \\'long long\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:18:19"
                    },
                    {
                        "username": "Captainslate01",
                        "content": "My while loop is not exiting??\\na=0\\n        b=x\\n        z=1\\n        while b!=0:\\n            m=b%10\\n            a=a*10+m\\n            b=b//10\\n            print(b)"
                    },
                    {
                        "username": "Chernikc1",
                        "content": "lol my solution. Bad in test 11509 when i take error that 0 true but how??) If x > 0  it is false\\npublic bool IsPalindrome(int x) {\\n        if (x > 0)\\n        {\\n            int num = x;\\n            int rev = 0;\\n            while (x >= 1)\\n            {\\n                int r = x % 10;\\n                rev = rev * 10 + r;\\n                x = x / 10;\\n            }\\n\\n            if(num == rev)\\n            {\\n                return true;\\n            } \\n            return false;\\n        } \\n        return false;\\n    }\\n"
                    }
                ]
            },
            {
                "id": 1805091,
                "content": [
                    {
                        "username": "raghavbakshee",
                        "content": "Getting exception - WHY??\n\njava.lang.NumberFormatException: For input string: \"\"\n \nSmall part of Code Snippet - \n..\n..\n..\nString answer = \"\";\n        while(temp != 0){\n            res = res * 10 + temp % 10;\n            answer = answer + temp % 10;\n            temp = temp / 10;\n        }\n        if(res > Integer.MAX_VALUE || res < Integer.MIN_VALUE) return false;\n        if(Integer.parseInt(answer) == x) return true;\n        return false;"
                    },
                    {
                        "username": "2k20csbs22",
                        "content": " `JAVA CODE\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int sum=0,r,n;\\n        n =x;\\n        while(n>0){\\n            r = n%10;\\n            sum = (sum*10)+r;\\n            n = n/10;\\n        }\\n        if(x==sum)\\n            return true;\\n        else\\n            return false;\\n    }\\n}`"
                    },
                    {
                        "username": "rishabhdevbandhudas",
                        "content": "without converting into string ,, see my solution"
                    },
                    {
                        "username": "SouvikDas2002",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int rev=0;\\n        int n=x;\\n        int ld;\\n\\n        if(x<0)\\n        return false;\\n\\n        while(x>0){\\n            ld=x%10;\\n            rev=rev*10+ld;\\n            x=x/10;\\n        }\\n        if(rev==n){\\n            return 1;\\n        }\\n        return 0;\\n        \\n    }\\n};\\n\\nwhy this code give me this type error?\\n\\nLine 13: Char 20: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:22:20"
                    },
                    {
                        "username": "Casual_0101",
                        "content": "\\u30B3\\u30FC\\u30C9\\u826F\\u3044\\n"
                    },
                    {
                        "username": "samadhan_03",
                        "content": "Line 19: Char 5: error: non-void function does not return a value [-Werror,-Wreturn-type]\\n    }\\n    ^\\n1 error generated.\\n\\n\\nmy solution is correct but its shows the error\\n\\n"
                    },
                    {
                        "username": "aravindnethi1632",
                        "content": "Hey Everyone,\\n\\nI have used below code 11509/11510 testcase passed only one test case not passed can anyone please check it.\\n\\n`` strr=str(x)\\n  if (strr==strr[::-1]):\\n            return x\\n`` "
                    },
                    {
                        "username": "taiyaljitin",
                        "content": "can anyone tell me why is this error showing when i run\\n\\nlong long int rev = 0;\\n\\n..........\\n\\nrev = (10*rev) +rem;\\n\\n\\nError\\n\\nLine 9: Char 19: runtime error: signed integer overflow: 10 * 1210000000000000000 cannot be represented in type \\'long long\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:18:19"
                    },
                    {
                        "username": "Captainslate01",
                        "content": "My while loop is not exiting??\\na=0\\n        b=x\\n        z=1\\n        while b!=0:\\n            m=b%10\\n            a=a*10+m\\n            b=b//10\\n            print(b)"
                    },
                    {
                        "username": "Chernikc1",
                        "content": "lol my solution. Bad in test 11509 when i take error that 0 true but how??) If x > 0  it is false\\npublic bool IsPalindrome(int x) {\\n        if (x > 0)\\n        {\\n            int num = x;\\n            int rev = 0;\\n            while (x >= 1)\\n            {\\n                int r = x % 10;\\n                rev = rev * 10 + r;\\n                x = x / 10;\\n            }\\n\\n            if(num == rev)\\n            {\\n                return true;\\n            } \\n            return false;\\n        } \\n        return false;\\n    }\\n"
                    }
                ]
            },
            {
                "id": 1801030,
                "content": [
                    {
                        "username": "raghavbakshee",
                        "content": "Getting exception - WHY??\n\njava.lang.NumberFormatException: For input string: \"\"\n \nSmall part of Code Snippet - \n..\n..\n..\nString answer = \"\";\n        while(temp != 0){\n            res = res * 10 + temp % 10;\n            answer = answer + temp % 10;\n            temp = temp / 10;\n        }\n        if(res > Integer.MAX_VALUE || res < Integer.MIN_VALUE) return false;\n        if(Integer.parseInt(answer) == x) return true;\n        return false;"
                    },
                    {
                        "username": "2k20csbs22",
                        "content": " `JAVA CODE\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int sum=0,r,n;\\n        n =x;\\n        while(n>0){\\n            r = n%10;\\n            sum = (sum*10)+r;\\n            n = n/10;\\n        }\\n        if(x==sum)\\n            return true;\\n        else\\n            return false;\\n    }\\n}`"
                    },
                    {
                        "username": "rishabhdevbandhudas",
                        "content": "without converting into string ,, see my solution"
                    },
                    {
                        "username": "SouvikDas2002",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int rev=0;\\n        int n=x;\\n        int ld;\\n\\n        if(x<0)\\n        return false;\\n\\n        while(x>0){\\n            ld=x%10;\\n            rev=rev*10+ld;\\n            x=x/10;\\n        }\\n        if(rev==n){\\n            return 1;\\n        }\\n        return 0;\\n        \\n    }\\n};\\n\\nwhy this code give me this type error?\\n\\nLine 13: Char 20: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:22:20"
                    },
                    {
                        "username": "Casual_0101",
                        "content": "\\u30B3\\u30FC\\u30C9\\u826F\\u3044\\n"
                    },
                    {
                        "username": "samadhan_03",
                        "content": "Line 19: Char 5: error: non-void function does not return a value [-Werror,-Wreturn-type]\\n    }\\n    ^\\n1 error generated.\\n\\n\\nmy solution is correct but its shows the error\\n\\n"
                    },
                    {
                        "username": "aravindnethi1632",
                        "content": "Hey Everyone,\\n\\nI have used below code 11509/11510 testcase passed only one test case not passed can anyone please check it.\\n\\n`` strr=str(x)\\n  if (strr==strr[::-1]):\\n            return x\\n`` "
                    },
                    {
                        "username": "taiyaljitin",
                        "content": "can anyone tell me why is this error showing when i run\\n\\nlong long int rev = 0;\\n\\n..........\\n\\nrev = (10*rev) +rem;\\n\\n\\nError\\n\\nLine 9: Char 19: runtime error: signed integer overflow: 10 * 1210000000000000000 cannot be represented in type \\'long long\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:18:19"
                    },
                    {
                        "username": "Captainslate01",
                        "content": "My while loop is not exiting??\\na=0\\n        b=x\\n        z=1\\n        while b!=0:\\n            m=b%10\\n            a=a*10+m\\n            b=b//10\\n            print(b)"
                    },
                    {
                        "username": "Chernikc1",
                        "content": "lol my solution. Bad in test 11509 when i take error that 0 true but how??) If x > 0  it is false\\npublic bool IsPalindrome(int x) {\\n        if (x > 0)\\n        {\\n            int num = x;\\n            int rev = 0;\\n            while (x >= 1)\\n            {\\n                int r = x % 10;\\n                rev = rev * 10 + r;\\n                x = x / 10;\\n            }\\n\\n            if(num == rev)\\n            {\\n                return true;\\n            } \\n            return false;\\n        } \\n        return false;\\n    }\\n"
                    }
                ]
            },
            {
                "id": 1800344,
                "content": [
                    {
                        "username": "raghavbakshee",
                        "content": "Getting exception - WHY??\n\njava.lang.NumberFormatException: For input string: \"\"\n \nSmall part of Code Snippet - \n..\n..\n..\nString answer = \"\";\n        while(temp != 0){\n            res = res * 10 + temp % 10;\n            answer = answer + temp % 10;\n            temp = temp / 10;\n        }\n        if(res > Integer.MAX_VALUE || res < Integer.MIN_VALUE) return false;\n        if(Integer.parseInt(answer) == x) return true;\n        return false;"
                    },
                    {
                        "username": "2k20csbs22",
                        "content": " `JAVA CODE\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int sum=0,r,n;\\n        n =x;\\n        while(n>0){\\n            r = n%10;\\n            sum = (sum*10)+r;\\n            n = n/10;\\n        }\\n        if(x==sum)\\n            return true;\\n        else\\n            return false;\\n    }\\n}`"
                    },
                    {
                        "username": "rishabhdevbandhudas",
                        "content": "without converting into string ,, see my solution"
                    },
                    {
                        "username": "SouvikDas2002",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int rev=0;\\n        int n=x;\\n        int ld;\\n\\n        if(x<0)\\n        return false;\\n\\n        while(x>0){\\n            ld=x%10;\\n            rev=rev*10+ld;\\n            x=x/10;\\n        }\\n        if(rev==n){\\n            return 1;\\n        }\\n        return 0;\\n        \\n    }\\n};\\n\\nwhy this code give me this type error?\\n\\nLine 13: Char 20: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:22:20"
                    },
                    {
                        "username": "Casual_0101",
                        "content": "\\u30B3\\u30FC\\u30C9\\u826F\\u3044\\n"
                    },
                    {
                        "username": "samadhan_03",
                        "content": "Line 19: Char 5: error: non-void function does not return a value [-Werror,-Wreturn-type]\\n    }\\n    ^\\n1 error generated.\\n\\n\\nmy solution is correct but its shows the error\\n\\n"
                    },
                    {
                        "username": "aravindnethi1632",
                        "content": "Hey Everyone,\\n\\nI have used below code 11509/11510 testcase passed only one test case not passed can anyone please check it.\\n\\n`` strr=str(x)\\n  if (strr==strr[::-1]):\\n            return x\\n`` "
                    },
                    {
                        "username": "taiyaljitin",
                        "content": "can anyone tell me why is this error showing when i run\\n\\nlong long int rev = 0;\\n\\n..........\\n\\nrev = (10*rev) +rem;\\n\\n\\nError\\n\\nLine 9: Char 19: runtime error: signed integer overflow: 10 * 1210000000000000000 cannot be represented in type \\'long long\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:18:19"
                    },
                    {
                        "username": "Captainslate01",
                        "content": "My while loop is not exiting??\\na=0\\n        b=x\\n        z=1\\n        while b!=0:\\n            m=b%10\\n            a=a*10+m\\n            b=b//10\\n            print(b)"
                    },
                    {
                        "username": "Chernikc1",
                        "content": "lol my solution. Bad in test 11509 when i take error that 0 true but how??) If x > 0  it is false\\npublic bool IsPalindrome(int x) {\\n        if (x > 0)\\n        {\\n            int num = x;\\n            int rev = 0;\\n            while (x >= 1)\\n            {\\n                int r = x % 10;\\n                rev = rev * 10 + r;\\n                x = x / 10;\\n            }\\n\\n            if(num == rev)\\n            {\\n                return true;\\n            } \\n            return false;\\n        } \\n        return false;\\n    }\\n"
                    }
                ]
            },
            {
                "id": 1799247,
                "content": [
                    {
                        "username": "raghavbakshee",
                        "content": "Getting exception - WHY??\n\njava.lang.NumberFormatException: For input string: \"\"\n \nSmall part of Code Snippet - \n..\n..\n..\nString answer = \"\";\n        while(temp != 0){\n            res = res * 10 + temp % 10;\n            answer = answer + temp % 10;\n            temp = temp / 10;\n        }\n        if(res > Integer.MAX_VALUE || res < Integer.MIN_VALUE) return false;\n        if(Integer.parseInt(answer) == x) return true;\n        return false;"
                    },
                    {
                        "username": "2k20csbs22",
                        "content": " `JAVA CODE\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int sum=0,r,n;\\n        n =x;\\n        while(n>0){\\n            r = n%10;\\n            sum = (sum*10)+r;\\n            n = n/10;\\n        }\\n        if(x==sum)\\n            return true;\\n        else\\n            return false;\\n    }\\n}`"
                    },
                    {
                        "username": "rishabhdevbandhudas",
                        "content": "without converting into string ,, see my solution"
                    },
                    {
                        "username": "SouvikDas2002",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int rev=0;\\n        int n=x;\\n        int ld;\\n\\n        if(x<0)\\n        return false;\\n\\n        while(x>0){\\n            ld=x%10;\\n            rev=rev*10+ld;\\n            x=x/10;\\n        }\\n        if(rev==n){\\n            return 1;\\n        }\\n        return 0;\\n        \\n    }\\n};\\n\\nwhy this code give me this type error?\\n\\nLine 13: Char 20: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:22:20"
                    },
                    {
                        "username": "Casual_0101",
                        "content": "\\u30B3\\u30FC\\u30C9\\u826F\\u3044\\n"
                    },
                    {
                        "username": "samadhan_03",
                        "content": "Line 19: Char 5: error: non-void function does not return a value [-Werror,-Wreturn-type]\\n    }\\n    ^\\n1 error generated.\\n\\n\\nmy solution is correct but its shows the error\\n\\n"
                    },
                    {
                        "username": "aravindnethi1632",
                        "content": "Hey Everyone,\\n\\nI have used below code 11509/11510 testcase passed only one test case not passed can anyone please check it.\\n\\n`` strr=str(x)\\n  if (strr==strr[::-1]):\\n            return x\\n`` "
                    },
                    {
                        "username": "taiyaljitin",
                        "content": "can anyone tell me why is this error showing when i run\\n\\nlong long int rev = 0;\\n\\n..........\\n\\nrev = (10*rev) +rem;\\n\\n\\nError\\n\\nLine 9: Char 19: runtime error: signed integer overflow: 10 * 1210000000000000000 cannot be represented in type \\'long long\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:18:19"
                    },
                    {
                        "username": "Captainslate01",
                        "content": "My while loop is not exiting??\\na=0\\n        b=x\\n        z=1\\n        while b!=0:\\n            m=b%10\\n            a=a*10+m\\n            b=b//10\\n            print(b)"
                    },
                    {
                        "username": "Chernikc1",
                        "content": "lol my solution. Bad in test 11509 when i take error that 0 true but how??) If x > 0  it is false\\npublic bool IsPalindrome(int x) {\\n        if (x > 0)\\n        {\\n            int num = x;\\n            int rev = 0;\\n            while (x >= 1)\\n            {\\n                int r = x % 10;\\n                rev = rev * 10 + r;\\n                x = x / 10;\\n            }\\n\\n            if(num == rev)\\n            {\\n                return true;\\n            } \\n            return false;\\n        } \\n        return false;\\n    }\\n"
                    }
                ]
            },
            {
                "id": 1796467,
                "content": [
                    {
                        "username": "raghavbakshee",
                        "content": "Getting exception - WHY??\n\njava.lang.NumberFormatException: For input string: \"\"\n \nSmall part of Code Snippet - \n..\n..\n..\nString answer = \"\";\n        while(temp != 0){\n            res = res * 10 + temp % 10;\n            answer = answer + temp % 10;\n            temp = temp / 10;\n        }\n        if(res > Integer.MAX_VALUE || res < Integer.MIN_VALUE) return false;\n        if(Integer.parseInt(answer) == x) return true;\n        return false;"
                    },
                    {
                        "username": "2k20csbs22",
                        "content": " `JAVA CODE\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int sum=0,r,n;\\n        n =x;\\n        while(n>0){\\n            r = n%10;\\n            sum = (sum*10)+r;\\n            n = n/10;\\n        }\\n        if(x==sum)\\n            return true;\\n        else\\n            return false;\\n    }\\n}`"
                    },
                    {
                        "username": "rishabhdevbandhudas",
                        "content": "without converting into string ,, see my solution"
                    },
                    {
                        "username": "SouvikDas2002",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int rev=0;\\n        int n=x;\\n        int ld;\\n\\n        if(x<0)\\n        return false;\\n\\n        while(x>0){\\n            ld=x%10;\\n            rev=rev*10+ld;\\n            x=x/10;\\n        }\\n        if(rev==n){\\n            return 1;\\n        }\\n        return 0;\\n        \\n    }\\n};\\n\\nwhy this code give me this type error?\\n\\nLine 13: Char 20: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:22:20"
                    },
                    {
                        "username": "Casual_0101",
                        "content": "\\u30B3\\u30FC\\u30C9\\u826F\\u3044\\n"
                    },
                    {
                        "username": "samadhan_03",
                        "content": "Line 19: Char 5: error: non-void function does not return a value [-Werror,-Wreturn-type]\\n    }\\n    ^\\n1 error generated.\\n\\n\\nmy solution is correct but its shows the error\\n\\n"
                    },
                    {
                        "username": "aravindnethi1632",
                        "content": "Hey Everyone,\\n\\nI have used below code 11509/11510 testcase passed only one test case not passed can anyone please check it.\\n\\n`` strr=str(x)\\n  if (strr==strr[::-1]):\\n            return x\\n`` "
                    },
                    {
                        "username": "taiyaljitin",
                        "content": "can anyone tell me why is this error showing when i run\\n\\nlong long int rev = 0;\\n\\n..........\\n\\nrev = (10*rev) +rem;\\n\\n\\nError\\n\\nLine 9: Char 19: runtime error: signed integer overflow: 10 * 1210000000000000000 cannot be represented in type \\'long long\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:18:19"
                    },
                    {
                        "username": "Captainslate01",
                        "content": "My while loop is not exiting??\\na=0\\n        b=x\\n        z=1\\n        while b!=0:\\n            m=b%10\\n            a=a*10+m\\n            b=b//10\\n            print(b)"
                    },
                    {
                        "username": "Chernikc1",
                        "content": "lol my solution. Bad in test 11509 when i take error that 0 true but how??) If x > 0  it is false\\npublic bool IsPalindrome(int x) {\\n        if (x > 0)\\n        {\\n            int num = x;\\n            int rev = 0;\\n            while (x >= 1)\\n            {\\n                int r = x % 10;\\n                rev = rev * 10 + r;\\n                x = x / 10;\\n            }\\n\\n            if(num == rev)\\n            {\\n                return true;\\n            } \\n            return false;\\n        } \\n        return false;\\n    }\\n"
                    }
                ]
            },
            {
                "id": 1795623,
                "content": [
                    {
                        "username": "raghavbakshee",
                        "content": "Getting exception - WHY??\n\njava.lang.NumberFormatException: For input string: \"\"\n \nSmall part of Code Snippet - \n..\n..\n..\nString answer = \"\";\n        while(temp != 0){\n            res = res * 10 + temp % 10;\n            answer = answer + temp % 10;\n            temp = temp / 10;\n        }\n        if(res > Integer.MAX_VALUE || res < Integer.MIN_VALUE) return false;\n        if(Integer.parseInt(answer) == x) return true;\n        return false;"
                    },
                    {
                        "username": "2k20csbs22",
                        "content": " `JAVA CODE\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int sum=0,r,n;\\n        n =x;\\n        while(n>0){\\n            r = n%10;\\n            sum = (sum*10)+r;\\n            n = n/10;\\n        }\\n        if(x==sum)\\n            return true;\\n        else\\n            return false;\\n    }\\n}`"
                    },
                    {
                        "username": "rishabhdevbandhudas",
                        "content": "without converting into string ,, see my solution"
                    },
                    {
                        "username": "SouvikDas2002",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int rev=0;\\n        int n=x;\\n        int ld;\\n\\n        if(x<0)\\n        return false;\\n\\n        while(x>0){\\n            ld=x%10;\\n            rev=rev*10+ld;\\n            x=x/10;\\n        }\\n        if(rev==n){\\n            return 1;\\n        }\\n        return 0;\\n        \\n    }\\n};\\n\\nwhy this code give me this type error?\\n\\nLine 13: Char 20: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:22:20"
                    },
                    {
                        "username": "Casual_0101",
                        "content": "\\u30B3\\u30FC\\u30C9\\u826F\\u3044\\n"
                    },
                    {
                        "username": "samadhan_03",
                        "content": "Line 19: Char 5: error: non-void function does not return a value [-Werror,-Wreturn-type]\\n    }\\n    ^\\n1 error generated.\\n\\n\\nmy solution is correct but its shows the error\\n\\n"
                    },
                    {
                        "username": "aravindnethi1632",
                        "content": "Hey Everyone,\\n\\nI have used below code 11509/11510 testcase passed only one test case not passed can anyone please check it.\\n\\n`` strr=str(x)\\n  if (strr==strr[::-1]):\\n            return x\\n`` "
                    },
                    {
                        "username": "taiyaljitin",
                        "content": "can anyone tell me why is this error showing when i run\\n\\nlong long int rev = 0;\\n\\n..........\\n\\nrev = (10*rev) +rem;\\n\\n\\nError\\n\\nLine 9: Char 19: runtime error: signed integer overflow: 10 * 1210000000000000000 cannot be represented in type \\'long long\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:18:19"
                    },
                    {
                        "username": "Captainslate01",
                        "content": "My while loop is not exiting??\\na=0\\n        b=x\\n        z=1\\n        while b!=0:\\n            m=b%10\\n            a=a*10+m\\n            b=b//10\\n            print(b)"
                    },
                    {
                        "username": "Chernikc1",
                        "content": "lol my solution. Bad in test 11509 when i take error that 0 true but how??) If x > 0  it is false\\npublic bool IsPalindrome(int x) {\\n        if (x > 0)\\n        {\\n            int num = x;\\n            int rev = 0;\\n            while (x >= 1)\\n            {\\n                int r = x % 10;\\n                rev = rev * 10 + r;\\n                x = x / 10;\\n            }\\n\\n            if(num == rev)\\n            {\\n                return true;\\n            } \\n            return false;\\n        } \\n        return false;\\n    }\\n"
                    }
                ]
            },
            {
                "id": 1794129,
                "content": [
                    {
                        "username": "raghavbakshee",
                        "content": "Getting exception - WHY??\n\njava.lang.NumberFormatException: For input string: \"\"\n \nSmall part of Code Snippet - \n..\n..\n..\nString answer = \"\";\n        while(temp != 0){\n            res = res * 10 + temp % 10;\n            answer = answer + temp % 10;\n            temp = temp / 10;\n        }\n        if(res > Integer.MAX_VALUE || res < Integer.MIN_VALUE) return false;\n        if(Integer.parseInt(answer) == x) return true;\n        return false;"
                    },
                    {
                        "username": "2k20csbs22",
                        "content": " `JAVA CODE\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int sum=0,r,n;\\n        n =x;\\n        while(n>0){\\n            r = n%10;\\n            sum = (sum*10)+r;\\n            n = n/10;\\n        }\\n        if(x==sum)\\n            return true;\\n        else\\n            return false;\\n    }\\n}`"
                    },
                    {
                        "username": "rishabhdevbandhudas",
                        "content": "without converting into string ,, see my solution"
                    },
                    {
                        "username": "SouvikDas2002",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int rev=0;\\n        int n=x;\\n        int ld;\\n\\n        if(x<0)\\n        return false;\\n\\n        while(x>0){\\n            ld=x%10;\\n            rev=rev*10+ld;\\n            x=x/10;\\n        }\\n        if(rev==n){\\n            return 1;\\n        }\\n        return 0;\\n        \\n    }\\n};\\n\\nwhy this code give me this type error?\\n\\nLine 13: Char 20: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:22:20"
                    },
                    {
                        "username": "Casual_0101",
                        "content": "\\u30B3\\u30FC\\u30C9\\u826F\\u3044\\n"
                    },
                    {
                        "username": "samadhan_03",
                        "content": "Line 19: Char 5: error: non-void function does not return a value [-Werror,-Wreturn-type]\\n    }\\n    ^\\n1 error generated.\\n\\n\\nmy solution is correct but its shows the error\\n\\n"
                    },
                    {
                        "username": "aravindnethi1632",
                        "content": "Hey Everyone,\\n\\nI have used below code 11509/11510 testcase passed only one test case not passed can anyone please check it.\\n\\n`` strr=str(x)\\n  if (strr==strr[::-1]):\\n            return x\\n`` "
                    },
                    {
                        "username": "taiyaljitin",
                        "content": "can anyone tell me why is this error showing when i run\\n\\nlong long int rev = 0;\\n\\n..........\\n\\nrev = (10*rev) +rem;\\n\\n\\nError\\n\\nLine 9: Char 19: runtime error: signed integer overflow: 10 * 1210000000000000000 cannot be represented in type \\'long long\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:18:19"
                    },
                    {
                        "username": "Captainslate01",
                        "content": "My while loop is not exiting??\\na=0\\n        b=x\\n        z=1\\n        while b!=0:\\n            m=b%10\\n            a=a*10+m\\n            b=b//10\\n            print(b)"
                    },
                    {
                        "username": "Chernikc1",
                        "content": "lol my solution. Bad in test 11509 when i take error that 0 true but how??) If x > 0  it is false\\npublic bool IsPalindrome(int x) {\\n        if (x > 0)\\n        {\\n            int num = x;\\n            int rev = 0;\\n            while (x >= 1)\\n            {\\n                int r = x % 10;\\n                rev = rev * 10 + r;\\n                x = x / 10;\\n            }\\n\\n            if(num == rev)\\n            {\\n                return true;\\n            } \\n            return false;\\n        } \\n        return false;\\n    }\\n"
                    }
                ]
            },
            {
                "id": 1793838,
                "content": [
                    {
                        "username": "raghavbakshee",
                        "content": "Getting exception - WHY??\n\njava.lang.NumberFormatException: For input string: \"\"\n \nSmall part of Code Snippet - \n..\n..\n..\nString answer = \"\";\n        while(temp != 0){\n            res = res * 10 + temp % 10;\n            answer = answer + temp % 10;\n            temp = temp / 10;\n        }\n        if(res > Integer.MAX_VALUE || res < Integer.MIN_VALUE) return false;\n        if(Integer.parseInt(answer) == x) return true;\n        return false;"
                    },
                    {
                        "username": "2k20csbs22",
                        "content": " `JAVA CODE\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int sum=0,r,n;\\n        n =x;\\n        while(n>0){\\n            r = n%10;\\n            sum = (sum*10)+r;\\n            n = n/10;\\n        }\\n        if(x==sum)\\n            return true;\\n        else\\n            return false;\\n    }\\n}`"
                    },
                    {
                        "username": "rishabhdevbandhudas",
                        "content": "without converting into string ,, see my solution"
                    },
                    {
                        "username": "SouvikDas2002",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int rev=0;\\n        int n=x;\\n        int ld;\\n\\n        if(x<0)\\n        return false;\\n\\n        while(x>0){\\n            ld=x%10;\\n            rev=rev*10+ld;\\n            x=x/10;\\n        }\\n        if(rev==n){\\n            return 1;\\n        }\\n        return 0;\\n        \\n    }\\n};\\n\\nwhy this code give me this type error?\\n\\nLine 13: Char 20: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:22:20"
                    },
                    {
                        "username": "Casual_0101",
                        "content": "\\u30B3\\u30FC\\u30C9\\u826F\\u3044\\n"
                    },
                    {
                        "username": "samadhan_03",
                        "content": "Line 19: Char 5: error: non-void function does not return a value [-Werror,-Wreturn-type]\\n    }\\n    ^\\n1 error generated.\\n\\n\\nmy solution is correct but its shows the error\\n\\n"
                    },
                    {
                        "username": "aravindnethi1632",
                        "content": "Hey Everyone,\\n\\nI have used below code 11509/11510 testcase passed only one test case not passed can anyone please check it.\\n\\n`` strr=str(x)\\n  if (strr==strr[::-1]):\\n            return x\\n`` "
                    },
                    {
                        "username": "taiyaljitin",
                        "content": "can anyone tell me why is this error showing when i run\\n\\nlong long int rev = 0;\\n\\n..........\\n\\nrev = (10*rev) +rem;\\n\\n\\nError\\n\\nLine 9: Char 19: runtime error: signed integer overflow: 10 * 1210000000000000000 cannot be represented in type \\'long long\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:18:19"
                    },
                    {
                        "username": "Captainslate01",
                        "content": "My while loop is not exiting??\\na=0\\n        b=x\\n        z=1\\n        while b!=0:\\n            m=b%10\\n            a=a*10+m\\n            b=b//10\\n            print(b)"
                    },
                    {
                        "username": "Chernikc1",
                        "content": "lol my solution. Bad in test 11509 when i take error that 0 true but how??) If x > 0  it is false\\npublic bool IsPalindrome(int x) {\\n        if (x > 0)\\n        {\\n            int num = x;\\n            int rev = 0;\\n            while (x >= 1)\\n            {\\n                int r = x % 10;\\n                rev = rev * 10 + r;\\n                x = x / 10;\\n            }\\n\\n            if(num == rev)\\n            {\\n                return true;\\n            } \\n            return false;\\n        } \\n        return false;\\n    }\\n"
                    }
                ]
            },
            {
                "id": 1793608,
                "content": [
                    {
                        "username": "raghavbakshee",
                        "content": "Getting exception - WHY??\n\njava.lang.NumberFormatException: For input string: \"\"\n \nSmall part of Code Snippet - \n..\n..\n..\nString answer = \"\";\n        while(temp != 0){\n            res = res * 10 + temp % 10;\n            answer = answer + temp % 10;\n            temp = temp / 10;\n        }\n        if(res > Integer.MAX_VALUE || res < Integer.MIN_VALUE) return false;\n        if(Integer.parseInt(answer) == x) return true;\n        return false;"
                    },
                    {
                        "username": "2k20csbs22",
                        "content": " `JAVA CODE\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int sum=0,r,n;\\n        n =x;\\n        while(n>0){\\n            r = n%10;\\n            sum = (sum*10)+r;\\n            n = n/10;\\n        }\\n        if(x==sum)\\n            return true;\\n        else\\n            return false;\\n    }\\n}`"
                    },
                    {
                        "username": "rishabhdevbandhudas",
                        "content": "without converting into string ,, see my solution"
                    },
                    {
                        "username": "SouvikDas2002",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int rev=0;\\n        int n=x;\\n        int ld;\\n\\n        if(x<0)\\n        return false;\\n\\n        while(x>0){\\n            ld=x%10;\\n            rev=rev*10+ld;\\n            x=x/10;\\n        }\\n        if(rev==n){\\n            return 1;\\n        }\\n        return 0;\\n        \\n    }\\n};\\n\\nwhy this code give me this type error?\\n\\nLine 13: Char 20: runtime error: signed integer overflow: 998765432 * 10 cannot be represented in type \\'int\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:22:20"
                    },
                    {
                        "username": "Casual_0101",
                        "content": "\\u30B3\\u30FC\\u30C9\\u826F\\u3044\\n"
                    },
                    {
                        "username": "samadhan_03",
                        "content": "Line 19: Char 5: error: non-void function does not return a value [-Werror,-Wreturn-type]\\n    }\\n    ^\\n1 error generated.\\n\\n\\nmy solution is correct but its shows the error\\n\\n"
                    },
                    {
                        "username": "aravindnethi1632",
                        "content": "Hey Everyone,\\n\\nI have used below code 11509/11510 testcase passed only one test case not passed can anyone please check it.\\n\\n`` strr=str(x)\\n  if (strr==strr[::-1]):\\n            return x\\n`` "
                    },
                    {
                        "username": "taiyaljitin",
                        "content": "can anyone tell me why is this error showing when i run\\n\\nlong long int rev = 0;\\n\\n..........\\n\\nrev = (10*rev) +rem;\\n\\n\\nError\\n\\nLine 9: Char 19: runtime error: signed integer overflow: 10 * 1210000000000000000 cannot be represented in type \\'long long\\' (solution.cpp)\\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:18:19"
                    },
                    {
                        "username": "Captainslate01",
                        "content": "My while loop is not exiting??\\na=0\\n        b=x\\n        z=1\\n        while b!=0:\\n            m=b%10\\n            a=a*10+m\\n            b=b//10\\n            print(b)"
                    },
                    {
                        "username": "Chernikc1",
                        "content": "lol my solution. Bad in test 11509 when i take error that 0 true but how??) If x > 0  it is false\\npublic bool IsPalindrome(int x) {\\n        if (x > 0)\\n        {\\n            int num = x;\\n            int rev = 0;\\n            while (x >= 1)\\n            {\\n                int r = x % 10;\\n                rev = rev * 10 + r;\\n                x = x / 10;\\n            }\\n\\n            if(num == rev)\\n            {\\n                return true;\\n            } \\n            return false;\\n        } \\n        return false;\\n    }\\n"
                    }
                ]
            },
            {
                "id": 1790282,
                "content": [
                    {
                        "username": "Evil_123",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n       string s=to_string(x);\\n       int n=s.size();\\n       for(int i=0;i<(n/2);i++){\\n           if(s[i]!=s[n-(i+1)]){\\n              return false;\\n           }\\n       }\\n       return true;\\n    }\\n};"
                    },
                    {
                        "username": "kawsarlog",
                        "content": "This is my solution hope it is easy enough!\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        y = str(x)\\n        return str(x) == y[::-1]"
                    },
                    {
                        "username": "Vee__",
                        "content": "Solution in C++  \\n\\n`class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n\\n        string z = to_string(x);\\n        string y = to_string(x);\\n        reverse(y.begin(), y.end());\\n\\n        if(z == y){\\n            return true;\\n        }\\n\\n        return false;\\n    }\\n};`"
                    },
                    {
                        "username": "arpit1910",
                        "content": "\\ndoes any one suggest what wrong with this code\\nit gives error. on input = 121 \\n\\n\\n `your inline code...your inline code...\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n\\n        int num=0;\\n        while(x>0){\\n            int digit = x%10;\\n\\n            num = num*10+digit;\\n\\n            x = x/10;\\n        }\\n        if(num == x){\\n            return true;\\n        }\\n        return false;\\n    }\\n};\\n\\n`\\n"
                    },
                    {
                        "username": "gelehasan",
                        "content": "Easy solution using javascript\\n\\nvar isPalindrome = function(x) {\\n   let palindrom=\"\";\\n  let xString= x.toString();\\n\\n    for(let i=xString.length-1; i>=0; i--){\\n        // console.log(xString[i])\\n        palindrom +=xString[i];\\n    }\\n  \\n    if(palindrom === xString ){\\n        return true\\n    }else{\\n       return false\\n    }\\n    \\n    \\n    \\n    \\n    \\n};"
                    },
                    {
                        "username": "dilipkumar8117",
                        "content": "JAVA SOLUTION\\n\\npublic boolean isPalindrome(int x) {\\n        String s=Integer.toString(x);\\n        String res=\"\";\\n//reverse the string\\n        for(int i=s.length()-1;i>=0;i--){\\n            res=res+s.charAt(i);\\n        }\\n\\n        if(s.equals(res)){\\n            return true;\\n        }else{\\n            return false;\\n        }\\n    }"
                    },
                    {
                        "username": "nikhilgaba03",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        cin>>x;\\n        int m = 0;\\n        int dup =x;\\n        while(x!=0){\\n            int digit = x%10;\\n            m = (m*10)+digit;\\n            x = x/10;\\n        }\\n        if(dup==m){\\n            return 1;\\n        }else{\\n            return 0;\\n        }\\n    }\\n};\\n\\nIt is throwing run time error, kindly look into it what could be the reason for this"
                    },
                    {
                        "username": "Pan2125",
                        "content": "why this code is not working for input number 11??\\n\\nvar isPalindrome = function(x) {\\n    if(x<0 ||(x%10===0 && x!==0)){\\n        return false\\n    }\\n\\n    let reverseNum=0\\n    while(x=>reverseNum){\\n        reverseNum=reverseNum*10+x%10\\n        x=x/10\\n    }\\n\\n    return x===reverseNum || x===reverseNum/10\\n\\n};"
                    },
                    {
                        "username": "benipalmanpreet1207",
                        "content": "i don\\'t know. i have done code in php. for example:- input 11 or 121 is not working for the code. please tell me what i have done wrong.\\n"
                    },
                    {
                        "username": "benipalmanpreet1207",
                        "content": "# for the first case, my prgram is not working. so please help me . what i have done wrong.\\nclass Solution {\\n    function isPalindrome($x) {\\n        $reverse=0;\\n        $temp=$x;\\n        while($temp>0){\\n            $reminder=$temp%10;\\n            $reverse=$reverse*10+$reminder;\\n            $temp=$temp/10;\\n        }\\n        return $reverse==$x;\\n    }\\n}"
                    },
                    {
                        "username": "Pan2125",
                        "content": "u should change the reminder to reminder=temp%10....\\notherwise your solution will add temp to reminder"
                    },
                    {
                        "username": "tushargola958",
                        "content": "test case 1 is showing error please help \\n\\n\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        \\n        int rem = 0 ;\\n        while(x>0 ){\\n            rem = rem*10 + x%10;\\n           x = x/10;\\n}\\n        if(rem==x){\\nreturn true;\\n        }\\n        else{\\n           return false;\\n        }\\n    }\\n}\\n\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1787932,
                "content": [
                    {
                        "username": "Evil_123",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n       string s=to_string(x);\\n       int n=s.size();\\n       for(int i=0;i<(n/2);i++){\\n           if(s[i]!=s[n-(i+1)]){\\n              return false;\\n           }\\n       }\\n       return true;\\n    }\\n};"
                    },
                    {
                        "username": "kawsarlog",
                        "content": "This is my solution hope it is easy enough!\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        y = str(x)\\n        return str(x) == y[::-1]"
                    },
                    {
                        "username": "Vee__",
                        "content": "Solution in C++  \\n\\n`class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n\\n        string z = to_string(x);\\n        string y = to_string(x);\\n        reverse(y.begin(), y.end());\\n\\n        if(z == y){\\n            return true;\\n        }\\n\\n        return false;\\n    }\\n};`"
                    },
                    {
                        "username": "arpit1910",
                        "content": "\\ndoes any one suggest what wrong with this code\\nit gives error. on input = 121 \\n\\n\\n `your inline code...your inline code...\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n\\n        int num=0;\\n        while(x>0){\\n            int digit = x%10;\\n\\n            num = num*10+digit;\\n\\n            x = x/10;\\n        }\\n        if(num == x){\\n            return true;\\n        }\\n        return false;\\n    }\\n};\\n\\n`\\n"
                    },
                    {
                        "username": "gelehasan",
                        "content": "Easy solution using javascript\\n\\nvar isPalindrome = function(x) {\\n   let palindrom=\"\";\\n  let xString= x.toString();\\n\\n    for(let i=xString.length-1; i>=0; i--){\\n        // console.log(xString[i])\\n        palindrom +=xString[i];\\n    }\\n  \\n    if(palindrom === xString ){\\n        return true\\n    }else{\\n       return false\\n    }\\n    \\n    \\n    \\n    \\n    \\n};"
                    },
                    {
                        "username": "dilipkumar8117",
                        "content": "JAVA SOLUTION\\n\\npublic boolean isPalindrome(int x) {\\n        String s=Integer.toString(x);\\n        String res=\"\";\\n//reverse the string\\n        for(int i=s.length()-1;i>=0;i--){\\n            res=res+s.charAt(i);\\n        }\\n\\n        if(s.equals(res)){\\n            return true;\\n        }else{\\n            return false;\\n        }\\n    }"
                    },
                    {
                        "username": "nikhilgaba03",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        cin>>x;\\n        int m = 0;\\n        int dup =x;\\n        while(x!=0){\\n            int digit = x%10;\\n            m = (m*10)+digit;\\n            x = x/10;\\n        }\\n        if(dup==m){\\n            return 1;\\n        }else{\\n            return 0;\\n        }\\n    }\\n};\\n\\nIt is throwing run time error, kindly look into it what could be the reason for this"
                    },
                    {
                        "username": "Pan2125",
                        "content": "why this code is not working for input number 11??\\n\\nvar isPalindrome = function(x) {\\n    if(x<0 ||(x%10===0 && x!==0)){\\n        return false\\n    }\\n\\n    let reverseNum=0\\n    while(x=>reverseNum){\\n        reverseNum=reverseNum*10+x%10\\n        x=x/10\\n    }\\n\\n    return x===reverseNum || x===reverseNum/10\\n\\n};"
                    },
                    {
                        "username": "benipalmanpreet1207",
                        "content": "i don\\'t know. i have done code in php. for example:- input 11 or 121 is not working for the code. please tell me what i have done wrong.\\n"
                    },
                    {
                        "username": "benipalmanpreet1207",
                        "content": "# for the first case, my prgram is not working. so please help me . what i have done wrong.\\nclass Solution {\\n    function isPalindrome($x) {\\n        $reverse=0;\\n        $temp=$x;\\n        while($temp>0){\\n            $reminder=$temp%10;\\n            $reverse=$reverse*10+$reminder;\\n            $temp=$temp/10;\\n        }\\n        return $reverse==$x;\\n    }\\n}"
                    },
                    {
                        "username": "Pan2125",
                        "content": "u should change the reminder to reminder=temp%10....\\notherwise your solution will add temp to reminder"
                    },
                    {
                        "username": "tushargola958",
                        "content": "test case 1 is showing error please help \\n\\n\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        \\n        int rem = 0 ;\\n        while(x>0 ){\\n            rem = rem*10 + x%10;\\n           x = x/10;\\n}\\n        if(rem==x){\\nreturn true;\\n        }\\n        else{\\n           return false;\\n        }\\n    }\\n}\\n\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1787910,
                "content": [
                    {
                        "username": "Evil_123",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n       string s=to_string(x);\\n       int n=s.size();\\n       for(int i=0;i<(n/2);i++){\\n           if(s[i]!=s[n-(i+1)]){\\n              return false;\\n           }\\n       }\\n       return true;\\n    }\\n};"
                    },
                    {
                        "username": "kawsarlog",
                        "content": "This is my solution hope it is easy enough!\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        y = str(x)\\n        return str(x) == y[::-1]"
                    },
                    {
                        "username": "Vee__",
                        "content": "Solution in C++  \\n\\n`class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n\\n        string z = to_string(x);\\n        string y = to_string(x);\\n        reverse(y.begin(), y.end());\\n\\n        if(z == y){\\n            return true;\\n        }\\n\\n        return false;\\n    }\\n};`"
                    },
                    {
                        "username": "arpit1910",
                        "content": "\\ndoes any one suggest what wrong with this code\\nit gives error. on input = 121 \\n\\n\\n `your inline code...your inline code...\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n\\n        int num=0;\\n        while(x>0){\\n            int digit = x%10;\\n\\n            num = num*10+digit;\\n\\n            x = x/10;\\n        }\\n        if(num == x){\\n            return true;\\n        }\\n        return false;\\n    }\\n};\\n\\n`\\n"
                    },
                    {
                        "username": "gelehasan",
                        "content": "Easy solution using javascript\\n\\nvar isPalindrome = function(x) {\\n   let palindrom=\"\";\\n  let xString= x.toString();\\n\\n    for(let i=xString.length-1; i>=0; i--){\\n        // console.log(xString[i])\\n        palindrom +=xString[i];\\n    }\\n  \\n    if(palindrom === xString ){\\n        return true\\n    }else{\\n       return false\\n    }\\n    \\n    \\n    \\n    \\n    \\n};"
                    },
                    {
                        "username": "dilipkumar8117",
                        "content": "JAVA SOLUTION\\n\\npublic boolean isPalindrome(int x) {\\n        String s=Integer.toString(x);\\n        String res=\"\";\\n//reverse the string\\n        for(int i=s.length()-1;i>=0;i--){\\n            res=res+s.charAt(i);\\n        }\\n\\n        if(s.equals(res)){\\n            return true;\\n        }else{\\n            return false;\\n        }\\n    }"
                    },
                    {
                        "username": "nikhilgaba03",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        cin>>x;\\n        int m = 0;\\n        int dup =x;\\n        while(x!=0){\\n            int digit = x%10;\\n            m = (m*10)+digit;\\n            x = x/10;\\n        }\\n        if(dup==m){\\n            return 1;\\n        }else{\\n            return 0;\\n        }\\n    }\\n};\\n\\nIt is throwing run time error, kindly look into it what could be the reason for this"
                    },
                    {
                        "username": "Pan2125",
                        "content": "why this code is not working for input number 11??\\n\\nvar isPalindrome = function(x) {\\n    if(x<0 ||(x%10===0 && x!==0)){\\n        return false\\n    }\\n\\n    let reverseNum=0\\n    while(x=>reverseNum){\\n        reverseNum=reverseNum*10+x%10\\n        x=x/10\\n    }\\n\\n    return x===reverseNum || x===reverseNum/10\\n\\n};"
                    },
                    {
                        "username": "benipalmanpreet1207",
                        "content": "i don\\'t know. i have done code in php. for example:- input 11 or 121 is not working for the code. please tell me what i have done wrong.\\n"
                    },
                    {
                        "username": "benipalmanpreet1207",
                        "content": "# for the first case, my prgram is not working. so please help me . what i have done wrong.\\nclass Solution {\\n    function isPalindrome($x) {\\n        $reverse=0;\\n        $temp=$x;\\n        while($temp>0){\\n            $reminder=$temp%10;\\n            $reverse=$reverse*10+$reminder;\\n            $temp=$temp/10;\\n        }\\n        return $reverse==$x;\\n    }\\n}"
                    },
                    {
                        "username": "Pan2125",
                        "content": "u should change the reminder to reminder=temp%10....\\notherwise your solution will add temp to reminder"
                    },
                    {
                        "username": "tushargola958",
                        "content": "test case 1 is showing error please help \\n\\n\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        \\n        int rem = 0 ;\\n        while(x>0 ){\\n            rem = rem*10 + x%10;\\n           x = x/10;\\n}\\n        if(rem==x){\\nreturn true;\\n        }\\n        else{\\n           return false;\\n        }\\n    }\\n}\\n\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1786888,
                "content": [
                    {
                        "username": "Evil_123",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n       string s=to_string(x);\\n       int n=s.size();\\n       for(int i=0;i<(n/2);i++){\\n           if(s[i]!=s[n-(i+1)]){\\n              return false;\\n           }\\n       }\\n       return true;\\n    }\\n};"
                    },
                    {
                        "username": "kawsarlog",
                        "content": "This is my solution hope it is easy enough!\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        y = str(x)\\n        return str(x) == y[::-1]"
                    },
                    {
                        "username": "Vee__",
                        "content": "Solution in C++  \\n\\n`class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n\\n        string z = to_string(x);\\n        string y = to_string(x);\\n        reverse(y.begin(), y.end());\\n\\n        if(z == y){\\n            return true;\\n        }\\n\\n        return false;\\n    }\\n};`"
                    },
                    {
                        "username": "arpit1910",
                        "content": "\\ndoes any one suggest what wrong with this code\\nit gives error. on input = 121 \\n\\n\\n `your inline code...your inline code...\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n\\n        int num=0;\\n        while(x>0){\\n            int digit = x%10;\\n\\n            num = num*10+digit;\\n\\n            x = x/10;\\n        }\\n        if(num == x){\\n            return true;\\n        }\\n        return false;\\n    }\\n};\\n\\n`\\n"
                    },
                    {
                        "username": "gelehasan",
                        "content": "Easy solution using javascript\\n\\nvar isPalindrome = function(x) {\\n   let palindrom=\"\";\\n  let xString= x.toString();\\n\\n    for(let i=xString.length-1; i>=0; i--){\\n        // console.log(xString[i])\\n        palindrom +=xString[i];\\n    }\\n  \\n    if(palindrom === xString ){\\n        return true\\n    }else{\\n       return false\\n    }\\n    \\n    \\n    \\n    \\n    \\n};"
                    },
                    {
                        "username": "dilipkumar8117",
                        "content": "JAVA SOLUTION\\n\\npublic boolean isPalindrome(int x) {\\n        String s=Integer.toString(x);\\n        String res=\"\";\\n//reverse the string\\n        for(int i=s.length()-1;i>=0;i--){\\n            res=res+s.charAt(i);\\n        }\\n\\n        if(s.equals(res)){\\n            return true;\\n        }else{\\n            return false;\\n        }\\n    }"
                    },
                    {
                        "username": "nikhilgaba03",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        cin>>x;\\n        int m = 0;\\n        int dup =x;\\n        while(x!=0){\\n            int digit = x%10;\\n            m = (m*10)+digit;\\n            x = x/10;\\n        }\\n        if(dup==m){\\n            return 1;\\n        }else{\\n            return 0;\\n        }\\n    }\\n};\\n\\nIt is throwing run time error, kindly look into it what could be the reason for this"
                    },
                    {
                        "username": "Pan2125",
                        "content": "why this code is not working for input number 11??\\n\\nvar isPalindrome = function(x) {\\n    if(x<0 ||(x%10===0 && x!==0)){\\n        return false\\n    }\\n\\n    let reverseNum=0\\n    while(x=>reverseNum){\\n        reverseNum=reverseNum*10+x%10\\n        x=x/10\\n    }\\n\\n    return x===reverseNum || x===reverseNum/10\\n\\n};"
                    },
                    {
                        "username": "benipalmanpreet1207",
                        "content": "i don\\'t know. i have done code in php. for example:- input 11 or 121 is not working for the code. please tell me what i have done wrong.\\n"
                    },
                    {
                        "username": "benipalmanpreet1207",
                        "content": "# for the first case, my prgram is not working. so please help me . what i have done wrong.\\nclass Solution {\\n    function isPalindrome($x) {\\n        $reverse=0;\\n        $temp=$x;\\n        while($temp>0){\\n            $reminder=$temp%10;\\n            $reverse=$reverse*10+$reminder;\\n            $temp=$temp/10;\\n        }\\n        return $reverse==$x;\\n    }\\n}"
                    },
                    {
                        "username": "Pan2125",
                        "content": "u should change the reminder to reminder=temp%10....\\notherwise your solution will add temp to reminder"
                    },
                    {
                        "username": "tushargola958",
                        "content": "test case 1 is showing error please help \\n\\n\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        \\n        int rem = 0 ;\\n        while(x>0 ){\\n            rem = rem*10 + x%10;\\n           x = x/10;\\n}\\n        if(rem==x){\\nreturn true;\\n        }\\n        else{\\n           return false;\\n        }\\n    }\\n}\\n\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1786082,
                "content": [
                    {
                        "username": "Evil_123",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n       string s=to_string(x);\\n       int n=s.size();\\n       for(int i=0;i<(n/2);i++){\\n           if(s[i]!=s[n-(i+1)]){\\n              return false;\\n           }\\n       }\\n       return true;\\n    }\\n};"
                    },
                    {
                        "username": "kawsarlog",
                        "content": "This is my solution hope it is easy enough!\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        y = str(x)\\n        return str(x) == y[::-1]"
                    },
                    {
                        "username": "Vee__",
                        "content": "Solution in C++  \\n\\n`class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n\\n        string z = to_string(x);\\n        string y = to_string(x);\\n        reverse(y.begin(), y.end());\\n\\n        if(z == y){\\n            return true;\\n        }\\n\\n        return false;\\n    }\\n};`"
                    },
                    {
                        "username": "arpit1910",
                        "content": "\\ndoes any one suggest what wrong with this code\\nit gives error. on input = 121 \\n\\n\\n `your inline code...your inline code...\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n\\n        int num=0;\\n        while(x>0){\\n            int digit = x%10;\\n\\n            num = num*10+digit;\\n\\n            x = x/10;\\n        }\\n        if(num == x){\\n            return true;\\n        }\\n        return false;\\n    }\\n};\\n\\n`\\n"
                    },
                    {
                        "username": "gelehasan",
                        "content": "Easy solution using javascript\\n\\nvar isPalindrome = function(x) {\\n   let palindrom=\"\";\\n  let xString= x.toString();\\n\\n    for(let i=xString.length-1; i>=0; i--){\\n        // console.log(xString[i])\\n        palindrom +=xString[i];\\n    }\\n  \\n    if(palindrom === xString ){\\n        return true\\n    }else{\\n       return false\\n    }\\n    \\n    \\n    \\n    \\n    \\n};"
                    },
                    {
                        "username": "dilipkumar8117",
                        "content": "JAVA SOLUTION\\n\\npublic boolean isPalindrome(int x) {\\n        String s=Integer.toString(x);\\n        String res=\"\";\\n//reverse the string\\n        for(int i=s.length()-1;i>=0;i--){\\n            res=res+s.charAt(i);\\n        }\\n\\n        if(s.equals(res)){\\n            return true;\\n        }else{\\n            return false;\\n        }\\n    }"
                    },
                    {
                        "username": "nikhilgaba03",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        cin>>x;\\n        int m = 0;\\n        int dup =x;\\n        while(x!=0){\\n            int digit = x%10;\\n            m = (m*10)+digit;\\n            x = x/10;\\n        }\\n        if(dup==m){\\n            return 1;\\n        }else{\\n            return 0;\\n        }\\n    }\\n};\\n\\nIt is throwing run time error, kindly look into it what could be the reason for this"
                    },
                    {
                        "username": "Pan2125",
                        "content": "why this code is not working for input number 11??\\n\\nvar isPalindrome = function(x) {\\n    if(x<0 ||(x%10===0 && x!==0)){\\n        return false\\n    }\\n\\n    let reverseNum=0\\n    while(x=>reverseNum){\\n        reverseNum=reverseNum*10+x%10\\n        x=x/10\\n    }\\n\\n    return x===reverseNum || x===reverseNum/10\\n\\n};"
                    },
                    {
                        "username": "benipalmanpreet1207",
                        "content": "i don\\'t know. i have done code in php. for example:- input 11 or 121 is not working for the code. please tell me what i have done wrong.\\n"
                    },
                    {
                        "username": "benipalmanpreet1207",
                        "content": "# for the first case, my prgram is not working. so please help me . what i have done wrong.\\nclass Solution {\\n    function isPalindrome($x) {\\n        $reverse=0;\\n        $temp=$x;\\n        while($temp>0){\\n            $reminder=$temp%10;\\n            $reverse=$reverse*10+$reminder;\\n            $temp=$temp/10;\\n        }\\n        return $reverse==$x;\\n    }\\n}"
                    },
                    {
                        "username": "Pan2125",
                        "content": "u should change the reminder to reminder=temp%10....\\notherwise your solution will add temp to reminder"
                    },
                    {
                        "username": "tushargola958",
                        "content": "test case 1 is showing error please help \\n\\n\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        \\n        int rem = 0 ;\\n        while(x>0 ){\\n            rem = rem*10 + x%10;\\n           x = x/10;\\n}\\n        if(rem==x){\\nreturn true;\\n        }\\n        else{\\n           return false;\\n        }\\n    }\\n}\\n\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1782337,
                "content": [
                    {
                        "username": "Evil_123",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n       string s=to_string(x);\\n       int n=s.size();\\n       for(int i=0;i<(n/2);i++){\\n           if(s[i]!=s[n-(i+1)]){\\n              return false;\\n           }\\n       }\\n       return true;\\n    }\\n};"
                    },
                    {
                        "username": "kawsarlog",
                        "content": "This is my solution hope it is easy enough!\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        y = str(x)\\n        return str(x) == y[::-1]"
                    },
                    {
                        "username": "Vee__",
                        "content": "Solution in C++  \\n\\n`class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n\\n        string z = to_string(x);\\n        string y = to_string(x);\\n        reverse(y.begin(), y.end());\\n\\n        if(z == y){\\n            return true;\\n        }\\n\\n        return false;\\n    }\\n};`"
                    },
                    {
                        "username": "arpit1910",
                        "content": "\\ndoes any one suggest what wrong with this code\\nit gives error. on input = 121 \\n\\n\\n `your inline code...your inline code...\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n\\n        int num=0;\\n        while(x>0){\\n            int digit = x%10;\\n\\n            num = num*10+digit;\\n\\n            x = x/10;\\n        }\\n        if(num == x){\\n            return true;\\n        }\\n        return false;\\n    }\\n};\\n\\n`\\n"
                    },
                    {
                        "username": "gelehasan",
                        "content": "Easy solution using javascript\\n\\nvar isPalindrome = function(x) {\\n   let palindrom=\"\";\\n  let xString= x.toString();\\n\\n    for(let i=xString.length-1; i>=0; i--){\\n        // console.log(xString[i])\\n        palindrom +=xString[i];\\n    }\\n  \\n    if(palindrom === xString ){\\n        return true\\n    }else{\\n       return false\\n    }\\n    \\n    \\n    \\n    \\n    \\n};"
                    },
                    {
                        "username": "dilipkumar8117",
                        "content": "JAVA SOLUTION\\n\\npublic boolean isPalindrome(int x) {\\n        String s=Integer.toString(x);\\n        String res=\"\";\\n//reverse the string\\n        for(int i=s.length()-1;i>=0;i--){\\n            res=res+s.charAt(i);\\n        }\\n\\n        if(s.equals(res)){\\n            return true;\\n        }else{\\n            return false;\\n        }\\n    }"
                    },
                    {
                        "username": "nikhilgaba03",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        cin>>x;\\n        int m = 0;\\n        int dup =x;\\n        while(x!=0){\\n            int digit = x%10;\\n            m = (m*10)+digit;\\n            x = x/10;\\n        }\\n        if(dup==m){\\n            return 1;\\n        }else{\\n            return 0;\\n        }\\n    }\\n};\\n\\nIt is throwing run time error, kindly look into it what could be the reason for this"
                    },
                    {
                        "username": "Pan2125",
                        "content": "why this code is not working for input number 11??\\n\\nvar isPalindrome = function(x) {\\n    if(x<0 ||(x%10===0 && x!==0)){\\n        return false\\n    }\\n\\n    let reverseNum=0\\n    while(x=>reverseNum){\\n        reverseNum=reverseNum*10+x%10\\n        x=x/10\\n    }\\n\\n    return x===reverseNum || x===reverseNum/10\\n\\n};"
                    },
                    {
                        "username": "benipalmanpreet1207",
                        "content": "i don\\'t know. i have done code in php. for example:- input 11 or 121 is not working for the code. please tell me what i have done wrong.\\n"
                    },
                    {
                        "username": "benipalmanpreet1207",
                        "content": "# for the first case, my prgram is not working. so please help me . what i have done wrong.\\nclass Solution {\\n    function isPalindrome($x) {\\n        $reverse=0;\\n        $temp=$x;\\n        while($temp>0){\\n            $reminder=$temp%10;\\n            $reverse=$reverse*10+$reminder;\\n            $temp=$temp/10;\\n        }\\n        return $reverse==$x;\\n    }\\n}"
                    },
                    {
                        "username": "Pan2125",
                        "content": "u should change the reminder to reminder=temp%10....\\notherwise your solution will add temp to reminder"
                    },
                    {
                        "username": "tushargola958",
                        "content": "test case 1 is showing error please help \\n\\n\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        \\n        int rem = 0 ;\\n        while(x>0 ){\\n            rem = rem*10 + x%10;\\n           x = x/10;\\n}\\n        if(rem==x){\\nreturn true;\\n        }\\n        else{\\n           return false;\\n        }\\n    }\\n}\\n\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1782218,
                "content": [
                    {
                        "username": "Evil_123",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n       string s=to_string(x);\\n       int n=s.size();\\n       for(int i=0;i<(n/2);i++){\\n           if(s[i]!=s[n-(i+1)]){\\n              return false;\\n           }\\n       }\\n       return true;\\n    }\\n};"
                    },
                    {
                        "username": "kawsarlog",
                        "content": "This is my solution hope it is easy enough!\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        y = str(x)\\n        return str(x) == y[::-1]"
                    },
                    {
                        "username": "Vee__",
                        "content": "Solution in C++  \\n\\n`class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n\\n        string z = to_string(x);\\n        string y = to_string(x);\\n        reverse(y.begin(), y.end());\\n\\n        if(z == y){\\n            return true;\\n        }\\n\\n        return false;\\n    }\\n};`"
                    },
                    {
                        "username": "arpit1910",
                        "content": "\\ndoes any one suggest what wrong with this code\\nit gives error. on input = 121 \\n\\n\\n `your inline code...your inline code...\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n\\n        int num=0;\\n        while(x>0){\\n            int digit = x%10;\\n\\n            num = num*10+digit;\\n\\n            x = x/10;\\n        }\\n        if(num == x){\\n            return true;\\n        }\\n        return false;\\n    }\\n};\\n\\n`\\n"
                    },
                    {
                        "username": "gelehasan",
                        "content": "Easy solution using javascript\\n\\nvar isPalindrome = function(x) {\\n   let palindrom=\"\";\\n  let xString= x.toString();\\n\\n    for(let i=xString.length-1; i>=0; i--){\\n        // console.log(xString[i])\\n        palindrom +=xString[i];\\n    }\\n  \\n    if(palindrom === xString ){\\n        return true\\n    }else{\\n       return false\\n    }\\n    \\n    \\n    \\n    \\n    \\n};"
                    },
                    {
                        "username": "dilipkumar8117",
                        "content": "JAVA SOLUTION\\n\\npublic boolean isPalindrome(int x) {\\n        String s=Integer.toString(x);\\n        String res=\"\";\\n//reverse the string\\n        for(int i=s.length()-1;i>=0;i--){\\n            res=res+s.charAt(i);\\n        }\\n\\n        if(s.equals(res)){\\n            return true;\\n        }else{\\n            return false;\\n        }\\n    }"
                    },
                    {
                        "username": "nikhilgaba03",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        cin>>x;\\n        int m = 0;\\n        int dup =x;\\n        while(x!=0){\\n            int digit = x%10;\\n            m = (m*10)+digit;\\n            x = x/10;\\n        }\\n        if(dup==m){\\n            return 1;\\n        }else{\\n            return 0;\\n        }\\n    }\\n};\\n\\nIt is throwing run time error, kindly look into it what could be the reason for this"
                    },
                    {
                        "username": "Pan2125",
                        "content": "why this code is not working for input number 11??\\n\\nvar isPalindrome = function(x) {\\n    if(x<0 ||(x%10===0 && x!==0)){\\n        return false\\n    }\\n\\n    let reverseNum=0\\n    while(x=>reverseNum){\\n        reverseNum=reverseNum*10+x%10\\n        x=x/10\\n    }\\n\\n    return x===reverseNum || x===reverseNum/10\\n\\n};"
                    },
                    {
                        "username": "benipalmanpreet1207",
                        "content": "i don\\'t know. i have done code in php. for example:- input 11 or 121 is not working for the code. please tell me what i have done wrong.\\n"
                    },
                    {
                        "username": "benipalmanpreet1207",
                        "content": "# for the first case, my prgram is not working. so please help me . what i have done wrong.\\nclass Solution {\\n    function isPalindrome($x) {\\n        $reverse=0;\\n        $temp=$x;\\n        while($temp>0){\\n            $reminder=$temp%10;\\n            $reverse=$reverse*10+$reminder;\\n            $temp=$temp/10;\\n        }\\n        return $reverse==$x;\\n    }\\n}"
                    },
                    {
                        "username": "Pan2125",
                        "content": "u should change the reminder to reminder=temp%10....\\notherwise your solution will add temp to reminder"
                    },
                    {
                        "username": "tushargola958",
                        "content": "test case 1 is showing error please help \\n\\n\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        \\n        int rem = 0 ;\\n        while(x>0 ){\\n            rem = rem*10 + x%10;\\n           x = x/10;\\n}\\n        if(rem==x){\\nreturn true;\\n        }\\n        else{\\n           return false;\\n        }\\n    }\\n}\\n\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1777916,
                "content": [
                    {
                        "username": "Evil_123",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n       string s=to_string(x);\\n       int n=s.size();\\n       for(int i=0;i<(n/2);i++){\\n           if(s[i]!=s[n-(i+1)]){\\n              return false;\\n           }\\n       }\\n       return true;\\n    }\\n};"
                    },
                    {
                        "username": "kawsarlog",
                        "content": "This is my solution hope it is easy enough!\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        y = str(x)\\n        return str(x) == y[::-1]"
                    },
                    {
                        "username": "Vee__",
                        "content": "Solution in C++  \\n\\n`class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n\\n        string z = to_string(x);\\n        string y = to_string(x);\\n        reverse(y.begin(), y.end());\\n\\n        if(z == y){\\n            return true;\\n        }\\n\\n        return false;\\n    }\\n};`"
                    },
                    {
                        "username": "arpit1910",
                        "content": "\\ndoes any one suggest what wrong with this code\\nit gives error. on input = 121 \\n\\n\\n `your inline code...your inline code...\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n\\n        int num=0;\\n        while(x>0){\\n            int digit = x%10;\\n\\n            num = num*10+digit;\\n\\n            x = x/10;\\n        }\\n        if(num == x){\\n            return true;\\n        }\\n        return false;\\n    }\\n};\\n\\n`\\n"
                    },
                    {
                        "username": "gelehasan",
                        "content": "Easy solution using javascript\\n\\nvar isPalindrome = function(x) {\\n   let palindrom=\"\";\\n  let xString= x.toString();\\n\\n    for(let i=xString.length-1; i>=0; i--){\\n        // console.log(xString[i])\\n        palindrom +=xString[i];\\n    }\\n  \\n    if(palindrom === xString ){\\n        return true\\n    }else{\\n       return false\\n    }\\n    \\n    \\n    \\n    \\n    \\n};"
                    },
                    {
                        "username": "dilipkumar8117",
                        "content": "JAVA SOLUTION\\n\\npublic boolean isPalindrome(int x) {\\n        String s=Integer.toString(x);\\n        String res=\"\";\\n//reverse the string\\n        for(int i=s.length()-1;i>=0;i--){\\n            res=res+s.charAt(i);\\n        }\\n\\n        if(s.equals(res)){\\n            return true;\\n        }else{\\n            return false;\\n        }\\n    }"
                    },
                    {
                        "username": "nikhilgaba03",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        cin>>x;\\n        int m = 0;\\n        int dup =x;\\n        while(x!=0){\\n            int digit = x%10;\\n            m = (m*10)+digit;\\n            x = x/10;\\n        }\\n        if(dup==m){\\n            return 1;\\n        }else{\\n            return 0;\\n        }\\n    }\\n};\\n\\nIt is throwing run time error, kindly look into it what could be the reason for this"
                    },
                    {
                        "username": "Pan2125",
                        "content": "why this code is not working for input number 11??\\n\\nvar isPalindrome = function(x) {\\n    if(x<0 ||(x%10===0 && x!==0)){\\n        return false\\n    }\\n\\n    let reverseNum=0\\n    while(x=>reverseNum){\\n        reverseNum=reverseNum*10+x%10\\n        x=x/10\\n    }\\n\\n    return x===reverseNum || x===reverseNum/10\\n\\n};"
                    },
                    {
                        "username": "benipalmanpreet1207",
                        "content": "i don\\'t know. i have done code in php. for example:- input 11 or 121 is not working for the code. please tell me what i have done wrong.\\n"
                    },
                    {
                        "username": "benipalmanpreet1207",
                        "content": "# for the first case, my prgram is not working. so please help me . what i have done wrong.\\nclass Solution {\\n    function isPalindrome($x) {\\n        $reverse=0;\\n        $temp=$x;\\n        while($temp>0){\\n            $reminder=$temp%10;\\n            $reverse=$reverse*10+$reminder;\\n            $temp=$temp/10;\\n        }\\n        return $reverse==$x;\\n    }\\n}"
                    },
                    {
                        "username": "Pan2125",
                        "content": "u should change the reminder to reminder=temp%10....\\notherwise your solution will add temp to reminder"
                    },
                    {
                        "username": "tushargola958",
                        "content": "test case 1 is showing error please help \\n\\n\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        \\n        int rem = 0 ;\\n        while(x>0 ){\\n            rem = rem*10 + x%10;\\n           x = x/10;\\n}\\n        if(rem==x){\\nreturn true;\\n        }\\n        else{\\n           return false;\\n        }\\n    }\\n}\\n\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1777829,
                "content": [
                    {
                        "username": "Evil_123",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n       string s=to_string(x);\\n       int n=s.size();\\n       for(int i=0;i<(n/2);i++){\\n           if(s[i]!=s[n-(i+1)]){\\n              return false;\\n           }\\n       }\\n       return true;\\n    }\\n};"
                    },
                    {
                        "username": "kawsarlog",
                        "content": "This is my solution hope it is easy enough!\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        y = str(x)\\n        return str(x) == y[::-1]"
                    },
                    {
                        "username": "Vee__",
                        "content": "Solution in C++  \\n\\n`class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n\\n        string z = to_string(x);\\n        string y = to_string(x);\\n        reverse(y.begin(), y.end());\\n\\n        if(z == y){\\n            return true;\\n        }\\n\\n        return false;\\n    }\\n};`"
                    },
                    {
                        "username": "arpit1910",
                        "content": "\\ndoes any one suggest what wrong with this code\\nit gives error. on input = 121 \\n\\n\\n `your inline code...your inline code...\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n\\n        int num=0;\\n        while(x>0){\\n            int digit = x%10;\\n\\n            num = num*10+digit;\\n\\n            x = x/10;\\n        }\\n        if(num == x){\\n            return true;\\n        }\\n        return false;\\n    }\\n};\\n\\n`\\n"
                    },
                    {
                        "username": "gelehasan",
                        "content": "Easy solution using javascript\\n\\nvar isPalindrome = function(x) {\\n   let palindrom=\"\";\\n  let xString= x.toString();\\n\\n    for(let i=xString.length-1; i>=0; i--){\\n        // console.log(xString[i])\\n        palindrom +=xString[i];\\n    }\\n  \\n    if(palindrom === xString ){\\n        return true\\n    }else{\\n       return false\\n    }\\n    \\n    \\n    \\n    \\n    \\n};"
                    },
                    {
                        "username": "dilipkumar8117",
                        "content": "JAVA SOLUTION\\n\\npublic boolean isPalindrome(int x) {\\n        String s=Integer.toString(x);\\n        String res=\"\";\\n//reverse the string\\n        for(int i=s.length()-1;i>=0;i--){\\n            res=res+s.charAt(i);\\n        }\\n\\n        if(s.equals(res)){\\n            return true;\\n        }else{\\n            return false;\\n        }\\n    }"
                    },
                    {
                        "username": "nikhilgaba03",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        cin>>x;\\n        int m = 0;\\n        int dup =x;\\n        while(x!=0){\\n            int digit = x%10;\\n            m = (m*10)+digit;\\n            x = x/10;\\n        }\\n        if(dup==m){\\n            return 1;\\n        }else{\\n            return 0;\\n        }\\n    }\\n};\\n\\nIt is throwing run time error, kindly look into it what could be the reason for this"
                    },
                    {
                        "username": "Pan2125",
                        "content": "why this code is not working for input number 11??\\n\\nvar isPalindrome = function(x) {\\n    if(x<0 ||(x%10===0 && x!==0)){\\n        return false\\n    }\\n\\n    let reverseNum=0\\n    while(x=>reverseNum){\\n        reverseNum=reverseNum*10+x%10\\n        x=x/10\\n    }\\n\\n    return x===reverseNum || x===reverseNum/10\\n\\n};"
                    },
                    {
                        "username": "benipalmanpreet1207",
                        "content": "i don\\'t know. i have done code in php. for example:- input 11 or 121 is not working for the code. please tell me what i have done wrong.\\n"
                    },
                    {
                        "username": "benipalmanpreet1207",
                        "content": "# for the first case, my prgram is not working. so please help me . what i have done wrong.\\nclass Solution {\\n    function isPalindrome($x) {\\n        $reverse=0;\\n        $temp=$x;\\n        while($temp>0){\\n            $reminder=$temp%10;\\n            $reverse=$reverse*10+$reminder;\\n            $temp=$temp/10;\\n        }\\n        return $reverse==$x;\\n    }\\n}"
                    },
                    {
                        "username": "Pan2125",
                        "content": "u should change the reminder to reminder=temp%10....\\notherwise your solution will add temp to reminder"
                    },
                    {
                        "username": "tushargola958",
                        "content": "test case 1 is showing error please help \\n\\n\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        \\n        int rem = 0 ;\\n        while(x>0 ){\\n            rem = rem*10 + x%10;\\n           x = x/10;\\n}\\n        if(rem==x){\\nreturn true;\\n        }\\n        else{\\n           return false;\\n        }\\n    }\\n}\\n\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1774484,
                "content": [
                    {
                        "username": "Evil_123",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n       string s=to_string(x);\\n       int n=s.size();\\n       for(int i=0;i<(n/2);i++){\\n           if(s[i]!=s[n-(i+1)]){\\n              return false;\\n           }\\n       }\\n       return true;\\n    }\\n};"
                    },
                    {
                        "username": "kawsarlog",
                        "content": "This is my solution hope it is easy enough!\\n\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        y = str(x)\\n        return str(x) == y[::-1]"
                    },
                    {
                        "username": "Vee__",
                        "content": "Solution in C++  \\n\\n`class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n\\n        string z = to_string(x);\\n        string y = to_string(x);\\n        reverse(y.begin(), y.end());\\n\\n        if(z == y){\\n            return true;\\n        }\\n\\n        return false;\\n    }\\n};`"
                    },
                    {
                        "username": "arpit1910",
                        "content": "\\ndoes any one suggest what wrong with this code\\nit gives error. on input = 121 \\n\\n\\n `your inline code...your inline code...\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n\\n        int num=0;\\n        while(x>0){\\n            int digit = x%10;\\n\\n            num = num*10+digit;\\n\\n            x = x/10;\\n        }\\n        if(num == x){\\n            return true;\\n        }\\n        return false;\\n    }\\n};\\n\\n`\\n"
                    },
                    {
                        "username": "gelehasan",
                        "content": "Easy solution using javascript\\n\\nvar isPalindrome = function(x) {\\n   let palindrom=\"\";\\n  let xString= x.toString();\\n\\n    for(let i=xString.length-1; i>=0; i--){\\n        // console.log(xString[i])\\n        palindrom +=xString[i];\\n    }\\n  \\n    if(palindrom === xString ){\\n        return true\\n    }else{\\n       return false\\n    }\\n    \\n    \\n    \\n    \\n    \\n};"
                    },
                    {
                        "username": "dilipkumar8117",
                        "content": "JAVA SOLUTION\\n\\npublic boolean isPalindrome(int x) {\\n        String s=Integer.toString(x);\\n        String res=\"\";\\n//reverse the string\\n        for(int i=s.length()-1;i>=0;i--){\\n            res=res+s.charAt(i);\\n        }\\n\\n        if(s.equals(res)){\\n            return true;\\n        }else{\\n            return false;\\n        }\\n    }"
                    },
                    {
                        "username": "nikhilgaba03",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        cin>>x;\\n        int m = 0;\\n        int dup =x;\\n        while(x!=0){\\n            int digit = x%10;\\n            m = (m*10)+digit;\\n            x = x/10;\\n        }\\n        if(dup==m){\\n            return 1;\\n        }else{\\n            return 0;\\n        }\\n    }\\n};\\n\\nIt is throwing run time error, kindly look into it what could be the reason for this"
                    },
                    {
                        "username": "Pan2125",
                        "content": "why this code is not working for input number 11??\\n\\nvar isPalindrome = function(x) {\\n    if(x<0 ||(x%10===0 && x!==0)){\\n        return false\\n    }\\n\\n    let reverseNum=0\\n    while(x=>reverseNum){\\n        reverseNum=reverseNum*10+x%10\\n        x=x/10\\n    }\\n\\n    return x===reverseNum || x===reverseNum/10\\n\\n};"
                    },
                    {
                        "username": "benipalmanpreet1207",
                        "content": "i don\\'t know. i have done code in php. for example:- input 11 or 121 is not working for the code. please tell me what i have done wrong.\\n"
                    },
                    {
                        "username": "benipalmanpreet1207",
                        "content": "# for the first case, my prgram is not working. so please help me . what i have done wrong.\\nclass Solution {\\n    function isPalindrome($x) {\\n        $reverse=0;\\n        $temp=$x;\\n        while($temp>0){\\n            $reminder=$temp%10;\\n            $reverse=$reverse*10+$reminder;\\n            $temp=$temp/10;\\n        }\\n        return $reverse==$x;\\n    }\\n}"
                    },
                    {
                        "username": "Pan2125",
                        "content": "u should change the reminder to reminder=temp%10....\\notherwise your solution will add temp to reminder"
                    },
                    {
                        "username": "tushargola958",
                        "content": "test case 1 is showing error please help \\n\\n\\n\\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        \\n        int rem = 0 ;\\n        while(x>0 ){\\n            rem = rem*10 + x%10;\\n           x = x/10;\\n}\\n        if(rem==x){\\nreturn true;\\n        }\\n        else{\\n           return false;\\n        }\\n    }\\n}\\n\\n\\n\\n"
                    }
                ]
            },
            {
                "id": 1773686,
                "content": [
                    {
                        "username": "alimjanovf",
                        "content": "I have solved this problem without converting integer to string \\n`public bool IsPalindrome(int x) {\\n        var q = 0;\\n        var t = x;\\n        \\n        while (x!=0)\\n        {\\n            var s = 10;\\n            q = q * s + x % s;\\n            x /= s;\\n\\n            if( q == t && q >=0 )\\n                return true;\\n        }\\n        return q == 0 ? true : false ;     \\n    }.`"
                    },
                    {
                        "username": "MadanBaduwal",
                        "content": "I used the string reverse function to check the palindrome.\\nHere is the code\\n `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        rv_string = str(x)[::-1]\\n        if str(x) == rv_string:\\n            return True\\n        else:\\n            return False`"
                    },
                    {
                        "username": "misuvasish114",
                        "content": "Steps:\\n1. negative numbers are not palindrome\\n2. calculate reverse of the number and compare with the original number\\n\\ncalculate reverse of a number:\\n```py\\nreverse(a):\\n     rev = 0\\n     while a != 0:\\n          rev = (rev*10) + (a%10)\\n          a = a/10\\n     return rev\\n```"
                    },
                    {
                        "username": "misuvasish114",
                        "content": "The time complexity can be reduced to O(N) to O(N/2) by only reversing the half number from the LSB and compare it its half from the MSB."
                    },
                    {
                        "username": "xsukhmeet",
                        "content": "String a=Integer.toString(x);\\n        String b=\"\";\\n        for(int i=a.length()-1;i>=0;i--){\\n            b+=a.charAt(i)+\"\";\\n        }\\n        if(a==b){\\n            return true;\\n        }\\n        return false\\n\\n\\nI have written this my 2 test cases are passing but first test case not passed.Anyone knowing what is the problem with this please respond."
                    },
                    {
                        "username": "TMuhammadqodir",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return str(x)==str(x)[::-1]"
                    },
                    {
                        "username": "kingctan",
                        "content": "My solution in Java without using string reverse, to integer array or any other push and pop stack trick. A bit long maybe someone can make it shorter.\n    public static boolean isPalindrome(int x) {\n          if (x < 0) return false;\n          if (x < 10) return true;\n          if (x % 10 == 0) return false;\n          int num = x;\n          int num2 = x;\n          int length = 0;\n    //find the length/size of the input integer.     \n       while (true) {\n              length++;\n              int quotient = num / 10;\n              if (quotient == 0) break;\n              num = quotient;\n           }\n\n        double pow = 0;\n       //Loop through the length of the integer and multiply each remain to the power of 10 * count of length.\n      //sum them up with double type instead of integer because if int x = 2147483647 when it's flipped to 7463847412 which is too big for integer\n        while (length > 0) {\n              int i = x % 10;\n              pow = pow + Math.pow(10, length - 1) * i;\n              int rem = x / 10;\n              if (rem == 0) break;\n              x = rem;\n              length--;\n        }\n          return num2 * 1.0 == pow;\n    }"
                    },
                    {
                        "username": "quangkelvin",
                        "content": "\\'class Solution {\\n    public boolean isPalindrome(int x) {\\n        if(x<0)return false;\\n        else{\\n            char [] numberArr = String.valueOf(x).toCharArray();\\n            int lastIndex=numberArr.length-1;\\n            int i=0;\\n\\n            while (lastIndex - i >= 0) {\\n                if(numberArr[i]==numberArr[lastIndex]){\\n                    i++;\\n                    lastIndex--;\\n                }else{\\n                    return false;\\n                }\\n            }\\n\\n        }\\n\\n        return true;\\n        \\n    }\\n}\\'"
                    },
                    {
                        "username": "goyalishika132",
                        "content": "else\\n        {  \\n        while(no>0)\\n        {\\n            int temp=x;\\n            rem=temp%10;\\n            no=temp/10;\\n            val= val*10+ rem;\\n        }\\n        if(val==x)\\n          return true;\\n        else\\n            return false; \\n        }\\n\\ncan someone help me out, I am not getting favorable output from this part"
                    },
                    {
                        "username": "tisaconundrum",
                        "content": "I bet there is a really easy bit manipulation that could pull this off, but I\\'m not smart enough to think through how that could work. \\uD83D\\uDE02"
                    },
                    {
                        "username": "Aspirant_coder",
                        "content": "can someone explain me why I am getting reached end of file error in this code.\\n\\nclass Solution {\\n     public static int helper(int si,int ei,int[]arr){\\n        if(si>=ei){\\n            return 1;\\n        }\\n        if(si!= ei){\\n            return 0;\\n        }\\n        return isPalindrome(si+1,ei-1,arr);\\n        \\n    }\\n    public boolean isPalindrome(int num) {\\n        String str = (new Integer(number)).toString();\\n    char[] chArr = str.toCharArray();\\n    int[] arr = new int[chArr.length];\\n    for (int i = 0; i< chArr.length; i++) {\\n        arr[i] = Character.getNumericValue(chArr[i]);\\n    }\\n        return helper(0,arr.length-1,arr);\\n}"
                    }
                ]
            },
            {
                "id": 1773559,
                "content": [
                    {
                        "username": "alimjanovf",
                        "content": "I have solved this problem without converting integer to string \\n`public bool IsPalindrome(int x) {\\n        var q = 0;\\n        var t = x;\\n        \\n        while (x!=0)\\n        {\\n            var s = 10;\\n            q = q * s + x % s;\\n            x /= s;\\n\\n            if( q == t && q >=0 )\\n                return true;\\n        }\\n        return q == 0 ? true : false ;     \\n    }.`"
                    },
                    {
                        "username": "MadanBaduwal",
                        "content": "I used the string reverse function to check the palindrome.\\nHere is the code\\n `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        rv_string = str(x)[::-1]\\n        if str(x) == rv_string:\\n            return True\\n        else:\\n            return False`"
                    },
                    {
                        "username": "misuvasish114",
                        "content": "Steps:\\n1. negative numbers are not palindrome\\n2. calculate reverse of the number and compare with the original number\\n\\ncalculate reverse of a number:\\n```py\\nreverse(a):\\n     rev = 0\\n     while a != 0:\\n          rev = (rev*10) + (a%10)\\n          a = a/10\\n     return rev\\n```"
                    },
                    {
                        "username": "misuvasish114",
                        "content": "The time complexity can be reduced to O(N) to O(N/2) by only reversing the half number from the LSB and compare it its half from the MSB."
                    },
                    {
                        "username": "xsukhmeet",
                        "content": "String a=Integer.toString(x);\\n        String b=\"\";\\n        for(int i=a.length()-1;i>=0;i--){\\n            b+=a.charAt(i)+\"\";\\n        }\\n        if(a==b){\\n            return true;\\n        }\\n        return false\\n\\n\\nI have written this my 2 test cases are passing but first test case not passed.Anyone knowing what is the problem with this please respond."
                    },
                    {
                        "username": "TMuhammadqodir",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return str(x)==str(x)[::-1]"
                    },
                    {
                        "username": "kingctan",
                        "content": "My solution in Java without using string reverse, to integer array or any other push and pop stack trick. A bit long maybe someone can make it shorter.\n    public static boolean isPalindrome(int x) {\n          if (x < 0) return false;\n          if (x < 10) return true;\n          if (x % 10 == 0) return false;\n          int num = x;\n          int num2 = x;\n          int length = 0;\n    //find the length/size of the input integer.     \n       while (true) {\n              length++;\n              int quotient = num / 10;\n              if (quotient == 0) break;\n              num = quotient;\n           }\n\n        double pow = 0;\n       //Loop through the length of the integer and multiply each remain to the power of 10 * count of length.\n      //sum them up with double type instead of integer because if int x = 2147483647 when it's flipped to 7463847412 which is too big for integer\n        while (length > 0) {\n              int i = x % 10;\n              pow = pow + Math.pow(10, length - 1) * i;\n              int rem = x / 10;\n              if (rem == 0) break;\n              x = rem;\n              length--;\n        }\n          return num2 * 1.0 == pow;\n    }"
                    },
                    {
                        "username": "quangkelvin",
                        "content": "\\'class Solution {\\n    public boolean isPalindrome(int x) {\\n        if(x<0)return false;\\n        else{\\n            char [] numberArr = String.valueOf(x).toCharArray();\\n            int lastIndex=numberArr.length-1;\\n            int i=0;\\n\\n            while (lastIndex - i >= 0) {\\n                if(numberArr[i]==numberArr[lastIndex]){\\n                    i++;\\n                    lastIndex--;\\n                }else{\\n                    return false;\\n                }\\n            }\\n\\n        }\\n\\n        return true;\\n        \\n    }\\n}\\'"
                    },
                    {
                        "username": "goyalishika132",
                        "content": "else\\n        {  \\n        while(no>0)\\n        {\\n            int temp=x;\\n            rem=temp%10;\\n            no=temp/10;\\n            val= val*10+ rem;\\n        }\\n        if(val==x)\\n          return true;\\n        else\\n            return false; \\n        }\\n\\ncan someone help me out, I am not getting favorable output from this part"
                    },
                    {
                        "username": "tisaconundrum",
                        "content": "I bet there is a really easy bit manipulation that could pull this off, but I\\'m not smart enough to think through how that could work. \\uD83D\\uDE02"
                    },
                    {
                        "username": "Aspirant_coder",
                        "content": "can someone explain me why I am getting reached end of file error in this code.\\n\\nclass Solution {\\n     public static int helper(int si,int ei,int[]arr){\\n        if(si>=ei){\\n            return 1;\\n        }\\n        if(si!= ei){\\n            return 0;\\n        }\\n        return isPalindrome(si+1,ei-1,arr);\\n        \\n    }\\n    public boolean isPalindrome(int num) {\\n        String str = (new Integer(number)).toString();\\n    char[] chArr = str.toCharArray();\\n    int[] arr = new int[chArr.length];\\n    for (int i = 0; i< chArr.length; i++) {\\n        arr[i] = Character.getNumericValue(chArr[i]);\\n    }\\n        return helper(0,arr.length-1,arr);\\n}"
                    }
                ]
            },
            {
                "id": 1773051,
                "content": [
                    {
                        "username": "alimjanovf",
                        "content": "I have solved this problem without converting integer to string \\n`public bool IsPalindrome(int x) {\\n        var q = 0;\\n        var t = x;\\n        \\n        while (x!=0)\\n        {\\n            var s = 10;\\n            q = q * s + x % s;\\n            x /= s;\\n\\n            if( q == t && q >=0 )\\n                return true;\\n        }\\n        return q == 0 ? true : false ;     \\n    }.`"
                    },
                    {
                        "username": "MadanBaduwal",
                        "content": "I used the string reverse function to check the palindrome.\\nHere is the code\\n `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        rv_string = str(x)[::-1]\\n        if str(x) == rv_string:\\n            return True\\n        else:\\n            return False`"
                    },
                    {
                        "username": "misuvasish114",
                        "content": "Steps:\\n1. negative numbers are not palindrome\\n2. calculate reverse of the number and compare with the original number\\n\\ncalculate reverse of a number:\\n```py\\nreverse(a):\\n     rev = 0\\n     while a != 0:\\n          rev = (rev*10) + (a%10)\\n          a = a/10\\n     return rev\\n```"
                    },
                    {
                        "username": "misuvasish114",
                        "content": "The time complexity can be reduced to O(N) to O(N/2) by only reversing the half number from the LSB and compare it its half from the MSB."
                    },
                    {
                        "username": "xsukhmeet",
                        "content": "String a=Integer.toString(x);\\n        String b=\"\";\\n        for(int i=a.length()-1;i>=0;i--){\\n            b+=a.charAt(i)+\"\";\\n        }\\n        if(a==b){\\n            return true;\\n        }\\n        return false\\n\\n\\nI have written this my 2 test cases are passing but first test case not passed.Anyone knowing what is the problem with this please respond."
                    },
                    {
                        "username": "TMuhammadqodir",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return str(x)==str(x)[::-1]"
                    },
                    {
                        "username": "kingctan",
                        "content": "My solution in Java without using string reverse, to integer array or any other push and pop stack trick. A bit long maybe someone can make it shorter.\n    public static boolean isPalindrome(int x) {\n          if (x < 0) return false;\n          if (x < 10) return true;\n          if (x % 10 == 0) return false;\n          int num = x;\n          int num2 = x;\n          int length = 0;\n    //find the length/size of the input integer.     \n       while (true) {\n              length++;\n              int quotient = num / 10;\n              if (quotient == 0) break;\n              num = quotient;\n           }\n\n        double pow = 0;\n       //Loop through the length of the integer and multiply each remain to the power of 10 * count of length.\n      //sum them up with double type instead of integer because if int x = 2147483647 when it's flipped to 7463847412 which is too big for integer\n        while (length > 0) {\n              int i = x % 10;\n              pow = pow + Math.pow(10, length - 1) * i;\n              int rem = x / 10;\n              if (rem == 0) break;\n              x = rem;\n              length--;\n        }\n          return num2 * 1.0 == pow;\n    }"
                    },
                    {
                        "username": "quangkelvin",
                        "content": "\\'class Solution {\\n    public boolean isPalindrome(int x) {\\n        if(x<0)return false;\\n        else{\\n            char [] numberArr = String.valueOf(x).toCharArray();\\n            int lastIndex=numberArr.length-1;\\n            int i=0;\\n\\n            while (lastIndex - i >= 0) {\\n                if(numberArr[i]==numberArr[lastIndex]){\\n                    i++;\\n                    lastIndex--;\\n                }else{\\n                    return false;\\n                }\\n            }\\n\\n        }\\n\\n        return true;\\n        \\n    }\\n}\\'"
                    },
                    {
                        "username": "goyalishika132",
                        "content": "else\\n        {  \\n        while(no>0)\\n        {\\n            int temp=x;\\n            rem=temp%10;\\n            no=temp/10;\\n            val= val*10+ rem;\\n        }\\n        if(val==x)\\n          return true;\\n        else\\n            return false; \\n        }\\n\\ncan someone help me out, I am not getting favorable output from this part"
                    },
                    {
                        "username": "tisaconundrum",
                        "content": "I bet there is a really easy bit manipulation that could pull this off, but I\\'m not smart enough to think through how that could work. \\uD83D\\uDE02"
                    },
                    {
                        "username": "Aspirant_coder",
                        "content": "can someone explain me why I am getting reached end of file error in this code.\\n\\nclass Solution {\\n     public static int helper(int si,int ei,int[]arr){\\n        if(si>=ei){\\n            return 1;\\n        }\\n        if(si!= ei){\\n            return 0;\\n        }\\n        return isPalindrome(si+1,ei-1,arr);\\n        \\n    }\\n    public boolean isPalindrome(int num) {\\n        String str = (new Integer(number)).toString();\\n    char[] chArr = str.toCharArray();\\n    int[] arr = new int[chArr.length];\\n    for (int i = 0; i< chArr.length; i++) {\\n        arr[i] = Character.getNumericValue(chArr[i]);\\n    }\\n        return helper(0,arr.length-1,arr);\\n}"
                    }
                ]
            },
            {
                "id": 1771021,
                "content": [
                    {
                        "username": "alimjanovf",
                        "content": "I have solved this problem without converting integer to string \\n`public bool IsPalindrome(int x) {\\n        var q = 0;\\n        var t = x;\\n        \\n        while (x!=0)\\n        {\\n            var s = 10;\\n            q = q * s + x % s;\\n            x /= s;\\n\\n            if( q == t && q >=0 )\\n                return true;\\n        }\\n        return q == 0 ? true : false ;     \\n    }.`"
                    },
                    {
                        "username": "MadanBaduwal",
                        "content": "I used the string reverse function to check the palindrome.\\nHere is the code\\n `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        rv_string = str(x)[::-1]\\n        if str(x) == rv_string:\\n            return True\\n        else:\\n            return False`"
                    },
                    {
                        "username": "misuvasish114",
                        "content": "Steps:\\n1. negative numbers are not palindrome\\n2. calculate reverse of the number and compare with the original number\\n\\ncalculate reverse of a number:\\n```py\\nreverse(a):\\n     rev = 0\\n     while a != 0:\\n          rev = (rev*10) + (a%10)\\n          a = a/10\\n     return rev\\n```"
                    },
                    {
                        "username": "misuvasish114",
                        "content": "The time complexity can be reduced to O(N) to O(N/2) by only reversing the half number from the LSB and compare it its half from the MSB."
                    },
                    {
                        "username": "xsukhmeet",
                        "content": "String a=Integer.toString(x);\\n        String b=\"\";\\n        for(int i=a.length()-1;i>=0;i--){\\n            b+=a.charAt(i)+\"\";\\n        }\\n        if(a==b){\\n            return true;\\n        }\\n        return false\\n\\n\\nI have written this my 2 test cases are passing but first test case not passed.Anyone knowing what is the problem with this please respond."
                    },
                    {
                        "username": "TMuhammadqodir",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return str(x)==str(x)[::-1]"
                    },
                    {
                        "username": "kingctan",
                        "content": "My solution in Java without using string reverse, to integer array or any other push and pop stack trick. A bit long maybe someone can make it shorter.\n    public static boolean isPalindrome(int x) {\n          if (x < 0) return false;\n          if (x < 10) return true;\n          if (x % 10 == 0) return false;\n          int num = x;\n          int num2 = x;\n          int length = 0;\n    //find the length/size of the input integer.     \n       while (true) {\n              length++;\n              int quotient = num / 10;\n              if (quotient == 0) break;\n              num = quotient;\n           }\n\n        double pow = 0;\n       //Loop through the length of the integer and multiply each remain to the power of 10 * count of length.\n      //sum them up with double type instead of integer because if int x = 2147483647 when it's flipped to 7463847412 which is too big for integer\n        while (length > 0) {\n              int i = x % 10;\n              pow = pow + Math.pow(10, length - 1) * i;\n              int rem = x / 10;\n              if (rem == 0) break;\n              x = rem;\n              length--;\n        }\n          return num2 * 1.0 == pow;\n    }"
                    },
                    {
                        "username": "quangkelvin",
                        "content": "\\'class Solution {\\n    public boolean isPalindrome(int x) {\\n        if(x<0)return false;\\n        else{\\n            char [] numberArr = String.valueOf(x).toCharArray();\\n            int lastIndex=numberArr.length-1;\\n            int i=0;\\n\\n            while (lastIndex - i >= 0) {\\n                if(numberArr[i]==numberArr[lastIndex]){\\n                    i++;\\n                    lastIndex--;\\n                }else{\\n                    return false;\\n                }\\n            }\\n\\n        }\\n\\n        return true;\\n        \\n    }\\n}\\'"
                    },
                    {
                        "username": "goyalishika132",
                        "content": "else\\n        {  \\n        while(no>0)\\n        {\\n            int temp=x;\\n            rem=temp%10;\\n            no=temp/10;\\n            val= val*10+ rem;\\n        }\\n        if(val==x)\\n          return true;\\n        else\\n            return false; \\n        }\\n\\ncan someone help me out, I am not getting favorable output from this part"
                    },
                    {
                        "username": "tisaconundrum",
                        "content": "I bet there is a really easy bit manipulation that could pull this off, but I\\'m not smart enough to think through how that could work. \\uD83D\\uDE02"
                    },
                    {
                        "username": "Aspirant_coder",
                        "content": "can someone explain me why I am getting reached end of file error in this code.\\n\\nclass Solution {\\n     public static int helper(int si,int ei,int[]arr){\\n        if(si>=ei){\\n            return 1;\\n        }\\n        if(si!= ei){\\n            return 0;\\n        }\\n        return isPalindrome(si+1,ei-1,arr);\\n        \\n    }\\n    public boolean isPalindrome(int num) {\\n        String str = (new Integer(number)).toString();\\n    char[] chArr = str.toCharArray();\\n    int[] arr = new int[chArr.length];\\n    for (int i = 0; i< chArr.length; i++) {\\n        arr[i] = Character.getNumericValue(chArr[i]);\\n    }\\n        return helper(0,arr.length-1,arr);\\n}"
                    }
                ]
            },
            {
                "id": 1766431,
                "content": [
                    {
                        "username": "alimjanovf",
                        "content": "I have solved this problem without converting integer to string \\n`public bool IsPalindrome(int x) {\\n        var q = 0;\\n        var t = x;\\n        \\n        while (x!=0)\\n        {\\n            var s = 10;\\n            q = q * s + x % s;\\n            x /= s;\\n\\n            if( q == t && q >=0 )\\n                return true;\\n        }\\n        return q == 0 ? true : false ;     \\n    }.`"
                    },
                    {
                        "username": "MadanBaduwal",
                        "content": "I used the string reverse function to check the palindrome.\\nHere is the code\\n `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        rv_string = str(x)[::-1]\\n        if str(x) == rv_string:\\n            return True\\n        else:\\n            return False`"
                    },
                    {
                        "username": "misuvasish114",
                        "content": "Steps:\\n1. negative numbers are not palindrome\\n2. calculate reverse of the number and compare with the original number\\n\\ncalculate reverse of a number:\\n```py\\nreverse(a):\\n     rev = 0\\n     while a != 0:\\n          rev = (rev*10) + (a%10)\\n          a = a/10\\n     return rev\\n```"
                    },
                    {
                        "username": "misuvasish114",
                        "content": "The time complexity can be reduced to O(N) to O(N/2) by only reversing the half number from the LSB and compare it its half from the MSB."
                    },
                    {
                        "username": "xsukhmeet",
                        "content": "String a=Integer.toString(x);\\n        String b=\"\";\\n        for(int i=a.length()-1;i>=0;i--){\\n            b+=a.charAt(i)+\"\";\\n        }\\n        if(a==b){\\n            return true;\\n        }\\n        return false\\n\\n\\nI have written this my 2 test cases are passing but first test case not passed.Anyone knowing what is the problem with this please respond."
                    },
                    {
                        "username": "TMuhammadqodir",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return str(x)==str(x)[::-1]"
                    },
                    {
                        "username": "kingctan",
                        "content": "My solution in Java without using string reverse, to integer array or any other push and pop stack trick. A bit long maybe someone can make it shorter.\n    public static boolean isPalindrome(int x) {\n          if (x < 0) return false;\n          if (x < 10) return true;\n          if (x % 10 == 0) return false;\n          int num = x;\n          int num2 = x;\n          int length = 0;\n    //find the length/size of the input integer.     \n       while (true) {\n              length++;\n              int quotient = num / 10;\n              if (quotient == 0) break;\n              num = quotient;\n           }\n\n        double pow = 0;\n       //Loop through the length of the integer and multiply each remain to the power of 10 * count of length.\n      //sum them up with double type instead of integer because if int x = 2147483647 when it's flipped to 7463847412 which is too big for integer\n        while (length > 0) {\n              int i = x % 10;\n              pow = pow + Math.pow(10, length - 1) * i;\n              int rem = x / 10;\n              if (rem == 0) break;\n              x = rem;\n              length--;\n        }\n          return num2 * 1.0 == pow;\n    }"
                    },
                    {
                        "username": "quangkelvin",
                        "content": "\\'class Solution {\\n    public boolean isPalindrome(int x) {\\n        if(x<0)return false;\\n        else{\\n            char [] numberArr = String.valueOf(x).toCharArray();\\n            int lastIndex=numberArr.length-1;\\n            int i=0;\\n\\n            while (lastIndex - i >= 0) {\\n                if(numberArr[i]==numberArr[lastIndex]){\\n                    i++;\\n                    lastIndex--;\\n                }else{\\n                    return false;\\n                }\\n            }\\n\\n        }\\n\\n        return true;\\n        \\n    }\\n}\\'"
                    },
                    {
                        "username": "goyalishika132",
                        "content": "else\\n        {  \\n        while(no>0)\\n        {\\n            int temp=x;\\n            rem=temp%10;\\n            no=temp/10;\\n            val= val*10+ rem;\\n        }\\n        if(val==x)\\n          return true;\\n        else\\n            return false; \\n        }\\n\\ncan someone help me out, I am not getting favorable output from this part"
                    },
                    {
                        "username": "tisaconundrum",
                        "content": "I bet there is a really easy bit manipulation that could pull this off, but I\\'m not smart enough to think through how that could work. \\uD83D\\uDE02"
                    },
                    {
                        "username": "Aspirant_coder",
                        "content": "can someone explain me why I am getting reached end of file error in this code.\\n\\nclass Solution {\\n     public static int helper(int si,int ei,int[]arr){\\n        if(si>=ei){\\n            return 1;\\n        }\\n        if(si!= ei){\\n            return 0;\\n        }\\n        return isPalindrome(si+1,ei-1,arr);\\n        \\n    }\\n    public boolean isPalindrome(int num) {\\n        String str = (new Integer(number)).toString();\\n    char[] chArr = str.toCharArray();\\n    int[] arr = new int[chArr.length];\\n    for (int i = 0; i< chArr.length; i++) {\\n        arr[i] = Character.getNumericValue(chArr[i]);\\n    }\\n        return helper(0,arr.length-1,arr);\\n}"
                    }
                ]
            },
            {
                "id": 1765823,
                "content": [
                    {
                        "username": "alimjanovf",
                        "content": "I have solved this problem without converting integer to string \\n`public bool IsPalindrome(int x) {\\n        var q = 0;\\n        var t = x;\\n        \\n        while (x!=0)\\n        {\\n            var s = 10;\\n            q = q * s + x % s;\\n            x /= s;\\n\\n            if( q == t && q >=0 )\\n                return true;\\n        }\\n        return q == 0 ? true : false ;     \\n    }.`"
                    },
                    {
                        "username": "MadanBaduwal",
                        "content": "I used the string reverse function to check the palindrome.\\nHere is the code\\n `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        rv_string = str(x)[::-1]\\n        if str(x) == rv_string:\\n            return True\\n        else:\\n            return False`"
                    },
                    {
                        "username": "misuvasish114",
                        "content": "Steps:\\n1. negative numbers are not palindrome\\n2. calculate reverse of the number and compare with the original number\\n\\ncalculate reverse of a number:\\n```py\\nreverse(a):\\n     rev = 0\\n     while a != 0:\\n          rev = (rev*10) + (a%10)\\n          a = a/10\\n     return rev\\n```"
                    },
                    {
                        "username": "misuvasish114",
                        "content": "The time complexity can be reduced to O(N) to O(N/2) by only reversing the half number from the LSB and compare it its half from the MSB."
                    },
                    {
                        "username": "xsukhmeet",
                        "content": "String a=Integer.toString(x);\\n        String b=\"\";\\n        for(int i=a.length()-1;i>=0;i--){\\n            b+=a.charAt(i)+\"\";\\n        }\\n        if(a==b){\\n            return true;\\n        }\\n        return false\\n\\n\\nI have written this my 2 test cases are passing but first test case not passed.Anyone knowing what is the problem with this please respond."
                    },
                    {
                        "username": "TMuhammadqodir",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return str(x)==str(x)[::-1]"
                    },
                    {
                        "username": "kingctan",
                        "content": "My solution in Java without using string reverse, to integer array or any other push and pop stack trick. A bit long maybe someone can make it shorter.\n    public static boolean isPalindrome(int x) {\n          if (x < 0) return false;\n          if (x < 10) return true;\n          if (x % 10 == 0) return false;\n          int num = x;\n          int num2 = x;\n          int length = 0;\n    //find the length/size of the input integer.     \n       while (true) {\n              length++;\n              int quotient = num / 10;\n              if (quotient == 0) break;\n              num = quotient;\n           }\n\n        double pow = 0;\n       //Loop through the length of the integer and multiply each remain to the power of 10 * count of length.\n      //sum them up with double type instead of integer because if int x = 2147483647 when it's flipped to 7463847412 which is too big for integer\n        while (length > 0) {\n              int i = x % 10;\n              pow = pow + Math.pow(10, length - 1) * i;\n              int rem = x / 10;\n              if (rem == 0) break;\n              x = rem;\n              length--;\n        }\n          return num2 * 1.0 == pow;\n    }"
                    },
                    {
                        "username": "quangkelvin",
                        "content": "\\'class Solution {\\n    public boolean isPalindrome(int x) {\\n        if(x<0)return false;\\n        else{\\n            char [] numberArr = String.valueOf(x).toCharArray();\\n            int lastIndex=numberArr.length-1;\\n            int i=0;\\n\\n            while (lastIndex - i >= 0) {\\n                if(numberArr[i]==numberArr[lastIndex]){\\n                    i++;\\n                    lastIndex--;\\n                }else{\\n                    return false;\\n                }\\n            }\\n\\n        }\\n\\n        return true;\\n        \\n    }\\n}\\'"
                    },
                    {
                        "username": "goyalishika132",
                        "content": "else\\n        {  \\n        while(no>0)\\n        {\\n            int temp=x;\\n            rem=temp%10;\\n            no=temp/10;\\n            val= val*10+ rem;\\n        }\\n        if(val==x)\\n          return true;\\n        else\\n            return false; \\n        }\\n\\ncan someone help me out, I am not getting favorable output from this part"
                    },
                    {
                        "username": "tisaconundrum",
                        "content": "I bet there is a really easy bit manipulation that could pull this off, but I\\'m not smart enough to think through how that could work. \\uD83D\\uDE02"
                    },
                    {
                        "username": "Aspirant_coder",
                        "content": "can someone explain me why I am getting reached end of file error in this code.\\n\\nclass Solution {\\n     public static int helper(int si,int ei,int[]arr){\\n        if(si>=ei){\\n            return 1;\\n        }\\n        if(si!= ei){\\n            return 0;\\n        }\\n        return isPalindrome(si+1,ei-1,arr);\\n        \\n    }\\n    public boolean isPalindrome(int num) {\\n        String str = (new Integer(number)).toString();\\n    char[] chArr = str.toCharArray();\\n    int[] arr = new int[chArr.length];\\n    for (int i = 0; i< chArr.length; i++) {\\n        arr[i] = Character.getNumericValue(chArr[i]);\\n    }\\n        return helper(0,arr.length-1,arr);\\n}"
                    }
                ]
            },
            {
                "id": 1765325,
                "content": [
                    {
                        "username": "alimjanovf",
                        "content": "I have solved this problem without converting integer to string \\n`public bool IsPalindrome(int x) {\\n        var q = 0;\\n        var t = x;\\n        \\n        while (x!=0)\\n        {\\n            var s = 10;\\n            q = q * s + x % s;\\n            x /= s;\\n\\n            if( q == t && q >=0 )\\n                return true;\\n        }\\n        return q == 0 ? true : false ;     \\n    }.`"
                    },
                    {
                        "username": "MadanBaduwal",
                        "content": "I used the string reverse function to check the palindrome.\\nHere is the code\\n `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        rv_string = str(x)[::-1]\\n        if str(x) == rv_string:\\n            return True\\n        else:\\n            return False`"
                    },
                    {
                        "username": "misuvasish114",
                        "content": "Steps:\\n1. negative numbers are not palindrome\\n2. calculate reverse of the number and compare with the original number\\n\\ncalculate reverse of a number:\\n```py\\nreverse(a):\\n     rev = 0\\n     while a != 0:\\n          rev = (rev*10) + (a%10)\\n          a = a/10\\n     return rev\\n```"
                    },
                    {
                        "username": "misuvasish114",
                        "content": "The time complexity can be reduced to O(N) to O(N/2) by only reversing the half number from the LSB and compare it its half from the MSB."
                    },
                    {
                        "username": "xsukhmeet",
                        "content": "String a=Integer.toString(x);\\n        String b=\"\";\\n        for(int i=a.length()-1;i>=0;i--){\\n            b+=a.charAt(i)+\"\";\\n        }\\n        if(a==b){\\n            return true;\\n        }\\n        return false\\n\\n\\nI have written this my 2 test cases are passing but first test case not passed.Anyone knowing what is the problem with this please respond."
                    },
                    {
                        "username": "TMuhammadqodir",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return str(x)==str(x)[::-1]"
                    },
                    {
                        "username": "kingctan",
                        "content": "My solution in Java without using string reverse, to integer array or any other push and pop stack trick. A bit long maybe someone can make it shorter.\n    public static boolean isPalindrome(int x) {\n          if (x < 0) return false;\n          if (x < 10) return true;\n          if (x % 10 == 0) return false;\n          int num = x;\n          int num2 = x;\n          int length = 0;\n    //find the length/size of the input integer.     \n       while (true) {\n              length++;\n              int quotient = num / 10;\n              if (quotient == 0) break;\n              num = quotient;\n           }\n\n        double pow = 0;\n       //Loop through the length of the integer and multiply each remain to the power of 10 * count of length.\n      //sum them up with double type instead of integer because if int x = 2147483647 when it's flipped to 7463847412 which is too big for integer\n        while (length > 0) {\n              int i = x % 10;\n              pow = pow + Math.pow(10, length - 1) * i;\n              int rem = x / 10;\n              if (rem == 0) break;\n              x = rem;\n              length--;\n        }\n          return num2 * 1.0 == pow;\n    }"
                    },
                    {
                        "username": "quangkelvin",
                        "content": "\\'class Solution {\\n    public boolean isPalindrome(int x) {\\n        if(x<0)return false;\\n        else{\\n            char [] numberArr = String.valueOf(x).toCharArray();\\n            int lastIndex=numberArr.length-1;\\n            int i=0;\\n\\n            while (lastIndex - i >= 0) {\\n                if(numberArr[i]==numberArr[lastIndex]){\\n                    i++;\\n                    lastIndex--;\\n                }else{\\n                    return false;\\n                }\\n            }\\n\\n        }\\n\\n        return true;\\n        \\n    }\\n}\\'"
                    },
                    {
                        "username": "goyalishika132",
                        "content": "else\\n        {  \\n        while(no>0)\\n        {\\n            int temp=x;\\n            rem=temp%10;\\n            no=temp/10;\\n            val= val*10+ rem;\\n        }\\n        if(val==x)\\n          return true;\\n        else\\n            return false; \\n        }\\n\\ncan someone help me out, I am not getting favorable output from this part"
                    },
                    {
                        "username": "tisaconundrum",
                        "content": "I bet there is a really easy bit manipulation that could pull this off, but I\\'m not smart enough to think through how that could work. \\uD83D\\uDE02"
                    },
                    {
                        "username": "Aspirant_coder",
                        "content": "can someone explain me why I am getting reached end of file error in this code.\\n\\nclass Solution {\\n     public static int helper(int si,int ei,int[]arr){\\n        if(si>=ei){\\n            return 1;\\n        }\\n        if(si!= ei){\\n            return 0;\\n        }\\n        return isPalindrome(si+1,ei-1,arr);\\n        \\n    }\\n    public boolean isPalindrome(int num) {\\n        String str = (new Integer(number)).toString();\\n    char[] chArr = str.toCharArray();\\n    int[] arr = new int[chArr.length];\\n    for (int i = 0; i< chArr.length; i++) {\\n        arr[i] = Character.getNumericValue(chArr[i]);\\n    }\\n        return helper(0,arr.length-1,arr);\\n}"
                    }
                ]
            },
            {
                "id": 1762242,
                "content": [
                    {
                        "username": "alimjanovf",
                        "content": "I have solved this problem without converting integer to string \\n`public bool IsPalindrome(int x) {\\n        var q = 0;\\n        var t = x;\\n        \\n        while (x!=0)\\n        {\\n            var s = 10;\\n            q = q * s + x % s;\\n            x /= s;\\n\\n            if( q == t && q >=0 )\\n                return true;\\n        }\\n        return q == 0 ? true : false ;     \\n    }.`"
                    },
                    {
                        "username": "MadanBaduwal",
                        "content": "I used the string reverse function to check the palindrome.\\nHere is the code\\n `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        rv_string = str(x)[::-1]\\n        if str(x) == rv_string:\\n            return True\\n        else:\\n            return False`"
                    },
                    {
                        "username": "misuvasish114",
                        "content": "Steps:\\n1. negative numbers are not palindrome\\n2. calculate reverse of the number and compare with the original number\\n\\ncalculate reverse of a number:\\n```py\\nreverse(a):\\n     rev = 0\\n     while a != 0:\\n          rev = (rev*10) + (a%10)\\n          a = a/10\\n     return rev\\n```"
                    },
                    {
                        "username": "misuvasish114",
                        "content": "The time complexity can be reduced to O(N) to O(N/2) by only reversing the half number from the LSB and compare it its half from the MSB."
                    },
                    {
                        "username": "xsukhmeet",
                        "content": "String a=Integer.toString(x);\\n        String b=\"\";\\n        for(int i=a.length()-1;i>=0;i--){\\n            b+=a.charAt(i)+\"\";\\n        }\\n        if(a==b){\\n            return true;\\n        }\\n        return false\\n\\n\\nI have written this my 2 test cases are passing but first test case not passed.Anyone knowing what is the problem with this please respond."
                    },
                    {
                        "username": "TMuhammadqodir",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return str(x)==str(x)[::-1]"
                    },
                    {
                        "username": "kingctan",
                        "content": "My solution in Java without using string reverse, to integer array or any other push and pop stack trick. A bit long maybe someone can make it shorter.\n    public static boolean isPalindrome(int x) {\n          if (x < 0) return false;\n          if (x < 10) return true;\n          if (x % 10 == 0) return false;\n          int num = x;\n          int num2 = x;\n          int length = 0;\n    //find the length/size of the input integer.     \n       while (true) {\n              length++;\n              int quotient = num / 10;\n              if (quotient == 0) break;\n              num = quotient;\n           }\n\n        double pow = 0;\n       //Loop through the length of the integer and multiply each remain to the power of 10 * count of length.\n      //sum them up with double type instead of integer because if int x = 2147483647 when it's flipped to 7463847412 which is too big for integer\n        while (length > 0) {\n              int i = x % 10;\n              pow = pow + Math.pow(10, length - 1) * i;\n              int rem = x / 10;\n              if (rem == 0) break;\n              x = rem;\n              length--;\n        }\n          return num2 * 1.0 == pow;\n    }"
                    },
                    {
                        "username": "quangkelvin",
                        "content": "\\'class Solution {\\n    public boolean isPalindrome(int x) {\\n        if(x<0)return false;\\n        else{\\n            char [] numberArr = String.valueOf(x).toCharArray();\\n            int lastIndex=numberArr.length-1;\\n            int i=0;\\n\\n            while (lastIndex - i >= 0) {\\n                if(numberArr[i]==numberArr[lastIndex]){\\n                    i++;\\n                    lastIndex--;\\n                }else{\\n                    return false;\\n                }\\n            }\\n\\n        }\\n\\n        return true;\\n        \\n    }\\n}\\'"
                    },
                    {
                        "username": "goyalishika132",
                        "content": "else\\n        {  \\n        while(no>0)\\n        {\\n            int temp=x;\\n            rem=temp%10;\\n            no=temp/10;\\n            val= val*10+ rem;\\n        }\\n        if(val==x)\\n          return true;\\n        else\\n            return false; \\n        }\\n\\ncan someone help me out, I am not getting favorable output from this part"
                    },
                    {
                        "username": "tisaconundrum",
                        "content": "I bet there is a really easy bit manipulation that could pull this off, but I\\'m not smart enough to think through how that could work. \\uD83D\\uDE02"
                    },
                    {
                        "username": "Aspirant_coder",
                        "content": "can someone explain me why I am getting reached end of file error in this code.\\n\\nclass Solution {\\n     public static int helper(int si,int ei,int[]arr){\\n        if(si>=ei){\\n            return 1;\\n        }\\n        if(si!= ei){\\n            return 0;\\n        }\\n        return isPalindrome(si+1,ei-1,arr);\\n        \\n    }\\n    public boolean isPalindrome(int num) {\\n        String str = (new Integer(number)).toString();\\n    char[] chArr = str.toCharArray();\\n    int[] arr = new int[chArr.length];\\n    for (int i = 0; i< chArr.length; i++) {\\n        arr[i] = Character.getNumericValue(chArr[i]);\\n    }\\n        return helper(0,arr.length-1,arr);\\n}"
                    }
                ]
            },
            {
                "id": 1759812,
                "content": [
                    {
                        "username": "alimjanovf",
                        "content": "I have solved this problem without converting integer to string \\n`public bool IsPalindrome(int x) {\\n        var q = 0;\\n        var t = x;\\n        \\n        while (x!=0)\\n        {\\n            var s = 10;\\n            q = q * s + x % s;\\n            x /= s;\\n\\n            if( q == t && q >=0 )\\n                return true;\\n        }\\n        return q == 0 ? true : false ;     \\n    }.`"
                    },
                    {
                        "username": "MadanBaduwal",
                        "content": "I used the string reverse function to check the palindrome.\\nHere is the code\\n `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        rv_string = str(x)[::-1]\\n        if str(x) == rv_string:\\n            return True\\n        else:\\n            return False`"
                    },
                    {
                        "username": "misuvasish114",
                        "content": "Steps:\\n1. negative numbers are not palindrome\\n2. calculate reverse of the number and compare with the original number\\n\\ncalculate reverse of a number:\\n```py\\nreverse(a):\\n     rev = 0\\n     while a != 0:\\n          rev = (rev*10) + (a%10)\\n          a = a/10\\n     return rev\\n```"
                    },
                    {
                        "username": "misuvasish114",
                        "content": "The time complexity can be reduced to O(N) to O(N/2) by only reversing the half number from the LSB and compare it its half from the MSB."
                    },
                    {
                        "username": "xsukhmeet",
                        "content": "String a=Integer.toString(x);\\n        String b=\"\";\\n        for(int i=a.length()-1;i>=0;i--){\\n            b+=a.charAt(i)+\"\";\\n        }\\n        if(a==b){\\n            return true;\\n        }\\n        return false\\n\\n\\nI have written this my 2 test cases are passing but first test case not passed.Anyone knowing what is the problem with this please respond."
                    },
                    {
                        "username": "TMuhammadqodir",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return str(x)==str(x)[::-1]"
                    },
                    {
                        "username": "kingctan",
                        "content": "My solution in Java without using string reverse, to integer array or any other push and pop stack trick. A bit long maybe someone can make it shorter.\n    public static boolean isPalindrome(int x) {\n          if (x < 0) return false;\n          if (x < 10) return true;\n          if (x % 10 == 0) return false;\n          int num = x;\n          int num2 = x;\n          int length = 0;\n    //find the length/size of the input integer.     \n       while (true) {\n              length++;\n              int quotient = num / 10;\n              if (quotient == 0) break;\n              num = quotient;\n           }\n\n        double pow = 0;\n       //Loop through the length of the integer and multiply each remain to the power of 10 * count of length.\n      //sum them up with double type instead of integer because if int x = 2147483647 when it's flipped to 7463847412 which is too big for integer\n        while (length > 0) {\n              int i = x % 10;\n              pow = pow + Math.pow(10, length - 1) * i;\n              int rem = x / 10;\n              if (rem == 0) break;\n              x = rem;\n              length--;\n        }\n          return num2 * 1.0 == pow;\n    }"
                    },
                    {
                        "username": "quangkelvin",
                        "content": "\\'class Solution {\\n    public boolean isPalindrome(int x) {\\n        if(x<0)return false;\\n        else{\\n            char [] numberArr = String.valueOf(x).toCharArray();\\n            int lastIndex=numberArr.length-1;\\n            int i=0;\\n\\n            while (lastIndex - i >= 0) {\\n                if(numberArr[i]==numberArr[lastIndex]){\\n                    i++;\\n                    lastIndex--;\\n                }else{\\n                    return false;\\n                }\\n            }\\n\\n        }\\n\\n        return true;\\n        \\n    }\\n}\\'"
                    },
                    {
                        "username": "goyalishika132",
                        "content": "else\\n        {  \\n        while(no>0)\\n        {\\n            int temp=x;\\n            rem=temp%10;\\n            no=temp/10;\\n            val= val*10+ rem;\\n        }\\n        if(val==x)\\n          return true;\\n        else\\n            return false; \\n        }\\n\\ncan someone help me out, I am not getting favorable output from this part"
                    },
                    {
                        "username": "tisaconundrum",
                        "content": "I bet there is a really easy bit manipulation that could pull this off, but I\\'m not smart enough to think through how that could work. \\uD83D\\uDE02"
                    },
                    {
                        "username": "Aspirant_coder",
                        "content": "can someone explain me why I am getting reached end of file error in this code.\\n\\nclass Solution {\\n     public static int helper(int si,int ei,int[]arr){\\n        if(si>=ei){\\n            return 1;\\n        }\\n        if(si!= ei){\\n            return 0;\\n        }\\n        return isPalindrome(si+1,ei-1,arr);\\n        \\n    }\\n    public boolean isPalindrome(int num) {\\n        String str = (new Integer(number)).toString();\\n    char[] chArr = str.toCharArray();\\n    int[] arr = new int[chArr.length];\\n    for (int i = 0; i< chArr.length; i++) {\\n        arr[i] = Character.getNumericValue(chArr[i]);\\n    }\\n        return helper(0,arr.length-1,arr);\\n}"
                    }
                ]
            },
            {
                "id": 1759091,
                "content": [
                    {
                        "username": "alimjanovf",
                        "content": "I have solved this problem without converting integer to string \\n`public bool IsPalindrome(int x) {\\n        var q = 0;\\n        var t = x;\\n        \\n        while (x!=0)\\n        {\\n            var s = 10;\\n            q = q * s + x % s;\\n            x /= s;\\n\\n            if( q == t && q >=0 )\\n                return true;\\n        }\\n        return q == 0 ? true : false ;     \\n    }.`"
                    },
                    {
                        "username": "MadanBaduwal",
                        "content": "I used the string reverse function to check the palindrome.\\nHere is the code\\n `class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        rv_string = str(x)[::-1]\\n        if str(x) == rv_string:\\n            return True\\n        else:\\n            return False`"
                    },
                    {
                        "username": "misuvasish114",
                        "content": "Steps:\\n1. negative numbers are not palindrome\\n2. calculate reverse of the number and compare with the original number\\n\\ncalculate reverse of a number:\\n```py\\nreverse(a):\\n     rev = 0\\n     while a != 0:\\n          rev = (rev*10) + (a%10)\\n          a = a/10\\n     return rev\\n```"
                    },
                    {
                        "username": "misuvasish114",
                        "content": "The time complexity can be reduced to O(N) to O(N/2) by only reversing the half number from the LSB and compare it its half from the MSB."
                    },
                    {
                        "username": "xsukhmeet",
                        "content": "String a=Integer.toString(x);\\n        String b=\"\";\\n        for(int i=a.length()-1;i>=0;i--){\\n            b+=a.charAt(i)+\"\";\\n        }\\n        if(a==b){\\n            return true;\\n        }\\n        return false\\n\\n\\nI have written this my 2 test cases are passing but first test case not passed.Anyone knowing what is the problem with this please respond."
                    },
                    {
                        "username": "TMuhammadqodir",
                        "content": "class Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        return str(x)==str(x)[::-1]"
                    },
                    {
                        "username": "kingctan",
                        "content": "My solution in Java without using string reverse, to integer array or any other push and pop stack trick. A bit long maybe someone can make it shorter.\n    public static boolean isPalindrome(int x) {\n          if (x < 0) return false;\n          if (x < 10) return true;\n          if (x % 10 == 0) return false;\n          int num = x;\n          int num2 = x;\n          int length = 0;\n    //find the length/size of the input integer.     \n       while (true) {\n              length++;\n              int quotient = num / 10;\n              if (quotient == 0) break;\n              num = quotient;\n           }\n\n        double pow = 0;\n       //Loop through the length of the integer and multiply each remain to the power of 10 * count of length.\n      //sum them up with double type instead of integer because if int x = 2147483647 when it's flipped to 7463847412 which is too big for integer\n        while (length > 0) {\n              int i = x % 10;\n              pow = pow + Math.pow(10, length - 1) * i;\n              int rem = x / 10;\n              if (rem == 0) break;\n              x = rem;\n              length--;\n        }\n          return num2 * 1.0 == pow;\n    }"
                    },
                    {
                        "username": "quangkelvin",
                        "content": "\\'class Solution {\\n    public boolean isPalindrome(int x) {\\n        if(x<0)return false;\\n        else{\\n            char [] numberArr = String.valueOf(x).toCharArray();\\n            int lastIndex=numberArr.length-1;\\n            int i=0;\\n\\n            while (lastIndex - i >= 0) {\\n                if(numberArr[i]==numberArr[lastIndex]){\\n                    i++;\\n                    lastIndex--;\\n                }else{\\n                    return false;\\n                }\\n            }\\n\\n        }\\n\\n        return true;\\n        \\n    }\\n}\\'"
                    },
                    {
                        "username": "goyalishika132",
                        "content": "else\\n        {  \\n        while(no>0)\\n        {\\n            int temp=x;\\n            rem=temp%10;\\n            no=temp/10;\\n            val= val*10+ rem;\\n        }\\n        if(val==x)\\n          return true;\\n        else\\n            return false; \\n        }\\n\\ncan someone help me out, I am not getting favorable output from this part"
                    },
                    {
                        "username": "tisaconundrum",
                        "content": "I bet there is a really easy bit manipulation that could pull this off, but I\\'m not smart enough to think through how that could work. \\uD83D\\uDE02"
                    },
                    {
                        "username": "Aspirant_coder",
                        "content": "can someone explain me why I am getting reached end of file error in this code.\\n\\nclass Solution {\\n     public static int helper(int si,int ei,int[]arr){\\n        if(si>=ei){\\n            return 1;\\n        }\\n        if(si!= ei){\\n            return 0;\\n        }\\n        return isPalindrome(si+1,ei-1,arr);\\n        \\n    }\\n    public boolean isPalindrome(int num) {\\n        String str = (new Integer(number)).toString();\\n    char[] chArr = str.toCharArray();\\n    int[] arr = new int[chArr.length];\\n    for (int i = 0; i< chArr.length; i++) {\\n        arr[i] = Character.getNumericValue(chArr[i]);\\n    }\\n        return helper(0,arr.length-1,arr);\\n}"
                    }
                ]
            },
            {
                "id": 1758894,
                "content": [
                    {
                        "username": "lucky_jain",
                        "content": "I am able to get the correct ans in other idle but not here "
                    },
                    {
                        "username": "mohiuddinr22",
                        "content": "why does none of the solutions work for 1001???"
                    },
                    {
                        "username": "tarif_zaman_",
                        "content": "Its running but why its not accepting what problem in line 7?\\n\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n    int n = 0;\\n    int a = x;\\n    while(x > 0) {\\n    n = n * 10 + x%10;\\n    x /= 10;\\n    }\\n    if(n==a){\\n        return true;\\n    }\\n    return false;\\n    }\\n};"
                    },
                    {
                        "username": "sivarajraja",
                        "content": "if a single digit number would be a palindrome"
                    },
                    {
                        "username": "savy07",
                        "content": "var isPalindrome = function(x) {\\n    let s=x.toString().split(\"\");\\n    let ispalindrom=true;\\n  for(let i=0;i<s.length/2;i++){\\n     if(s[i]!== s[s.length-i-1]){\\n       ispalindrom= false;\\n     }\\n  }\\n  return ispalindrom;\\n};\\n"
                    },
                    {
                        "username": "hemang-h",
                        "content": "I am trying to solve this question, and this is my code: \\n ```class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x < 0 || (x%10==0 && x != 0 ) ){\\n            return false;            \\n        }\\n        else {\\n            int reverseNum = 0;\\n            while ( x > 0) {\\n                reverseNum = reverseNum * 10 +  x % 10;\\n                x /= 10;\\n            }\\n            if ( x == reverseNum ) return true;\\n            else return false;\\n        }\\n    }\\n}; \\n```\\nOn running this, My testcase is failing for the value \\'121\\' and I don\\'t get it why? Can anyone help me out here? "
                    },
                    {
                        "username": "stack-prince",
                        "content": "Easy To understand : \\n\\nLanguage Python03\\n\\nCode :\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        \\n        sum = 0\\n        temp = 0\\n        count = 1\\n        ov = x\\n        if (x < 0) or (x != 0 and x% 10 == 0)  : \\n            return False\\n        while (x != 0):\\n            rem = x % 10\\n            sum = sum*10 + rem\\n            x = x // 10\\n        if sum == ov:\\n            return True\\n        else :\\n            return False"
                    },
                    {
                        "username": "damivx",
                        "content": "can someone tell me what is wrong with this code please\\nbool isPalindrome(int x){\\n    int reverse = 0, reminder;\\n    if (x < 0 || (x % 10 == 0 && x!=0) )\\n    {\\n        return false;\\n    }     \\n    while(x!=0)\\n    {\\n        reminder = x % 10;\\n        reverse = reverse * 10 + reminder;\\n        x/=10;\\n    }\\n    if(x == reverse){\\n     return true;\\n     }\\n    else \\n    return false;\\n\\n}\\nit seems to not run for the most basic palindrome case (121) but is correct for the other two case could someone point out if there is a mistake I am making here."
                    },
                    {
                        "username": "zohaib53hassan",
                        "content": "A Simple Solution for all Palindrome problems\\n\\ndef isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        return str(x)[::-1]==str(x)"
                    },
                    {
                        "username": "rajkumr",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int store=x;\\n        long int sum=0;\\n        \\n        while(store>0){\\n            int r=store%10;\\n            sum=sum*10+r;\\n            store=store/10;\\n        }\\n        if(sum == x) {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1758602,
                "content": [
                    {
                        "username": "lucky_jain",
                        "content": "I am able to get the correct ans in other idle but not here "
                    },
                    {
                        "username": "mohiuddinr22",
                        "content": "why does none of the solutions work for 1001???"
                    },
                    {
                        "username": "tarif_zaman_",
                        "content": "Its running but why its not accepting what problem in line 7?\\n\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n    int n = 0;\\n    int a = x;\\n    while(x > 0) {\\n    n = n * 10 + x%10;\\n    x /= 10;\\n    }\\n    if(n==a){\\n        return true;\\n    }\\n    return false;\\n    }\\n};"
                    },
                    {
                        "username": "sivarajraja",
                        "content": "if a single digit number would be a palindrome"
                    },
                    {
                        "username": "savy07",
                        "content": "var isPalindrome = function(x) {\\n    let s=x.toString().split(\"\");\\n    let ispalindrom=true;\\n  for(let i=0;i<s.length/2;i++){\\n     if(s[i]!== s[s.length-i-1]){\\n       ispalindrom= false;\\n     }\\n  }\\n  return ispalindrom;\\n};\\n"
                    },
                    {
                        "username": "hemang-h",
                        "content": "I am trying to solve this question, and this is my code: \\n ```class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x < 0 || (x%10==0 && x != 0 ) ){\\n            return false;            \\n        }\\n        else {\\n            int reverseNum = 0;\\n            while ( x > 0) {\\n                reverseNum = reverseNum * 10 +  x % 10;\\n                x /= 10;\\n            }\\n            if ( x == reverseNum ) return true;\\n            else return false;\\n        }\\n    }\\n}; \\n```\\nOn running this, My testcase is failing for the value \\'121\\' and I don\\'t get it why? Can anyone help me out here? "
                    },
                    {
                        "username": "stack-prince",
                        "content": "Easy To understand : \\n\\nLanguage Python03\\n\\nCode :\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        \\n        sum = 0\\n        temp = 0\\n        count = 1\\n        ov = x\\n        if (x < 0) or (x != 0 and x% 10 == 0)  : \\n            return False\\n        while (x != 0):\\n            rem = x % 10\\n            sum = sum*10 + rem\\n            x = x // 10\\n        if sum == ov:\\n            return True\\n        else :\\n            return False"
                    },
                    {
                        "username": "damivx",
                        "content": "can someone tell me what is wrong with this code please\\nbool isPalindrome(int x){\\n    int reverse = 0, reminder;\\n    if (x < 0 || (x % 10 == 0 && x!=0) )\\n    {\\n        return false;\\n    }     \\n    while(x!=0)\\n    {\\n        reminder = x % 10;\\n        reverse = reverse * 10 + reminder;\\n        x/=10;\\n    }\\n    if(x == reverse){\\n     return true;\\n     }\\n    else \\n    return false;\\n\\n}\\nit seems to not run for the most basic palindrome case (121) but is correct for the other two case could someone point out if there is a mistake I am making here."
                    },
                    {
                        "username": "zohaib53hassan",
                        "content": "A Simple Solution for all Palindrome problems\\n\\ndef isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        return str(x)[::-1]==str(x)"
                    },
                    {
                        "username": "rajkumr",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int store=x;\\n        long int sum=0;\\n        \\n        while(store>0){\\n            int r=store%10;\\n            sum=sum*10+r;\\n            store=store/10;\\n        }\\n        if(sum == x) {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1753201,
                "content": [
                    {
                        "username": "lucky_jain",
                        "content": "I am able to get the correct ans in other idle but not here "
                    },
                    {
                        "username": "mohiuddinr22",
                        "content": "why does none of the solutions work for 1001???"
                    },
                    {
                        "username": "tarif_zaman_",
                        "content": "Its running but why its not accepting what problem in line 7?\\n\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n    int n = 0;\\n    int a = x;\\n    while(x > 0) {\\n    n = n * 10 + x%10;\\n    x /= 10;\\n    }\\n    if(n==a){\\n        return true;\\n    }\\n    return false;\\n    }\\n};"
                    },
                    {
                        "username": "sivarajraja",
                        "content": "if a single digit number would be a palindrome"
                    },
                    {
                        "username": "savy07",
                        "content": "var isPalindrome = function(x) {\\n    let s=x.toString().split(\"\");\\n    let ispalindrom=true;\\n  for(let i=0;i<s.length/2;i++){\\n     if(s[i]!== s[s.length-i-1]){\\n       ispalindrom= false;\\n     }\\n  }\\n  return ispalindrom;\\n};\\n"
                    },
                    {
                        "username": "hemang-h",
                        "content": "I am trying to solve this question, and this is my code: \\n ```class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x < 0 || (x%10==0 && x != 0 ) ){\\n            return false;            \\n        }\\n        else {\\n            int reverseNum = 0;\\n            while ( x > 0) {\\n                reverseNum = reverseNum * 10 +  x % 10;\\n                x /= 10;\\n            }\\n            if ( x == reverseNum ) return true;\\n            else return false;\\n        }\\n    }\\n}; \\n```\\nOn running this, My testcase is failing for the value \\'121\\' and I don\\'t get it why? Can anyone help me out here? "
                    },
                    {
                        "username": "stack-prince",
                        "content": "Easy To understand : \\n\\nLanguage Python03\\n\\nCode :\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        \\n        sum = 0\\n        temp = 0\\n        count = 1\\n        ov = x\\n        if (x < 0) or (x != 0 and x% 10 == 0)  : \\n            return False\\n        while (x != 0):\\n            rem = x % 10\\n            sum = sum*10 + rem\\n            x = x // 10\\n        if sum == ov:\\n            return True\\n        else :\\n            return False"
                    },
                    {
                        "username": "damivx",
                        "content": "can someone tell me what is wrong with this code please\\nbool isPalindrome(int x){\\n    int reverse = 0, reminder;\\n    if (x < 0 || (x % 10 == 0 && x!=0) )\\n    {\\n        return false;\\n    }     \\n    while(x!=0)\\n    {\\n        reminder = x % 10;\\n        reverse = reverse * 10 + reminder;\\n        x/=10;\\n    }\\n    if(x == reverse){\\n     return true;\\n     }\\n    else \\n    return false;\\n\\n}\\nit seems to not run for the most basic palindrome case (121) but is correct for the other two case could someone point out if there is a mistake I am making here."
                    },
                    {
                        "username": "zohaib53hassan",
                        "content": "A Simple Solution for all Palindrome problems\\n\\ndef isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        return str(x)[::-1]==str(x)"
                    },
                    {
                        "username": "rajkumr",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int store=x;\\n        long int sum=0;\\n        \\n        while(store>0){\\n            int r=store%10;\\n            sum=sum*10+r;\\n            store=store/10;\\n        }\\n        if(sum == x) {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1749355,
                "content": [
                    {
                        "username": "lucky_jain",
                        "content": "I am able to get the correct ans in other idle but not here "
                    },
                    {
                        "username": "mohiuddinr22",
                        "content": "why does none of the solutions work for 1001???"
                    },
                    {
                        "username": "tarif_zaman_",
                        "content": "Its running but why its not accepting what problem in line 7?\\n\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n    int n = 0;\\n    int a = x;\\n    while(x > 0) {\\n    n = n * 10 + x%10;\\n    x /= 10;\\n    }\\n    if(n==a){\\n        return true;\\n    }\\n    return false;\\n    }\\n};"
                    },
                    {
                        "username": "sivarajraja",
                        "content": "if a single digit number would be a palindrome"
                    },
                    {
                        "username": "savy07",
                        "content": "var isPalindrome = function(x) {\\n    let s=x.toString().split(\"\");\\n    let ispalindrom=true;\\n  for(let i=0;i<s.length/2;i++){\\n     if(s[i]!== s[s.length-i-1]){\\n       ispalindrom= false;\\n     }\\n  }\\n  return ispalindrom;\\n};\\n"
                    },
                    {
                        "username": "hemang-h",
                        "content": "I am trying to solve this question, and this is my code: \\n ```class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x < 0 || (x%10==0 && x != 0 ) ){\\n            return false;            \\n        }\\n        else {\\n            int reverseNum = 0;\\n            while ( x > 0) {\\n                reverseNum = reverseNum * 10 +  x % 10;\\n                x /= 10;\\n            }\\n            if ( x == reverseNum ) return true;\\n            else return false;\\n        }\\n    }\\n}; \\n```\\nOn running this, My testcase is failing for the value \\'121\\' and I don\\'t get it why? Can anyone help me out here? "
                    },
                    {
                        "username": "stack-prince",
                        "content": "Easy To understand : \\n\\nLanguage Python03\\n\\nCode :\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        \\n        sum = 0\\n        temp = 0\\n        count = 1\\n        ov = x\\n        if (x < 0) or (x != 0 and x% 10 == 0)  : \\n            return False\\n        while (x != 0):\\n            rem = x % 10\\n            sum = sum*10 + rem\\n            x = x // 10\\n        if sum == ov:\\n            return True\\n        else :\\n            return False"
                    },
                    {
                        "username": "damivx",
                        "content": "can someone tell me what is wrong with this code please\\nbool isPalindrome(int x){\\n    int reverse = 0, reminder;\\n    if (x < 0 || (x % 10 == 0 && x!=0) )\\n    {\\n        return false;\\n    }     \\n    while(x!=0)\\n    {\\n        reminder = x % 10;\\n        reverse = reverse * 10 + reminder;\\n        x/=10;\\n    }\\n    if(x == reverse){\\n     return true;\\n     }\\n    else \\n    return false;\\n\\n}\\nit seems to not run for the most basic palindrome case (121) but is correct for the other two case could someone point out if there is a mistake I am making here."
                    },
                    {
                        "username": "zohaib53hassan",
                        "content": "A Simple Solution for all Palindrome problems\\n\\ndef isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        return str(x)[::-1]==str(x)"
                    },
                    {
                        "username": "rajkumr",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int store=x;\\n        long int sum=0;\\n        \\n        while(store>0){\\n            int r=store%10;\\n            sum=sum*10+r;\\n            store=store/10;\\n        }\\n        if(sum == x) {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1746135,
                "content": [
                    {
                        "username": "lucky_jain",
                        "content": "I am able to get the correct ans in other idle but not here "
                    },
                    {
                        "username": "mohiuddinr22",
                        "content": "why does none of the solutions work for 1001???"
                    },
                    {
                        "username": "tarif_zaman_",
                        "content": "Its running but why its not accepting what problem in line 7?\\n\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n    int n = 0;\\n    int a = x;\\n    while(x > 0) {\\n    n = n * 10 + x%10;\\n    x /= 10;\\n    }\\n    if(n==a){\\n        return true;\\n    }\\n    return false;\\n    }\\n};"
                    },
                    {
                        "username": "sivarajraja",
                        "content": "if a single digit number would be a palindrome"
                    },
                    {
                        "username": "savy07",
                        "content": "var isPalindrome = function(x) {\\n    let s=x.toString().split(\"\");\\n    let ispalindrom=true;\\n  for(let i=0;i<s.length/2;i++){\\n     if(s[i]!== s[s.length-i-1]){\\n       ispalindrom= false;\\n     }\\n  }\\n  return ispalindrom;\\n};\\n"
                    },
                    {
                        "username": "hemang-h",
                        "content": "I am trying to solve this question, and this is my code: \\n ```class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x < 0 || (x%10==0 && x != 0 ) ){\\n            return false;            \\n        }\\n        else {\\n            int reverseNum = 0;\\n            while ( x > 0) {\\n                reverseNum = reverseNum * 10 +  x % 10;\\n                x /= 10;\\n            }\\n            if ( x == reverseNum ) return true;\\n            else return false;\\n        }\\n    }\\n}; \\n```\\nOn running this, My testcase is failing for the value \\'121\\' and I don\\'t get it why? Can anyone help me out here? "
                    },
                    {
                        "username": "stack-prince",
                        "content": "Easy To understand : \\n\\nLanguage Python03\\n\\nCode :\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        \\n        sum = 0\\n        temp = 0\\n        count = 1\\n        ov = x\\n        if (x < 0) or (x != 0 and x% 10 == 0)  : \\n            return False\\n        while (x != 0):\\n            rem = x % 10\\n            sum = sum*10 + rem\\n            x = x // 10\\n        if sum == ov:\\n            return True\\n        else :\\n            return False"
                    },
                    {
                        "username": "damivx",
                        "content": "can someone tell me what is wrong with this code please\\nbool isPalindrome(int x){\\n    int reverse = 0, reminder;\\n    if (x < 0 || (x % 10 == 0 && x!=0) )\\n    {\\n        return false;\\n    }     \\n    while(x!=0)\\n    {\\n        reminder = x % 10;\\n        reverse = reverse * 10 + reminder;\\n        x/=10;\\n    }\\n    if(x == reverse){\\n     return true;\\n     }\\n    else \\n    return false;\\n\\n}\\nit seems to not run for the most basic palindrome case (121) but is correct for the other two case could someone point out if there is a mistake I am making here."
                    },
                    {
                        "username": "zohaib53hassan",
                        "content": "A Simple Solution for all Palindrome problems\\n\\ndef isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        return str(x)[::-1]==str(x)"
                    },
                    {
                        "username": "rajkumr",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int store=x;\\n        long int sum=0;\\n        \\n        while(store>0){\\n            int r=store%10;\\n            sum=sum*10+r;\\n            store=store/10;\\n        }\\n        if(sum == x) {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1743546,
                "content": [
                    {
                        "username": "lucky_jain",
                        "content": "I am able to get the correct ans in other idle but not here "
                    },
                    {
                        "username": "mohiuddinr22",
                        "content": "why does none of the solutions work for 1001???"
                    },
                    {
                        "username": "tarif_zaman_",
                        "content": "Its running but why its not accepting what problem in line 7?\\n\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n    int n = 0;\\n    int a = x;\\n    while(x > 0) {\\n    n = n * 10 + x%10;\\n    x /= 10;\\n    }\\n    if(n==a){\\n        return true;\\n    }\\n    return false;\\n    }\\n};"
                    },
                    {
                        "username": "sivarajraja",
                        "content": "if a single digit number would be a palindrome"
                    },
                    {
                        "username": "savy07",
                        "content": "var isPalindrome = function(x) {\\n    let s=x.toString().split(\"\");\\n    let ispalindrom=true;\\n  for(let i=0;i<s.length/2;i++){\\n     if(s[i]!== s[s.length-i-1]){\\n       ispalindrom= false;\\n     }\\n  }\\n  return ispalindrom;\\n};\\n"
                    },
                    {
                        "username": "hemang-h",
                        "content": "I am trying to solve this question, and this is my code: \\n ```class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x < 0 || (x%10==0 && x != 0 ) ){\\n            return false;            \\n        }\\n        else {\\n            int reverseNum = 0;\\n            while ( x > 0) {\\n                reverseNum = reverseNum * 10 +  x % 10;\\n                x /= 10;\\n            }\\n            if ( x == reverseNum ) return true;\\n            else return false;\\n        }\\n    }\\n}; \\n```\\nOn running this, My testcase is failing for the value \\'121\\' and I don\\'t get it why? Can anyone help me out here? "
                    },
                    {
                        "username": "stack-prince",
                        "content": "Easy To understand : \\n\\nLanguage Python03\\n\\nCode :\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        \\n        sum = 0\\n        temp = 0\\n        count = 1\\n        ov = x\\n        if (x < 0) or (x != 0 and x% 10 == 0)  : \\n            return False\\n        while (x != 0):\\n            rem = x % 10\\n            sum = sum*10 + rem\\n            x = x // 10\\n        if sum == ov:\\n            return True\\n        else :\\n            return False"
                    },
                    {
                        "username": "damivx",
                        "content": "can someone tell me what is wrong with this code please\\nbool isPalindrome(int x){\\n    int reverse = 0, reminder;\\n    if (x < 0 || (x % 10 == 0 && x!=0) )\\n    {\\n        return false;\\n    }     \\n    while(x!=0)\\n    {\\n        reminder = x % 10;\\n        reverse = reverse * 10 + reminder;\\n        x/=10;\\n    }\\n    if(x == reverse){\\n     return true;\\n     }\\n    else \\n    return false;\\n\\n}\\nit seems to not run for the most basic palindrome case (121) but is correct for the other two case could someone point out if there is a mistake I am making here."
                    },
                    {
                        "username": "zohaib53hassan",
                        "content": "A Simple Solution for all Palindrome problems\\n\\ndef isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        return str(x)[::-1]==str(x)"
                    },
                    {
                        "username": "rajkumr",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int store=x;\\n        long int sum=0;\\n        \\n        while(store>0){\\n            int r=store%10;\\n            sum=sum*10+r;\\n            store=store/10;\\n        }\\n        if(sum == x) {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1743465,
                "content": [
                    {
                        "username": "lucky_jain",
                        "content": "I am able to get the correct ans in other idle but not here "
                    },
                    {
                        "username": "mohiuddinr22",
                        "content": "why does none of the solutions work for 1001???"
                    },
                    {
                        "username": "tarif_zaman_",
                        "content": "Its running but why its not accepting what problem in line 7?\\n\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n    int n = 0;\\n    int a = x;\\n    while(x > 0) {\\n    n = n * 10 + x%10;\\n    x /= 10;\\n    }\\n    if(n==a){\\n        return true;\\n    }\\n    return false;\\n    }\\n};"
                    },
                    {
                        "username": "sivarajraja",
                        "content": "if a single digit number would be a palindrome"
                    },
                    {
                        "username": "savy07",
                        "content": "var isPalindrome = function(x) {\\n    let s=x.toString().split(\"\");\\n    let ispalindrom=true;\\n  for(let i=0;i<s.length/2;i++){\\n     if(s[i]!== s[s.length-i-1]){\\n       ispalindrom= false;\\n     }\\n  }\\n  return ispalindrom;\\n};\\n"
                    },
                    {
                        "username": "hemang-h",
                        "content": "I am trying to solve this question, and this is my code: \\n ```class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x < 0 || (x%10==0 && x != 0 ) ){\\n            return false;            \\n        }\\n        else {\\n            int reverseNum = 0;\\n            while ( x > 0) {\\n                reverseNum = reverseNum * 10 +  x % 10;\\n                x /= 10;\\n            }\\n            if ( x == reverseNum ) return true;\\n            else return false;\\n        }\\n    }\\n}; \\n```\\nOn running this, My testcase is failing for the value \\'121\\' and I don\\'t get it why? Can anyone help me out here? "
                    },
                    {
                        "username": "stack-prince",
                        "content": "Easy To understand : \\n\\nLanguage Python03\\n\\nCode :\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        \\n        sum = 0\\n        temp = 0\\n        count = 1\\n        ov = x\\n        if (x < 0) or (x != 0 and x% 10 == 0)  : \\n            return False\\n        while (x != 0):\\n            rem = x % 10\\n            sum = sum*10 + rem\\n            x = x // 10\\n        if sum == ov:\\n            return True\\n        else :\\n            return False"
                    },
                    {
                        "username": "damivx",
                        "content": "can someone tell me what is wrong with this code please\\nbool isPalindrome(int x){\\n    int reverse = 0, reminder;\\n    if (x < 0 || (x % 10 == 0 && x!=0) )\\n    {\\n        return false;\\n    }     \\n    while(x!=0)\\n    {\\n        reminder = x % 10;\\n        reverse = reverse * 10 + reminder;\\n        x/=10;\\n    }\\n    if(x == reverse){\\n     return true;\\n     }\\n    else \\n    return false;\\n\\n}\\nit seems to not run for the most basic palindrome case (121) but is correct for the other two case could someone point out if there is a mistake I am making here."
                    },
                    {
                        "username": "zohaib53hassan",
                        "content": "A Simple Solution for all Palindrome problems\\n\\ndef isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        return str(x)[::-1]==str(x)"
                    },
                    {
                        "username": "rajkumr",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int store=x;\\n        long int sum=0;\\n        \\n        while(store>0){\\n            int r=store%10;\\n            sum=sum*10+r;\\n            store=store/10;\\n        }\\n        if(sum == x) {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1743067,
                "content": [
                    {
                        "username": "lucky_jain",
                        "content": "I am able to get the correct ans in other idle but not here "
                    },
                    {
                        "username": "mohiuddinr22",
                        "content": "why does none of the solutions work for 1001???"
                    },
                    {
                        "username": "tarif_zaman_",
                        "content": "Its running but why its not accepting what problem in line 7?\\n\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n    int n = 0;\\n    int a = x;\\n    while(x > 0) {\\n    n = n * 10 + x%10;\\n    x /= 10;\\n    }\\n    if(n==a){\\n        return true;\\n    }\\n    return false;\\n    }\\n};"
                    },
                    {
                        "username": "sivarajraja",
                        "content": "if a single digit number would be a palindrome"
                    },
                    {
                        "username": "savy07",
                        "content": "var isPalindrome = function(x) {\\n    let s=x.toString().split(\"\");\\n    let ispalindrom=true;\\n  for(let i=0;i<s.length/2;i++){\\n     if(s[i]!== s[s.length-i-1]){\\n       ispalindrom= false;\\n     }\\n  }\\n  return ispalindrom;\\n};\\n"
                    },
                    {
                        "username": "hemang-h",
                        "content": "I am trying to solve this question, and this is my code: \\n ```class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x < 0 || (x%10==0 && x != 0 ) ){\\n            return false;            \\n        }\\n        else {\\n            int reverseNum = 0;\\n            while ( x > 0) {\\n                reverseNum = reverseNum * 10 +  x % 10;\\n                x /= 10;\\n            }\\n            if ( x == reverseNum ) return true;\\n            else return false;\\n        }\\n    }\\n}; \\n```\\nOn running this, My testcase is failing for the value \\'121\\' and I don\\'t get it why? Can anyone help me out here? "
                    },
                    {
                        "username": "stack-prince",
                        "content": "Easy To understand : \\n\\nLanguage Python03\\n\\nCode :\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        \\n        sum = 0\\n        temp = 0\\n        count = 1\\n        ov = x\\n        if (x < 0) or (x != 0 and x% 10 == 0)  : \\n            return False\\n        while (x != 0):\\n            rem = x % 10\\n            sum = sum*10 + rem\\n            x = x // 10\\n        if sum == ov:\\n            return True\\n        else :\\n            return False"
                    },
                    {
                        "username": "damivx",
                        "content": "can someone tell me what is wrong with this code please\\nbool isPalindrome(int x){\\n    int reverse = 0, reminder;\\n    if (x < 0 || (x % 10 == 0 && x!=0) )\\n    {\\n        return false;\\n    }     \\n    while(x!=0)\\n    {\\n        reminder = x % 10;\\n        reverse = reverse * 10 + reminder;\\n        x/=10;\\n    }\\n    if(x == reverse){\\n     return true;\\n     }\\n    else \\n    return false;\\n\\n}\\nit seems to not run for the most basic palindrome case (121) but is correct for the other two case could someone point out if there is a mistake I am making here."
                    },
                    {
                        "username": "zohaib53hassan",
                        "content": "A Simple Solution for all Palindrome problems\\n\\ndef isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        return str(x)[::-1]==str(x)"
                    },
                    {
                        "username": "rajkumr",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int store=x;\\n        long int sum=0;\\n        \\n        while(store>0){\\n            int r=store%10;\\n            sum=sum*10+r;\\n            store=store/10;\\n        }\\n        if(sum == x) {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1740130,
                "content": [
                    {
                        "username": "lucky_jain",
                        "content": "I am able to get the correct ans in other idle but not here "
                    },
                    {
                        "username": "mohiuddinr22",
                        "content": "why does none of the solutions work for 1001???"
                    },
                    {
                        "username": "tarif_zaman_",
                        "content": "Its running but why its not accepting what problem in line 7?\\n\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n    int n = 0;\\n    int a = x;\\n    while(x > 0) {\\n    n = n * 10 + x%10;\\n    x /= 10;\\n    }\\n    if(n==a){\\n        return true;\\n    }\\n    return false;\\n    }\\n};"
                    },
                    {
                        "username": "sivarajraja",
                        "content": "if a single digit number would be a palindrome"
                    },
                    {
                        "username": "savy07",
                        "content": "var isPalindrome = function(x) {\\n    let s=x.toString().split(\"\");\\n    let ispalindrom=true;\\n  for(let i=0;i<s.length/2;i++){\\n     if(s[i]!== s[s.length-i-1]){\\n       ispalindrom= false;\\n     }\\n  }\\n  return ispalindrom;\\n};\\n"
                    },
                    {
                        "username": "hemang-h",
                        "content": "I am trying to solve this question, and this is my code: \\n ```class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x < 0 || (x%10==0 && x != 0 ) ){\\n            return false;            \\n        }\\n        else {\\n            int reverseNum = 0;\\n            while ( x > 0) {\\n                reverseNum = reverseNum * 10 +  x % 10;\\n                x /= 10;\\n            }\\n            if ( x == reverseNum ) return true;\\n            else return false;\\n        }\\n    }\\n}; \\n```\\nOn running this, My testcase is failing for the value \\'121\\' and I don\\'t get it why? Can anyone help me out here? "
                    },
                    {
                        "username": "stack-prince",
                        "content": "Easy To understand : \\n\\nLanguage Python03\\n\\nCode :\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        \\n        sum = 0\\n        temp = 0\\n        count = 1\\n        ov = x\\n        if (x < 0) or (x != 0 and x% 10 == 0)  : \\n            return False\\n        while (x != 0):\\n            rem = x % 10\\n            sum = sum*10 + rem\\n            x = x // 10\\n        if sum == ov:\\n            return True\\n        else :\\n            return False"
                    },
                    {
                        "username": "damivx",
                        "content": "can someone tell me what is wrong with this code please\\nbool isPalindrome(int x){\\n    int reverse = 0, reminder;\\n    if (x < 0 || (x % 10 == 0 && x!=0) )\\n    {\\n        return false;\\n    }     \\n    while(x!=0)\\n    {\\n        reminder = x % 10;\\n        reverse = reverse * 10 + reminder;\\n        x/=10;\\n    }\\n    if(x == reverse){\\n     return true;\\n     }\\n    else \\n    return false;\\n\\n}\\nit seems to not run for the most basic palindrome case (121) but is correct for the other two case could someone point out if there is a mistake I am making here."
                    },
                    {
                        "username": "zohaib53hassan",
                        "content": "A Simple Solution for all Palindrome problems\\n\\ndef isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        return str(x)[::-1]==str(x)"
                    },
                    {
                        "username": "rajkumr",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int store=x;\\n        long int sum=0;\\n        \\n        while(store>0){\\n            int r=store%10;\\n            sum=sum*10+r;\\n            store=store/10;\\n        }\\n        if(sum == x) {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1740069,
                "content": [
                    {
                        "username": "lucky_jain",
                        "content": "I am able to get the correct ans in other idle but not here "
                    },
                    {
                        "username": "mohiuddinr22",
                        "content": "why does none of the solutions work for 1001???"
                    },
                    {
                        "username": "tarif_zaman_",
                        "content": "Its running but why its not accepting what problem in line 7?\\n\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n    int n = 0;\\n    int a = x;\\n    while(x > 0) {\\n    n = n * 10 + x%10;\\n    x /= 10;\\n    }\\n    if(n==a){\\n        return true;\\n    }\\n    return false;\\n    }\\n};"
                    },
                    {
                        "username": "sivarajraja",
                        "content": "if a single digit number would be a palindrome"
                    },
                    {
                        "username": "savy07",
                        "content": "var isPalindrome = function(x) {\\n    let s=x.toString().split(\"\");\\n    let ispalindrom=true;\\n  for(let i=0;i<s.length/2;i++){\\n     if(s[i]!== s[s.length-i-1]){\\n       ispalindrom= false;\\n     }\\n  }\\n  return ispalindrom;\\n};\\n"
                    },
                    {
                        "username": "hemang-h",
                        "content": "I am trying to solve this question, and this is my code: \\n ```class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x < 0 || (x%10==0 && x != 0 ) ){\\n            return false;            \\n        }\\n        else {\\n            int reverseNum = 0;\\n            while ( x > 0) {\\n                reverseNum = reverseNum * 10 +  x % 10;\\n                x /= 10;\\n            }\\n            if ( x == reverseNum ) return true;\\n            else return false;\\n        }\\n    }\\n}; \\n```\\nOn running this, My testcase is failing for the value \\'121\\' and I don\\'t get it why? Can anyone help me out here? "
                    },
                    {
                        "username": "stack-prince",
                        "content": "Easy To understand : \\n\\nLanguage Python03\\n\\nCode :\\nclass Solution:\\n    def isPalindrome(self, x: int) -> bool:\\n        \\n        sum = 0\\n        temp = 0\\n        count = 1\\n        ov = x\\n        if (x < 0) or (x != 0 and x% 10 == 0)  : \\n            return False\\n        while (x != 0):\\n            rem = x % 10\\n            sum = sum*10 + rem\\n            x = x // 10\\n        if sum == ov:\\n            return True\\n        else :\\n            return False"
                    },
                    {
                        "username": "damivx",
                        "content": "can someone tell me what is wrong with this code please\\nbool isPalindrome(int x){\\n    int reverse = 0, reminder;\\n    if (x < 0 || (x % 10 == 0 && x!=0) )\\n    {\\n        return false;\\n    }     \\n    while(x!=0)\\n    {\\n        reminder = x % 10;\\n        reverse = reverse * 10 + reminder;\\n        x/=10;\\n    }\\n    if(x == reverse){\\n     return true;\\n     }\\n    else \\n    return false;\\n\\n}\\nit seems to not run for the most basic palindrome case (121) but is correct for the other two case could someone point out if there is a mistake I am making here."
                    },
                    {
                        "username": "zohaib53hassan",
                        "content": "A Simple Solution for all Palindrome problems\\n\\ndef isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        return str(x)[::-1]==str(x)"
                    },
                    {
                        "username": "rajkumr",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int store=x;\\n        long int sum=0;\\n        \\n        while(store>0){\\n            int r=store%10;\\n            sum=sum*10+r;\\n            store=store/10;\\n        }\\n        if(sum == x) {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};"
                    }
                ]
            },
            {
                "id": 1740068,
                "content": [
                    {
                        "username": "rajkumr",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int store=x;\\n        long int sum=0;\\n        \\n        while(store>0){\\n            int r=store%10;\\n            sum=sum*10+r;\\n            store=store/10;\\n        }\\n        if(sum == x) {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "mohdakram_30",
                        "content": "int ans=0;\\n        while(x!=0){\\n           \\n            int digit = x%10;\\n            ans= (ans*10) + digit;\\n            x=x/10;\\n             if((ans>INT_MAX/10)||(ans<INT_MIN/10))\\n            return false;\\n            if(ans==x)\\n            return true;\\n        }\\n        return false; \\ncan someone tell me what is wrong in this "
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || Beats 100% || Easy to Understand\\n\\nhttps://leetcode.com/problems/palindrome-number/solutions/2976350/simple-java-beats-98-easy-to-understand/"
                    },
                    {
                        "username": "abdoulkarim",
                        "content": "\\nreturn str(x) == str(x)[::-1]"
                    },
                    {
                        "username": "Prasanta_123",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        if(x<0)\\n        return false;\\n\\n        int rev=0;\\n        int n=x;\\n        while(n>0){\\n            rev=rev*10+n%10;\\n            n=n/10;\\n        }\\n        if(rev==x)\\n        return true;\\n        return false;\\n    }\\n}"
                    },
                    {
                        "username": "ghemanth2303",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n    \\n    if (x<0)\\n    return false;\\n       int d=0;\\n       while(x>0){\\n           d=x%10+d*10;\\n           x=x/10;\\n       }\\n           if(x==d)\\n           return true;\\n           else\\n           return false;\\n           \\n\\n       }\\n    \\n};\\n\\n// what is mistake in that\\n"
                    },
                    {
                        "username": "sakausha11",
                        "content": "u are comparing wrong values in the if condition. Because x will always become 0. store the value of x in another variable and then compare it with d"
                    },
                    {
                        "username": "priyankakumari6709",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        \\n        if(x<0)\\n        return false;\\n        if(x==0)\\n        return true;\\n        if(x>=1&&x<10)\\n         return true;\\n         int rev=0;\\n         int tmp=x;\\n         while(tmp!=0)\\n        {\\n            int ld= tmp%10;\\n            rev= rev*10+ld;\\n            tmp/=10;\\n        }\\n        if(tmp==rev)\\n        return true;\\n        \\n        else\\n        return false;\\n    }\\n};\\n\\n\\nwhy this code is wrong?"
                    },
                    {
                        "username": "sakausha11",
                        "content": "Hey,\nin the 4th last line, i.e,  the if condition u are comparing wrong values. Change it to (x ==rev).\nAlso Change the datatype of rev to long instead of int... it will work then."
                    },
                    {
                        "username": "hemanth_asp",
                        "content": "bool isPalindrome(int x){\\n    int a=x;\\nint rev=0;\\nint lastdigi=0;\\nwhile(x>0)\\n{\\n    lastdigi=x%10;\\n    rev=rev*10+lastdigi;\\n    x=x/10;\\n}\\n\\n\\nif(a==rev && rev>0){\\n printf(\"true\");\\n}\\nelse{ printf(\"false\");\\n}\\nreturn 0;\\n}\\n\\n\\n\\nwhy the test case is being failed please check it and give an idea"
                    },
                    {
                        "username": "sakausha11",
                        "content": "can anybody tell why this approach isn\\'t working ? \\n\\npublic:\\n    long rev=0; \\n    bool isPalindrome(int x) {\\n        static int t = x;\\n        if(x<=0){\\n            if(rev==t) return 1;\\n            else return 0;\\n        }\\n        rev = rev*10 + x%10;\\n        x /= 10;\\n        return isPalindrome(x);\\n    }\\n}; "
                    },
                    {
                        "username": "ec1912",
                        "content": "`class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long int revNum = 0;\\n        long int Num = x;\\n\\n        while (Num > 0) {\\n\\n            long int LDigit = Num % 10;\\n            revNum = revNum * 10 + LDigit;\\n            Num = Num / 10;\\n        }\\n\\n        if (x == revNum) {\\n            return true;\\n        } else {\\n            return false;\\n        } \\n    }\\n}; `"
                    }
                ]
            },
            {
                "id": 1738472,
                "content": [
                    {
                        "username": "rajkumr",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int store=x;\\n        long int sum=0;\\n        \\n        while(store>0){\\n            int r=store%10;\\n            sum=sum*10+r;\\n            store=store/10;\\n        }\\n        if(sum == x) {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "mohdakram_30",
                        "content": "int ans=0;\\n        while(x!=0){\\n           \\n            int digit = x%10;\\n            ans= (ans*10) + digit;\\n            x=x/10;\\n             if((ans>INT_MAX/10)||(ans<INT_MIN/10))\\n            return false;\\n            if(ans==x)\\n            return true;\\n        }\\n        return false; \\ncan someone tell me what is wrong in this "
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || Beats 100% || Easy to Understand\\n\\nhttps://leetcode.com/problems/palindrome-number/solutions/2976350/simple-java-beats-98-easy-to-understand/"
                    },
                    {
                        "username": "abdoulkarim",
                        "content": "\\nreturn str(x) == str(x)[::-1]"
                    },
                    {
                        "username": "Prasanta_123",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        if(x<0)\\n        return false;\\n\\n        int rev=0;\\n        int n=x;\\n        while(n>0){\\n            rev=rev*10+n%10;\\n            n=n/10;\\n        }\\n        if(rev==x)\\n        return true;\\n        return false;\\n    }\\n}"
                    },
                    {
                        "username": "ghemanth2303",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n    \\n    if (x<0)\\n    return false;\\n       int d=0;\\n       while(x>0){\\n           d=x%10+d*10;\\n           x=x/10;\\n       }\\n           if(x==d)\\n           return true;\\n           else\\n           return false;\\n           \\n\\n       }\\n    \\n};\\n\\n// what is mistake in that\\n"
                    },
                    {
                        "username": "sakausha11",
                        "content": "u are comparing wrong values in the if condition. Because x will always become 0. store the value of x in another variable and then compare it with d"
                    },
                    {
                        "username": "priyankakumari6709",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        \\n        if(x<0)\\n        return false;\\n        if(x==0)\\n        return true;\\n        if(x>=1&&x<10)\\n         return true;\\n         int rev=0;\\n         int tmp=x;\\n         while(tmp!=0)\\n        {\\n            int ld= tmp%10;\\n            rev= rev*10+ld;\\n            tmp/=10;\\n        }\\n        if(tmp==rev)\\n        return true;\\n        \\n        else\\n        return false;\\n    }\\n};\\n\\n\\nwhy this code is wrong?"
                    },
                    {
                        "username": "sakausha11",
                        "content": "Hey,\nin the 4th last line, i.e,  the if condition u are comparing wrong values. Change it to (x ==rev).\nAlso Change the datatype of rev to long instead of int... it will work then."
                    },
                    {
                        "username": "hemanth_asp",
                        "content": "bool isPalindrome(int x){\\n    int a=x;\\nint rev=0;\\nint lastdigi=0;\\nwhile(x>0)\\n{\\n    lastdigi=x%10;\\n    rev=rev*10+lastdigi;\\n    x=x/10;\\n}\\n\\n\\nif(a==rev && rev>0){\\n printf(\"true\");\\n}\\nelse{ printf(\"false\");\\n}\\nreturn 0;\\n}\\n\\n\\n\\nwhy the test case is being failed please check it and give an idea"
                    },
                    {
                        "username": "sakausha11",
                        "content": "can anybody tell why this approach isn\\'t working ? \\n\\npublic:\\n    long rev=0; \\n    bool isPalindrome(int x) {\\n        static int t = x;\\n        if(x<=0){\\n            if(rev==t) return 1;\\n            else return 0;\\n        }\\n        rev = rev*10 + x%10;\\n        x /= 10;\\n        return isPalindrome(x);\\n    }\\n}; "
                    },
                    {
                        "username": "ec1912",
                        "content": "`class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long int revNum = 0;\\n        long int Num = x;\\n\\n        while (Num > 0) {\\n\\n            long int LDigit = Num % 10;\\n            revNum = revNum * 10 + LDigit;\\n            Num = Num / 10;\\n        }\\n\\n        if (x == revNum) {\\n            return true;\\n        } else {\\n            return false;\\n        } \\n    }\\n}; `"
                    }
                ]
            },
            {
                "id": 1738384,
                "content": [
                    {
                        "username": "rajkumr",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int store=x;\\n        long int sum=0;\\n        \\n        while(store>0){\\n            int r=store%10;\\n            sum=sum*10+r;\\n            store=store/10;\\n        }\\n        if(sum == x) {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "mohdakram_30",
                        "content": "int ans=0;\\n        while(x!=0){\\n           \\n            int digit = x%10;\\n            ans= (ans*10) + digit;\\n            x=x/10;\\n             if((ans>INT_MAX/10)||(ans<INT_MIN/10))\\n            return false;\\n            if(ans==x)\\n            return true;\\n        }\\n        return false; \\ncan someone tell me what is wrong in this "
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || Beats 100% || Easy to Understand\\n\\nhttps://leetcode.com/problems/palindrome-number/solutions/2976350/simple-java-beats-98-easy-to-understand/"
                    },
                    {
                        "username": "abdoulkarim",
                        "content": "\\nreturn str(x) == str(x)[::-1]"
                    },
                    {
                        "username": "Prasanta_123",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        if(x<0)\\n        return false;\\n\\n        int rev=0;\\n        int n=x;\\n        while(n>0){\\n            rev=rev*10+n%10;\\n            n=n/10;\\n        }\\n        if(rev==x)\\n        return true;\\n        return false;\\n    }\\n}"
                    },
                    {
                        "username": "ghemanth2303",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n    \\n    if (x<0)\\n    return false;\\n       int d=0;\\n       while(x>0){\\n           d=x%10+d*10;\\n           x=x/10;\\n       }\\n           if(x==d)\\n           return true;\\n           else\\n           return false;\\n           \\n\\n       }\\n    \\n};\\n\\n// what is mistake in that\\n"
                    },
                    {
                        "username": "sakausha11",
                        "content": "u are comparing wrong values in the if condition. Because x will always become 0. store the value of x in another variable and then compare it with d"
                    },
                    {
                        "username": "priyankakumari6709",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        \\n        if(x<0)\\n        return false;\\n        if(x==0)\\n        return true;\\n        if(x>=1&&x<10)\\n         return true;\\n         int rev=0;\\n         int tmp=x;\\n         while(tmp!=0)\\n        {\\n            int ld= tmp%10;\\n            rev= rev*10+ld;\\n            tmp/=10;\\n        }\\n        if(tmp==rev)\\n        return true;\\n        \\n        else\\n        return false;\\n    }\\n};\\n\\n\\nwhy this code is wrong?"
                    },
                    {
                        "username": "sakausha11",
                        "content": "Hey,\nin the 4th last line, i.e,  the if condition u are comparing wrong values. Change it to (x ==rev).\nAlso Change the datatype of rev to long instead of int... it will work then."
                    },
                    {
                        "username": "hemanth_asp",
                        "content": "bool isPalindrome(int x){\\n    int a=x;\\nint rev=0;\\nint lastdigi=0;\\nwhile(x>0)\\n{\\n    lastdigi=x%10;\\n    rev=rev*10+lastdigi;\\n    x=x/10;\\n}\\n\\n\\nif(a==rev && rev>0){\\n printf(\"true\");\\n}\\nelse{ printf(\"false\");\\n}\\nreturn 0;\\n}\\n\\n\\n\\nwhy the test case is being failed please check it and give an idea"
                    },
                    {
                        "username": "sakausha11",
                        "content": "can anybody tell why this approach isn\\'t working ? \\n\\npublic:\\n    long rev=0; \\n    bool isPalindrome(int x) {\\n        static int t = x;\\n        if(x<=0){\\n            if(rev==t) return 1;\\n            else return 0;\\n        }\\n        rev = rev*10 + x%10;\\n        x /= 10;\\n        return isPalindrome(x);\\n    }\\n}; "
                    },
                    {
                        "username": "ec1912",
                        "content": "`class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long int revNum = 0;\\n        long int Num = x;\\n\\n        while (Num > 0) {\\n\\n            long int LDigit = Num % 10;\\n            revNum = revNum * 10 + LDigit;\\n            Num = Num / 10;\\n        }\\n\\n        if (x == revNum) {\\n            return true;\\n        } else {\\n            return false;\\n        } \\n    }\\n}; `"
                    }
                ]
            },
            {
                "id": 1737817,
                "content": [
                    {
                        "username": "rajkumr",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int store=x;\\n        long int sum=0;\\n        \\n        while(store>0){\\n            int r=store%10;\\n            sum=sum*10+r;\\n            store=store/10;\\n        }\\n        if(sum == x) {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "mohdakram_30",
                        "content": "int ans=0;\\n        while(x!=0){\\n           \\n            int digit = x%10;\\n            ans= (ans*10) + digit;\\n            x=x/10;\\n             if((ans>INT_MAX/10)||(ans<INT_MIN/10))\\n            return false;\\n            if(ans==x)\\n            return true;\\n        }\\n        return false; \\ncan someone tell me what is wrong in this "
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || Beats 100% || Easy to Understand\\n\\nhttps://leetcode.com/problems/palindrome-number/solutions/2976350/simple-java-beats-98-easy-to-understand/"
                    },
                    {
                        "username": "abdoulkarim",
                        "content": "\\nreturn str(x) == str(x)[::-1]"
                    },
                    {
                        "username": "Prasanta_123",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        if(x<0)\\n        return false;\\n\\n        int rev=0;\\n        int n=x;\\n        while(n>0){\\n            rev=rev*10+n%10;\\n            n=n/10;\\n        }\\n        if(rev==x)\\n        return true;\\n        return false;\\n    }\\n}"
                    },
                    {
                        "username": "ghemanth2303",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n    \\n    if (x<0)\\n    return false;\\n       int d=0;\\n       while(x>0){\\n           d=x%10+d*10;\\n           x=x/10;\\n       }\\n           if(x==d)\\n           return true;\\n           else\\n           return false;\\n           \\n\\n       }\\n    \\n};\\n\\n// what is mistake in that\\n"
                    },
                    {
                        "username": "sakausha11",
                        "content": "u are comparing wrong values in the if condition. Because x will always become 0. store the value of x in another variable and then compare it with d"
                    },
                    {
                        "username": "priyankakumari6709",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        \\n        if(x<0)\\n        return false;\\n        if(x==0)\\n        return true;\\n        if(x>=1&&x<10)\\n         return true;\\n         int rev=0;\\n         int tmp=x;\\n         while(tmp!=0)\\n        {\\n            int ld= tmp%10;\\n            rev= rev*10+ld;\\n            tmp/=10;\\n        }\\n        if(tmp==rev)\\n        return true;\\n        \\n        else\\n        return false;\\n    }\\n};\\n\\n\\nwhy this code is wrong?"
                    },
                    {
                        "username": "sakausha11",
                        "content": "Hey,\nin the 4th last line, i.e,  the if condition u are comparing wrong values. Change it to (x ==rev).\nAlso Change the datatype of rev to long instead of int... it will work then."
                    },
                    {
                        "username": "hemanth_asp",
                        "content": "bool isPalindrome(int x){\\n    int a=x;\\nint rev=0;\\nint lastdigi=0;\\nwhile(x>0)\\n{\\n    lastdigi=x%10;\\n    rev=rev*10+lastdigi;\\n    x=x/10;\\n}\\n\\n\\nif(a==rev && rev>0){\\n printf(\"true\");\\n}\\nelse{ printf(\"false\");\\n}\\nreturn 0;\\n}\\n\\n\\n\\nwhy the test case is being failed please check it and give an idea"
                    },
                    {
                        "username": "sakausha11",
                        "content": "can anybody tell why this approach isn\\'t working ? \\n\\npublic:\\n    long rev=0; \\n    bool isPalindrome(int x) {\\n        static int t = x;\\n        if(x<=0){\\n            if(rev==t) return 1;\\n            else return 0;\\n        }\\n        rev = rev*10 + x%10;\\n        x /= 10;\\n        return isPalindrome(x);\\n    }\\n}; "
                    },
                    {
                        "username": "ec1912",
                        "content": "`class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long int revNum = 0;\\n        long int Num = x;\\n\\n        while (Num > 0) {\\n\\n            long int LDigit = Num % 10;\\n            revNum = revNum * 10 + LDigit;\\n            Num = Num / 10;\\n        }\\n\\n        if (x == revNum) {\\n            return true;\\n        } else {\\n            return false;\\n        } \\n    }\\n}; `"
                    }
                ]
            },
            {
                "id": 1736747,
                "content": [
                    {
                        "username": "rajkumr",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int store=x;\\n        long int sum=0;\\n        \\n        while(store>0){\\n            int r=store%10;\\n            sum=sum*10+r;\\n            store=store/10;\\n        }\\n        if(sum == x) {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "mohdakram_30",
                        "content": "int ans=0;\\n        while(x!=0){\\n           \\n            int digit = x%10;\\n            ans= (ans*10) + digit;\\n            x=x/10;\\n             if((ans>INT_MAX/10)||(ans<INT_MIN/10))\\n            return false;\\n            if(ans==x)\\n            return true;\\n        }\\n        return false; \\ncan someone tell me what is wrong in this "
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || Beats 100% || Easy to Understand\\n\\nhttps://leetcode.com/problems/palindrome-number/solutions/2976350/simple-java-beats-98-easy-to-understand/"
                    },
                    {
                        "username": "abdoulkarim",
                        "content": "\\nreturn str(x) == str(x)[::-1]"
                    },
                    {
                        "username": "Prasanta_123",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        if(x<0)\\n        return false;\\n\\n        int rev=0;\\n        int n=x;\\n        while(n>0){\\n            rev=rev*10+n%10;\\n            n=n/10;\\n        }\\n        if(rev==x)\\n        return true;\\n        return false;\\n    }\\n}"
                    },
                    {
                        "username": "ghemanth2303",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n    \\n    if (x<0)\\n    return false;\\n       int d=0;\\n       while(x>0){\\n           d=x%10+d*10;\\n           x=x/10;\\n       }\\n           if(x==d)\\n           return true;\\n           else\\n           return false;\\n           \\n\\n       }\\n    \\n};\\n\\n// what is mistake in that\\n"
                    },
                    {
                        "username": "sakausha11",
                        "content": "u are comparing wrong values in the if condition. Because x will always become 0. store the value of x in another variable and then compare it with d"
                    },
                    {
                        "username": "priyankakumari6709",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        \\n        if(x<0)\\n        return false;\\n        if(x==0)\\n        return true;\\n        if(x>=1&&x<10)\\n         return true;\\n         int rev=0;\\n         int tmp=x;\\n         while(tmp!=0)\\n        {\\n            int ld= tmp%10;\\n            rev= rev*10+ld;\\n            tmp/=10;\\n        }\\n        if(tmp==rev)\\n        return true;\\n        \\n        else\\n        return false;\\n    }\\n};\\n\\n\\nwhy this code is wrong?"
                    },
                    {
                        "username": "sakausha11",
                        "content": "Hey,\nin the 4th last line, i.e,  the if condition u are comparing wrong values. Change it to (x ==rev).\nAlso Change the datatype of rev to long instead of int... it will work then."
                    },
                    {
                        "username": "hemanth_asp",
                        "content": "bool isPalindrome(int x){\\n    int a=x;\\nint rev=0;\\nint lastdigi=0;\\nwhile(x>0)\\n{\\n    lastdigi=x%10;\\n    rev=rev*10+lastdigi;\\n    x=x/10;\\n}\\n\\n\\nif(a==rev && rev>0){\\n printf(\"true\");\\n}\\nelse{ printf(\"false\");\\n}\\nreturn 0;\\n}\\n\\n\\n\\nwhy the test case is being failed please check it and give an idea"
                    },
                    {
                        "username": "sakausha11",
                        "content": "can anybody tell why this approach isn\\'t working ? \\n\\npublic:\\n    long rev=0; \\n    bool isPalindrome(int x) {\\n        static int t = x;\\n        if(x<=0){\\n            if(rev==t) return 1;\\n            else return 0;\\n        }\\n        rev = rev*10 + x%10;\\n        x /= 10;\\n        return isPalindrome(x);\\n    }\\n}; "
                    },
                    {
                        "username": "ec1912",
                        "content": "`class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long int revNum = 0;\\n        long int Num = x;\\n\\n        while (Num > 0) {\\n\\n            long int LDigit = Num % 10;\\n            revNum = revNum * 10 + LDigit;\\n            Num = Num / 10;\\n        }\\n\\n        if (x == revNum) {\\n            return true;\\n        } else {\\n            return false;\\n        } \\n    }\\n}; `"
                    }
                ]
            },
            {
                "id": 1734865,
                "content": [
                    {
                        "username": "rajkumr",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int store=x;\\n        long int sum=0;\\n        \\n        while(store>0){\\n            int r=store%10;\\n            sum=sum*10+r;\\n            store=store/10;\\n        }\\n        if(sum == x) {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "mohdakram_30",
                        "content": "int ans=0;\\n        while(x!=0){\\n           \\n            int digit = x%10;\\n            ans= (ans*10) + digit;\\n            x=x/10;\\n             if((ans>INT_MAX/10)||(ans<INT_MIN/10))\\n            return false;\\n            if(ans==x)\\n            return true;\\n        }\\n        return false; \\ncan someone tell me what is wrong in this "
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || Beats 100% || Easy to Understand\\n\\nhttps://leetcode.com/problems/palindrome-number/solutions/2976350/simple-java-beats-98-easy-to-understand/"
                    },
                    {
                        "username": "abdoulkarim",
                        "content": "\\nreturn str(x) == str(x)[::-1]"
                    },
                    {
                        "username": "Prasanta_123",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        if(x<0)\\n        return false;\\n\\n        int rev=0;\\n        int n=x;\\n        while(n>0){\\n            rev=rev*10+n%10;\\n            n=n/10;\\n        }\\n        if(rev==x)\\n        return true;\\n        return false;\\n    }\\n}"
                    },
                    {
                        "username": "ghemanth2303",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n    \\n    if (x<0)\\n    return false;\\n       int d=0;\\n       while(x>0){\\n           d=x%10+d*10;\\n           x=x/10;\\n       }\\n           if(x==d)\\n           return true;\\n           else\\n           return false;\\n           \\n\\n       }\\n    \\n};\\n\\n// what is mistake in that\\n"
                    },
                    {
                        "username": "sakausha11",
                        "content": "u are comparing wrong values in the if condition. Because x will always become 0. store the value of x in another variable and then compare it with d"
                    },
                    {
                        "username": "priyankakumari6709",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        \\n        if(x<0)\\n        return false;\\n        if(x==0)\\n        return true;\\n        if(x>=1&&x<10)\\n         return true;\\n         int rev=0;\\n         int tmp=x;\\n         while(tmp!=0)\\n        {\\n            int ld= tmp%10;\\n            rev= rev*10+ld;\\n            tmp/=10;\\n        }\\n        if(tmp==rev)\\n        return true;\\n        \\n        else\\n        return false;\\n    }\\n};\\n\\n\\nwhy this code is wrong?"
                    },
                    {
                        "username": "sakausha11",
                        "content": "Hey,\nin the 4th last line, i.e,  the if condition u are comparing wrong values. Change it to (x ==rev).\nAlso Change the datatype of rev to long instead of int... it will work then."
                    },
                    {
                        "username": "hemanth_asp",
                        "content": "bool isPalindrome(int x){\\n    int a=x;\\nint rev=0;\\nint lastdigi=0;\\nwhile(x>0)\\n{\\n    lastdigi=x%10;\\n    rev=rev*10+lastdigi;\\n    x=x/10;\\n}\\n\\n\\nif(a==rev && rev>0){\\n printf(\"true\");\\n}\\nelse{ printf(\"false\");\\n}\\nreturn 0;\\n}\\n\\n\\n\\nwhy the test case is being failed please check it and give an idea"
                    },
                    {
                        "username": "sakausha11",
                        "content": "can anybody tell why this approach isn\\'t working ? \\n\\npublic:\\n    long rev=0; \\n    bool isPalindrome(int x) {\\n        static int t = x;\\n        if(x<=0){\\n            if(rev==t) return 1;\\n            else return 0;\\n        }\\n        rev = rev*10 + x%10;\\n        x /= 10;\\n        return isPalindrome(x);\\n    }\\n}; "
                    },
                    {
                        "username": "ec1912",
                        "content": "`class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long int revNum = 0;\\n        long int Num = x;\\n\\n        while (Num > 0) {\\n\\n            long int LDigit = Num % 10;\\n            revNum = revNum * 10 + LDigit;\\n            Num = Num / 10;\\n        }\\n\\n        if (x == revNum) {\\n            return true;\\n        } else {\\n            return false;\\n        } \\n    }\\n}; `"
                    }
                ]
            },
            {
                "id": 1734502,
                "content": [
                    {
                        "username": "rajkumr",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int store=x;\\n        long int sum=0;\\n        \\n        while(store>0){\\n            int r=store%10;\\n            sum=sum*10+r;\\n            store=store/10;\\n        }\\n        if(sum == x) {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "mohdakram_30",
                        "content": "int ans=0;\\n        while(x!=0){\\n           \\n            int digit = x%10;\\n            ans= (ans*10) + digit;\\n            x=x/10;\\n             if((ans>INT_MAX/10)||(ans<INT_MIN/10))\\n            return false;\\n            if(ans==x)\\n            return true;\\n        }\\n        return false; \\ncan someone tell me what is wrong in this "
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || Beats 100% || Easy to Understand\\n\\nhttps://leetcode.com/problems/palindrome-number/solutions/2976350/simple-java-beats-98-easy-to-understand/"
                    },
                    {
                        "username": "abdoulkarim",
                        "content": "\\nreturn str(x) == str(x)[::-1]"
                    },
                    {
                        "username": "Prasanta_123",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        if(x<0)\\n        return false;\\n\\n        int rev=0;\\n        int n=x;\\n        while(n>0){\\n            rev=rev*10+n%10;\\n            n=n/10;\\n        }\\n        if(rev==x)\\n        return true;\\n        return false;\\n    }\\n}"
                    },
                    {
                        "username": "ghemanth2303",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n    \\n    if (x<0)\\n    return false;\\n       int d=0;\\n       while(x>0){\\n           d=x%10+d*10;\\n           x=x/10;\\n       }\\n           if(x==d)\\n           return true;\\n           else\\n           return false;\\n           \\n\\n       }\\n    \\n};\\n\\n// what is mistake in that\\n"
                    },
                    {
                        "username": "sakausha11",
                        "content": "u are comparing wrong values in the if condition. Because x will always become 0. store the value of x in another variable and then compare it with d"
                    },
                    {
                        "username": "priyankakumari6709",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        \\n        if(x<0)\\n        return false;\\n        if(x==0)\\n        return true;\\n        if(x>=1&&x<10)\\n         return true;\\n         int rev=0;\\n         int tmp=x;\\n         while(tmp!=0)\\n        {\\n            int ld= tmp%10;\\n            rev= rev*10+ld;\\n            tmp/=10;\\n        }\\n        if(tmp==rev)\\n        return true;\\n        \\n        else\\n        return false;\\n    }\\n};\\n\\n\\nwhy this code is wrong?"
                    },
                    {
                        "username": "sakausha11",
                        "content": "Hey,\nin the 4th last line, i.e,  the if condition u are comparing wrong values. Change it to (x ==rev).\nAlso Change the datatype of rev to long instead of int... it will work then."
                    },
                    {
                        "username": "hemanth_asp",
                        "content": "bool isPalindrome(int x){\\n    int a=x;\\nint rev=0;\\nint lastdigi=0;\\nwhile(x>0)\\n{\\n    lastdigi=x%10;\\n    rev=rev*10+lastdigi;\\n    x=x/10;\\n}\\n\\n\\nif(a==rev && rev>0){\\n printf(\"true\");\\n}\\nelse{ printf(\"false\");\\n}\\nreturn 0;\\n}\\n\\n\\n\\nwhy the test case is being failed please check it and give an idea"
                    },
                    {
                        "username": "sakausha11",
                        "content": "can anybody tell why this approach isn\\'t working ? \\n\\npublic:\\n    long rev=0; \\n    bool isPalindrome(int x) {\\n        static int t = x;\\n        if(x<=0){\\n            if(rev==t) return 1;\\n            else return 0;\\n        }\\n        rev = rev*10 + x%10;\\n        x /= 10;\\n        return isPalindrome(x);\\n    }\\n}; "
                    },
                    {
                        "username": "ec1912",
                        "content": "`class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long int revNum = 0;\\n        long int Num = x;\\n\\n        while (Num > 0) {\\n\\n            long int LDigit = Num % 10;\\n            revNum = revNum * 10 + LDigit;\\n            Num = Num / 10;\\n        }\\n\\n        if (x == revNum) {\\n            return true;\\n        } else {\\n            return false;\\n        } \\n    }\\n}; `"
                    }
                ]
            },
            {
                "id": 1734196,
                "content": [
                    {
                        "username": "rajkumr",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int store=x;\\n        long int sum=0;\\n        \\n        while(store>0){\\n            int r=store%10;\\n            sum=sum*10+r;\\n            store=store/10;\\n        }\\n        if(sum == x) {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "mohdakram_30",
                        "content": "int ans=0;\\n        while(x!=0){\\n           \\n            int digit = x%10;\\n            ans= (ans*10) + digit;\\n            x=x/10;\\n             if((ans>INT_MAX/10)||(ans<INT_MIN/10))\\n            return false;\\n            if(ans==x)\\n            return true;\\n        }\\n        return false; \\ncan someone tell me what is wrong in this "
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || Beats 100% || Easy to Understand\\n\\nhttps://leetcode.com/problems/palindrome-number/solutions/2976350/simple-java-beats-98-easy-to-understand/"
                    },
                    {
                        "username": "abdoulkarim",
                        "content": "\\nreturn str(x) == str(x)[::-1]"
                    },
                    {
                        "username": "Prasanta_123",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        if(x<0)\\n        return false;\\n\\n        int rev=0;\\n        int n=x;\\n        while(n>0){\\n            rev=rev*10+n%10;\\n            n=n/10;\\n        }\\n        if(rev==x)\\n        return true;\\n        return false;\\n    }\\n}"
                    },
                    {
                        "username": "ghemanth2303",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n    \\n    if (x<0)\\n    return false;\\n       int d=0;\\n       while(x>0){\\n           d=x%10+d*10;\\n           x=x/10;\\n       }\\n           if(x==d)\\n           return true;\\n           else\\n           return false;\\n           \\n\\n       }\\n    \\n};\\n\\n// what is mistake in that\\n"
                    },
                    {
                        "username": "sakausha11",
                        "content": "u are comparing wrong values in the if condition. Because x will always become 0. store the value of x in another variable and then compare it with d"
                    },
                    {
                        "username": "priyankakumari6709",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        \\n        if(x<0)\\n        return false;\\n        if(x==0)\\n        return true;\\n        if(x>=1&&x<10)\\n         return true;\\n         int rev=0;\\n         int tmp=x;\\n         while(tmp!=0)\\n        {\\n            int ld= tmp%10;\\n            rev= rev*10+ld;\\n            tmp/=10;\\n        }\\n        if(tmp==rev)\\n        return true;\\n        \\n        else\\n        return false;\\n    }\\n};\\n\\n\\nwhy this code is wrong?"
                    },
                    {
                        "username": "sakausha11",
                        "content": "Hey,\nin the 4th last line, i.e,  the if condition u are comparing wrong values. Change it to (x ==rev).\nAlso Change the datatype of rev to long instead of int... it will work then."
                    },
                    {
                        "username": "hemanth_asp",
                        "content": "bool isPalindrome(int x){\\n    int a=x;\\nint rev=0;\\nint lastdigi=0;\\nwhile(x>0)\\n{\\n    lastdigi=x%10;\\n    rev=rev*10+lastdigi;\\n    x=x/10;\\n}\\n\\n\\nif(a==rev && rev>0){\\n printf(\"true\");\\n}\\nelse{ printf(\"false\");\\n}\\nreturn 0;\\n}\\n\\n\\n\\nwhy the test case is being failed please check it and give an idea"
                    },
                    {
                        "username": "sakausha11",
                        "content": "can anybody tell why this approach isn\\'t working ? \\n\\npublic:\\n    long rev=0; \\n    bool isPalindrome(int x) {\\n        static int t = x;\\n        if(x<=0){\\n            if(rev==t) return 1;\\n            else return 0;\\n        }\\n        rev = rev*10 + x%10;\\n        x /= 10;\\n        return isPalindrome(x);\\n    }\\n}; "
                    },
                    {
                        "username": "ec1912",
                        "content": "`class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long int revNum = 0;\\n        long int Num = x;\\n\\n        while (Num > 0) {\\n\\n            long int LDigit = Num % 10;\\n            revNum = revNum * 10 + LDigit;\\n            Num = Num / 10;\\n        }\\n\\n        if (x == revNum) {\\n            return true;\\n        } else {\\n            return false;\\n        } \\n    }\\n}; `"
                    }
                ]
            },
            {
                "id": 1732677,
                "content": [
                    {
                        "username": "rajkumr",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int store=x;\\n        long int sum=0;\\n        \\n        while(store>0){\\n            int r=store%10;\\n            sum=sum*10+r;\\n            store=store/10;\\n        }\\n        if(sum == x) {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "mohdakram_30",
                        "content": "int ans=0;\\n        while(x!=0){\\n           \\n            int digit = x%10;\\n            ans= (ans*10) + digit;\\n            x=x/10;\\n             if((ans>INT_MAX/10)||(ans<INT_MIN/10))\\n            return false;\\n            if(ans==x)\\n            return true;\\n        }\\n        return false; \\ncan someone tell me what is wrong in this "
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || Beats 100% || Easy to Understand\\n\\nhttps://leetcode.com/problems/palindrome-number/solutions/2976350/simple-java-beats-98-easy-to-understand/"
                    },
                    {
                        "username": "abdoulkarim",
                        "content": "\\nreturn str(x) == str(x)[::-1]"
                    },
                    {
                        "username": "Prasanta_123",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        if(x<0)\\n        return false;\\n\\n        int rev=0;\\n        int n=x;\\n        while(n>0){\\n            rev=rev*10+n%10;\\n            n=n/10;\\n        }\\n        if(rev==x)\\n        return true;\\n        return false;\\n    }\\n}"
                    },
                    {
                        "username": "ghemanth2303",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n    \\n    if (x<0)\\n    return false;\\n       int d=0;\\n       while(x>0){\\n           d=x%10+d*10;\\n           x=x/10;\\n       }\\n           if(x==d)\\n           return true;\\n           else\\n           return false;\\n           \\n\\n       }\\n    \\n};\\n\\n// what is mistake in that\\n"
                    },
                    {
                        "username": "sakausha11",
                        "content": "u are comparing wrong values in the if condition. Because x will always become 0. store the value of x in another variable and then compare it with d"
                    },
                    {
                        "username": "priyankakumari6709",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        \\n        if(x<0)\\n        return false;\\n        if(x==0)\\n        return true;\\n        if(x>=1&&x<10)\\n         return true;\\n         int rev=0;\\n         int tmp=x;\\n         while(tmp!=0)\\n        {\\n            int ld= tmp%10;\\n            rev= rev*10+ld;\\n            tmp/=10;\\n        }\\n        if(tmp==rev)\\n        return true;\\n        \\n        else\\n        return false;\\n    }\\n};\\n\\n\\nwhy this code is wrong?"
                    },
                    {
                        "username": "sakausha11",
                        "content": "Hey,\nin the 4th last line, i.e,  the if condition u are comparing wrong values. Change it to (x ==rev).\nAlso Change the datatype of rev to long instead of int... it will work then."
                    },
                    {
                        "username": "hemanth_asp",
                        "content": "bool isPalindrome(int x){\\n    int a=x;\\nint rev=0;\\nint lastdigi=0;\\nwhile(x>0)\\n{\\n    lastdigi=x%10;\\n    rev=rev*10+lastdigi;\\n    x=x/10;\\n}\\n\\n\\nif(a==rev && rev>0){\\n printf(\"true\");\\n}\\nelse{ printf(\"false\");\\n}\\nreturn 0;\\n}\\n\\n\\n\\nwhy the test case is being failed please check it and give an idea"
                    },
                    {
                        "username": "sakausha11",
                        "content": "can anybody tell why this approach isn\\'t working ? \\n\\npublic:\\n    long rev=0; \\n    bool isPalindrome(int x) {\\n        static int t = x;\\n        if(x<=0){\\n            if(rev==t) return 1;\\n            else return 0;\\n        }\\n        rev = rev*10 + x%10;\\n        x /= 10;\\n        return isPalindrome(x);\\n    }\\n}; "
                    },
                    {
                        "username": "ec1912",
                        "content": "`class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long int revNum = 0;\\n        long int Num = x;\\n\\n        while (Num > 0) {\\n\\n            long int LDigit = Num % 10;\\n            revNum = revNum * 10 + LDigit;\\n            Num = Num / 10;\\n        }\\n\\n        if (x == revNum) {\\n            return true;\\n        } else {\\n            return false;\\n        } \\n    }\\n}; `"
                    }
                ]
            },
            {
                "id": 1731470,
                "content": [
                    {
                        "username": "rajkumr",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int store=x;\\n        long int sum=0;\\n        \\n        while(store>0){\\n            int r=store%10;\\n            sum=sum*10+r;\\n            store=store/10;\\n        }\\n        if(sum == x) {\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};"
                    },
                    {
                        "username": "mohdakram_30",
                        "content": "int ans=0;\\n        while(x!=0){\\n           \\n            int digit = x%10;\\n            ans= (ans*10) + digit;\\n            x=x/10;\\n             if((ans>INT_MAX/10)||(ans<INT_MIN/10))\\n            return false;\\n            if(ans==x)\\n            return true;\\n        }\\n        return false; \\ncan someone tell me what is wrong in this "
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || Beats 100% || Easy to Understand\\n\\nhttps://leetcode.com/problems/palindrome-number/solutions/2976350/simple-java-beats-98-easy-to-understand/"
                    },
                    {
                        "username": "abdoulkarim",
                        "content": "\\nreturn str(x) == str(x)[::-1]"
                    },
                    {
                        "username": "Prasanta_123",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        if(x<0)\\n        return false;\\n\\n        int rev=0;\\n        int n=x;\\n        while(n>0){\\n            rev=rev*10+n%10;\\n            n=n/10;\\n        }\\n        if(rev==x)\\n        return true;\\n        return false;\\n    }\\n}"
                    },
                    {
                        "username": "ghemanth2303",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n    \\n    if (x<0)\\n    return false;\\n       int d=0;\\n       while(x>0){\\n           d=x%10+d*10;\\n           x=x/10;\\n       }\\n           if(x==d)\\n           return true;\\n           else\\n           return false;\\n           \\n\\n       }\\n    \\n};\\n\\n// what is mistake in that\\n"
                    },
                    {
                        "username": "sakausha11",
                        "content": "u are comparing wrong values in the if condition. Because x will always become 0. store the value of x in another variable and then compare it with d"
                    },
                    {
                        "username": "priyankakumari6709",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        \\n        if(x<0)\\n        return false;\\n        if(x==0)\\n        return true;\\n        if(x>=1&&x<10)\\n         return true;\\n         int rev=0;\\n         int tmp=x;\\n         while(tmp!=0)\\n        {\\n            int ld= tmp%10;\\n            rev= rev*10+ld;\\n            tmp/=10;\\n        }\\n        if(tmp==rev)\\n        return true;\\n        \\n        else\\n        return false;\\n    }\\n};\\n\\n\\nwhy this code is wrong?"
                    },
                    {
                        "username": "sakausha11",
                        "content": "Hey,\nin the 4th last line, i.e,  the if condition u are comparing wrong values. Change it to (x ==rev).\nAlso Change the datatype of rev to long instead of int... it will work then."
                    },
                    {
                        "username": "hemanth_asp",
                        "content": "bool isPalindrome(int x){\\n    int a=x;\\nint rev=0;\\nint lastdigi=0;\\nwhile(x>0)\\n{\\n    lastdigi=x%10;\\n    rev=rev*10+lastdigi;\\n    x=x/10;\\n}\\n\\n\\nif(a==rev && rev>0){\\n printf(\"true\");\\n}\\nelse{ printf(\"false\");\\n}\\nreturn 0;\\n}\\n\\n\\n\\nwhy the test case is being failed please check it and give an idea"
                    },
                    {
                        "username": "sakausha11",
                        "content": "can anybody tell why this approach isn\\'t working ? \\n\\npublic:\\n    long rev=0; \\n    bool isPalindrome(int x) {\\n        static int t = x;\\n        if(x<=0){\\n            if(rev==t) return 1;\\n            else return 0;\\n        }\\n        rev = rev*10 + x%10;\\n        x /= 10;\\n        return isPalindrome(x);\\n    }\\n}; "
                    },
                    {
                        "username": "ec1912",
                        "content": "`class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        long int revNum = 0;\\n        long int Num = x;\\n\\n        while (Num > 0) {\\n\\n            long int LDigit = Num % 10;\\n            revNum = revNum * 10 + LDigit;\\n            Num = Num / 10;\\n        }\\n\\n        if (x == revNum) {\\n            return true;\\n        } else {\\n            return false;\\n        } \\n    }\\n}; `"
                    }
                ]
            },
            {
                "id": 1730757,
                "content": [
                    {
                        "username": "danilodejesusgomes",
                        "content": "This one test said me is wrong.\\nInput: -1\\nOutput: true\\nExpected: false\\n\\nBut this test said is correct.\\nInput: 0\\nOutput: true\\nExpected: true\\n\\nWhat is the difference between them?\\nWhen we have just one digit, it should be correct."
                    },
                    {
                        "username": "Raja_Sharma",
                        "content": "palindrome no.\\n\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n        int temp = x;\\n        int rev = 0, rem;\\n        while(temp != 0){\\n            rem = temp % 10;\\n            rev = rev*10+rem;\\n            temp = temp/10;\\n        }\\n        if(x != rev){\\n            return false;\\n        }\\n        return true;\\n    }\\n    public static void main(String args[]){\\n        int x = 121;\\n        System.out.println(isPalindrome(x));\\n        x = -121;\\n        System.out.println(isPalindrome(x));\\n        x = 10;\\n        System.out.println(isPalindrome(x));\\n    }\\n}"
                    },
                    {
                        "username": "imranansari9835",
                        "content": "My Simple output in java solution \\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int r,sum=0,temp;\\n        temp=x;\\n        while(x>0)\\n        {\\n            r=x%10;\\n            sum=(sum*10)+r;\\n            x=x/10;\\n        }\\n        if(temp==sum)\\n        {\\n            return true;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n    }\\n}"
                    },
                    {
                        "username": "ajaypanchal000411",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n\\n        int num = x;\\n       long long int sum = 0;\\n       \\n        while(num != 0){\\n            int r = num%10;\\n            sum = sum*10 + r;\\n            num = num/10;\\n\\n\\n        }\\n\\n\\n        if(sum == x){\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n        \\n        \\n    }\\n};"
                    },
                    {
                        "username": "ryzhuk",
                        "content": "I used \"//\" and \"%\" in order to separate digits. If number < 0 it can\\'t be palindrome ))"
                    },
                    {
                        "username": "Manav2603",
                        "content": "Can anyone tell me what is the error in this code \\nLine 59: Char 18: error: use of undeclared identifier \\'Solution\\'\\n      bool ret = Solution().isPalindrome(param_1); return ret;\\n                 ^\\n\\n#include<iostream>\\nusing namespace std;\\n\\nint main()\\n{\\n    int n,num,s;\\n    char rev = 0;\\n   \\n   \\n    while (1)\\n    {\\n        rev = 0;\\n        n = num;\\n        cout << \"Enter the number: \" << endl;\\n    cin>>num;\\n    \\n        s = num % 10;\\n        rev = rev*10+s;\\n        num = num /10;\\n        \\n        cout << rev;\\n        \\n        if(n == rev)\\n        {\\n            cout<<\" The entered number is Palindrome number\";\\n            \\n        }\\n        else\\n        {\\n            cout<<\"The entered number is not plindrome number\";\\n            \\n        }\\n        \\n        cout<<\"\\\\n Would you like to check another number(Y/N): \";\\n        \\n        cin>>rev;\\n        \\n        if(rev == \\'Y\\' or rev == \\'y\\')\\n        {\\n            cout << \" \" << endl;\\n            \\n        }\\n        else\\n        {\\n            cout << \" Thank you \" << endl;\\n            break;\\n            \\n        }\\n}\\n    return 0;\\n}\\n"
                    },
                    {
                        "username": "anmolsudhakar",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        \\n        int xx = x;\\n        if(x<0){\\n            return false;\\n        }\\n        long long t = 0;\\n\\n        while(x>0){\\n             t = t*10+x%10;\\n            x/=10;\\n        }\\n\\n         return t==xx;\\n    }\\n};"
                    },
                    {
                        "username": "pranjalssharma97",
                        "content": "a=str(x)\\n        b=a[::-1]\\n        if a==b:\\n            return(\"true\")\\n        else:\\n            return(\"false\")\\n\\n\\nthis code is running on jupyter but not here. please help"
                    },
                    {
                        "username": "rakesh_123456",
                        "content": " `your inline code...your inline code..."
                    },
                    {
                        "username": "I_have_no_idea_whats_happening",
                        "content": " [@saikot1223](/saikot1223) About your comment on converting an int to a string.\\n1. under the string.h library is the to_string() function.\\n\\n2. you could use string stream \\nex: \\nint x = 102;\\nstringstream ss;\\nss << 102;\\nstring s = ss.str();\\n\\n3. At the end of the problems description is a little note that challenges you to do it without converting the number to a string. It\\'s not required but better in the long run. "
                    }
                ]
            },
            {
                "id": 1730630,
                "content": [
                    {
                        "username": "danilodejesusgomes",
                        "content": "This one test said me is wrong.\\nInput: -1\\nOutput: true\\nExpected: false\\n\\nBut this test said is correct.\\nInput: 0\\nOutput: true\\nExpected: true\\n\\nWhat is the difference between them?\\nWhen we have just one digit, it should be correct."
                    },
                    {
                        "username": "Raja_Sharma",
                        "content": "palindrome no.\\n\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n        int temp = x;\\n        int rev = 0, rem;\\n        while(temp != 0){\\n            rem = temp % 10;\\n            rev = rev*10+rem;\\n            temp = temp/10;\\n        }\\n        if(x != rev){\\n            return false;\\n        }\\n        return true;\\n    }\\n    public static void main(String args[]){\\n        int x = 121;\\n        System.out.println(isPalindrome(x));\\n        x = -121;\\n        System.out.println(isPalindrome(x));\\n        x = 10;\\n        System.out.println(isPalindrome(x));\\n    }\\n}"
                    },
                    {
                        "username": "imranansari9835",
                        "content": "My Simple output in java solution \\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int r,sum=0,temp;\\n        temp=x;\\n        while(x>0)\\n        {\\n            r=x%10;\\n            sum=(sum*10)+r;\\n            x=x/10;\\n        }\\n        if(temp==sum)\\n        {\\n            return true;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n    }\\n}"
                    },
                    {
                        "username": "ajaypanchal000411",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n\\n        int num = x;\\n       long long int sum = 0;\\n       \\n        while(num != 0){\\n            int r = num%10;\\n            sum = sum*10 + r;\\n            num = num/10;\\n\\n\\n        }\\n\\n\\n        if(sum == x){\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n        \\n        \\n    }\\n};"
                    },
                    {
                        "username": "ryzhuk",
                        "content": "I used \"//\" and \"%\" in order to separate digits. If number < 0 it can\\'t be palindrome ))"
                    },
                    {
                        "username": "Manav2603",
                        "content": "Can anyone tell me what is the error in this code \\nLine 59: Char 18: error: use of undeclared identifier \\'Solution\\'\\n      bool ret = Solution().isPalindrome(param_1); return ret;\\n                 ^\\n\\n#include<iostream>\\nusing namespace std;\\n\\nint main()\\n{\\n    int n,num,s;\\n    char rev = 0;\\n   \\n   \\n    while (1)\\n    {\\n        rev = 0;\\n        n = num;\\n        cout << \"Enter the number: \" << endl;\\n    cin>>num;\\n    \\n        s = num % 10;\\n        rev = rev*10+s;\\n        num = num /10;\\n        \\n        cout << rev;\\n        \\n        if(n == rev)\\n        {\\n            cout<<\" The entered number is Palindrome number\";\\n            \\n        }\\n        else\\n        {\\n            cout<<\"The entered number is not plindrome number\";\\n            \\n        }\\n        \\n        cout<<\"\\\\n Would you like to check another number(Y/N): \";\\n        \\n        cin>>rev;\\n        \\n        if(rev == \\'Y\\' or rev == \\'y\\')\\n        {\\n            cout << \" \" << endl;\\n            \\n        }\\n        else\\n        {\\n            cout << \" Thank you \" << endl;\\n            break;\\n            \\n        }\\n}\\n    return 0;\\n}\\n"
                    },
                    {
                        "username": "anmolsudhakar",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        \\n        int xx = x;\\n        if(x<0){\\n            return false;\\n        }\\n        long long t = 0;\\n\\n        while(x>0){\\n             t = t*10+x%10;\\n            x/=10;\\n        }\\n\\n         return t==xx;\\n    }\\n};"
                    },
                    {
                        "username": "pranjalssharma97",
                        "content": "a=str(x)\\n        b=a[::-1]\\n        if a==b:\\n            return(\"true\")\\n        else:\\n            return(\"false\")\\n\\n\\nthis code is running on jupyter but not here. please help"
                    },
                    {
                        "username": "rakesh_123456",
                        "content": " `your inline code...your inline code..."
                    },
                    {
                        "username": "I_have_no_idea_whats_happening",
                        "content": " [@saikot1223](/saikot1223) About your comment on converting an int to a string.\\n1. under the string.h library is the to_string() function.\\n\\n2. you could use string stream \\nex: \\nint x = 102;\\nstringstream ss;\\nss << 102;\\nstring s = ss.str();\\n\\n3. At the end of the problems description is a little note that challenges you to do it without converting the number to a string. It\\'s not required but better in the long run. "
                    }
                ]
            },
            {
                "id": 1728385,
                "content": [
                    {
                        "username": "danilodejesusgomes",
                        "content": "This one test said me is wrong.\\nInput: -1\\nOutput: true\\nExpected: false\\n\\nBut this test said is correct.\\nInput: 0\\nOutput: true\\nExpected: true\\n\\nWhat is the difference between them?\\nWhen we have just one digit, it should be correct."
                    },
                    {
                        "username": "Raja_Sharma",
                        "content": "palindrome no.\\n\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n        int temp = x;\\n        int rev = 0, rem;\\n        while(temp != 0){\\n            rem = temp % 10;\\n            rev = rev*10+rem;\\n            temp = temp/10;\\n        }\\n        if(x != rev){\\n            return false;\\n        }\\n        return true;\\n    }\\n    public static void main(String args[]){\\n        int x = 121;\\n        System.out.println(isPalindrome(x));\\n        x = -121;\\n        System.out.println(isPalindrome(x));\\n        x = 10;\\n        System.out.println(isPalindrome(x));\\n    }\\n}"
                    },
                    {
                        "username": "imranansari9835",
                        "content": "My Simple output in java solution \\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int r,sum=0,temp;\\n        temp=x;\\n        while(x>0)\\n        {\\n            r=x%10;\\n            sum=(sum*10)+r;\\n            x=x/10;\\n        }\\n        if(temp==sum)\\n        {\\n            return true;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n    }\\n}"
                    },
                    {
                        "username": "ajaypanchal000411",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n\\n        int num = x;\\n       long long int sum = 0;\\n       \\n        while(num != 0){\\n            int r = num%10;\\n            sum = sum*10 + r;\\n            num = num/10;\\n\\n\\n        }\\n\\n\\n        if(sum == x){\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n        \\n        \\n    }\\n};"
                    },
                    {
                        "username": "ryzhuk",
                        "content": "I used \"//\" and \"%\" in order to separate digits. If number < 0 it can\\'t be palindrome ))"
                    },
                    {
                        "username": "Manav2603",
                        "content": "Can anyone tell me what is the error in this code \\nLine 59: Char 18: error: use of undeclared identifier \\'Solution\\'\\n      bool ret = Solution().isPalindrome(param_1); return ret;\\n                 ^\\n\\n#include<iostream>\\nusing namespace std;\\n\\nint main()\\n{\\n    int n,num,s;\\n    char rev = 0;\\n   \\n   \\n    while (1)\\n    {\\n        rev = 0;\\n        n = num;\\n        cout << \"Enter the number: \" << endl;\\n    cin>>num;\\n    \\n        s = num % 10;\\n        rev = rev*10+s;\\n        num = num /10;\\n        \\n        cout << rev;\\n        \\n        if(n == rev)\\n        {\\n            cout<<\" The entered number is Palindrome number\";\\n            \\n        }\\n        else\\n        {\\n            cout<<\"The entered number is not plindrome number\";\\n            \\n        }\\n        \\n        cout<<\"\\\\n Would you like to check another number(Y/N): \";\\n        \\n        cin>>rev;\\n        \\n        if(rev == \\'Y\\' or rev == \\'y\\')\\n        {\\n            cout << \" \" << endl;\\n            \\n        }\\n        else\\n        {\\n            cout << \" Thank you \" << endl;\\n            break;\\n            \\n        }\\n}\\n    return 0;\\n}\\n"
                    },
                    {
                        "username": "anmolsudhakar",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        \\n        int xx = x;\\n        if(x<0){\\n            return false;\\n        }\\n        long long t = 0;\\n\\n        while(x>0){\\n             t = t*10+x%10;\\n            x/=10;\\n        }\\n\\n         return t==xx;\\n    }\\n};"
                    },
                    {
                        "username": "pranjalssharma97",
                        "content": "a=str(x)\\n        b=a[::-1]\\n        if a==b:\\n            return(\"true\")\\n        else:\\n            return(\"false\")\\n\\n\\nthis code is running on jupyter but not here. please help"
                    },
                    {
                        "username": "rakesh_123456",
                        "content": " `your inline code...your inline code..."
                    },
                    {
                        "username": "I_have_no_idea_whats_happening",
                        "content": " [@saikot1223](/saikot1223) About your comment on converting an int to a string.\\n1. under the string.h library is the to_string() function.\\n\\n2. you could use string stream \\nex: \\nint x = 102;\\nstringstream ss;\\nss << 102;\\nstring s = ss.str();\\n\\n3. At the end of the problems description is a little note that challenges you to do it without converting the number to a string. It\\'s not required but better in the long run. "
                    }
                ]
            },
            {
                "id": 1725481,
                "content": [
                    {
                        "username": "danilodejesusgomes",
                        "content": "This one test said me is wrong.\\nInput: -1\\nOutput: true\\nExpected: false\\n\\nBut this test said is correct.\\nInput: 0\\nOutput: true\\nExpected: true\\n\\nWhat is the difference between them?\\nWhen we have just one digit, it should be correct."
                    },
                    {
                        "username": "Raja_Sharma",
                        "content": "palindrome no.\\n\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n        int temp = x;\\n        int rev = 0, rem;\\n        while(temp != 0){\\n            rem = temp % 10;\\n            rev = rev*10+rem;\\n            temp = temp/10;\\n        }\\n        if(x != rev){\\n            return false;\\n        }\\n        return true;\\n    }\\n    public static void main(String args[]){\\n        int x = 121;\\n        System.out.println(isPalindrome(x));\\n        x = -121;\\n        System.out.println(isPalindrome(x));\\n        x = 10;\\n        System.out.println(isPalindrome(x));\\n    }\\n}"
                    },
                    {
                        "username": "imranansari9835",
                        "content": "My Simple output in java solution \\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int r,sum=0,temp;\\n        temp=x;\\n        while(x>0)\\n        {\\n            r=x%10;\\n            sum=(sum*10)+r;\\n            x=x/10;\\n        }\\n        if(temp==sum)\\n        {\\n            return true;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n    }\\n}"
                    },
                    {
                        "username": "ajaypanchal000411",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n\\n        int num = x;\\n       long long int sum = 0;\\n       \\n        while(num != 0){\\n            int r = num%10;\\n            sum = sum*10 + r;\\n            num = num/10;\\n\\n\\n        }\\n\\n\\n        if(sum == x){\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n        \\n        \\n    }\\n};"
                    },
                    {
                        "username": "ryzhuk",
                        "content": "I used \"//\" and \"%\" in order to separate digits. If number < 0 it can\\'t be palindrome ))"
                    },
                    {
                        "username": "Manav2603",
                        "content": "Can anyone tell me what is the error in this code \\nLine 59: Char 18: error: use of undeclared identifier \\'Solution\\'\\n      bool ret = Solution().isPalindrome(param_1); return ret;\\n                 ^\\n\\n#include<iostream>\\nusing namespace std;\\n\\nint main()\\n{\\n    int n,num,s;\\n    char rev = 0;\\n   \\n   \\n    while (1)\\n    {\\n        rev = 0;\\n        n = num;\\n        cout << \"Enter the number: \" << endl;\\n    cin>>num;\\n    \\n        s = num % 10;\\n        rev = rev*10+s;\\n        num = num /10;\\n        \\n        cout << rev;\\n        \\n        if(n == rev)\\n        {\\n            cout<<\" The entered number is Palindrome number\";\\n            \\n        }\\n        else\\n        {\\n            cout<<\"The entered number is not plindrome number\";\\n            \\n        }\\n        \\n        cout<<\"\\\\n Would you like to check another number(Y/N): \";\\n        \\n        cin>>rev;\\n        \\n        if(rev == \\'Y\\' or rev == \\'y\\')\\n        {\\n            cout << \" \" << endl;\\n            \\n        }\\n        else\\n        {\\n            cout << \" Thank you \" << endl;\\n            break;\\n            \\n        }\\n}\\n    return 0;\\n}\\n"
                    },
                    {
                        "username": "anmolsudhakar",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        \\n        int xx = x;\\n        if(x<0){\\n            return false;\\n        }\\n        long long t = 0;\\n\\n        while(x>0){\\n             t = t*10+x%10;\\n            x/=10;\\n        }\\n\\n         return t==xx;\\n    }\\n};"
                    },
                    {
                        "username": "pranjalssharma97",
                        "content": "a=str(x)\\n        b=a[::-1]\\n        if a==b:\\n            return(\"true\")\\n        else:\\n            return(\"false\")\\n\\n\\nthis code is running on jupyter but not here. please help"
                    },
                    {
                        "username": "rakesh_123456",
                        "content": " `your inline code...your inline code..."
                    },
                    {
                        "username": "I_have_no_idea_whats_happening",
                        "content": " [@saikot1223](/saikot1223) About your comment on converting an int to a string.\\n1. under the string.h library is the to_string() function.\\n\\n2. you could use string stream \\nex: \\nint x = 102;\\nstringstream ss;\\nss << 102;\\nstring s = ss.str();\\n\\n3. At the end of the problems description is a little note that challenges you to do it without converting the number to a string. It\\'s not required but better in the long run. "
                    }
                ]
            },
            {
                "id": 1722491,
                "content": [
                    {
                        "username": "danilodejesusgomes",
                        "content": "This one test said me is wrong.\\nInput: -1\\nOutput: true\\nExpected: false\\n\\nBut this test said is correct.\\nInput: 0\\nOutput: true\\nExpected: true\\n\\nWhat is the difference between them?\\nWhen we have just one digit, it should be correct."
                    },
                    {
                        "username": "Raja_Sharma",
                        "content": "palindrome no.\\n\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n        int temp = x;\\n        int rev = 0, rem;\\n        while(temp != 0){\\n            rem = temp % 10;\\n            rev = rev*10+rem;\\n            temp = temp/10;\\n        }\\n        if(x != rev){\\n            return false;\\n        }\\n        return true;\\n    }\\n    public static void main(String args[]){\\n        int x = 121;\\n        System.out.println(isPalindrome(x));\\n        x = -121;\\n        System.out.println(isPalindrome(x));\\n        x = 10;\\n        System.out.println(isPalindrome(x));\\n    }\\n}"
                    },
                    {
                        "username": "imranansari9835",
                        "content": "My Simple output in java solution \\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int r,sum=0,temp;\\n        temp=x;\\n        while(x>0)\\n        {\\n            r=x%10;\\n            sum=(sum*10)+r;\\n            x=x/10;\\n        }\\n        if(temp==sum)\\n        {\\n            return true;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n    }\\n}"
                    },
                    {
                        "username": "ajaypanchal000411",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n\\n        int num = x;\\n       long long int sum = 0;\\n       \\n        while(num != 0){\\n            int r = num%10;\\n            sum = sum*10 + r;\\n            num = num/10;\\n\\n\\n        }\\n\\n\\n        if(sum == x){\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n        \\n        \\n    }\\n};"
                    },
                    {
                        "username": "ryzhuk",
                        "content": "I used \"//\" and \"%\" in order to separate digits. If number < 0 it can\\'t be palindrome ))"
                    },
                    {
                        "username": "Manav2603",
                        "content": "Can anyone tell me what is the error in this code \\nLine 59: Char 18: error: use of undeclared identifier \\'Solution\\'\\n      bool ret = Solution().isPalindrome(param_1); return ret;\\n                 ^\\n\\n#include<iostream>\\nusing namespace std;\\n\\nint main()\\n{\\n    int n,num,s;\\n    char rev = 0;\\n   \\n   \\n    while (1)\\n    {\\n        rev = 0;\\n        n = num;\\n        cout << \"Enter the number: \" << endl;\\n    cin>>num;\\n    \\n        s = num % 10;\\n        rev = rev*10+s;\\n        num = num /10;\\n        \\n        cout << rev;\\n        \\n        if(n == rev)\\n        {\\n            cout<<\" The entered number is Palindrome number\";\\n            \\n        }\\n        else\\n        {\\n            cout<<\"The entered number is not plindrome number\";\\n            \\n        }\\n        \\n        cout<<\"\\\\n Would you like to check another number(Y/N): \";\\n        \\n        cin>>rev;\\n        \\n        if(rev == \\'Y\\' or rev == \\'y\\')\\n        {\\n            cout << \" \" << endl;\\n            \\n        }\\n        else\\n        {\\n            cout << \" Thank you \" << endl;\\n            break;\\n            \\n        }\\n}\\n    return 0;\\n}\\n"
                    },
                    {
                        "username": "anmolsudhakar",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        \\n        int xx = x;\\n        if(x<0){\\n            return false;\\n        }\\n        long long t = 0;\\n\\n        while(x>0){\\n             t = t*10+x%10;\\n            x/=10;\\n        }\\n\\n         return t==xx;\\n    }\\n};"
                    },
                    {
                        "username": "pranjalssharma97",
                        "content": "a=str(x)\\n        b=a[::-1]\\n        if a==b:\\n            return(\"true\")\\n        else:\\n            return(\"false\")\\n\\n\\nthis code is running on jupyter but not here. please help"
                    },
                    {
                        "username": "rakesh_123456",
                        "content": " `your inline code...your inline code..."
                    },
                    {
                        "username": "I_have_no_idea_whats_happening",
                        "content": " [@saikot1223](/saikot1223) About your comment on converting an int to a string.\\n1. under the string.h library is the to_string() function.\\n\\n2. you could use string stream \\nex: \\nint x = 102;\\nstringstream ss;\\nss << 102;\\nstring s = ss.str();\\n\\n3. At the end of the problems description is a little note that challenges you to do it without converting the number to a string. It\\'s not required but better in the long run. "
                    }
                ]
            },
            {
                "id": 1720340,
                "content": [
                    {
                        "username": "danilodejesusgomes",
                        "content": "This one test said me is wrong.\\nInput: -1\\nOutput: true\\nExpected: false\\n\\nBut this test said is correct.\\nInput: 0\\nOutput: true\\nExpected: true\\n\\nWhat is the difference between them?\\nWhen we have just one digit, it should be correct."
                    },
                    {
                        "username": "Raja_Sharma",
                        "content": "palindrome no.\\n\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n        int temp = x;\\n        int rev = 0, rem;\\n        while(temp != 0){\\n            rem = temp % 10;\\n            rev = rev*10+rem;\\n            temp = temp/10;\\n        }\\n        if(x != rev){\\n            return false;\\n        }\\n        return true;\\n    }\\n    public static void main(String args[]){\\n        int x = 121;\\n        System.out.println(isPalindrome(x));\\n        x = -121;\\n        System.out.println(isPalindrome(x));\\n        x = 10;\\n        System.out.println(isPalindrome(x));\\n    }\\n}"
                    },
                    {
                        "username": "imranansari9835",
                        "content": "My Simple output in java solution \\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int r,sum=0,temp;\\n        temp=x;\\n        while(x>0)\\n        {\\n            r=x%10;\\n            sum=(sum*10)+r;\\n            x=x/10;\\n        }\\n        if(temp==sum)\\n        {\\n            return true;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n    }\\n}"
                    },
                    {
                        "username": "ajaypanchal000411",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n\\n        int num = x;\\n       long long int sum = 0;\\n       \\n        while(num != 0){\\n            int r = num%10;\\n            sum = sum*10 + r;\\n            num = num/10;\\n\\n\\n        }\\n\\n\\n        if(sum == x){\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n        \\n        \\n    }\\n};"
                    },
                    {
                        "username": "ryzhuk",
                        "content": "I used \"//\" and \"%\" in order to separate digits. If number < 0 it can\\'t be palindrome ))"
                    },
                    {
                        "username": "Manav2603",
                        "content": "Can anyone tell me what is the error in this code \\nLine 59: Char 18: error: use of undeclared identifier \\'Solution\\'\\n      bool ret = Solution().isPalindrome(param_1); return ret;\\n                 ^\\n\\n#include<iostream>\\nusing namespace std;\\n\\nint main()\\n{\\n    int n,num,s;\\n    char rev = 0;\\n   \\n   \\n    while (1)\\n    {\\n        rev = 0;\\n        n = num;\\n        cout << \"Enter the number: \" << endl;\\n    cin>>num;\\n    \\n        s = num % 10;\\n        rev = rev*10+s;\\n        num = num /10;\\n        \\n        cout << rev;\\n        \\n        if(n == rev)\\n        {\\n            cout<<\" The entered number is Palindrome number\";\\n            \\n        }\\n        else\\n        {\\n            cout<<\"The entered number is not plindrome number\";\\n            \\n        }\\n        \\n        cout<<\"\\\\n Would you like to check another number(Y/N): \";\\n        \\n        cin>>rev;\\n        \\n        if(rev == \\'Y\\' or rev == \\'y\\')\\n        {\\n            cout << \" \" << endl;\\n            \\n        }\\n        else\\n        {\\n            cout << \" Thank you \" << endl;\\n            break;\\n            \\n        }\\n}\\n    return 0;\\n}\\n"
                    },
                    {
                        "username": "anmolsudhakar",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        \\n        int xx = x;\\n        if(x<0){\\n            return false;\\n        }\\n        long long t = 0;\\n\\n        while(x>0){\\n             t = t*10+x%10;\\n            x/=10;\\n        }\\n\\n         return t==xx;\\n    }\\n};"
                    },
                    {
                        "username": "pranjalssharma97",
                        "content": "a=str(x)\\n        b=a[::-1]\\n        if a==b:\\n            return(\"true\")\\n        else:\\n            return(\"false\")\\n\\n\\nthis code is running on jupyter but not here. please help"
                    },
                    {
                        "username": "rakesh_123456",
                        "content": " `your inline code...your inline code..."
                    },
                    {
                        "username": "I_have_no_idea_whats_happening",
                        "content": " [@saikot1223](/saikot1223) About your comment on converting an int to a string.\\n1. under the string.h library is the to_string() function.\\n\\n2. you could use string stream \\nex: \\nint x = 102;\\nstringstream ss;\\nss << 102;\\nstring s = ss.str();\\n\\n3. At the end of the problems description is a little note that challenges you to do it without converting the number to a string. It\\'s not required but better in the long run. "
                    }
                ]
            },
            {
                "id": 1719178,
                "content": [
                    {
                        "username": "danilodejesusgomes",
                        "content": "This one test said me is wrong.\\nInput: -1\\nOutput: true\\nExpected: false\\n\\nBut this test said is correct.\\nInput: 0\\nOutput: true\\nExpected: true\\n\\nWhat is the difference between them?\\nWhen we have just one digit, it should be correct."
                    },
                    {
                        "username": "Raja_Sharma",
                        "content": "palindrome no.\\n\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n        int temp = x;\\n        int rev = 0, rem;\\n        while(temp != 0){\\n            rem = temp % 10;\\n            rev = rev*10+rem;\\n            temp = temp/10;\\n        }\\n        if(x != rev){\\n            return false;\\n        }\\n        return true;\\n    }\\n    public static void main(String args[]){\\n        int x = 121;\\n        System.out.println(isPalindrome(x));\\n        x = -121;\\n        System.out.println(isPalindrome(x));\\n        x = 10;\\n        System.out.println(isPalindrome(x));\\n    }\\n}"
                    },
                    {
                        "username": "imranansari9835",
                        "content": "My Simple output in java solution \\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int r,sum=0,temp;\\n        temp=x;\\n        while(x>0)\\n        {\\n            r=x%10;\\n            sum=(sum*10)+r;\\n            x=x/10;\\n        }\\n        if(temp==sum)\\n        {\\n            return true;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n    }\\n}"
                    },
                    {
                        "username": "ajaypanchal000411",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n\\n        int num = x;\\n       long long int sum = 0;\\n       \\n        while(num != 0){\\n            int r = num%10;\\n            sum = sum*10 + r;\\n            num = num/10;\\n\\n\\n        }\\n\\n\\n        if(sum == x){\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n        \\n        \\n    }\\n};"
                    },
                    {
                        "username": "ryzhuk",
                        "content": "I used \"//\" and \"%\" in order to separate digits. If number < 0 it can\\'t be palindrome ))"
                    },
                    {
                        "username": "Manav2603",
                        "content": "Can anyone tell me what is the error in this code \\nLine 59: Char 18: error: use of undeclared identifier \\'Solution\\'\\n      bool ret = Solution().isPalindrome(param_1); return ret;\\n                 ^\\n\\n#include<iostream>\\nusing namespace std;\\n\\nint main()\\n{\\n    int n,num,s;\\n    char rev = 0;\\n   \\n   \\n    while (1)\\n    {\\n        rev = 0;\\n        n = num;\\n        cout << \"Enter the number: \" << endl;\\n    cin>>num;\\n    \\n        s = num % 10;\\n        rev = rev*10+s;\\n        num = num /10;\\n        \\n        cout << rev;\\n        \\n        if(n == rev)\\n        {\\n            cout<<\" The entered number is Palindrome number\";\\n            \\n        }\\n        else\\n        {\\n            cout<<\"The entered number is not plindrome number\";\\n            \\n        }\\n        \\n        cout<<\"\\\\n Would you like to check another number(Y/N): \";\\n        \\n        cin>>rev;\\n        \\n        if(rev == \\'Y\\' or rev == \\'y\\')\\n        {\\n            cout << \" \" << endl;\\n            \\n        }\\n        else\\n        {\\n            cout << \" Thank you \" << endl;\\n            break;\\n            \\n        }\\n}\\n    return 0;\\n}\\n"
                    },
                    {
                        "username": "anmolsudhakar",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        \\n        int xx = x;\\n        if(x<0){\\n            return false;\\n        }\\n        long long t = 0;\\n\\n        while(x>0){\\n             t = t*10+x%10;\\n            x/=10;\\n        }\\n\\n         return t==xx;\\n    }\\n};"
                    },
                    {
                        "username": "pranjalssharma97",
                        "content": "a=str(x)\\n        b=a[::-1]\\n        if a==b:\\n            return(\"true\")\\n        else:\\n            return(\"false\")\\n\\n\\nthis code is running on jupyter but not here. please help"
                    },
                    {
                        "username": "rakesh_123456",
                        "content": " `your inline code...your inline code..."
                    },
                    {
                        "username": "I_have_no_idea_whats_happening",
                        "content": " [@saikot1223](/saikot1223) About your comment on converting an int to a string.\\n1. under the string.h library is the to_string() function.\\n\\n2. you could use string stream \\nex: \\nint x = 102;\\nstringstream ss;\\nss << 102;\\nstring s = ss.str();\\n\\n3. At the end of the problems description is a little note that challenges you to do it without converting the number to a string. It\\'s not required but better in the long run. "
                    }
                ]
            },
            {
                "id": 1718138,
                "content": [
                    {
                        "username": "danilodejesusgomes",
                        "content": "This one test said me is wrong.\\nInput: -1\\nOutput: true\\nExpected: false\\n\\nBut this test said is correct.\\nInput: 0\\nOutput: true\\nExpected: true\\n\\nWhat is the difference between them?\\nWhen we have just one digit, it should be correct."
                    },
                    {
                        "username": "Raja_Sharma",
                        "content": "palindrome no.\\n\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n        int temp = x;\\n        int rev = 0, rem;\\n        while(temp != 0){\\n            rem = temp % 10;\\n            rev = rev*10+rem;\\n            temp = temp/10;\\n        }\\n        if(x != rev){\\n            return false;\\n        }\\n        return true;\\n    }\\n    public static void main(String args[]){\\n        int x = 121;\\n        System.out.println(isPalindrome(x));\\n        x = -121;\\n        System.out.println(isPalindrome(x));\\n        x = 10;\\n        System.out.println(isPalindrome(x));\\n    }\\n}"
                    },
                    {
                        "username": "imranansari9835",
                        "content": "My Simple output in java solution \\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int r,sum=0,temp;\\n        temp=x;\\n        while(x>0)\\n        {\\n            r=x%10;\\n            sum=(sum*10)+r;\\n            x=x/10;\\n        }\\n        if(temp==sum)\\n        {\\n            return true;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n    }\\n}"
                    },
                    {
                        "username": "ajaypanchal000411",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n\\n        int num = x;\\n       long long int sum = 0;\\n       \\n        while(num != 0){\\n            int r = num%10;\\n            sum = sum*10 + r;\\n            num = num/10;\\n\\n\\n        }\\n\\n\\n        if(sum == x){\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n        \\n        \\n    }\\n};"
                    },
                    {
                        "username": "ryzhuk",
                        "content": "I used \"//\" and \"%\" in order to separate digits. If number < 0 it can\\'t be palindrome ))"
                    },
                    {
                        "username": "Manav2603",
                        "content": "Can anyone tell me what is the error in this code \\nLine 59: Char 18: error: use of undeclared identifier \\'Solution\\'\\n      bool ret = Solution().isPalindrome(param_1); return ret;\\n                 ^\\n\\n#include<iostream>\\nusing namespace std;\\n\\nint main()\\n{\\n    int n,num,s;\\n    char rev = 0;\\n   \\n   \\n    while (1)\\n    {\\n        rev = 0;\\n        n = num;\\n        cout << \"Enter the number: \" << endl;\\n    cin>>num;\\n    \\n        s = num % 10;\\n        rev = rev*10+s;\\n        num = num /10;\\n        \\n        cout << rev;\\n        \\n        if(n == rev)\\n        {\\n            cout<<\" The entered number is Palindrome number\";\\n            \\n        }\\n        else\\n        {\\n            cout<<\"The entered number is not plindrome number\";\\n            \\n        }\\n        \\n        cout<<\"\\\\n Would you like to check another number(Y/N): \";\\n        \\n        cin>>rev;\\n        \\n        if(rev == \\'Y\\' or rev == \\'y\\')\\n        {\\n            cout << \" \" << endl;\\n            \\n        }\\n        else\\n        {\\n            cout << \" Thank you \" << endl;\\n            break;\\n            \\n        }\\n}\\n    return 0;\\n}\\n"
                    },
                    {
                        "username": "anmolsudhakar",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        \\n        int xx = x;\\n        if(x<0){\\n            return false;\\n        }\\n        long long t = 0;\\n\\n        while(x>0){\\n             t = t*10+x%10;\\n            x/=10;\\n        }\\n\\n         return t==xx;\\n    }\\n};"
                    },
                    {
                        "username": "pranjalssharma97",
                        "content": "a=str(x)\\n        b=a[::-1]\\n        if a==b:\\n            return(\"true\")\\n        else:\\n            return(\"false\")\\n\\n\\nthis code is running on jupyter but not here. please help"
                    },
                    {
                        "username": "rakesh_123456",
                        "content": " `your inline code...your inline code..."
                    },
                    {
                        "username": "I_have_no_idea_whats_happening",
                        "content": " [@saikot1223](/saikot1223) About your comment on converting an int to a string.\\n1. under the string.h library is the to_string() function.\\n\\n2. you could use string stream \\nex: \\nint x = 102;\\nstringstream ss;\\nss << 102;\\nstring s = ss.str();\\n\\n3. At the end of the problems description is a little note that challenges you to do it without converting the number to a string. It\\'s not required but better in the long run. "
                    }
                ]
            },
            {
                "id": 1717769,
                "content": [
                    {
                        "username": "danilodejesusgomes",
                        "content": "This one test said me is wrong.\\nInput: -1\\nOutput: true\\nExpected: false\\n\\nBut this test said is correct.\\nInput: 0\\nOutput: true\\nExpected: true\\n\\nWhat is the difference between them?\\nWhen we have just one digit, it should be correct."
                    },
                    {
                        "username": "Raja_Sharma",
                        "content": "palindrome no.\\n\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n        int temp = x;\\n        int rev = 0, rem;\\n        while(temp != 0){\\n            rem = temp % 10;\\n            rev = rev*10+rem;\\n            temp = temp/10;\\n        }\\n        if(x != rev){\\n            return false;\\n        }\\n        return true;\\n    }\\n    public static void main(String args[]){\\n        int x = 121;\\n        System.out.println(isPalindrome(x));\\n        x = -121;\\n        System.out.println(isPalindrome(x));\\n        x = 10;\\n        System.out.println(isPalindrome(x));\\n    }\\n}"
                    },
                    {
                        "username": "imranansari9835",
                        "content": "My Simple output in java solution \\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int r,sum=0,temp;\\n        temp=x;\\n        while(x>0)\\n        {\\n            r=x%10;\\n            sum=(sum*10)+r;\\n            x=x/10;\\n        }\\n        if(temp==sum)\\n        {\\n            return true;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n    }\\n}"
                    },
                    {
                        "username": "ajaypanchal000411",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n\\n        int num = x;\\n       long long int sum = 0;\\n       \\n        while(num != 0){\\n            int r = num%10;\\n            sum = sum*10 + r;\\n            num = num/10;\\n\\n\\n        }\\n\\n\\n        if(sum == x){\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n        \\n        \\n    }\\n};"
                    },
                    {
                        "username": "ryzhuk",
                        "content": "I used \"//\" and \"%\" in order to separate digits. If number < 0 it can\\'t be palindrome ))"
                    },
                    {
                        "username": "Manav2603",
                        "content": "Can anyone tell me what is the error in this code \\nLine 59: Char 18: error: use of undeclared identifier \\'Solution\\'\\n      bool ret = Solution().isPalindrome(param_1); return ret;\\n                 ^\\n\\n#include<iostream>\\nusing namespace std;\\n\\nint main()\\n{\\n    int n,num,s;\\n    char rev = 0;\\n   \\n   \\n    while (1)\\n    {\\n        rev = 0;\\n        n = num;\\n        cout << \"Enter the number: \" << endl;\\n    cin>>num;\\n    \\n        s = num % 10;\\n        rev = rev*10+s;\\n        num = num /10;\\n        \\n        cout << rev;\\n        \\n        if(n == rev)\\n        {\\n            cout<<\" The entered number is Palindrome number\";\\n            \\n        }\\n        else\\n        {\\n            cout<<\"The entered number is not plindrome number\";\\n            \\n        }\\n        \\n        cout<<\"\\\\n Would you like to check another number(Y/N): \";\\n        \\n        cin>>rev;\\n        \\n        if(rev == \\'Y\\' or rev == \\'y\\')\\n        {\\n            cout << \" \" << endl;\\n            \\n        }\\n        else\\n        {\\n            cout << \" Thank you \" << endl;\\n            break;\\n            \\n        }\\n}\\n    return 0;\\n}\\n"
                    },
                    {
                        "username": "anmolsudhakar",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        \\n        int xx = x;\\n        if(x<0){\\n            return false;\\n        }\\n        long long t = 0;\\n\\n        while(x>0){\\n             t = t*10+x%10;\\n            x/=10;\\n        }\\n\\n         return t==xx;\\n    }\\n};"
                    },
                    {
                        "username": "pranjalssharma97",
                        "content": "a=str(x)\\n        b=a[::-1]\\n        if a==b:\\n            return(\"true\")\\n        else:\\n            return(\"false\")\\n\\n\\nthis code is running on jupyter but not here. please help"
                    },
                    {
                        "username": "rakesh_123456",
                        "content": " `your inline code...your inline code..."
                    },
                    {
                        "username": "I_have_no_idea_whats_happening",
                        "content": " [@saikot1223](/saikot1223) About your comment on converting an int to a string.\\n1. under the string.h library is the to_string() function.\\n\\n2. you could use string stream \\nex: \\nint x = 102;\\nstringstream ss;\\nss << 102;\\nstring s = ss.str();\\n\\n3. At the end of the problems description is a little note that challenges you to do it without converting the number to a string. It\\'s not required but better in the long run. "
                    }
                ]
            },
            {
                "id": 1717444,
                "content": [
                    {
                        "username": "danilodejesusgomes",
                        "content": "This one test said me is wrong.\\nInput: -1\\nOutput: true\\nExpected: false\\n\\nBut this test said is correct.\\nInput: 0\\nOutput: true\\nExpected: true\\n\\nWhat is the difference between them?\\nWhen we have just one digit, it should be correct."
                    },
                    {
                        "username": "Raja_Sharma",
                        "content": "palindrome no.\\n\\nclass Solution {\\n    public static boolean isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n        int temp = x;\\n        int rev = 0, rem;\\n        while(temp != 0){\\n            rem = temp % 10;\\n            rev = rev*10+rem;\\n            temp = temp/10;\\n        }\\n        if(x != rev){\\n            return false;\\n        }\\n        return true;\\n    }\\n    public static void main(String args[]){\\n        int x = 121;\\n        System.out.println(isPalindrome(x));\\n        x = -121;\\n        System.out.println(isPalindrome(x));\\n        x = 10;\\n        System.out.println(isPalindrome(x));\\n    }\\n}"
                    },
                    {
                        "username": "imranansari9835",
                        "content": "My Simple output in java solution \\nclass Solution {\\n    public boolean isPalindrome(int x) {\\n        int r,sum=0,temp;\\n        temp=x;\\n        while(x>0)\\n        {\\n            r=x%10;\\n            sum=(sum*10)+r;\\n            x=x/10;\\n        }\\n        if(temp==sum)\\n        {\\n            return true;\\n        }\\n        else\\n        {\\n            return false;\\n        }\\n    }\\n}"
                    },
                    {
                        "username": "ajaypanchal000411",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        if(x<0){\\n            return false;\\n        }\\n\\n        int num = x;\\n       long long int sum = 0;\\n       \\n        while(num != 0){\\n            int r = num%10;\\n            sum = sum*10 + r;\\n            num = num/10;\\n\\n\\n        }\\n\\n\\n        if(sum == x){\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n        \\n        \\n    }\\n};"
                    },
                    {
                        "username": "ryzhuk",
                        "content": "I used \"//\" and \"%\" in order to separate digits. If number < 0 it can\\'t be palindrome ))"
                    },
                    {
                        "username": "Manav2603",
                        "content": "Can anyone tell me what is the error in this code \\nLine 59: Char 18: error: use of undeclared identifier \\'Solution\\'\\n      bool ret = Solution().isPalindrome(param_1); return ret;\\n                 ^\\n\\n#include<iostream>\\nusing namespace std;\\n\\nint main()\\n{\\n    int n,num,s;\\n    char rev = 0;\\n   \\n   \\n    while (1)\\n    {\\n        rev = 0;\\n        n = num;\\n        cout << \"Enter the number: \" << endl;\\n    cin>>num;\\n    \\n        s = num % 10;\\n        rev = rev*10+s;\\n        num = num /10;\\n        \\n        cout << rev;\\n        \\n        if(n == rev)\\n        {\\n            cout<<\" The entered number is Palindrome number\";\\n            \\n        }\\n        else\\n        {\\n            cout<<\"The entered number is not plindrome number\";\\n            \\n        }\\n        \\n        cout<<\"\\\\n Would you like to check another number(Y/N): \";\\n        \\n        cin>>rev;\\n        \\n        if(rev == \\'Y\\' or rev == \\'y\\')\\n        {\\n            cout << \" \" << endl;\\n            \\n        }\\n        else\\n        {\\n            cout << \" Thank you \" << endl;\\n            break;\\n            \\n        }\\n}\\n    return 0;\\n}\\n"
                    },
                    {
                        "username": "anmolsudhakar",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        \\n        int xx = x;\\n        if(x<0){\\n            return false;\\n        }\\n        long long t = 0;\\n\\n        while(x>0){\\n             t = t*10+x%10;\\n            x/=10;\\n        }\\n\\n         return t==xx;\\n    }\\n};"
                    },
                    {
                        "username": "pranjalssharma97",
                        "content": "a=str(x)\\n        b=a[::-1]\\n        if a==b:\\n            return(\"true\")\\n        else:\\n            return(\"false\")\\n\\n\\nthis code is running on jupyter but not here. please help"
                    },
                    {
                        "username": "rakesh_123456",
                        "content": " `your inline code...your inline code..."
                    },
                    {
                        "username": "I_have_no_idea_whats_happening",
                        "content": " [@saikot1223](/saikot1223) About your comment on converting an int to a string.\\n1. under the string.h library is the to_string() function.\\n\\n2. you could use string stream \\nex: \\nint x = 102;\\nstringstream ss;\\nss << 102;\\nstring s = ss.str();\\n\\n3. At the end of the problems description is a little note that challenges you to do it without converting the number to a string. It\\'s not required but better in the long run. "
                    }
                ]
            },
            {
                "id": 1714731,
                "content": [
                    {
                        "username": "aivanilov",
                        "content": "Two pointers approach with conversion to String gives really nice performance. Math approach gives O(logN) and conversion to String should be O(n) but performance, calculated by Leetcode, is extremely high in the following approach. Any thought why? \\n\\n ```\\npublic boolean isPalindrome(int x) {\\n        String number = String.valueOf(x);\\n        int left = 0;\\n        int right = number.length() - 1;\\n        while (left < right){\\n            if (number.charAt(left) != number.charAt(right)) {\\n                return false;\\n            }\\n            left++;\\n            right--;\\n        }\\n        return true;\\n    }"
                    },
                    {
                        "username": "agnivS",
                        "content": "Simply convert this integer to a String and then find a way to check for palindromes via using string methods. StringBuilder class might be helpful. I don\\'t believe this problem is beneficial enough of an exercise in algorithms as the most naive methods can easily solve it. "
                    },
                    {
                        "username": "vishal_2970",
                        "content": "//Bhaii Dekho isme kya galat hai\\n//run karne p sahi de raha hai test case 3 p lekin submit karne p galat de raha\\nclass Solution {\\n    static int sum[]=new int[1];\\n    public boolean isPalindrome(int x) {\\n        // int x=12321;\\n        if(x<0){\\n            return false;\\n        }\\n        if(x==0 || x==1){\\n            return true;\\n        }\\n        int temp=x;\\n        rev(temp);\\n        if(x==sum[0]){\\n            return true;\\n        } \\n        return false;\\n    }\\n    static void rev(int x){\\n        if(x==0){\\n            return;\\n        }\\n        int rem=x%10;\\n        sum[0] = sum[0]*10+rem;\\n        rev(x/10);\\n    }\\n}"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "bool isPalindrome(long x) {\\n        long n = x;\\n        long sum = 0;\\n        while(n>0){\\n            long r = n%10;\\n            sum = sum*10 + r;\\n            n = n/10;\\n        }\\n        if(sum == x and x>=0){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }"
                    },
                    {
                        "username": "harshitsinghcode",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int ans=0;\\n        \\n        while(x!=0){\\n            \\n            int lastDig=x%10;\\n            \\n            if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            \\n            ans=(ans*10)+lastDig;\\n            \\n            x=x/10;\\n        }\\n        \\n        if(x==ans){\\n            return true;\\n        }\\n        \\n        \\n        else{\\n        return false;\\n        }\\n    }\\n};\\n\\n\\n\\n\\nam not getting the right output after this, can you just review and tell?\\n"
                    },
                    {
                        "username": "harshitsinghcode",
                        "content": "CORRECT CODE FROM MY SIDE - \\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int ans=0;\\n        int t=x;\\n        while(x!=0){\\n            \\n            int lastDig=x%10;\\n            \\n            if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            \\n            ans=(ans*10)+lastDig;\\n            \\n            x=x/10;\\n        }\\n        if(t<0)\\n        cout<<\"false\"<<endl;\\n        else{\\n        if(t==ans){\\n            return true;\\n        }\\n        \\n        \\n        else{\\n        return false;\\n        }\\n        }\\n        return 0;\\n    }\\n};"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "For C++ ans PLS CHECKOUT THIS LINK\\nLEAVE A STAR if you find it useful\\n\\nhttps://github.com/AnkushRawat10601/Leetcode/blob/main/09_pallindrome.cpp"
                    },
                    {
                        "username": "Miakiru",
                        "content": " `def isPalindrome(self, x):    \\n    my_list = list(str(x))\\n    reversed_list = list(reversed(my_list))\\n    res = my_list==reversed_list\\n    print(res)\\n    `\\n\\nWhy that doesn\\'t work? It gives the false result to everything in this website, other environment is working fine."
                    },
                    {
                        "username": "silent_voice143",
                        "content": "testcases are little weird if i m giving -121 it showing false but it is also palindrome but anyway output coming ."
                    },
                    {
                        "username": "alex_arpit",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int temp,r;\\n        int sum=0;\\n        if(x<0)\\n        return false;\\n        else{\\n            temp=x;\\n            while(x>0){\\n             r=x%10;\\n             sum=(sum*10)+r;\\n             x/=10;\\n             \\n            }\\n            if(temp==sum){\\n            return true;\\n            }\\n            else{\\n                return false;\\n            } \\n            \\n        }\\n        \\n    }\\n}"
                    },
                    {
                        "username": "mudssira01",
                        "content": "Best 17 ms solution\\n \\n``\\npublic boolean isPalindrome(int x) {\\n        int check = x;\\n        int result = 0;\\n        int reminder = 0;\\n        int modMultiplie = 10;\\n\\n        if(x < 0) {\\n            return false;\\n        } else if(x == 0) {\\n            return true;\\n        }\\n\\n        while(check > 0) {\\n            reminder = check % modMultiplie;\\n            check = check / modMultiplie;\\n\\n            result = (result * modMultiplie) + reminder;\\n        }\\n        if(result == x) {\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n``"
                    }
                ]
            },
            {
                "id": 1711366,
                "content": [
                    {
                        "username": "aivanilov",
                        "content": "Two pointers approach with conversion to String gives really nice performance. Math approach gives O(logN) and conversion to String should be O(n) but performance, calculated by Leetcode, is extremely high in the following approach. Any thought why? \\n\\n ```\\npublic boolean isPalindrome(int x) {\\n        String number = String.valueOf(x);\\n        int left = 0;\\n        int right = number.length() - 1;\\n        while (left < right){\\n            if (number.charAt(left) != number.charAt(right)) {\\n                return false;\\n            }\\n            left++;\\n            right--;\\n        }\\n        return true;\\n    }"
                    },
                    {
                        "username": "agnivS",
                        "content": "Simply convert this integer to a String and then find a way to check for palindromes via using string methods. StringBuilder class might be helpful. I don\\'t believe this problem is beneficial enough of an exercise in algorithms as the most naive methods can easily solve it. "
                    },
                    {
                        "username": "vishal_2970",
                        "content": "//Bhaii Dekho isme kya galat hai\\n//run karne p sahi de raha hai test case 3 p lekin submit karne p galat de raha\\nclass Solution {\\n    static int sum[]=new int[1];\\n    public boolean isPalindrome(int x) {\\n        // int x=12321;\\n        if(x<0){\\n            return false;\\n        }\\n        if(x==0 || x==1){\\n            return true;\\n        }\\n        int temp=x;\\n        rev(temp);\\n        if(x==sum[0]){\\n            return true;\\n        } \\n        return false;\\n    }\\n    static void rev(int x){\\n        if(x==0){\\n            return;\\n        }\\n        int rem=x%10;\\n        sum[0] = sum[0]*10+rem;\\n        rev(x/10);\\n    }\\n}"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "bool isPalindrome(long x) {\\n        long n = x;\\n        long sum = 0;\\n        while(n>0){\\n            long r = n%10;\\n            sum = sum*10 + r;\\n            n = n/10;\\n        }\\n        if(sum == x and x>=0){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }"
                    },
                    {
                        "username": "harshitsinghcode",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int ans=0;\\n        \\n        while(x!=0){\\n            \\n            int lastDig=x%10;\\n            \\n            if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            \\n            ans=(ans*10)+lastDig;\\n            \\n            x=x/10;\\n        }\\n        \\n        if(x==ans){\\n            return true;\\n        }\\n        \\n        \\n        else{\\n        return false;\\n        }\\n    }\\n};\\n\\n\\n\\n\\nam not getting the right output after this, can you just review and tell?\\n"
                    },
                    {
                        "username": "harshitsinghcode",
                        "content": "CORRECT CODE FROM MY SIDE - \\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int ans=0;\\n        int t=x;\\n        while(x!=0){\\n            \\n            int lastDig=x%10;\\n            \\n            if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            \\n            ans=(ans*10)+lastDig;\\n            \\n            x=x/10;\\n        }\\n        if(t<0)\\n        cout<<\"false\"<<endl;\\n        else{\\n        if(t==ans){\\n            return true;\\n        }\\n        \\n        \\n        else{\\n        return false;\\n        }\\n        }\\n        return 0;\\n    }\\n};"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "For C++ ans PLS CHECKOUT THIS LINK\\nLEAVE A STAR if you find it useful\\n\\nhttps://github.com/AnkushRawat10601/Leetcode/blob/main/09_pallindrome.cpp"
                    },
                    {
                        "username": "Miakiru",
                        "content": " `def isPalindrome(self, x):    \\n    my_list = list(str(x))\\n    reversed_list = list(reversed(my_list))\\n    res = my_list==reversed_list\\n    print(res)\\n    `\\n\\nWhy that doesn\\'t work? It gives the false result to everything in this website, other environment is working fine."
                    },
                    {
                        "username": "silent_voice143",
                        "content": "testcases are little weird if i m giving -121 it showing false but it is also palindrome but anyway output coming ."
                    },
                    {
                        "username": "alex_arpit",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int temp,r;\\n        int sum=0;\\n        if(x<0)\\n        return false;\\n        else{\\n            temp=x;\\n            while(x>0){\\n             r=x%10;\\n             sum=(sum*10)+r;\\n             x/=10;\\n             \\n            }\\n            if(temp==sum){\\n            return true;\\n            }\\n            else{\\n                return false;\\n            } \\n            \\n        }\\n        \\n    }\\n}"
                    },
                    {
                        "username": "mudssira01",
                        "content": "Best 17 ms solution\\n \\n``\\npublic boolean isPalindrome(int x) {\\n        int check = x;\\n        int result = 0;\\n        int reminder = 0;\\n        int modMultiplie = 10;\\n\\n        if(x < 0) {\\n            return false;\\n        } else if(x == 0) {\\n            return true;\\n        }\\n\\n        while(check > 0) {\\n            reminder = check % modMultiplie;\\n            check = check / modMultiplie;\\n\\n            result = (result * modMultiplie) + reminder;\\n        }\\n        if(result == x) {\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n``"
                    }
                ]
            },
            {
                "id": 1711184,
                "content": [
                    {
                        "username": "aivanilov",
                        "content": "Two pointers approach with conversion to String gives really nice performance. Math approach gives O(logN) and conversion to String should be O(n) but performance, calculated by Leetcode, is extremely high in the following approach. Any thought why? \\n\\n ```\\npublic boolean isPalindrome(int x) {\\n        String number = String.valueOf(x);\\n        int left = 0;\\n        int right = number.length() - 1;\\n        while (left < right){\\n            if (number.charAt(left) != number.charAt(right)) {\\n                return false;\\n            }\\n            left++;\\n            right--;\\n        }\\n        return true;\\n    }"
                    },
                    {
                        "username": "agnivS",
                        "content": "Simply convert this integer to a String and then find a way to check for palindromes via using string methods. StringBuilder class might be helpful. I don\\'t believe this problem is beneficial enough of an exercise in algorithms as the most naive methods can easily solve it. "
                    },
                    {
                        "username": "vishal_2970",
                        "content": "//Bhaii Dekho isme kya galat hai\\n//run karne p sahi de raha hai test case 3 p lekin submit karne p galat de raha\\nclass Solution {\\n    static int sum[]=new int[1];\\n    public boolean isPalindrome(int x) {\\n        // int x=12321;\\n        if(x<0){\\n            return false;\\n        }\\n        if(x==0 || x==1){\\n            return true;\\n        }\\n        int temp=x;\\n        rev(temp);\\n        if(x==sum[0]){\\n            return true;\\n        } \\n        return false;\\n    }\\n    static void rev(int x){\\n        if(x==0){\\n            return;\\n        }\\n        int rem=x%10;\\n        sum[0] = sum[0]*10+rem;\\n        rev(x/10);\\n    }\\n}"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "bool isPalindrome(long x) {\\n        long n = x;\\n        long sum = 0;\\n        while(n>0){\\n            long r = n%10;\\n            sum = sum*10 + r;\\n            n = n/10;\\n        }\\n        if(sum == x and x>=0){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }"
                    },
                    {
                        "username": "harshitsinghcode",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int ans=0;\\n        \\n        while(x!=0){\\n            \\n            int lastDig=x%10;\\n            \\n            if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            \\n            ans=(ans*10)+lastDig;\\n            \\n            x=x/10;\\n        }\\n        \\n        if(x==ans){\\n            return true;\\n        }\\n        \\n        \\n        else{\\n        return false;\\n        }\\n    }\\n};\\n\\n\\n\\n\\nam not getting the right output after this, can you just review and tell?\\n"
                    },
                    {
                        "username": "harshitsinghcode",
                        "content": "CORRECT CODE FROM MY SIDE - \\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int ans=0;\\n        int t=x;\\n        while(x!=0){\\n            \\n            int lastDig=x%10;\\n            \\n            if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            \\n            ans=(ans*10)+lastDig;\\n            \\n            x=x/10;\\n        }\\n        if(t<0)\\n        cout<<\"false\"<<endl;\\n        else{\\n        if(t==ans){\\n            return true;\\n        }\\n        \\n        \\n        else{\\n        return false;\\n        }\\n        }\\n        return 0;\\n    }\\n};"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "For C++ ans PLS CHECKOUT THIS LINK\\nLEAVE A STAR if you find it useful\\n\\nhttps://github.com/AnkushRawat10601/Leetcode/blob/main/09_pallindrome.cpp"
                    },
                    {
                        "username": "Miakiru",
                        "content": " `def isPalindrome(self, x):    \\n    my_list = list(str(x))\\n    reversed_list = list(reversed(my_list))\\n    res = my_list==reversed_list\\n    print(res)\\n    `\\n\\nWhy that doesn\\'t work? It gives the false result to everything in this website, other environment is working fine."
                    },
                    {
                        "username": "silent_voice143",
                        "content": "testcases are little weird if i m giving -121 it showing false but it is also palindrome but anyway output coming ."
                    },
                    {
                        "username": "alex_arpit",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int temp,r;\\n        int sum=0;\\n        if(x<0)\\n        return false;\\n        else{\\n            temp=x;\\n            while(x>0){\\n             r=x%10;\\n             sum=(sum*10)+r;\\n             x/=10;\\n             \\n            }\\n            if(temp==sum){\\n            return true;\\n            }\\n            else{\\n                return false;\\n            } \\n            \\n        }\\n        \\n    }\\n}"
                    },
                    {
                        "username": "mudssira01",
                        "content": "Best 17 ms solution\\n \\n``\\npublic boolean isPalindrome(int x) {\\n        int check = x;\\n        int result = 0;\\n        int reminder = 0;\\n        int modMultiplie = 10;\\n\\n        if(x < 0) {\\n            return false;\\n        } else if(x == 0) {\\n            return true;\\n        }\\n\\n        while(check > 0) {\\n            reminder = check % modMultiplie;\\n            check = check / modMultiplie;\\n\\n            result = (result * modMultiplie) + reminder;\\n        }\\n        if(result == x) {\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n``"
                    }
                ]
            },
            {
                "id": 1709056,
                "content": [
                    {
                        "username": "aivanilov",
                        "content": "Two pointers approach with conversion to String gives really nice performance. Math approach gives O(logN) and conversion to String should be O(n) but performance, calculated by Leetcode, is extremely high in the following approach. Any thought why? \\n\\n ```\\npublic boolean isPalindrome(int x) {\\n        String number = String.valueOf(x);\\n        int left = 0;\\n        int right = number.length() - 1;\\n        while (left < right){\\n            if (number.charAt(left) != number.charAt(right)) {\\n                return false;\\n            }\\n            left++;\\n            right--;\\n        }\\n        return true;\\n    }"
                    },
                    {
                        "username": "agnivS",
                        "content": "Simply convert this integer to a String and then find a way to check for palindromes via using string methods. StringBuilder class might be helpful. I don\\'t believe this problem is beneficial enough of an exercise in algorithms as the most naive methods can easily solve it. "
                    },
                    {
                        "username": "vishal_2970",
                        "content": "//Bhaii Dekho isme kya galat hai\\n//run karne p sahi de raha hai test case 3 p lekin submit karne p galat de raha\\nclass Solution {\\n    static int sum[]=new int[1];\\n    public boolean isPalindrome(int x) {\\n        // int x=12321;\\n        if(x<0){\\n            return false;\\n        }\\n        if(x==0 || x==1){\\n            return true;\\n        }\\n        int temp=x;\\n        rev(temp);\\n        if(x==sum[0]){\\n            return true;\\n        } \\n        return false;\\n    }\\n    static void rev(int x){\\n        if(x==0){\\n            return;\\n        }\\n        int rem=x%10;\\n        sum[0] = sum[0]*10+rem;\\n        rev(x/10);\\n    }\\n}"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "bool isPalindrome(long x) {\\n        long n = x;\\n        long sum = 0;\\n        while(n>0){\\n            long r = n%10;\\n            sum = sum*10 + r;\\n            n = n/10;\\n        }\\n        if(sum == x and x>=0){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }"
                    },
                    {
                        "username": "harshitsinghcode",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int ans=0;\\n        \\n        while(x!=0){\\n            \\n            int lastDig=x%10;\\n            \\n            if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            \\n            ans=(ans*10)+lastDig;\\n            \\n            x=x/10;\\n        }\\n        \\n        if(x==ans){\\n            return true;\\n        }\\n        \\n        \\n        else{\\n        return false;\\n        }\\n    }\\n};\\n\\n\\n\\n\\nam not getting the right output after this, can you just review and tell?\\n"
                    },
                    {
                        "username": "harshitsinghcode",
                        "content": "CORRECT CODE FROM MY SIDE - \\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int ans=0;\\n        int t=x;\\n        while(x!=0){\\n            \\n            int lastDig=x%10;\\n            \\n            if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            \\n            ans=(ans*10)+lastDig;\\n            \\n            x=x/10;\\n        }\\n        if(t<0)\\n        cout<<\"false\"<<endl;\\n        else{\\n        if(t==ans){\\n            return true;\\n        }\\n        \\n        \\n        else{\\n        return false;\\n        }\\n        }\\n        return 0;\\n    }\\n};"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "For C++ ans PLS CHECKOUT THIS LINK\\nLEAVE A STAR if you find it useful\\n\\nhttps://github.com/AnkushRawat10601/Leetcode/blob/main/09_pallindrome.cpp"
                    },
                    {
                        "username": "Miakiru",
                        "content": " `def isPalindrome(self, x):    \\n    my_list = list(str(x))\\n    reversed_list = list(reversed(my_list))\\n    res = my_list==reversed_list\\n    print(res)\\n    `\\n\\nWhy that doesn\\'t work? It gives the false result to everything in this website, other environment is working fine."
                    },
                    {
                        "username": "silent_voice143",
                        "content": "testcases are little weird if i m giving -121 it showing false but it is also palindrome but anyway output coming ."
                    },
                    {
                        "username": "alex_arpit",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int temp,r;\\n        int sum=0;\\n        if(x<0)\\n        return false;\\n        else{\\n            temp=x;\\n            while(x>0){\\n             r=x%10;\\n             sum=(sum*10)+r;\\n             x/=10;\\n             \\n            }\\n            if(temp==sum){\\n            return true;\\n            }\\n            else{\\n                return false;\\n            } \\n            \\n        }\\n        \\n    }\\n}"
                    },
                    {
                        "username": "mudssira01",
                        "content": "Best 17 ms solution\\n \\n``\\npublic boolean isPalindrome(int x) {\\n        int check = x;\\n        int result = 0;\\n        int reminder = 0;\\n        int modMultiplie = 10;\\n\\n        if(x < 0) {\\n            return false;\\n        } else if(x == 0) {\\n            return true;\\n        }\\n\\n        while(check > 0) {\\n            reminder = check % modMultiplie;\\n            check = check / modMultiplie;\\n\\n            result = (result * modMultiplie) + reminder;\\n        }\\n        if(result == x) {\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n``"
                    }
                ]
            },
            {
                "id": 1707182,
                "content": [
                    {
                        "username": "aivanilov",
                        "content": "Two pointers approach with conversion to String gives really nice performance. Math approach gives O(logN) and conversion to String should be O(n) but performance, calculated by Leetcode, is extremely high in the following approach. Any thought why? \\n\\n ```\\npublic boolean isPalindrome(int x) {\\n        String number = String.valueOf(x);\\n        int left = 0;\\n        int right = number.length() - 1;\\n        while (left < right){\\n            if (number.charAt(left) != number.charAt(right)) {\\n                return false;\\n            }\\n            left++;\\n            right--;\\n        }\\n        return true;\\n    }"
                    },
                    {
                        "username": "agnivS",
                        "content": "Simply convert this integer to a String and then find a way to check for palindromes via using string methods. StringBuilder class might be helpful. I don\\'t believe this problem is beneficial enough of an exercise in algorithms as the most naive methods can easily solve it. "
                    },
                    {
                        "username": "vishal_2970",
                        "content": "//Bhaii Dekho isme kya galat hai\\n//run karne p sahi de raha hai test case 3 p lekin submit karne p galat de raha\\nclass Solution {\\n    static int sum[]=new int[1];\\n    public boolean isPalindrome(int x) {\\n        // int x=12321;\\n        if(x<0){\\n            return false;\\n        }\\n        if(x==0 || x==1){\\n            return true;\\n        }\\n        int temp=x;\\n        rev(temp);\\n        if(x==sum[0]){\\n            return true;\\n        } \\n        return false;\\n    }\\n    static void rev(int x){\\n        if(x==0){\\n            return;\\n        }\\n        int rem=x%10;\\n        sum[0] = sum[0]*10+rem;\\n        rev(x/10);\\n    }\\n}"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "bool isPalindrome(long x) {\\n        long n = x;\\n        long sum = 0;\\n        while(n>0){\\n            long r = n%10;\\n            sum = sum*10 + r;\\n            n = n/10;\\n        }\\n        if(sum == x and x>=0){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }"
                    },
                    {
                        "username": "harshitsinghcode",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int ans=0;\\n        \\n        while(x!=0){\\n            \\n            int lastDig=x%10;\\n            \\n            if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            \\n            ans=(ans*10)+lastDig;\\n            \\n            x=x/10;\\n        }\\n        \\n        if(x==ans){\\n            return true;\\n        }\\n        \\n        \\n        else{\\n        return false;\\n        }\\n    }\\n};\\n\\n\\n\\n\\nam not getting the right output after this, can you just review and tell?\\n"
                    },
                    {
                        "username": "harshitsinghcode",
                        "content": "CORRECT CODE FROM MY SIDE - \\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int ans=0;\\n        int t=x;\\n        while(x!=0){\\n            \\n            int lastDig=x%10;\\n            \\n            if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            \\n            ans=(ans*10)+lastDig;\\n            \\n            x=x/10;\\n        }\\n        if(t<0)\\n        cout<<\"false\"<<endl;\\n        else{\\n        if(t==ans){\\n            return true;\\n        }\\n        \\n        \\n        else{\\n        return false;\\n        }\\n        }\\n        return 0;\\n    }\\n};"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "For C++ ans PLS CHECKOUT THIS LINK\\nLEAVE A STAR if you find it useful\\n\\nhttps://github.com/AnkushRawat10601/Leetcode/blob/main/09_pallindrome.cpp"
                    },
                    {
                        "username": "Miakiru",
                        "content": " `def isPalindrome(self, x):    \\n    my_list = list(str(x))\\n    reversed_list = list(reversed(my_list))\\n    res = my_list==reversed_list\\n    print(res)\\n    `\\n\\nWhy that doesn\\'t work? It gives the false result to everything in this website, other environment is working fine."
                    },
                    {
                        "username": "silent_voice143",
                        "content": "testcases are little weird if i m giving -121 it showing false but it is also palindrome but anyway output coming ."
                    },
                    {
                        "username": "alex_arpit",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int temp,r;\\n        int sum=0;\\n        if(x<0)\\n        return false;\\n        else{\\n            temp=x;\\n            while(x>0){\\n             r=x%10;\\n             sum=(sum*10)+r;\\n             x/=10;\\n             \\n            }\\n            if(temp==sum){\\n            return true;\\n            }\\n            else{\\n                return false;\\n            } \\n            \\n        }\\n        \\n    }\\n}"
                    },
                    {
                        "username": "mudssira01",
                        "content": "Best 17 ms solution\\n \\n``\\npublic boolean isPalindrome(int x) {\\n        int check = x;\\n        int result = 0;\\n        int reminder = 0;\\n        int modMultiplie = 10;\\n\\n        if(x < 0) {\\n            return false;\\n        } else if(x == 0) {\\n            return true;\\n        }\\n\\n        while(check > 0) {\\n            reminder = check % modMultiplie;\\n            check = check / modMultiplie;\\n\\n            result = (result * modMultiplie) + reminder;\\n        }\\n        if(result == x) {\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n``"
                    }
                ]
            },
            {
                "id": 1701906,
                "content": [
                    {
                        "username": "aivanilov",
                        "content": "Two pointers approach with conversion to String gives really nice performance. Math approach gives O(logN) and conversion to String should be O(n) but performance, calculated by Leetcode, is extremely high in the following approach. Any thought why? \\n\\n ```\\npublic boolean isPalindrome(int x) {\\n        String number = String.valueOf(x);\\n        int left = 0;\\n        int right = number.length() - 1;\\n        while (left < right){\\n            if (number.charAt(left) != number.charAt(right)) {\\n                return false;\\n            }\\n            left++;\\n            right--;\\n        }\\n        return true;\\n    }"
                    },
                    {
                        "username": "agnivS",
                        "content": "Simply convert this integer to a String and then find a way to check for palindromes via using string methods. StringBuilder class might be helpful. I don\\'t believe this problem is beneficial enough of an exercise in algorithms as the most naive methods can easily solve it. "
                    },
                    {
                        "username": "vishal_2970",
                        "content": "//Bhaii Dekho isme kya galat hai\\n//run karne p sahi de raha hai test case 3 p lekin submit karne p galat de raha\\nclass Solution {\\n    static int sum[]=new int[1];\\n    public boolean isPalindrome(int x) {\\n        // int x=12321;\\n        if(x<0){\\n            return false;\\n        }\\n        if(x==0 || x==1){\\n            return true;\\n        }\\n        int temp=x;\\n        rev(temp);\\n        if(x==sum[0]){\\n            return true;\\n        } \\n        return false;\\n    }\\n    static void rev(int x){\\n        if(x==0){\\n            return;\\n        }\\n        int rem=x%10;\\n        sum[0] = sum[0]*10+rem;\\n        rev(x/10);\\n    }\\n}"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "bool isPalindrome(long x) {\\n        long n = x;\\n        long sum = 0;\\n        while(n>0){\\n            long r = n%10;\\n            sum = sum*10 + r;\\n            n = n/10;\\n        }\\n        if(sum == x and x>=0){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }"
                    },
                    {
                        "username": "harshitsinghcode",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int ans=0;\\n        \\n        while(x!=0){\\n            \\n            int lastDig=x%10;\\n            \\n            if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            \\n            ans=(ans*10)+lastDig;\\n            \\n            x=x/10;\\n        }\\n        \\n        if(x==ans){\\n            return true;\\n        }\\n        \\n        \\n        else{\\n        return false;\\n        }\\n    }\\n};\\n\\n\\n\\n\\nam not getting the right output after this, can you just review and tell?\\n"
                    },
                    {
                        "username": "harshitsinghcode",
                        "content": "CORRECT CODE FROM MY SIDE - \\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int ans=0;\\n        int t=x;\\n        while(x!=0){\\n            \\n            int lastDig=x%10;\\n            \\n            if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            \\n            ans=(ans*10)+lastDig;\\n            \\n            x=x/10;\\n        }\\n        if(t<0)\\n        cout<<\"false\"<<endl;\\n        else{\\n        if(t==ans){\\n            return true;\\n        }\\n        \\n        \\n        else{\\n        return false;\\n        }\\n        }\\n        return 0;\\n    }\\n};"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "For C++ ans PLS CHECKOUT THIS LINK\\nLEAVE A STAR if you find it useful\\n\\nhttps://github.com/AnkushRawat10601/Leetcode/blob/main/09_pallindrome.cpp"
                    },
                    {
                        "username": "Miakiru",
                        "content": " `def isPalindrome(self, x):    \\n    my_list = list(str(x))\\n    reversed_list = list(reversed(my_list))\\n    res = my_list==reversed_list\\n    print(res)\\n    `\\n\\nWhy that doesn\\'t work? It gives the false result to everything in this website, other environment is working fine."
                    },
                    {
                        "username": "silent_voice143",
                        "content": "testcases are little weird if i m giving -121 it showing false but it is also palindrome but anyway output coming ."
                    },
                    {
                        "username": "alex_arpit",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int temp,r;\\n        int sum=0;\\n        if(x<0)\\n        return false;\\n        else{\\n            temp=x;\\n            while(x>0){\\n             r=x%10;\\n             sum=(sum*10)+r;\\n             x/=10;\\n             \\n            }\\n            if(temp==sum){\\n            return true;\\n            }\\n            else{\\n                return false;\\n            } \\n            \\n        }\\n        \\n    }\\n}"
                    },
                    {
                        "username": "mudssira01",
                        "content": "Best 17 ms solution\\n \\n``\\npublic boolean isPalindrome(int x) {\\n        int check = x;\\n        int result = 0;\\n        int reminder = 0;\\n        int modMultiplie = 10;\\n\\n        if(x < 0) {\\n            return false;\\n        } else if(x == 0) {\\n            return true;\\n        }\\n\\n        while(check > 0) {\\n            reminder = check % modMultiplie;\\n            check = check / modMultiplie;\\n\\n            result = (result * modMultiplie) + reminder;\\n        }\\n        if(result == x) {\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n``"
                    }
                ]
            },
            {
                "id": 1700870,
                "content": [
                    {
                        "username": "aivanilov",
                        "content": "Two pointers approach with conversion to String gives really nice performance. Math approach gives O(logN) and conversion to String should be O(n) but performance, calculated by Leetcode, is extremely high in the following approach. Any thought why? \\n\\n ```\\npublic boolean isPalindrome(int x) {\\n        String number = String.valueOf(x);\\n        int left = 0;\\n        int right = number.length() - 1;\\n        while (left < right){\\n            if (number.charAt(left) != number.charAt(right)) {\\n                return false;\\n            }\\n            left++;\\n            right--;\\n        }\\n        return true;\\n    }"
                    },
                    {
                        "username": "agnivS",
                        "content": "Simply convert this integer to a String and then find a way to check for palindromes via using string methods. StringBuilder class might be helpful. I don\\'t believe this problem is beneficial enough of an exercise in algorithms as the most naive methods can easily solve it. "
                    },
                    {
                        "username": "vishal_2970",
                        "content": "//Bhaii Dekho isme kya galat hai\\n//run karne p sahi de raha hai test case 3 p lekin submit karne p galat de raha\\nclass Solution {\\n    static int sum[]=new int[1];\\n    public boolean isPalindrome(int x) {\\n        // int x=12321;\\n        if(x<0){\\n            return false;\\n        }\\n        if(x==0 || x==1){\\n            return true;\\n        }\\n        int temp=x;\\n        rev(temp);\\n        if(x==sum[0]){\\n            return true;\\n        } \\n        return false;\\n    }\\n    static void rev(int x){\\n        if(x==0){\\n            return;\\n        }\\n        int rem=x%10;\\n        sum[0] = sum[0]*10+rem;\\n        rev(x/10);\\n    }\\n}"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "bool isPalindrome(long x) {\\n        long n = x;\\n        long sum = 0;\\n        while(n>0){\\n            long r = n%10;\\n            sum = sum*10 + r;\\n            n = n/10;\\n        }\\n        if(sum == x and x>=0){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }"
                    },
                    {
                        "username": "harshitsinghcode",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int ans=0;\\n        \\n        while(x!=0){\\n            \\n            int lastDig=x%10;\\n            \\n            if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            \\n            ans=(ans*10)+lastDig;\\n            \\n            x=x/10;\\n        }\\n        \\n        if(x==ans){\\n            return true;\\n        }\\n        \\n        \\n        else{\\n        return false;\\n        }\\n    }\\n};\\n\\n\\n\\n\\nam not getting the right output after this, can you just review and tell?\\n"
                    },
                    {
                        "username": "harshitsinghcode",
                        "content": "CORRECT CODE FROM MY SIDE - \\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int ans=0;\\n        int t=x;\\n        while(x!=0){\\n            \\n            int lastDig=x%10;\\n            \\n            if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            \\n            ans=(ans*10)+lastDig;\\n            \\n            x=x/10;\\n        }\\n        if(t<0)\\n        cout<<\"false\"<<endl;\\n        else{\\n        if(t==ans){\\n            return true;\\n        }\\n        \\n        \\n        else{\\n        return false;\\n        }\\n        }\\n        return 0;\\n    }\\n};"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "For C++ ans PLS CHECKOUT THIS LINK\\nLEAVE A STAR if you find it useful\\n\\nhttps://github.com/AnkushRawat10601/Leetcode/blob/main/09_pallindrome.cpp"
                    },
                    {
                        "username": "Miakiru",
                        "content": " `def isPalindrome(self, x):    \\n    my_list = list(str(x))\\n    reversed_list = list(reversed(my_list))\\n    res = my_list==reversed_list\\n    print(res)\\n    `\\n\\nWhy that doesn\\'t work? It gives the false result to everything in this website, other environment is working fine."
                    },
                    {
                        "username": "silent_voice143",
                        "content": "testcases are little weird if i m giving -121 it showing false but it is also palindrome but anyway output coming ."
                    },
                    {
                        "username": "alex_arpit",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int temp,r;\\n        int sum=0;\\n        if(x<0)\\n        return false;\\n        else{\\n            temp=x;\\n            while(x>0){\\n             r=x%10;\\n             sum=(sum*10)+r;\\n             x/=10;\\n             \\n            }\\n            if(temp==sum){\\n            return true;\\n            }\\n            else{\\n                return false;\\n            } \\n            \\n        }\\n        \\n    }\\n}"
                    },
                    {
                        "username": "mudssira01",
                        "content": "Best 17 ms solution\\n \\n``\\npublic boolean isPalindrome(int x) {\\n        int check = x;\\n        int result = 0;\\n        int reminder = 0;\\n        int modMultiplie = 10;\\n\\n        if(x < 0) {\\n            return false;\\n        } else if(x == 0) {\\n            return true;\\n        }\\n\\n        while(check > 0) {\\n            reminder = check % modMultiplie;\\n            check = check / modMultiplie;\\n\\n            result = (result * modMultiplie) + reminder;\\n        }\\n        if(result == x) {\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n``"
                    }
                ]
            },
            {
                "id": 1692815,
                "content": [
                    {
                        "username": "aivanilov",
                        "content": "Two pointers approach with conversion to String gives really nice performance. Math approach gives O(logN) and conversion to String should be O(n) but performance, calculated by Leetcode, is extremely high in the following approach. Any thought why? \\n\\n ```\\npublic boolean isPalindrome(int x) {\\n        String number = String.valueOf(x);\\n        int left = 0;\\n        int right = number.length() - 1;\\n        while (left < right){\\n            if (number.charAt(left) != number.charAt(right)) {\\n                return false;\\n            }\\n            left++;\\n            right--;\\n        }\\n        return true;\\n    }"
                    },
                    {
                        "username": "agnivS",
                        "content": "Simply convert this integer to a String and then find a way to check for palindromes via using string methods. StringBuilder class might be helpful. I don\\'t believe this problem is beneficial enough of an exercise in algorithms as the most naive methods can easily solve it. "
                    },
                    {
                        "username": "vishal_2970",
                        "content": "//Bhaii Dekho isme kya galat hai\\n//run karne p sahi de raha hai test case 3 p lekin submit karne p galat de raha\\nclass Solution {\\n    static int sum[]=new int[1];\\n    public boolean isPalindrome(int x) {\\n        // int x=12321;\\n        if(x<0){\\n            return false;\\n        }\\n        if(x==0 || x==1){\\n            return true;\\n        }\\n        int temp=x;\\n        rev(temp);\\n        if(x==sum[0]){\\n            return true;\\n        } \\n        return false;\\n    }\\n    static void rev(int x){\\n        if(x==0){\\n            return;\\n        }\\n        int rem=x%10;\\n        sum[0] = sum[0]*10+rem;\\n        rev(x/10);\\n    }\\n}"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "bool isPalindrome(long x) {\\n        long n = x;\\n        long sum = 0;\\n        while(n>0){\\n            long r = n%10;\\n            sum = sum*10 + r;\\n            n = n/10;\\n        }\\n        if(sum == x and x>=0){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }"
                    },
                    {
                        "username": "harshitsinghcode",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int ans=0;\\n        \\n        while(x!=0){\\n            \\n            int lastDig=x%10;\\n            \\n            if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            \\n            ans=(ans*10)+lastDig;\\n            \\n            x=x/10;\\n        }\\n        \\n        if(x==ans){\\n            return true;\\n        }\\n        \\n        \\n        else{\\n        return false;\\n        }\\n    }\\n};\\n\\n\\n\\n\\nam not getting the right output after this, can you just review and tell?\\n"
                    },
                    {
                        "username": "harshitsinghcode",
                        "content": "CORRECT CODE FROM MY SIDE - \\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int ans=0;\\n        int t=x;\\n        while(x!=0){\\n            \\n            int lastDig=x%10;\\n            \\n            if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            \\n            ans=(ans*10)+lastDig;\\n            \\n            x=x/10;\\n        }\\n        if(t<0)\\n        cout<<\"false\"<<endl;\\n        else{\\n        if(t==ans){\\n            return true;\\n        }\\n        \\n        \\n        else{\\n        return false;\\n        }\\n        }\\n        return 0;\\n    }\\n};"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "For C++ ans PLS CHECKOUT THIS LINK\\nLEAVE A STAR if you find it useful\\n\\nhttps://github.com/AnkushRawat10601/Leetcode/blob/main/09_pallindrome.cpp"
                    },
                    {
                        "username": "Miakiru",
                        "content": " `def isPalindrome(self, x):    \\n    my_list = list(str(x))\\n    reversed_list = list(reversed(my_list))\\n    res = my_list==reversed_list\\n    print(res)\\n    `\\n\\nWhy that doesn\\'t work? It gives the false result to everything in this website, other environment is working fine."
                    },
                    {
                        "username": "silent_voice143",
                        "content": "testcases are little weird if i m giving -121 it showing false but it is also palindrome but anyway output coming ."
                    },
                    {
                        "username": "alex_arpit",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int temp,r;\\n        int sum=0;\\n        if(x<0)\\n        return false;\\n        else{\\n            temp=x;\\n            while(x>0){\\n             r=x%10;\\n             sum=(sum*10)+r;\\n             x/=10;\\n             \\n            }\\n            if(temp==sum){\\n            return true;\\n            }\\n            else{\\n                return false;\\n            } \\n            \\n        }\\n        \\n    }\\n}"
                    },
                    {
                        "username": "mudssira01",
                        "content": "Best 17 ms solution\\n \\n``\\npublic boolean isPalindrome(int x) {\\n        int check = x;\\n        int result = 0;\\n        int reminder = 0;\\n        int modMultiplie = 10;\\n\\n        if(x < 0) {\\n            return false;\\n        } else if(x == 0) {\\n            return true;\\n        }\\n\\n        while(check > 0) {\\n            reminder = check % modMultiplie;\\n            check = check / modMultiplie;\\n\\n            result = (result * modMultiplie) + reminder;\\n        }\\n        if(result == x) {\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n``"
                    }
                ]
            },
            {
                "id": 1692472,
                "content": [
                    {
                        "username": "aivanilov",
                        "content": "Two pointers approach with conversion to String gives really nice performance. Math approach gives O(logN) and conversion to String should be O(n) but performance, calculated by Leetcode, is extremely high in the following approach. Any thought why? \\n\\n ```\\npublic boolean isPalindrome(int x) {\\n        String number = String.valueOf(x);\\n        int left = 0;\\n        int right = number.length() - 1;\\n        while (left < right){\\n            if (number.charAt(left) != number.charAt(right)) {\\n                return false;\\n            }\\n            left++;\\n            right--;\\n        }\\n        return true;\\n    }"
                    },
                    {
                        "username": "agnivS",
                        "content": "Simply convert this integer to a String and then find a way to check for palindromes via using string methods. StringBuilder class might be helpful. I don\\'t believe this problem is beneficial enough of an exercise in algorithms as the most naive methods can easily solve it. "
                    },
                    {
                        "username": "vishal_2970",
                        "content": "//Bhaii Dekho isme kya galat hai\\n//run karne p sahi de raha hai test case 3 p lekin submit karne p galat de raha\\nclass Solution {\\n    static int sum[]=new int[1];\\n    public boolean isPalindrome(int x) {\\n        // int x=12321;\\n        if(x<0){\\n            return false;\\n        }\\n        if(x==0 || x==1){\\n            return true;\\n        }\\n        int temp=x;\\n        rev(temp);\\n        if(x==sum[0]){\\n            return true;\\n        } \\n        return false;\\n    }\\n    static void rev(int x){\\n        if(x==0){\\n            return;\\n        }\\n        int rem=x%10;\\n        sum[0] = sum[0]*10+rem;\\n        rev(x/10);\\n    }\\n}"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "bool isPalindrome(long x) {\\n        long n = x;\\n        long sum = 0;\\n        while(n>0){\\n            long r = n%10;\\n            sum = sum*10 + r;\\n            n = n/10;\\n        }\\n        if(sum == x and x>=0){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }"
                    },
                    {
                        "username": "harshitsinghcode",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int ans=0;\\n        \\n        while(x!=0){\\n            \\n            int lastDig=x%10;\\n            \\n            if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            \\n            ans=(ans*10)+lastDig;\\n            \\n            x=x/10;\\n        }\\n        \\n        if(x==ans){\\n            return true;\\n        }\\n        \\n        \\n        else{\\n        return false;\\n        }\\n    }\\n};\\n\\n\\n\\n\\nam not getting the right output after this, can you just review and tell?\\n"
                    },
                    {
                        "username": "harshitsinghcode",
                        "content": "CORRECT CODE FROM MY SIDE - \\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int ans=0;\\n        int t=x;\\n        while(x!=0){\\n            \\n            int lastDig=x%10;\\n            \\n            if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            \\n            ans=(ans*10)+lastDig;\\n            \\n            x=x/10;\\n        }\\n        if(t<0)\\n        cout<<\"false\"<<endl;\\n        else{\\n        if(t==ans){\\n            return true;\\n        }\\n        \\n        \\n        else{\\n        return false;\\n        }\\n        }\\n        return 0;\\n    }\\n};"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "For C++ ans PLS CHECKOUT THIS LINK\\nLEAVE A STAR if you find it useful\\n\\nhttps://github.com/AnkushRawat10601/Leetcode/blob/main/09_pallindrome.cpp"
                    },
                    {
                        "username": "Miakiru",
                        "content": " `def isPalindrome(self, x):    \\n    my_list = list(str(x))\\n    reversed_list = list(reversed(my_list))\\n    res = my_list==reversed_list\\n    print(res)\\n    `\\n\\nWhy that doesn\\'t work? It gives the false result to everything in this website, other environment is working fine."
                    },
                    {
                        "username": "silent_voice143",
                        "content": "testcases are little weird if i m giving -121 it showing false but it is also palindrome but anyway output coming ."
                    },
                    {
                        "username": "alex_arpit",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int temp,r;\\n        int sum=0;\\n        if(x<0)\\n        return false;\\n        else{\\n            temp=x;\\n            while(x>0){\\n             r=x%10;\\n             sum=(sum*10)+r;\\n             x/=10;\\n             \\n            }\\n            if(temp==sum){\\n            return true;\\n            }\\n            else{\\n                return false;\\n            } \\n            \\n        }\\n        \\n    }\\n}"
                    },
                    {
                        "username": "mudssira01",
                        "content": "Best 17 ms solution\\n \\n``\\npublic boolean isPalindrome(int x) {\\n        int check = x;\\n        int result = 0;\\n        int reminder = 0;\\n        int modMultiplie = 10;\\n\\n        if(x < 0) {\\n            return false;\\n        } else if(x == 0) {\\n            return true;\\n        }\\n\\n        while(check > 0) {\\n            reminder = check % modMultiplie;\\n            check = check / modMultiplie;\\n\\n            result = (result * modMultiplie) + reminder;\\n        }\\n        if(result == x) {\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n``"
                    }
                ]
            },
            {
                "id": 1692096,
                "content": [
                    {
                        "username": "aivanilov",
                        "content": "Two pointers approach with conversion to String gives really nice performance. Math approach gives O(logN) and conversion to String should be O(n) but performance, calculated by Leetcode, is extremely high in the following approach. Any thought why? \\n\\n ```\\npublic boolean isPalindrome(int x) {\\n        String number = String.valueOf(x);\\n        int left = 0;\\n        int right = number.length() - 1;\\n        while (left < right){\\n            if (number.charAt(left) != number.charAt(right)) {\\n                return false;\\n            }\\n            left++;\\n            right--;\\n        }\\n        return true;\\n    }"
                    },
                    {
                        "username": "agnivS",
                        "content": "Simply convert this integer to a String and then find a way to check for palindromes via using string methods. StringBuilder class might be helpful. I don\\'t believe this problem is beneficial enough of an exercise in algorithms as the most naive methods can easily solve it. "
                    },
                    {
                        "username": "vishal_2970",
                        "content": "//Bhaii Dekho isme kya galat hai\\n//run karne p sahi de raha hai test case 3 p lekin submit karne p galat de raha\\nclass Solution {\\n    static int sum[]=new int[1];\\n    public boolean isPalindrome(int x) {\\n        // int x=12321;\\n        if(x<0){\\n            return false;\\n        }\\n        if(x==0 || x==1){\\n            return true;\\n        }\\n        int temp=x;\\n        rev(temp);\\n        if(x==sum[0]){\\n            return true;\\n        } \\n        return false;\\n    }\\n    static void rev(int x){\\n        if(x==0){\\n            return;\\n        }\\n        int rem=x%10;\\n        sum[0] = sum[0]*10+rem;\\n        rev(x/10);\\n    }\\n}"
                    },
                    {
                        "username": "Yugant_Singh",
                        "content": "bool isPalindrome(long x) {\\n        long n = x;\\n        long sum = 0;\\n        while(n>0){\\n            long r = n%10;\\n            sum = sum*10 + r;\\n            n = n/10;\\n        }\\n        if(sum == x and x>=0){\\n            return true;\\n        }\\n        else{\\n            return false;\\n        }\\n    }"
                    },
                    {
                        "username": "harshitsinghcode",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int ans=0;\\n        \\n        while(x!=0){\\n            \\n            int lastDig=x%10;\\n            \\n            if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            \\n            ans=(ans*10)+lastDig;\\n            \\n            x=x/10;\\n        }\\n        \\n        if(x==ans){\\n            return true;\\n        }\\n        \\n        \\n        else{\\n        return false;\\n        }\\n    }\\n};\\n\\n\\n\\n\\nam not getting the right output after this, can you just review and tell?\\n"
                    },
                    {
                        "username": "harshitsinghcode",
                        "content": "CORRECT CODE FROM MY SIDE - \\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int ans=0;\\n        int t=x;\\n        while(x!=0){\\n            \\n            int lastDig=x%10;\\n            \\n            if((ans>INT_MAX/10)||(ans<INT_MIN/10)){\\n                return 0;\\n            }\\n            \\n            ans=(ans*10)+lastDig;\\n            \\n            x=x/10;\\n        }\\n        if(t<0)\\n        cout<<\"false\"<<endl;\\n        else{\\n        if(t==ans){\\n            return true;\\n        }\\n        \\n        \\n        else{\\n        return false;\\n        }\\n        }\\n        return 0;\\n    }\\n};"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "For C++ ans PLS CHECKOUT THIS LINK\\nLEAVE A STAR if you find it useful\\n\\nhttps://github.com/AnkushRawat10601/Leetcode/blob/main/09_pallindrome.cpp"
                    },
                    {
                        "username": "Miakiru",
                        "content": " `def isPalindrome(self, x):    \\n    my_list = list(str(x))\\n    reversed_list = list(reversed(my_list))\\n    res = my_list==reversed_list\\n    print(res)\\n    `\\n\\nWhy that doesn\\'t work? It gives the false result to everything in this website, other environment is working fine."
                    },
                    {
                        "username": "silent_voice143",
                        "content": "testcases are little weird if i m giving -121 it showing false but it is also palindrome but anyway output coming ."
                    },
                    {
                        "username": "alex_arpit",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n        int temp,r;\\n        int sum=0;\\n        if(x<0)\\n        return false;\\n        else{\\n            temp=x;\\n            while(x>0){\\n             r=x%10;\\n             sum=(sum*10)+r;\\n             x/=10;\\n             \\n            }\\n            if(temp==sum){\\n            return true;\\n            }\\n            else{\\n                return false;\\n            } \\n            \\n        }\\n        \\n    }\\n}"
                    },
                    {
                        "username": "mudssira01",
                        "content": "Best 17 ms solution\\n \\n``\\npublic boolean isPalindrome(int x) {\\n        int check = x;\\n        int result = 0;\\n        int reminder = 0;\\n        int modMultiplie = 10;\\n\\n        if(x < 0) {\\n            return false;\\n        } else if(x == 0) {\\n            return true;\\n        }\\n\\n        while(check > 0) {\\n            reminder = check % modMultiplie;\\n            check = check / modMultiplie;\\n\\n            result = (result * modMultiplie) + reminder;\\n        }\\n        if(result == x) {\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n``"
                    }
                ]
            },
            {
                "id": 1691105,
                "content": [
                    {
                        "username": "mustahid19",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        reverse = str(x)[::-1]\\n        if str(x) == reverse:\\n            return True\\n        else:\\n            return False"
                    },
                    {
                        "username": "RachelWealth",
                        "content": "I don\\'t understand why it doesn\\'t break out of the while loop while temp==0:\\n`` `\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        # method one-------------------\\n        reverseNumber = 0\\n        remainder = 0\\n        temp = x\\n        while (temp != 0):\\n            reverseNumber = reverseNumber*10+temp%10\\n            temp = temp // 10\\n            \\n        return x == reverseNumber\\n```"
                    },
                    {
                        "username": "tarunkesavk",
                        "content": "I am new here  I am unable to pass the first case. All my test cases are passing well except first one."
                    },
                    {
                        "username": "princethet",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int sum=0,rem;\\n        int n=x;\\n        while(n!=0){\\n            rem = n%10;\\n            sum = sum*10 + rem;\\n            n/=10;\\n        }\\n        if(sum==x){\\n            return true;\\n        }\\n        else if(sum!=x && x<0){\\n            return false;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};\\n\\n\\n\\ncan anyone tell ? what is wrong with my code?"
                    },
                    {
                        "username": "arjunpatel007",
                        "content": "c++ easy to understand Solution\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int temp = x;\\n        long long result = 0;\\n        while(temp){\\n        int rem = temp % 10;\\n        result = result*10 + rem;\\n        temp /= 10;\\n        }\\n        if(x==0){return true;}\\n        else if(x==result && x>0){\\n            return true;\\n        }\\n        else return false;\\n    }\\n};"
                    },
                    {
                        "username": "prathamrajsri2003",
                        "content": "why does it take main as a global variable in c++ when I try to write the palindrome code in pure cpp"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-palindrome-number-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-palindrome-number-problem-solution.html)"
                    },
                    {
                        "username": "BhagyashreeArakeri",
                        "content": "Here is easy solution :\\npublic boolean isPalindrome(int x) {\\n        int origi = x, res = 0;\\n        if(x < 0)\\n            return false;\\n        while(x > 0){\\n            int rem = x % 10;\\n            res = (res * 10) + rem;\\n            x = x / 10;\\n        }\\n        if(origi == res)\\n            return true;\\n        return false;\\n    }\\n\\n"
                    },
                    {
                        "username": "Gavaskar004",
                        "content": "class Solution:\\n     def isPalindrome(self,number):\\n        \\n        n=number\\n        org=number\\n        j=0\\n        while n>1:\\n            \\n            if n>1:\\n                j=j+1\\n            else:\\n                break\\n            n=n/10\\n        i=j\\n       \\n        new=0\\n        x=number\\n        while i>=1:\\n            x=(int(number/10**(i-1)))\\n            new=new+x*10**(j-i)\\n            number=abs(number-x*10**(i-1))\\n            i=i-1\\n            \\n        if new==org:\\n            print(\"True\")\\n            \\n        else:\\n            print(\\'False\\')\\n        \\nSolution.isPalindrome(\\'name\\',121)\\n\\nWhy this isn\\'t working here, For 121. I get correct in other IDE"
                    },
                    {
                        "username": "tarunkesavk",
                        "content": "i am also facing same issue"
                    },
                    {
                        "username": "prateek_singh26",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n       String str = String.valueOf(x);\\n       for(int i = 0, j  = str.length()-1; i<str.length(); j--, i++)\\n           if(str.charAt(i)!=str.charAt(j))\\n               return false;\\n        return true;\\n    }\\n}"
                    }
                ]
            },
            {
                "id": 1689697,
                "content": [
                    {
                        "username": "mustahid19",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        reverse = str(x)[::-1]\\n        if str(x) == reverse:\\n            return True\\n        else:\\n            return False"
                    },
                    {
                        "username": "RachelWealth",
                        "content": "I don\\'t understand why it doesn\\'t break out of the while loop while temp==0:\\n`` `\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        # method one-------------------\\n        reverseNumber = 0\\n        remainder = 0\\n        temp = x\\n        while (temp != 0):\\n            reverseNumber = reverseNumber*10+temp%10\\n            temp = temp // 10\\n            \\n        return x == reverseNumber\\n```"
                    },
                    {
                        "username": "tarunkesavk",
                        "content": "I am new here  I am unable to pass the first case. All my test cases are passing well except first one."
                    },
                    {
                        "username": "princethet",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int sum=0,rem;\\n        int n=x;\\n        while(n!=0){\\n            rem = n%10;\\n            sum = sum*10 + rem;\\n            n/=10;\\n        }\\n        if(sum==x){\\n            return true;\\n        }\\n        else if(sum!=x && x<0){\\n            return false;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};\\n\\n\\n\\ncan anyone tell ? what is wrong with my code?"
                    },
                    {
                        "username": "arjunpatel007",
                        "content": "c++ easy to understand Solution\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int temp = x;\\n        long long result = 0;\\n        while(temp){\\n        int rem = temp % 10;\\n        result = result*10 + rem;\\n        temp /= 10;\\n        }\\n        if(x==0){return true;}\\n        else if(x==result && x>0){\\n            return true;\\n        }\\n        else return false;\\n    }\\n};"
                    },
                    {
                        "username": "prathamrajsri2003",
                        "content": "why does it take main as a global variable in c++ when I try to write the palindrome code in pure cpp"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-palindrome-number-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-palindrome-number-problem-solution.html)"
                    },
                    {
                        "username": "BhagyashreeArakeri",
                        "content": "Here is easy solution :\\npublic boolean isPalindrome(int x) {\\n        int origi = x, res = 0;\\n        if(x < 0)\\n            return false;\\n        while(x > 0){\\n            int rem = x % 10;\\n            res = (res * 10) + rem;\\n            x = x / 10;\\n        }\\n        if(origi == res)\\n            return true;\\n        return false;\\n    }\\n\\n"
                    },
                    {
                        "username": "Gavaskar004",
                        "content": "class Solution:\\n     def isPalindrome(self,number):\\n        \\n        n=number\\n        org=number\\n        j=0\\n        while n>1:\\n            \\n            if n>1:\\n                j=j+1\\n            else:\\n                break\\n            n=n/10\\n        i=j\\n       \\n        new=0\\n        x=number\\n        while i>=1:\\n            x=(int(number/10**(i-1)))\\n            new=new+x*10**(j-i)\\n            number=abs(number-x*10**(i-1))\\n            i=i-1\\n            \\n        if new==org:\\n            print(\"True\")\\n            \\n        else:\\n            print(\\'False\\')\\n        \\nSolution.isPalindrome(\\'name\\',121)\\n\\nWhy this isn\\'t working here, For 121. I get correct in other IDE"
                    },
                    {
                        "username": "tarunkesavk",
                        "content": "i am also facing same issue"
                    },
                    {
                        "username": "prateek_singh26",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n       String str = String.valueOf(x);\\n       for(int i = 0, j  = str.length()-1; i<str.length(); j--, i++)\\n           if(str.charAt(i)!=str.charAt(j))\\n               return false;\\n        return true;\\n    }\\n}"
                    }
                ]
            },
            {
                "id": 1678539,
                "content": [
                    {
                        "username": "mustahid19",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        reverse = str(x)[::-1]\\n        if str(x) == reverse:\\n            return True\\n        else:\\n            return False"
                    },
                    {
                        "username": "RachelWealth",
                        "content": "I don\\'t understand why it doesn\\'t break out of the while loop while temp==0:\\n`` `\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        # method one-------------------\\n        reverseNumber = 0\\n        remainder = 0\\n        temp = x\\n        while (temp != 0):\\n            reverseNumber = reverseNumber*10+temp%10\\n            temp = temp // 10\\n            \\n        return x == reverseNumber\\n```"
                    },
                    {
                        "username": "tarunkesavk",
                        "content": "I am new here  I am unable to pass the first case. All my test cases are passing well except first one."
                    },
                    {
                        "username": "princethet",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int sum=0,rem;\\n        int n=x;\\n        while(n!=0){\\n            rem = n%10;\\n            sum = sum*10 + rem;\\n            n/=10;\\n        }\\n        if(sum==x){\\n            return true;\\n        }\\n        else if(sum!=x && x<0){\\n            return false;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};\\n\\n\\n\\ncan anyone tell ? what is wrong with my code?"
                    },
                    {
                        "username": "arjunpatel007",
                        "content": "c++ easy to understand Solution\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int temp = x;\\n        long long result = 0;\\n        while(temp){\\n        int rem = temp % 10;\\n        result = result*10 + rem;\\n        temp /= 10;\\n        }\\n        if(x==0){return true;}\\n        else if(x==result && x>0){\\n            return true;\\n        }\\n        else return false;\\n    }\\n};"
                    },
                    {
                        "username": "prathamrajsri2003",
                        "content": "why does it take main as a global variable in c++ when I try to write the palindrome code in pure cpp"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-palindrome-number-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-palindrome-number-problem-solution.html)"
                    },
                    {
                        "username": "BhagyashreeArakeri",
                        "content": "Here is easy solution :\\npublic boolean isPalindrome(int x) {\\n        int origi = x, res = 0;\\n        if(x < 0)\\n            return false;\\n        while(x > 0){\\n            int rem = x % 10;\\n            res = (res * 10) + rem;\\n            x = x / 10;\\n        }\\n        if(origi == res)\\n            return true;\\n        return false;\\n    }\\n\\n"
                    },
                    {
                        "username": "Gavaskar004",
                        "content": "class Solution:\\n     def isPalindrome(self,number):\\n        \\n        n=number\\n        org=number\\n        j=0\\n        while n>1:\\n            \\n            if n>1:\\n                j=j+1\\n            else:\\n                break\\n            n=n/10\\n        i=j\\n       \\n        new=0\\n        x=number\\n        while i>=1:\\n            x=(int(number/10**(i-1)))\\n            new=new+x*10**(j-i)\\n            number=abs(number-x*10**(i-1))\\n            i=i-1\\n            \\n        if new==org:\\n            print(\"True\")\\n            \\n        else:\\n            print(\\'False\\')\\n        \\nSolution.isPalindrome(\\'name\\',121)\\n\\nWhy this isn\\'t working here, For 121. I get correct in other IDE"
                    },
                    {
                        "username": "tarunkesavk",
                        "content": "i am also facing same issue"
                    },
                    {
                        "username": "prateek_singh26",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n       String str = String.valueOf(x);\\n       for(int i = 0, j  = str.length()-1; i<str.length(); j--, i++)\\n           if(str.charAt(i)!=str.charAt(j))\\n               return false;\\n        return true;\\n    }\\n}"
                    }
                ]
            },
            {
                "id": 1677535,
                "content": [
                    {
                        "username": "mustahid19",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        reverse = str(x)[::-1]\\n        if str(x) == reverse:\\n            return True\\n        else:\\n            return False"
                    },
                    {
                        "username": "RachelWealth",
                        "content": "I don\\'t understand why it doesn\\'t break out of the while loop while temp==0:\\n`` `\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        # method one-------------------\\n        reverseNumber = 0\\n        remainder = 0\\n        temp = x\\n        while (temp != 0):\\n            reverseNumber = reverseNumber*10+temp%10\\n            temp = temp // 10\\n            \\n        return x == reverseNumber\\n```"
                    },
                    {
                        "username": "tarunkesavk",
                        "content": "I am new here  I am unable to pass the first case. All my test cases are passing well except first one."
                    },
                    {
                        "username": "princethet",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int sum=0,rem;\\n        int n=x;\\n        while(n!=0){\\n            rem = n%10;\\n            sum = sum*10 + rem;\\n            n/=10;\\n        }\\n        if(sum==x){\\n            return true;\\n        }\\n        else if(sum!=x && x<0){\\n            return false;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};\\n\\n\\n\\ncan anyone tell ? what is wrong with my code?"
                    },
                    {
                        "username": "arjunpatel007",
                        "content": "c++ easy to understand Solution\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int temp = x;\\n        long long result = 0;\\n        while(temp){\\n        int rem = temp % 10;\\n        result = result*10 + rem;\\n        temp /= 10;\\n        }\\n        if(x==0){return true;}\\n        else if(x==result && x>0){\\n            return true;\\n        }\\n        else return false;\\n    }\\n};"
                    },
                    {
                        "username": "prathamrajsri2003",
                        "content": "why does it take main as a global variable in c++ when I try to write the palindrome code in pure cpp"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-palindrome-number-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-palindrome-number-problem-solution.html)"
                    },
                    {
                        "username": "BhagyashreeArakeri",
                        "content": "Here is easy solution :\\npublic boolean isPalindrome(int x) {\\n        int origi = x, res = 0;\\n        if(x < 0)\\n            return false;\\n        while(x > 0){\\n            int rem = x % 10;\\n            res = (res * 10) + rem;\\n            x = x / 10;\\n        }\\n        if(origi == res)\\n            return true;\\n        return false;\\n    }\\n\\n"
                    },
                    {
                        "username": "Gavaskar004",
                        "content": "class Solution:\\n     def isPalindrome(self,number):\\n        \\n        n=number\\n        org=number\\n        j=0\\n        while n>1:\\n            \\n            if n>1:\\n                j=j+1\\n            else:\\n                break\\n            n=n/10\\n        i=j\\n       \\n        new=0\\n        x=number\\n        while i>=1:\\n            x=(int(number/10**(i-1)))\\n            new=new+x*10**(j-i)\\n            number=abs(number-x*10**(i-1))\\n            i=i-1\\n            \\n        if new==org:\\n            print(\"True\")\\n            \\n        else:\\n            print(\\'False\\')\\n        \\nSolution.isPalindrome(\\'name\\',121)\\n\\nWhy this isn\\'t working here, For 121. I get correct in other IDE"
                    },
                    {
                        "username": "tarunkesavk",
                        "content": "i am also facing same issue"
                    },
                    {
                        "username": "prateek_singh26",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n       String str = String.valueOf(x);\\n       for(int i = 0, j  = str.length()-1; i<str.length(); j--, i++)\\n           if(str.charAt(i)!=str.charAt(j))\\n               return false;\\n        return true;\\n    }\\n}"
                    }
                ]
            },
            {
                "id": 1672244,
                "content": [
                    {
                        "username": "mustahid19",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        reverse = str(x)[::-1]\\n        if str(x) == reverse:\\n            return True\\n        else:\\n            return False"
                    },
                    {
                        "username": "RachelWealth",
                        "content": "I don\\'t understand why it doesn\\'t break out of the while loop while temp==0:\\n`` `\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        # method one-------------------\\n        reverseNumber = 0\\n        remainder = 0\\n        temp = x\\n        while (temp != 0):\\n            reverseNumber = reverseNumber*10+temp%10\\n            temp = temp // 10\\n            \\n        return x == reverseNumber\\n```"
                    },
                    {
                        "username": "tarunkesavk",
                        "content": "I am new here  I am unable to pass the first case. All my test cases are passing well except first one."
                    },
                    {
                        "username": "princethet",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int sum=0,rem;\\n        int n=x;\\n        while(n!=0){\\n            rem = n%10;\\n            sum = sum*10 + rem;\\n            n/=10;\\n        }\\n        if(sum==x){\\n            return true;\\n        }\\n        else if(sum!=x && x<0){\\n            return false;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};\\n\\n\\n\\ncan anyone tell ? what is wrong with my code?"
                    },
                    {
                        "username": "arjunpatel007",
                        "content": "c++ easy to understand Solution\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int temp = x;\\n        long long result = 0;\\n        while(temp){\\n        int rem = temp % 10;\\n        result = result*10 + rem;\\n        temp /= 10;\\n        }\\n        if(x==0){return true;}\\n        else if(x==result && x>0){\\n            return true;\\n        }\\n        else return false;\\n    }\\n};"
                    },
                    {
                        "username": "prathamrajsri2003",
                        "content": "why does it take main as a global variable in c++ when I try to write the palindrome code in pure cpp"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-palindrome-number-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-palindrome-number-problem-solution.html)"
                    },
                    {
                        "username": "BhagyashreeArakeri",
                        "content": "Here is easy solution :\\npublic boolean isPalindrome(int x) {\\n        int origi = x, res = 0;\\n        if(x < 0)\\n            return false;\\n        while(x > 0){\\n            int rem = x % 10;\\n            res = (res * 10) + rem;\\n            x = x / 10;\\n        }\\n        if(origi == res)\\n            return true;\\n        return false;\\n    }\\n\\n"
                    },
                    {
                        "username": "Gavaskar004",
                        "content": "class Solution:\\n     def isPalindrome(self,number):\\n        \\n        n=number\\n        org=number\\n        j=0\\n        while n>1:\\n            \\n            if n>1:\\n                j=j+1\\n            else:\\n                break\\n            n=n/10\\n        i=j\\n       \\n        new=0\\n        x=number\\n        while i>=1:\\n            x=(int(number/10**(i-1)))\\n            new=new+x*10**(j-i)\\n            number=abs(number-x*10**(i-1))\\n            i=i-1\\n            \\n        if new==org:\\n            print(\"True\")\\n            \\n        else:\\n            print(\\'False\\')\\n        \\nSolution.isPalindrome(\\'name\\',121)\\n\\nWhy this isn\\'t working here, For 121. I get correct in other IDE"
                    },
                    {
                        "username": "tarunkesavk",
                        "content": "i am also facing same issue"
                    },
                    {
                        "username": "prateek_singh26",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n       String str = String.valueOf(x);\\n       for(int i = 0, j  = str.length()-1; i<str.length(); j--, i++)\\n           if(str.charAt(i)!=str.charAt(j))\\n               return false;\\n        return true;\\n    }\\n}"
                    }
                ]
            },
            {
                "id": 1672205,
                "content": [
                    {
                        "username": "mustahid19",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        reverse = str(x)[::-1]\\n        if str(x) == reverse:\\n            return True\\n        else:\\n            return False"
                    },
                    {
                        "username": "RachelWealth",
                        "content": "I don\\'t understand why it doesn\\'t break out of the while loop while temp==0:\\n`` `\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        # method one-------------------\\n        reverseNumber = 0\\n        remainder = 0\\n        temp = x\\n        while (temp != 0):\\n            reverseNumber = reverseNumber*10+temp%10\\n            temp = temp // 10\\n            \\n        return x == reverseNumber\\n```"
                    },
                    {
                        "username": "tarunkesavk",
                        "content": "I am new here  I am unable to pass the first case. All my test cases are passing well except first one."
                    },
                    {
                        "username": "princethet",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int sum=0,rem;\\n        int n=x;\\n        while(n!=0){\\n            rem = n%10;\\n            sum = sum*10 + rem;\\n            n/=10;\\n        }\\n        if(sum==x){\\n            return true;\\n        }\\n        else if(sum!=x && x<0){\\n            return false;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};\\n\\n\\n\\ncan anyone tell ? what is wrong with my code?"
                    },
                    {
                        "username": "arjunpatel007",
                        "content": "c++ easy to understand Solution\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int temp = x;\\n        long long result = 0;\\n        while(temp){\\n        int rem = temp % 10;\\n        result = result*10 + rem;\\n        temp /= 10;\\n        }\\n        if(x==0){return true;}\\n        else if(x==result && x>0){\\n            return true;\\n        }\\n        else return false;\\n    }\\n};"
                    },
                    {
                        "username": "prathamrajsri2003",
                        "content": "why does it take main as a global variable in c++ when I try to write the palindrome code in pure cpp"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-palindrome-number-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-palindrome-number-problem-solution.html)"
                    },
                    {
                        "username": "BhagyashreeArakeri",
                        "content": "Here is easy solution :\\npublic boolean isPalindrome(int x) {\\n        int origi = x, res = 0;\\n        if(x < 0)\\n            return false;\\n        while(x > 0){\\n            int rem = x % 10;\\n            res = (res * 10) + rem;\\n            x = x / 10;\\n        }\\n        if(origi == res)\\n            return true;\\n        return false;\\n    }\\n\\n"
                    },
                    {
                        "username": "Gavaskar004",
                        "content": "class Solution:\\n     def isPalindrome(self,number):\\n        \\n        n=number\\n        org=number\\n        j=0\\n        while n>1:\\n            \\n            if n>1:\\n                j=j+1\\n            else:\\n                break\\n            n=n/10\\n        i=j\\n       \\n        new=0\\n        x=number\\n        while i>=1:\\n            x=(int(number/10**(i-1)))\\n            new=new+x*10**(j-i)\\n            number=abs(number-x*10**(i-1))\\n            i=i-1\\n            \\n        if new==org:\\n            print(\"True\")\\n            \\n        else:\\n            print(\\'False\\')\\n        \\nSolution.isPalindrome(\\'name\\',121)\\n\\nWhy this isn\\'t working here, For 121. I get correct in other IDE"
                    },
                    {
                        "username": "tarunkesavk",
                        "content": "i am also facing same issue"
                    },
                    {
                        "username": "prateek_singh26",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n       String str = String.valueOf(x);\\n       for(int i = 0, j  = str.length()-1; i<str.length(); j--, i++)\\n           if(str.charAt(i)!=str.charAt(j))\\n               return false;\\n        return true;\\n    }\\n}"
                    }
                ]
            },
            {
                "id": 1671237,
                "content": [
                    {
                        "username": "mustahid19",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        reverse = str(x)[::-1]\\n        if str(x) == reverse:\\n            return True\\n        else:\\n            return False"
                    },
                    {
                        "username": "RachelWealth",
                        "content": "I don\\'t understand why it doesn\\'t break out of the while loop while temp==0:\\n`` `\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        # method one-------------------\\n        reverseNumber = 0\\n        remainder = 0\\n        temp = x\\n        while (temp != 0):\\n            reverseNumber = reverseNumber*10+temp%10\\n            temp = temp // 10\\n            \\n        return x == reverseNumber\\n```"
                    },
                    {
                        "username": "tarunkesavk",
                        "content": "I am new here  I am unable to pass the first case. All my test cases are passing well except first one."
                    },
                    {
                        "username": "princethet",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int sum=0,rem;\\n        int n=x;\\n        while(n!=0){\\n            rem = n%10;\\n            sum = sum*10 + rem;\\n            n/=10;\\n        }\\n        if(sum==x){\\n            return true;\\n        }\\n        else if(sum!=x && x<0){\\n            return false;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};\\n\\n\\n\\ncan anyone tell ? what is wrong with my code?"
                    },
                    {
                        "username": "arjunpatel007",
                        "content": "c++ easy to understand Solution\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int temp = x;\\n        long long result = 0;\\n        while(temp){\\n        int rem = temp % 10;\\n        result = result*10 + rem;\\n        temp /= 10;\\n        }\\n        if(x==0){return true;}\\n        else if(x==result && x>0){\\n            return true;\\n        }\\n        else return false;\\n    }\\n};"
                    },
                    {
                        "username": "prathamrajsri2003",
                        "content": "why does it take main as a global variable in c++ when I try to write the palindrome code in pure cpp"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-palindrome-number-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-palindrome-number-problem-solution.html)"
                    },
                    {
                        "username": "BhagyashreeArakeri",
                        "content": "Here is easy solution :\\npublic boolean isPalindrome(int x) {\\n        int origi = x, res = 0;\\n        if(x < 0)\\n            return false;\\n        while(x > 0){\\n            int rem = x % 10;\\n            res = (res * 10) + rem;\\n            x = x / 10;\\n        }\\n        if(origi == res)\\n            return true;\\n        return false;\\n    }\\n\\n"
                    },
                    {
                        "username": "Gavaskar004",
                        "content": "class Solution:\\n     def isPalindrome(self,number):\\n        \\n        n=number\\n        org=number\\n        j=0\\n        while n>1:\\n            \\n            if n>1:\\n                j=j+1\\n            else:\\n                break\\n            n=n/10\\n        i=j\\n       \\n        new=0\\n        x=number\\n        while i>=1:\\n            x=(int(number/10**(i-1)))\\n            new=new+x*10**(j-i)\\n            number=abs(number-x*10**(i-1))\\n            i=i-1\\n            \\n        if new==org:\\n            print(\"True\")\\n            \\n        else:\\n            print(\\'False\\')\\n        \\nSolution.isPalindrome(\\'name\\',121)\\n\\nWhy this isn\\'t working here, For 121. I get correct in other IDE"
                    },
                    {
                        "username": "tarunkesavk",
                        "content": "i am also facing same issue"
                    },
                    {
                        "username": "prateek_singh26",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n       String str = String.valueOf(x);\\n       for(int i = 0, j  = str.length()-1; i<str.length(); j--, i++)\\n           if(str.charAt(i)!=str.charAt(j))\\n               return false;\\n        return true;\\n    }\\n}"
                    }
                ]
            },
            {
                "id": 1670990,
                "content": [
                    {
                        "username": "mustahid19",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        reverse = str(x)[::-1]\\n        if str(x) == reverse:\\n            return True\\n        else:\\n            return False"
                    },
                    {
                        "username": "RachelWealth",
                        "content": "I don\\'t understand why it doesn\\'t break out of the while loop while temp==0:\\n`` `\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        # method one-------------------\\n        reverseNumber = 0\\n        remainder = 0\\n        temp = x\\n        while (temp != 0):\\n            reverseNumber = reverseNumber*10+temp%10\\n            temp = temp // 10\\n            \\n        return x == reverseNumber\\n```"
                    },
                    {
                        "username": "tarunkesavk",
                        "content": "I am new here  I am unable to pass the first case. All my test cases are passing well except first one."
                    },
                    {
                        "username": "princethet",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int sum=0,rem;\\n        int n=x;\\n        while(n!=0){\\n            rem = n%10;\\n            sum = sum*10 + rem;\\n            n/=10;\\n        }\\n        if(sum==x){\\n            return true;\\n        }\\n        else if(sum!=x && x<0){\\n            return false;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};\\n\\n\\n\\ncan anyone tell ? what is wrong with my code?"
                    },
                    {
                        "username": "arjunpatel007",
                        "content": "c++ easy to understand Solution\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int temp = x;\\n        long long result = 0;\\n        while(temp){\\n        int rem = temp % 10;\\n        result = result*10 + rem;\\n        temp /= 10;\\n        }\\n        if(x==0){return true;}\\n        else if(x==result && x>0){\\n            return true;\\n        }\\n        else return false;\\n    }\\n};"
                    },
                    {
                        "username": "prathamrajsri2003",
                        "content": "why does it take main as a global variable in c++ when I try to write the palindrome code in pure cpp"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-palindrome-number-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-palindrome-number-problem-solution.html)"
                    },
                    {
                        "username": "BhagyashreeArakeri",
                        "content": "Here is easy solution :\\npublic boolean isPalindrome(int x) {\\n        int origi = x, res = 0;\\n        if(x < 0)\\n            return false;\\n        while(x > 0){\\n            int rem = x % 10;\\n            res = (res * 10) + rem;\\n            x = x / 10;\\n        }\\n        if(origi == res)\\n            return true;\\n        return false;\\n    }\\n\\n"
                    },
                    {
                        "username": "Gavaskar004",
                        "content": "class Solution:\\n     def isPalindrome(self,number):\\n        \\n        n=number\\n        org=number\\n        j=0\\n        while n>1:\\n            \\n            if n>1:\\n                j=j+1\\n            else:\\n                break\\n            n=n/10\\n        i=j\\n       \\n        new=0\\n        x=number\\n        while i>=1:\\n            x=(int(number/10**(i-1)))\\n            new=new+x*10**(j-i)\\n            number=abs(number-x*10**(i-1))\\n            i=i-1\\n            \\n        if new==org:\\n            print(\"True\")\\n            \\n        else:\\n            print(\\'False\\')\\n        \\nSolution.isPalindrome(\\'name\\',121)\\n\\nWhy this isn\\'t working here, For 121. I get correct in other IDE"
                    },
                    {
                        "username": "tarunkesavk",
                        "content": "i am also facing same issue"
                    },
                    {
                        "username": "prateek_singh26",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n       String str = String.valueOf(x);\\n       for(int i = 0, j  = str.length()-1; i<str.length(); j--, i++)\\n           if(str.charAt(i)!=str.charAt(j))\\n               return false;\\n        return true;\\n    }\\n}"
                    }
                ]
            },
            {
                "id": 1666934,
                "content": [
                    {
                        "username": "mustahid19",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        reverse = str(x)[::-1]\\n        if str(x) == reverse:\\n            return True\\n        else:\\n            return False"
                    },
                    {
                        "username": "RachelWealth",
                        "content": "I don\\'t understand why it doesn\\'t break out of the while loop while temp==0:\\n`` `\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        # method one-------------------\\n        reverseNumber = 0\\n        remainder = 0\\n        temp = x\\n        while (temp != 0):\\n            reverseNumber = reverseNumber*10+temp%10\\n            temp = temp // 10\\n            \\n        return x == reverseNumber\\n```"
                    },
                    {
                        "username": "tarunkesavk",
                        "content": "I am new here  I am unable to pass the first case. All my test cases are passing well except first one."
                    },
                    {
                        "username": "princethet",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int sum=0,rem;\\n        int n=x;\\n        while(n!=0){\\n            rem = n%10;\\n            sum = sum*10 + rem;\\n            n/=10;\\n        }\\n        if(sum==x){\\n            return true;\\n        }\\n        else if(sum!=x && x<0){\\n            return false;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};\\n\\n\\n\\ncan anyone tell ? what is wrong with my code?"
                    },
                    {
                        "username": "arjunpatel007",
                        "content": "c++ easy to understand Solution\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int temp = x;\\n        long long result = 0;\\n        while(temp){\\n        int rem = temp % 10;\\n        result = result*10 + rem;\\n        temp /= 10;\\n        }\\n        if(x==0){return true;}\\n        else if(x==result && x>0){\\n            return true;\\n        }\\n        else return false;\\n    }\\n};"
                    },
                    {
                        "username": "prathamrajsri2003",
                        "content": "why does it take main as a global variable in c++ when I try to write the palindrome code in pure cpp"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-palindrome-number-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-palindrome-number-problem-solution.html)"
                    },
                    {
                        "username": "BhagyashreeArakeri",
                        "content": "Here is easy solution :\\npublic boolean isPalindrome(int x) {\\n        int origi = x, res = 0;\\n        if(x < 0)\\n            return false;\\n        while(x > 0){\\n            int rem = x % 10;\\n            res = (res * 10) + rem;\\n            x = x / 10;\\n        }\\n        if(origi == res)\\n            return true;\\n        return false;\\n    }\\n\\n"
                    },
                    {
                        "username": "Gavaskar004",
                        "content": "class Solution:\\n     def isPalindrome(self,number):\\n        \\n        n=number\\n        org=number\\n        j=0\\n        while n>1:\\n            \\n            if n>1:\\n                j=j+1\\n            else:\\n                break\\n            n=n/10\\n        i=j\\n       \\n        new=0\\n        x=number\\n        while i>=1:\\n            x=(int(number/10**(i-1)))\\n            new=new+x*10**(j-i)\\n            number=abs(number-x*10**(i-1))\\n            i=i-1\\n            \\n        if new==org:\\n            print(\"True\")\\n            \\n        else:\\n            print(\\'False\\')\\n        \\nSolution.isPalindrome(\\'name\\',121)\\n\\nWhy this isn\\'t working here, For 121. I get correct in other IDE"
                    },
                    {
                        "username": "tarunkesavk",
                        "content": "i am also facing same issue"
                    },
                    {
                        "username": "prateek_singh26",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n       String str = String.valueOf(x);\\n       for(int i = 0, j  = str.length()-1; i<str.length(); j--, i++)\\n           if(str.charAt(i)!=str.charAt(j))\\n               return false;\\n        return true;\\n    }\\n}"
                    }
                ]
            },
            {
                "id": 1666748,
                "content": [
                    {
                        "username": "mustahid19",
                        "content": "class Solution(object):\\n    def isPalindrome(self, x):\\n        \"\"\"\\n        :type x: int\\n        :rtype: bool\\n        \"\"\"\\n        reverse = str(x)[::-1]\\n        if str(x) == reverse:\\n            return True\\n        else:\\n            return False"
                    },
                    {
                        "username": "RachelWealth",
                        "content": "I don\\'t understand why it doesn\\'t break out of the while loop while temp==0:\\n`` `\\nclass Solution(object):\\n    def isPalindrome(self, x):\\n        # method one-------------------\\n        reverseNumber = 0\\n        remainder = 0\\n        temp = x\\n        while (temp != 0):\\n            reverseNumber = reverseNumber*10+temp%10\\n            temp = temp // 10\\n            \\n        return x == reverseNumber\\n```"
                    },
                    {
                        "username": "tarunkesavk",
                        "content": "I am new here  I am unable to pass the first case. All my test cases are passing well except first one."
                    },
                    {
                        "username": "princethet",
                        "content": "class Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int sum=0,rem;\\n        int n=x;\\n        while(n!=0){\\n            rem = n%10;\\n            sum = sum*10 + rem;\\n            n/=10;\\n        }\\n        if(sum==x){\\n            return true;\\n        }\\n        else if(sum!=x && x<0){\\n            return false;\\n        }\\n        else{\\n            return false;\\n        }\\n    }\\n};\\n\\n\\n\\ncan anyone tell ? what is wrong with my code?"
                    },
                    {
                        "username": "arjunpatel007",
                        "content": "c++ easy to understand Solution\\n\\nclass Solution {\\npublic:\\n    bool isPalindrome(int x) {\\n        int temp = x;\\n        long long result = 0;\\n        while(temp){\\n        int rem = temp % 10;\\n        result = result*10 + rem;\\n        temp /= 10;\\n        }\\n        if(x==0){return true;}\\n        else if(x==result && x>0){\\n            return true;\\n        }\\n        else return false;\\n    }\\n};"
                    },
                    {
                        "username": "prathamrajsri2003",
                        "content": "why does it take main as a global variable in c++ when I try to write the palindrome code in pure cpp"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-palindrome-number-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-palindrome-number-problem-solution.html)"
                    },
                    {
                        "username": "BhagyashreeArakeri",
                        "content": "Here is easy solution :\\npublic boolean isPalindrome(int x) {\\n        int origi = x, res = 0;\\n        if(x < 0)\\n            return false;\\n        while(x > 0){\\n            int rem = x % 10;\\n            res = (res * 10) + rem;\\n            x = x / 10;\\n        }\\n        if(origi == res)\\n            return true;\\n        return false;\\n    }\\n\\n"
                    },
                    {
                        "username": "Gavaskar004",
                        "content": "class Solution:\\n     def isPalindrome(self,number):\\n        \\n        n=number\\n        org=number\\n        j=0\\n        while n>1:\\n            \\n            if n>1:\\n                j=j+1\\n            else:\\n                break\\n            n=n/10\\n        i=j\\n       \\n        new=0\\n        x=number\\n        while i>=1:\\n            x=(int(number/10**(i-1)))\\n            new=new+x*10**(j-i)\\n            number=abs(number-x*10**(i-1))\\n            i=i-1\\n            \\n        if new==org:\\n            print(\"True\")\\n            \\n        else:\\n            print(\\'False\\')\\n        \\nSolution.isPalindrome(\\'name\\',121)\\n\\nWhy this isn\\'t working here, For 121. I get correct in other IDE"
                    },
                    {
                        "username": "tarunkesavk",
                        "content": "i am also facing same issue"
                    },
                    {
                        "username": "prateek_singh26",
                        "content": "class Solution {\\n    public boolean isPalindrome(int x) {\\n       String str = String.valueOf(x);\\n       for(int i = 0, j  = str.length()-1; i<str.length(); j--, i++)\\n           if(str.charAt(i)!=str.charAt(j))\\n               return false;\\n        return true;\\n    }\\n}"
                    }
                ]
            }
        ]
    }
]