[
    {
        "title": "Remove Duplicates from Sorted Array",
        "question_content": "Given an integer array nums sorted in non-decreasing order, remove the duplicates in-place such that each unique element appears only once. The relative order of the elements should be kept the same. Then return the number of unique elements in nums.\nConsider the number of unique elements of nums to be k, to get accepted, you need to do the following things:\n\n\tChange the array nums such that the first k elements of nums contain the unique elements in the order they were present in nums initially. The remaining elements of nums are not important as well as the size of nums.\n\tReturn k.\n\nCustom Judge:\nThe judge will test your solution with the following code:\n\nint[] nums = [...]; // Input array\nint[] expectedNums = [...]; // The expected answer with correct length\nint k = removeDuplicates(nums); // Calls your implementation\nassert k == expectedNums.length;\nfor (int i = 0; i < k; i++) {\n    assert nums[i] == expectedNums[i];\n}\n\nIf all assertions pass, then your solution will be accepted.\n&nbsp;\nExample 1:\n\nInput: nums = [1,1,2]\nOutput: 2, nums = [1,2,_]\nExplanation: Your function should return k = 2, with the first two elements of nums being 1 and 2 respectively.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n\nExample 2:\n\nInput: nums = [0,0,1,1,1,2,2,3,3,4]\nOutput: 5, nums = [0,1,2,3,4,_,_,_,_,_]\nExplanation: Your function should return k = 5, with the first five elements of nums being 0, 1, 2, 3, and 4 respectively.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n\n&nbsp;\nConstraints:\n\n\t1 <= nums.length <= 3 * 104\n\t-100 <= nums[i] <= 100\n\tnums is sorted in non-decreasing order.",
        "solutions": [
            {
                "id": 11782,
                "title": "share-my-clean-c-code",
                "content": "    int count = 0;\\n    for(int i = 1; i < n; i++){\\n        if(A[i] == A[i-1]) count++;\\n        else A[i-count] = A[i];\\n    }\\n    return n-count;",
                "solutionTags": [],
                "code": "    int count = 0;\\n    for(int i = 1; i < n; i++){\\n        if(A[i] == A[i-1]) count++;\\n        else A[i-count] = A[i];\\n    }\\n    return n-count;",
                "codeTag": "Unknown"
            },
            {
                "id": 3676877,
                "title": "best-method-100-c-java-python-beginner-friendly",
                "content": "# Intuition:\\nThe Intuition is to use two pointers, `i` and `j`, to iterate through the array. The variable `j` is used to keep track of the current index where a unique element should be placed. The initial value of `j` is 1 since the first element in the array is always unique and doesn\\'t need to be changed.\\n\\n# Explanation:\\nThe code starts iterating from `i = 1` because we need to compare each element with its previous element to check for duplicates.\\n\\nThe main logic is inside the `for` loop:\\n1. If the current element `nums[i]` is not equal to the previous element `nums[i - 1]`, it means we have encountered a new unique element.\\n2. In that case, we update `nums[j]` with the value of the unique element at `nums[i]`, and then increment `j` by 1 to mark the next position for a new unique element.\\n3. By doing this, we effectively overwrite any duplicates in the array and only keep the unique elements.\\n\\nOnce the loop finishes, the value of `j` represents the length of the resulting array with duplicates removed.\\n\\nFinally, we return `j` as the desired result.\\n\\n# Code\\n```C++ []\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int j = 1;\\n        for(int i = 1; i < nums.size(); i++){\\n            if(nums[i] != nums[i - 1]){\\n                nums[j] = nums[i];\\n                j++;\\n            }\\n        }\\n        return j;\\n    }\\n};\\n```\\n```Java []\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int j = 1;\\n        for (int i = 1; i < nums.length; i++) {\\n            if (nums[i] != nums[i - 1]) {\\n                nums[j] = nums[i];\\n                j++;\\n            }\\n        }\\n        return j;\\n    }\\n}\\n```\\n```Python3 []\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        j = 1\\n        for i in range(1, len(nums)):\\n            if nums[i] != nums[i - 1]:\\n                nums[j] = nums[i]\\n                j += 1\\n        return j\\n```\\n\\n![CUTE_CAT.png](https://assets.leetcode.com/users/images/0a452532-539e-4e22-b67e-e13f2b0179fb_1687605319.248808.png)\\n\\n**If you are a beginner solve these problems which makes concepts clear for future coding:**\\n1. [Two Sum](https://leetcode.com/problems/two-sum/solutions/3619262/3-method-s-c-java-python-beginner-friendly/)\\n2. [Roman to Integer](https://leetcode.com/problems/roman-to-integer/solutions/3651672/best-method-c-java-python-beginner-friendly/)\\n3. [Palindrome Number](https://leetcode.com/problems/palindrome-number/solutions/3651712/2-method-s-c-java-python-beginner-friendly/)\\n4. [Maximum Subarray](https://leetcode.com/problems/maximum-subarray/solutions/3666304/beats-100-c-java-python-beginner-friendly/)\\n5. [Remove Element](https://leetcode.com/problems/remove-element/solutions/3670940/best-100-c-java-python-beginner-friendly/)\\n6. [Contains Duplicate](https://leetcode.com/problems/contains-duplicate/solutions/3672475/4-method-s-c-java-python-beginner-friendly/)\\n7. [Add Two Numbers](https://leetcode.com/problems/add-two-numbers/solutions/3675747/beats-100-c-java-python-beginner-friendly/)\\n8. [Majority Element](https://leetcode.com/problems/majority-element/solutions/3676530/3-methods-beats-100-c-java-python-beginner-friendly/)\\n9. [Remove Duplicates from Sorted Array](https://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/3676877/best-method-100-c-java-python-beginner-friendly/)\\n10. **Practice them in a row for better understanding and please Upvote the post for more questions.**\\n\\n**If you found my solution helpful, I would greatly appreciate your upvote, as it would motivate me to continue sharing more solutions.**",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python3",
                    "Array",
                    "Two Pointers"
                ],
                "code": "```C++ []\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int j = 1;\\n        for(int i = 1; i < nums.size(); i++){\\n            if(nums[i] != nums[i - 1]){\\n                nums[j] = nums[i];\\n                j++;\\n            }\\n        }\\n        return j;\\n    }\\n};\\n```\n```Java []\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int j = 1;\\n        for (int i = 1; i < nums.length; i++) {\\n            if (nums[i] != nums[i - 1]) {\\n                nums[j] = nums[i];\\n                j++;\\n            }\\n        }\\n        return j;\\n    }\\n}\\n```\n```Python3 []\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        j = 1\\n        for i in range(1, len(nums)):\\n            if nums[i] != nums[i - 1]:\\n                nums[j] = nums[i]\\n                j += 1\\n        return j\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2107606,
                "title": "py-all-4-methods-intuitions-walk-through-wrong-answer-explanations-for-beginners-python",
                "content": "\\n## \\u2705 Method 1: sort in place using `[:]`\\n```\\n\\tdef removeDuplicates(self, nums: List[int]) -> int:\\n\\t\\tnums[:] = sorted(set(nums))\\n\\t\\treturn len(nums)\\n```\\n\\n\\n**Time Complexity:** `O(n)`\\n**Space Complexity:** `O(1)`\\n\\n\\n### \\u274C Common Wrong Answers:\\n```\\n\\tnums = sorted(set(nums))\\n\\treturn len(nums)\\n```\\n\\xA0`nums =`\\xA0 doesn\\'t replace elements in the original list.\\n `nums[:] =`\\xA0replaces element in place\\n\\nIn short, without `[:]`, we\\'re creating a new list object, which is against what this problem is asking for:\\n\"Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\"\\n\\n-----------------------\\n##  \\u2705 Method 2: Two-pointers\\n### \\uD83E\\uDD14 Initial Intuition:\\nUse a `slow`  pointer to \"lock\" the \"wanted\" element, and use a `fast` pointer to move forward along the list and look for new unique elements in the list.\\nOr, in other words,  the current `slow` pointer is used to locate the latest unique number for the results, and `fast` is used for iterating and discovery.\\n\\nHave `fast` advanced in every iteration, but `slow` is only advanced when two pointers are onto two different elements. \\n\\nThat means, the elements after `nums[slow]` and before `nums[fast]` are numbers we\\'ve **seen** before and don\\'t need anymore (one copy of these numbers is already saved before the current `slow` (inclusive)).  \\n\\nTherefore, in order to have this newly discovered (unseen) number pointed by the current `fast` to the front of the array for the final answer, we just need to swap this newly discovered number to the location that follows the current `slow` pointer, with one of the **seen** numbers (we don\\'t need it for the answer regardlessly), and then advance the `slow` in the same iteration to lock this new number.\\n\\n```\\n\\tdef removeDuplicates(self, nums: List[int]) -> int:\\n\\t\\tslow, fast = 0, 1\\n\\t\\twhile fast in range(len(nums)):\\n\\t\\t\\tif nums[slow] == nums[fast]:\\n\\t\\t\\t\\tfast += 1\\n\\t\\t\\telse:\\n\\t\\t\\t\\tnums[slow+1] = nums[fast]\\n\\t\\t\\t\\tfast += 1\\n\\t\\t\\t\\tslow += 1\\n\\n\\t\\treturn slow + 1\\n```\\n\\n### \\u2747\\uFE0F Simplified two-pointers with for loops:\\n\\uD83D\\uDCA1 However, observe,  `fast` pointer is simply incremented in every iteration regardless of the conditions, that\\'s just a typical for loop\\'s job.  Therefore, we can simplify this \"two-pointers\" system as follows:\\n```\\n\\tdef removeDuplicates(self, nums: List[int]) -> int:\\n\\t\\tj = 0\\n\\t\\tfor i in range(1, len(nums)):\\n\\t\\t\\tif nums[j] != nums[i]:\\n\\t\\t\\t\\tj += 1\\n\\t\\t\\t\\tnums[j] = nums[i]\\n\\t\\treturn j + 1\\n```\\n\\n**Time Complexity:** `O(n)`\\n**Space Complexity:** `O(1)`\\n\\n-----------------------\\n## Method 3: Using `.pop()`\\n```\\n\\tdef removeDuplicates(self, nums: List[int]) -> int:\\n\\t\\ti = 1\\n\\t\\twhile i < len(nums):\\n\\t\\t\\tif nums[i] == nums[i - 1]:\\n\\t\\t\\t\\tnums.pop(i)\\n\\t\\t\\telse:\\n\\t\\t\\t\\ti += 1\\n\\t\\treturn len(nums)\\n```\\n-----------------------\\n## Method 4: Using `OrderedDict.fromkeys()`\\n```\\nfrom collections import OrderedDict\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        nums[:] =  OrderedDict.fromkeys(nums)\\n        return len(nums)\\n```\\n-------------------\\n-----------------------\\nAs a total beginner, I am writing these all out to help myself, and hopefully also help anyone out there who is like me at the same time.\\n\\nPlease upvote\\u2B06\\uFE0F if you find this helpful or worth-reading for beginners in anyway.\\nYour upvote is much more than just supportive to me. \\uD83D\\uDE33\\uD83E\\uDD13\\uD83E\\uDD70\\n\\nIf you find this is not helpful, needs improvement, or is questionable, would you please leave a quick comment below to point out the problem before you decide to downvote? It will be very helpful for me (maybe also others) to learn as a beginner.\\n\\nThank you very much either way \\uD83E\\uDD13.",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Array",
                    "Two Pointers"
                ],
                "code": "```\\n\\tdef removeDuplicates(self, nums: List[int]) -> int:\\n\\t\\tnums[:] = sorted(set(nums))\\n\\t\\treturn len(nums)\\n```\n```\\n\\tnums = sorted(set(nums))\\n\\treturn len(nums)\\n```\n```\\n\\tdef removeDuplicates(self, nums: List[int]) -> int:\\n\\t\\tslow, fast = 0, 1\\n\\t\\twhile fast in range(len(nums)):\\n\\t\\t\\tif nums[slow] == nums[fast]:\\n\\t\\t\\t\\tfast += 1\\n\\t\\t\\telse:\\n\\t\\t\\t\\tnums[slow+1] = nums[fast]\\n\\t\\t\\t\\tfast += 1\\n\\t\\t\\t\\tslow += 1\\n\\n\\t\\treturn slow + 1\\n```\n```\\n\\tdef removeDuplicates(self, nums: List[int]) -> int:\\n\\t\\tj = 0\\n\\t\\tfor i in range(1, len(nums)):\\n\\t\\t\\tif nums[j] != nums[i]:\\n\\t\\t\\t\\tj += 1\\n\\t\\t\\t\\tnums[j] = nums[i]\\n\\t\\treturn j + 1\\n```\n```\\n\\tdef removeDuplicates(self, nums: List[int]) -> int:\\n\\t\\ti = 1\\n\\t\\twhile i < len(nums):\\n\\t\\t\\tif nums[i] == nums[i - 1]:\\n\\t\\t\\t\\tnums.pop(i)\\n\\t\\t\\telse:\\n\\t\\t\\t\\ti += 1\\n\\t\\treturn len(nums)\\n```\n```\\nfrom collections import OrderedDict\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        nums[:] =  OrderedDict.fromkeys(nums)\\n        return len(nums)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 11780,
                "title": "5-lines-c-java-nicer-loops",
                "content": "I don't like old-style indexed looping. I much prefer the \"enhanced\" (Java) / \"range-based\" (C++) loops, they make things much cleaner.\\n\\n---\\n\\n**C++**\\n\\n    int removeDuplicates(vector<int>& nums) {\\n        int i = 0;\\n        for (int n : nums)\\n            if (!i || n > nums[i-1])\\n                nums[i++] = n;\\n        return i;\\n    }\\n\\nAnd to not need the `!i` check in the loop:\\n\\n    int removeDuplicates(vector<int>& nums) {\\n        int i = !nums.empty();\\n        for (int n : nums)\\n            if (n > nums[i-1])\\n                nums[i++] = n;\\n        return i;\\n    }\\n\\n---\\n\\n**Java**\\n\\n    public int removeDuplicates(int[] nums) {\\n        int i = 0;\\n        for (int n : nums)\\n            if (i == 0 || n > nums[i-1])\\n                nums[i++] = n;\\n        return i;\\n    }\\n\\nAnd to not need the `i == 0` check in the loop:\\n\\n    public int removeDuplicates(int[] nums) {\\n        int i = nums.length > 0 ? 1 : 0;\\n        for (int n : nums)\\n            if (n > nums[i-1])\\n                nums[i++] = n;\\n        return i;\\n    }",
                "solutionTags": [
                    "C++",
                    "Java"
                ],
                "code": "I don't like old-style indexed looping. I much prefer the \"enhanced\" (Java) / \"range-based\" (C++) loops, they make things much cleaner.\\n\\n---\\n\\n**C++**\\n\\n    int removeDuplicates(vector<int>& nums) {\\n        int i = 0;\\n        for (int n : nums)\\n            if (!i || n > nums[i-1])\\n                nums[i++] = n;\\n        return i;\\n    }\\n\\nAnd to not need the `!i` check in the loop:\\n\\n    int removeDuplicates(vector<int>& nums) {\\n        int i = !nums.empty();\\n        for (int n : nums)\\n            if (n > nums[i-1])\\n                nums[i++] = n;\\n        return i;\\n    }\\n\\n---\\n\\n**Java**\\n\\n    public int removeDuplicates(int[] nums) {\\n        int i = 0;\\n        for (int n : nums)\\n            if (i == 0 || n > nums[i-1])\\n                nums[i++] = n;\\n        return i;\\n    }\\n\\nAnd to not need the `i == 0` check in the loop:\\n\\n    public int removeDuplicates(int[] nums) {\\n        int i = nums.length > 0 ? 1 : 0;\\n        for (int n : nums)\\n            if (n > nums[i-1])\\n                nums[i++] = n;\\n        return i;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 11757,
                "title": "my-solution-time-o-n-space-o-1",
                "content": "    class Solution {\\n        public:\\n        int removeDuplicates(int A[], int n) {\\n            if(n < 2) return n;\\n            int id = 1;\\n            for(int i = 1; i < n; ++i) \\n                if(A[i] != A[i-1]) A[id++] = A[i];\\n            return id;\\n        }\\n    };",
                "solutionTags": [],
                "code": "class Solution {\\n        public:\\n        int removeDuplicates(int A[], int n) {\\n            if(n < 2) return n;\\n            int id = 1;\\n            for(int i = 1; i < n; ++i) \\n                if(A[i] != A[i-1]) A[id++] = A[i];\\n            return id;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 3496619,
                "title": "simplest-4-line-sol-with-proper-explanation",
                "content": "# Intuition\\nWe can think of using two pointers \\u2018i\\u2019 and \\u2018j\\u2019, we move \\u2018j\\u2019 till we don\\u2019t get a number arr[j] which is different from arr[i]. As we got a unique number we will increase the i pointer and update its value by arr[j]. \\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nTake a variable i as 0;\\nUse a for loop by using a variable \\u2018j\\u2019 from 1 to length of the array.\\nIf arr[j] != arr[i], increase \\u2018i\\u2019 and update arr[i] == arr[j].\\n After completion of the loop return i+1, i.e size of the array of unique elements.\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int removeDuplicates(int[] arr) {\\n        int i=0;\\n        for(int j=1;j<arr.length;j++){\\n            if(arr[i]!=arr[j]){\\n                i++;\\n                arr[i]=arr[j];\\n            }\\n        }\\n        return i+1;\\n        \\n    }\\n}\\n```\\n![images.jpeg](https://assets.leetcode.com/users/images/87599497-3f81-4882-bf7d-e4e46aab593a_1683459516.4004748.jpeg)\\n",
                "solutionTags": [
                    "Java",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution {\\n    public int removeDuplicates(int[] arr) {\\n        int i=0;\\n        for(int j=1;j<arr.length;j++){\\n            if(arr[i]!=arr[j]){\\n                i++;\\n                arr[i]=arr[j];\\n            }\\n        }\\n        return i+1;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 302016,
                "title": "python-solution",
                "content": "Given a sorted array and we need to return the length of the unique elements instead of the entire array. There is no need to delete the duplicate elements also. \\n* Since, our first element is already present at index 0 (**it is a unique element**), we quickly run a for loop for the entire array to scan for unique elements.\\n* If the current element and the next element are the same, then we just keep on going till we find a different element\\n* Once we find a different element, it is inserted at index 1, because, index 0 is taken by the first unique element. \\n* Once this is done, the same scanning is done to find out the next unique element and this element is to be inserted at index 2. This process continues until we are done with unique elements.\\n* **We use a variable (x = 1) which is incremented to the next index whenever we find a unique element and we insert this element at its corresponding index**.\\n```\\nx = 1\\nfor i in range(len(nums)-1):\\n\\tif(nums[i]!=nums[i+1]):\\n\\t\\tnums[x] = nums[i+1]\\n\\t\\tx+=1\\nreturn(x)\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nx = 1\\nfor i in range(len(nums)-1):\\n\\tif(nums[i]!=nums[i+1]):\\n\\t\\tnums[x] = nums[i+1]\\n\\t\\tx+=1\\nreturn(x)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1328708,
                "title": "c-solution-o-n-time-complexity",
                "content": "**Two pointer Approach** \\n**Time Complexity - O(N)**\\n**Space Complexity - O(1)**\\n\\nThe problem has asked to do inplace so we need to modify the given nums vector only \\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size() == 0) return 0;\\n        int left = 0;\\n        for(int right =1; right< nums.size(); right++){\\n           if(nums[left] != nums[right])\\n               left++;\\n               nums[left] = nums[right];\\n           }\\n    return left+1;\\n    }\\n};\\n```\\n**Please upvote if you like the solution**\\n**comment if have doubts**",
                "solutionTags": [
                    "C++",
                    "C",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size() == 0) return 0;\\n        int left = 0;\\n        for(int right =1; right< nums.size(); right++){\\n           if(nums[left] != nums[right])\\n               left++;\\n               nums[left] = nums[right];\\n           }\\n    return left+1;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3310164,
                "title": "8-lines-two-pointer-in-python",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        i,j=0,1\\n        while i<=j and j<len(nums):\\n            if nums[i]==nums[j]:\\n                j+=1\\n            else:\\n                nums[i+1]=nums[j]\\n                i+=1\\n        return i+1\\n\\n\\n        \\n```\\n# Consider upvoting if found helpul\\n    \\n![57jfh9.jpg](https://assets.leetcode.com/users/images/42468411-f114-491a-8a3d-e8170fad5d00_1679120730.6341107.jpeg)\\n",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        i,j=0,1\\n        while i<=j and j<len(nums):\\n            if nums[i]==nums[j]:\\n                j+=1\\n            else:\\n                nums[i+1]=nums[j]\\n                i+=1\\n        return i+1\\n\\n\\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3105108,
                "title": "c-easy-solution-using-set",
                "content": "THIS QUESTION IS SOLVED BY USING SET .......\\n 1.First of all we have to create an empty set then we have to store all the element in the set.\\n 2.As we know in set all element appears once...so it is clear that no element is repeated.\\n 3.Then we have to return the size of element and which is present in set but before we have to restore all the element in the nums array.\\n 4.so first of all clear all the element in the nums array using **nums.clear( );**\\n 5.Then in nums array push all the set element.\\n 6.And in last return the size of set.\\n\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n    set<int> s; \\n        for(int i =0; i<nums.size(); i++)\\n        {\\n            s.insert(nums[i]);\\n        }\\n        \\n        int ans = s.size();\\n        nums.clear();\\n        for(auto i:s)\\n        {\\n           //int k = *i;\\n           nums.push_back(i);\\n        }\\n        return ans;\\n    }\\n};\\n```\\n    IF MY EFFORTS HELP YOU PLEASE LIKE IT\\uD83D\\uDE0A\\uD83D\\uDE0A\\n  ![image](https://assets.leetcode.com/users/images/e7c564e1-bda7-48f7-860b-8e113d98dc2f_1674818638.3033829.jpeg)\\n\\n \\n",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n    set<int> s; \\n        for(int i =0; i<nums.size(); i++)\\n        {\\n            s.insert(nums[i]);\\n        }\\n        \\n        int ans = s.size();\\n        nums.clear();\\n        for(auto i:s)\\n        {\\n           //int k = *i;\\n           nums.push_back(i);\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 11751,
                "title": "simple-python-solution-o-n",
                "content": "    class Solution:\\n        # @param a list of integers\\n        # @return an integer\\n        def removeDuplicates(self, A):\\n            if not A:\\n                return 0\\n    \\n            newTail = 0\\n    \\n            for i in range(1, len(A)):\\n                if A[i] != A[newTail]:\\n                    newTail += 1\\n                    A[newTail] = A[i]\\n    \\n            return newTail + 1",
                "solutionTags": [],
                "code": "    class Solution:\\n        # @param a list of integers\\n        # @return an integer\\n        def removeDuplicates(self, A):\\n            if not A:\\n                return 0\\n    \\n            newTail = 0\\n    \\n            for i in range(1, len(A)):\\n                if A[i] != A[newTail]:\\n                    newTail += 1\\n                    A[newTail] = A[i]\\n    \\n            return newTail + 1",
                "codeTag": "Java"
            },
            {
                "id": 2693084,
                "title": "c-easy-three-line-solution",
                "content": "```\\n\\tint k=1;\\n\\tfor(int i=1; i<nums.size(); i++)        \\n\\t\\tif(nums[i]!=nums[i-1]) nums[k++] = nums[i];     \\n\\treturn k;\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\n\\tint k=1;\\n\\tfor(int i=1; i<nums.size(); i++)        \\n\\t\\tif(nums[i]!=nums[i-1]) nums[k++] = nums[i];     \\n\\treturn k;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2983019,
                "title": "java-solution-explanation-runtime-1ms-beats-100",
                "content": "# Approach\\nBy iterating through the array and checking if `nums` at the current index `i` is less than `nums` at `i + 1`, we can find an index for all unique numbers in the array. We can then insert each of these numbers to the beginning of the array, at `addIndex`. `addIndex` starts at 0 as the first element in the array is always unique.\\n\\n# Complexity\\n- Time complexity: O(n)\\n\\n- Space complexity: O(1)\\n\\n# Code\\n```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        if(nums.length == 0)\\n            return 0;\\n        \\n        int addIndex = 1; //index that unique characters will be inserted at\\n\\n        for(int i = 0; i < nums.length - 1; i++) {\\n            \\n            if(nums[i] < nums[i + 1]){ //if true, num[i + 1] is a new unique number\\n              nums[addIndex] = nums[i + 1];\\n              addIndex++;\\n            }\\n        }\\n        return addIndex;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        if(nums.length == 0)\\n            return 0;\\n        \\n        int addIndex = 1; //index that unique characters will be inserted at\\n\\n        for(int i = 0; i < nums.length - 1; i++) {\\n            \\n            if(nums[i] < nums[i + 1]){ //if true, num[i + 1] is a new unique number\\n              nums[addIndex] = nums[i + 1];\\n              addIndex++;\\n            }\\n        }\\n        return addIndex;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 11769,
                "title": "5-lines-java-solution",
                "content": "    public int removeDuplicates(int[] A) {\\n        if (A.length==0) return 0;\\n        int j=0;\\n        for (int i=0; i<A.length; i++)\\n            if (A[i]!=A[j]) A[++j]=A[i];\\n        return ++j;\\n    }",
                "solutionTags": [
                    "Java"
                ],
                "code": "    public int removeDuplicates(int[] A) {\\n        if (A.length==0) return 0;\\n        int j=0;\\n        for (int i=0; i<A.length; i++)\\n            if (A[i]!=A[j]) A[++j]=A[i];\\n        return ++j;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 248020,
                "title": "my-easy-javascript-solution",
                "content": "```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar removeDuplicates = function(nums) {\\n    let i = 0;\\n    for (let j = 0; j < nums.length; j++) {\\n        if (nums[j] != nums[i]) \\n            nums[++i] = nums[j];\\n    }\\n    return ++i;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar removeDuplicates = function(nums) {\\n    let i = 0;\\n    for (let j = 0; j < nums.length; j++) {\\n        if (nums[j] != nums[i]) \\n            nums[++i] = nums[j];\\n    }\\n    return ++i;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3342081,
                "title": "100-faster-java-2-approaches-step-by-step-explained",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->O(N)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->O(1)\\n\\n![Screenshot_20230205_171246.png](https://assets.leetcode.com/users/images/11b0c73a-93c2-4070-be5e-0da83168b376_1679806165.9706037.png)\\n\\n# Code\\n```\\npublic int removeDuplicates(int[] nums) {\\n        \\n        int newIndex = 1; // Start with index 1 because the first element is already in place\\n\\n        for (int i = 0; i < nums.length - 1; i++) {\\n\\n            if (nums[i] < nums[i+1]) { // If the current element is less than the next element\\n            \\n                nums[newIndex] = nums[i+1]; // Move the next element to the new index\\n                newIndex++; // Increment the new index\\n            }\\n        }\\n    return newIndex; // Return the length of the new subarray\\n\\n\\n\\n---\\nSecond Approach (here we are using extra space for this space complexity will be O(N))\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n\\n        //Insert all array element in the Set. \\n        //Set does not allow duplicates and sets like LinkedHashSet maintains the order of insertion so it will remove duplicates and elements will be printed in the same order in which it is inserted\\n\\n        LinkedHashSet<Integer> set = new LinkedHashSet<>();\\n\\n        for(int i = 0; i < nums.length; i++){\\n            set.add(nums[i]);\\n        }\\n        //copy unique element back to array\\n        int i = 0;\\n\\n        for(int ele:set){\\n            nums[i++] = ele;\\n        }\\n        return set.size();\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Ordered Set"
                ],
                "code": "```\\npublic int removeDuplicates(int[] nums) {\\n        \\n        int newIndex = 1; // Start with index 1 because the first element is already in place\\n\\n        for (int i = 0; i < nums.length - 1; i++) {\\n\\n            if (nums[i] < nums[i+1]) { // If the current element is less than the next element\\n            \\n                nums[newIndex] = nums[i+1]; // Move the next element to the new index\\n                newIndex++; // Increment the new index\\n            }\\n        }\\n    return newIndex; // Return the length of the new subarray\\n\\n\\n\\n---\\nSecond Approach (here we are using extra space for this space complexity will be O(N))\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n\\n        //Insert all array element in the Set. \\n        //Set does not allow duplicates and sets like LinkedHashSet maintains the order of insertion so it will remove duplicates and elements will be printed in the same order in which it is inserted\\n\\n        LinkedHashSet<Integer> set = new LinkedHashSet<>();\\n\\n        for(int i = 0; i < nums.length; i++){\\n            set.add(nums[i]);\\n        }\\n        //copy unique element back to array\\n        int i = 0;\\n\\n        for(int ele:set){\\n            nums[i++] = ele;\\n        }\\n        return set.size();\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1508180,
                "title": "c-python-clean-and-simple-solution",
                "content": "**C++ :**\\n\\n```\\nint removeDuplicates(vector<int>& nums) {        \\n\\tint numOfDuplicates = 0;\\n\\n\\tfor(int i = 1; i < nums.size(); ++i)\\n\\t{\\n\\t\\tif(nums[i] == nums[i - 1])\\n\\t\\t\\t++numOfDuplicates;\\n\\t\\telse\\n\\t\\t\\tnums[i - numOfDuplicates] = nums[i];\\n\\t}\\n\\treturn nums.size() - numOfDuplicates;\\n}\\n```\\n\\n**Python :**\\n\\n```\\ndef removeDuplicates(self, nums: List[int]) -> int:\\n\\tduplicates = 0\\n\\n\\tfor i in range(1, len(nums)):\\n\\t\\tif nums[i] == nums[i - 1]:\\n\\t\\t\\tduplicates += 1\\n\\t\\telse:\\n\\t\\t\\tnums[i - duplicates] = nums[i]\\n\\n\\treturn len(nums) - duplicates\\n```\\n\\n**Like it ? please upvote !**",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "C",
                    "Two Pointers"
                ],
                "code": "```\\nint removeDuplicates(vector<int>& nums) {        \\n\\tint numOfDuplicates = 0;\\n\\n\\tfor(int i = 1; i < nums.size(); ++i)\\n\\t{\\n\\t\\tif(nums[i] == nums[i - 1])\\n\\t\\t\\t++numOfDuplicates;\\n\\t\\telse\\n\\t\\t\\tnums[i - numOfDuplicates] = nums[i];\\n\\t}\\n\\treturn nums.size() - numOfDuplicates;\\n}\\n```\n```\\ndef removeDuplicates(self, nums: List[int]) -> int:\\n\\tduplicates = 0\\n\\n\\tfor i in range(1, len(nums)):\\n\\t\\tif nums[i] == nums[i - 1]:\\n\\t\\t\\tduplicates += 1\\n\\t\\telse:\\n\\t\\t\\tnums[i - duplicates] = nums[i]\\n\\n\\treturn len(nums) - duplicates\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3416595,
                "title": "c-java-python-javascript-fully-explained-two-pointer",
                "content": "# Intuition:\\nThe problem requires us to remove duplicate elements from a sorted array, i.e., we need to keep only one copy of each element in the array. Since the array is sorted, all duplicate elements will be adjacent to each other, so we can easily remove them by shifting the subsequent elements of the array to the left.\\n\\n# Approach:\\nWe can use two pointers i and j, where i points to the last unique element found so far, and j points to the current element being examined. If nums[i] and nums[j] are equal, we just increment j. Otherwise, we increment i and copy nums[j] to nums[i]. At the end, we return i+1, which represents the length of the modified array.\\n\\n# Complexity:\\n- Time complexity: Since we only traverse the array once, the time complexity of the algorithm is O(n).\\n- Space complexity: The algorithm uses constant extra space, so the space complexity is O(1).\\n\\n# C++\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int i = 0;\\n        for (int j = 1; j < nums.size(); j++) {\\n            if (nums[i] != nums[j]) {\\n                i++;\\n                nums[i] = nums[j];\\n            }\\n        }\\n        return i + 1;\\n    }\\n};\\n```\\n# JavaScript\\n```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar removeDuplicates = function(nums) {\\n  let i = 0;\\n  for (let j = 1; j < nums.length; j++) {\\n    if (nums[i] !== nums[j]) {\\n      i++;\\n      nums[i] = nums[j];\\n    }\\n  }\\n  return i + 1;\\n}\\n\\n```\\n# Java\\n```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int i = 0;\\n        for (int j = 1; j < nums.length; j++) {\\n            if (nums[i] != nums[j]) {\\n                i++;\\n                nums[i] = nums[j];\\n            }\\n        }\\n        return i + 1;\\n    }\\n}\\n\\n```\\n# Python\\n```\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        i = 0\\n        for j in range(1, len(nums)):\\n            if nums[i] != nums[j]:\\n                i += 1\\n                nums[i] = nums[j]\\n        return i + 1\\n\\n```\\n\\n**THANK YOU**",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python",
                    "JavaScript",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int i = 0;\\n        for (int j = 1; j < nums.size(); j++) {\\n            if (nums[i] != nums[j]) {\\n                i++;\\n                nums[i] = nums[j];\\n            }\\n        }\\n        return i + 1;\\n    }\\n};\\n```\n```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar removeDuplicates = function(nums) {\\n  let i = 0;\\n  for (let j = 1; j < nums.length; j++) {\\n    if (nums[i] !== nums[j]) {\\n      i++;\\n      nums[i] = nums[j];\\n    }\\n  }\\n  return i + 1;\\n}\\n\\n```\n```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int i = 0;\\n        for (int j = 1; j < nums.length; j++) {\\n            if (nums[i] != nums[j]) {\\n                i++;\\n                nums[i] = nums[j];\\n            }\\n        }\\n        return i + 1;\\n    }\\n}\\n\\n```\n```\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        i = 0\\n        for j in range(1, len(nums)):\\n            if nums[i] != nums[j]:\\n                i += 1\\n                nums[i] = nums[j]\\n        return i + 1\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1527963,
                "title": "c-solution-with-full-explanation-using-2pointers",
                "content": "> **If you\\u2019re interested in coding you can join my Discord Server, link in the comment section. Also if you find any mistake please let me know. Thank you!\\u2764\\uFE0F**\\n> \\n\\n---\\n\\n## Explanation:\\n\\n### Solution 01\\n\\n- ***Using 2 pointers approach***.\\n- ***i*** will iterate over all elements & ***j*** will be the index off duplicates numbers.\\n- We will replace ***j*** only if we find a number not similar to the j-indexed number.\\n- Increase the value of the unique element every time j increased.\\n- Edge case: if you return 0 while n=0, it will give a run time error.\\n- **Time complexity:** O(n).\\n\\n### Solution 02\\n\\n- ***This uses extra space, which doesn\\u2019t satisfy the condition of the question.***\\n- First, we put all the elements in a set & only unique elements will be stored.\\n- Calculate the size of the set & iterate all elements of nums and replace them with set values.\\n- **Time complexity:** O(n).\\n\\n---\\n\\n## Code:\\n\\n```cpp\\n//Solution 01:\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int n= nums.size();\\n        if(n<2)\\n            return n;\\n        int ans=1, j=0;\\n        for(int i=1; i<n; i++){\\n            if(nums[i]!=nums[j]){\\n                j++;\\n                nums[j]=nums[i];\\n                ans++;\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n\\n//Solution 02:\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int n= nums.size();\\n        set <int> a;\\n        for(int i=0; i<n; i++)\\n            a.insert(nums[i]);\\n        \\n        int ans = a.size();\\n        int i=0;\\n        for(auto x:a){\\n            nums[i]=x;\\n            i++;\\n        }\\n        return ans;\\n    }\\n};\\n```\\n\\n---\\n\\n> **Please upvote this solution**\\n>",
                "solutionTags": [
                    "C++",
                    "C",
                    "Two Pointers",
                    "Ordered Set"
                ],
                "code": "```cpp\\n//Solution 01:\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int n= nums.size();\\n        if(n<2)\\n            return n;\\n        int ans=1, j=0;\\n        for(int i=1; i<n; i++){\\n            if(nums[i]!=nums[j]){\\n                j++;\\n                nums[j]=nums[i];\\n                ans++;\\n            }\\n        }\\n        return ans;\\n    }\\n};\\n\\n//Solution 02:\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int n= nums.size();\\n        set <int> a;\\n        for(int i=0; i<n; i++)\\n            a.insert(nums[i]);\\n        \\n        int ans = a.size();\\n        int i=0;\\n        for(auto x:a){\\n            nums[i]=x;\\n            i++;\\n        }\\n        return ans;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2801748,
                "title": "python-c-java-rust-two-pointers-bonus-one-liners-explained",
                "content": "**\\u2705 IF YOU LIKE THIS SOLUTION, PLEASE UPVOTE.**\\n****\\nThis solution employs a two-pointers approach for rearrangement of numbers in a sorted array. Time complexity is linear: **O(N)**. Space complexity is constant: **O(1)**.\\n\\n**Comment.** The strategy here is to iterate over the input array (first pointer) and move its unique elements to the end of deduplicated array. The input array is sorted, thus, during iteration, each unique value appears as the one that differs from the last one. When encountered a new unique value, we also update the position of the end of deduplicated array (second pointer).\\n\\n**Python #1**.\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int], k = 1) -> int:\\n        for i in range(1,len(nums)):\\n            if nums[i] != nums[i-1]:            # detect next unique value \\n                nums[k] = nums[i]               # move it to the end of deduplicated array\\n                k += 1                          # update the size of deduplicated array\\n        return k\\n```\\n\\nThere is also a stack-based type of solution that is **O(N\\\\*N)** in time (due to the linear-time *pop*) but still **O(1)** in (additionally allocated) space.\\n\\n**Python #2.**\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n\\n        for i in reversed(range(1,len(nums))):\\n            if nums[i] == nums[i-1]:\\n                nums.pop(i)\\n        return len(nums)\\n```\\n\\n<iframe src=\"https://leetcode.com/playground/h9Z3qtEL/shared\" frameBorder=\"0\" width=\"800\" height=\"250\"></iframe>\\n\\n**\\u2705 YOU MADE IT TILL THE BONUS SECTION... YOUR GREAT EFFORT DESERVES UPVOTING THIS POST!**\\n\\nAs a **BONUS**, I provide a couple of one-liners...\\n\\n**Python #1.** Note that here we use a generator that has **O(1)** space complexity.\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums[:] = (n for i, n in enumerate(nums) if i == 0 or nums[i-1] != n)\\n```\\n\\n**Python #2.** Well, here it\\'s not an **O(1)**-complexity solution, but very concise...\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int], k = 1) -> int:\\n        nums[:] = sorted(list(set(nums)))\\n```\\n\\n**C++.** The *unique* function returns an iterator to which we can apply *distance* or just subtraction.\\n```\\nclass Solution \\n{\\npublic:\\n    int removeDuplicates(vector<int>& nums, int k = 1)\\n    {\\n\\t\\treturn distance(nums.begin(), unique(nums.begin(), nums.end()));\\n\\t\\t// or just subtract iterators...\\n\\t\\t// return unique(nums.begin(), nums.end()) - nums.begin();\\n    }\\n};\\n```\\n\\n**Rust.** Using a built-in *dedup* function.\\n```\\nimpl Solution \\n{\\n    pub fn remove_duplicates(nums: &mut Vec<i32>) -> i32 \\n    {\\n        nums.dedup(); nums.len() as _\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int], k = 1) -> int:\\n        for i in range(1,len(nums)):\\n            if nums[i] != nums[i-1]:            # detect next unique value \\n                nums[k] = nums[i]               # move it to the end of deduplicated array\\n                k += 1                          # update the size of deduplicated array\\n        return k\\n```\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n\\n        for i in reversed(range(1,len(nums))):\\n            if nums[i] == nums[i-1]:\\n                nums.pop(i)\\n        return len(nums)\\n```\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums[:] = (n for i, n in enumerate(nums) if i == 0 or nums[i-1] != n)\\n```\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int], k = 1) -> int:\\n        nums[:] = sorted(list(set(nums)))\\n```\n```\\nclass Solution \\n{\\npublic:\\n    int removeDuplicates(vector<int>& nums, int k = 1)\\n    {\\n\\t\\treturn distance(nums.begin(), unique(nums.begin(), nums.end()));\\n\\t\\t// or just subtract iterators...\\n\\t\\t// return unique(nums.begin(), nums.end()) - nums.begin();\\n    }\\n};\\n```\n```\\nimpl Solution \\n{\\n    pub fn remove_duplicates(nums: &mut Vec<i32>) -> i32 \\n    {\\n        nums.dedup(); nums.len() as _\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 11870,
                "title": "simple-1ms-java-solution",
                "content": "    public class Solution\\n    {\\n        public int removeDuplicates(int[] nums)\\n        {\\n            int dupes = 0;\\n            \\n            for (int i = 1; i < nums.length; i++)\\n            {\\n                if (nums[i] == nums[i - 1])\\n                    dupes++;\\n                \\n                nums[i - dupes] = nums[i];\\n            }\\n            \\n            return nums.length - dupes;\\n        }\\n    }",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution\\n    {\\n        public int removeDuplicates(int[] nums)\\n        {\\n            int dupes = 0;\\n            \\n            for (int i = 1; i < nums.length; i++)\\n            {\\n                if (nums[i] == nums[i - 1])\\n                    dupes++;\\n                \\n                nums[i - dupes] = nums[i];\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 453327,
                "title": "python-3-100-less-memory-96-faster-only-len-range-called",
                "content": "```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        \\n        length = 0\\n        if len(nums) == 0: return length\\n        for i in range(1,len(nums)):\\n            if nums[length] < nums[i]:\\n                length += 1\\n                nums[length] = nums[i]\\n        return length+1\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        \\n        length = 0\\n        if len(nums) == 0: return length\\n        for i in range(1,len(nums)):\\n            if nums[length] < nums[i]:\\n                length += 1\\n                nums[length] = nums[i]\\n        return length+1\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2803563,
                "title": "concise-and-simple-one-pass-solution",
                "content": "```csharp\\npublic class Solution\\n{\\n    public int RemoveDuplicates(int[] nums)\\n    {\\n        int i = 1;\\n\\n        foreach (int n in nums)\\n        {\\n            if (nums[i - 1] != n) nums[i++] = n;\\n        }\\n\\n        return i;\\n    }\\n}\\n```\\n\\nThe code is short and probably does not require explanation but here is the main idea: We compare every number in the array with the latest distinct number. If they are not equal, it\\'s a new distinct number and we copy it over to the next position in the array, hence `i++`.",
                "solutionTags": [
                    "C#"
                ],
                "code": "```csharp\\npublic class Solution\\n{\\n    public int RemoveDuplicates(int[] nums)\\n    {\\n        int i = 1;\\n\\n        foreach (int n in nums)\\n        {\\n            if (nums[i - 1] != n) nums[i++] = n;\\n        }\\n\\n        return i;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 11802,
                "title": "javascript-solution-if-anyone-is-interested",
                "content": "    var removeDuplicates = function(nums) {\\n        for (i = 0; i < nums.length; i++) {\\n            //Next number is identical to current one\\n            if (nums[i] == nums[i+1]) {\\n                nums.splice(i, 1);\\n                i--;\\n            }\\n        }\\n    };",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "    var removeDuplicates = function(nums) {\\n        for (i = 0; i < nums.length; i++) {\\n            //Next number is identical to current one\\n            if (nums[i] == nums[i+1]) {\\n                nums.splice(i, 1);\\n                i--;\\n            }\\n        }\\n    };",
                "codeTag": "Unknown"
            },
            {
                "id": 2801677,
                "title": "python3-two-pointers-o-n",
                "content": "Since the problem is asking us to remove duplicates **in place**, it seems like the only choice we have is to use a two-pointers approach. Also since the array is sorted, duplicates are grouped together in the array.\\n(1) Using a pointer ```i``` to point to the index where the element will be replaced.\\n(2) Using another pointer, ```j```, to go through the array and check if the jth element is the same as the j-1 element or not. \\n(3) If ```nums[j]!=nums[j-1]```, we should replace nums[i] with nums[j] and move ```i``` forward by 1. This is because ```nums[j]``` is the first element without duplicates before it, and we should keep it in the results. \\n\\nIn the end, ```nums[:i]``` will be the array without any duplicates, so we just return ```i```. Note that ```i``` should start at 1 since ```nums[0]``` will always be there no matter what.\\n\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        i = 0\\n        for j in range(1,len(nums)):\\n            if nums[j] != nums[j-1]:\\n                nums[i] = nums[j-1]\\n                i += 1\\n        nums[i] = nums[-1]\\n        return i+1\\n```\\n\\n**Upvote** if you like this post.\\n\\n**Connect with me on [LinkedIn](https://www.linkedin.com/in/meida-chen-938a265b/)** if you\\'d like to discuss other related topics\\n\\nJust in case if you are working on **ML/DL 3D data-related projects** or are interested in the topic, please check out our project **[HERE](https://github.com/meidachen/STPLS3D)**",
                "solutionTags": [],
                "code": "```i```\n```j```\n```nums[j]!=nums[j-1]```\n```i```\n```nums[j]```\n```nums[:i]```\n```i```\n```i```\n```nums[0]```\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        i = 0\\n        for j in range(1,len(nums)):\\n            if nums[j] != nums[j-1]:\\n                nums[i] = nums[j-1]\\n                i += 1\\n        nums[i] = nums[-1]\\n        return i+1\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3963008,
                "title": "c-image-explanation-no-extra-space",
                "content": "# Intuition\\nsee below image and see code simultenously\\n![Screenshot (1100).png](https://assets.leetcode.com/users/images/0c35867a-faea-467a-bf8f-52b2f9779de4_1693055451.5167916.png)\\n![Screenshot (1102).png](https://assets.leetcode.com/users/images/34d3555a-a035-41d9-99d0-dbe190918df2_1693055498.09549.png)\\n![Screenshot (1103).png](https://assets.leetcode.com/users/images/4c75e55b-07bb-4110-bded-8fc45f099ec6_1693055509.8981445.png)\\n![Screenshot (1104).png](https://assets.leetcode.com/users/images/7dba6b62-2438-4652-a1bd-3e1d82392332_1693055521.2899055.png)\\n![Screenshot (1105).png](https://assets.leetcode.com/users/images/5a46d8d1-e5f0-47a4-8ef8-bd0d7590fa20_1693055532.1642077.png)\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size()<=1) return nums.size();\\n        int position=1;\\n        for(int i=1;i<nums.size();++i){\\n            if(nums[i]!=nums[position-1]){\\n                nums[position]=nums[i];\\n                position++;\\n            }\\n        }\\n        return position;\\n    }\\n};\\n```\\n\\n# Time complexity :- O(n)\\n# space complexity :- O(1);\\n\\n# PLEASE upvote if you like my solution \\n![begging.jpg](https://assets.leetcode.com/users/images/62f0d0c9-5fa5-41b5-8e98-af045e40586f_1693055698.924021.jpeg)\\n",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size()<=1) return nums.size();\\n        int position=1;\\n        for(int i=1;i<nums.size();++i){\\n            if(nums[i]!=nums[position-1]){\\n                nums[position]=nums[i];\\n                position++;\\n            }\\n        }\\n        return position;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 12092,
                "title": "java-solution-with-explanation",
                "content": "    public class Solution {\\n        public int removeDuplicates(int[] nums) {\\n        \\n            int i = 1; //iterator thru array\\n            int j = 0; //current index\\n            for (; i<nums.length; i++) { \\n                if (nums[i] != nums[j]) { //new number\\n                    j++; //move current index\\n                    nums[j] = nums[i]; //fill current index with new number\\n                } \\n            }\\n        return j+1;\\n       }\\n    }",
                "solutionTags": [
                    "Java"
                ],
                "code": "class Solution {\\n        public int removeDuplicates(int[] nums) {\\n        \\n            int i = 1; //iterator thru array\\n            int j = 0; //current index\\n            for (; i<nums.length; i++) { \\n                if (nums[i] != nums[j]) { //new number\\n                    j++; //move current index\\n                    nums[j] = nums[i]; //fill current index with new number\\n                }",
                "codeTag": "Java"
            },
            {
                "id": 1656824,
                "title": "solution-swift-accepted-test-cases",
                "content": "```swift\\nclass Solution {\\n    func removeDuplicates(_ nums: inout [Int]) -> Int {\\n        let len = nums.count\\n        guard len > 1 else { return len }\\n        var idx = 0\\n        for n in nums where n != nums[idx] {\\n            idx += 1\\n            nums[idx] = n\\n        }\\n        return idx + 1\\n    }\\n}\\n```\\n\\n---\\n\\n<details>\\n<summary>\\n<img src=\"https://git.io/JDblm\" height=\"24\">\\n<b>TEST CASES</b>\\n</summary>\\n\\n<pre>\\n<b>Result:</b>  Executed 2 tests, with 0 failures (0 unexpected) in 0.008 (0.010) seconds\\n</pre>\\n\\n```swift\\nimport XCTest\\n\\nclass Tests: XCTestCase {\\n    \\n    private let solution = Solution()\\n    \\n    /// Your function should return k = 2, with the first two elements of nums being 1 and 2 respectively.\\n    /// It does not matter what you leave beyond the returned k (hence they are underscores).\\n    func test0() {\\n        var array = [1,1,2]\\n        solution.removeDuplicates(&array)\\n        XCTAssertEqual(2, [1,2].count)\\n    }\\n    \\n    /// Your function should return k = 5, with the first five elements of nums being 0, 1, 2, 3, and 4 respectively.\\n    /// It does not matter what you leave beyond the returned k (hence they are underscores).\\n    func test1() {\\n        var array = [0,0,1,1,1,2,2,3,3,4]\\n        solution.removeDuplicates(&array)\\n        XCTAssertEqual(5, [0,1,2,3,4].count)\\n    }\\n}\\n\\nTests.defaultTestSuite.run()\\n```\\n</details>",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```swift\\nclass Solution {\\n    func removeDuplicates(_ nums: inout [Int]) -> Int {\\n        let len = nums.count\\n        guard len > 1 else { return len }\\n        var idx = 0\\n        for n in nums where n != nums[idx] {\\n            idx += 1\\n            nums[idx] = n\\n        }\\n        return idx + 1\\n    }\\n}\\n```\n```swift\\nimport XCTest\\n\\nclass Tests: XCTestCase {\\n    \\n    private let solution = Solution()\\n    \\n    /// Your function should return k = 2, with the first two elements of nums being 1 and 2 respectively.\\n    /// It does not matter what you leave beyond the returned k (hence they are underscores).\\n    func test0() {\\n        var array = [1,1,2]\\n        solution.removeDuplicates(&array)\\n        XCTAssertEqual(2, [1,2].count)\\n    }\\n    \\n    /// Your function should return k = 5, with the first five elements of nums being 0, 1, 2, 3, and 4 respectively.\\n    /// It does not matter what you leave beyond the returned k (hence they are underscores).\\n    func test1() {\\n        var array = [0,0,1,1,1,2,2,3,3,4]\\n        solution.removeDuplicates(&array)\\n        XCTAssertEqual(5, [0,1,2,3,4].count)\\n    }\\n}\\n\\nTests.defaultTestSuite.run()\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3343351,
                "title": "python3-dictionary-map",
                "content": "# Please Upvote \\uD83D\\uDE07\\nThis is a solution to the \"Remove Duplicates from Sorted Array\" problem, which asks to remove duplicate elements from an input list of integers and return the length of the resulting list.\\n\\nThe solution uses a dictionary to keep track of the frequency of each element in the input list. It then iterates over the input list, and for each element, it checks if it has already been encountered using the dictionary. If the element is encountered for the first time, it is added to the output list and its index is incremented. Finally, the length of the dictionary (which corresponds to the length of the output list) is returned.\\n\\nNote that the solution assumes that the input list is sorted, which is necessary to ensure that duplicate elements appear consecutively.\\n# Python3\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        mp=defaultdict(int)\\n        ans=[]\\n        x=0\\n        for i in nums:\\n            mp[i]+=1\\n            if mp[i]==1:\\n                nums[x]=i\\n                x+=1\\n        return len(mp)\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        mp=defaultdict(int)\\n        ans=[]\\n        x=0\\n        for i in nums:\\n            mp[i]+=1\\n            if mp[i]==1:\\n                nums[x]=i\\n                x+=1\\n        return len(mp)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1067772,
                "title": "go-solution",
                "content": "```\\nfunc removeDuplicates(nums []int) int {\\n    ln := len(nums)\\n    if ln <= 1 {\\n        return ln\\n    }\\n    \\n    j := 0 // points to  the index of last filled position\\n    for i := 1; i < ln; i++ {\\n        if nums[j] != nums[i] {\\n            j++\\n            nums[j] = nums[i]\\n        }\\n    }\\n    \\n    return j + 1\\n}\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```\\nfunc removeDuplicates(nums []int) int {\\n    ln := len(nums)\\n    if ln <= 1 {\\n        return ln\\n    }\\n    \\n    j := 0 // points to  the index of last filled position\\n    for i := 1; i < ln; i++ {\\n        if nums[j] != nums[i] {\\n            j++\\n            nums[j] = nums[i]\\n        }\\n    }\\n    \\n    return j + 1\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1696566,
                "title": "java-simplest-solution-detailed-explaination",
                "content": "Intution - \\nHere we will traverse through the whole given array, but simultaneously keep the pointer of the previous index which is stored.\\nAs we traverse through the arrray, whenever we came across a new integer will compare it with the previous one if both of them are different then will store the new integer in new place and update the pointer. Once the the traversal is complete will have all the unique integer at left side and thats what we want.\\nSimple isn\\'t it..\\nNow lets look at the code.\\n```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n      \\n     //Here we declared a pointer to keep the track of previous index\\n      int previous = 0;\\n        \\n        for(int i = 1; i < nums.length; i++)\\n        {\\n            //Condition used - if the integer at i\\'th index is not equal to integer at previous\\'th index then the condition is satisfies i.e both the integer are different\\n            if(nums[i] != nums[previous])\\n            {\\n                //Incresing the previous by one to update its position by 1.\\n                previous++;\\n                \\n                //Inserting the value at i\\'th index to the previous\\'th index\\n                nums[previous] = nums[i];\\n            }\\n        }\\n               \\n       return previous+1;\\n    }\\n}\\n```\\n\\nTime Complexity - O(n).\\nSpace Complexity - O(1).\\n\\n\\nIf Found Helpful Please Upvote.\\nThank You.",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n      \\n     //Here we declared a pointer to keep the track of previous index\\n      int previous = 0;\\n        \\n        for(int i = 1; i < nums.length; i++)\\n        {\\n            //Condition used - if the integer at i\\'th index is not equal to integer at previous\\'th index then the condition is satisfies i.e both the integer are different\\n            if(nums[i] != nums[previous])\\n            {\\n                //Incresing the previous by one to update its position by 1.\\n                previous++;\\n                \\n                //Inserting the value at i\\'th index to the previous\\'th index\\n                nums[previous] = nums[i];\\n            }\\n        }\\n               \\n       return previous+1;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 145847,
                "title": "python",
                "content": "\\n\\nTime Complexity O(n)\\nSpace Complexity O(1)\\n\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums):\\n        if not nums:\\n            return \\n        slow = fast = 0\\n        while fast <= len(nums) - 1:\\n            if nums[fast] != nums[slow]:\\n                nums[slow+1] = nums[fast]\\n                slow += 1\\n            fast += 1\\n        return slow + 1\\n```\\n\\n\\n",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def removeDuplicates(self, nums):\\n        if not nums:\\n            return \\n        slow = fast = 0\\n        while fast <= len(nums) - 1:\\n            if nums[fast] != nums[slow]:\\n                nums[slow+1] = nums[fast]\\n                slow += 1\\n            fast += 1\\n        return slow + 1\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2706782,
                "title": "c-java-python3-javascript-solution-faster-than-99",
                "content": "**See the code :\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-26-remove-duplicates-from-sorted-array-solution-explanation](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-26-remove-duplicates-from-sorted-array-solution-explanation)\\u2B50**\\n\\nExample  \\n**C# Solution**  \\u2B06To see other languages please click the link above\\u2B06\\n\\n```\\npublic class Solution {\\n    public int RemoveDuplicates(int[] nums) {\\n      \\n        int tmp = nums[0];\\n        int cnt = 1;\\n        \\n        for(int i = 1;i<nums.Length;i++)\\n        {\\n            if(nums[i]>tmp)\\n            {\\n                tmp = nums[i];\\n                nums[cnt] = tmp;\\n                cnt++;\\n            }\\n        }\\n        \\n        return cnt;\\n    }\\n}\\n```\\n\\n**See next problem : \\uD83E\\uDDE1[Zyrastory-Remove Element from Sorted Array](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-27-remove-element-from-sorted-array-solution-and-explanation-en/)**\\n\\n\\n**If you got any problem about the explanation or you need other programming language solution, please feel free to let me know (leave comment or messenger me).**\\nThanks!\\n\\n**\\uD83E\\uDDE1See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n",
                "solutionTags": [
                    "Java",
                    "Python3",
                    "JavaScript"
                ],
                "code": "```\\npublic class Solution {\\n    public int RemoveDuplicates(int[] nums) {\\n      \\n        int tmp = nums[0];\\n        int cnt = 1;\\n        \\n        for(int i = 1;i<nums.Length;i++)\\n        {\\n            if(nums[i]>tmp)\\n            {\\n                tmp = nums[i];\\n                nums[cnt] = tmp;\\n                cnt++;\\n            }\\n        }\\n        \\n        return cnt;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 760800,
                "title": "simple-understandable-python-solution",
                "content": "```\\ndef removeDuplicates(self, nums: List[int]) -> int:\\n        position = 1\\n        current = nums[0]\\n\\n        for i in range(1, len(nums)):\\n            if nums[i] == current:\\n                continue\\n            current = nums[i]\\n            nums[i], nums[position] = nums[position], nums[i]\\n            position += 1\\n\\n        return position\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\ndef removeDuplicates(self, nums: List[int]) -> int:\\n        position = 1\\n        current = nums[0]\\n\\n        for i in range(1, len(nums)):\\n            if nums[i] == current:\\n                continue\\n            current = nums[i]\\n            nums[i], nums[position] = nums[position], nums[i]\\n            position += 1\\n\\n        return position\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 507271,
                "title": "simple-python-beats-100",
                "content": "Runtime: **64 ms**, faster than **100.00%** of Python3 online submissions for Remove Duplicates from Sorted Array.\\nMemory Usage: **14.5 MB**, less than **97.54%** of Python3 online submissions for Remove Duplicates from Sorted Array.\\n\\n```\\nnums[:] = sorted(set(nums))\\nreturn len(nums)\\n```",
                "solutionTags": [
                    "Python",
                    "Ordered Set"
                ],
                "code": "```\\nnums[:] = sorted(set(nums))\\nreturn len(nums)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2757771,
                "title": "java-fastest-solution-runtime-1-ms-faster-than-100-00",
                "content": "\\uD83D\\uDC69  If you like this solution, please click UpVote button. If you have any question, feel free write as a comment. Thanks :)\\n\\n```\\nclass Solution {\\n   public int removeDuplicates(int[] nums) {\\n\\t\\tif (nums.length == 0 || nums.length == 1) {\\n\\t\\t\\treturn nums.length;\\n\\t\\t}\\n\\t\\tint j = 0;\\n\\t\\tfor (int i = 0; i < nums.length - 1; i++) {\\n\\t\\t\\tif (nums[i] != nums[i + 1]) {\\n\\t\\t\\t\\tnums[j++] = nums[i];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tnums[j++] = nums[nums.length - 1];\\n\\t\\treturn j;\\n\\t}\\n}",
                "solutionTags": [
                    "Java",
                    "Array"
                ],
                "code": "class Solution {\\n   public int removeDuplicates(int[] nums) {\\n\\t\\tif (nums.length == 0 || nums.length == 1) {\\n\\t\\t\\treturn nums.length;\\n\\t\\t}",
                "codeTag": "Java"
            },
            {
                "id": 11838,
                "title": "simple-c-o-n-solution",
                "content": "\\n    int removeDuplicates(vector<int>& nums) {\\n        int pos = 0;\\n\\n        for (int i = 0; i < nums.size(); ++i) {\\n            if (i == 0 || nums[i] != nums[pos - 1])\\n                nums[pos++] = nums[i];\\n        }\\n\\n        return pos;\\n    }",
                "solutionTags": [],
                "code": "\\n    int removeDuplicates(vector<int>& nums) {\\n        int pos = 0;\\n\\n        for (int i = 0; i < nums.size(); ++i) {\\n            if (i == 0 || nums[i] != nums[pos - 1])\\n                nums[pos++] = nums[i];\\n        }\\n\\n        return pos;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 1963813,
                "title": "c-100-simple-solution-o-n",
                "content": "```\\nint removeDuplicates(int* nums, int numsSize){\\n    int new_size = numsSize;\\n    for (int idx = 0, i = 0, j = 1; i < numsSize; idx++, j++) {\\n        while(j < numsSize && nums[i] == nums[j]) {\\n            j++;\\n            new_size--;\\n        }\\n        nums[idx] = nums[j-1];\\n        i = j;\\n    }\\n    return new_size;\\n}\\n```\\n**If this was helpful, don\\'t hesitate to upvote! :)**\\nHave a nice day!",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint removeDuplicates(int* nums, int numsSize){\\n    int new_size = numsSize;\\n    for (int idx = 0, i = 0, j = 1; i < numsSize; idx++, j++) {\\n        while(j < numsSize && nums[i] == nums[j]) {\\n            j++;\\n            new_size--;\\n        }\\n        nums[idx] = nums[j-1];\\n        i = j;\\n    }\\n    return new_size;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3089539,
                "title": "easy-solution-1ms-beats-100",
                "content": "# Intuition\\nMove elements to their desired index.\\n\\n# Approach\\nFind non-repetitive elements and move them to their desired index.\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\nO(1)\\n\\n# Code\\n```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int p = 0;\\n        for(int i = 1 ; i < nums.length ; i++){\\n            if(nums[p] != nums[i]){\\n                nums[p+1] = nums[i];\\n                p++;\\n            }\\n        }\\n        return p + 1;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int p = 0;\\n        for(int i = 1 ; i < nums.length ; i++){\\n            if(nums[p] != nums[i]){\\n                nums[p+1] = nums[i];\\n                p++;\\n            }\\n        }\\n        return p + 1;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2512535,
                "title": "c-solution-o-n-time-complexity",
                "content": "\\t      int i=0;\\n\\t\\t\\tfor(int j=0;j<nums.size();j++){\\n\\t\\t\\t\\tif (nums[i] != nums[j]) i++;\\n\\t\\t\\t\\tnums[i] = nums[j];\\n\\t\\t\\t}\\n\\t\\t\\treturn i+1;\\n\\t\\t",
                "solutionTags": [],
                "code": "\\t      int i=0;\\n\\t\\t\\tfor(int j=0;j<nums.size();j++){\\n\\t\\t\\t\\tif (nums[i] != nums[j]) i++;\\n\\t\\t\\t\\tnums[i] = nums[j];\\n\\t\\t\\t}\\n\\t\\t\\treturn i+1;\\n\\t\\t",
                "codeTag": "Unknown"
            },
            {
                "id": 1529341,
                "title": "java-tc-o-n-sc-o-1-optimized-two-pointers-solution",
                "content": "```java\\n/**\\n * Using 2 pointers.\\n *\\n * Time Complexity: O(N)\\n *\\n * Space Complexity: O(1)\\n *\\n * N = Length of input array.\\n */\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        if (nums == null) {\\n            throw new IllegalArgumentException(\"Input is invalid\");\\n        }\\n\\n        int len = nums.length;\\n        if (len <= 1) {\\n            return len;\\n        }\\n\\n        int insertPos = 0;\\n        for (int i = 1; i < len; i++) {\\n            if (nums[i] != nums[insertPos]) {\\n                nums[++insertPos] = nums[i];\\n            }\\n        }\\n\\n        return insertPos + 1;\\n    }\\n}\\n```\\n\\n---\\n\\nSolutions to other Remove Element questions on LeetCode:\\n- [27. Remove Element + Follow Up](https://leetcode.com/problems/remove-element/discuss/1529351/Java-or-TC:-O(N)-or-SC:-O(1)-or-Optimized-Two-Pointers-solution-and-FollowUp)\\n- [80. Remove Duplicates from Sorted Array II + Follow Up](https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/discuss/1529357/Java-or-TC:-O(N)-or-SC:-O(1)-or-Optimized-Two-Pointers-solution-and-FollowUp)\\n",
                "solutionTags": [
                    "Java",
                    "Array",
                    "Two Pointers"
                ],
                "code": "```java\\n/**\\n * Using 2 pointers.\\n *\\n * Time Complexity: O(N)\\n *\\n * Space Complexity: O(1)\\n *\\n * N = Length of input array.\\n */\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        if (nums == null) {\\n            throw new IllegalArgumentException(\"Input is invalid\");\\n        }\\n\\n        int len = nums.length;\\n        if (len <= 1) {\\n            return len;\\n        }\\n\\n        int insertPos = 0;\\n        for (int i = 1; i < len; i++) {\\n            if (nums[i] != nums[insertPos]) {\\n                nums[++insertPos] = nums[i];\\n            }\\n        }\\n\\n        return insertPos + 1;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1350762,
                "title": "c-brute-force-optimal-two-pointer-method-solution-time-o-n-auxiliary-space-o-1",
                "content": "**Brute Force Solution**\\n\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n    // Brute Force Solution \\n\\t// Time O(NlogN) as map insertion takes O(logN) time and loop runs for N such iterations. Auxiliary Space O(N)\\n    vector<int> ans; \\n    map<int,int> mp; \\n    for(int i = 0; i < nums.size() ; i++){\\n        if(mp[nums[i]]==0)\\n            ans.push_back(nums[i]); // ans vector stores unique elements based on their first occurence in nums vector\\n        mp[nums[i]]++; // mp stores frequency of each unique element in nums vector\\n    }\\n    nums = ans; // ans vector has all unique elements in ascending order.\\n        // These unique elements are overwritten on initial indices of nums array.\\n    return ans.size();\\n}\\n};\\n```\\n\\n**Optimal Solution**\\n\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        // Optimal Solution \\n\\t\\t// Time O(N) & Auxiliary Space O(1) \\n        // Two Pointer Method\\n        int len=nums.size();\\n        if(len==0)\\n            return 0;\\n        int p1=0; \\n        for(int p2=1;p2<len;p2++){\\n            if(nums[p1]!=nums[p2]){\\n                // If elements at p1 & p2 not equal, increment p1 and copy \\n                // nums[p2] to nums[p1] so as to concentrate all unique \\n                // elements in ascending order at the initial indices of the vector\\n                p1++;\\n                nums[p1]=nums[p2];\\n            }\\n        }\\n        // p1 location is the final indice of the \\n        // unique element subarray at the beginning of nums vector\\n        return p1+1;\\n    }\\n};\\n```\\n**All suggestions are welcome. Please upvote if you like it. Thank you for reading the post.**",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n    // Brute Force Solution \\n\\t// Time O(NlogN) as map insertion takes O(logN) time and loop runs for N such iterations. Auxiliary Space O(N)\\n    vector<int> ans; \\n    map<int,int> mp; \\n    for(int i = 0; i < nums.size() ; i++){\\n        if(mp[nums[i]]==0)\\n            ans.push_back(nums[i]); // ans vector stores unique elements based on their first occurence in nums vector\\n        mp[nums[i]]++; // mp stores frequency of each unique element in nums vector\\n    }\\n    nums = ans; // ans vector has all unique elements in ascending order.\\n        // These unique elements are overwritten on initial indices of nums array.\\n    return ans.size();\\n}\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        // Optimal Solution \\n\\t\\t// Time O(N) & Auxiliary Space O(1) \\n        // Two Pointer Method\\n        int len=nums.size();\\n        if(len==0)\\n            return 0;\\n        int p1=0; \\n        for(int p2=1;p2<len;p2++){\\n            if(nums[p1]!=nums[p2]){\\n                // If elements at p1 & p2 not equal, increment p1 and copy \\n                // nums[p2] to nums[p1] so as to concentrate all unique \\n                // elements in ascending order at the initial indices of the vector\\n                p1++;\\n                nums[p1]=nums[p2];\\n            }\\n        }\\n        // p1 location is the final indice of the \\n        // unique element subarray at the beginning of nums vector\\n        return p1+1;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1902464,
                "title": "100-fastest-swift-solution-time-o-n-space-o-1",
                "content": "```\\nclass Solution {\\n    // - Complexity:\\n    //   - time: O(n), where n is the length of the nums.\\n    //   - space: O(1), only constant space is used.\\n\\n    func removeDuplicates(_ nums: inout [Int]) -> Int {\\n        guard !nums.isEmpty else { return 0 }\\n        var i = 0\\n\\n        for j in 1..<nums.count {\\n            guard nums[i] != nums[j] else { continue }\\n            i += 1\\n            nums[i] = nums[j]\\n        }\\n        return i + 1\\n    }\\n\\n}\\n```\\n\\nLet me know in comments if you have any doubts. I will be happy to answer.\\n\\nPlease upvote if you found the solution useful.",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\nclass Solution {\\n    // - Complexity:\\n    //   - time: O(n), where n is the length of the nums.\\n    //   - space: O(1), only constant space is used.\\n\\n    func removeDuplicates(_ nums: inout [Int]) -> Int {\\n        guard !nums.isEmpty else { return 0 }\\n        var i = 0\\n\\n        for j in 1..<nums.count {\\n            guard nums[i] != nums[j] else { continue }\\n            i += 1\\n            nums[i] = nums[j]\\n        }\\n        return i + 1\\n    }\\n\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1748455,
                "title": "c-two-pointer-approach",
                "content": "Kindly **upvote** if you find it helpful **: )**\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int j = 0;\\n        for(int i = 1; i < nums.size(); i++){\\n            if(nums[i] == nums[i-1]){\\n                j++;\\n            }else{\\n                nums[i-j] = nums[i];\\n            }\\n        }\\n        nums.erase(nums.end()-j , nums.end()); //erasing all the duplicate elements residing at the end part of the array\\n        return nums.size();\\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int j = 0;\\n        for(int i = 1; i < nums.size(); i++){\\n            if(nums[i] == nums[i-1]){\\n                j++;\\n            }else{\\n                nums[i-j] = nums[i];\\n            }\\n        }\\n        nums.erase(nums.end()-j , nums.end()); //erasing all the duplicate elements residing at the end part of the array\\n        return nums.size();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 422268,
                "title": "javascript-solution-beats-100-time-and-100-space",
                "content": "```\\nvar removeDuplicates = function(nums) {\\n    if(nums.length <= 1) {\\n        return nums.length;\\n    }\\n    var k = 1;\\n    for(var i = 1; i < nums.length; i++) {\\n        if(nums[i] != nums[i-1]){\\n            nums[k++] = nums[i];\\n        }\\n    }\\n    return k;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nvar removeDuplicates = function(nums) {\\n    if(nums.length <= 1) {\\n        return nums.length;\\n    }\\n    var k = 1;\\n    for(var i = 1; i < nums.length; i++) {\\n        if(nums[i] != nums[i-1]){\\n            nums[k++] = nums[i];\\n        }\\n    }\\n    return k;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 281013,
                "title": "solution-in-c",
                "content": "Runtime: 16 ms, faster than 91.50% of C online submissions \\nMemory Usage: 9.3 MB, less than 100.00% of C online submissions\\n\\n```int removeDuplicates(int* nums, int numsSize) {\\n    /* ex: [0,0,1,1,1,2,2,3,3,4] \\n     1. loop thru array and compare current element with next element\\n     2. if next is different, then it is unique; else, it\\'s a duplicate.\\n     3. count the number of duplicates between this element and last \\n        unique element \\n     4. replace first instance of duplicate with this unique element\\n     */\\n    if (numsSize == 0) { return 0;}\\n    int count = 1;  // counts the number of unique elements\\n    int j = 0;      // counts the number of duplicates between unique elements\\n    \\n    for (int i=0; i< numsSize-1; i++)  {\\n        if (nums[i] != nums[i+1]) {\\n            count++;\\n            nums[i+1-j] = nums[i+1];\\n        }\\n        else j++;\\n    } \\n    return count;\\n}```\\n",
                "solutionTags": [],
                "code": "```int removeDuplicates(int* nums, int numsSize) {\\n    /* ex: [0,0,1,1,1,2,2,3,3,4] \\n     1. loop thru array and compare current element with next element\\n     2. if next is different, then it is unique; else, it\\'s a duplicate.\\n     3. count the number of duplicates between this element and last \\n        unique element \\n     4. replace first instance of duplicate with this unique element\\n     */\\n    if (numsSize == 0) { return 0;}\\n    int count = 1;  // counts the number of unique elements\\n    int j = 0;      // counts the number of duplicates between unique elements\\n    \\n    for (int i=0; i< numsSize-1; i++)  {\\n        if (nums[i] != nums[i+1]) {\\n            count++;\\n            nums[i+1-j] = nums[i+1];\\n        }\\n        else j++;\\n    } \\n    return count;\\n}```",
                "codeTag": "Unknown"
            },
            {
                "id": 2802742,
                "title": "java-easy-solution-using-two-pointer-faster-than-80-7-line-code",
                "content": "```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int ptr = 1;\\n        for(int i = 0 ; i < nums.length -1 ; i++ ){\\n            if(nums[i] != nums[i + 1]){         //When we get unique No.\\n                nums[ptr] = nums[i+1];          //update previous pointer with new element\\n                ptr++;\\n            }\\n        }\\n        return ptr ;\\n    }\\n}\\n```\\n\\n**Please Upvote**",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int ptr = 1;\\n        for(int i = 0 ; i < nums.length -1 ; i++ ){\\n            if(nums[i] != nums[i + 1]){         //When we get unique No.\\n                nums[ptr] = nums[i+1];          //update previous pointer with new element\\n                ptr++;\\n            }\\n        }\\n        return ptr ;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 11880,
                "title": "python-2-liner-o-n",
                "content": "```\\nfrom collections import OrderedDict\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n\\n        nums[:] =  OrderedDict.fromkeys(nums).keys()\\n        return len(nums)\\n```",
                "solutionTags": [],
                "code": "```\\nfrom collections import OrderedDict\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n\\n        nums[:] =  OrderedDict.fromkeys(nums).keys()\\n        return len(nums)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3359998,
                "title": "c-easy-and-readable-solution-faster-than-92-less-than-87",
                "content": "![image.png](https://assets.leetcode.com/users/images/d28a3a9f-c38c-431f-8063-4f5b66566358_1680196913.225682.png)\\n\\n**Don\\'t hesitate to suggest or ask bellow about something that you don\\'t understand**\\n\\n```\\npublic class Solution {\\n    public int RemoveDuplicates(int[] nums) {\\n        int k = 1;\\n        int previouse = nums[0];\\n        for (int i = 1; i < nums.Length; i++)\\n        {\\n            if (nums[i] != previouse)\\n            {\\n                nums[k] = nums[i];\\n                k++;\\n            }\\n            previouse = nums[i];\\n        }\\n        return k;\\n    }\\n}\\n```\\n\\nIf you like it don\\'t forget to **upvote!**",
                "solutionTags": [
                    "C#"
                ],
                "code": "```\\npublic class Solution {\\n    public int RemoveDuplicates(int[] nums) {\\n        int k = 1;\\n        int previouse = nums[0];\\n        for (int i = 1; i < nums.Length; i++)\\n        {\\n            if (nums[i] != previouse)\\n            {\\n                nums[k] = nums[i];\\n                k++;\\n            }\\n            previouse = nums[i];\\n        }\\n        return k;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1748050,
                "title": "javascript-set-readable-simply-solution",
                "content": "```\\nvar removeDuplicates = function (nums) {\\n      let set = new Set(nums);\\n      nums.length = 0;\\n      nums.push(...set.values())\\n      return set.size;\\n};\\n```\\n\\nOur set can be initiated with the nums array. This will automatically remove all duplicates. We then set nums.length to 0 which will empty the array accordingly.\\n\\nWe do NOT use nums = [] as this would create a new object in memory and we want to empty the existing nums array. \\n\\nFinally, we use the spread operator to push our set values into the original array.",
                "solutionTags": [
                    "JavaScript",
                    "Ordered Set"
                ],
                "code": "```\\nvar removeDuplicates = function (nums) {\\n      let set = new Set(nums);\\n      nums.length = 0;\\n      nums.push(...set.values())\\n      return set.size;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 774408,
                "title": "rust-0ms-solution",
                "content": "Runtime: 0 ms, faster than 100.00% of Rust online submissions for Remove Duplicates from Sorted Array.\\nMemory Usage: 2.2 MB, less than 80.00% of Rust online submissions for Remove Duplicates from Sorted Array.\\n```\\nimpl Solution {\\n    pub fn remove_duplicates(nums: &mut Vec<i32>) -> i32 {\\n        match nums.is_empty() {\\n            true => 0,\\n            false => {\\n                let mut prev = 0;\\n                for i in 1..nums.len() {\\n                    if nums[prev] != nums[i] {\\n                        prev += 1;\\n                        nums[prev] = nums[i];\\n                    }\\n                }\\n                (prev + 1) as i32\\n            }\\n        }\\n    }\\n}\\n```",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```\\nimpl Solution {\\n    pub fn remove_duplicates(nums: &mut Vec<i32>) -> i32 {\\n        match nums.is_empty() {\\n            true => 0,\\n            false => {\\n                let mut prev = 0;\\n                for i in 1..nums.len() {\\n                    if nums[prev] != nums[i] {\\n                        prev += 1;\\n                        nums[prev] = nums[i];\\n                    }\\n                }\\n                (prev + 1) as i32\\n            }\\n        }\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3359959,
                "title": "efficient-code-in-c-kindly-upvote-please",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nIts basically a easy problem you can solve this problem with implementing array.  \\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n-> First of all take an integer with initialization 1.\\n-> traverse the vector or array from 1 to end.\\n-> if i-1th element is not equal to the ith element \\nthen put ith element to the initialized int position.\\n-> increment the initialized element.\\n-> After ending the loop return the int number.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(n)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nO(n)\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int insert=1;\\n        for(int i=1;i<nums.size();i++){\\n            if(nums[i-1]!=nums[i]){\\n                nums[insert]=nums[i];\\n                insert++;\\n            }\\n        }\\n        return insert;\\n        \\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int insert=1;\\n        for(int i=1;i<nums.size();i++){\\n            if(nums[i-1]!=nums[i]){\\n                nums[insert]=nums[i];\\n                insert++;\\n            }\\n        }\\n        return insert;\\n        \\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2386663,
                "title": "simplest5-line-c-solution-c",
                "content": "**AN UPVOTE WOULD BE HIGHLY APPERICIATED**\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int ans=0;\\n        for(int i=1;i<nums.size();i++){\\n            if(nums[i]!=nums[ans]){\\n                ans++;\\n                nums[ans]=nums[i];\\n            }\\n        }\\n        return ans+1;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int ans=0;\\n        for(int i=1;i<nums.size();i++){\\n            if(nums[i]!=nums[ans]){\\n                ans++;\\n                nums[ans]=nums[i];\\n            }\\n        }\\n        return ans+1;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 339233,
                "title": "cpp-solution-faster-than-90-solutions-easy-to-understand",
                "content": "\\t//Easy to understand solution. Comment if you have any queries, hope it helps!\\n\\tclass Solution {\\n\\tpublic:\\n\\t\\tint removeDuplicates(vector<int>& nums) \\n\\t\\t{\\n\\t\\t\\tint size = nums.size(), i = 0, j = 1;\\n        \\n\\t\\t\\tif(size == 0)\\n\\t\\t\\t\\treturn 0;  //Exclude edge case\\n        \\n\\t\\t\\tfor(j = 1; j<size; j++)\\n\\t\\t\\t{\\n\\t\\t\\t\\t//If the numbers are same, do nothing, if different, copy the different new number next to the initial number\\n\\t\\t\\t\\tif(nums[i]!=nums[j])\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ti+=1;\\n\\t\\t\\t\\t\\tnums[i] = nums[j];\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n        \\n\\t\\t\\treturn i+1;\\n\\t\\t}\\n\\t};",
                "solutionTags": [
                    "C++",
                    "C"
                ],
                "code": "class Solution {\\n\\tpublic:\\n\\t\\tint removeDuplicates(vector<int>& nums) \\n\\t\\t{\\n\\t\\t\\tint size = nums.size(), i = 0, j = 1;\\n        \\n\\t\\t\\tif(size == 0)\\n\\t\\t\\t\\treturn 0;  //Exclude edge case\\n        \\n\\t\\t\\tfor(j = 1; j<size; j++)\\n\\t\\t\\t{\\n\\t\\t\\t\\t//If the numbers are same, do nothing, if different, copy the different new number next to the initial number\\n\\t\\t\\t\\tif(nums[i]!=nums[j])\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ti+=1;\\n\\t\\t\\t\\t\\tnums[i] = nums[j];\\n\\t\\t\\t\\t}",
                "codeTag": "Java"
            },
            {
                "id": 3370285,
                "title": "short-and-clean-code-optimal-solution",
                "content": "\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int i = 0;\\n        for(int j = 1; j < nums.size(); j++){\\n            if(nums[i] != nums[j]){\\n                nums[i+1] = nums[j];\\n                i++;\\n            }\\n        }\\n        return (i+1);\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Array",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int i = 0;\\n        for(int j = 1; j < nums.size(); j++){\\n            if(nums[i] != nums[j]){\\n                nums[i+1] = nums[j];\\n                i++;\\n            }\\n        }\\n        return (i+1);\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2801700,
                "title": "golang",
                "content": "```go\\nfunc removeDuplicates(nums []int) int {\\n    i := 0\\n    for j := range nums {\\n        if nums[i] != nums[j] {\\n            i += 1\\n            nums[i] = nums[j]\\n        }\\n    }\\n    return i + 1\\n}\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```go\\nfunc removeDuplicates(nums []int) int {\\n    i := 0\\n    for j := range nums {\\n        if nums[i] != nums[j] {\\n            i += 1\\n            nums[i] = nums[j]\\n        }\\n    }\\n    return i + 1\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2801641,
                "title": "daily-leetcoding-challenge-november-day-11",
                "content": "This problem is the Daily LeetCoding Challenge for November, Day 11.\n\nFeel free to share anything related to this problem here!\n\nYou can ask questions, discuss what you've learned from this problem, or show off how many days of streak you've made!\n\n---\n\nIf you'd like to share a detailed solution to the problem, please create a new post in the discuss section and provide\n- **Detailed Explanations**: Describe the algorithm you used to solve this problem. Include any insights you used to solve this problem.\n- **Images** that help explain the algorithm.\n- **Language and Code** you used to pass the problem.\n- **Time and Space complexity analysis**.\n\n---\n\n  **📌 Do you want to learn the problem thoroughly?**\n  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/remove-duplicates-from-sorted-array/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\n  <details>\n  <summary> Spoiler Alert! We'll explain this 0 approach in the official solution</summary>\n\n  \n</details>\n\n\n\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n\n\n---\n\n<br>\n\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />\n</a>\n</p>\n\n<br>",
                "solutionTags": [],
                "code": "  Read [**⭐  LeetCode Official Solution⭐**](https://leetcode.com/problems/remove-duplicates-from-sorted-array/solution) to learn the 3 approaches to the problem with detailed explanations to the algorithms, codes, and complexity analysis.\nIf you're new to Daily LeetCoding Challenge, [**check out this post**](https://leetcode.com/discuss/general-discussion/655704/)!\n<p align=\"center\">\n<a href=\"https://leetcode.com/subscribe/?ref=ex_dc\" target=\"_blank\">\n  <img src=\"https://assets.leetcode.com/static_assets/marketing/daily_leetcoding_banner.png\" width=\"560px\" />",
                "codeTag": "Unknown"
            },
            {
                "id": 2435487,
                "title": "c-accepted-best-approach-with-good-explanation-easy-to-understand",
                "content": "**Read the below approach to understand the logic.**\\n\\n***Please upvote if you like it***\\n\\n**Approach :-**\\n1. Take a variabe \\'i\\' as 0.\\n2. Take a loop and start from j=1 index\\n\\t* Check if arr[i]!=arr[j] then increment i++ and update arr[i]=arr[j]\\n4. At the end return i+1. \\n\\n**~Time Complexity :- O(n)**\\n**Reason-** We are just traverse the given array.\\n\\n**~Space Complexity :- O(1)**\\n**Reason-** We are not using any data structure.\\n\\n**Dry Run :-**\\n\\n![image](https://assets.leetcode.com/users/images/dbe8b574-8cad-44de-ab8d-2933c0b91879_1660672467.3399732.jpeg)\\n\\n**Code :-**\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int i=0;\\n        for(int j=1;j<nums.size();j++){\\n            if(nums[i]!=nums[j]){\\n                i++;\\n                nums[i]=nums[j];\\n            }\\n        }\\n        return i+1;\\n    }\\n};\\n```\\n",
                "solutionTags": [
                    "C++",
                    "C",
                    "Array",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int i=0;\\n        for(int j=1;j<nums.size();j++){\\n            if(nums[i]!=nums[j]){\\n                i++;\\n                nums[i]=nums[j];\\n            }\\n        }\\n        return i+1;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1994027,
                "title": "100-optimal-solution-o-n-using-basics",
                "content": "```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n    if (nums.length == 0) return 0;\\n    int i = 0;\\n    for (int j = 1; j < nums.length; j++) {\\n        if (nums[j] != nums[i]) {\\n            i++;\\n            nums[i] = nums[j];\\n        }\\n    }\\n    return i + 1;\\n    }\\n}\\n```\\n\\nIf you have any doubt in above code you can comment it down!!!Please Upvote if it helps\\u2B06\\uFE0F",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n    if (nums.length == 0) return 0;\\n    int i = 0;\\n    for (int j = 1; j < nums.length; j++) {\\n        if (nums[j] != nums[i]) {\\n            i++;\\n            nums[i] = nums[j];\\n        }\\n    }\\n    return i + 1;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 419643,
                "title": "python-very-easy-solution-beats-96-01",
                "content": "```\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        j = 0\\n        for i in range(1, len(nums)):\\n            if nums[j] != nums[i]:\\n                j+=1\\n                nums[j] = nums[i]\\n        return j+1\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        j = 0\\n        for i in range(1, len(nums)):\\n            if nums[j] != nums[i]:\\n                j+=1\\n                nums[j] = nums[i]\\n        return j+1\\n```",
                "codeTag": "Java"
            },
            {
                "id": 354819,
                "title": "python3-2-pointer",
                "content": "```\\ninput = [0,1,1,1,2,2,3,3,4]\\ntail                 fast            nums\\n1                     1      [0, 1, 1, 1, 2, 2, 3, 3, 4]\\n1                     2      [0, 1, 1, 1, 2, 2, 3, 3, 4]\\n1                     3      [0, 1, 1, 1, 2, 2, 3, 3, 4]\\n2                     4      [0, 1, 2, 1, 2, 2, 3, 3, 4]\\n2                     5      [0, 1, 2, 1, 2, 2, 3, 3, 4]\\n3                     6      [0, 1, 2, 3, 2, 2, 3, 3, 4]\\n3                     7      [0, 1, 2, 3, 2, 2, 3, 3, 4]\\n4                     8      [0, 1, 2, 3, 4, 2, 3, 3, 4]\\n```\\n\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        if len(nums) ==0 : return 0\\n        tail = 0\\n        for fast in range(1,len(nums)):\\n            if nums[tail] != nums[fast]:\\n                tail += 1\\n                nums[tail] = nums[fast]\\n        return tail+1\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Two Pointers"
                ],
                "code": "```\\ninput = [0,1,1,1,2,2,3,3,4]\\ntail                 fast            nums\\n1                     1      [0, 1, 1, 1, 2, 2, 3, 3, 4]\\n1                     2      [0, 1, 1, 1, 2, 2, 3, 3, 4]\\n1                     3      [0, 1, 1, 1, 2, 2, 3, 3, 4]\\n2                     4      [0, 1, 2, 1, 2, 2, 3, 3, 4]\\n2                     5      [0, 1, 2, 1, 2, 2, 3, 3, 4]\\n3                     6      [0, 1, 2, 3, 2, 2, 3, 3, 4]\\n3                     7      [0, 1, 2, 3, 2, 2, 3, 3, 4]\\n4                     8      [0, 1, 2, 3, 4, 2, 3, 3, 4]\\n```\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        if len(nums) ==0 : return 0\\n        tail = 0\\n        for fast in range(1,len(nums)):\\n            if nums[tail] != nums[fast]:\\n                tail += 1\\n                nums[tail] = nums[fast]\\n        return tail+1\\n```",
                "codeTag": "Java"
            },
            {
                "id": 208751,
                "title": "python-solution",
                "content": "If `nums` is empty, we return `0`. Otherwise, Initialize `length = 1`, which is the length of the sorted array without duplicates. Initialize two pointers `i = 0`, `j = 1`. Iterate `j` over `range(1, len(nums))`, and if `nums[j] != nums[i]`, we increment `i` by `1`, and swap `nums[i]` and `nums[j]`. It is easy to see the loop invariant that `nums[:i+1]` is always the sorted array `nums[:j+1]` with duplicates removed. Hence when `j` reaches `len(nums)-1`, `nums[:i+1]` is `nums` with duplicates removed.\\n\\nTime complexity: `O(n)`, space complexity: `O(1)`.\\n\\n```\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        if not nums:\\n            return 0\\n        length = 1\\n        i = 0\\n        for j in range(1, len(nums)):\\n            if nums[j] != nums[i]:\\n                i += 1\\n                nums[j], nums[i] = nums[i], nums[j]\\n                length += 1\\n        return length\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        if not nums:\\n            return 0\\n        length = 1\\n        i = 0\\n        for j in range(1, len(nums)):\\n            if nums[j] != nums[i]:\\n                i += 1\\n                nums[j], nums[i] = nums[i], nums[j]\\n                length += 1\\n        return length\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3408328,
                "title": "the-simplest-o-n-javascript-typescript-two-pointers-solution",
                "content": "\\n# JavaScript Code\\n```\\nconst removeDuplicates = (nums) => {\\n    let k = 1;\\n\\n    for (let i = 1; i < nums.length; i++) {\\n        if (nums[i] !== nums[i - 1]) {\\n            nums[k] = nums[i];\\n            k++;\\n        }\\n    }\\n\\n    return k;\\n};\\n```\\n\\n# TypeScript Code\\n```\\nconst removeDuplicates = (nums: number[]): number => {\\n    let k: number = 1;\\n\\n    for (let i = 1; i < nums.length; i++) {\\n        if (nums[i] !== nums[i - 1]) {\\n            nums[k] = nums[i];\\n            k++;\\n        }\\n    }\\n\\n    return k;\\n};\\n```",
                "solutionTags": [
                    "JavaScript",
                    "TypeScript",
                    "Array",
                    "Two Pointers"
                ],
                "code": "```\\nconst removeDuplicates = (nums) => {\\n    let k = 1;\\n\\n    for (let i = 1; i < nums.length; i++) {\\n        if (nums[i] !== nums[i - 1]) {\\n            nums[k] = nums[i];\\n            k++;\\n        }\\n    }\\n\\n    return k;\\n};\\n```\n```\\nconst removeDuplicates = (nums: number[]): number => {\\n    let k: number = 1;\\n\\n    for (let i = 1; i < nums.length; i++) {\\n        if (nums[i] !== nums[i - 1]) {\\n            nums[k] = nums[i];\\n            k++;\\n        }\\n    }\\n\\n    return k;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3163260,
                "title": "c-easy-approach-o-n-no-extra-space",
                "content": "# Explanation \\nTake a pointer `position` to point the available position for distinct value\\n\\nCheck for each  current value `currValue` whether the element is new or not, if new then place it in `position` and increment the `position` else continue.\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& arr) {\\n        int n = size(arr);\\n         int position = 0;\\n        int currValue = INT_MIN;\\n        for(int i=0;i<n;i++){\\n\\n        // if current value and arr[i] is not same\\n        // place it in position \\n\\n            if(currValue!=arr[i]){\\n                \\n                currValue= arr[i];\\n                arr[position++] = currValue;\\n            }\\n            else{\\n                continue;\\n            }\\n        }\\n       return position;\\n    }\\n};\\n```\\n#### Please UPVOTE if you liked the solution",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& arr) {\\n        int n = size(arr);\\n         int position = 0;\\n        int currValue = INT_MIN;\\n        for(int i=0;i<n;i++){\\n\\n        // if current value and arr[i] is not same\\n        // place it in position \\n\\n            if(currValue!=arr[i]){\\n                \\n                currValue= arr[i];\\n                arr[position++] = currValue;\\n            }\\n            else{\\n                continue;\\n            }\\n        }\\n       return position;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2801656,
                "title": "rust-2-lines",
                "content": "Rust Solution ([3ms](https://leetcode.com/submissions/detail/841044407/)):\\n```rust\\nimpl Solution {\\n    pub fn remove_duplicates(nums: &mut Vec<i32>) -> i32 {\\n        nums.dedup();\\n        nums.len() as i32\\n    }\\n}\\n```",
                "solutionTags": [
                    "Rust"
                ],
                "code": "```rust\\nimpl Solution {\\n    pub fn remove_duplicates(nums: &mut Vec<i32>) -> i32 {\\n        nums.dedup();\\n        nums.len() as i32\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1047203,
                "title": "swift-99-88-performance-with-documentation",
                "content": "First, Obligatory Evidentiary Support.  Submitted 02FEB2021.\\n![image](https://assets.leetcode.com/users/images/149652fd-c8ad-4329-8a64-9e7077a5bf79_1612277690.153362.png)\\n\\nRemoves duplicate values from a sorted array of `Int`s.\\n\\n**Parameter `nums`**: Pointer to array to reduce to unique values\\n**Returns**: The length of the array as `Int` after removing duplicates\\n**PostCondition**: nums is located at the same address, occupying less space.\\n\\tnums contains only the unique values that were previously in nums.\\n\\n**Problem Constraints:**\\n* nums.count is betweeen 0 and 30,000\\n* values in nums will be between -10,000 and +10,000, but since target platform\\nis 64 bit architecture, we gain no performance by only testing the relevant bytes.\\n* Problem requires NO additional array allocation, i.e. operate on nums IN PLACE.\\n* nums is pre-sorted, and must remain sorted after function return.\\n```\\nfunc removeDuplicates(_ nums: inout [Int]) -> Int {\\n    /// nums.count will be used 3 times during function, pre-calculate\\n    /// in stack frame for fewer CPU instructions.\\n    let length = nums.count\\n    guard length > 1 else { return length }\\n    \\n    /// The number of unique values we are keeping\\n    var keep = 1\\n    /// Minimal iterative instructions.\\n    /// Overflow addition operator avoids instructions that unecessarily\\n    /// check for Integer overflow.\\n    for i in 1..<length {\\n        if nums[i &- 1] != nums[i] {\\n          nums[keep] = nums[i]\\n          keep &+= 1\\n        }\\n    }\\n    /// Eliminate all of nums that are not unique.\\n\\t/// (20% faster than nums = Array(nums[0..<keep]).\\n    nums.removeLast(length &- keep)\\n    return keep\\n}\\n```\\n\\nThe above solution is the most performant that I could get while maintaining Swift\\'s safety conventions.  However, I\\'d like to point out that the following code:\\n```\\nfunc removeDuplicates(_ nums: inout [Int]) -> Int {\\n    guard !nums.isEmpty else { return 0 }\\n    nums = Array(Set(nums)).sorted()\\n    return nums.count\\n}\\n```\\nIs more elegant and swifty, but it is **significantly** less algorithmically efficient on the CPU.  Purists for this problem should also be quick to point out that it is an invalid solution and violates the memory constraint of the problem.  It can\\'t be **constant** (i.e: O(1)) space because the size of the `Set` allocation is dependent on the quantity of unique values in the data.\\n\\nCheers",
                "solutionTags": [
                    "Swift"
                ],
                "code": "```\\nfunc removeDuplicates(_ nums: inout [Int]) -> Int {\\n    /// nums.count will be used 3 times during function, pre-calculate\\n    /// in stack frame for fewer CPU instructions.\\n    let length = nums.count\\n    guard length > 1 else { return length }\\n    \\n    /// The number of unique values we are keeping\\n    var keep = 1\\n    /// Minimal iterative instructions.\\n    /// Overflow addition operator avoids instructions that unecessarily\\n    /// check for Integer overflow.\\n    for i in 1..<length {\\n        if nums[i &- 1] != nums[i] {\\n          nums[keep] = nums[i]\\n          keep &+= 1\\n        }\\n    }\\n    /// Eliminate all of nums that are not unique.\\n\\t/// (20% faster than nums = Array(nums[0..<keep]).\\n    nums.removeLast(length &- keep)\\n    return keep\\n}\\n```\n```\\nfunc removeDuplicates(_ nums: inout [Int]) -> Int {\\n    guard !nums.isEmpty else { return 0 }\\n    nums = Array(Set(nums)).sorted()\\n    return nums.count\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 595721,
                "title": "in-c",
                "content": "```\\nint removeDuplicates(int* nums, int numsSize)\\n{\\n    int i, last = 0;\\n   \\n    if (numsSize <= 1) {\\n        return numsSize;\\n    }\\n     \\n    for (i = 1; i < numsSize; i++) {\\n        if (nums[i-1] < nums[i]) {\\n            nums[++last] = nums[i];\\n        }\\n    }\\n\\n    return last+1;\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint removeDuplicates(int* nums, int numsSize)\\n{\\n    int i, last = 0;\\n   \\n    if (numsSize <= 1) {\\n        return numsSize;\\n    }\\n     \\n    for (i = 1; i < numsSize; i++) {\\n        if (nums[i-1] < nums[i]) {\\n            nums[++last] = nums[i];\\n        }\\n    }\\n\\n    return last+1;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 195619,
                "title": "javascript",
                "content": "```\\nvar removeDuplicates = function(nums) {\\n    if(nums.length === 0) {\\n        return 0\\n    }\\n    let result = 1, i = 0, j = 1;\\n    \\n    while(i < nums.length && j < nums.length) {\\n        if(nums[j] === nums[i]) {\\n            j++;\\n        } else {\\n            result += 1;\\n            i++;\\n            nums[i] = nums[j];\\n            j++;\\n        }\\n    }\\n    \\n    return result;\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nvar removeDuplicates = function(nums) {\\n    if(nums.length === 0) {\\n        return 0\\n    }\\n    let result = 1, i = 0, j = 1;\\n    \\n    while(i < nums.length && j < nums.length) {\\n        if(nums[j] === nums[i]) {\\n            j++;\\n        } else {\\n            result += 1;\\n            i++;\\n            nums[i] = nums[j];\\n            j++;\\n        }\\n    }\\n    \\n    return result;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 12058,
                "title": "clean-5-line-java-solution",
                "content": "    public int removeDuplicates(int[] nums) {\\n        int cur = 0 ; \\n        for(int n:nums)\\n            if(n>nums[cur])\\n                nums[++cur] = n;\\n        return cur+1;\\n    }",
                "solutionTags": [],
                "code": "    public int removeDuplicates(int[] nums) {\\n        int cur = 0 ; \\n        for(int n:nums)\\n            if(n>nums[cur])\\n                nums[++cur] = n;\\n        return cur+1;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 3984006,
                "title": "java-runtime-1-ms-beats-97-80",
                "content": "# Intuition\\nMy initial thoughts on this problem involve finding an optimized solution to remove duplicates from a sorted array.\\n\\n# Approach\\nThe chosen approach utilizes a two-pointer technique to efficiently remove duplicates from the sorted array `nums`. The two pointers, `i` and `j`, are initialized to 0 and 1 respectively. \\n\\nThe algorithm proceeds as follows:\\n1. Iterate through the array from index 1 to the end:\\n   - Compare the element at position `i` with the element at position `j-1` (previous distinct element).\\n   - If they are not equal, it means a new distinct element is found.\\n     - Increment the pointer `j` and assign the element at position `i` to position `j`.\\n2. After completing the iteration, the value of `j` represents the index of the last distinct element in the array. Adding 1 to `j` gives the count of distinct elements.\\n\\nThe algorithm effectively removes duplicates from the sorted array while maintaining the relative order of the elements.\\n\\n# Complexity\\n- Time complexity: O(n)\\n  The algorithm iterates through the array once, performing constant-time operations at each step.\\n\\n- Space complexity: O(1)\\n  The algorithm utilizes a constant amount of additional memory space for variables, ensuring that the space complexity remains constant.\\n\\n\\n# Code\\n```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n\\n        int j = 0;\\n        \\n        for (int i = 1; i < nums.length; i++) {\\n            if (nums[i] != nums[j]) {\\n                j++;\\n                nums[j] = nums[i];\\n            }\\n        }\\n        \\n        return j + 1;\\n        \\n    }\\n}\\n```\\n![c0504eaf-5fb8-4a1d-a769-833262d1b86e_1674433591.3836212.webp](https://assets.leetcode.com/users/images/bf6f2c00-0032-4cf5-a63e-7c4053cc0330_1693477316.9093492.webp)\\n",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n\\n        int j = 0;\\n        \\n        for (int i = 1; i < nums.length; i++) {\\n            if (nums[i] != nums[j]) {\\n                j++;\\n                nums[j] = nums[i];\\n            }\\n        }\\n        \\n        return j + 1;\\n        \\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2801741,
                "title": "javascript-or-how-to-follow-directions-o-1-space",
                "content": "```\\nvar removeDuplicates = function(nums) {\\n    let end = nums.length;\\n    let remove = function(i) {\\n        for( var j=i; j+1<end; j++ ) {\\n            nums[j] = nums[j+1];\\n        }\\n    };\\n    \\n    var i;\\n    for( i=0; i<end; i++ ) {\\n        while( i<end && nums.indexOf(nums[i]) < i ) {\\n            remove(i);\\n            end--;\\n        }\\n    }\\n    \\n    return end;\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nvar removeDuplicates = function(nums) {\\n    let end = nums.length;\\n    let remove = function(i) {\\n        for( var j=i; j+1<end; j++ ) {\\n            nums[j] = nums[j+1];\\n        }\\n    };\\n    \\n    var i;\\n    for( i=0; i<end; i++ ) {\\n        while( i<end && nums.indexOf(nums[i]) < i ) {\\n            remove(i);\\n            end--;\\n        }\\n    }\\n    \\n    return end;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2801649,
                "title": "golang-o-n",
                "content": "```\\nfunc removeDuplicates(nums []int) int {\\n    nextInsertionIndex := 1\\n    \\n    for i := 1; i < len(nums); i++ {\\n        if nums[i] != nums[i-1] {\\n            nums[nextInsertionIndex] = nums[i]\\n            nextInsertionIndex++\\n        }\\n    }\\n    \\n    return nextInsertionIndex\\n}\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```\\nfunc removeDuplicates(nums []int) int {\\n    nextInsertionIndex := 1\\n    \\n    for i := 1; i < len(nums); i++ {\\n        if nums[i] != nums[i-1] {\\n            nums[nextInsertionIndex] = nums[i]\\n            nextInsertionIndex++\\n        }\\n    }\\n    \\n    return nextInsertionIndex\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2338649,
                "title": "c-java-python3-javascript-solution-faster-than-99",
                "content": "**See the code :\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-26-remove-duplicates-from-sorted-array-solution-explanation](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-26-remove-duplicates-from-sorted-array-solution-explanation)\\u2B50**\\n\\n**See next problem : \\uD83E\\uDDE1[Zyrastory-Remove Element from Sorted Array](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-27-remove-element-from-sorted-array-solution-and-explanation-en/)**\\n\\n\\nSubmission detail\\n![image](https://assets.leetcode.com/users/images/e7276a8f-6a26-49c8-a51e-047b138b02d2_1658135504.9480598.png)\\n![image](https://assets.leetcode.com/users/images/ea20f5fb-bcd0-43a5-84a3-12143cea7805_1658135511.9166517.png)\\n![image](https://assets.leetcode.com/users/images/e5ef76b2-1f71-4c37-a38b-ed9f3e56a968_1658135601.5537932.png)\\n![image](https://assets.leetcode.com/users/images/dd1553b9-c286-40e3-84e2-899c0718d796_1658158589.7400055.png)\\n\\n\\n**\\uD83E\\uDDE1See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\nThanks!",
                "solutionTags": [],
                "code": "**See the code :\\u2B50[https://zyrastory.com/en/coding-en/leetcode-en/leetcode-26-remove-duplicates-from-sorted-array-solution-explanation](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-26-remove-duplicates-from-sorted-array-solution-explanation)\\u2B50**\\n\\n**See next problem : \\uD83E\\uDDE1[Zyrastory-Remove Element from Sorted Array](https://zyrastory.com/en/coding-en/leetcode-en/leetcode-27-remove-element-from-sorted-array-solution-and-explanation-en/)**\\n\\n\\nSubmission detail\\n![image](https://assets.leetcode.com/users/images/e7276a8f-6a26-49c8-a51e-047b138b02d2_1658135504.9480598.png)\\n![image](https://assets.leetcode.com/users/images/ea20f5fb-bcd0-43a5-84a3-12143cea7805_1658135511.9166517.png)\\n![image](https://assets.leetcode.com/users/images/e5ef76b2-1f71-4c37-a38b-ed9f3e56a968_1658135601.5537932.png)\\n![image](https://assets.leetcode.com/users/images/dd1553b9-c286-40e3-84e2-899c0718d796_1658158589.7400055.png)\\n\\n\\n**\\uD83E\\uDDE1See more LeetCode solution : [Zyrastory - LeetCode Solution](https://zyrastory.com/en/category/coding-en/leetcode-en/)**\\n\\nThanks!",
                "codeTag": "Unknown"
            },
            {
                "id": 3400266,
                "title": "intuitive-c-solution-easy-to-understand",
                "content": "# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int j = 1;\\n        for (int i = 0; i < nums.size() - 1; i++) {\\n            if (nums[i] != nums[i+1]) nums[j++] = nums[i+1];\\n        }\\n        return j;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int j = 1;\\n        for (int i = 0; i < nums.size() - 1; i++) {\\n            if (nums[i] != nums[i+1]) nums[j++] = nums[i+1];\\n        }\\n        return j;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3393931,
                "title": "javascript-multiple-solutions-array-splice-for-loop-while-loop-two-pointers",
                "content": "***Happy Coding..!* Feel free to ask Q\\'s...**\\n*#happytohelpu*\\n\\n```\\n\\n// Solution 1 : Using Array splice method\\nconst removeDuplicates = (nums) => {\\n    for (let i = 0; i < nums.length - 1; i++) {\\n        if (nums[i] == nums[i + 1]) {\\n            nums.splice(i + 1, 1);\\n            i--;\\n        }\\n    }\\n};\\n\\n// Solution 2 : For loop with continue\\nconst removeDuplicates = (nums) => {\\n    if (nums.length === 0) return 0;\\n    let i = 0;\\n    for (let j = 1; j < nums.length; j++) {\\n        if (nums[j] === nums[i]) continue; // If the elements are equal then continue else copy the unique element by then to \"i+1\" position\\n        nums[++i] = nums[j];\\n    }\\n    return i + 1;\\n}\\n\\n// Solution 3 : For loop \\nconst removeDuplicates = (nums) => {\\n    if (nums.length === 0) return 0;\\n    let i = 0;\\n    for (let j = 1; j < nums.length; j++) {\\n        if (nums[j] !== nums[i]) { //  If the elements are not equal then copy the unique element by then to \"i+1\" position\\n            nums[++i] = nums[j];\\n        }\\n    }\\n    return i + 1;\\n}\\n\\n// Solution 4 :  While loop\\nconst removeDuplicates = (nums) => {\\n    if (nums.length === 0) return 0;\\n    let i = 0;\\n    let j = 1;\\n    while (j < nums.length) {\\n        if (nums[j] !== nums[i]) {\\n            nums[++i] = nums[j];\\n        }\\n        j++;\\n    }\\n    return i + 1;\\n}\\n\\n// Solution 5 : Move the duplicate elements\\nconst removeDuplicates = (nums, j = 0) => {\\n    for (let i = 1; i < nums.length; i++) {\\n        if (nums[j] != nums[i] && i != j) {\\n            nums[++j] = nums[i];\\n        }\\n    }\\n    return ++j;\\n};\\n\\n```\\n\\n***Do upvote if you find this solution useful..***\\n",
                "solutionTags": [
                    "JavaScript",
                    "Array",
                    "Two Pointers"
                ],
                "code": "```\\n\\n// Solution 1 : Using Array splice method\\nconst removeDuplicates = (nums) => {\\n    for (let i = 0; i < nums.length - 1; i++) {\\n        if (nums[i] == nums[i + 1]) {\\n            nums.splice(i + 1, 1);\\n            i--;\\n        }\\n    }\\n};\\n\\n// Solution 2 : For loop with continue\\nconst removeDuplicates = (nums) => {\\n    if (nums.length === 0) return 0;\\n    let i = 0;\\n    for (let j = 1; j < nums.length; j++) {\\n        if (nums[j] === nums[i]) continue; // If the elements are equal then continue else copy the unique element by then to \"i+1\" position\\n        nums[++i] = nums[j];\\n    }\\n    return i + 1;\\n}\\n\\n// Solution 3 : For loop \\nconst removeDuplicates = (nums) => {\\n    if (nums.length === 0) return 0;\\n    let i = 0;\\n    for (let j = 1; j < nums.length; j++) {\\n        if (nums[j] !== nums[i]) { //  If the elements are not equal then copy the unique element by then to \"i+1\" position\\n            nums[++i] = nums[j];\\n        }\\n    }\\n    return i + 1;\\n}\\n\\n// Solution 4 :  While loop\\nconst removeDuplicates = (nums) => {\\n    if (nums.length === 0) return 0;\\n    let i = 0;\\n    let j = 1;\\n    while (j < nums.length) {\\n        if (nums[j] !== nums[i]) {\\n            nums[++i] = nums[j];\\n        }\\n        j++;\\n    }\\n    return i + 1;\\n}\\n\\n// Solution 5 : Move the duplicate elements\\nconst removeDuplicates = (nums, j = 0) => {\\n    for (let i = 1; i < nums.length; i++) {\\n        if (nums[j] != nums[i] && i != j) {\\n            nums[++j] = nums[i];\\n        }\\n    }\\n    return ++j;\\n};\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3357483,
                "title": "easy-go-solution",
                "content": "\\n# Complexity\\n- Time complexity: O(n)\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nfunc removeDuplicates(nums []int) int {\\n    prev := nums[0]\\n    l := 1\\n    for i := 1; i < len(nums); i++ {\\n        if nums[i] != prev {\\n            nums[l] = nums[i]\\n            l++\\n        } \\n        prev = nums[i]\\n    }\\n    return l\\n}\\n```",
                "solutionTags": [
                    "Go"
                ],
                "code": "```\\nfunc removeDuplicates(nums []int) int {\\n    prev := nums[0]\\n    l := 1\\n    for i := 1; i < len(nums); i++ {\\n        if nums[i] != prev {\\n            nums[l] = nums[i]\\n            l++\\n        } \\n        prev = nums[i]\\n    }\\n    return l\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3224771,
                "title": "2-liner-python-solution",
                "content": "\\n\\n# Code\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums[:] = sorted(set(nums))\\n        return len(nums)\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums[:] = sorted(set(nums))\\n        return len(nums)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3213663,
                "title": "simple-approach-1ms-efficient-code",
                "content": "# Intuition\\nJust simply swap the duplicate element in the array to the end\\n\\n# Approach\\nTraverse the array if there is any duplicate element with index position\\n\\n# Complexity\\n- Time complexity:O(n)\\n\\n\\n- Space complexity:O(1)\\n\\n# Code\\n```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int j=0;\\n        for(int i=1;i<nums.length;i++){\\n            if(nums[i]!=nums[j]){\\n               nums[j+1]=nums[i];\\n               j++;}\\n        }\\n        return j+1;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int j=0;\\n        for(int i=1;i<nums.length;i++){\\n            if(nums[i]!=nums[j]){\\n               nums[j+1]=nums[i];\\n               j++;}\\n        }\\n        return j+1;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2874837,
                "title": "easiest-faang-method-ever",
                "content": "\\n# \\uD83D\\uDDEF\\uFE0F Complexity :-\\n- Time complexity: O(n)\\n<!-- Add your time com plexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# \\uD83D\\uDDEF\\uFE0F Code :-\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int count=0;\\n        for(int i=1;i<nums.size();i++){\\n            if(nums[i]==nums[i-1])\\n                count++;\\n            else\\n                nums[i-count]=nums[i];    \\n        }\\n        return nums.size()-count;\\n    }\\n};\\n```\\n# ***Upvote if it helped you :)***",
                "solutionTags": [
                    "C++",
                    "Java",
                    "Python3",
                    "Array",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int count=0;\\n        for(int i=1;i<nums.size();i++){\\n            if(nums[i]==nums[i-1])\\n                count++;\\n            else\\n                nums[i-count]=nums[i];    \\n        }\\n        return nums.size()-count;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2801869,
                "title": "o-1-space-complexity-python-using-for-loop",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n\\n# Complexity\\n- Time complexity:N\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:1\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        n=len(nums)\\n        for i in range(n-1,0,-1):\\n            if(nums[i]==nums[i-1]):\\n                nums.pop(i)\\n        return len(nums)\\n```",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Array"
                ],
                "code": "```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        n=len(nums)\\n        for i in range(n-1,0,-1):\\n            if(nums[i]==nums[i-1]):\\n                nums.pop(i)\\n        return len(nums)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2284519,
                "title": "c-optimised-and-easy-solution-two-pointer-approach",
                "content": "*Runtime: 21 ms, faster than 42.77% of C++ online submissions for Remove Duplicates from Sorted Array.\\nMemory Usage: 18.4 MB, less than 36.66% of C++ online submissions for Remove Duplicates from Sorted Array.*\\n\\n**code is availible in comment**",
                "solutionTags": [
                    "C",
                    "Two Pointers"
                ],
                "code": "",
                "codeTag": "Unknown"
            },
            {
                "id": 2057010,
                "title": "c-java-c-c-javascript-typescript-solutions-easy-to-understand",
                "content": "```C++ []\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int len = 0;  // Initialize a variable \\'i\\' to keep track of the current position\\n\\n        for (int j = 0; j < nums.size(); j++) {  // Iterate through the vector \\'nums\\'\\n            nums[len++] = nums[j];  // Copy the current element at index \\'j\\' to index \\'i\\' and increment \\'i\\'\\n\\n            // Check for consecutive duplicate elements\\n            while (j < nums.size() - 1 && nums[j] == nums[j + 1])\\n                j++;  // If there are consecutive duplicates, move \\'j\\' to the next distinct element\\n        }\\n        return len;  // Return the new length of the modified vector (i.e., number of unique elements)\\n    }\\n};\\n```\\n```java []\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int i = 0;\\n        for (int j=0;j<nums.length;j++) {\\n            nums[i++] = nums[j];            \\n            while (j<nums.length-1&&nums[j]==nums[j+1])\\n                 j++;\\n        }\\n        return i;\\n    }\\n}\\n```\\n```csharp []\\n// 1. Space O(N)\\npublic class Solution {\\n    public int RemoveDuplicates(int[] nums) {\\n        HashSet<int> secondary = new HashSet<int>();\\n        int counter = 0;        \\n        for (int i = 0; i < nums.Length; i++) \\n            if (secondary.Add(nums[i])) \\n                nums[counter++] = nums[i];     \\n        return counter;\\n    }\\n}\\n// 2. Space O(1)\\npublic class Solution {\\n    public int RemoveDuplicates(int[] nums) {\\n        int i = 0;\\n        for (int j=0;j<nums.Length;j++) {\\n            nums[i++] = nums[j];            \\n            while (j<nums.Length-1&&nums[j]==nums[j+1]) \\n                j++;\\n        }\\n        return i;\\n    }\\n}\\n```\\n```C []\\nint removeDuplicates(int* nums, int numsSize){\\n    int i = 0;\\n    for (int j=0;j<numsSize;j++) {\\n        nums[i++] = nums[j];            \\n        while (j<numsSize-1&&nums[j]==nums[j+1]) \\n            j++;\\n    }\\n    return i;\\n}\\n```\\n```javascript []\\nvar removeDuplicates = function(nums) {\\n    var i = 0;\\n    for (var j=0;j<nums.length;j++) {\\n        nums[i++] = nums[j];            \\n        while (j<nums.length-1&&nums[j]==nums[j+1]) \\n            j++;\\n    }\\n    return i;\\n};\\n```\\n```TypeScript []\\nfunction removeDuplicates(nums: number[]): number {\\n    var i = 0;\\n    for (var j=0;j<nums.length;j++) {\\n        nums[i++] = nums[j];            \\n        while (j<nums.length-1&&nums[j]==nums[j+1]) \\n            j++;\\n    }\\n    return i;\\n};\\n```\\n",
                "solutionTags": [
                    "C++",
                    "Java",
                    "TypeScript",
                    "Array",
                    "Two Pointers"
                ],
                "code": "```C++ []\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int len = 0;  // Initialize a variable \\'i\\' to keep track of the current position\\n\\n        for (int j = 0; j < nums.size(); j++) {  // Iterate through the vector \\'nums\\'\\n            nums[len++] = nums[j];  // Copy the current element at index \\'j\\' to index \\'i\\' and increment \\'i\\'\\n\\n            // Check for consecutive duplicate elements\\n            while (j < nums.size() - 1 && nums[j] == nums[j + 1])\\n                j++;  // If there are consecutive duplicates, move \\'j\\' to the next distinct element\\n        }\\n        return len;  // Return the new length of the modified vector (i.e., number of unique elements)\\n    }\\n};\\n```\n```java []\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int i = 0;\\n        for (int j=0;j<nums.length;j++) {\\n            nums[i++] = nums[j];            \\n            while (j<nums.length-1&&nums[j]==nums[j+1])\\n                 j++;\\n        }\\n        return i;\\n    }\\n}\\n```\n```csharp []\\n// 1. Space O(N)\\npublic class Solution {\\n    public int RemoveDuplicates(int[] nums) {\\n        HashSet<int> secondary = new HashSet<int>();\\n        int counter = 0;        \\n        for (int i = 0; i < nums.Length; i++) \\n            if (secondary.Add(nums[i])) \\n                nums[counter++] = nums[i];     \\n        return counter;\\n    }\\n}\\n// 2. Space O(1)\\npublic class Solution {\\n    public int RemoveDuplicates(int[] nums) {\\n        int i = 0;\\n        for (int j=0;j<nums.Length;j++) {\\n            nums[i++] = nums[j];            \\n            while (j<nums.Length-1&&nums[j]==nums[j+1]) \\n                j++;\\n        }\\n        return i;\\n    }\\n}\\n```\n```C []\\nint removeDuplicates(int* nums, int numsSize){\\n    int i = 0;\\n    for (int j=0;j<numsSize;j++) {\\n        nums[i++] = nums[j];            \\n        while (j<numsSize-1&&nums[j]==nums[j+1]) \\n            j++;\\n    }\\n    return i;\\n}\\n```\n```javascript []\\nvar removeDuplicates = function(nums) {\\n    var i = 0;\\n    for (var j=0;j<nums.length;j++) {\\n        nums[i++] = nums[j];            \\n        while (j<nums.length-1&&nums[j]==nums[j+1]) \\n            j++;\\n    }\\n    return i;\\n};\\n```\n```TypeScript []\\nfunction removeDuplicates(nums: number[]): number {\\n    var i = 0;\\n    for (var j=0;j<nums.length;j++) {\\n        nums[i++] = nums[j];            \\n        while (j<nums.length-1&&nums[j]==nums[j+1]) \\n            j++;\\n    }\\n    return i;\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1204366,
                "title": "0ms-java-solution",
                "content": "```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int n = nums.length;\\n        if(n<=1){return n;}\\n        \\n        int left = 0; //everything to the left of left(inclusive) is good\\n        int right = 1;//the current element we are processing\\n        \\n        while(right<=n-1){\\n            if(nums[right] == nums[left]){\\n                right++;\\n            }\\n            else{\\n                nums[left+1] = nums[right];\\n                left++;\\n                right++;\\n            }\\n        }\\n        \\n        return left+1;\\n    }\\n}```\\n\\nRuntime: 0 ms, faster than 100.00% of Java online submissions",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int n = nums.length;\\n        if(n<=1){return n;}\\n        \\n        int left = 0; //everything to the left of left(inclusive) is good\\n        int right = 1;//the current element we are processing\\n        \\n        while(right<=n-1){\\n            if(nums[right] == nums[left]){\\n                right++;\\n            }\\n            else{\\n                nums[left+1] = nums[right];\\n                left++;\\n                right++;\\n            }\\n        }\\n        \\n        return left+1;\\n    }\\n}```",
                "codeTag": "Java"
            },
            {
                "id": 530749,
                "title": "javascript-o-n-two-pointers-95-100",
                "content": "```\\nconst removeDuplicates = (nums) => {\\n  let i = 0;\\n  let j = 1;\\n\\n  for (; j < nums.length; j += 1) {\\n    if (nums[j] !== nums[i]) {\\n      i += 1;\\n      nums[i] = nums[j];\\n    }\\n  }\\n\\n  return i + 1;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\nconst removeDuplicates = (nums) => {\\n  let i = 0;\\n  let j = 1;\\n\\n  for (; j < nums.length; j += 1) {\\n    if (nums[j] !== nums[i]) {\\n      i += 1;\\n      nums[i] = nums[j];\\n    }\\n  }\\n\\n  return i + 1;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 12131,
                "title": "c-code-no-trick",
                "content": "Use an index last to record the next written position (i.e. copy a new element to last+1).\\n\\n    class Solution {\\n    public:\\n        int removeDuplicates(vector<int>& nums) {\\n            int last=0, i, len=nums.size();\\n            if(!len) return 0;\\n            for(i=0; i<len;++i)\\n            {\\n                if(nums[i]!=nums[last]) nums[++last] = nums[i];\\n            }\\n            return last+1;\\n            \\n        }\\n    };",
                "solutionTags": [],
                "code": "class Solution {\\n    public:\\n        int removeDuplicates(vector<int>& nums) {\\n            int last=0, i, len=nums.size();\\n            if(!len) return 0;\\n            for(i=0; i<len;++i)\\n            {\\n                if(nums[i]!=nums[last]) nums[++last] = nums[i];\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 3410471,
                "title": "best-solution-in-java-runtime-in-1-ms-beats-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n       int k = 1;\\n        for (int i = 0; i < nums.length - 1; i++) {\\n\\n            if (nums[i] < nums[i+1]) {\\n\\n                nums[k] = nums[i+1];\\n                k++;\\n            }\\n        }\\n\\n        return k;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n       int k = 1;\\n        for (int i = 0; i < nums.length - 1; i++) {\\n\\n            if (nums[i] < nums[i+1]) {\\n\\n                nums[k] = nums[i+1];\\n                k++;\\n            }\\n        }\\n\\n        return k;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3181523,
                "title": "java-best-solution-simple-solution",
                "content": "# Intuition\\n\\n![WhatsApp Image 2023-02-13 at 22.35.08.jpeg](https://assets.leetcode.com/users/images/b7a5dacc-3738-4eba-a60e-265b78c8a617_1676307964.6845708.jpeg)\\n\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int cout=1;\\n       for(int i=0;i<nums.length-1;i++){\\n           if(nums[i]!=nums[i+1]){\\n               nums[cout]=nums[i+1];\\n               cout++;\\n           }\\n       }\\n       return cout;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int cout=1;\\n       for(int i=0;i<nums.length-1;i++){\\n           if(nums[i]!=nums[i+1]){\\n               nums[cout]=nums[i+1];\\n               cout++;\\n           }\\n       }\\n       return cout;\\n    }\\n}\\n```",
                "codeTag": "C++"
            },
            {
                "id": 2804240,
                "title": "remove-duplicates-from-sorted-array-easy-to-analyse",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nint removeDuplicates(int* nums, int numsSize){\\n    int k=1;\\n    for(int i=0;i<numsSize-1;i++)\\n    {\\n        if(nums[i]!=nums[i+1])\\n        {\\n            nums[k++]=nums[i+1];\\n        }\\n    }\\n    return k;\\n}\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint removeDuplicates(int* nums, int numsSize){\\n    int k=1;\\n    for(int i=0;i<numsSize-1;i++)\\n    {\\n        if(nums[i]!=nums[i+1])\\n        {\\n            nums[k++]=nums[i+1];\\n        }\\n    }\\n    return k;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2801950,
                "title": "in-place-o-n-o-1-c",
                "content": "\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nAssume the array to be divided into two parts , one without duplicates and one to be computed . Now traverse the array left and see where there is a change in value(arr[i]!=arr[i-1]) (change in value means a new value occurs). If yes, add this to ans array and move forward. To add in ans , we just change value and increase the index.\\n\\n# Complexity\\n- Time complexity: O(n)\\n\\n- Space complexity: O(1)\\n\\n# Code\\n```\\n  if(nums.size()<=1)return 1;\\n\\n           int i  = 1;  //**** next index in ans part \\n           int j = 1;   //*** index to find unique\\n\\n           while(j<nums.size()){\\n             if(nums[j]!=nums[j-1]){  //** whenever a change is seen(means new value occurs)\\n                 nums[i] = nums[j];   //*** put value in ans part\\n                 i++;                  \\n             }\\n               j++;\\n           }\\n\\n        return i;\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\n  if(nums.size()<=1)return 1;\\n\\n           int i  = 1;  //**** next index in ans part \\n           int j = 1;   //*** index to find unique\\n\\n           while(j<nums.size()){\\n             if(nums[j]!=nums[j-1]){  //** whenever a change is seen(means new value occurs)\\n                 nums[i] = nums[j];   //*** put value in ans part\\n                 i++;                  \\n             }\\n               j++;\\n           }\\n\\n        return i;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2801717,
                "title": "typescript-two-pointers",
                "content": "# Complexity\\n- Time complexity: $$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: $$O(1)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nfunction removeDuplicates(nums: number[]): number {\\n    if(nums.length === 1) return 1\\n\\n    let p2 = 0\\n    let p1 = 0\\n\\n    while(p2 < nums.length) {\\n        if(nums[p1] < nums[p2]) {\\n            nums[p1+1] = nums[p2]\\n            p1++\\n        }\\n        p2++\\n    }\\n    return p1 + 1\\n};\\n```",
                "solutionTags": [
                    "TypeScript"
                ],
                "code": "```\\nfunction removeDuplicates(nums: number[]): number {\\n    if(nums.length === 1) return 1\\n\\n    let p2 = 0\\n    let p1 = 0\\n\\n    while(p2 < nums.length) {\\n        if(nums[p1] < nums[p2]) {\\n            nums[p1+1] = nums[p2]\\n            p1++\\n        }\\n        p2++\\n    }\\n    return p1 + 1\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2420774,
                "title": "3-simple-steps-in-linked-list-too-without-using-if-else",
                "content": "# 3 steps:\\n\\n- **Save** the current value\\n- **Skip** the all equal values `consecutively` and `count` how many times we saw equal value to saved on the way.\\n- **Assign** the saved value in **step 1** to the place pointed by `i`\\n\\n> The above algorithm is a generic algorithm for any question asking for **Removal of elements from a sorted array** or **even for a Linked List but in linked list we use sentinal nodes**\\n\\nTime - O(`n`)\\nSpace - O(`1`)\\n\\nQ1 - \\n\\n# Java\\n    public int removeDuplicates(int[] nums) {\\n        int n= nums.length,i=0,j=0;\\n        while(j<n){\\n            int save= nums[j];\\n            for(;j<n && nums[j]==save;j++);\\n            nums[i++]=save;\\n        }\\n        return i;\\n    }\\n# C++\\n    int removeDuplicates(vector<int>& nums) {\\n        int n= size(nums),i=0,j=0;\\n        while(j<n){\\n            int save= nums[j];\\n            for(;j<n && nums[j]==save;j++);\\n            nums[i++]=save;\\n        }\\n        return i;\\n    }\\n\\t\\n\\n# Q2-> [83. Remove Duplicates from Sorted List](https://leetcode.com/problems/remove-duplicates-from-sorted-list/)\\n\\n# C++\\n\\n    class Solution {\\n    public:\\n    ListNode* deleteDuplicates(ListNode* head) {\\n        ListNode *dummy= new ListNode(0);\\n        ListNode *ptr= dummy , *q=head;\\n        while(q){\\n            ListNode* node=q;  \\n            while(q and q->val==node->val) q=q->next;\\n            ptr->next= node;\\n            ptr=ptr->next;\\n        }\\n        ptr->next=0;\\n        return dummy->next;\\n    }\\n    };\\n\\t\\n**Type 2 -> When we have to append nodes following a particular count**\\n   \\n# Q1 -> [80. Remove Duplicates from Sorted Array II](https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/)\\n   \\n    \\n    class Solution {\\n    public:\\n    int removeDuplicates(vector<int>& nums) {\\n        int n= size(nums),i=0,j=0;\\n        while(j<n){\\n           int save= nums[j],cnt=0;\\n           for(;j<n && nums[j]==save;j++,cnt++);\\n\\t\\t   nums[i++]=save;\\n           if(cnt>1) nums[i++]= save;\\n        }\\n        return i;\\n    }\\n    };\\n\\t   \\n# Q2 -> [82. Remove Duplicates from Sorted List II](https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/)\\n\\n    class Solution {\\n    public:\\n    ListNode* deleteDuplicates(ListNode* head){\\n        ListNode *dummy= new ListNode(0);\\n        ListNode *res= dummy; \\n        for(ListNode* ptr=head;ptr;){\\n            int value= ptr->val;\\n            ListNode* node= ptr;\\n            int cnt=0;\\n            while(ptr and ptr->val==value) cnt++, ptr=ptr->next;\\n            if(cnt==1) res->next=node,res=res->next;\\n        }\\n        res->next=0;\\n        return dummy->next;\\n    }\\n\\t};\\n\\n**YOU CAN SEE ALL OF THEM ARE SAME in just three lines wihout if-else.**\\n\\n**Please upvote if you like**   (\\u2741\\xB4\\u25E1`\\u2741)",
                "solutionTags": [
                    "Java",
                    "C",
                    "Two Pointers"
                ],
                "code": "class Solution {\\n    public:\\n    ListNode* deleteDuplicates(ListNode* head) {\\n        ListNode *dummy= new ListNode(0);\\n        ListNode *ptr= dummy , *q=head;\\n        while(q){\\n            ListNode* node=q;  \\n            while(q and q->val==node->val) q=q->next;\\n            ptr->next= node;\\n            ptr=ptr->next;\\n        }",
                "codeTag": "Java"
            },
            {
                "id": 1953405,
                "title": "kotlin-two-pointer",
                "content": "#### Algorithm: Two Pointer\\n\\n1. Have a counter set to zero \\n2. Iterate through the array starting from index 1 \\n3. When they are equal continue iterating \\n4. When they are not equal \\n5. Increment the counter by one\\n6. Assign the value of arr in index of i to arr in index of the counter\\n\\nTime & Space Complx\\nTC: O(n) We need to iterate at most the end of the array\\nSP: O(1) We are not allocating extra spaces\\n```\\nclass Solution {\\n    fun removeDuplicates(nums: IntArray): Int {\\n        private var counter = 0\\n        \\n        for(i in 1 until nums.size) {\\n            if(nums[counter] != nums[i]) {\\n                counter++\\n                nums[counter] = nums[i]\\n            }\\n        }\\n        return counter + 1\\n    }\\n}\\n\\n```\\n",
                "solutionTags": [
                    "Kotlin",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution {\\n    fun removeDuplicates(nums: IntArray): Int {\\n        private var counter = 0\\n        \\n        for(i in 1 until nums.size) {\\n            if(nums[counter] != nums[i]) {\\n                counter++\\n                nums[counter] = nums[i]\\n            }\\n        }\\n        return counter + 1\\n    }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1910449,
                "title": "my-easy-in-place-solution-with-constant-memory-and-linear-time-complexity",
                "content": "```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        check = 0\\n        for i in range(1, len(nums)):\\n            if nums[check] != nums[i]:\\n                check+=1\\n                nums[check] = nums[i]\\n        return check+1\\n```\\n**Intution:**\\nSet a pointer \"check\" such that it points to the start of given list.\\nItertate through the given list using pointer \\'i\\'.\\nIf the value at pointer \"check\" is not equal to value at pointer \\'i\\' in list, then simply increment the \"check\" pointer by 1 and assign the value at ith position of list to the check th position of the list.\\nReturn the answer as check+1.\\n**Complexity Analysis:**\\n\\nTime Complexity:\\nO(n) [Linear]\\n\\nSpace Complexity:\\nO(1) [Constant]\\n\\n**PLEASE UPVOTE FOR MOTIVATING ME TO CONTINUE COMMUNITY SUPPORT**",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        check = 0\\n        for i in range(1, len(nums)):\\n            if nums[check] != nums[i]:\\n                check+=1\\n                nums[check] = nums[i]\\n        return check+1\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1890576,
                "title": "100-fastest-typescript-solution",
                "content": "```\\nfunction removeDuplicates(nums: number[]): number {\\n  for (let i = 0; i < nums.length; i++) {\\n      if (nums[i + 1] === nums[i]) { nums.splice(i, 1); i-- }\\n  }\\n\\n  return nums.length\\n}\\n```\\n\\nLet me know in comments if you have any doubts. I will be happy to answer.\\n\\nPlease upvote if you found the solution useful.",
                "solutionTags": [
                    "JavaScript",
                    "TypeScript"
                ],
                "code": "```\\nfunction removeDuplicates(nums: number[]): number {\\n  for (let i = 0; i < nums.length; i++) {\\n      if (nums[i + 1] === nums[i]) { nums.splice(i, 1); i-- }\\n  }\\n\\n  return nums.length\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1332732,
                "title": "c-simple-solution-with-foreach",
                "content": "```\\n    public int RemoveDuplicates( int[] nums ) \\n    {\\n        var count = ( nums.Length == 0 ? 0 : 1 );\\n        \\n        foreach( var num in nums )\\n            if ( nums[count-1] < num )\\n                nums[count++] = num;\\n                \\n        return count;\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\n    public int RemoveDuplicates( int[] nums ) \\n    {\\n        var count = ( nums.Length == 0 ? 0 : 1 );\\n        \\n        foreach( var num in nums )\\n            if ( nums[count-1] < num )\\n                nums[count++] = num;\\n                \\n        return count;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 947494,
                "title": "python-simple-solution",
                "content": "```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        i=0\\n        for j in range(1,len(nums)):\\n            if nums[j]!=nums[i]:\\n                i+=1\\n                nums[i]=nums[j]\\n        return i+1\\n\\n```\\n",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        i=0\\n        for j in range(1,len(nums)):\\n            if nums[j]!=nums[i]:\\n                i+=1\\n                nums[i]=nums[j]\\n        return i+1\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 157959,
                "title": "set-having-weird-results",
                "content": "```\\n    let arr = new Set(nums);\\n    nums = [...arr];\\n    return nums.length;\\n```\\n\\nThis when i console log nums it gives be back the valid array, but for some reason when i run through the solution it keeps telling me my array is [1,1] even though console logging has it has [1,2] Any idea why this may be happening?",
                "solutionTags": [],
                "code": "```\\n    let arr = new Set(nums);\\n    nums = [...arr];\\n    return nums.length;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 12049,
                "title": "1ms-java-solution-o-n-time-o-1-space",
                "content": "    public int removeDuplicates(int[] nums) \\n    {\\n        if (nums.length<2)\\n            return nums.length;\\n                \\n        int swapped = 1;\\n        \\n        for (int i=1; i<nums.length;i++)\\n            if(nums[i-1]<nums[i])\\n            {\\n                nums[swapped] = nums[i];\\n                swapped++;\\n            }\\n        \\n        return swapped;\\n    }",
                "solutionTags": [],
                "code": "    public int removeDuplicates(int[] nums) \\n    {\\n        if (nums.length<2)\\n            return nums.length;\\n                \\n        int swapped = 1;\\n        \\n        for (int i=1; i<nums.length;i++)\\n            if(nums[i-1]<nums[i])\\n            {\\n                nums[swapped] = nums[i];\\n                swapped++;\\n            }\\n        \\n        return swapped;\\n    }",
                "codeTag": "Unknown"
            },
            {
                "id": 2801928,
                "title": "optimized-and-fast-solution",
                "content": "```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        n=len(nums)\\n        if n == 0 or n == 1:\\n            return n\\n        j = 1\\n        for i in range(1, n):\\n            if nums[i] != nums[i-1]:\\n                nums[j] = nums[i]\\n                j += 1\\n        return j\\n```",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        n=len(nums)\\n        if n == 0 or n == 1:\\n            return n\\n        j = 1\\n        for i in range(1, n):\\n            if nums[i] != nums[i-1]:\\n                nums[j] = nums[i]\\n                j += 1\\n        return j\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2801900,
                "title": "python-using-sorting",
                "content": "\\n        x=0\\n        l=len(nums)\\n        while x<l-1:\\n            if nums[x]==nums[x+1]:\\n                nums.remove(nums[x+1])\\n            else:\\n                x+=1\\n            l=len(nums)\\n        return len(nums)",
                "solutionTags": [
                    "Python",
                    "Sorting"
                ],
                "code": "\\n        x=0\\n        l=len(nums)\\n        while x<l-1:\\n            if nums[x]==nums[x+1]:\\n                nums.remove(nums[x+1])\\n            else:\\n                x+=1\\n            l=len(nums)\\n        return len(nums)",
                "codeTag": "Unknown"
            },
            {
                "id": 2801875,
                "title": "easy-python-solution",
                "content": "```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        if len(nums)==1:\\n            return 1\\n        x=nums[0]\\n        i=0\\n        while i<len(nums)-1:\\n            if x==nums[1+i]:\\n                del nums[1+i]\\n            else:\\n                x=nums[1+i]\\n                i+=1\\n        return i+1\\n```",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        if len(nums)==1:\\n            return 1\\n        x=nums[0]\\n        i=0\\n        while i<len(nums)-1:\\n            if x==nums[1+i]:\\n                del nums[1+i]\\n            else:\\n                x=nums[1+i]\\n                i+=1\\n        return i+1\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1992779,
                "title": "4-lines-of-code-fast-and-easy-solution",
                "content": "The idea is really simple. It is just a two pointers solution where left advances only when a value is encountered for the first time, while right scans the whole array.\\nAt the end, left index will point to the last unique element and I add 1 to obtain the length of the result (as per description we can ignore remaining portion of the array).\\n\\nO(n-1) time complexity because I am starting the for cycle from the second element till the end.\\n\\n```\\nvar removeDuplicates = function(nums) {\\n    let left = 0;    \\n    for(let right=1; right<nums.length; right++)\\n        if(nums[left] != nums[right]) nums[++left] = nums[right];    \\n    return left+1;\\n};\\n```",
                "solutionTags": [
                    "JavaScript",
                    "Two Pointers"
                ],
                "code": "```\\nvar removeDuplicates = function(nums) {\\n    let left = 0;    \\n    for(let right=1; right<nums.length; right++)\\n        if(nums[left] != nums[right]) nums[++left] = nums[right];    \\n    return left+1;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1525905,
                "title": "python-8-lines",
                "content": "```\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        \\n        if not nums:\\n            return 0\\n        \\n        last = 0\\n        for num in nums:\\n            if num > nums[last]:\\n                last += 1\\n                nums[last] = num                \\n        return last + 1\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        \\n        if not nums:\\n            return 0\\n        \\n        last = 0\\n        for num in nums:\\n            if num > nums[last]:\\n                last += 1\\n                nums[last] = num                \\n        return last + 1\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1404774,
                "title": "js-easy-splice",
                "content": "```js\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nfunction removeDuplicates(nums) {\\n  for (let i = 0; i < nums.length; i++) {\\n    nums.splice(i, nums.lastIndexOf(nums[i]) - i);\\n  }\\n\\n  return nums.length;\\n}\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```js\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nfunction removeDuplicates(nums) {\\n  for (let i = 0; i < nums.length; i++) {\\n    nums.splice(i, nums.lastIndexOf(nums[i]) - i);\\n  }\\n\\n  return nums.length;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1332436,
                "title": "one-liner-c-using-stl-rarest-and-fastest-solution",
                "content": "This is a very unique STL Function that I came to know and so is it\\'s name xD, please upvote if you did not know this function! :)\\n```\\nint removeDuplicates(vector<int>& nums) {\\n        nums.erase(unique(nums.begin(),nums.end()),nums.end());\\n        return nums.size();\\n    }\\n```",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nint removeDuplicates(vector<int>& nums) {\\n        nums.erase(unique(nums.begin(),nums.end()),nums.end());\\n        return nums.size();\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 942382,
                "title": "simple-o-n-solution-with-explanation-in-go",
                "content": "Code\\n====\\n\\n```go\\nfunc removeDuplicates(nums []int) int {\\n\\tif len(nums) <= 1 {\\n\\t\\treturn 1\\n\\t}\\n\\n\\tslow := 0\\n\\tfast := 1\\n\\tn := len(nums)\\n\\n\\tfor fast < n {\\n\\t\\tif nums[fast] == nums[slow] {\\n\\t\\t\\tfast++\\n\\t\\t} else {\\n\\t\\t\\tslow++\\n\\t\\t\\tnums[slow] = nums[fast]\\n\\t\\t}\\n\\t}\\n\\n\\treturn slow + 1\\n}\\n```\\n\\nSolution in mind\\n================\\n\\n-\\tMake use of 2 pointers, a fast and slow moving pointer. Initialise fast to 1 and slow to 0.\\n\\n-\\tWhile fast has not reached the end of array, check if the elements at index fast and slow are same, if yes, move fast forward by 1 place.\\n\\n-\\tIf not, copy the non duplicate element into the position after slow.\\n\\n-\\tOnce fast reaches the end of array, all unique elements will be stored inside the first \"slow\" number of elements in the array.\\n",
                "solutionTags": [
                    "Go"
                ],
                "code": "```go\\nfunc removeDuplicates(nums []int) int {\\n\\tif len(nums) <= 1 {\\n\\t\\treturn 1\\n\\t}\\n\\n\\tslow := 0\\n\\tfast := 1\\n\\tn := len(nums)\\n\\n\\tfor fast < n {\\n\\t\\tif nums[fast] == nums[slow] {\\n\\t\\t\\tfast++\\n\\t\\t} else {\\n\\t\\t\\tslow++\\n\\t\\t\\tnums[slow] = nums[fast]\\n\\t\\t}\\n\\t}\\n\\n\\treturn slow + 1\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 397474,
                "title": "rust-dedup",
                "content": "Most of the solutions were hand-made. They are pretty good. \\nThe std has also provide its own solution in std::vec which was \\'dedup\\'. See the source code for detail implementation from std\\nhttps://doc.rust-lang.org/src/alloc/vec.rs.html#1619-1621\\n\\n```rust\\nimpl Solution {\\n    pub fn remove_duplicates(nums: &mut Vec<i32>) -> i32 {\\n      \\n        nums.dedup();\\n        nums.len() as i32\\n    }\\n}\\n```",
                "solutionTags": [],
                "code": "```rust\\nimpl Solution {\\n    pub fn remove_duplicates(nums: &mut Vec<i32>) -> i32 {\\n      \\n        nums.dedup();\\n        nums.len() as i32\\n    }\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 12033,
                "title": "javascript-inplace-solution",
                "content": "    var removeDuplicates = function (nums) {\\n        var i = 0;\\n        nums.forEach(function (elem) {\\n            if (elem !== nums[i]) {\\n                nums[++i] = elem;\\n            }\\n        });\\n        return nums.length && i + 1;\\n    };",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "    var removeDuplicates = function (nums) {\\n        var i = 0;\\n        nums.forEach(function (elem) {\\n            if (elem !== nums[i]) {\\n                nums[++i] = elem;\\n            }\\n        });\\n        return nums.length && i + 1;\\n    };",
                "codeTag": "Unknown"
            },
            {
                "id": 12123,
                "title": "my-accepted-python-code-via-while-loop",
                "content": "    class Solution:\\n    # @param a list of integers\\n    # @return an integer\\n    \\n    def removeDuplicates(self, A):\\n        if not A:\\n            return 0\\n        else:\\n            ii,jj=1,1\\n            while jj<len(A):\\n                if A[ii-1]!=A[jj]:\\n                    A[ii]=A[jj]\\n                    ii+=1\\n                jj+=1\\n            return ii\\n\\nthe code use a while loop with two indexes ii and jj. jj went through all elements in A and ii is used to record non-duplicated elements in A. Any comments would be appreciated",
                "solutionTags": [
                    "Python"
                ],
                "code": "    class Solution:\\n    # @param a list of integers\\n    # @return an integer\\n    \\n    def removeDuplicates(self, A):\\n        if not A:\\n            return 0\\n        else:\\n            ii,jj=1,1\\n            while jj<len(A):\\n                if A[ii-1]!=A[jj]:\\n                    A[ii]=A[jj]\\n                    ii+=1\\n                jj+=1\\n            return ii\\n\\nthe code use a while loop with two indexes ii and jj. jj went through all elements in A and ii is used to record non-duplicated elements in A. Any comments would be appreciated",
                "codeTag": "Java"
            },
            {
                "id": 3675352,
                "title": "easiest-method-by-python-3-language-with-80-beats-and-most-recomended-solution-100",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        ans = 1\\n        for i in range(1, len(nums)):\\n            if nums[i] != nums[i - 1]: \\n                nums[ans] = nums[i] \\n                ans += 1\\n        return ans\\n\\n\\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        ans = 1\\n        for i in range(1, len(nums)):\\n            if nums[i] != nums[i - 1]: \\n                nums[ans] = nums[i] \\n                ans += 1\\n        return ans\\n\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3497179,
                "title": "easiest-solution-c-java-python-javascript-typescript",
                "content": "I think it won\\'t need any explanation. However, if you still have any questions, feel free to ask in comments.\\n\\nTC: O(n) \\nSC: O(1)\\n\\nC++\\n\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int ans = 1;\\n        for(int i = 1; i < size(nums); ++i)\\n            if(nums[i] != nums[i - 1])  {  \\n                nums[ans] = nums[i]; \\n                ++ans; \\n            }\\n        return ans;\\n    }\\n};\\n```\\n\\nJava\\n\\n```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int ans = 1;\\n        for(int i = 1; i < nums.length; ++i)\\n            if(nums[i] != nums[i - 1])  {  \\n                nums[ans] = nums[i]; \\n                ++ans; \\n            }\\n        return ans;\\n    }\\n}\\n```\\n\\nPython\\n\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        ans = 1\\n        for i in range(1, len(nums)):\\n            if nums[i] != nums[i - 1]: \\n                nums[ans] = nums[i] \\n                ans += 1\\n        return ans\\n```\\n\\nJavaScript\\n\\n```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar removeDuplicates = function(nums) {\\n    let ans = 1;\\n    for(let i = 1; i < nums.length; ++i)\\n        if(nums[i] != nums[i - 1])  {  \\n            nums[ans] = nums[i]; \\n            ++ans; \\n        }\\n    return ans;\\n};\\n```\\n\\nTypeScript\\n\\n```\\nfunction removeDuplicates(nums: number[]): number {\\n    let ans: number = 1;\\n    for(let i = 1; i < nums.length; ++i)\\n        if(nums[i] != nums[i - 1])  {  \\n            nums[ans] = nums[i]; \\n            ++ans; \\n        }\\n    return ans;\\n};\\n```",
                "solutionTags": [
                    "Java",
                    "Python",
                    "Python3",
                    "C",
                    "JavaScript",
                    "Array"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int ans = 1;\\n        for(int i = 1; i < size(nums); ++i)\\n            if(nums[i] != nums[i - 1])  {  \\n                nums[ans] = nums[i]; \\n                ++ans; \\n            }\\n        return ans;\\n    }\\n};\\n```\n```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int ans = 1;\\n        for(int i = 1; i < nums.length; ++i)\\n            if(nums[i] != nums[i - 1])  {  \\n                nums[ans] = nums[i]; \\n                ++ans; \\n            }\\n        return ans;\\n    }\\n}\\n```\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        ans = 1\\n        for i in range(1, len(nums)):\\n            if nums[i] != nums[i - 1]: \\n                nums[ans] = nums[i] \\n                ans += 1\\n        return ans\\n```\n```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar removeDuplicates = function(nums) {\\n    let ans = 1;\\n    for(let i = 1; i < nums.length; ++i)\\n        if(nums[i] != nums[i - 1])  {  \\n            nums[ans] = nums[i]; \\n            ++ans; \\n        }\\n    return ans;\\n};\\n```\n```\\nfunction removeDuplicates(nums: number[]): number {\\n    let ans: number = 1;\\n    for(let i = 1; i < nums.length; ++i)\\n        if(nums[i] != nums[i - 1])  {  \\n            nums[ans] = nums[i]; \\n            ++ans; \\n        }\\n    return ans;\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2939797,
                "title": "simple-javascript-solution",
                "content": "loop through array to find duplicate and if we find duplicate will remove it.\\n\\n# Code\\n```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nconst removeDuplicates = function (nums) {\\n for(let i=0;i<nums.length;){\\n     if(nums[i] ===nums[i+1]){\\n         nums.splice(i,1)\\n     }else{\\n         i++\\n     }\\n }\\n};\\n\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nconst removeDuplicates = function (nums) {\\n for(let i=0;i<nums.length;){\\n     if(nums[i] ===nums[i+1]){\\n         nums.splice(i,1)\\n     }else{\\n         i++\\n     }\\n }\\n};\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2826055,
                "title": "easy-java-solution-using-set-and-arraylist-beats-99-75",
                "content": "# PLEASE UPVOTE IF YOU LIKE IT\\n\\n# Approach\\nPutting elemetns in **SET** so that duplicates can be removed, then filling the array with ****Zeros**** to make the original array empty, after than putting those Set values in ****ArrayList****, after than **sorting** the list in Accending order because the result will be in accending order,now putting the arraylist value in Original array again.\\n\\n# Code\\n```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n         HashSet<Integer> set = new HashSet<>();\\n\\n        for (int num : nums) set.add(num);\\n        Arrays.fill(nums,0);\\n        ArrayList<Integer> list = new ArrayList<>(set);\\n        Collections.sort(list);\\n        for(int i = 0; i < list.size(); i++){\\n            nums[i] = list.get(i);\\n        }\\n        return set.size();\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n         HashSet<Integer> set = new HashSet<>();\\n\\n        for (int num : nums) set.add(num);\\n        Arrays.fill(nums,0);\\n        ArrayList<Integer> list = new ArrayList<>(set);\\n        Collections.sort(list);\\n        for(int i = 0; i < list.size(); i++){\\n            nums[i] = list.get(i);\\n        }\\n        return set.size();\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2803320,
                "title": "c-stl-one-liner-and-hand-rolled-two-pointer-solution-clean-code",
                "content": "# Approach 1: std::unique and std::distance\\n\\nUsing STL functions we can turn this into a one-liner.\\n\\n```cpp\\n    static int removeDuplicates(vector<int>& nums) {\\n        return distance(begin(nums), unique(begin(nums), end(nums)));\\n    }\\n```\\n\\nNote that for this problem we don\\'t need to erase the end of the vector, if we wanted that the solution would look something like this:\\n\\n```cpp\\n    static int removeDuplicates(vector<int>& nums) {\\n        nums.erase(unique(begin(nums), end(nums)), end(nums));\\n        return size(nums);\\n    }\\n```\\n\\n\\n**Complexity Analysis**\\n  * Time Complexity: $$O(n)$$\\n  * Space Complexity: $$O(1)$$\\n\\n# Approach 2: hand rolled two pointer solution\\n\\nThe check for an empty vector is strictly speaking not needed for this problem, but I\\'d add it anyway.\\n\\n```cpp\\n    static int removeDuplicates(vector<int>& nums) {\\n        if (empty(nums)) return 0;\\n\\n        int w = 1;\\n        for (int i = 1; i < size(nums); ++i)\\n            if (nums[i - 1] != nums[i]) nums[w++] = nums[i];\\n        return w;\\n    }\\n```\\n\\n**Complexity Analysis**\\n  * Time Complexity: $$O(n)$$\\n  * Space Complexity: $$O(1)$$\\n\\n_As always: Feedback, questions, and comments are welcome. Leaving an up-vote sparks joy! :)_\\n\\n**p.s. Join us on the [LeetCode The Hard Way Discord Server](https://discord.gg/hFUyVyWy2E)!**\\n\\n",
                "solutionTags": [
                    "C"
                ],
                "code": "```cpp\\n    static int removeDuplicates(vector<int>& nums) {\\n        return distance(begin(nums), unique(begin(nums), end(nums)));\\n    }\\n```\n```cpp\\n    static int removeDuplicates(vector<int>& nums) {\\n        nums.erase(unique(begin(nums), end(nums)), end(nums));\\n        return size(nums);\\n    }\\n```\n```cpp\\n    static int removeDuplicates(vector<int>& nums) {\\n        if (empty(nums)) return 0;\\n\\n        int w = 1;\\n        for (int i = 1; i < size(nums); ++i)\\n            if (nums[i - 1] != nums[i]) nums[w++] = nums[i];\\n        return w;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2801739,
                "title": "c-easy-to-follow-with-explanations-for-remove-duplicates",
                "content": "We have a sorted array and need to \\n(1) return the number of unique elements (length of array - duplicates found) as well as \\n(2) modify the original array of nums so that only the unique elements are at the front of the array for the solution tester.\\n\\nThe algorithm simply compares each value in the nums array with the last known unique number which value is stored in the int  currentVal. \\n\\nWhen we compare the next element in the array with the currentVal (last unique value we found) and they are the same then we know we have another duplicate and can change the value of this number in the nums array to 101. As per constraints no numbers in nums are greater than 100, so any number 101 or higher will end up at the end of the array when resort later.\\n\\nWe loop through nums, either changing the value of duplicates to 101 or updating the int currentVal to represent the last known  unique value in nums. \\n\\nWe keep comparing until we find a unique number at which point we update the current value we are comparing in the array as the new unique number. \\n\\nOnce loop finished we SORT the nums array and all the 101s will endup at the end of the array and are ignored by the solution tester. We also return the size of the array less the number of duplicates we counted along the way (which is the number of unique numbers in nums). \\n\\n```\\npublic class Solution {\\n    public int RemoveDuplicates(int[] nums) {\\n    int size=nums.Length;\\n    if (size<2) return nums[0];\\n    int currentVal=nums[0];\\n        int countDup=0;\\n        for (int i=0;i<size-1;i++)\\n        {\\n            if (currentVal == nums[i+1])\\n                {\\n                  // match\\n                    nums[i+1]=101; // will push it out of array when resorted\\n                    countDup++;\\n                }\\n                else \\n                {\\n                    currentVal=nums[i+1];\\n                }\\n        }\\n        Array.Sort(nums);\\n        return size-countDup;\\n        \\n    }\\n}",
                "solutionTags": [
                    "Array",
                    "Sorting"
                ],
                "code": "class Solution {\\n    public int RemoveDuplicates(int[] nums) {\\n    int size=nums.Length;\\n    if (size<2) return nums[0];\\n    int currentVal=nums[0];\\n        int countDup=0;\\n        for (int i=0;i<size-1;i++)\\n        {\\n            if (currentVal == nums[i+1])\\n                {\\n                  // match\\n                    nums[i+1]=101; // will push it out of array when resorted\\n                    countDup++;\\n                }",
                "codeTag": "Java"
            },
            {
                "id": 2688808,
                "title": "remove-duplicates-from-sorted-array-time-o-n-space-o-1-solution-in-c-explained",
                "content": "Since, it\\'s given in the problem that the array is sorted, we can use that to our advantage. Remember that when an array is sorted, all the duplicate elements are adjacent to each other.\\n\\nNow, we solve the problem similarly to how we would solve frequency of each unique element in the array. Let\\'s see how it works:\\n\\nAssume an example array `arr = [1, 1, 2, 3, 3, 3, 3]`\\n\\nNow, create a variable called `curr_value` to store the value whose occurrences you\\'re trying to count at this particluar moment. Initialise this variable `curr_value` to the first element of the array (which is 1 in this case). Create another variable `insert_ptr` to represent the index at which each unique element is to be inserted (updated) in the given array. Initialise it with 0 since we start updating or inserting unique elements from 0th index.\\n\\n                                      arr = [1, 1, 2, 3, 3, 3, 3]\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t         |\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   curr_value\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\nThen, start iterating the array `arr` from index 1 and check if the value at this index is equal to the `current_value`.\\n\\n                                           traverse_ptr\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t            |\\n                                      arr = [1, 1, 2, 3, 3, 3, 3]\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t         |\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   curr_value\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   \\nif `curr_value` is equal `arr[traverse_ptr]`, then increment `traverse_ptr`.\\n\\n**Note: You don\\'t need to increase count because we are not concerned with the frequency of the elements. We only need the unique elements. Just iterate the index value.**\\n\\nAnd, if the `curr_value != arr[traverse_ptr]`, then, we have to place the `curr_value` in the `insert_ptr` index and increment it\\'s value.\\n\\n\\nThe simulation of the above process on the given example array would look like:\\n\\nstep 1:\\n\\n                                           traverse_ptr\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t            |\\n                                      arr = [1, 1, 2, 3, 3, 3, 3]\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t         |\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   curr_value\\nstep 2: Since, `curr_value == arr[traverse_ptr]`, increment `traverse_ptr`\\'s value\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t           traverse_ptr\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t               |\\n                                      arr = [1, 1, 2, 3, 3, 3, 3]\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t         |\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   curr_value\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   \\nstep 3: Now, since `curr_value != arr[traverse_ptr]`, we found the first unique element (`curr_value`). Now insert this value at `insert_ptr` index and increment `insert_ptr`. Update the `curr_value` variable with the new element `arr[traverse_ptr]`. Now, `insert_ptr` has a value of 1. The updated array `arr` would look like:\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t            traverse_ptr\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t                  |\\n                                      arr = [1, 1, 2, 3, 3, 3, 3]\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t               |\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t         curr_value\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t \\nstep 4: Since, `curr_value != arr[traverse_ptr]` insert the `curr_value` in `insert_ptr` index and increment `insert_ptr`. Update `curr_value` with the new element. The updated array `arr` would look like:\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t              traverse_ptr\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t                     |\\n                                      arr = [1, 1, 2, 3, 3, 3, 3]\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t                  |\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t            curr_value\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\nstep 5: Repeat this process and you\\'ll observe that we traverse the whole array.\\n\\n**Important: Did you observe how in previous steps the value got inserted only when we encounter a new element (`curr_value != arr[traverse_ptr]`). But for the last unique element in the given array, we don\\'t have such an element. So, after coming out of the loop, we still haven\\'t updated/inserted the last unique element into it\\'s correct place. So we just write one more line of code:\\n`arr[insert_ptr] = curr_value`**\\n\\n****\\n\\n_**Tip**: If the above explanation seems a little un-intuitive or confusing, I\\'d suggest you to take an array of your choice, follow the steps mentioned above by hand on a piece of paper and see what happens after each step. This should make it very clear :)_\\n\\n****\\n\\n\\nImplementation of the above algorithm in C++:\\n\\n```cpp\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& numbers) {\\n        int insert_ptr   {0};\\n        int traverse_ptr {1};\\n        int curr_value   {numbers[0]};\\n        \\n        while (traverse_ptr < (int)numbers.size()) {\\n\\t\\t    /* when you encounter a new number: \\n\\t\\t\\t   1) insert the old value in it\\'s correct place in array\\n\\t\\t\\t   2) update the curr_value with the new value\\n\\t\\t\\t   3) move the insert_ptr to next index\\n\\t\\t\\t*/\\n            if (curr_value != numbers[traverse_ptr]) {\\n                numbers[insert_ptr] = curr_value;\\n                curr_value = numbers[traverse_ptr];\\n\\t\\t\\t\\t++insert_ptr;\\n            }\\n            ++traverse_ptr;\\n        }\\n\\t\\t\\n        // inserting the last unique element into the array\\n        numbers[insert_ptr] = curr_value;\\n        \\n\\t\\t// since insert_ptr is an index, the no. of elements till that index would be insert_ptr + 1\\n        return insert_ptr + 1;\\n    }\\n};\\n```\\n\\n\\n****\\n\\nExtra: If you want to optimise this code even more for speed, you can:\\n1. Replace\\n```cpp\\nif (curr_value != numbers[traverse_ptr])\\n```\\nwith\\n```cpp\\nif (curr_value ^ numbers[traverse_ptr])\\n```\\n2. Instead of incrementing `insert_ptr` in a separate line, just increment it as:\\n\\n```cpp\\nnumbers[insert_ptr++] = curr_value;\\n```\\n\\nthis will increment the value of `insert_ptr` after assigning `curr_val` to the current value of `insert_ptr`. So you can safely remove\\n```cpp\\n++insert_ptr;\\n```\\n\\n****\\n****\\nI hope this article was helpful. Thanks for reading :)",
                "solutionTags": [
                    "C",
                    "Array"
                ],
                "code": "```cpp\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& numbers) {\\n        int insert_ptr   {0};\\n        int traverse_ptr {1};\\n        int curr_value   {numbers[0]};\\n        \\n        while (traverse_ptr < (int)numbers.size()) {\\n\\t\\t    /* when you encounter a new number: \\n\\t\\t\\t   1) insert the old value in it\\'s correct place in array\\n\\t\\t\\t   2) update the curr_value with the new value\\n\\t\\t\\t   3) move the insert_ptr to next index\\n\\t\\t\\t*/\\n            if (curr_value != numbers[traverse_ptr]) {\\n                numbers[insert_ptr] = curr_value;\\n                curr_value = numbers[traverse_ptr];\\n\\t\\t\\t\\t++insert_ptr;\\n            }\\n            ++traverse_ptr;\\n        }\\n\\t\\t\\n        // inserting the last unique element into the array\\n        numbers[insert_ptr] = curr_value;\\n        \\n\\t\\t// since insert_ptr is an index, the no. of elements till that index would be insert_ptr + 1\\n        return insert_ptr + 1;\\n    }\\n};\\n```\n```cpp\\nif (curr_value != numbers[traverse_ptr])\\n```\n```cpp\\nif (curr_value ^ numbers[traverse_ptr])\\n```\n```cpp\\nnumbers[insert_ptr++] = curr_value;\\n```\n```cpp\\n++insert_ptr;\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2659227,
                "title": "python-remove-duplicate-three-ways-very-easy",
                "content": "### Python Remove Duplicate, Three ways\\uFF0Cvery easy\\n\\n- Fist, Python trick, and the most easy one \\uFF1Ause python function \"set()\" to remove duplicate, but it\\u2018s disorder after, so we need to use \"sort()\" to sort it again. \\nThis is not a good way, because it use the sort that make the time complexity > O(n), but it\\'s still working well because Python\\'s \"sort()\" function is code by c, so it\\'s very fast\\n\\t\\n        mlist = list(set(nums))\\n        mlist.sort()\\n        for i in range(len(mlist)):\\n            nums[i] = mlist[i] \\n        return len(mlist)\\n    \\n        \\n-    Second, Just loop the list from beginning to end, and compare two adjacent numbers, if they are the same, then delete one. The the time complexity is O(n).\\nTip\\uFF1Awhen we wanna delete a element of list in Python, if we know the index,  use \"pop(index)\" is better than \"remove (element)\", because pop() time complexity is O(1) and the remove () time complexity is O(n) \\n\\t\\t\\n\\t\\t    if len(nums) == 1: return 1\\n\\t\\t\\t\\n\\t\\t\\ti = 0\\n\\t\\t\\twhile i < len(nums)-1:\\n\\t\\t\\t\\tif nums[i] == nums[i+1]:                \\n\\t\\t\\t\\t\\tnums.pop(i+1)  \\n\\t\\t\\t\\telse:    \\n\\t\\t\\t\\t\\ti += 1\\n\\t\\t\\treturn i + 1\\n        \\n        \\n- Trird , double pointer, the most clear\\uFF1AWhen i and j point to the same value, fix pointer i, move pointer j, until the nums[i] != nums[j]. Then assign the value pointed by j to the next element of i. When j loop all the elements of the list, It\\'s finish.\\n\\n        if len(nums) == 1: return 1\\n   \\n        i = 0\\n        j = i + 1\\n\\t\\t\\n        while j < len(nums):\\n            if nums[i] == nums[j]:   \\n                j += 1\\n            else:\\n                i = i + 1\\n                nums[i] = nums[j] \\n                j += 1\\n\\t\\t\\t\\t\\n        return i + 1\\n\\t\\t\\nIf you have any questions or have any better ways, please let me know.",
                "solutionTags": [
                    "Python"
                ],
                "code": "### Python Remove Duplicate, Three ways\\uFF0Cvery easy\\n\\n- Fist, Python trick, and the most easy one \\uFF1Ause python function \"set()\" to remove duplicate, but it\\u2018s disorder after, so we need to use \"sort()\" to sort it again. \\nThis is not a good way, because it use the sort that make the time complexity > O(n), but it\\'s still working well because Python\\'s \"sort()\" function is code by c, so it\\'s very fast\\n\\t\\n        mlist = list(set(nums))\\n        mlist.sort()\\n        for i in range(len(mlist)):\\n            nums[i] = mlist[i] \\n        return len(mlist)\\n    \\n        \\n-    Second, Just loop the list from beginning to end, and compare two adjacent numbers, if they are the same, then delete one. The the time complexity is O(n).\\nTip\\uFF1Awhen we wanna delete a element of list in Python, if we know the index,  use \"pop(index)\" is better than \"remove (element)\", because pop() time complexity is O(1) and the remove () time complexity is O(n) \\n\\t\\t\\n\\t\\t    if len(nums) == 1: return 1\\n\\t\\t\\t\\n\\t\\t\\ti = 0\\n\\t\\t\\twhile i < len(nums)-1:\\n\\t\\t\\t\\tif nums[i] == nums[i+1]:                \\n\\t\\t\\t\\t\\tnums.pop(i+1)  \\n\\t\\t\\t\\telse:    \\n\\t\\t\\t\\t\\ti += 1\\n\\t\\t\\treturn i + 1\\n        \\n        \\n- Trird , double pointer, the most clear\\uFF1AWhen i and j point to the same value, fix pointer i, move pointer j, until the nums[i] != nums[j]. Then assign the value pointed by j to the next element of i. When j loop all the elements of the list, It\\'s finish.\\n\\n        if len(nums) == 1: return 1\\n   \\n        i = 0\\n        j = i + 1\\n\\t\\t\\n        while j < len(nums):\\n            if nums[i] == nums[j]:   \\n                j += 1\\n            else:\\n                i = i + 1\\n                nums[i] = nums[j] \\n                j += 1\\n\\t\\t\\t\\t\\n        return i + 1\\n\\t\\t\\nIf you have any questions or have any better ways, please let me know.",
                "codeTag": "Unknown"
            },
            {
                "id": 2563748,
                "title": "98-21-senior-developer-javascript-js-2022",
                "content": "```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar removeDuplicates = function(n) {\\n    \\n    let j = 0;\\n    \\n    for(let i = 0; i < n.length; i++) {\\n        \\n        if(n[i] !== n[i+1]) {    \\n            n[j++] = n[i];\\n        }\\n    };\\n    \\n    return j;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar removeDuplicates = function(n) {\\n    \\n    let j = 0;\\n    \\n    for(let i = 0; i < n.length; i++) {\\n        \\n        if(n[i] !== n[i+1]) {    \\n            n[j++] = n[i];\\n        }\\n    };\\n    \\n    return j;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2549630,
                "title": "python3-solution-with-explanation",
                "content": "nums[:] creates a shallow copy of nums.\\nA shallow copy performs a copy of the original list, but keeps the same id references from the original list. If you were to inspect the id of each object in the list they would return their unique id.\\n\\nAs we are told in the question not to use extra space, we have used slicing method [:].\\n(Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.)\\n\\nsorted(set(nums)) will return the sorted list removing the duplicates (set function is used to remove the duplicates) into the nums array only.\\n\\nCode:\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums[:] = sorted(set(nums))\\n        return len(nums)\\n```\\n\\n",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums[:] = sorted(set(nums))\\n        return len(nums)\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2360892,
                "title": "simple-solution-in-java",
                "content": "```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int arr = 0;\\n        for (int i = 0; i < nums.length; i++) {\\n            if (i < nums.length - 1 && nums[i] == nums[i + 1]) {\\n                continue;\\n            }\\n            nums[arr] = nums[i];\\n            arr++;\\n        }\\n        return arr;\\n    }\\n}\\n\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int arr = 0;\\n        for (int i = 0; i < nums.length; i++) {\\n            if (i < nums.length - 1 && nums[i] == nums[i + 1]) {\\n                continue;\\n            }\\n            nums[arr] = nums[i];\\n            arr++;\\n        }\\n        return arr;\\n    }\\n}\\n\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2185356,
                "title": "python-one-liner",
                "content": "**Two Pointer Solution**\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        p1 = 0\\n        p2 = 0\\n        while p2 < len(nums):\\n            if nums[p1] != nums[p2]:\\n                nums[p1+1] = nums[p2]\\n                p1 += 1\\n            p2 += 1\\n        return p1+1\\n```\\n\\n**One liner**\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums[:] = sorted(list(set(nums)))\\n```\\n\\nPlease upvote if it is helpful to you.",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        p1 = 0\\n        p2 = 0\\n        while p2 < len(nums):\\n            if nums[p1] != nums[p2]:\\n                nums[p1+1] = nums[p2]\\n                p1 += 1\\n            p2 += 1\\n        return p1+1\\n```\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums[:] = sorted(list(set(nums)))\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1846629,
                "title": "remove-duplicates-from-sorted-array-easy-to-understand-java-solution",
                "content": "```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        \\n        int pos=1;\\n        \\n        for(int i=0;i<nums.length-1;i++){\\n            if(nums[i]!=nums[i+1]){\\n                nums[pos++]=nums[i+1];\\n            }\\n        }\\n        return pos;\\n    }\\n}\\n```\\n\\nThe first occurence of any element will be unique, hence initialising the variable \\'pos\\' with a value of 1. The next step is to iterate the array and compare \\'i-th\\' place element with \\'i+1-th\\' place element. If they are not unique we can place the new element found at the \\'pos-th\\' index. We are incrementing \\'pos\\' so that we can place the next unique element encountered at the \\'pos+1-th\\' index from that point.\\n\\nIf we were not to move the elements in-place, another naive solution could have been to use Set collections in java as sets do not allow duplicates.",
                "solutionTags": [
                    "Java",
                    "Array",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        \\n        int pos=1;\\n        \\n        for(int i=0;i<nums.length-1;i++){\\n            if(nums[i]!=nums[i+1]){\\n                nums[pos++]=nums[i+1];\\n            }\\n        }\\n        return pos;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1721303,
                "title": "java-solution-1ms-runtime-100-correct-o-n",
                "content": "```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int left = 0, right = 1, k=0, count=0;\\n        if(nums.length==1){\\n            return 1;\\n        }\\n        if(nums.length==2 && nums[0]!=nums[1]){\\n            return 2;\\n        }\\n        if(nums.length==0)\\n            return 0;\\n        while(right<nums.length){\\n            if(nums[left]!=nums[right]){\\n                nums[k] = nums[left];\\n                k++;\\n                count++;\\n            }\\n            left++;\\n            right++;\\n        }\\n        count++;\\n        nums[k] = nums[left];\\n        return count;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int left = 0, right = 1, k=0, count=0;\\n        if(nums.length==1){\\n            return 1;\\n        }\\n        if(nums.length==2 && nums[0]!=nums[1]){\\n            return 2;\\n        }\\n        if(nums.length==0)\\n            return 0;\\n        while(right<nums.length){\\n            if(nums[left]!=nums[right]){\\n                nums[k] = nums[left];\\n                k++;\\n                count++;\\n            }\\n            left++;\\n            right++;\\n        }\\n        count++;\\n        nums[k] = nums[left];\\n        return count;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1348541,
                "title": "java-simple-0ms-and-100-faster",
                "content": "```\\n public int removeDuplicates(int[] nums) {\\n          int index = 1;\\n\\t        \\n\\t        for(int i=0;i<nums.length-1;i++)\\n\\t        {\\n\\t        \\tif(nums[i] != nums[i+1])\\n\\t        \\t\\tnums[index++] = nums[i+1];\\n\\t        }\\n\\t        \\n\\t        return index;\\n    }\\n```",
                "solutionTags": [],
                "code": "```\\n public int removeDuplicates(int[] nums) {\\n          int index = 1;\\n\\t        \\n\\t        for(int i=0;i<nums.length-1;i++)\\n\\t        {\\n\\t        \\tif(nums[i] != nums[i+1])\\n\\t        \\t\\tnums[index++] = nums[i+1];\\n\\t        }\\n\\t        \\n\\t        return index;\\n    }\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 141714,
                "title": "python3-beats-99-65-of-submissions",
                "content": "You can make the unique index do double duty as the location of the previous value.\\n\\n```    \\ndef removeDuplicates(self, nums):\\n    \"\"\"\\n    :type nums: List[int]\\n    :rtype: int\\n    \"\"\"\\n    if len(nums) < 2:\\n        return len(nums)\\n    \\n    j = 0\\n    \\n    for num in nums[1:]:\\n        if num != nums[j]:\\n            j += 1\\n            nums[j] = num\\n    return j+1\\n```",
                "solutionTags": [],
                "code": "```    \\ndef removeDuplicates(self, nums):\\n    \"\"\"\\n    :type nums: List[int]\\n    :rtype: int\\n    \"\"\"\\n    if len(nums) < 2:\\n        return len(nums)\\n    \\n    j = 0\\n    \\n    for num in nums[1:]:\\n        if num != nums[j]:\\n            j += 1\\n            nums[j] = num\\n    return j+1\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 12051,
                "title": "javascript-148ms",
                "content": "var removeDuplicates = function(nums) {\\n\\n    //two pointers, one pass\\n    var slow = 0;\\n    for (var fast = 0; fast < nums.length; fast++) {\\n        if (nums[slow] !== nums[fast]) {\\n            nums[++slow] = nums[fast];\\n        }\\n    }\\n    return slow+1;\\n};",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "var removeDuplicates = function(nums) {\\n\\n    //two pointers, one pass\\n    var slow = 0;\\n    for (var fast = 0; fast < nums.length; fast++) {\\n        if (nums[slow] !== nums[fast]) {\\n            nums[++slow] = nums[fast];\\n        }\\n    }\\n    return slow+1;\\n};",
                "codeTag": "Unknown"
            },
            {
                "id": 12112,
                "title": "my-c-o-n-solution",
                "content": "    class Solution {\\n    public:\\n        int removeDuplicates(vector<int>& nums) {\\n            if(nums.size() == 0)\\n                return 0;\\n            int i = 0,j = 1;\\n            while(j < nums.size())\\n            {\\n                if(nums[j] != nums[i])\\n                    nums[++i] = nums[j];\\n                j++;\\n            }\\n            return i + 1;\\n        }\\n    };",
                "solutionTags": [
                    "C++"
                ],
                "code": "class Solution {\\n    public:\\n        int removeDuplicates(vector<int>& nums) {\\n            if(nums.size() == 0)\\n                return 0;\\n            int i = 0,j = 1;\\n            while(j < nums.size())\\n            {\\n                if(nums[j] != nums[i])\\n                    nums[++i] = nums[j];\\n                j++;\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 12193,
                "title": "1-line-c-solution",
                "content": "Only 1 line using STL\\n\\n     return unique(A, A+n)-A;\\n\\nThe unique algorithm record the positions of the unique elements, and then remove duplicates using unique_copy(). The above code has a 41 ms time cost.\\n\\nBelow is my 33ms solution without STL.\\n\\n    class Solution {\\n    public:\\n        int removeDuplicates(int A[], int n) {\\n           int mark=1;\\n           for(int i=1;i<n;i++)\\n            {\\n                if(A[i]!=A[i-1])\\n                    A[mark++]=A[i];\\n            }\\n            return min(mark,n);\\n        }\\n    };",
                "solutionTags": [],
                "code": "class Solution {\\n    public:\\n        int removeDuplicates(int A[], int n) {\\n           int mark=1;\\n           for(int i=1;i<n;i++)\\n            {\\n                if(A[i]!=A[i-1])\\n                    A[mark++]=A[i];\\n            }",
                "codeTag": "Java"
            },
            {
                "id": 3906053,
                "title": "ts-js-98-94-naive-approach-in-o-n",
                "content": "# Intuition\\nStraight forward TS/JS Approach\\n\\n# Approach\\n1) Create a unique set of the array.\\n2) Delete the existing array.\\n3) Add unique items to existing array.\\n\\n# Complexity\\n- Time complexity:  $$O(n)$$\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:  $$O(n)$$\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nfunction removeDuplicates(nums: number[]): number {\\n    let temp = [...new Set(nums)];\\n    nums.length = 0;\\n    nums.push(...temp);\\n    return nums.length;\\n}\\n```",
                "solutionTags": [
                    "TypeScript"
                ],
                "code": "```\\nfunction removeDuplicates(nums: number[]): number {\\n    let temp = [...new Set(nums)];\\n    nums.length = 0;\\n    nums.push(...temp);\\n    return nums.length;\\n}\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3602603,
                "title": "optimized-solution-remove-duplicates-from-sorted-array",
                "content": "```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        nums.erase(unique(nums.begin(), nums.end()), nums.end());\\n        return nums.size();\\n    }\\n};\\n```\\n\\n**PLEASE UPVOTE :)**",
                "solutionTags": [
                    "C",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        nums.erase(unique(nums.begin(), nums.end()), nums.end());\\n        return nums.size();\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3592450,
                "title": "best-o-n-solution",
                "content": "# Approach\\nTwo Pointer\\n\\n# Complexity\\n- Time complexity:\\n$$O(n)$$\\n\\n- Space complexity:\\n$$O(1)$$\\n\\n# Code\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int i = 0;\\n        for (int j = 1; j < nums.size(); j++) {\\n            if (nums[i] != nums[j]) {\\n                i++;\\n                nums[i] = nums[j];\\n            }\\n        }\\n        return i + 1;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int i = 0;\\n        for (int j = 1; j < nums.size(); j++) {\\n            if (nums[i] != nums[j]) {\\n                i++;\\n                nums[i] = nums[j];\\n            }\\n        }\\n        return i + 1;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3387148,
                "title": "brute-force-and-optimal-approach-easy-to-understand-c-code",
                "content": "# Brute Force Approach -->\\n# Approach\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nWe know the set only keeps the unique elements, So we will insert all the given elements in a set, then we will put them in the array from begining and will increase the index . At last we can return Index, Because it is the number of unique values. \\n# Brute force code\\n```\\nset<int>st;\\nfor(int i=0;i<nums.size();i++){\\n    st.insert(nums[i]);\\n}\\nint idx=0;\\nfor(auto it : st){\\n    nums[idx]=it;\\n    idx++;\\n}\\nreturn idx;\\n``` \\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n##### $$O(nlogn + n)$$  (insert() takes logn time)\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n##### $$O(n)$$ (size of set might be \\'n\\')\\n# Optimal Approach -->\\nWe will use two pointer approach , where at first \\'i\\' pointer will be at first position ans \\'j\\' pointer will be at second position then we will compare both values as they are equal or not. If the values are not equal then \\n```\\nnums[i+1]=nums[j];\\ni++\\n```\\n\\n# Optimal Code\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int i=0;\\n        for(int j=1;j<nums.size();j++){\\n            if(nums[i]!=nums[j]){\\n                nums[i+1]=nums[j];\\n                i++;\\n            }\\n        }\\n        return i+1;\\n    }\\n};\\n```\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n##### $$O(n)$$  (A loop is running from \\'0\\' to \\'n\\')\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n##### $$O(1)$$ \\n\\n# Please Upvote if it was helpful \\u2B06\\uFE0F",
                "solutionTags": [
                    "C++"
                ],
                "code": "```\\nset<int>st;\\nfor(int i=0;i<nums.size();i++){\\n    st.insert(nums[i]);\\n}\\nint idx=0;\\nfor(auto it : st){\\n    nums[idx]=it;\\n    idx++;\\n}\\nreturn idx;\\n```\n```\\nnums[i+1]=nums[j];\\ni++\\n```\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int i=0;\\n        for(int j=1;j<nums.size();j++){\\n            if(nums[i]!=nums[j]){\\n                nums[i+1]=nums[j];\\n                i++;\\n            }\\n        }\\n        return i+1;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 3373559,
                "title": "simple-python-solution",
                "content": "\\n\\n# Code\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        char = set()\\n        p = 0\\n        while(p<len(nums)):\\n            if(nums[p] in char):\\n                nums.remove(nums[p])\\n            else:\\n                char.add(nums[p])\\n                p = p+1\\n                \\n        #print(nums)\\n        return len(char)\\n                \\n            \\n        \\n        \\n```",
                "solutionTags": [
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        char = set()\\n        p = 0\\n        while(p<len(nums)):\\n            if(nums[p] in char):\\n                nums.remove(nums[p])\\n            else:\\n                char.add(nums[p])\\n                p = p+1\\n                \\n        #print(nums)\\n        return len(char)\\n                \\n            \\n        \\n        \\n```",
                "codeTag": "Java"
            },
            {
                "id": 3337917,
                "title": "best-solution-for-time-complexity-used-two-pointers-method",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nBy using \"Two Pointers\" method we can achieve to faster code and that will eat less memory\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nO(N)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar removeDuplicates = function(nums) {\\n    if (nums.length === 0) return 0;\\n    \\n    let i = 0;\\n    \\n    for (let j = 1; j < nums.length; j++) {\\n        if (nums[j] !== nums[i]) {\\n            i++;\\n            nums[i] = nums[j];\\n        }\\n    }\\n    \\n    return i + 1;\\n};\\n```",
                "solutionTags": [
                    "JavaScript"
                ],
                "code": "```\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar removeDuplicates = function(nums) {\\n    if (nums.length === 0) return 0;\\n    \\n    let i = 0;\\n    \\n    for (let j = 1; j < nums.length; j++) {\\n        if (nums[j] !== nums[i]) {\\n            i++;\\n            nums[i] = nums[j];\\n        }\\n    }\\n    \\n    return i + 1;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2801967,
                "title": "beginner-friendly-easy-c",
                "content": "```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        \\n        \\n         int k=1;\\n        for(int i=1;i<nums.size();++i)\\n        {\\n            if(nums[i]!=nums[i-1])\\n            {\\n                nums[k]=nums[i];\\n                k++;\\n            }\\n            }\\n        return k;\\n    }\\n};\\n```\\n//comment your suggestion",
                "solutionTags": [
                    "C"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        \\n        \\n         int k=1;\\n        for(int i=1;i<nums.size();++i)\\n        {\\n            if(nums[i]!=nums[i-1])\\n            {\\n                nums[k]=nums[i];\\n                k++;\\n            }\\n            }\\n        return k;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2801876,
                "title": "easy-solution-two-pointer-approach",
                "content": "IF YOU LIKE THE SOLUTION \\nMAKE SURE TO UPVOTE IT !\\n\\n# Intuition\\nUSE TWO POINTER APPROACH\\n\\n# Approach\\nOne pointer for iterating through array and second one for filling the array according to the requirement .\\n\\n# Complexity\\n- Time complexity: O(N) N : length of array\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity: O(1)\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n- With Explanation\\n```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        // start with i = 0 for looping and j = 0 for filling unique numbers\\n        int j = 0;\\n        //Start iterating through given array\\n        for(int i = 0; i<nums.length; i++){\\n            int val = nums[i];\\n            // Move the while loop until curr val is repeating , just increase i variable\\n            while(i<nums.length-1 && val == nums[i+1]){\\n                i++;\\n            }\\n            // We came out from while loop it means we went through all the values and our i is at their position of val .\\n            // We simply put that value at j and move j one step a head.\\n\\n            // System.out.println(\" i : \" + i + \" j : \" + j);\\n            nums[j++] = val;\\n        }\\n        // Finally return j\\n        return j;\\n    }\\n}\\n\\n// DRY RUN \\n/* Eg. [0,0,1,1,1,2,2,3,3,4]\\n\\n init i = 0; j = 0;\\n\\n    i : 1 j : 0\\n    i : 4 j : 1\\n    i : 6 j : 2\\n    i : 8 j : 3\\n    i : 9 j : 4\\n\\n    finally j becomes 5;\\n\\n    // Output\\n    [0,1,2,3,4]\\n    */\\n\\n\\n```\\n#  Simplified Code\\n```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int i = 0, j = 0;\\n        for(i = 0;i<nums.length; i++){\\n            int val = nums[i];\\n            while(i<nums.length-1 && val == nums[i+1]){\\n                i++;\\n            }\\n            nums[j++] = val;\\n        }\\n        return j;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Array",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        // start with i = 0 for looping and j = 0 for filling unique numbers\\n        int j = 0;\\n        //Start iterating through given array\\n        for(int i = 0; i<nums.length; i++){\\n            int val = nums[i];\\n            // Move the while loop until curr val is repeating , just increase i variable\\n            while(i<nums.length-1 && val == nums[i+1]){\\n                i++;\\n            }\\n            // We came out from while loop it means we went through all the values and our i is at their position of val .\\n            // We simply put that value at j and move j one step a head.\\n\\n            // System.out.println(\" i : \" + i + \" j : \" + j);\\n            nums[j++] = val;\\n        }\\n        // Finally return j\\n        return j;\\n    }\\n}\\n\\n// DRY RUN \\n/* Eg. [0,0,1,1,1,2,2,3,3,4]\\n\\n init i = 0; j = 0;\\n\\n    i : 1 j : 0\\n    i : 4 j : 1\\n    i : 6 j : 2\\n    i : 8 j : 3\\n    i : 9 j : 4\\n\\n    finally j becomes 5;\\n\\n    // Output\\n    [0,1,2,3,4]\\n    */\\n\\n\\n```\n```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int i = 0, j = 0;\\n        for(i = 0;i<nums.length; i++){\\n            int val = nums[i];\\n            while(i<nums.length-1 && val == nums[i+1]){\\n                i++;\\n            }\\n            nums[j++] = val;\\n        }\\n        return j;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2765293,
                "title": "python-simple-fast-solution",
                "content": "```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        i=0\\n        for j in nums:\\n            if j not in nums[:i]:\\n                nums[i]=j\\n                i+=1\\n        return i\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        i=0\\n        for j in nums:\\n            if j not in nums[:i]:\\n                nums[i]=j\\n                i+=1\\n        return i\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2691214,
                "title": "simplest-java-solution-using-for-loop-runtime-2-ms",
                "content": "```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n                int j=1;\\n        int count = 0;\\n        for(int i = 0;i<nums.length-1;i++){\\n            if(nums[i] != nums[j]){\\n                count++;\\n                nums[count] = nums[j];\\n            }\\n            j++;\\n        }\\n        return count+1;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n                int j=1;\\n        int count = 0;\\n        for(int i = 0;i<nums.length-1;i++){\\n            if(nums[i] != nums[j]){\\n                count++;\\n                nums[count] = nums[j];\\n            }\\n            j++;\\n        }\\n        return count+1;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2690394,
                "title": "simple-java-code-that-beats-100-in-time-complexity",
                "content": "# Intuition\\njust check for the next element, if the next element is not equal to current element place it in the array at index k which starts from 0 and increments \\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\nO(n)\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int k=0;\\n        for(int i=0;i<nums.length-1;i++){\\n            if(nums[i]!=nums[i+1]){\\n               nums[k++]=nums[i];\\n            }\\n        }\\n        nums[k++]=nums[nums.length-1];\\n        return k;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java"
                ],
                "code": "```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int k=0;\\n        for(int i=0;i<nums.length-1;i++){\\n            if(nums[i]!=nums[i+1]){\\n               nums[k++]=nums[i];\\n            }\\n        }\\n        nums[k++]=nums[nums.length-1];\\n        return k;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2606646,
                "title": "python-simplest-solution",
                "content": "\\tclass Solution:\\n\\t\\tdef removeDuplicates(self, nums: List[int]) -> int:\\n\\t\\t\\tl=1\\n\\t\\t\\tfor s in range(1,len(nums)):\\n\\t\\t\\t\\tif nums[s]!=nums[s-1]:\\n\\t\\t\\t\\t\\tnums[l]=nums[s]\\n\\t\\t\\t\\t\\tl += 1\\n\\t\\t\\treturn l",
                "solutionTags": [],
                "code": "\\tclass Solution:\\n\\t\\tdef removeDuplicates(self, nums: List[int]) -> int:\\n\\t\\t\\tl=1\\n\\t\\t\\tfor s in range(1,len(nums)):\\n\\t\\t\\t\\tif nums[s]!=nums[s-1]:\\n\\t\\t\\t\\t\\tnums[l]=nums[s]\\n\\t\\t\\t\\t\\tl += 1\\n\\t\\t\\treturn l",
                "codeTag": "Java"
            },
            {
                "id": 2599394,
                "title": "java-solution-o-n-100-faster-solution",
                "content": "The Objective of the problem is to move all the non duplicates to the front of the Array\\nGiving that the Array is on Ascending order, taking it to the advantage to solve the problem\\n\\nUsing two pointer algorithm\\nWhere pointer\\n```x```  -  keeps track of **next** non duplicate to handle \\n```y```  - runs throught the array in search of next non duplicate to replace in place of pointer ```x```\\n\\nsince its an ascending array, the search criteria is number should be greater than the previous non duplicate(```x-1```)\\n\\nOnce we found the next non duplicate number replace in place of ```x``` and continue the search until array ends\\n\\nReturn ```x``` though it is incremented at the end, since we start ```x``` pointer from 1 considering the index 0 contains the first non duplicate number and array size is minimum 1.\\n\\n```class Solution {\\n    public int removeDuplicates(int[] nums) {\\n    \\n        int x=1;\\n        \\n        for(int y=x ; y < nums.length; y++)\\n        {\\n            if(nums[y] > nums[x-1])\\n            {\\n                nums[x++]=nums[y];\\n            }\\n        }\\n        return x;\\n    }\\n}",
                "solutionTags": [
                    "Java",
                    "Array",
                    "Two Pointers"
                ],
                "code": "```x```\n```y```\n```x```\n```x-1```\n```x```\n```x```\n```x```",
                "codeTag": "Unknown"
            },
            {
                "id": 2496829,
                "title": "javascript-typescript-very-very-easy-solution",
                "content": "**JS:**\\n\\n```\\nvar removeDuplicates = function(nums) {\\n    let j=0;\\n    for(let i=0;i<nums.length;i++){\\n        if(nums[i] != nums[i+1]){\\n            nums[j++] = nums[i];\\n        }\\n    };\\n    return j;\\n};\\n```\\n\\n**TS:**\\n\\n```\\nfunction removeDuplicates(nums: number[]): number {\\n    let x:number=0;\\n    for(let i:number=0;i<nums.length;i++)\\n        if(nums[i] !== nums[i+1])\\n            nums[x++] = nums[i]\\n    return x;\\n};\\n```\\n\\n\\nConsider **Upvote** if you find it interesting \\uD83D\\uDE0A",
                "solutionTags": [
                    "JavaScript",
                    "TypeScript"
                ],
                "code": "```\\nvar removeDuplicates = function(nums) {\\n    let j=0;\\n    for(let i=0;i<nums.length;i++){\\n        if(nums[i] != nums[i+1]){\\n            nums[j++] = nums[i];\\n        }\\n    };\\n    return j;\\n};\\n```\n```\\nfunction removeDuplicates(nums: number[]): number {\\n    let x:number=0;\\n    for(let i:number=0;i<nums.length;i++)\\n        if(nums[i] !== nums[i+1])\\n            nums[x++] = nums[i]\\n    return x;\\n};\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2463040,
                "title": "python-simple-solution-explained",
                "content": "**Points to keep in mind** \\nAs we are not required to change the size of the array, we cannot simply use the remove or pop method to eliminate the duplicate occurences of elements. \\n\\nHence we have to find a way to put all the unique elements at the starting of the array and move all the duplicate elements to the end of the array.\\n\\nTo do so, we take two pointers i and j pointing at the first element of the array.\\n\\nWe then keep incrementing the j pointer (which moves over all the elements of the array until we find a unique  element) and check if nums[j] is a duplicate value of nums[i] (which is still pointing to the first element of the array).\\n\\nIf it is a duplicate value, we increment j and move to the next element.\\nElse, we change nums[i+1] to nums[j] the non-duplicate element.\\n\\nThis way we are finding all the unique elements and placing them one after the other from the beginning of the array.\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n\\n        i = 0\\n        j = i\\n        while j < len(nums):\\n            if nums[j] == nums[i]:\\n                j += 1\\n            else:\\n                nums[i+1] = nums[j]\\n                i += 1\\n                \\n        return i + 1\\n```",
                "solutionTags": [
                    "Python",
                    "Two Pointers"
                ],
                "code": "```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n\\n        i = 0\\n        j = i\\n        while j < len(nums):\\n            if nums[j] == nums[i]:\\n                j += 1\\n            else:\\n                nums[i+1] = nums[j]\\n                i += 1\\n                \\n        return i + 1\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2349892,
                "title": "easy-c-solution-0-1-space-complexity-0-n-time-complexity-easy-to-understand",
                "content": "```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int ct = 1;\\n        for(int i = 1; i < nums.size(); i++){\\n            if(nums[i] != nums[i - 1]){\\n                nums[ct++] = nums[i];\\n            }\\n        }\\n        return ct;\\n    }\\n};\\n```",
                "solutionTags": [
                    "C",
                    "Array"
                ],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int ct = 1;\\n        for(int i = 1; i < nums.size(); i++){\\n            if(nums[i] != nums[i - 1]){\\n                nums[ct++] = nums[i];\\n            }\\n        }\\n        return ct;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2308426,
                "title": "very-easy-100-java-c-js-c-fully-explained-with-comments-line-by-line",
                "content": "# **Java Solution:**\\n```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {  \\n        //Base condition\\n        if (nums.length == 0) return 0;\\n        int j = 0;\\n        // Traverse all elements in loop...\\n        for (int i = 0; i < nums.length; i++) {\\n            // If the current element is equal to the next element, we skip..\\n            if (i < nums.length - 1 && nums[i] == nums[i + 1]) {\\n                continue;\\n            }\\n            //update the array in place\\n            nums[j] = nums[i];\\n            j++;\\n        }\\n        return j;\\n    }\\n}\\n```\\n\\n# **C++ Solution:**\\n```\\n//Another approach is here...\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        //Base condition\\n        if(nums.empty()) return 0;\\n        //initialize an index\\n        int k = 0;\\n        // Traverse all elements in loop...\\n        for(int i = 1; i < nums.size(); i++){\\n            //if the index element k is not equal to the current element..\\n            if(nums[k] != nums[i])\\n                nums[++k] = nums[i];\\n        }\\n        return k+1;\\n    }\\n};\\n```\\n\\n# **Javascript Solution:**\\n```\\nvar removeDuplicates = function(nums) {\\n    //Base condition\\n    if (nums.length == 0) return 0;\\n    let j = 0;\\n    // Traverse all elements in loop...\\n    for (let i = 0; i < nums.length; i++){\\n        // If the current element is equal to the next element, we skip..\\n        if (i < nums.length - 1 && nums[i] == nums[i + 1]){\\n            continue;\\n        }\\n        //update the array in place\\n        nums[j] = nums[i];\\n        j++;\\n    }\\n    return j;\\n};\\n```\\n\\n# **C Language:**\\n```\\nint removeDuplicates(int* nums, int numsSize){\\n    //Base condition\\n    if(numsSize == 0) return 0;\\n    //initialize an index\\n    int k = 0;\\n    // Traverse all elements in loop...\\n    for(int i = 1; i < numsSize; i++){\\n        //if the index element k is not equal to the current element..\\n        if(nums[k] != nums[i])\\n            nums[++k] = nums[i];\\n    }\\n    return k+1;\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "C",
                    "JavaScript"
                ],
                "code": "```\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {  \\n        //Base condition\\n        if (nums.length == 0) return 0;\\n        int j = 0;\\n        // Traverse all elements in loop...\\n        for (int i = 0; i < nums.length; i++) {\\n            // If the current element is equal to the next element, we skip..\\n            if (i < nums.length - 1 && nums[i] == nums[i + 1]) {\\n                continue;\\n            }\\n            //update the array in place\\n            nums[j] = nums[i];\\n            j++;\\n        }\\n        return j;\\n    }\\n}\\n```\n```\\n//Another approach is here...\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        //Base condition\\n        if(nums.empty()) return 0;\\n        //initialize an index\\n        int k = 0;\\n        // Traverse all elements in loop...\\n        for(int i = 1; i < nums.size(); i++){\\n            //if the index element k is not equal to the current element..\\n            if(nums[k] != nums[i])\\n                nums[++k] = nums[i];\\n        }\\n        return k+1;\\n    }\\n};\\n```\n```\\nvar removeDuplicates = function(nums) {\\n    //Base condition\\n    if (nums.length == 0) return 0;\\n    let j = 0;\\n    // Traverse all elements in loop...\\n    for (let i = 0; i < nums.length; i++){\\n        // If the current element is equal to the next element, we skip..\\n        if (i < nums.length - 1 && nums[i] == nums[i + 1]){\\n            continue;\\n        }\\n        //update the array in place\\n        nums[j] = nums[i];\\n        j++;\\n    }\\n    return j;\\n};\\n```\n```\\nint removeDuplicates(int* nums, int numsSize){\\n    //Base condition\\n    if(numsSize == 0) return 0;\\n    //initialize an index\\n    int k = 0;\\n    // Traverse all elements in loop...\\n    for(int i = 1; i < numsSize; i++){\\n        //if the index element k is not equal to the current element..\\n        if(nums[k] != nums[i])\\n            nums[++k] = nums[i];\\n    }\\n    return k+1;\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2219039,
                "title": "100-fast-solution-java",
                "content": "```class Solution {\\n    public int removeDuplicates(int[] nums) {\\n        if(nums.length==0){\\n            return 0;\\n        }\\n        if(nums.length==1){\\n            return 1;\\n        }\\n        int index = 1;\\n        for(int i=1;i<nums.length;i++){\\n            if(nums[i]!=nums[i-1]){\\n                nums[index]=nums[i];\\n                index++;\\n            }\\n        }\\n        return index;\\n    }\\n}\\n```",
                "solutionTags": [
                    "Java",
                    "Array",
                    "Sorting"
                ],
                "code": "```class Solution {\\n    public int removeDuplicates(int[] nums) {\\n        if(nums.length==0){\\n            return 0;\\n        }\\n        if(nums.length==1){\\n            return 1;\\n        }\\n        int index = 1;\\n        for(int i=1;i<nums.length;i++){\\n            if(nums[i]!=nums[i-1]){\\n                nums[index]=nums[i];\\n                index++;\\n            }\\n        }\\n        return index;\\n    }\\n}\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2145907,
                "title": "c-solution-with-and-without-using-stl",
                "content": "C++ has STL function **unique( )** which removes all consecutive duplicates. You can use it to complete the program in 2 lines.\\n\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int idx = unique(nums.begin(), nums.end()) - nums.begin();\\n        return idx;\\n    }\\n};\\n```\\nIf you don\\'t want to use STL then here is a O(n) program.\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int n=nums.size();\\n        int j=0;\\n        if (n==0 || n==1)\\n            return n;\\n        for(int i=0; i<n-1; i++){\\n            if(nums[i]!=nums[i+1]){\\n                nums[j++]=nums[i];\\n            }\\n        }\\n        nums[j++]=nums[n-1];\\n        return j;\\n    }\\n};\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int idx = unique(nums.begin(), nums.end()) - nums.begin();\\n        return idx;\\n    }\\n};\\n```\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int n=nums.size();\\n        int j=0;\\n        if (n==0 || n==1)\\n            return n;\\n        for(int i=0; i<n-1; i++){\\n            if(nums[i]!=nums[i+1]){\\n                nums[j++]=nums[i];\\n            }\\n        }\\n        nums[j++]=nums[n-1];\\n        return j;\\n    }\\n};\\n```",
                "codeTag": "Java"
            },
            {
                "id": 2050025,
                "title": "c-faster-than-100-full-explanation-with-code",
                "content": "we are given an array (sorted ascending order) and we have to remove all duplicates from it.\\nsolution T: O(n) and S: O(1)\\n\\nIn this approach we will use two pointer first one is i (see in code) which store current index of answer array and j (loop pointer) through which we will traverse whole array.\\n\\nhere answer array is not different array but it is final array after removing all duplicates starting from index 0 in given array.\\n\\nif last element of our answer array is same as current element of given array we will not store it at i+1 position otherwise we will store it.\\n\\nif you like this solution and explaination then please upvote it.\\nThank you.\\n\\n\\n```\\n    int removeDuplicates(vector<int>& nums) {\\n        \\n        \\n        int n=nums.size(),i=0;\\n        \\n        for(int j=1;j<n;j++)\\n        {\\n            if(nums[i]!=nums[j])\\n            {\\n                i++;\\n                nums[i]=nums[j];\\n               \\n            }\\n        }\\n        return i+1;\\n        \\n    }\\n\\t```",
                "solutionTags": [
                    "Two Pointers"
                ],
                "code": "```\\n    int removeDuplicates(vector<int>& nums) {\\n        \\n        \\n        int n=nums.size(),i=0;\\n        \\n        for(int j=1;j<n;j++)\\n        {\\n            if(nums[i]!=nums[j])\\n            {\\n                i++;\\n                nums[i]=nums[j];\\n               \\n            }\\n        }\\n        return i+1;\\n        \\n    }\\n\\t```",
                "codeTag": "Unknown"
            },
            {
                "id": 1895047,
                "title": "python-code-work-in-o-n",
                "content": "```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        res = 1\\n        for i in range(1,len(nums)):\\n            if nums[i] != nums[res-1]:\\n                nums[res] = nums[i]\\n                res += 1\\n        return res\\n```",
                "solutionTags": [],
                "code": "```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        res = 1\\n        for i in range(1,len(nums)):\\n            if nums[i] != nums[res-1]:\\n                nums[res] = nums[i]\\n                res += 1\\n        return res\\n```",
                "codeTag": "Java"
            },
            {
                "id": 1364660,
                "title": "98-76-faster-python-o-1-beginner-friendly-with-comments",
                "content": "Simple, Replacing Algo\\n\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        index = 1\\n        for i in range(1,len(nums)):\\n            if(nums[i-1]!=nums[i]):\\n                nums[index] = nums[i]\\n                index+=1\\n        return index\\n  ```\\n \\n![image](https://assets.leetcode.com/users/images/fda22889-d4d2-450f-ae8d-0fbd79ac0a63_1627323206.621853.png)\\n",
                "solutionTags": [
                    "Python",
                    "Python3"
                ],
                "code": "```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        index = 1\\n        for i in range(1,len(nums)):\\n            if(nums[i-1]!=nums[i]):\\n                nums[index] = nums[i]\\n                index+=1\\n        return index\\n  ```",
                "codeTag": "Java"
            }
        ],
        "discussions": [
            {
                "id": 1566956,
                "content": [
                    {
                        "username": "nvythedead",
                        "content": "They don\\'t really want you to remove the duplicates. They want you to sort the uniques at the front, then return the length of the sorted part. Then, behind the scenes, they slice the array at the length you give them and the result of that is what they check.\\n\\nJust FYI, this sh_t drove me crazy..."
                    },
                    {
                        "username": "NotAMoose",
                        "content": "Thank you, was ripping my hair out "
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You have to return the correct length of the de-duped array. But when you do the array itself has to be sorted with uniques at the front. You can slice off the extra ones yourself but the judge script is going to do it for you anyway so it\\'s less efficient."
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Nothing stopping you from setting a new array length yourself before returning the length. I didn\\'t realize I didn\\'t have to do it until you said so. Makes sense, though, since you return an int but the output is still an array."
                    },
                    {
                        "username": "Shmormius",
                        "content": "Oh my god, I was going to lose it, I knew something was weird but I couldn\\'t figure out what."
                    },
                    {
                        "username": "NovaVirusXander",
                        "content": "OMG... I was literally going \"Dafuq is going on\" for like 10 mins. Ty so much man #broFist"
                    },
                    {
                        "username": "imanulhuq",
                        "content": "Thank you\\nI was gone mad "
                    },
                    {
                        "username": "emily971133",
                        "content": "if I assign the correct list to the original list (nums), it still responses error...\\nso it seems that we really need to mutate the value of original list(nums)"
                    },
                    {
                        "username": "kuvi41",
                        "content": "Drove me crazy too. Thank god I read this comment, Or else I would have wasted another day. "
                    },
                    {
                        "username": "abobakr",
                        "content": "I don\\'t think. They check the array `nums`  try even without return any thing you will pass some test"
                    },
                    {
                        "username": "Levidps",
                        "content": "Agree! Personally I\\'m not a fan that it actually mutates the original value. This is fine for a problem here but in a real project I\\'d rather avoid this mutation..."
                    },
                    {
                        "username": "Aleton",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You modify the nums array, but you only return k."
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "So in the end what do I have to return? Wheter I return either K or the res array it gives me error"
                    },
                    {
                        "username": "TYork",
                        "content": "Poorly worded then"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "Maybe that is why my solution is not working here but it works in my code editor"
                    },
                    {
                        "username": "venusli370306",
                        "content": "I was on a train and this question buzzed me this whole way. "
                    },
                    {
                        "username": "roman-smal",
                        "content": "whereas in JS you should remove duplicates \\uD83E\\uDD2F"
                    },
                    {
                        "username": "FE_Developer2022",
                        "content": "Thanks man, this is why leetcode sucks. I\\'m heading back to hackerrank"
                    },
                    {
                        "username": "saraahmed2693",
                        "content": "You saved my day! It was driving me crazy!!\\nThank you so much"
                    },
                    {
                        "username": "mukadas026",
                        "content": "seriously man, thanks\\nthey didn\\'t make that very clear in the instructions\\nplus, in the console they don\\'t output what I return, which imo is kinda weird"
                    },
                    {
                        "username": "nrrahul4",
                        "content": "Crazy fellazz.. Thanks man.. You saved my time."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Thanks for that bud!"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "user1306Qa",
                        "content": "Thank you.. these instructions smh"
                    },
                    {
                        "username": "madmonkey95",
                        "content": "\"non-decreasing order\"... just call it ascending. What\\'s with the purposely confusing text?"
                    },
                    {
                        "username": "yunyxue",
                        "content": "Non-decreasing means the next value can be the same as the current one, so [1,1] is also a non-decreasing-order list"
                    },
                    {
                        "username": "acnpssyy",
                        "content": "[@Arshad-Siddiqui](/Arshad-Siddiqui) L to my English teacher he never told me"
                    },
                    {
                        "username": "Arshad-Siddiqui",
                        "content": "Increasing indicates that the values are always higher than the last. In this case the next value might be the same so it isn\\'t increasing. Saying non-decreasing is more descriptive."
                    },
                    {
                        "username": "NischayAgrawal",
                        "content": "Damn !! never knew this. Thanks discussion section."
                    },
                    {
                        "username": "Salman4M",
                        "content": "there is difference between them. For example you have \\'a\\' list .                          a = [1,2,2,3,4,5,6,7,8] .  There are two \\'2\\' and if you say it is  sorted by ascending it isn\\'t. Because 2 is equal to other 2 . So it means there is no ascending between them. If you say non - decreasing order then this rule suits to that list. "
                    },
                    {
                        "username": "cccccwwwww",
                        "content": "The term comes from mathematical analysis. They\\'re using very precise language to avoid any ambiguities. Non-decreasing means a[i+1] >= a[i] rather than (strictly) increasing which would mean a[i+1] > a[i]. You can read up on it here: https://en.wikipedia.org/wiki/Monotonic_function"
                    },
                    {
                        "username": "ReeceBailey",
                        "content": "fr tho :kek:"
                    },
                    {
                        "username": "AJC2k19",
                        "content": "it got to me too but i had to think about it. They\\'re just being very formal specifying non-decreasing since ascending by definition implies increasing; however in an array [1,1,2,2] the second 1 is not greater than than the first. non-decreasing definition holds true here."
                    },
                    {
                        "username": "mrcogllrdo",
                        "content": "[@KovDimaY](/KovDimaY) if that were the case then the majority of filters in the wild for organizing info would have \"non-decreasing\" instead of \"ascending\" as an option to account for duplicates. I have never seen \"non-decreasing\" except today...kinda seems like you came up with that strict definition of ascending out of nowhere."
                    },
                    {
                        "username": "w0rkerbee",
                        "content": "[@KovDimaY](/KovDimaY) the expected answers r literallyin ascending order....."
                    },
                    {
                        "username": "ArthurSPrado",
                        "content": "non-decreasing order = !(decreasing-order) = ascending.  Everything non decreasing is ascending. What\\'s with the purposely confusing mind?"
                    },
                    {
                        "username": "laurentiucozma12",
                        "content": "[@KovDimaY](/KovDimaY) I\\'m pretty sure everyone here including me thinks [1,2,2,3,4,4,5] is ascending and \"non-decreasing\" just makes it more confusing. Idk where you took the definition, if there is something official somewhere for those words please let me know."
                    },
                    {
                        "username": "mewsxd",
                        "content": "i laughed so loud because i was so angry when i read it lmaoo"
                    },
                    {
                        "username": "jdx-code",
                        "content": "haha.. I read that twice to convince myself.. lol"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "\"Non-decreasing\" order and \"ascending\" are different things. \"Ascending\" means that each next element should be strictly bigger than previous. For example: [1,2,3,4,5]. \"Non-decreasing\" means that several elements in a row can be equal, but next one cannot be smaller than previous. For example: [1,2,2,3,4,4,5]. Each \"ascending\" order is \"non-decreasing\" but not each \"non-decreasing\" is \"ascending\". Normally is used to emphasise that numbers can be repeated and kinda prepare us for that."
                    },
                    {
                        "username": "jungle_jim",
                        "content": "The problem says to return the number, _k_, elements after removing duplicates. I get an error returning an integer in Python. I also get an error returning an array with non-repeating _k_ elements and repeating elements after. Which is _also_ supposed to be acceptable."
                    },
                    {
                        "username": "mukadas026",
                        "content": "the instructions got me a bit confused for a while too, they just want `k` to be an integer (length of the sorted part of the array)"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "augustooalcides",
                        "content": "nums vector is passed by reference, so you can modify it by just removing the duplicate numbers"
                    },
                    {
                        "username": "christopherblodgett",
                        "content": "[@abhinav__19](/abhinav__19)  the instructions on this are horrible. You should just be returning the length of the array after it has been cleaned up. BUT, be sure you are modify nums and not creating a second array, because it is checking nums to make sure you removed the duplicates from it."
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Same here"
                    },
                    {
                        "username": "gutta",
                        "content": "hi is there any error in question in question they asked to return size of array after removing duplicates but in output they are showing array.\\ncould you recitify it guys"
                    },
                    {
                        "username": "0xsahilv",
                        "content": "actually they want us to sort array in a way so that all unique elements get to first "
                    },
                    {
                        "username": "rohitmallya",
                        "content": "I too feel the same"
                    },
                    {
                        "username": "zetlian",
                        "content": "[@abdurrahman6489](/abdurrahman6489) still doesnt work for me\\n"
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "And me! I\\'m 75 questions in and no issues - then I hit this one and boom! Sure there\\'s a problem here."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Return the length of the sorted array.\\nThey will verify the same with their function.\\nYour function should return len(nums[:sorted_elements])"
                    },
                    {
                        "username": "Yeyenash",
                        "content": "I have exactly the same question! Who can explain this to us? \\uD83D\\uDE2D"
                    },
                    {
                        "username": "abdurrahman6489",
                        "content": "in the function it is type int. return the value of K. only\\n"
                    },
                    {
                        "username": "iq45y8i",
                        "content": "Answer is expecting an Array (duplicate removed). But the function has return type as int (single element). Please clarify"
                    },
                    {
                        "username": "Simo_Ben_Eckert",
                        "content": "They want you to modify nums but not return it. It is still ebing tested how nums is structured afterwards tho. What you are supposed to return is the length of the sorted part!"
                    },
                    {
                        "username": "shekhaman213",
                        "content": "Array (nums) is passed by reference in the function removeDuplicates , hence any changes in array will be reflected to the nums through its whole scope (outside the function as well)"
                    },
                    {
                        "username": "taychap",
                        "content": "Also note that the question is asking you to mutate the array passed into the function, not return it"
                    },
                    {
                        "username": "Nousie_94",
                        "content": "Answer is expecting the integer \"k\", which is meant in the description."
                    },
                    {
                        "username": "quantupus",
                        "content": "This is a terribly worded question and should be removed, also it is a ridiculously easy problem with a simple list(set(nums)) in python, but this doesn\\'t work due to weird test case things. Please remove this question from leetcode"
                    },
                    {
                        "username": "Coder_Rick",
                        "content": "[@falguni_mutha](/falguni_mutha) I try to solve this easy question using java Set that working fine in intelliJ text editor but here does not work due to the test cases.... "
                    },
                    {
                        "username": "jlgarcia_",
                        "content": "While I partly agree with you, doing `list(set(nums))` creates a new object. Thus, it doesn\\'t mutate the initial list itself, but creates a new one. The output still is the same tho."
                    },
                    {
                        "username": "falguni_mutha",
                        "content": "oh oh oh. I literally t=did this. The question is absolutely terrible. If the wanted the modified array ask for that. The test cases are so stupid"
                    },
                    {
                        "username": "ogorbatchev",
                        "content": "Hey guys, \\n\\nI just finished the exercice and by looking at some solutions, and worse, the solution given by leetcode .. it doesn\\'t remove the duplicate from the array. \\n\\nI mean you have the pointer to this array, and the function name is REMOVE DUPLICATES, the solution clearly doesn\\'t remove them but just put the values in the beginning of the array. \\n\\nMeh, i wanted to say it :p\\nI am furstrated to see this solution that doesn\\'t actually solve the problem \\uD83D\\uDE05\\n\\nWish you guys a good day/night!"
                    },
                    {
                        "username": "therohitbansal4",
                        "content": "Good afternoon /evening \\uD83D\\uDE05"
                    },
                    {
                        "username": "syx_data",
                        "content": "describe:\\nyou must do this by modifying the input array in-place with O(1) extra memory\\uFF0Cwhat does o(1)exrea memory mean\\n"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "[@Nousie_94](/Nousie_94) dude then why return len(list(set(nums))) does not work its senseless"
                    },
                    {
                        "username": "antoniojsp",
                        "content": "when you see 0(1), it means that the memory used would be the same if the array has 10 elements or one million."
                    },
                    {
                        "username": "Nousie_94",
                        "content": "that means, that you are not allowed to allocate new memory which space depends on the number of elements.\\n\\nIn other words: No matter how many elements in \"nums\" are, your code is not allowed to use more memory (except frorm the array \"nums\" itself, of course)."
                    },
                    {
                        "username": "hem_ajet",
                        "content": "![image](https://assets.leetcode.com/users/yhemanth_teja/image_1557658638.png)\\n"
                    },
                    {
                        "username": "munu8998rai",
                        "content": "[@rajdeepbiswas](/rajdeepbiswas) its working fine without that also!\\n"
                    },
                    {
                        "username": "rajdeepbiswas",
                        "content": "Late comment: is there an usage of the ptr variable that I am missing?"
                    },
                    {
                        "username": "ak_ghoul",
                        "content": "There\\'s this thing on leetcode that we are not allowed to write main function. There can be various ways possible to write code on basis of how things are at main function.\\n*I am having a problem to write code without seeing the main function. *\\nCan somebody tell me how to view it?"
                    },
                    {
                        "username": "bm9avan",
                        "content": " public static void main(String[] args) {\\n        int[] arr ={1,1,2,3};\\n        int i=removeDuplicates(arr);\\n        System.out.println(Arrays.toString(arr)+\"  \"+ i);\\n    }\\njust assume there is nothing execpt declares required values to call given function and print answer"
                    },
                    {
                        "username": "suatozkaya",
                        "content": "[@aryanabraham](/aryanabraham) Hi, this is actually how object oriented programming is implemented. In a real project you do not see what is happening outside of your object. You must code in such a way that, your object should encapsulate the method and just work as expected like here."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "aryanabraham",
                        "content": "Hey ak_ghoul!\\nLeetCode doesn\\'t  let you view the main function; only the function that does the prescribed task is viewable/editable. This is reminiscent of the type of problems one gets in most technical interviews. \\n\\nHappy LeetCoding!"
                    }
                ]
            },
            {
                "id": 1747010,
                "content": [
                    {
                        "username": "nvythedead",
                        "content": "They don\\'t really want you to remove the duplicates. They want you to sort the uniques at the front, then return the length of the sorted part. Then, behind the scenes, they slice the array at the length you give them and the result of that is what they check.\\n\\nJust FYI, this sh_t drove me crazy..."
                    },
                    {
                        "username": "NotAMoose",
                        "content": "Thank you, was ripping my hair out "
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You have to return the correct length of the de-duped array. But when you do the array itself has to be sorted with uniques at the front. You can slice off the extra ones yourself but the judge script is going to do it for you anyway so it\\'s less efficient."
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Nothing stopping you from setting a new array length yourself before returning the length. I didn\\'t realize I didn\\'t have to do it until you said so. Makes sense, though, since you return an int but the output is still an array."
                    },
                    {
                        "username": "Shmormius",
                        "content": "Oh my god, I was going to lose it, I knew something was weird but I couldn\\'t figure out what."
                    },
                    {
                        "username": "NovaVirusXander",
                        "content": "OMG... I was literally going \"Dafuq is going on\" for like 10 mins. Ty so much man #broFist"
                    },
                    {
                        "username": "imanulhuq",
                        "content": "Thank you\\nI was gone mad "
                    },
                    {
                        "username": "emily971133",
                        "content": "if I assign the correct list to the original list (nums), it still responses error...\\nso it seems that we really need to mutate the value of original list(nums)"
                    },
                    {
                        "username": "kuvi41",
                        "content": "Drove me crazy too. Thank god I read this comment, Or else I would have wasted another day. "
                    },
                    {
                        "username": "abobakr",
                        "content": "I don\\'t think. They check the array `nums`  try even without return any thing you will pass some test"
                    },
                    {
                        "username": "Levidps",
                        "content": "Agree! Personally I\\'m not a fan that it actually mutates the original value. This is fine for a problem here but in a real project I\\'d rather avoid this mutation..."
                    },
                    {
                        "username": "Aleton",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You modify the nums array, but you only return k."
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "So in the end what do I have to return? Wheter I return either K or the res array it gives me error"
                    },
                    {
                        "username": "TYork",
                        "content": "Poorly worded then"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "Maybe that is why my solution is not working here but it works in my code editor"
                    },
                    {
                        "username": "venusli370306",
                        "content": "I was on a train and this question buzzed me this whole way. "
                    },
                    {
                        "username": "roman-smal",
                        "content": "whereas in JS you should remove duplicates \\uD83E\\uDD2F"
                    },
                    {
                        "username": "FE_Developer2022",
                        "content": "Thanks man, this is why leetcode sucks. I\\'m heading back to hackerrank"
                    },
                    {
                        "username": "saraahmed2693",
                        "content": "You saved my day! It was driving me crazy!!\\nThank you so much"
                    },
                    {
                        "username": "mukadas026",
                        "content": "seriously man, thanks\\nthey didn\\'t make that very clear in the instructions\\nplus, in the console they don\\'t output what I return, which imo is kinda weird"
                    },
                    {
                        "username": "nrrahul4",
                        "content": "Crazy fellazz.. Thanks man.. You saved my time."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Thanks for that bud!"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "user1306Qa",
                        "content": "Thank you.. these instructions smh"
                    },
                    {
                        "username": "madmonkey95",
                        "content": "\"non-decreasing order\"... just call it ascending. What\\'s with the purposely confusing text?"
                    },
                    {
                        "username": "yunyxue",
                        "content": "Non-decreasing means the next value can be the same as the current one, so [1,1] is also a non-decreasing-order list"
                    },
                    {
                        "username": "acnpssyy",
                        "content": "[@Arshad-Siddiqui](/Arshad-Siddiqui) L to my English teacher he never told me"
                    },
                    {
                        "username": "Arshad-Siddiqui",
                        "content": "Increasing indicates that the values are always higher than the last. In this case the next value might be the same so it isn\\'t increasing. Saying non-decreasing is more descriptive."
                    },
                    {
                        "username": "NischayAgrawal",
                        "content": "Damn !! never knew this. Thanks discussion section."
                    },
                    {
                        "username": "Salman4M",
                        "content": "there is difference between them. For example you have \\'a\\' list .                          a = [1,2,2,3,4,5,6,7,8] .  There are two \\'2\\' and if you say it is  sorted by ascending it isn\\'t. Because 2 is equal to other 2 . So it means there is no ascending between them. If you say non - decreasing order then this rule suits to that list. "
                    },
                    {
                        "username": "cccccwwwww",
                        "content": "The term comes from mathematical analysis. They\\'re using very precise language to avoid any ambiguities. Non-decreasing means a[i+1] >= a[i] rather than (strictly) increasing which would mean a[i+1] > a[i]. You can read up on it here: https://en.wikipedia.org/wiki/Monotonic_function"
                    },
                    {
                        "username": "ReeceBailey",
                        "content": "fr tho :kek:"
                    },
                    {
                        "username": "AJC2k19",
                        "content": "it got to me too but i had to think about it. They\\'re just being very formal specifying non-decreasing since ascending by definition implies increasing; however in an array [1,1,2,2] the second 1 is not greater than than the first. non-decreasing definition holds true here."
                    },
                    {
                        "username": "mrcogllrdo",
                        "content": "[@KovDimaY](/KovDimaY) if that were the case then the majority of filters in the wild for organizing info would have \"non-decreasing\" instead of \"ascending\" as an option to account for duplicates. I have never seen \"non-decreasing\" except today...kinda seems like you came up with that strict definition of ascending out of nowhere."
                    },
                    {
                        "username": "w0rkerbee",
                        "content": "[@KovDimaY](/KovDimaY) the expected answers r literallyin ascending order....."
                    },
                    {
                        "username": "ArthurSPrado",
                        "content": "non-decreasing order = !(decreasing-order) = ascending.  Everything non decreasing is ascending. What\\'s with the purposely confusing mind?"
                    },
                    {
                        "username": "laurentiucozma12",
                        "content": "[@KovDimaY](/KovDimaY) I\\'m pretty sure everyone here including me thinks [1,2,2,3,4,4,5] is ascending and \"non-decreasing\" just makes it more confusing. Idk where you took the definition, if there is something official somewhere for those words please let me know."
                    },
                    {
                        "username": "mewsxd",
                        "content": "i laughed so loud because i was so angry when i read it lmaoo"
                    },
                    {
                        "username": "jdx-code",
                        "content": "haha.. I read that twice to convince myself.. lol"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "\"Non-decreasing\" order and \"ascending\" are different things. \"Ascending\" means that each next element should be strictly bigger than previous. For example: [1,2,3,4,5]. \"Non-decreasing\" means that several elements in a row can be equal, but next one cannot be smaller than previous. For example: [1,2,2,3,4,4,5]. Each \"ascending\" order is \"non-decreasing\" but not each \"non-decreasing\" is \"ascending\". Normally is used to emphasise that numbers can be repeated and kinda prepare us for that."
                    },
                    {
                        "username": "jungle_jim",
                        "content": "The problem says to return the number, _k_, elements after removing duplicates. I get an error returning an integer in Python. I also get an error returning an array with non-repeating _k_ elements and repeating elements after. Which is _also_ supposed to be acceptable."
                    },
                    {
                        "username": "mukadas026",
                        "content": "the instructions got me a bit confused for a while too, they just want `k` to be an integer (length of the sorted part of the array)"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "augustooalcides",
                        "content": "nums vector is passed by reference, so you can modify it by just removing the duplicate numbers"
                    },
                    {
                        "username": "christopherblodgett",
                        "content": "[@abhinav__19](/abhinav__19)  the instructions on this are horrible. You should just be returning the length of the array after it has been cleaned up. BUT, be sure you are modify nums and not creating a second array, because it is checking nums to make sure you removed the duplicates from it."
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Same here"
                    },
                    {
                        "username": "gutta",
                        "content": "hi is there any error in question in question they asked to return size of array after removing duplicates but in output they are showing array.\\ncould you recitify it guys"
                    },
                    {
                        "username": "0xsahilv",
                        "content": "actually they want us to sort array in a way so that all unique elements get to first "
                    },
                    {
                        "username": "rohitmallya",
                        "content": "I too feel the same"
                    },
                    {
                        "username": "zetlian",
                        "content": "[@abdurrahman6489](/abdurrahman6489) still doesnt work for me\\n"
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "And me! I\\'m 75 questions in and no issues - then I hit this one and boom! Sure there\\'s a problem here."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Return the length of the sorted array.\\nThey will verify the same with their function.\\nYour function should return len(nums[:sorted_elements])"
                    },
                    {
                        "username": "Yeyenash",
                        "content": "I have exactly the same question! Who can explain this to us? \\uD83D\\uDE2D"
                    },
                    {
                        "username": "abdurrahman6489",
                        "content": "in the function it is type int. return the value of K. only\\n"
                    },
                    {
                        "username": "iq45y8i",
                        "content": "Answer is expecting an Array (duplicate removed). But the function has return type as int (single element). Please clarify"
                    },
                    {
                        "username": "Simo_Ben_Eckert",
                        "content": "They want you to modify nums but not return it. It is still ebing tested how nums is structured afterwards tho. What you are supposed to return is the length of the sorted part!"
                    },
                    {
                        "username": "shekhaman213",
                        "content": "Array (nums) is passed by reference in the function removeDuplicates , hence any changes in array will be reflected to the nums through its whole scope (outside the function as well)"
                    },
                    {
                        "username": "taychap",
                        "content": "Also note that the question is asking you to mutate the array passed into the function, not return it"
                    },
                    {
                        "username": "Nousie_94",
                        "content": "Answer is expecting the integer \"k\", which is meant in the description."
                    },
                    {
                        "username": "quantupus",
                        "content": "This is a terribly worded question and should be removed, also it is a ridiculously easy problem with a simple list(set(nums)) in python, but this doesn\\'t work due to weird test case things. Please remove this question from leetcode"
                    },
                    {
                        "username": "Coder_Rick",
                        "content": "[@falguni_mutha](/falguni_mutha) I try to solve this easy question using java Set that working fine in intelliJ text editor but here does not work due to the test cases.... "
                    },
                    {
                        "username": "jlgarcia_",
                        "content": "While I partly agree with you, doing `list(set(nums))` creates a new object. Thus, it doesn\\'t mutate the initial list itself, but creates a new one. The output still is the same tho."
                    },
                    {
                        "username": "falguni_mutha",
                        "content": "oh oh oh. I literally t=did this. The question is absolutely terrible. If the wanted the modified array ask for that. The test cases are so stupid"
                    },
                    {
                        "username": "ogorbatchev",
                        "content": "Hey guys, \\n\\nI just finished the exercice and by looking at some solutions, and worse, the solution given by leetcode .. it doesn\\'t remove the duplicate from the array. \\n\\nI mean you have the pointer to this array, and the function name is REMOVE DUPLICATES, the solution clearly doesn\\'t remove them but just put the values in the beginning of the array. \\n\\nMeh, i wanted to say it :p\\nI am furstrated to see this solution that doesn\\'t actually solve the problem \\uD83D\\uDE05\\n\\nWish you guys a good day/night!"
                    },
                    {
                        "username": "therohitbansal4",
                        "content": "Good afternoon /evening \\uD83D\\uDE05"
                    },
                    {
                        "username": "syx_data",
                        "content": "describe:\\nyou must do this by modifying the input array in-place with O(1) extra memory\\uFF0Cwhat does o(1)exrea memory mean\\n"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "[@Nousie_94](/Nousie_94) dude then why return len(list(set(nums))) does not work its senseless"
                    },
                    {
                        "username": "antoniojsp",
                        "content": "when you see 0(1), it means that the memory used would be the same if the array has 10 elements or one million."
                    },
                    {
                        "username": "Nousie_94",
                        "content": "that means, that you are not allowed to allocate new memory which space depends on the number of elements.\\n\\nIn other words: No matter how many elements in \"nums\" are, your code is not allowed to use more memory (except frorm the array \"nums\" itself, of course)."
                    },
                    {
                        "username": "hem_ajet",
                        "content": "![image](https://assets.leetcode.com/users/yhemanth_teja/image_1557658638.png)\\n"
                    },
                    {
                        "username": "munu8998rai",
                        "content": "[@rajdeepbiswas](/rajdeepbiswas) its working fine without that also!\\n"
                    },
                    {
                        "username": "rajdeepbiswas",
                        "content": "Late comment: is there an usage of the ptr variable that I am missing?"
                    },
                    {
                        "username": "ak_ghoul",
                        "content": "There\\'s this thing on leetcode that we are not allowed to write main function. There can be various ways possible to write code on basis of how things are at main function.\\n*I am having a problem to write code without seeing the main function. *\\nCan somebody tell me how to view it?"
                    },
                    {
                        "username": "bm9avan",
                        "content": " public static void main(String[] args) {\\n        int[] arr ={1,1,2,3};\\n        int i=removeDuplicates(arr);\\n        System.out.println(Arrays.toString(arr)+\"  \"+ i);\\n    }\\njust assume there is nothing execpt declares required values to call given function and print answer"
                    },
                    {
                        "username": "suatozkaya",
                        "content": "[@aryanabraham](/aryanabraham) Hi, this is actually how object oriented programming is implemented. In a real project you do not see what is happening outside of your object. You must code in such a way that, your object should encapsulate the method and just work as expected like here."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "aryanabraham",
                        "content": "Hey ak_ghoul!\\nLeetCode doesn\\'t  let you view the main function; only the function that does the prescribed task is viewable/editable. This is reminiscent of the type of problems one gets in most technical interviews. \\n\\nHappy LeetCoding!"
                    }
                ]
            },
            {
                "id": 1566413,
                "content": [
                    {
                        "username": "nvythedead",
                        "content": "They don\\'t really want you to remove the duplicates. They want you to sort the uniques at the front, then return the length of the sorted part. Then, behind the scenes, they slice the array at the length you give them and the result of that is what they check.\\n\\nJust FYI, this sh_t drove me crazy..."
                    },
                    {
                        "username": "NotAMoose",
                        "content": "Thank you, was ripping my hair out "
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You have to return the correct length of the de-duped array. But when you do the array itself has to be sorted with uniques at the front. You can slice off the extra ones yourself but the judge script is going to do it for you anyway so it\\'s less efficient."
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Nothing stopping you from setting a new array length yourself before returning the length. I didn\\'t realize I didn\\'t have to do it until you said so. Makes sense, though, since you return an int but the output is still an array."
                    },
                    {
                        "username": "Shmormius",
                        "content": "Oh my god, I was going to lose it, I knew something was weird but I couldn\\'t figure out what."
                    },
                    {
                        "username": "NovaVirusXander",
                        "content": "OMG... I was literally going \"Dafuq is going on\" for like 10 mins. Ty so much man #broFist"
                    },
                    {
                        "username": "imanulhuq",
                        "content": "Thank you\\nI was gone mad "
                    },
                    {
                        "username": "emily971133",
                        "content": "if I assign the correct list to the original list (nums), it still responses error...\\nso it seems that we really need to mutate the value of original list(nums)"
                    },
                    {
                        "username": "kuvi41",
                        "content": "Drove me crazy too. Thank god I read this comment, Or else I would have wasted another day. "
                    },
                    {
                        "username": "abobakr",
                        "content": "I don\\'t think. They check the array `nums`  try even without return any thing you will pass some test"
                    },
                    {
                        "username": "Levidps",
                        "content": "Agree! Personally I\\'m not a fan that it actually mutates the original value. This is fine for a problem here but in a real project I\\'d rather avoid this mutation..."
                    },
                    {
                        "username": "Aleton",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You modify the nums array, but you only return k."
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "So in the end what do I have to return? Wheter I return either K or the res array it gives me error"
                    },
                    {
                        "username": "TYork",
                        "content": "Poorly worded then"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "Maybe that is why my solution is not working here but it works in my code editor"
                    },
                    {
                        "username": "venusli370306",
                        "content": "I was on a train and this question buzzed me this whole way. "
                    },
                    {
                        "username": "roman-smal",
                        "content": "whereas in JS you should remove duplicates \\uD83E\\uDD2F"
                    },
                    {
                        "username": "FE_Developer2022",
                        "content": "Thanks man, this is why leetcode sucks. I\\'m heading back to hackerrank"
                    },
                    {
                        "username": "saraahmed2693",
                        "content": "You saved my day! It was driving me crazy!!\\nThank you so much"
                    },
                    {
                        "username": "mukadas026",
                        "content": "seriously man, thanks\\nthey didn\\'t make that very clear in the instructions\\nplus, in the console they don\\'t output what I return, which imo is kinda weird"
                    },
                    {
                        "username": "nrrahul4",
                        "content": "Crazy fellazz.. Thanks man.. You saved my time."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Thanks for that bud!"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "user1306Qa",
                        "content": "Thank you.. these instructions smh"
                    },
                    {
                        "username": "madmonkey95",
                        "content": "\"non-decreasing order\"... just call it ascending. What\\'s with the purposely confusing text?"
                    },
                    {
                        "username": "yunyxue",
                        "content": "Non-decreasing means the next value can be the same as the current one, so [1,1] is also a non-decreasing-order list"
                    },
                    {
                        "username": "acnpssyy",
                        "content": "[@Arshad-Siddiqui](/Arshad-Siddiqui) L to my English teacher he never told me"
                    },
                    {
                        "username": "Arshad-Siddiqui",
                        "content": "Increasing indicates that the values are always higher than the last. In this case the next value might be the same so it isn\\'t increasing. Saying non-decreasing is more descriptive."
                    },
                    {
                        "username": "NischayAgrawal",
                        "content": "Damn !! never knew this. Thanks discussion section."
                    },
                    {
                        "username": "Salman4M",
                        "content": "there is difference between them. For example you have \\'a\\' list .                          a = [1,2,2,3,4,5,6,7,8] .  There are two \\'2\\' and if you say it is  sorted by ascending it isn\\'t. Because 2 is equal to other 2 . So it means there is no ascending between them. If you say non - decreasing order then this rule suits to that list. "
                    },
                    {
                        "username": "cccccwwwww",
                        "content": "The term comes from mathematical analysis. They\\'re using very precise language to avoid any ambiguities. Non-decreasing means a[i+1] >= a[i] rather than (strictly) increasing which would mean a[i+1] > a[i]. You can read up on it here: https://en.wikipedia.org/wiki/Monotonic_function"
                    },
                    {
                        "username": "ReeceBailey",
                        "content": "fr tho :kek:"
                    },
                    {
                        "username": "AJC2k19",
                        "content": "it got to me too but i had to think about it. They\\'re just being very formal specifying non-decreasing since ascending by definition implies increasing; however in an array [1,1,2,2] the second 1 is not greater than than the first. non-decreasing definition holds true here."
                    },
                    {
                        "username": "mrcogllrdo",
                        "content": "[@KovDimaY](/KovDimaY) if that were the case then the majority of filters in the wild for organizing info would have \"non-decreasing\" instead of \"ascending\" as an option to account for duplicates. I have never seen \"non-decreasing\" except today...kinda seems like you came up with that strict definition of ascending out of nowhere."
                    },
                    {
                        "username": "w0rkerbee",
                        "content": "[@KovDimaY](/KovDimaY) the expected answers r literallyin ascending order....."
                    },
                    {
                        "username": "ArthurSPrado",
                        "content": "non-decreasing order = !(decreasing-order) = ascending.  Everything non decreasing is ascending. What\\'s with the purposely confusing mind?"
                    },
                    {
                        "username": "laurentiucozma12",
                        "content": "[@KovDimaY](/KovDimaY) I\\'m pretty sure everyone here including me thinks [1,2,2,3,4,4,5] is ascending and \"non-decreasing\" just makes it more confusing. Idk where you took the definition, if there is something official somewhere for those words please let me know."
                    },
                    {
                        "username": "mewsxd",
                        "content": "i laughed so loud because i was so angry when i read it lmaoo"
                    },
                    {
                        "username": "jdx-code",
                        "content": "haha.. I read that twice to convince myself.. lol"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "\"Non-decreasing\" order and \"ascending\" are different things. \"Ascending\" means that each next element should be strictly bigger than previous. For example: [1,2,3,4,5]. \"Non-decreasing\" means that several elements in a row can be equal, but next one cannot be smaller than previous. For example: [1,2,2,3,4,4,5]. Each \"ascending\" order is \"non-decreasing\" but not each \"non-decreasing\" is \"ascending\". Normally is used to emphasise that numbers can be repeated and kinda prepare us for that."
                    },
                    {
                        "username": "jungle_jim",
                        "content": "The problem says to return the number, _k_, elements after removing duplicates. I get an error returning an integer in Python. I also get an error returning an array with non-repeating _k_ elements and repeating elements after. Which is _also_ supposed to be acceptable."
                    },
                    {
                        "username": "mukadas026",
                        "content": "the instructions got me a bit confused for a while too, they just want `k` to be an integer (length of the sorted part of the array)"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "augustooalcides",
                        "content": "nums vector is passed by reference, so you can modify it by just removing the duplicate numbers"
                    },
                    {
                        "username": "christopherblodgett",
                        "content": "[@abhinav__19](/abhinav__19)  the instructions on this are horrible. You should just be returning the length of the array after it has been cleaned up. BUT, be sure you are modify nums and not creating a second array, because it is checking nums to make sure you removed the duplicates from it."
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Same here"
                    },
                    {
                        "username": "gutta",
                        "content": "hi is there any error in question in question they asked to return size of array after removing duplicates but in output they are showing array.\\ncould you recitify it guys"
                    },
                    {
                        "username": "0xsahilv",
                        "content": "actually they want us to sort array in a way so that all unique elements get to first "
                    },
                    {
                        "username": "rohitmallya",
                        "content": "I too feel the same"
                    },
                    {
                        "username": "zetlian",
                        "content": "[@abdurrahman6489](/abdurrahman6489) still doesnt work for me\\n"
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "And me! I\\'m 75 questions in and no issues - then I hit this one and boom! Sure there\\'s a problem here."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Return the length of the sorted array.\\nThey will verify the same with their function.\\nYour function should return len(nums[:sorted_elements])"
                    },
                    {
                        "username": "Yeyenash",
                        "content": "I have exactly the same question! Who can explain this to us? \\uD83D\\uDE2D"
                    },
                    {
                        "username": "abdurrahman6489",
                        "content": "in the function it is type int. return the value of K. only\\n"
                    },
                    {
                        "username": "iq45y8i",
                        "content": "Answer is expecting an Array (duplicate removed). But the function has return type as int (single element). Please clarify"
                    },
                    {
                        "username": "Simo_Ben_Eckert",
                        "content": "They want you to modify nums but not return it. It is still ebing tested how nums is structured afterwards tho. What you are supposed to return is the length of the sorted part!"
                    },
                    {
                        "username": "shekhaman213",
                        "content": "Array (nums) is passed by reference in the function removeDuplicates , hence any changes in array will be reflected to the nums through its whole scope (outside the function as well)"
                    },
                    {
                        "username": "taychap",
                        "content": "Also note that the question is asking you to mutate the array passed into the function, not return it"
                    },
                    {
                        "username": "Nousie_94",
                        "content": "Answer is expecting the integer \"k\", which is meant in the description."
                    },
                    {
                        "username": "quantupus",
                        "content": "This is a terribly worded question and should be removed, also it is a ridiculously easy problem with a simple list(set(nums)) in python, but this doesn\\'t work due to weird test case things. Please remove this question from leetcode"
                    },
                    {
                        "username": "Coder_Rick",
                        "content": "[@falguni_mutha](/falguni_mutha) I try to solve this easy question using java Set that working fine in intelliJ text editor but here does not work due to the test cases.... "
                    },
                    {
                        "username": "jlgarcia_",
                        "content": "While I partly agree with you, doing `list(set(nums))` creates a new object. Thus, it doesn\\'t mutate the initial list itself, but creates a new one. The output still is the same tho."
                    },
                    {
                        "username": "falguni_mutha",
                        "content": "oh oh oh. I literally t=did this. The question is absolutely terrible. If the wanted the modified array ask for that. The test cases are so stupid"
                    },
                    {
                        "username": "ogorbatchev",
                        "content": "Hey guys, \\n\\nI just finished the exercice and by looking at some solutions, and worse, the solution given by leetcode .. it doesn\\'t remove the duplicate from the array. \\n\\nI mean you have the pointer to this array, and the function name is REMOVE DUPLICATES, the solution clearly doesn\\'t remove them but just put the values in the beginning of the array. \\n\\nMeh, i wanted to say it :p\\nI am furstrated to see this solution that doesn\\'t actually solve the problem \\uD83D\\uDE05\\n\\nWish you guys a good day/night!"
                    },
                    {
                        "username": "therohitbansal4",
                        "content": "Good afternoon /evening \\uD83D\\uDE05"
                    },
                    {
                        "username": "syx_data",
                        "content": "describe:\\nyou must do this by modifying the input array in-place with O(1) extra memory\\uFF0Cwhat does o(1)exrea memory mean\\n"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "[@Nousie_94](/Nousie_94) dude then why return len(list(set(nums))) does not work its senseless"
                    },
                    {
                        "username": "antoniojsp",
                        "content": "when you see 0(1), it means that the memory used would be the same if the array has 10 elements or one million."
                    },
                    {
                        "username": "Nousie_94",
                        "content": "that means, that you are not allowed to allocate new memory which space depends on the number of elements.\\n\\nIn other words: No matter how many elements in \"nums\" are, your code is not allowed to use more memory (except frorm the array \"nums\" itself, of course)."
                    },
                    {
                        "username": "hem_ajet",
                        "content": "![image](https://assets.leetcode.com/users/yhemanth_teja/image_1557658638.png)\\n"
                    },
                    {
                        "username": "munu8998rai",
                        "content": "[@rajdeepbiswas](/rajdeepbiswas) its working fine without that also!\\n"
                    },
                    {
                        "username": "rajdeepbiswas",
                        "content": "Late comment: is there an usage of the ptr variable that I am missing?"
                    },
                    {
                        "username": "ak_ghoul",
                        "content": "There\\'s this thing on leetcode that we are not allowed to write main function. There can be various ways possible to write code on basis of how things are at main function.\\n*I am having a problem to write code without seeing the main function. *\\nCan somebody tell me how to view it?"
                    },
                    {
                        "username": "bm9avan",
                        "content": " public static void main(String[] args) {\\n        int[] arr ={1,1,2,3};\\n        int i=removeDuplicates(arr);\\n        System.out.println(Arrays.toString(arr)+\"  \"+ i);\\n    }\\njust assume there is nothing execpt declares required values to call given function and print answer"
                    },
                    {
                        "username": "suatozkaya",
                        "content": "[@aryanabraham](/aryanabraham) Hi, this is actually how object oriented programming is implemented. In a real project you do not see what is happening outside of your object. You must code in such a way that, your object should encapsulate the method and just work as expected like here."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "aryanabraham",
                        "content": "Hey ak_ghoul!\\nLeetCode doesn\\'t  let you view the main function; only the function that does the prescribed task is viewable/editable. This is reminiscent of the type of problems one gets in most technical interviews. \\n\\nHappy LeetCoding!"
                    }
                ]
            },
            {
                "id": 1567170,
                "content": [
                    {
                        "username": "nvythedead",
                        "content": "They don\\'t really want you to remove the duplicates. They want you to sort the uniques at the front, then return the length of the sorted part. Then, behind the scenes, they slice the array at the length you give them and the result of that is what they check.\\n\\nJust FYI, this sh_t drove me crazy..."
                    },
                    {
                        "username": "NotAMoose",
                        "content": "Thank you, was ripping my hair out "
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You have to return the correct length of the de-duped array. But when you do the array itself has to be sorted with uniques at the front. You can slice off the extra ones yourself but the judge script is going to do it for you anyway so it\\'s less efficient."
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Nothing stopping you from setting a new array length yourself before returning the length. I didn\\'t realize I didn\\'t have to do it until you said so. Makes sense, though, since you return an int but the output is still an array."
                    },
                    {
                        "username": "Shmormius",
                        "content": "Oh my god, I was going to lose it, I knew something was weird but I couldn\\'t figure out what."
                    },
                    {
                        "username": "NovaVirusXander",
                        "content": "OMG... I was literally going \"Dafuq is going on\" for like 10 mins. Ty so much man #broFist"
                    },
                    {
                        "username": "imanulhuq",
                        "content": "Thank you\\nI was gone mad "
                    },
                    {
                        "username": "emily971133",
                        "content": "if I assign the correct list to the original list (nums), it still responses error...\\nso it seems that we really need to mutate the value of original list(nums)"
                    },
                    {
                        "username": "kuvi41",
                        "content": "Drove me crazy too. Thank god I read this comment, Or else I would have wasted another day. "
                    },
                    {
                        "username": "abobakr",
                        "content": "I don\\'t think. They check the array `nums`  try even without return any thing you will pass some test"
                    },
                    {
                        "username": "Levidps",
                        "content": "Agree! Personally I\\'m not a fan that it actually mutates the original value. This is fine for a problem here but in a real project I\\'d rather avoid this mutation..."
                    },
                    {
                        "username": "Aleton",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You modify the nums array, but you only return k."
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "So in the end what do I have to return? Wheter I return either K or the res array it gives me error"
                    },
                    {
                        "username": "TYork",
                        "content": "Poorly worded then"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "Maybe that is why my solution is not working here but it works in my code editor"
                    },
                    {
                        "username": "venusli370306",
                        "content": "I was on a train and this question buzzed me this whole way. "
                    },
                    {
                        "username": "roman-smal",
                        "content": "whereas in JS you should remove duplicates \\uD83E\\uDD2F"
                    },
                    {
                        "username": "FE_Developer2022",
                        "content": "Thanks man, this is why leetcode sucks. I\\'m heading back to hackerrank"
                    },
                    {
                        "username": "saraahmed2693",
                        "content": "You saved my day! It was driving me crazy!!\\nThank you so much"
                    },
                    {
                        "username": "mukadas026",
                        "content": "seriously man, thanks\\nthey didn\\'t make that very clear in the instructions\\nplus, in the console they don\\'t output what I return, which imo is kinda weird"
                    },
                    {
                        "username": "nrrahul4",
                        "content": "Crazy fellazz.. Thanks man.. You saved my time."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Thanks for that bud!"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "user1306Qa",
                        "content": "Thank you.. these instructions smh"
                    },
                    {
                        "username": "madmonkey95",
                        "content": "\"non-decreasing order\"... just call it ascending. What\\'s with the purposely confusing text?"
                    },
                    {
                        "username": "yunyxue",
                        "content": "Non-decreasing means the next value can be the same as the current one, so [1,1] is also a non-decreasing-order list"
                    },
                    {
                        "username": "acnpssyy",
                        "content": "[@Arshad-Siddiqui](/Arshad-Siddiqui) L to my English teacher he never told me"
                    },
                    {
                        "username": "Arshad-Siddiqui",
                        "content": "Increasing indicates that the values are always higher than the last. In this case the next value might be the same so it isn\\'t increasing. Saying non-decreasing is more descriptive."
                    },
                    {
                        "username": "NischayAgrawal",
                        "content": "Damn !! never knew this. Thanks discussion section."
                    },
                    {
                        "username": "Salman4M",
                        "content": "there is difference between them. For example you have \\'a\\' list .                          a = [1,2,2,3,4,5,6,7,8] .  There are two \\'2\\' and if you say it is  sorted by ascending it isn\\'t. Because 2 is equal to other 2 . So it means there is no ascending between them. If you say non - decreasing order then this rule suits to that list. "
                    },
                    {
                        "username": "cccccwwwww",
                        "content": "The term comes from mathematical analysis. They\\'re using very precise language to avoid any ambiguities. Non-decreasing means a[i+1] >= a[i] rather than (strictly) increasing which would mean a[i+1] > a[i]. You can read up on it here: https://en.wikipedia.org/wiki/Monotonic_function"
                    },
                    {
                        "username": "ReeceBailey",
                        "content": "fr tho :kek:"
                    },
                    {
                        "username": "AJC2k19",
                        "content": "it got to me too but i had to think about it. They\\'re just being very formal specifying non-decreasing since ascending by definition implies increasing; however in an array [1,1,2,2] the second 1 is not greater than than the first. non-decreasing definition holds true here."
                    },
                    {
                        "username": "mrcogllrdo",
                        "content": "[@KovDimaY](/KovDimaY) if that were the case then the majority of filters in the wild for organizing info would have \"non-decreasing\" instead of \"ascending\" as an option to account for duplicates. I have never seen \"non-decreasing\" except today...kinda seems like you came up with that strict definition of ascending out of nowhere."
                    },
                    {
                        "username": "w0rkerbee",
                        "content": "[@KovDimaY](/KovDimaY) the expected answers r literallyin ascending order....."
                    },
                    {
                        "username": "ArthurSPrado",
                        "content": "non-decreasing order = !(decreasing-order) = ascending.  Everything non decreasing is ascending. What\\'s with the purposely confusing mind?"
                    },
                    {
                        "username": "laurentiucozma12",
                        "content": "[@KovDimaY](/KovDimaY) I\\'m pretty sure everyone here including me thinks [1,2,2,3,4,4,5] is ascending and \"non-decreasing\" just makes it more confusing. Idk where you took the definition, if there is something official somewhere for those words please let me know."
                    },
                    {
                        "username": "mewsxd",
                        "content": "i laughed so loud because i was so angry when i read it lmaoo"
                    },
                    {
                        "username": "jdx-code",
                        "content": "haha.. I read that twice to convince myself.. lol"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "\"Non-decreasing\" order and \"ascending\" are different things. \"Ascending\" means that each next element should be strictly bigger than previous. For example: [1,2,3,4,5]. \"Non-decreasing\" means that several elements in a row can be equal, but next one cannot be smaller than previous. For example: [1,2,2,3,4,4,5]. Each \"ascending\" order is \"non-decreasing\" but not each \"non-decreasing\" is \"ascending\". Normally is used to emphasise that numbers can be repeated and kinda prepare us for that."
                    },
                    {
                        "username": "jungle_jim",
                        "content": "The problem says to return the number, _k_, elements after removing duplicates. I get an error returning an integer in Python. I also get an error returning an array with non-repeating _k_ elements and repeating elements after. Which is _also_ supposed to be acceptable."
                    },
                    {
                        "username": "mukadas026",
                        "content": "the instructions got me a bit confused for a while too, they just want `k` to be an integer (length of the sorted part of the array)"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "augustooalcides",
                        "content": "nums vector is passed by reference, so you can modify it by just removing the duplicate numbers"
                    },
                    {
                        "username": "christopherblodgett",
                        "content": "[@abhinav__19](/abhinav__19)  the instructions on this are horrible. You should just be returning the length of the array after it has been cleaned up. BUT, be sure you are modify nums and not creating a second array, because it is checking nums to make sure you removed the duplicates from it."
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Same here"
                    },
                    {
                        "username": "gutta",
                        "content": "hi is there any error in question in question they asked to return size of array after removing duplicates but in output they are showing array.\\ncould you recitify it guys"
                    },
                    {
                        "username": "0xsahilv",
                        "content": "actually they want us to sort array in a way so that all unique elements get to first "
                    },
                    {
                        "username": "rohitmallya",
                        "content": "I too feel the same"
                    },
                    {
                        "username": "zetlian",
                        "content": "[@abdurrahman6489](/abdurrahman6489) still doesnt work for me\\n"
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "And me! I\\'m 75 questions in and no issues - then I hit this one and boom! Sure there\\'s a problem here."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Return the length of the sorted array.\\nThey will verify the same with their function.\\nYour function should return len(nums[:sorted_elements])"
                    },
                    {
                        "username": "Yeyenash",
                        "content": "I have exactly the same question! Who can explain this to us? \\uD83D\\uDE2D"
                    },
                    {
                        "username": "abdurrahman6489",
                        "content": "in the function it is type int. return the value of K. only\\n"
                    },
                    {
                        "username": "iq45y8i",
                        "content": "Answer is expecting an Array (duplicate removed). But the function has return type as int (single element). Please clarify"
                    },
                    {
                        "username": "Simo_Ben_Eckert",
                        "content": "They want you to modify nums but not return it. It is still ebing tested how nums is structured afterwards tho. What you are supposed to return is the length of the sorted part!"
                    },
                    {
                        "username": "shekhaman213",
                        "content": "Array (nums) is passed by reference in the function removeDuplicates , hence any changes in array will be reflected to the nums through its whole scope (outside the function as well)"
                    },
                    {
                        "username": "taychap",
                        "content": "Also note that the question is asking you to mutate the array passed into the function, not return it"
                    },
                    {
                        "username": "Nousie_94",
                        "content": "Answer is expecting the integer \"k\", which is meant in the description."
                    },
                    {
                        "username": "quantupus",
                        "content": "This is a terribly worded question and should be removed, also it is a ridiculously easy problem with a simple list(set(nums)) in python, but this doesn\\'t work due to weird test case things. Please remove this question from leetcode"
                    },
                    {
                        "username": "Coder_Rick",
                        "content": "[@falguni_mutha](/falguni_mutha) I try to solve this easy question using java Set that working fine in intelliJ text editor but here does not work due to the test cases.... "
                    },
                    {
                        "username": "jlgarcia_",
                        "content": "While I partly agree with you, doing `list(set(nums))` creates a new object. Thus, it doesn\\'t mutate the initial list itself, but creates a new one. The output still is the same tho."
                    },
                    {
                        "username": "falguni_mutha",
                        "content": "oh oh oh. I literally t=did this. The question is absolutely terrible. If the wanted the modified array ask for that. The test cases are so stupid"
                    },
                    {
                        "username": "ogorbatchev",
                        "content": "Hey guys, \\n\\nI just finished the exercice and by looking at some solutions, and worse, the solution given by leetcode .. it doesn\\'t remove the duplicate from the array. \\n\\nI mean you have the pointer to this array, and the function name is REMOVE DUPLICATES, the solution clearly doesn\\'t remove them but just put the values in the beginning of the array. \\n\\nMeh, i wanted to say it :p\\nI am furstrated to see this solution that doesn\\'t actually solve the problem \\uD83D\\uDE05\\n\\nWish you guys a good day/night!"
                    },
                    {
                        "username": "therohitbansal4",
                        "content": "Good afternoon /evening \\uD83D\\uDE05"
                    },
                    {
                        "username": "syx_data",
                        "content": "describe:\\nyou must do this by modifying the input array in-place with O(1) extra memory\\uFF0Cwhat does o(1)exrea memory mean\\n"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "[@Nousie_94](/Nousie_94) dude then why return len(list(set(nums))) does not work its senseless"
                    },
                    {
                        "username": "antoniojsp",
                        "content": "when you see 0(1), it means that the memory used would be the same if the array has 10 elements or one million."
                    },
                    {
                        "username": "Nousie_94",
                        "content": "that means, that you are not allowed to allocate new memory which space depends on the number of elements.\\n\\nIn other words: No matter how many elements in \"nums\" are, your code is not allowed to use more memory (except frorm the array \"nums\" itself, of course)."
                    },
                    {
                        "username": "hem_ajet",
                        "content": "![image](https://assets.leetcode.com/users/yhemanth_teja/image_1557658638.png)\\n"
                    },
                    {
                        "username": "munu8998rai",
                        "content": "[@rajdeepbiswas](/rajdeepbiswas) its working fine without that also!\\n"
                    },
                    {
                        "username": "rajdeepbiswas",
                        "content": "Late comment: is there an usage of the ptr variable that I am missing?"
                    },
                    {
                        "username": "ak_ghoul",
                        "content": "There\\'s this thing on leetcode that we are not allowed to write main function. There can be various ways possible to write code on basis of how things are at main function.\\n*I am having a problem to write code without seeing the main function. *\\nCan somebody tell me how to view it?"
                    },
                    {
                        "username": "bm9avan",
                        "content": " public static void main(String[] args) {\\n        int[] arr ={1,1,2,3};\\n        int i=removeDuplicates(arr);\\n        System.out.println(Arrays.toString(arr)+\"  \"+ i);\\n    }\\njust assume there is nothing execpt declares required values to call given function and print answer"
                    },
                    {
                        "username": "suatozkaya",
                        "content": "[@aryanabraham](/aryanabraham) Hi, this is actually how object oriented programming is implemented. In a real project you do not see what is happening outside of your object. You must code in such a way that, your object should encapsulate the method and just work as expected like here."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "aryanabraham",
                        "content": "Hey ak_ghoul!\\nLeetCode doesn\\'t  let you view the main function; only the function that does the prescribed task is viewable/editable. This is reminiscent of the type of problems one gets in most technical interviews. \\n\\nHappy LeetCoding!"
                    }
                ]
            },
            {
                "id": 1568003,
                "content": [
                    {
                        "username": "nvythedead",
                        "content": "They don\\'t really want you to remove the duplicates. They want you to sort the uniques at the front, then return the length of the sorted part. Then, behind the scenes, they slice the array at the length you give them and the result of that is what they check.\\n\\nJust FYI, this sh_t drove me crazy..."
                    },
                    {
                        "username": "NotAMoose",
                        "content": "Thank you, was ripping my hair out "
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You have to return the correct length of the de-duped array. But when you do the array itself has to be sorted with uniques at the front. You can slice off the extra ones yourself but the judge script is going to do it for you anyway so it\\'s less efficient."
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Nothing stopping you from setting a new array length yourself before returning the length. I didn\\'t realize I didn\\'t have to do it until you said so. Makes sense, though, since you return an int but the output is still an array."
                    },
                    {
                        "username": "Shmormius",
                        "content": "Oh my god, I was going to lose it, I knew something was weird but I couldn\\'t figure out what."
                    },
                    {
                        "username": "NovaVirusXander",
                        "content": "OMG... I was literally going \"Dafuq is going on\" for like 10 mins. Ty so much man #broFist"
                    },
                    {
                        "username": "imanulhuq",
                        "content": "Thank you\\nI was gone mad "
                    },
                    {
                        "username": "emily971133",
                        "content": "if I assign the correct list to the original list (nums), it still responses error...\\nso it seems that we really need to mutate the value of original list(nums)"
                    },
                    {
                        "username": "kuvi41",
                        "content": "Drove me crazy too. Thank god I read this comment, Or else I would have wasted another day. "
                    },
                    {
                        "username": "abobakr",
                        "content": "I don\\'t think. They check the array `nums`  try even without return any thing you will pass some test"
                    },
                    {
                        "username": "Levidps",
                        "content": "Agree! Personally I\\'m not a fan that it actually mutates the original value. This is fine for a problem here but in a real project I\\'d rather avoid this mutation..."
                    },
                    {
                        "username": "Aleton",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You modify the nums array, but you only return k."
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "So in the end what do I have to return? Wheter I return either K or the res array it gives me error"
                    },
                    {
                        "username": "TYork",
                        "content": "Poorly worded then"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "Maybe that is why my solution is not working here but it works in my code editor"
                    },
                    {
                        "username": "venusli370306",
                        "content": "I was on a train and this question buzzed me this whole way. "
                    },
                    {
                        "username": "roman-smal",
                        "content": "whereas in JS you should remove duplicates \\uD83E\\uDD2F"
                    },
                    {
                        "username": "FE_Developer2022",
                        "content": "Thanks man, this is why leetcode sucks. I\\'m heading back to hackerrank"
                    },
                    {
                        "username": "saraahmed2693",
                        "content": "You saved my day! It was driving me crazy!!\\nThank you so much"
                    },
                    {
                        "username": "mukadas026",
                        "content": "seriously man, thanks\\nthey didn\\'t make that very clear in the instructions\\nplus, in the console they don\\'t output what I return, which imo is kinda weird"
                    },
                    {
                        "username": "nrrahul4",
                        "content": "Crazy fellazz.. Thanks man.. You saved my time."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Thanks for that bud!"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "user1306Qa",
                        "content": "Thank you.. these instructions smh"
                    },
                    {
                        "username": "madmonkey95",
                        "content": "\"non-decreasing order\"... just call it ascending. What\\'s with the purposely confusing text?"
                    },
                    {
                        "username": "yunyxue",
                        "content": "Non-decreasing means the next value can be the same as the current one, so [1,1] is also a non-decreasing-order list"
                    },
                    {
                        "username": "acnpssyy",
                        "content": "[@Arshad-Siddiqui](/Arshad-Siddiqui) L to my English teacher he never told me"
                    },
                    {
                        "username": "Arshad-Siddiqui",
                        "content": "Increasing indicates that the values are always higher than the last. In this case the next value might be the same so it isn\\'t increasing. Saying non-decreasing is more descriptive."
                    },
                    {
                        "username": "NischayAgrawal",
                        "content": "Damn !! never knew this. Thanks discussion section."
                    },
                    {
                        "username": "Salman4M",
                        "content": "there is difference between them. For example you have \\'a\\' list .                          a = [1,2,2,3,4,5,6,7,8] .  There are two \\'2\\' and if you say it is  sorted by ascending it isn\\'t. Because 2 is equal to other 2 . So it means there is no ascending between them. If you say non - decreasing order then this rule suits to that list. "
                    },
                    {
                        "username": "cccccwwwww",
                        "content": "The term comes from mathematical analysis. They\\'re using very precise language to avoid any ambiguities. Non-decreasing means a[i+1] >= a[i] rather than (strictly) increasing which would mean a[i+1] > a[i]. You can read up on it here: https://en.wikipedia.org/wiki/Monotonic_function"
                    },
                    {
                        "username": "ReeceBailey",
                        "content": "fr tho :kek:"
                    },
                    {
                        "username": "AJC2k19",
                        "content": "it got to me too but i had to think about it. They\\'re just being very formal specifying non-decreasing since ascending by definition implies increasing; however in an array [1,1,2,2] the second 1 is not greater than than the first. non-decreasing definition holds true here."
                    },
                    {
                        "username": "mrcogllrdo",
                        "content": "[@KovDimaY](/KovDimaY) if that were the case then the majority of filters in the wild for organizing info would have \"non-decreasing\" instead of \"ascending\" as an option to account for duplicates. I have never seen \"non-decreasing\" except today...kinda seems like you came up with that strict definition of ascending out of nowhere."
                    },
                    {
                        "username": "w0rkerbee",
                        "content": "[@KovDimaY](/KovDimaY) the expected answers r literallyin ascending order....."
                    },
                    {
                        "username": "ArthurSPrado",
                        "content": "non-decreasing order = !(decreasing-order) = ascending.  Everything non decreasing is ascending. What\\'s with the purposely confusing mind?"
                    },
                    {
                        "username": "laurentiucozma12",
                        "content": "[@KovDimaY](/KovDimaY) I\\'m pretty sure everyone here including me thinks [1,2,2,3,4,4,5] is ascending and \"non-decreasing\" just makes it more confusing. Idk where you took the definition, if there is something official somewhere for those words please let me know."
                    },
                    {
                        "username": "mewsxd",
                        "content": "i laughed so loud because i was so angry when i read it lmaoo"
                    },
                    {
                        "username": "jdx-code",
                        "content": "haha.. I read that twice to convince myself.. lol"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "\"Non-decreasing\" order and \"ascending\" are different things. \"Ascending\" means that each next element should be strictly bigger than previous. For example: [1,2,3,4,5]. \"Non-decreasing\" means that several elements in a row can be equal, but next one cannot be smaller than previous. For example: [1,2,2,3,4,4,5]. Each \"ascending\" order is \"non-decreasing\" but not each \"non-decreasing\" is \"ascending\". Normally is used to emphasise that numbers can be repeated and kinda prepare us for that."
                    },
                    {
                        "username": "jungle_jim",
                        "content": "The problem says to return the number, _k_, elements after removing duplicates. I get an error returning an integer in Python. I also get an error returning an array with non-repeating _k_ elements and repeating elements after. Which is _also_ supposed to be acceptable."
                    },
                    {
                        "username": "mukadas026",
                        "content": "the instructions got me a bit confused for a while too, they just want `k` to be an integer (length of the sorted part of the array)"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "augustooalcides",
                        "content": "nums vector is passed by reference, so you can modify it by just removing the duplicate numbers"
                    },
                    {
                        "username": "christopherblodgett",
                        "content": "[@abhinav__19](/abhinav__19)  the instructions on this are horrible. You should just be returning the length of the array after it has been cleaned up. BUT, be sure you are modify nums and not creating a second array, because it is checking nums to make sure you removed the duplicates from it."
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Same here"
                    },
                    {
                        "username": "gutta",
                        "content": "hi is there any error in question in question they asked to return size of array after removing duplicates but in output they are showing array.\\ncould you recitify it guys"
                    },
                    {
                        "username": "0xsahilv",
                        "content": "actually they want us to sort array in a way so that all unique elements get to first "
                    },
                    {
                        "username": "rohitmallya",
                        "content": "I too feel the same"
                    },
                    {
                        "username": "zetlian",
                        "content": "[@abdurrahman6489](/abdurrahman6489) still doesnt work for me\\n"
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "And me! I\\'m 75 questions in and no issues - then I hit this one and boom! Sure there\\'s a problem here."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Return the length of the sorted array.\\nThey will verify the same with their function.\\nYour function should return len(nums[:sorted_elements])"
                    },
                    {
                        "username": "Yeyenash",
                        "content": "I have exactly the same question! Who can explain this to us? \\uD83D\\uDE2D"
                    },
                    {
                        "username": "abdurrahman6489",
                        "content": "in the function it is type int. return the value of K. only\\n"
                    },
                    {
                        "username": "iq45y8i",
                        "content": "Answer is expecting an Array (duplicate removed). But the function has return type as int (single element). Please clarify"
                    },
                    {
                        "username": "Simo_Ben_Eckert",
                        "content": "They want you to modify nums but not return it. It is still ebing tested how nums is structured afterwards tho. What you are supposed to return is the length of the sorted part!"
                    },
                    {
                        "username": "shekhaman213",
                        "content": "Array (nums) is passed by reference in the function removeDuplicates , hence any changes in array will be reflected to the nums through its whole scope (outside the function as well)"
                    },
                    {
                        "username": "taychap",
                        "content": "Also note that the question is asking you to mutate the array passed into the function, not return it"
                    },
                    {
                        "username": "Nousie_94",
                        "content": "Answer is expecting the integer \"k\", which is meant in the description."
                    },
                    {
                        "username": "quantupus",
                        "content": "This is a terribly worded question and should be removed, also it is a ridiculously easy problem with a simple list(set(nums)) in python, but this doesn\\'t work due to weird test case things. Please remove this question from leetcode"
                    },
                    {
                        "username": "Coder_Rick",
                        "content": "[@falguni_mutha](/falguni_mutha) I try to solve this easy question using java Set that working fine in intelliJ text editor but here does not work due to the test cases.... "
                    },
                    {
                        "username": "jlgarcia_",
                        "content": "While I partly agree with you, doing `list(set(nums))` creates a new object. Thus, it doesn\\'t mutate the initial list itself, but creates a new one. The output still is the same tho."
                    },
                    {
                        "username": "falguni_mutha",
                        "content": "oh oh oh. I literally t=did this. The question is absolutely terrible. If the wanted the modified array ask for that. The test cases are so stupid"
                    },
                    {
                        "username": "ogorbatchev",
                        "content": "Hey guys, \\n\\nI just finished the exercice and by looking at some solutions, and worse, the solution given by leetcode .. it doesn\\'t remove the duplicate from the array. \\n\\nI mean you have the pointer to this array, and the function name is REMOVE DUPLICATES, the solution clearly doesn\\'t remove them but just put the values in the beginning of the array. \\n\\nMeh, i wanted to say it :p\\nI am furstrated to see this solution that doesn\\'t actually solve the problem \\uD83D\\uDE05\\n\\nWish you guys a good day/night!"
                    },
                    {
                        "username": "therohitbansal4",
                        "content": "Good afternoon /evening \\uD83D\\uDE05"
                    },
                    {
                        "username": "syx_data",
                        "content": "describe:\\nyou must do this by modifying the input array in-place with O(1) extra memory\\uFF0Cwhat does o(1)exrea memory mean\\n"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "[@Nousie_94](/Nousie_94) dude then why return len(list(set(nums))) does not work its senseless"
                    },
                    {
                        "username": "antoniojsp",
                        "content": "when you see 0(1), it means that the memory used would be the same if the array has 10 elements or one million."
                    },
                    {
                        "username": "Nousie_94",
                        "content": "that means, that you are not allowed to allocate new memory which space depends on the number of elements.\\n\\nIn other words: No matter how many elements in \"nums\" are, your code is not allowed to use more memory (except frorm the array \"nums\" itself, of course)."
                    },
                    {
                        "username": "hem_ajet",
                        "content": "![image](https://assets.leetcode.com/users/yhemanth_teja/image_1557658638.png)\\n"
                    },
                    {
                        "username": "munu8998rai",
                        "content": "[@rajdeepbiswas](/rajdeepbiswas) its working fine without that also!\\n"
                    },
                    {
                        "username": "rajdeepbiswas",
                        "content": "Late comment: is there an usage of the ptr variable that I am missing?"
                    },
                    {
                        "username": "ak_ghoul",
                        "content": "There\\'s this thing on leetcode that we are not allowed to write main function. There can be various ways possible to write code on basis of how things are at main function.\\n*I am having a problem to write code without seeing the main function. *\\nCan somebody tell me how to view it?"
                    },
                    {
                        "username": "bm9avan",
                        "content": " public static void main(String[] args) {\\n        int[] arr ={1,1,2,3};\\n        int i=removeDuplicates(arr);\\n        System.out.println(Arrays.toString(arr)+\"  \"+ i);\\n    }\\njust assume there is nothing execpt declares required values to call given function and print answer"
                    },
                    {
                        "username": "suatozkaya",
                        "content": "[@aryanabraham](/aryanabraham) Hi, this is actually how object oriented programming is implemented. In a real project you do not see what is happening outside of your object. You must code in such a way that, your object should encapsulate the method and just work as expected like here."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "aryanabraham",
                        "content": "Hey ak_ghoul!\\nLeetCode doesn\\'t  let you view the main function; only the function that does the prescribed task is viewable/editable. This is reminiscent of the type of problems one gets in most technical interviews. \\n\\nHappy LeetCoding!"
                    }
                ]
            },
            {
                "id": 1774620,
                "content": [
                    {
                        "username": "nvythedead",
                        "content": "They don\\'t really want you to remove the duplicates. They want you to sort the uniques at the front, then return the length of the sorted part. Then, behind the scenes, they slice the array at the length you give them and the result of that is what they check.\\n\\nJust FYI, this sh_t drove me crazy..."
                    },
                    {
                        "username": "NotAMoose",
                        "content": "Thank you, was ripping my hair out "
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You have to return the correct length of the de-duped array. But when you do the array itself has to be sorted with uniques at the front. You can slice off the extra ones yourself but the judge script is going to do it for you anyway so it\\'s less efficient."
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Nothing stopping you from setting a new array length yourself before returning the length. I didn\\'t realize I didn\\'t have to do it until you said so. Makes sense, though, since you return an int but the output is still an array."
                    },
                    {
                        "username": "Shmormius",
                        "content": "Oh my god, I was going to lose it, I knew something was weird but I couldn\\'t figure out what."
                    },
                    {
                        "username": "NovaVirusXander",
                        "content": "OMG... I was literally going \"Dafuq is going on\" for like 10 mins. Ty so much man #broFist"
                    },
                    {
                        "username": "imanulhuq",
                        "content": "Thank you\\nI was gone mad "
                    },
                    {
                        "username": "emily971133",
                        "content": "if I assign the correct list to the original list (nums), it still responses error...\\nso it seems that we really need to mutate the value of original list(nums)"
                    },
                    {
                        "username": "kuvi41",
                        "content": "Drove me crazy too. Thank god I read this comment, Or else I would have wasted another day. "
                    },
                    {
                        "username": "abobakr",
                        "content": "I don\\'t think. They check the array `nums`  try even without return any thing you will pass some test"
                    },
                    {
                        "username": "Levidps",
                        "content": "Agree! Personally I\\'m not a fan that it actually mutates the original value. This is fine for a problem here but in a real project I\\'d rather avoid this mutation..."
                    },
                    {
                        "username": "Aleton",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You modify the nums array, but you only return k."
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "So in the end what do I have to return? Wheter I return either K or the res array it gives me error"
                    },
                    {
                        "username": "TYork",
                        "content": "Poorly worded then"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "Maybe that is why my solution is not working here but it works in my code editor"
                    },
                    {
                        "username": "venusli370306",
                        "content": "I was on a train and this question buzzed me this whole way. "
                    },
                    {
                        "username": "roman-smal",
                        "content": "whereas in JS you should remove duplicates \\uD83E\\uDD2F"
                    },
                    {
                        "username": "FE_Developer2022",
                        "content": "Thanks man, this is why leetcode sucks. I\\'m heading back to hackerrank"
                    },
                    {
                        "username": "saraahmed2693",
                        "content": "You saved my day! It was driving me crazy!!\\nThank you so much"
                    },
                    {
                        "username": "mukadas026",
                        "content": "seriously man, thanks\\nthey didn\\'t make that very clear in the instructions\\nplus, in the console they don\\'t output what I return, which imo is kinda weird"
                    },
                    {
                        "username": "nrrahul4",
                        "content": "Crazy fellazz.. Thanks man.. You saved my time."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Thanks for that bud!"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "user1306Qa",
                        "content": "Thank you.. these instructions smh"
                    },
                    {
                        "username": "madmonkey95",
                        "content": "\"non-decreasing order\"... just call it ascending. What\\'s with the purposely confusing text?"
                    },
                    {
                        "username": "yunyxue",
                        "content": "Non-decreasing means the next value can be the same as the current one, so [1,1] is also a non-decreasing-order list"
                    },
                    {
                        "username": "acnpssyy",
                        "content": "[@Arshad-Siddiqui](/Arshad-Siddiqui) L to my English teacher he never told me"
                    },
                    {
                        "username": "Arshad-Siddiqui",
                        "content": "Increasing indicates that the values are always higher than the last. In this case the next value might be the same so it isn\\'t increasing. Saying non-decreasing is more descriptive."
                    },
                    {
                        "username": "NischayAgrawal",
                        "content": "Damn !! never knew this. Thanks discussion section."
                    },
                    {
                        "username": "Salman4M",
                        "content": "there is difference between them. For example you have \\'a\\' list .                          a = [1,2,2,3,4,5,6,7,8] .  There are two \\'2\\' and if you say it is  sorted by ascending it isn\\'t. Because 2 is equal to other 2 . So it means there is no ascending between them. If you say non - decreasing order then this rule suits to that list. "
                    },
                    {
                        "username": "cccccwwwww",
                        "content": "The term comes from mathematical analysis. They\\'re using very precise language to avoid any ambiguities. Non-decreasing means a[i+1] >= a[i] rather than (strictly) increasing which would mean a[i+1] > a[i]. You can read up on it here: https://en.wikipedia.org/wiki/Monotonic_function"
                    },
                    {
                        "username": "ReeceBailey",
                        "content": "fr tho :kek:"
                    },
                    {
                        "username": "AJC2k19",
                        "content": "it got to me too but i had to think about it. They\\'re just being very formal specifying non-decreasing since ascending by definition implies increasing; however in an array [1,1,2,2] the second 1 is not greater than than the first. non-decreasing definition holds true here."
                    },
                    {
                        "username": "mrcogllrdo",
                        "content": "[@KovDimaY](/KovDimaY) if that were the case then the majority of filters in the wild for organizing info would have \"non-decreasing\" instead of \"ascending\" as an option to account for duplicates. I have never seen \"non-decreasing\" except today...kinda seems like you came up with that strict definition of ascending out of nowhere."
                    },
                    {
                        "username": "w0rkerbee",
                        "content": "[@KovDimaY](/KovDimaY) the expected answers r literallyin ascending order....."
                    },
                    {
                        "username": "ArthurSPrado",
                        "content": "non-decreasing order = !(decreasing-order) = ascending.  Everything non decreasing is ascending. What\\'s with the purposely confusing mind?"
                    },
                    {
                        "username": "laurentiucozma12",
                        "content": "[@KovDimaY](/KovDimaY) I\\'m pretty sure everyone here including me thinks [1,2,2,3,4,4,5] is ascending and \"non-decreasing\" just makes it more confusing. Idk where you took the definition, if there is something official somewhere for those words please let me know."
                    },
                    {
                        "username": "mewsxd",
                        "content": "i laughed so loud because i was so angry when i read it lmaoo"
                    },
                    {
                        "username": "jdx-code",
                        "content": "haha.. I read that twice to convince myself.. lol"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "\"Non-decreasing\" order and \"ascending\" are different things. \"Ascending\" means that each next element should be strictly bigger than previous. For example: [1,2,3,4,5]. \"Non-decreasing\" means that several elements in a row can be equal, but next one cannot be smaller than previous. For example: [1,2,2,3,4,4,5]. Each \"ascending\" order is \"non-decreasing\" but not each \"non-decreasing\" is \"ascending\". Normally is used to emphasise that numbers can be repeated and kinda prepare us for that."
                    },
                    {
                        "username": "jungle_jim",
                        "content": "The problem says to return the number, _k_, elements after removing duplicates. I get an error returning an integer in Python. I also get an error returning an array with non-repeating _k_ elements and repeating elements after. Which is _also_ supposed to be acceptable."
                    },
                    {
                        "username": "mukadas026",
                        "content": "the instructions got me a bit confused for a while too, they just want `k` to be an integer (length of the sorted part of the array)"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "augustooalcides",
                        "content": "nums vector is passed by reference, so you can modify it by just removing the duplicate numbers"
                    },
                    {
                        "username": "christopherblodgett",
                        "content": "[@abhinav__19](/abhinav__19)  the instructions on this are horrible. You should just be returning the length of the array after it has been cleaned up. BUT, be sure you are modify nums and not creating a second array, because it is checking nums to make sure you removed the duplicates from it."
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Same here"
                    },
                    {
                        "username": "gutta",
                        "content": "hi is there any error in question in question they asked to return size of array after removing duplicates but in output they are showing array.\\ncould you recitify it guys"
                    },
                    {
                        "username": "0xsahilv",
                        "content": "actually they want us to sort array in a way so that all unique elements get to first "
                    },
                    {
                        "username": "rohitmallya",
                        "content": "I too feel the same"
                    },
                    {
                        "username": "zetlian",
                        "content": "[@abdurrahman6489](/abdurrahman6489) still doesnt work for me\\n"
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "And me! I\\'m 75 questions in and no issues - then I hit this one and boom! Sure there\\'s a problem here."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Return the length of the sorted array.\\nThey will verify the same with their function.\\nYour function should return len(nums[:sorted_elements])"
                    },
                    {
                        "username": "Yeyenash",
                        "content": "I have exactly the same question! Who can explain this to us? \\uD83D\\uDE2D"
                    },
                    {
                        "username": "abdurrahman6489",
                        "content": "in the function it is type int. return the value of K. only\\n"
                    },
                    {
                        "username": "iq45y8i",
                        "content": "Answer is expecting an Array (duplicate removed). But the function has return type as int (single element). Please clarify"
                    },
                    {
                        "username": "Simo_Ben_Eckert",
                        "content": "They want you to modify nums but not return it. It is still ebing tested how nums is structured afterwards tho. What you are supposed to return is the length of the sorted part!"
                    },
                    {
                        "username": "shekhaman213",
                        "content": "Array (nums) is passed by reference in the function removeDuplicates , hence any changes in array will be reflected to the nums through its whole scope (outside the function as well)"
                    },
                    {
                        "username": "taychap",
                        "content": "Also note that the question is asking you to mutate the array passed into the function, not return it"
                    },
                    {
                        "username": "Nousie_94",
                        "content": "Answer is expecting the integer \"k\", which is meant in the description."
                    },
                    {
                        "username": "quantupus",
                        "content": "This is a terribly worded question and should be removed, also it is a ridiculously easy problem with a simple list(set(nums)) in python, but this doesn\\'t work due to weird test case things. Please remove this question from leetcode"
                    },
                    {
                        "username": "Coder_Rick",
                        "content": "[@falguni_mutha](/falguni_mutha) I try to solve this easy question using java Set that working fine in intelliJ text editor but here does not work due to the test cases.... "
                    },
                    {
                        "username": "jlgarcia_",
                        "content": "While I partly agree with you, doing `list(set(nums))` creates a new object. Thus, it doesn\\'t mutate the initial list itself, but creates a new one. The output still is the same tho."
                    },
                    {
                        "username": "falguni_mutha",
                        "content": "oh oh oh. I literally t=did this. The question is absolutely terrible. If the wanted the modified array ask for that. The test cases are so stupid"
                    },
                    {
                        "username": "ogorbatchev",
                        "content": "Hey guys, \\n\\nI just finished the exercice and by looking at some solutions, and worse, the solution given by leetcode .. it doesn\\'t remove the duplicate from the array. \\n\\nI mean you have the pointer to this array, and the function name is REMOVE DUPLICATES, the solution clearly doesn\\'t remove them but just put the values in the beginning of the array. \\n\\nMeh, i wanted to say it :p\\nI am furstrated to see this solution that doesn\\'t actually solve the problem \\uD83D\\uDE05\\n\\nWish you guys a good day/night!"
                    },
                    {
                        "username": "therohitbansal4",
                        "content": "Good afternoon /evening \\uD83D\\uDE05"
                    },
                    {
                        "username": "syx_data",
                        "content": "describe:\\nyou must do this by modifying the input array in-place with O(1) extra memory\\uFF0Cwhat does o(1)exrea memory mean\\n"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "[@Nousie_94](/Nousie_94) dude then why return len(list(set(nums))) does not work its senseless"
                    },
                    {
                        "username": "antoniojsp",
                        "content": "when you see 0(1), it means that the memory used would be the same if the array has 10 elements or one million."
                    },
                    {
                        "username": "Nousie_94",
                        "content": "that means, that you are not allowed to allocate new memory which space depends on the number of elements.\\n\\nIn other words: No matter how many elements in \"nums\" are, your code is not allowed to use more memory (except frorm the array \"nums\" itself, of course)."
                    },
                    {
                        "username": "hem_ajet",
                        "content": "![image](https://assets.leetcode.com/users/yhemanth_teja/image_1557658638.png)\\n"
                    },
                    {
                        "username": "munu8998rai",
                        "content": "[@rajdeepbiswas](/rajdeepbiswas) its working fine without that also!\\n"
                    },
                    {
                        "username": "rajdeepbiswas",
                        "content": "Late comment: is there an usage of the ptr variable that I am missing?"
                    },
                    {
                        "username": "ak_ghoul",
                        "content": "There\\'s this thing on leetcode that we are not allowed to write main function. There can be various ways possible to write code on basis of how things are at main function.\\n*I am having a problem to write code without seeing the main function. *\\nCan somebody tell me how to view it?"
                    },
                    {
                        "username": "bm9avan",
                        "content": " public static void main(String[] args) {\\n        int[] arr ={1,1,2,3};\\n        int i=removeDuplicates(arr);\\n        System.out.println(Arrays.toString(arr)+\"  \"+ i);\\n    }\\njust assume there is nothing execpt declares required values to call given function and print answer"
                    },
                    {
                        "username": "suatozkaya",
                        "content": "[@aryanabraham](/aryanabraham) Hi, this is actually how object oriented programming is implemented. In a real project you do not see what is happening outside of your object. You must code in such a way that, your object should encapsulate the method and just work as expected like here."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "aryanabraham",
                        "content": "Hey ak_ghoul!\\nLeetCode doesn\\'t  let you view the main function; only the function that does the prescribed task is viewable/editable. This is reminiscent of the type of problems one gets in most technical interviews. \\n\\nHappy LeetCoding!"
                    }
                ]
            },
            {
                "id": 1568320,
                "content": [
                    {
                        "username": "nvythedead",
                        "content": "They don\\'t really want you to remove the duplicates. They want you to sort the uniques at the front, then return the length of the sorted part. Then, behind the scenes, they slice the array at the length you give them and the result of that is what they check.\\n\\nJust FYI, this sh_t drove me crazy..."
                    },
                    {
                        "username": "NotAMoose",
                        "content": "Thank you, was ripping my hair out "
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You have to return the correct length of the de-duped array. But when you do the array itself has to be sorted with uniques at the front. You can slice off the extra ones yourself but the judge script is going to do it for you anyway so it\\'s less efficient."
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Nothing stopping you from setting a new array length yourself before returning the length. I didn\\'t realize I didn\\'t have to do it until you said so. Makes sense, though, since you return an int but the output is still an array."
                    },
                    {
                        "username": "Shmormius",
                        "content": "Oh my god, I was going to lose it, I knew something was weird but I couldn\\'t figure out what."
                    },
                    {
                        "username": "NovaVirusXander",
                        "content": "OMG... I was literally going \"Dafuq is going on\" for like 10 mins. Ty so much man #broFist"
                    },
                    {
                        "username": "imanulhuq",
                        "content": "Thank you\\nI was gone mad "
                    },
                    {
                        "username": "emily971133",
                        "content": "if I assign the correct list to the original list (nums), it still responses error...\\nso it seems that we really need to mutate the value of original list(nums)"
                    },
                    {
                        "username": "kuvi41",
                        "content": "Drove me crazy too. Thank god I read this comment, Or else I would have wasted another day. "
                    },
                    {
                        "username": "abobakr",
                        "content": "I don\\'t think. They check the array `nums`  try even without return any thing you will pass some test"
                    },
                    {
                        "username": "Levidps",
                        "content": "Agree! Personally I\\'m not a fan that it actually mutates the original value. This is fine for a problem here but in a real project I\\'d rather avoid this mutation..."
                    },
                    {
                        "username": "Aleton",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You modify the nums array, but you only return k."
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "So in the end what do I have to return? Wheter I return either K or the res array it gives me error"
                    },
                    {
                        "username": "TYork",
                        "content": "Poorly worded then"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "Maybe that is why my solution is not working here but it works in my code editor"
                    },
                    {
                        "username": "venusli370306",
                        "content": "I was on a train and this question buzzed me this whole way. "
                    },
                    {
                        "username": "roman-smal",
                        "content": "whereas in JS you should remove duplicates \\uD83E\\uDD2F"
                    },
                    {
                        "username": "FE_Developer2022",
                        "content": "Thanks man, this is why leetcode sucks. I\\'m heading back to hackerrank"
                    },
                    {
                        "username": "saraahmed2693",
                        "content": "You saved my day! It was driving me crazy!!\\nThank you so much"
                    },
                    {
                        "username": "mukadas026",
                        "content": "seriously man, thanks\\nthey didn\\'t make that very clear in the instructions\\nplus, in the console they don\\'t output what I return, which imo is kinda weird"
                    },
                    {
                        "username": "nrrahul4",
                        "content": "Crazy fellazz.. Thanks man.. You saved my time."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Thanks for that bud!"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "user1306Qa",
                        "content": "Thank you.. these instructions smh"
                    },
                    {
                        "username": "madmonkey95",
                        "content": "\"non-decreasing order\"... just call it ascending. What\\'s with the purposely confusing text?"
                    },
                    {
                        "username": "yunyxue",
                        "content": "Non-decreasing means the next value can be the same as the current one, so [1,1] is also a non-decreasing-order list"
                    },
                    {
                        "username": "acnpssyy",
                        "content": "[@Arshad-Siddiqui](/Arshad-Siddiqui) L to my English teacher he never told me"
                    },
                    {
                        "username": "Arshad-Siddiqui",
                        "content": "Increasing indicates that the values are always higher than the last. In this case the next value might be the same so it isn\\'t increasing. Saying non-decreasing is more descriptive."
                    },
                    {
                        "username": "NischayAgrawal",
                        "content": "Damn !! never knew this. Thanks discussion section."
                    },
                    {
                        "username": "Salman4M",
                        "content": "there is difference between them. For example you have \\'a\\' list .                          a = [1,2,2,3,4,5,6,7,8] .  There are two \\'2\\' and if you say it is  sorted by ascending it isn\\'t. Because 2 is equal to other 2 . So it means there is no ascending between them. If you say non - decreasing order then this rule suits to that list. "
                    },
                    {
                        "username": "cccccwwwww",
                        "content": "The term comes from mathematical analysis. They\\'re using very precise language to avoid any ambiguities. Non-decreasing means a[i+1] >= a[i] rather than (strictly) increasing which would mean a[i+1] > a[i]. You can read up on it here: https://en.wikipedia.org/wiki/Monotonic_function"
                    },
                    {
                        "username": "ReeceBailey",
                        "content": "fr tho :kek:"
                    },
                    {
                        "username": "AJC2k19",
                        "content": "it got to me too but i had to think about it. They\\'re just being very formal specifying non-decreasing since ascending by definition implies increasing; however in an array [1,1,2,2] the second 1 is not greater than than the first. non-decreasing definition holds true here."
                    },
                    {
                        "username": "mrcogllrdo",
                        "content": "[@KovDimaY](/KovDimaY) if that were the case then the majority of filters in the wild for organizing info would have \"non-decreasing\" instead of \"ascending\" as an option to account for duplicates. I have never seen \"non-decreasing\" except today...kinda seems like you came up with that strict definition of ascending out of nowhere."
                    },
                    {
                        "username": "w0rkerbee",
                        "content": "[@KovDimaY](/KovDimaY) the expected answers r literallyin ascending order....."
                    },
                    {
                        "username": "ArthurSPrado",
                        "content": "non-decreasing order = !(decreasing-order) = ascending.  Everything non decreasing is ascending. What\\'s with the purposely confusing mind?"
                    },
                    {
                        "username": "laurentiucozma12",
                        "content": "[@KovDimaY](/KovDimaY) I\\'m pretty sure everyone here including me thinks [1,2,2,3,4,4,5] is ascending and \"non-decreasing\" just makes it more confusing. Idk where you took the definition, if there is something official somewhere for those words please let me know."
                    },
                    {
                        "username": "mewsxd",
                        "content": "i laughed so loud because i was so angry when i read it lmaoo"
                    },
                    {
                        "username": "jdx-code",
                        "content": "haha.. I read that twice to convince myself.. lol"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "\"Non-decreasing\" order and \"ascending\" are different things. \"Ascending\" means that each next element should be strictly bigger than previous. For example: [1,2,3,4,5]. \"Non-decreasing\" means that several elements in a row can be equal, but next one cannot be smaller than previous. For example: [1,2,2,3,4,4,5]. Each \"ascending\" order is \"non-decreasing\" but not each \"non-decreasing\" is \"ascending\". Normally is used to emphasise that numbers can be repeated and kinda prepare us for that."
                    },
                    {
                        "username": "jungle_jim",
                        "content": "The problem says to return the number, _k_, elements after removing duplicates. I get an error returning an integer in Python. I also get an error returning an array with non-repeating _k_ elements and repeating elements after. Which is _also_ supposed to be acceptable."
                    },
                    {
                        "username": "mukadas026",
                        "content": "the instructions got me a bit confused for a while too, they just want `k` to be an integer (length of the sorted part of the array)"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "augustooalcides",
                        "content": "nums vector is passed by reference, so you can modify it by just removing the duplicate numbers"
                    },
                    {
                        "username": "christopherblodgett",
                        "content": "[@abhinav__19](/abhinav__19)  the instructions on this are horrible. You should just be returning the length of the array after it has been cleaned up. BUT, be sure you are modify nums and not creating a second array, because it is checking nums to make sure you removed the duplicates from it."
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Same here"
                    },
                    {
                        "username": "gutta",
                        "content": "hi is there any error in question in question they asked to return size of array after removing duplicates but in output they are showing array.\\ncould you recitify it guys"
                    },
                    {
                        "username": "0xsahilv",
                        "content": "actually they want us to sort array in a way so that all unique elements get to first "
                    },
                    {
                        "username": "rohitmallya",
                        "content": "I too feel the same"
                    },
                    {
                        "username": "zetlian",
                        "content": "[@abdurrahman6489](/abdurrahman6489) still doesnt work for me\\n"
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "And me! I\\'m 75 questions in and no issues - then I hit this one and boom! Sure there\\'s a problem here."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Return the length of the sorted array.\\nThey will verify the same with their function.\\nYour function should return len(nums[:sorted_elements])"
                    },
                    {
                        "username": "Yeyenash",
                        "content": "I have exactly the same question! Who can explain this to us? \\uD83D\\uDE2D"
                    },
                    {
                        "username": "abdurrahman6489",
                        "content": "in the function it is type int. return the value of K. only\\n"
                    },
                    {
                        "username": "iq45y8i",
                        "content": "Answer is expecting an Array (duplicate removed). But the function has return type as int (single element). Please clarify"
                    },
                    {
                        "username": "Simo_Ben_Eckert",
                        "content": "They want you to modify nums but not return it. It is still ebing tested how nums is structured afterwards tho. What you are supposed to return is the length of the sorted part!"
                    },
                    {
                        "username": "shekhaman213",
                        "content": "Array (nums) is passed by reference in the function removeDuplicates , hence any changes in array will be reflected to the nums through its whole scope (outside the function as well)"
                    },
                    {
                        "username": "taychap",
                        "content": "Also note that the question is asking you to mutate the array passed into the function, not return it"
                    },
                    {
                        "username": "Nousie_94",
                        "content": "Answer is expecting the integer \"k\", which is meant in the description."
                    },
                    {
                        "username": "quantupus",
                        "content": "This is a terribly worded question and should be removed, also it is a ridiculously easy problem with a simple list(set(nums)) in python, but this doesn\\'t work due to weird test case things. Please remove this question from leetcode"
                    },
                    {
                        "username": "Coder_Rick",
                        "content": "[@falguni_mutha](/falguni_mutha) I try to solve this easy question using java Set that working fine in intelliJ text editor but here does not work due to the test cases.... "
                    },
                    {
                        "username": "jlgarcia_",
                        "content": "While I partly agree with you, doing `list(set(nums))` creates a new object. Thus, it doesn\\'t mutate the initial list itself, but creates a new one. The output still is the same tho."
                    },
                    {
                        "username": "falguni_mutha",
                        "content": "oh oh oh. I literally t=did this. The question is absolutely terrible. If the wanted the modified array ask for that. The test cases are so stupid"
                    },
                    {
                        "username": "ogorbatchev",
                        "content": "Hey guys, \\n\\nI just finished the exercice and by looking at some solutions, and worse, the solution given by leetcode .. it doesn\\'t remove the duplicate from the array. \\n\\nI mean you have the pointer to this array, and the function name is REMOVE DUPLICATES, the solution clearly doesn\\'t remove them but just put the values in the beginning of the array. \\n\\nMeh, i wanted to say it :p\\nI am furstrated to see this solution that doesn\\'t actually solve the problem \\uD83D\\uDE05\\n\\nWish you guys a good day/night!"
                    },
                    {
                        "username": "therohitbansal4",
                        "content": "Good afternoon /evening \\uD83D\\uDE05"
                    },
                    {
                        "username": "syx_data",
                        "content": "describe:\\nyou must do this by modifying the input array in-place with O(1) extra memory\\uFF0Cwhat does o(1)exrea memory mean\\n"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "[@Nousie_94](/Nousie_94) dude then why return len(list(set(nums))) does not work its senseless"
                    },
                    {
                        "username": "antoniojsp",
                        "content": "when you see 0(1), it means that the memory used would be the same if the array has 10 elements or one million."
                    },
                    {
                        "username": "Nousie_94",
                        "content": "that means, that you are not allowed to allocate new memory which space depends on the number of elements.\\n\\nIn other words: No matter how many elements in \"nums\" are, your code is not allowed to use more memory (except frorm the array \"nums\" itself, of course)."
                    },
                    {
                        "username": "hem_ajet",
                        "content": "![image](https://assets.leetcode.com/users/yhemanth_teja/image_1557658638.png)\\n"
                    },
                    {
                        "username": "munu8998rai",
                        "content": "[@rajdeepbiswas](/rajdeepbiswas) its working fine without that also!\\n"
                    },
                    {
                        "username": "rajdeepbiswas",
                        "content": "Late comment: is there an usage of the ptr variable that I am missing?"
                    },
                    {
                        "username": "ak_ghoul",
                        "content": "There\\'s this thing on leetcode that we are not allowed to write main function. There can be various ways possible to write code on basis of how things are at main function.\\n*I am having a problem to write code without seeing the main function. *\\nCan somebody tell me how to view it?"
                    },
                    {
                        "username": "bm9avan",
                        "content": " public static void main(String[] args) {\\n        int[] arr ={1,1,2,3};\\n        int i=removeDuplicates(arr);\\n        System.out.println(Arrays.toString(arr)+\"  \"+ i);\\n    }\\njust assume there is nothing execpt declares required values to call given function and print answer"
                    },
                    {
                        "username": "suatozkaya",
                        "content": "[@aryanabraham](/aryanabraham) Hi, this is actually how object oriented programming is implemented. In a real project you do not see what is happening outside of your object. You must code in such a way that, your object should encapsulate the method and just work as expected like here."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "aryanabraham",
                        "content": "Hey ak_ghoul!\\nLeetCode doesn\\'t  let you view the main function; only the function that does the prescribed task is viewable/editable. This is reminiscent of the type of problems one gets in most technical interviews. \\n\\nHappy LeetCoding!"
                    }
                ]
            },
            {
                "id": 1567354,
                "content": [
                    {
                        "username": "nvythedead",
                        "content": "They don\\'t really want you to remove the duplicates. They want you to sort the uniques at the front, then return the length of the sorted part. Then, behind the scenes, they slice the array at the length you give them and the result of that is what they check.\\n\\nJust FYI, this sh_t drove me crazy..."
                    },
                    {
                        "username": "NotAMoose",
                        "content": "Thank you, was ripping my hair out "
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You have to return the correct length of the de-duped array. But when you do the array itself has to be sorted with uniques at the front. You can slice off the extra ones yourself but the judge script is going to do it for you anyway so it\\'s less efficient."
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Nothing stopping you from setting a new array length yourself before returning the length. I didn\\'t realize I didn\\'t have to do it until you said so. Makes sense, though, since you return an int but the output is still an array."
                    },
                    {
                        "username": "Shmormius",
                        "content": "Oh my god, I was going to lose it, I knew something was weird but I couldn\\'t figure out what."
                    },
                    {
                        "username": "NovaVirusXander",
                        "content": "OMG... I was literally going \"Dafuq is going on\" for like 10 mins. Ty so much man #broFist"
                    },
                    {
                        "username": "imanulhuq",
                        "content": "Thank you\\nI was gone mad "
                    },
                    {
                        "username": "emily971133",
                        "content": "if I assign the correct list to the original list (nums), it still responses error...\\nso it seems that we really need to mutate the value of original list(nums)"
                    },
                    {
                        "username": "kuvi41",
                        "content": "Drove me crazy too. Thank god I read this comment, Or else I would have wasted another day. "
                    },
                    {
                        "username": "abobakr",
                        "content": "I don\\'t think. They check the array `nums`  try even without return any thing you will pass some test"
                    },
                    {
                        "username": "Levidps",
                        "content": "Agree! Personally I\\'m not a fan that it actually mutates the original value. This is fine for a problem here but in a real project I\\'d rather avoid this mutation..."
                    },
                    {
                        "username": "Aleton",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You modify the nums array, but you only return k."
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "So in the end what do I have to return? Wheter I return either K or the res array it gives me error"
                    },
                    {
                        "username": "TYork",
                        "content": "Poorly worded then"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "Maybe that is why my solution is not working here but it works in my code editor"
                    },
                    {
                        "username": "venusli370306",
                        "content": "I was on a train and this question buzzed me this whole way. "
                    },
                    {
                        "username": "roman-smal",
                        "content": "whereas in JS you should remove duplicates \\uD83E\\uDD2F"
                    },
                    {
                        "username": "FE_Developer2022",
                        "content": "Thanks man, this is why leetcode sucks. I\\'m heading back to hackerrank"
                    },
                    {
                        "username": "saraahmed2693",
                        "content": "You saved my day! It was driving me crazy!!\\nThank you so much"
                    },
                    {
                        "username": "mukadas026",
                        "content": "seriously man, thanks\\nthey didn\\'t make that very clear in the instructions\\nplus, in the console they don\\'t output what I return, which imo is kinda weird"
                    },
                    {
                        "username": "nrrahul4",
                        "content": "Crazy fellazz.. Thanks man.. You saved my time."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Thanks for that bud!"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "user1306Qa",
                        "content": "Thank you.. these instructions smh"
                    },
                    {
                        "username": "madmonkey95",
                        "content": "\"non-decreasing order\"... just call it ascending. What\\'s with the purposely confusing text?"
                    },
                    {
                        "username": "yunyxue",
                        "content": "Non-decreasing means the next value can be the same as the current one, so [1,1] is also a non-decreasing-order list"
                    },
                    {
                        "username": "acnpssyy",
                        "content": "[@Arshad-Siddiqui](/Arshad-Siddiqui) L to my English teacher he never told me"
                    },
                    {
                        "username": "Arshad-Siddiqui",
                        "content": "Increasing indicates that the values are always higher than the last. In this case the next value might be the same so it isn\\'t increasing. Saying non-decreasing is more descriptive."
                    },
                    {
                        "username": "NischayAgrawal",
                        "content": "Damn !! never knew this. Thanks discussion section."
                    },
                    {
                        "username": "Salman4M",
                        "content": "there is difference between them. For example you have \\'a\\' list .                          a = [1,2,2,3,4,5,6,7,8] .  There are two \\'2\\' and if you say it is  sorted by ascending it isn\\'t. Because 2 is equal to other 2 . So it means there is no ascending between them. If you say non - decreasing order then this rule suits to that list. "
                    },
                    {
                        "username": "cccccwwwww",
                        "content": "The term comes from mathematical analysis. They\\'re using very precise language to avoid any ambiguities. Non-decreasing means a[i+1] >= a[i] rather than (strictly) increasing which would mean a[i+1] > a[i]. You can read up on it here: https://en.wikipedia.org/wiki/Monotonic_function"
                    },
                    {
                        "username": "ReeceBailey",
                        "content": "fr tho :kek:"
                    },
                    {
                        "username": "AJC2k19",
                        "content": "it got to me too but i had to think about it. They\\'re just being very formal specifying non-decreasing since ascending by definition implies increasing; however in an array [1,1,2,2] the second 1 is not greater than than the first. non-decreasing definition holds true here."
                    },
                    {
                        "username": "mrcogllrdo",
                        "content": "[@KovDimaY](/KovDimaY) if that were the case then the majority of filters in the wild for organizing info would have \"non-decreasing\" instead of \"ascending\" as an option to account for duplicates. I have never seen \"non-decreasing\" except today...kinda seems like you came up with that strict definition of ascending out of nowhere."
                    },
                    {
                        "username": "w0rkerbee",
                        "content": "[@KovDimaY](/KovDimaY) the expected answers r literallyin ascending order....."
                    },
                    {
                        "username": "ArthurSPrado",
                        "content": "non-decreasing order = !(decreasing-order) = ascending.  Everything non decreasing is ascending. What\\'s with the purposely confusing mind?"
                    },
                    {
                        "username": "laurentiucozma12",
                        "content": "[@KovDimaY](/KovDimaY) I\\'m pretty sure everyone here including me thinks [1,2,2,3,4,4,5] is ascending and \"non-decreasing\" just makes it more confusing. Idk where you took the definition, if there is something official somewhere for those words please let me know."
                    },
                    {
                        "username": "mewsxd",
                        "content": "i laughed so loud because i was so angry when i read it lmaoo"
                    },
                    {
                        "username": "jdx-code",
                        "content": "haha.. I read that twice to convince myself.. lol"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "\"Non-decreasing\" order and \"ascending\" are different things. \"Ascending\" means that each next element should be strictly bigger than previous. For example: [1,2,3,4,5]. \"Non-decreasing\" means that several elements in a row can be equal, but next one cannot be smaller than previous. For example: [1,2,2,3,4,4,5]. Each \"ascending\" order is \"non-decreasing\" but not each \"non-decreasing\" is \"ascending\". Normally is used to emphasise that numbers can be repeated and kinda prepare us for that."
                    },
                    {
                        "username": "jungle_jim",
                        "content": "The problem says to return the number, _k_, elements after removing duplicates. I get an error returning an integer in Python. I also get an error returning an array with non-repeating _k_ elements and repeating elements after. Which is _also_ supposed to be acceptable."
                    },
                    {
                        "username": "mukadas026",
                        "content": "the instructions got me a bit confused for a while too, they just want `k` to be an integer (length of the sorted part of the array)"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "augustooalcides",
                        "content": "nums vector is passed by reference, so you can modify it by just removing the duplicate numbers"
                    },
                    {
                        "username": "christopherblodgett",
                        "content": "[@abhinav__19](/abhinav__19)  the instructions on this are horrible. You should just be returning the length of the array after it has been cleaned up. BUT, be sure you are modify nums and not creating a second array, because it is checking nums to make sure you removed the duplicates from it."
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Same here"
                    },
                    {
                        "username": "gutta",
                        "content": "hi is there any error in question in question they asked to return size of array after removing duplicates but in output they are showing array.\\ncould you recitify it guys"
                    },
                    {
                        "username": "0xsahilv",
                        "content": "actually they want us to sort array in a way so that all unique elements get to first "
                    },
                    {
                        "username": "rohitmallya",
                        "content": "I too feel the same"
                    },
                    {
                        "username": "zetlian",
                        "content": "[@abdurrahman6489](/abdurrahman6489) still doesnt work for me\\n"
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "And me! I\\'m 75 questions in and no issues - then I hit this one and boom! Sure there\\'s a problem here."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Return the length of the sorted array.\\nThey will verify the same with their function.\\nYour function should return len(nums[:sorted_elements])"
                    },
                    {
                        "username": "Yeyenash",
                        "content": "I have exactly the same question! Who can explain this to us? \\uD83D\\uDE2D"
                    },
                    {
                        "username": "abdurrahman6489",
                        "content": "in the function it is type int. return the value of K. only\\n"
                    },
                    {
                        "username": "iq45y8i",
                        "content": "Answer is expecting an Array (duplicate removed). But the function has return type as int (single element). Please clarify"
                    },
                    {
                        "username": "Simo_Ben_Eckert",
                        "content": "They want you to modify nums but not return it. It is still ebing tested how nums is structured afterwards tho. What you are supposed to return is the length of the sorted part!"
                    },
                    {
                        "username": "shekhaman213",
                        "content": "Array (nums) is passed by reference in the function removeDuplicates , hence any changes in array will be reflected to the nums through its whole scope (outside the function as well)"
                    },
                    {
                        "username": "taychap",
                        "content": "Also note that the question is asking you to mutate the array passed into the function, not return it"
                    },
                    {
                        "username": "Nousie_94",
                        "content": "Answer is expecting the integer \"k\", which is meant in the description."
                    },
                    {
                        "username": "quantupus",
                        "content": "This is a terribly worded question and should be removed, also it is a ridiculously easy problem with a simple list(set(nums)) in python, but this doesn\\'t work due to weird test case things. Please remove this question from leetcode"
                    },
                    {
                        "username": "Coder_Rick",
                        "content": "[@falguni_mutha](/falguni_mutha) I try to solve this easy question using java Set that working fine in intelliJ text editor but here does not work due to the test cases.... "
                    },
                    {
                        "username": "jlgarcia_",
                        "content": "While I partly agree with you, doing `list(set(nums))` creates a new object. Thus, it doesn\\'t mutate the initial list itself, but creates a new one. The output still is the same tho."
                    },
                    {
                        "username": "falguni_mutha",
                        "content": "oh oh oh. I literally t=did this. The question is absolutely terrible. If the wanted the modified array ask for that. The test cases are so stupid"
                    },
                    {
                        "username": "ogorbatchev",
                        "content": "Hey guys, \\n\\nI just finished the exercice and by looking at some solutions, and worse, the solution given by leetcode .. it doesn\\'t remove the duplicate from the array. \\n\\nI mean you have the pointer to this array, and the function name is REMOVE DUPLICATES, the solution clearly doesn\\'t remove them but just put the values in the beginning of the array. \\n\\nMeh, i wanted to say it :p\\nI am furstrated to see this solution that doesn\\'t actually solve the problem \\uD83D\\uDE05\\n\\nWish you guys a good day/night!"
                    },
                    {
                        "username": "therohitbansal4",
                        "content": "Good afternoon /evening \\uD83D\\uDE05"
                    },
                    {
                        "username": "syx_data",
                        "content": "describe:\\nyou must do this by modifying the input array in-place with O(1) extra memory\\uFF0Cwhat does o(1)exrea memory mean\\n"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "[@Nousie_94](/Nousie_94) dude then why return len(list(set(nums))) does not work its senseless"
                    },
                    {
                        "username": "antoniojsp",
                        "content": "when you see 0(1), it means that the memory used would be the same if the array has 10 elements or one million."
                    },
                    {
                        "username": "Nousie_94",
                        "content": "that means, that you are not allowed to allocate new memory which space depends on the number of elements.\\n\\nIn other words: No matter how many elements in \"nums\" are, your code is not allowed to use more memory (except frorm the array \"nums\" itself, of course)."
                    },
                    {
                        "username": "hem_ajet",
                        "content": "![image](https://assets.leetcode.com/users/yhemanth_teja/image_1557658638.png)\\n"
                    },
                    {
                        "username": "munu8998rai",
                        "content": "[@rajdeepbiswas](/rajdeepbiswas) its working fine without that also!\\n"
                    },
                    {
                        "username": "rajdeepbiswas",
                        "content": "Late comment: is there an usage of the ptr variable that I am missing?"
                    },
                    {
                        "username": "ak_ghoul",
                        "content": "There\\'s this thing on leetcode that we are not allowed to write main function. There can be various ways possible to write code on basis of how things are at main function.\\n*I am having a problem to write code without seeing the main function. *\\nCan somebody tell me how to view it?"
                    },
                    {
                        "username": "bm9avan",
                        "content": " public static void main(String[] args) {\\n        int[] arr ={1,1,2,3};\\n        int i=removeDuplicates(arr);\\n        System.out.println(Arrays.toString(arr)+\"  \"+ i);\\n    }\\njust assume there is nothing execpt declares required values to call given function and print answer"
                    },
                    {
                        "username": "suatozkaya",
                        "content": "[@aryanabraham](/aryanabraham) Hi, this is actually how object oriented programming is implemented. In a real project you do not see what is happening outside of your object. You must code in such a way that, your object should encapsulate the method and just work as expected like here."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "aryanabraham",
                        "content": "Hey ak_ghoul!\\nLeetCode doesn\\'t  let you view the main function; only the function that does the prescribed task is viewable/editable. This is reminiscent of the type of problems one gets in most technical interviews. \\n\\nHappy LeetCoding!"
                    }
                ]
            },
            {
                "id": 1568140,
                "content": [
                    {
                        "username": "nvythedead",
                        "content": "They don\\'t really want you to remove the duplicates. They want you to sort the uniques at the front, then return the length of the sorted part. Then, behind the scenes, they slice the array at the length you give them and the result of that is what they check.\\n\\nJust FYI, this sh_t drove me crazy..."
                    },
                    {
                        "username": "NotAMoose",
                        "content": "Thank you, was ripping my hair out "
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You have to return the correct length of the de-duped array. But when you do the array itself has to be sorted with uniques at the front. You can slice off the extra ones yourself but the judge script is going to do it for you anyway so it\\'s less efficient."
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Nothing stopping you from setting a new array length yourself before returning the length. I didn\\'t realize I didn\\'t have to do it until you said so. Makes sense, though, since you return an int but the output is still an array."
                    },
                    {
                        "username": "Shmormius",
                        "content": "Oh my god, I was going to lose it, I knew something was weird but I couldn\\'t figure out what."
                    },
                    {
                        "username": "NovaVirusXander",
                        "content": "OMG... I was literally going \"Dafuq is going on\" for like 10 mins. Ty so much man #broFist"
                    },
                    {
                        "username": "imanulhuq",
                        "content": "Thank you\\nI was gone mad "
                    },
                    {
                        "username": "emily971133",
                        "content": "if I assign the correct list to the original list (nums), it still responses error...\\nso it seems that we really need to mutate the value of original list(nums)"
                    },
                    {
                        "username": "kuvi41",
                        "content": "Drove me crazy too. Thank god I read this comment, Or else I would have wasted another day. "
                    },
                    {
                        "username": "abobakr",
                        "content": "I don\\'t think. They check the array `nums`  try even without return any thing you will pass some test"
                    },
                    {
                        "username": "Levidps",
                        "content": "Agree! Personally I\\'m not a fan that it actually mutates the original value. This is fine for a problem here but in a real project I\\'d rather avoid this mutation..."
                    },
                    {
                        "username": "Aleton",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You modify the nums array, but you only return k."
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "So in the end what do I have to return? Wheter I return either K or the res array it gives me error"
                    },
                    {
                        "username": "TYork",
                        "content": "Poorly worded then"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "Maybe that is why my solution is not working here but it works in my code editor"
                    },
                    {
                        "username": "venusli370306",
                        "content": "I was on a train and this question buzzed me this whole way. "
                    },
                    {
                        "username": "roman-smal",
                        "content": "whereas in JS you should remove duplicates \\uD83E\\uDD2F"
                    },
                    {
                        "username": "FE_Developer2022",
                        "content": "Thanks man, this is why leetcode sucks. I\\'m heading back to hackerrank"
                    },
                    {
                        "username": "saraahmed2693",
                        "content": "You saved my day! It was driving me crazy!!\\nThank you so much"
                    },
                    {
                        "username": "mukadas026",
                        "content": "seriously man, thanks\\nthey didn\\'t make that very clear in the instructions\\nplus, in the console they don\\'t output what I return, which imo is kinda weird"
                    },
                    {
                        "username": "nrrahul4",
                        "content": "Crazy fellazz.. Thanks man.. You saved my time."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Thanks for that bud!"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "user1306Qa",
                        "content": "Thank you.. these instructions smh"
                    },
                    {
                        "username": "madmonkey95",
                        "content": "\"non-decreasing order\"... just call it ascending. What\\'s with the purposely confusing text?"
                    },
                    {
                        "username": "yunyxue",
                        "content": "Non-decreasing means the next value can be the same as the current one, so [1,1] is also a non-decreasing-order list"
                    },
                    {
                        "username": "acnpssyy",
                        "content": "[@Arshad-Siddiqui](/Arshad-Siddiqui) L to my English teacher he never told me"
                    },
                    {
                        "username": "Arshad-Siddiqui",
                        "content": "Increasing indicates that the values are always higher than the last. In this case the next value might be the same so it isn\\'t increasing. Saying non-decreasing is more descriptive."
                    },
                    {
                        "username": "NischayAgrawal",
                        "content": "Damn !! never knew this. Thanks discussion section."
                    },
                    {
                        "username": "Salman4M",
                        "content": "there is difference between them. For example you have \\'a\\' list .                          a = [1,2,2,3,4,5,6,7,8] .  There are two \\'2\\' and if you say it is  sorted by ascending it isn\\'t. Because 2 is equal to other 2 . So it means there is no ascending between them. If you say non - decreasing order then this rule suits to that list. "
                    },
                    {
                        "username": "cccccwwwww",
                        "content": "The term comes from mathematical analysis. They\\'re using very precise language to avoid any ambiguities. Non-decreasing means a[i+1] >= a[i] rather than (strictly) increasing which would mean a[i+1] > a[i]. You can read up on it here: https://en.wikipedia.org/wiki/Monotonic_function"
                    },
                    {
                        "username": "ReeceBailey",
                        "content": "fr tho :kek:"
                    },
                    {
                        "username": "AJC2k19",
                        "content": "it got to me too but i had to think about it. They\\'re just being very formal specifying non-decreasing since ascending by definition implies increasing; however in an array [1,1,2,2] the second 1 is not greater than than the first. non-decreasing definition holds true here."
                    },
                    {
                        "username": "mrcogllrdo",
                        "content": "[@KovDimaY](/KovDimaY) if that were the case then the majority of filters in the wild for organizing info would have \"non-decreasing\" instead of \"ascending\" as an option to account for duplicates. I have never seen \"non-decreasing\" except today...kinda seems like you came up with that strict definition of ascending out of nowhere."
                    },
                    {
                        "username": "w0rkerbee",
                        "content": "[@KovDimaY](/KovDimaY) the expected answers r literallyin ascending order....."
                    },
                    {
                        "username": "ArthurSPrado",
                        "content": "non-decreasing order = !(decreasing-order) = ascending.  Everything non decreasing is ascending. What\\'s with the purposely confusing mind?"
                    },
                    {
                        "username": "laurentiucozma12",
                        "content": "[@KovDimaY](/KovDimaY) I\\'m pretty sure everyone here including me thinks [1,2,2,3,4,4,5] is ascending and \"non-decreasing\" just makes it more confusing. Idk where you took the definition, if there is something official somewhere for those words please let me know."
                    },
                    {
                        "username": "mewsxd",
                        "content": "i laughed so loud because i was so angry when i read it lmaoo"
                    },
                    {
                        "username": "jdx-code",
                        "content": "haha.. I read that twice to convince myself.. lol"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "\"Non-decreasing\" order and \"ascending\" are different things. \"Ascending\" means that each next element should be strictly bigger than previous. For example: [1,2,3,4,5]. \"Non-decreasing\" means that several elements in a row can be equal, but next one cannot be smaller than previous. For example: [1,2,2,3,4,4,5]. Each \"ascending\" order is \"non-decreasing\" but not each \"non-decreasing\" is \"ascending\". Normally is used to emphasise that numbers can be repeated and kinda prepare us for that."
                    },
                    {
                        "username": "jungle_jim",
                        "content": "The problem says to return the number, _k_, elements after removing duplicates. I get an error returning an integer in Python. I also get an error returning an array with non-repeating _k_ elements and repeating elements after. Which is _also_ supposed to be acceptable."
                    },
                    {
                        "username": "mukadas026",
                        "content": "the instructions got me a bit confused for a while too, they just want `k` to be an integer (length of the sorted part of the array)"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "augustooalcides",
                        "content": "nums vector is passed by reference, so you can modify it by just removing the duplicate numbers"
                    },
                    {
                        "username": "christopherblodgett",
                        "content": "[@abhinav__19](/abhinav__19)  the instructions on this are horrible. You should just be returning the length of the array after it has been cleaned up. BUT, be sure you are modify nums and not creating a second array, because it is checking nums to make sure you removed the duplicates from it."
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Same here"
                    },
                    {
                        "username": "gutta",
                        "content": "hi is there any error in question in question they asked to return size of array after removing duplicates but in output they are showing array.\\ncould you recitify it guys"
                    },
                    {
                        "username": "0xsahilv",
                        "content": "actually they want us to sort array in a way so that all unique elements get to first "
                    },
                    {
                        "username": "rohitmallya",
                        "content": "I too feel the same"
                    },
                    {
                        "username": "zetlian",
                        "content": "[@abdurrahman6489](/abdurrahman6489) still doesnt work for me\\n"
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "And me! I\\'m 75 questions in and no issues - then I hit this one and boom! Sure there\\'s a problem here."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Return the length of the sorted array.\\nThey will verify the same with their function.\\nYour function should return len(nums[:sorted_elements])"
                    },
                    {
                        "username": "Yeyenash",
                        "content": "I have exactly the same question! Who can explain this to us? \\uD83D\\uDE2D"
                    },
                    {
                        "username": "abdurrahman6489",
                        "content": "in the function it is type int. return the value of K. only\\n"
                    },
                    {
                        "username": "iq45y8i",
                        "content": "Answer is expecting an Array (duplicate removed). But the function has return type as int (single element). Please clarify"
                    },
                    {
                        "username": "Simo_Ben_Eckert",
                        "content": "They want you to modify nums but not return it. It is still ebing tested how nums is structured afterwards tho. What you are supposed to return is the length of the sorted part!"
                    },
                    {
                        "username": "shekhaman213",
                        "content": "Array (nums) is passed by reference in the function removeDuplicates , hence any changes in array will be reflected to the nums through its whole scope (outside the function as well)"
                    },
                    {
                        "username": "taychap",
                        "content": "Also note that the question is asking you to mutate the array passed into the function, not return it"
                    },
                    {
                        "username": "Nousie_94",
                        "content": "Answer is expecting the integer \"k\", which is meant in the description."
                    },
                    {
                        "username": "quantupus",
                        "content": "This is a terribly worded question and should be removed, also it is a ridiculously easy problem with a simple list(set(nums)) in python, but this doesn\\'t work due to weird test case things. Please remove this question from leetcode"
                    },
                    {
                        "username": "Coder_Rick",
                        "content": "[@falguni_mutha](/falguni_mutha) I try to solve this easy question using java Set that working fine in intelliJ text editor but here does not work due to the test cases.... "
                    },
                    {
                        "username": "jlgarcia_",
                        "content": "While I partly agree with you, doing `list(set(nums))` creates a new object. Thus, it doesn\\'t mutate the initial list itself, but creates a new one. The output still is the same tho."
                    },
                    {
                        "username": "falguni_mutha",
                        "content": "oh oh oh. I literally t=did this. The question is absolutely terrible. If the wanted the modified array ask for that. The test cases are so stupid"
                    },
                    {
                        "username": "ogorbatchev",
                        "content": "Hey guys, \\n\\nI just finished the exercice and by looking at some solutions, and worse, the solution given by leetcode .. it doesn\\'t remove the duplicate from the array. \\n\\nI mean you have the pointer to this array, and the function name is REMOVE DUPLICATES, the solution clearly doesn\\'t remove them but just put the values in the beginning of the array. \\n\\nMeh, i wanted to say it :p\\nI am furstrated to see this solution that doesn\\'t actually solve the problem \\uD83D\\uDE05\\n\\nWish you guys a good day/night!"
                    },
                    {
                        "username": "therohitbansal4",
                        "content": "Good afternoon /evening \\uD83D\\uDE05"
                    },
                    {
                        "username": "syx_data",
                        "content": "describe:\\nyou must do this by modifying the input array in-place with O(1) extra memory\\uFF0Cwhat does o(1)exrea memory mean\\n"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "[@Nousie_94](/Nousie_94) dude then why return len(list(set(nums))) does not work its senseless"
                    },
                    {
                        "username": "antoniojsp",
                        "content": "when you see 0(1), it means that the memory used would be the same if the array has 10 elements or one million."
                    },
                    {
                        "username": "Nousie_94",
                        "content": "that means, that you are not allowed to allocate new memory which space depends on the number of elements.\\n\\nIn other words: No matter how many elements in \"nums\" are, your code is not allowed to use more memory (except frorm the array \"nums\" itself, of course)."
                    },
                    {
                        "username": "hem_ajet",
                        "content": "![image](https://assets.leetcode.com/users/yhemanth_teja/image_1557658638.png)\\n"
                    },
                    {
                        "username": "munu8998rai",
                        "content": "[@rajdeepbiswas](/rajdeepbiswas) its working fine without that also!\\n"
                    },
                    {
                        "username": "rajdeepbiswas",
                        "content": "Late comment: is there an usage of the ptr variable that I am missing?"
                    },
                    {
                        "username": "ak_ghoul",
                        "content": "There\\'s this thing on leetcode that we are not allowed to write main function. There can be various ways possible to write code on basis of how things are at main function.\\n*I am having a problem to write code without seeing the main function. *\\nCan somebody tell me how to view it?"
                    },
                    {
                        "username": "bm9avan",
                        "content": " public static void main(String[] args) {\\n        int[] arr ={1,1,2,3};\\n        int i=removeDuplicates(arr);\\n        System.out.println(Arrays.toString(arr)+\"  \"+ i);\\n    }\\njust assume there is nothing execpt declares required values to call given function and print answer"
                    },
                    {
                        "username": "suatozkaya",
                        "content": "[@aryanabraham](/aryanabraham) Hi, this is actually how object oriented programming is implemented. In a real project you do not see what is happening outside of your object. You must code in such a way that, your object should encapsulate the method and just work as expected like here."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "aryanabraham",
                        "content": "Hey ak_ghoul!\\nLeetCode doesn\\'t  let you view the main function; only the function that does the prescribed task is viewable/editable. This is reminiscent of the type of problems one gets in most technical interviews. \\n\\nHappy LeetCoding!"
                    }
                ]
            },
            {
                "id": 1564850,
                "content": [
                    {
                        "username": "nvythedead",
                        "content": "They don\\'t really want you to remove the duplicates. They want you to sort the uniques at the front, then return the length of the sorted part. Then, behind the scenes, they slice the array at the length you give them and the result of that is what they check.\\n\\nJust FYI, this sh_t drove me crazy..."
                    },
                    {
                        "username": "NotAMoose",
                        "content": "Thank you, was ripping my hair out "
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You have to return the correct length of the de-duped array. But when you do the array itself has to be sorted with uniques at the front. You can slice off the extra ones yourself but the judge script is going to do it for you anyway so it\\'s less efficient."
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Nothing stopping you from setting a new array length yourself before returning the length. I didn\\'t realize I didn\\'t have to do it until you said so. Makes sense, though, since you return an int but the output is still an array."
                    },
                    {
                        "username": "Shmormius",
                        "content": "Oh my god, I was going to lose it, I knew something was weird but I couldn\\'t figure out what."
                    },
                    {
                        "username": "NovaVirusXander",
                        "content": "OMG... I was literally going \"Dafuq is going on\" for like 10 mins. Ty so much man #broFist"
                    },
                    {
                        "username": "imanulhuq",
                        "content": "Thank you\\nI was gone mad "
                    },
                    {
                        "username": "emily971133",
                        "content": "if I assign the correct list to the original list (nums), it still responses error...\\nso it seems that we really need to mutate the value of original list(nums)"
                    },
                    {
                        "username": "kuvi41",
                        "content": "Drove me crazy too. Thank god I read this comment, Or else I would have wasted another day. "
                    },
                    {
                        "username": "abobakr",
                        "content": "I don\\'t think. They check the array `nums`  try even without return any thing you will pass some test"
                    },
                    {
                        "username": "Levidps",
                        "content": "Agree! Personally I\\'m not a fan that it actually mutates the original value. This is fine for a problem here but in a real project I\\'d rather avoid this mutation..."
                    },
                    {
                        "username": "Aleton",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You modify the nums array, but you only return k."
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "So in the end what do I have to return? Wheter I return either K or the res array it gives me error"
                    },
                    {
                        "username": "TYork",
                        "content": "Poorly worded then"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "Maybe that is why my solution is not working here but it works in my code editor"
                    },
                    {
                        "username": "venusli370306",
                        "content": "I was on a train and this question buzzed me this whole way. "
                    },
                    {
                        "username": "roman-smal",
                        "content": "whereas in JS you should remove duplicates \\uD83E\\uDD2F"
                    },
                    {
                        "username": "FE_Developer2022",
                        "content": "Thanks man, this is why leetcode sucks. I\\'m heading back to hackerrank"
                    },
                    {
                        "username": "saraahmed2693",
                        "content": "You saved my day! It was driving me crazy!!\\nThank you so much"
                    },
                    {
                        "username": "mukadas026",
                        "content": "seriously man, thanks\\nthey didn\\'t make that very clear in the instructions\\nplus, in the console they don\\'t output what I return, which imo is kinda weird"
                    },
                    {
                        "username": "nrrahul4",
                        "content": "Crazy fellazz.. Thanks man.. You saved my time."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Thanks for that bud!"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "user1306Qa",
                        "content": "Thank you.. these instructions smh"
                    },
                    {
                        "username": "madmonkey95",
                        "content": "\"non-decreasing order\"... just call it ascending. What\\'s with the purposely confusing text?"
                    },
                    {
                        "username": "yunyxue",
                        "content": "Non-decreasing means the next value can be the same as the current one, so [1,1] is also a non-decreasing-order list"
                    },
                    {
                        "username": "acnpssyy",
                        "content": "[@Arshad-Siddiqui](/Arshad-Siddiqui) L to my English teacher he never told me"
                    },
                    {
                        "username": "Arshad-Siddiqui",
                        "content": "Increasing indicates that the values are always higher than the last. In this case the next value might be the same so it isn\\'t increasing. Saying non-decreasing is more descriptive."
                    },
                    {
                        "username": "NischayAgrawal",
                        "content": "Damn !! never knew this. Thanks discussion section."
                    },
                    {
                        "username": "Salman4M",
                        "content": "there is difference between them. For example you have \\'a\\' list .                          a = [1,2,2,3,4,5,6,7,8] .  There are two \\'2\\' and if you say it is  sorted by ascending it isn\\'t. Because 2 is equal to other 2 . So it means there is no ascending between them. If you say non - decreasing order then this rule suits to that list. "
                    },
                    {
                        "username": "cccccwwwww",
                        "content": "The term comes from mathematical analysis. They\\'re using very precise language to avoid any ambiguities. Non-decreasing means a[i+1] >= a[i] rather than (strictly) increasing which would mean a[i+1] > a[i]. You can read up on it here: https://en.wikipedia.org/wiki/Monotonic_function"
                    },
                    {
                        "username": "ReeceBailey",
                        "content": "fr tho :kek:"
                    },
                    {
                        "username": "AJC2k19",
                        "content": "it got to me too but i had to think about it. They\\'re just being very formal specifying non-decreasing since ascending by definition implies increasing; however in an array [1,1,2,2] the second 1 is not greater than than the first. non-decreasing definition holds true here."
                    },
                    {
                        "username": "mrcogllrdo",
                        "content": "[@KovDimaY](/KovDimaY) if that were the case then the majority of filters in the wild for organizing info would have \"non-decreasing\" instead of \"ascending\" as an option to account for duplicates. I have never seen \"non-decreasing\" except today...kinda seems like you came up with that strict definition of ascending out of nowhere."
                    },
                    {
                        "username": "w0rkerbee",
                        "content": "[@KovDimaY](/KovDimaY) the expected answers r literallyin ascending order....."
                    },
                    {
                        "username": "ArthurSPrado",
                        "content": "non-decreasing order = !(decreasing-order) = ascending.  Everything non decreasing is ascending. What\\'s with the purposely confusing mind?"
                    },
                    {
                        "username": "laurentiucozma12",
                        "content": "[@KovDimaY](/KovDimaY) I\\'m pretty sure everyone here including me thinks [1,2,2,3,4,4,5] is ascending and \"non-decreasing\" just makes it more confusing. Idk where you took the definition, if there is something official somewhere for those words please let me know."
                    },
                    {
                        "username": "mewsxd",
                        "content": "i laughed so loud because i was so angry when i read it lmaoo"
                    },
                    {
                        "username": "jdx-code",
                        "content": "haha.. I read that twice to convince myself.. lol"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "\"Non-decreasing\" order and \"ascending\" are different things. \"Ascending\" means that each next element should be strictly bigger than previous. For example: [1,2,3,4,5]. \"Non-decreasing\" means that several elements in a row can be equal, but next one cannot be smaller than previous. For example: [1,2,2,3,4,4,5]. Each \"ascending\" order is \"non-decreasing\" but not each \"non-decreasing\" is \"ascending\". Normally is used to emphasise that numbers can be repeated and kinda prepare us for that."
                    },
                    {
                        "username": "jungle_jim",
                        "content": "The problem says to return the number, _k_, elements after removing duplicates. I get an error returning an integer in Python. I also get an error returning an array with non-repeating _k_ elements and repeating elements after. Which is _also_ supposed to be acceptable."
                    },
                    {
                        "username": "mukadas026",
                        "content": "the instructions got me a bit confused for a while too, they just want `k` to be an integer (length of the sorted part of the array)"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "augustooalcides",
                        "content": "nums vector is passed by reference, so you can modify it by just removing the duplicate numbers"
                    },
                    {
                        "username": "christopherblodgett",
                        "content": "[@abhinav__19](/abhinav__19)  the instructions on this are horrible. You should just be returning the length of the array after it has been cleaned up. BUT, be sure you are modify nums and not creating a second array, because it is checking nums to make sure you removed the duplicates from it."
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Same here"
                    },
                    {
                        "username": "gutta",
                        "content": "hi is there any error in question in question they asked to return size of array after removing duplicates but in output they are showing array.\\ncould you recitify it guys"
                    },
                    {
                        "username": "0xsahilv",
                        "content": "actually they want us to sort array in a way so that all unique elements get to first "
                    },
                    {
                        "username": "rohitmallya",
                        "content": "I too feel the same"
                    },
                    {
                        "username": "zetlian",
                        "content": "[@abdurrahman6489](/abdurrahman6489) still doesnt work for me\\n"
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "And me! I\\'m 75 questions in and no issues - then I hit this one and boom! Sure there\\'s a problem here."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Return the length of the sorted array.\\nThey will verify the same with their function.\\nYour function should return len(nums[:sorted_elements])"
                    },
                    {
                        "username": "Yeyenash",
                        "content": "I have exactly the same question! Who can explain this to us? \\uD83D\\uDE2D"
                    },
                    {
                        "username": "abdurrahman6489",
                        "content": "in the function it is type int. return the value of K. only\\n"
                    },
                    {
                        "username": "iq45y8i",
                        "content": "Answer is expecting an Array (duplicate removed). But the function has return type as int (single element). Please clarify"
                    },
                    {
                        "username": "Simo_Ben_Eckert",
                        "content": "They want you to modify nums but not return it. It is still ebing tested how nums is structured afterwards tho. What you are supposed to return is the length of the sorted part!"
                    },
                    {
                        "username": "shekhaman213",
                        "content": "Array (nums) is passed by reference in the function removeDuplicates , hence any changes in array will be reflected to the nums through its whole scope (outside the function as well)"
                    },
                    {
                        "username": "taychap",
                        "content": "Also note that the question is asking you to mutate the array passed into the function, not return it"
                    },
                    {
                        "username": "Nousie_94",
                        "content": "Answer is expecting the integer \"k\", which is meant in the description."
                    },
                    {
                        "username": "quantupus",
                        "content": "This is a terribly worded question and should be removed, also it is a ridiculously easy problem with a simple list(set(nums)) in python, but this doesn\\'t work due to weird test case things. Please remove this question from leetcode"
                    },
                    {
                        "username": "Coder_Rick",
                        "content": "[@falguni_mutha](/falguni_mutha) I try to solve this easy question using java Set that working fine in intelliJ text editor but here does not work due to the test cases.... "
                    },
                    {
                        "username": "jlgarcia_",
                        "content": "While I partly agree with you, doing `list(set(nums))` creates a new object. Thus, it doesn\\'t mutate the initial list itself, but creates a new one. The output still is the same tho."
                    },
                    {
                        "username": "falguni_mutha",
                        "content": "oh oh oh. I literally t=did this. The question is absolutely terrible. If the wanted the modified array ask for that. The test cases are so stupid"
                    },
                    {
                        "username": "ogorbatchev",
                        "content": "Hey guys, \\n\\nI just finished the exercice and by looking at some solutions, and worse, the solution given by leetcode .. it doesn\\'t remove the duplicate from the array. \\n\\nI mean you have the pointer to this array, and the function name is REMOVE DUPLICATES, the solution clearly doesn\\'t remove them but just put the values in the beginning of the array. \\n\\nMeh, i wanted to say it :p\\nI am furstrated to see this solution that doesn\\'t actually solve the problem \\uD83D\\uDE05\\n\\nWish you guys a good day/night!"
                    },
                    {
                        "username": "therohitbansal4",
                        "content": "Good afternoon /evening \\uD83D\\uDE05"
                    },
                    {
                        "username": "syx_data",
                        "content": "describe:\\nyou must do this by modifying the input array in-place with O(1) extra memory\\uFF0Cwhat does o(1)exrea memory mean\\n"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "[@Nousie_94](/Nousie_94) dude then why return len(list(set(nums))) does not work its senseless"
                    },
                    {
                        "username": "antoniojsp",
                        "content": "when you see 0(1), it means that the memory used would be the same if the array has 10 elements or one million."
                    },
                    {
                        "username": "Nousie_94",
                        "content": "that means, that you are not allowed to allocate new memory which space depends on the number of elements.\\n\\nIn other words: No matter how many elements in \"nums\" are, your code is not allowed to use more memory (except frorm the array \"nums\" itself, of course)."
                    },
                    {
                        "username": "hem_ajet",
                        "content": "![image](https://assets.leetcode.com/users/yhemanth_teja/image_1557658638.png)\\n"
                    },
                    {
                        "username": "munu8998rai",
                        "content": "[@rajdeepbiswas](/rajdeepbiswas) its working fine without that also!\\n"
                    },
                    {
                        "username": "rajdeepbiswas",
                        "content": "Late comment: is there an usage of the ptr variable that I am missing?"
                    },
                    {
                        "username": "ak_ghoul",
                        "content": "There\\'s this thing on leetcode that we are not allowed to write main function. There can be various ways possible to write code on basis of how things are at main function.\\n*I am having a problem to write code without seeing the main function. *\\nCan somebody tell me how to view it?"
                    },
                    {
                        "username": "bm9avan",
                        "content": " public static void main(String[] args) {\\n        int[] arr ={1,1,2,3};\\n        int i=removeDuplicates(arr);\\n        System.out.println(Arrays.toString(arr)+\"  \"+ i);\\n    }\\njust assume there is nothing execpt declares required values to call given function and print answer"
                    },
                    {
                        "username": "suatozkaya",
                        "content": "[@aryanabraham](/aryanabraham) Hi, this is actually how object oriented programming is implemented. In a real project you do not see what is happening outside of your object. You must code in such a way that, your object should encapsulate the method and just work as expected like here."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "aryanabraham",
                        "content": "Hey ak_ghoul!\\nLeetCode doesn\\'t  let you view the main function; only the function that does the prescribed task is viewable/editable. This is reminiscent of the type of problems one gets in most technical interviews. \\n\\nHappy LeetCoding!"
                    }
                ]
            },
            {
                "id": 1566956,
                "content": [
                    {
                        "username": "nvythedead",
                        "content": "They don\\'t really want you to remove the duplicates. They want you to sort the uniques at the front, then return the length of the sorted part. Then, behind the scenes, they slice the array at the length you give them and the result of that is what they check.\\n\\nJust FYI, this sh_t drove me crazy..."
                    },
                    {
                        "username": "NotAMoose",
                        "content": "Thank you, was ripping my hair out "
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You have to return the correct length of the de-duped array. But when you do the array itself has to be sorted with uniques at the front. You can slice off the extra ones yourself but the judge script is going to do it for you anyway so it\\'s less efficient."
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Nothing stopping you from setting a new array length yourself before returning the length. I didn\\'t realize I didn\\'t have to do it until you said so. Makes sense, though, since you return an int but the output is still an array."
                    },
                    {
                        "username": "Shmormius",
                        "content": "Oh my god, I was going to lose it, I knew something was weird but I couldn\\'t figure out what."
                    },
                    {
                        "username": "NovaVirusXander",
                        "content": "OMG... I was literally going \"Dafuq is going on\" for like 10 mins. Ty so much man #broFist"
                    },
                    {
                        "username": "imanulhuq",
                        "content": "Thank you\\nI was gone mad "
                    },
                    {
                        "username": "emily971133",
                        "content": "if I assign the correct list to the original list (nums), it still responses error...\\nso it seems that we really need to mutate the value of original list(nums)"
                    },
                    {
                        "username": "kuvi41",
                        "content": "Drove me crazy too. Thank god I read this comment, Or else I would have wasted another day. "
                    },
                    {
                        "username": "abobakr",
                        "content": "I don\\'t think. They check the array `nums`  try even without return any thing you will pass some test"
                    },
                    {
                        "username": "Levidps",
                        "content": "Agree! Personally I\\'m not a fan that it actually mutates the original value. This is fine for a problem here but in a real project I\\'d rather avoid this mutation..."
                    },
                    {
                        "username": "Aleton",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You modify the nums array, but you only return k."
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "So in the end what do I have to return? Wheter I return either K or the res array it gives me error"
                    },
                    {
                        "username": "TYork",
                        "content": "Poorly worded then"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "Maybe that is why my solution is not working here but it works in my code editor"
                    },
                    {
                        "username": "venusli370306",
                        "content": "I was on a train and this question buzzed me this whole way. "
                    },
                    {
                        "username": "roman-smal",
                        "content": "whereas in JS you should remove duplicates \\uD83E\\uDD2F"
                    },
                    {
                        "username": "FE_Developer2022",
                        "content": "Thanks man, this is why leetcode sucks. I\\'m heading back to hackerrank"
                    },
                    {
                        "username": "saraahmed2693",
                        "content": "You saved my day! It was driving me crazy!!\\nThank you so much"
                    },
                    {
                        "username": "mukadas026",
                        "content": "seriously man, thanks\\nthey didn\\'t make that very clear in the instructions\\nplus, in the console they don\\'t output what I return, which imo is kinda weird"
                    },
                    {
                        "username": "nrrahul4",
                        "content": "Crazy fellazz.. Thanks man.. You saved my time."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Thanks for that bud!"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "user1306Qa",
                        "content": "Thank you.. these instructions smh"
                    },
                    {
                        "username": "madmonkey95",
                        "content": "\"non-decreasing order\"... just call it ascending. What\\'s with the purposely confusing text?"
                    },
                    {
                        "username": "yunyxue",
                        "content": "Non-decreasing means the next value can be the same as the current one, so [1,1] is also a non-decreasing-order list"
                    },
                    {
                        "username": "acnpssyy",
                        "content": "[@Arshad-Siddiqui](/Arshad-Siddiqui) L to my English teacher he never told me"
                    },
                    {
                        "username": "Arshad-Siddiqui",
                        "content": "Increasing indicates that the values are always higher than the last. In this case the next value might be the same so it isn\\'t increasing. Saying non-decreasing is more descriptive."
                    },
                    {
                        "username": "NischayAgrawal",
                        "content": "Damn !! never knew this. Thanks discussion section."
                    },
                    {
                        "username": "Salman4M",
                        "content": "there is difference between them. For example you have \\'a\\' list .                          a = [1,2,2,3,4,5,6,7,8] .  There are two \\'2\\' and if you say it is  sorted by ascending it isn\\'t. Because 2 is equal to other 2 . So it means there is no ascending between them. If you say non - decreasing order then this rule suits to that list. "
                    },
                    {
                        "username": "cccccwwwww",
                        "content": "The term comes from mathematical analysis. They\\'re using very precise language to avoid any ambiguities. Non-decreasing means a[i+1] >= a[i] rather than (strictly) increasing which would mean a[i+1] > a[i]. You can read up on it here: https://en.wikipedia.org/wiki/Monotonic_function"
                    },
                    {
                        "username": "ReeceBailey",
                        "content": "fr tho :kek:"
                    },
                    {
                        "username": "AJC2k19",
                        "content": "it got to me too but i had to think about it. They\\'re just being very formal specifying non-decreasing since ascending by definition implies increasing; however in an array [1,1,2,2] the second 1 is not greater than than the first. non-decreasing definition holds true here."
                    },
                    {
                        "username": "mrcogllrdo",
                        "content": "[@KovDimaY](/KovDimaY) if that were the case then the majority of filters in the wild for organizing info would have \"non-decreasing\" instead of \"ascending\" as an option to account for duplicates. I have never seen \"non-decreasing\" except today...kinda seems like you came up with that strict definition of ascending out of nowhere."
                    },
                    {
                        "username": "w0rkerbee",
                        "content": "[@KovDimaY](/KovDimaY) the expected answers r literallyin ascending order....."
                    },
                    {
                        "username": "ArthurSPrado",
                        "content": "non-decreasing order = !(decreasing-order) = ascending.  Everything non decreasing is ascending. What\\'s with the purposely confusing mind?"
                    },
                    {
                        "username": "laurentiucozma12",
                        "content": "[@KovDimaY](/KovDimaY) I\\'m pretty sure everyone here including me thinks [1,2,2,3,4,4,5] is ascending and \"non-decreasing\" just makes it more confusing. Idk where you took the definition, if there is something official somewhere for those words please let me know."
                    },
                    {
                        "username": "mewsxd",
                        "content": "i laughed so loud because i was so angry when i read it lmaoo"
                    },
                    {
                        "username": "jdx-code",
                        "content": "haha.. I read that twice to convince myself.. lol"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "\"Non-decreasing\" order and \"ascending\" are different things. \"Ascending\" means that each next element should be strictly bigger than previous. For example: [1,2,3,4,5]. \"Non-decreasing\" means that several elements in a row can be equal, but next one cannot be smaller than previous. For example: [1,2,2,3,4,4,5]. Each \"ascending\" order is \"non-decreasing\" but not each \"non-decreasing\" is \"ascending\". Normally is used to emphasise that numbers can be repeated and kinda prepare us for that."
                    },
                    {
                        "username": "jungle_jim",
                        "content": "The problem says to return the number, _k_, elements after removing duplicates. I get an error returning an integer in Python. I also get an error returning an array with non-repeating _k_ elements and repeating elements after. Which is _also_ supposed to be acceptable."
                    },
                    {
                        "username": "mukadas026",
                        "content": "the instructions got me a bit confused for a while too, they just want `k` to be an integer (length of the sorted part of the array)"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "augustooalcides",
                        "content": "nums vector is passed by reference, so you can modify it by just removing the duplicate numbers"
                    },
                    {
                        "username": "christopherblodgett",
                        "content": "[@abhinav__19](/abhinav__19)  the instructions on this are horrible. You should just be returning the length of the array after it has been cleaned up. BUT, be sure you are modify nums and not creating a second array, because it is checking nums to make sure you removed the duplicates from it."
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Same here"
                    },
                    {
                        "username": "gutta",
                        "content": "hi is there any error in question in question they asked to return size of array after removing duplicates but in output they are showing array.\\ncould you recitify it guys"
                    },
                    {
                        "username": "0xsahilv",
                        "content": "actually they want us to sort array in a way so that all unique elements get to first "
                    },
                    {
                        "username": "rohitmallya",
                        "content": "I too feel the same"
                    },
                    {
                        "username": "zetlian",
                        "content": "[@abdurrahman6489](/abdurrahman6489) still doesnt work for me\\n"
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "And me! I\\'m 75 questions in and no issues - then I hit this one and boom! Sure there\\'s a problem here."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Return the length of the sorted array.\\nThey will verify the same with their function.\\nYour function should return len(nums[:sorted_elements])"
                    },
                    {
                        "username": "Yeyenash",
                        "content": "I have exactly the same question! Who can explain this to us? \\uD83D\\uDE2D"
                    },
                    {
                        "username": "abdurrahman6489",
                        "content": "in the function it is type int. return the value of K. only\\n"
                    },
                    {
                        "username": "iq45y8i",
                        "content": "Answer is expecting an Array (duplicate removed). But the function has return type as int (single element). Please clarify"
                    },
                    {
                        "username": "Simo_Ben_Eckert",
                        "content": "They want you to modify nums but not return it. It is still ebing tested how nums is structured afterwards tho. What you are supposed to return is the length of the sorted part!"
                    },
                    {
                        "username": "shekhaman213",
                        "content": "Array (nums) is passed by reference in the function removeDuplicates , hence any changes in array will be reflected to the nums through its whole scope (outside the function as well)"
                    },
                    {
                        "username": "taychap",
                        "content": "Also note that the question is asking you to mutate the array passed into the function, not return it"
                    },
                    {
                        "username": "Nousie_94",
                        "content": "Answer is expecting the integer \"k\", which is meant in the description."
                    },
                    {
                        "username": "quantupus",
                        "content": "This is a terribly worded question and should be removed, also it is a ridiculously easy problem with a simple list(set(nums)) in python, but this doesn\\'t work due to weird test case things. Please remove this question from leetcode"
                    },
                    {
                        "username": "Coder_Rick",
                        "content": "[@falguni_mutha](/falguni_mutha) I try to solve this easy question using java Set that working fine in intelliJ text editor but here does not work due to the test cases.... "
                    },
                    {
                        "username": "jlgarcia_",
                        "content": "While I partly agree with you, doing `list(set(nums))` creates a new object. Thus, it doesn\\'t mutate the initial list itself, but creates a new one. The output still is the same tho."
                    },
                    {
                        "username": "falguni_mutha",
                        "content": "oh oh oh. I literally t=did this. The question is absolutely terrible. If the wanted the modified array ask for that. The test cases are so stupid"
                    },
                    {
                        "username": "ogorbatchev",
                        "content": "Hey guys, \\n\\nI just finished the exercice and by looking at some solutions, and worse, the solution given by leetcode .. it doesn\\'t remove the duplicate from the array. \\n\\nI mean you have the pointer to this array, and the function name is REMOVE DUPLICATES, the solution clearly doesn\\'t remove them but just put the values in the beginning of the array. \\n\\nMeh, i wanted to say it :p\\nI am furstrated to see this solution that doesn\\'t actually solve the problem \\uD83D\\uDE05\\n\\nWish you guys a good day/night!"
                    },
                    {
                        "username": "therohitbansal4",
                        "content": "Good afternoon /evening \\uD83D\\uDE05"
                    },
                    {
                        "username": "syx_data",
                        "content": "describe:\\nyou must do this by modifying the input array in-place with O(1) extra memory\\uFF0Cwhat does o(1)exrea memory mean\\n"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "[@Nousie_94](/Nousie_94) dude then why return len(list(set(nums))) does not work its senseless"
                    },
                    {
                        "username": "antoniojsp",
                        "content": "when you see 0(1), it means that the memory used would be the same if the array has 10 elements or one million."
                    },
                    {
                        "username": "Nousie_94",
                        "content": "that means, that you are not allowed to allocate new memory which space depends on the number of elements.\\n\\nIn other words: No matter how many elements in \"nums\" are, your code is not allowed to use more memory (except frorm the array \"nums\" itself, of course)."
                    },
                    {
                        "username": "hem_ajet",
                        "content": "![image](https://assets.leetcode.com/users/yhemanth_teja/image_1557658638.png)\\n"
                    },
                    {
                        "username": "munu8998rai",
                        "content": "[@rajdeepbiswas](/rajdeepbiswas) its working fine without that also!\\n"
                    },
                    {
                        "username": "rajdeepbiswas",
                        "content": "Late comment: is there an usage of the ptr variable that I am missing?"
                    },
                    {
                        "username": "ak_ghoul",
                        "content": "There\\'s this thing on leetcode that we are not allowed to write main function. There can be various ways possible to write code on basis of how things are at main function.\\n*I am having a problem to write code without seeing the main function. *\\nCan somebody tell me how to view it?"
                    },
                    {
                        "username": "bm9avan",
                        "content": " public static void main(String[] args) {\\n        int[] arr ={1,1,2,3};\\n        int i=removeDuplicates(arr);\\n        System.out.println(Arrays.toString(arr)+\"  \"+ i);\\n    }\\njust assume there is nothing execpt declares required values to call given function and print answer"
                    },
                    {
                        "username": "suatozkaya",
                        "content": "[@aryanabraham](/aryanabraham) Hi, this is actually how object oriented programming is implemented. In a real project you do not see what is happening outside of your object. You must code in such a way that, your object should encapsulate the method and just work as expected like here."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "aryanabraham",
                        "content": "Hey ak_ghoul!\\nLeetCode doesn\\'t  let you view the main function; only the function that does the prescribed task is viewable/editable. This is reminiscent of the type of problems one gets in most technical interviews. \\n\\nHappy LeetCoding!"
                    }
                ]
            },
            {
                "id": 1747010,
                "content": [
                    {
                        "username": "nvythedead",
                        "content": "They don\\'t really want you to remove the duplicates. They want you to sort the uniques at the front, then return the length of the sorted part. Then, behind the scenes, they slice the array at the length you give them and the result of that is what they check.\\n\\nJust FYI, this sh_t drove me crazy..."
                    },
                    {
                        "username": "NotAMoose",
                        "content": "Thank you, was ripping my hair out "
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You have to return the correct length of the de-duped array. But when you do the array itself has to be sorted with uniques at the front. You can slice off the extra ones yourself but the judge script is going to do it for you anyway so it\\'s less efficient."
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Nothing stopping you from setting a new array length yourself before returning the length. I didn\\'t realize I didn\\'t have to do it until you said so. Makes sense, though, since you return an int but the output is still an array."
                    },
                    {
                        "username": "Shmormius",
                        "content": "Oh my god, I was going to lose it, I knew something was weird but I couldn\\'t figure out what."
                    },
                    {
                        "username": "NovaVirusXander",
                        "content": "OMG... I was literally going \"Dafuq is going on\" for like 10 mins. Ty so much man #broFist"
                    },
                    {
                        "username": "imanulhuq",
                        "content": "Thank you\\nI was gone mad "
                    },
                    {
                        "username": "emily971133",
                        "content": "if I assign the correct list to the original list (nums), it still responses error...\\nso it seems that we really need to mutate the value of original list(nums)"
                    },
                    {
                        "username": "kuvi41",
                        "content": "Drove me crazy too. Thank god I read this comment, Or else I would have wasted another day. "
                    },
                    {
                        "username": "abobakr",
                        "content": "I don\\'t think. They check the array `nums`  try even without return any thing you will pass some test"
                    },
                    {
                        "username": "Levidps",
                        "content": "Agree! Personally I\\'m not a fan that it actually mutates the original value. This is fine for a problem here but in a real project I\\'d rather avoid this mutation..."
                    },
                    {
                        "username": "Aleton",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You modify the nums array, but you only return k."
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "So in the end what do I have to return? Wheter I return either K or the res array it gives me error"
                    },
                    {
                        "username": "TYork",
                        "content": "Poorly worded then"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "Maybe that is why my solution is not working here but it works in my code editor"
                    },
                    {
                        "username": "venusli370306",
                        "content": "I was on a train and this question buzzed me this whole way. "
                    },
                    {
                        "username": "roman-smal",
                        "content": "whereas in JS you should remove duplicates \\uD83E\\uDD2F"
                    },
                    {
                        "username": "FE_Developer2022",
                        "content": "Thanks man, this is why leetcode sucks. I\\'m heading back to hackerrank"
                    },
                    {
                        "username": "saraahmed2693",
                        "content": "You saved my day! It was driving me crazy!!\\nThank you so much"
                    },
                    {
                        "username": "mukadas026",
                        "content": "seriously man, thanks\\nthey didn\\'t make that very clear in the instructions\\nplus, in the console they don\\'t output what I return, which imo is kinda weird"
                    },
                    {
                        "username": "nrrahul4",
                        "content": "Crazy fellazz.. Thanks man.. You saved my time."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Thanks for that bud!"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "user1306Qa",
                        "content": "Thank you.. these instructions smh"
                    },
                    {
                        "username": "madmonkey95",
                        "content": "\"non-decreasing order\"... just call it ascending. What\\'s with the purposely confusing text?"
                    },
                    {
                        "username": "yunyxue",
                        "content": "Non-decreasing means the next value can be the same as the current one, so [1,1] is also a non-decreasing-order list"
                    },
                    {
                        "username": "acnpssyy",
                        "content": "[@Arshad-Siddiqui](/Arshad-Siddiqui) L to my English teacher he never told me"
                    },
                    {
                        "username": "Arshad-Siddiqui",
                        "content": "Increasing indicates that the values are always higher than the last. In this case the next value might be the same so it isn\\'t increasing. Saying non-decreasing is more descriptive."
                    },
                    {
                        "username": "NischayAgrawal",
                        "content": "Damn !! never knew this. Thanks discussion section."
                    },
                    {
                        "username": "Salman4M",
                        "content": "there is difference between them. For example you have \\'a\\' list .                          a = [1,2,2,3,4,5,6,7,8] .  There are two \\'2\\' and if you say it is  sorted by ascending it isn\\'t. Because 2 is equal to other 2 . So it means there is no ascending between them. If you say non - decreasing order then this rule suits to that list. "
                    },
                    {
                        "username": "cccccwwwww",
                        "content": "The term comes from mathematical analysis. They\\'re using very precise language to avoid any ambiguities. Non-decreasing means a[i+1] >= a[i] rather than (strictly) increasing which would mean a[i+1] > a[i]. You can read up on it here: https://en.wikipedia.org/wiki/Monotonic_function"
                    },
                    {
                        "username": "ReeceBailey",
                        "content": "fr tho :kek:"
                    },
                    {
                        "username": "AJC2k19",
                        "content": "it got to me too but i had to think about it. They\\'re just being very formal specifying non-decreasing since ascending by definition implies increasing; however in an array [1,1,2,2] the second 1 is not greater than than the first. non-decreasing definition holds true here."
                    },
                    {
                        "username": "mrcogllrdo",
                        "content": "[@KovDimaY](/KovDimaY) if that were the case then the majority of filters in the wild for organizing info would have \"non-decreasing\" instead of \"ascending\" as an option to account for duplicates. I have never seen \"non-decreasing\" except today...kinda seems like you came up with that strict definition of ascending out of nowhere."
                    },
                    {
                        "username": "w0rkerbee",
                        "content": "[@KovDimaY](/KovDimaY) the expected answers r literallyin ascending order....."
                    },
                    {
                        "username": "ArthurSPrado",
                        "content": "non-decreasing order = !(decreasing-order) = ascending.  Everything non decreasing is ascending. What\\'s with the purposely confusing mind?"
                    },
                    {
                        "username": "laurentiucozma12",
                        "content": "[@KovDimaY](/KovDimaY) I\\'m pretty sure everyone here including me thinks [1,2,2,3,4,4,5] is ascending and \"non-decreasing\" just makes it more confusing. Idk where you took the definition, if there is something official somewhere for those words please let me know."
                    },
                    {
                        "username": "mewsxd",
                        "content": "i laughed so loud because i was so angry when i read it lmaoo"
                    },
                    {
                        "username": "jdx-code",
                        "content": "haha.. I read that twice to convince myself.. lol"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "\"Non-decreasing\" order and \"ascending\" are different things. \"Ascending\" means that each next element should be strictly bigger than previous. For example: [1,2,3,4,5]. \"Non-decreasing\" means that several elements in a row can be equal, but next one cannot be smaller than previous. For example: [1,2,2,3,4,4,5]. Each \"ascending\" order is \"non-decreasing\" but not each \"non-decreasing\" is \"ascending\". Normally is used to emphasise that numbers can be repeated and kinda prepare us for that."
                    },
                    {
                        "username": "jungle_jim",
                        "content": "The problem says to return the number, _k_, elements after removing duplicates. I get an error returning an integer in Python. I also get an error returning an array with non-repeating _k_ elements and repeating elements after. Which is _also_ supposed to be acceptable."
                    },
                    {
                        "username": "mukadas026",
                        "content": "the instructions got me a bit confused for a while too, they just want `k` to be an integer (length of the sorted part of the array)"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "augustooalcides",
                        "content": "nums vector is passed by reference, so you can modify it by just removing the duplicate numbers"
                    },
                    {
                        "username": "christopherblodgett",
                        "content": "[@abhinav__19](/abhinav__19)  the instructions on this are horrible. You should just be returning the length of the array after it has been cleaned up. BUT, be sure you are modify nums and not creating a second array, because it is checking nums to make sure you removed the duplicates from it."
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Same here"
                    },
                    {
                        "username": "gutta",
                        "content": "hi is there any error in question in question they asked to return size of array after removing duplicates but in output they are showing array.\\ncould you recitify it guys"
                    },
                    {
                        "username": "0xsahilv",
                        "content": "actually they want us to sort array in a way so that all unique elements get to first "
                    },
                    {
                        "username": "rohitmallya",
                        "content": "I too feel the same"
                    },
                    {
                        "username": "zetlian",
                        "content": "[@abdurrahman6489](/abdurrahman6489) still doesnt work for me\\n"
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "And me! I\\'m 75 questions in and no issues - then I hit this one and boom! Sure there\\'s a problem here."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Return the length of the sorted array.\\nThey will verify the same with their function.\\nYour function should return len(nums[:sorted_elements])"
                    },
                    {
                        "username": "Yeyenash",
                        "content": "I have exactly the same question! Who can explain this to us? \\uD83D\\uDE2D"
                    },
                    {
                        "username": "abdurrahman6489",
                        "content": "in the function it is type int. return the value of K. only\\n"
                    },
                    {
                        "username": "iq45y8i",
                        "content": "Answer is expecting an Array (duplicate removed). But the function has return type as int (single element). Please clarify"
                    },
                    {
                        "username": "Simo_Ben_Eckert",
                        "content": "They want you to modify nums but not return it. It is still ebing tested how nums is structured afterwards tho. What you are supposed to return is the length of the sorted part!"
                    },
                    {
                        "username": "shekhaman213",
                        "content": "Array (nums) is passed by reference in the function removeDuplicates , hence any changes in array will be reflected to the nums through its whole scope (outside the function as well)"
                    },
                    {
                        "username": "taychap",
                        "content": "Also note that the question is asking you to mutate the array passed into the function, not return it"
                    },
                    {
                        "username": "Nousie_94",
                        "content": "Answer is expecting the integer \"k\", which is meant in the description."
                    },
                    {
                        "username": "quantupus",
                        "content": "This is a terribly worded question and should be removed, also it is a ridiculously easy problem with a simple list(set(nums)) in python, but this doesn\\'t work due to weird test case things. Please remove this question from leetcode"
                    },
                    {
                        "username": "Coder_Rick",
                        "content": "[@falguni_mutha](/falguni_mutha) I try to solve this easy question using java Set that working fine in intelliJ text editor but here does not work due to the test cases.... "
                    },
                    {
                        "username": "jlgarcia_",
                        "content": "While I partly agree with you, doing `list(set(nums))` creates a new object. Thus, it doesn\\'t mutate the initial list itself, but creates a new one. The output still is the same tho."
                    },
                    {
                        "username": "falguni_mutha",
                        "content": "oh oh oh. I literally t=did this. The question is absolutely terrible. If the wanted the modified array ask for that. The test cases are so stupid"
                    },
                    {
                        "username": "ogorbatchev",
                        "content": "Hey guys, \\n\\nI just finished the exercice and by looking at some solutions, and worse, the solution given by leetcode .. it doesn\\'t remove the duplicate from the array. \\n\\nI mean you have the pointer to this array, and the function name is REMOVE DUPLICATES, the solution clearly doesn\\'t remove them but just put the values in the beginning of the array. \\n\\nMeh, i wanted to say it :p\\nI am furstrated to see this solution that doesn\\'t actually solve the problem \\uD83D\\uDE05\\n\\nWish you guys a good day/night!"
                    },
                    {
                        "username": "therohitbansal4",
                        "content": "Good afternoon /evening \\uD83D\\uDE05"
                    },
                    {
                        "username": "syx_data",
                        "content": "describe:\\nyou must do this by modifying the input array in-place with O(1) extra memory\\uFF0Cwhat does o(1)exrea memory mean\\n"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "[@Nousie_94](/Nousie_94) dude then why return len(list(set(nums))) does not work its senseless"
                    },
                    {
                        "username": "antoniojsp",
                        "content": "when you see 0(1), it means that the memory used would be the same if the array has 10 elements or one million."
                    },
                    {
                        "username": "Nousie_94",
                        "content": "that means, that you are not allowed to allocate new memory which space depends on the number of elements.\\n\\nIn other words: No matter how many elements in \"nums\" are, your code is not allowed to use more memory (except frorm the array \"nums\" itself, of course)."
                    },
                    {
                        "username": "hem_ajet",
                        "content": "![image](https://assets.leetcode.com/users/yhemanth_teja/image_1557658638.png)\\n"
                    },
                    {
                        "username": "munu8998rai",
                        "content": "[@rajdeepbiswas](/rajdeepbiswas) its working fine without that also!\\n"
                    },
                    {
                        "username": "rajdeepbiswas",
                        "content": "Late comment: is there an usage of the ptr variable that I am missing?"
                    },
                    {
                        "username": "ak_ghoul",
                        "content": "There\\'s this thing on leetcode that we are not allowed to write main function. There can be various ways possible to write code on basis of how things are at main function.\\n*I am having a problem to write code without seeing the main function. *\\nCan somebody tell me how to view it?"
                    },
                    {
                        "username": "bm9avan",
                        "content": " public static void main(String[] args) {\\n        int[] arr ={1,1,2,3};\\n        int i=removeDuplicates(arr);\\n        System.out.println(Arrays.toString(arr)+\"  \"+ i);\\n    }\\njust assume there is nothing execpt declares required values to call given function and print answer"
                    },
                    {
                        "username": "suatozkaya",
                        "content": "[@aryanabraham](/aryanabraham) Hi, this is actually how object oriented programming is implemented. In a real project you do not see what is happening outside of your object. You must code in such a way that, your object should encapsulate the method and just work as expected like here."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "aryanabraham",
                        "content": "Hey ak_ghoul!\\nLeetCode doesn\\'t  let you view the main function; only the function that does the prescribed task is viewable/editable. This is reminiscent of the type of problems one gets in most technical interviews. \\n\\nHappy LeetCoding!"
                    }
                ]
            },
            {
                "id": 1566413,
                "content": [
                    {
                        "username": "nvythedead",
                        "content": "They don\\'t really want you to remove the duplicates. They want you to sort the uniques at the front, then return the length of the sorted part. Then, behind the scenes, they slice the array at the length you give them and the result of that is what they check.\\n\\nJust FYI, this sh_t drove me crazy..."
                    },
                    {
                        "username": "NotAMoose",
                        "content": "Thank you, was ripping my hair out "
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You have to return the correct length of the de-duped array. But when you do the array itself has to be sorted with uniques at the front. You can slice off the extra ones yourself but the judge script is going to do it for you anyway so it\\'s less efficient."
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Nothing stopping you from setting a new array length yourself before returning the length. I didn\\'t realize I didn\\'t have to do it until you said so. Makes sense, though, since you return an int but the output is still an array."
                    },
                    {
                        "username": "Shmormius",
                        "content": "Oh my god, I was going to lose it, I knew something was weird but I couldn\\'t figure out what."
                    },
                    {
                        "username": "NovaVirusXander",
                        "content": "OMG... I was literally going \"Dafuq is going on\" for like 10 mins. Ty so much man #broFist"
                    },
                    {
                        "username": "imanulhuq",
                        "content": "Thank you\\nI was gone mad "
                    },
                    {
                        "username": "emily971133",
                        "content": "if I assign the correct list to the original list (nums), it still responses error...\\nso it seems that we really need to mutate the value of original list(nums)"
                    },
                    {
                        "username": "kuvi41",
                        "content": "Drove me crazy too. Thank god I read this comment, Or else I would have wasted another day. "
                    },
                    {
                        "username": "abobakr",
                        "content": "I don\\'t think. They check the array `nums`  try even without return any thing you will pass some test"
                    },
                    {
                        "username": "Levidps",
                        "content": "Agree! Personally I\\'m not a fan that it actually mutates the original value. This is fine for a problem here but in a real project I\\'d rather avoid this mutation..."
                    },
                    {
                        "username": "Aleton",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You modify the nums array, but you only return k."
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "So in the end what do I have to return? Wheter I return either K or the res array it gives me error"
                    },
                    {
                        "username": "TYork",
                        "content": "Poorly worded then"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "Maybe that is why my solution is not working here but it works in my code editor"
                    },
                    {
                        "username": "venusli370306",
                        "content": "I was on a train and this question buzzed me this whole way. "
                    },
                    {
                        "username": "roman-smal",
                        "content": "whereas in JS you should remove duplicates \\uD83E\\uDD2F"
                    },
                    {
                        "username": "FE_Developer2022",
                        "content": "Thanks man, this is why leetcode sucks. I\\'m heading back to hackerrank"
                    },
                    {
                        "username": "saraahmed2693",
                        "content": "You saved my day! It was driving me crazy!!\\nThank you so much"
                    },
                    {
                        "username": "mukadas026",
                        "content": "seriously man, thanks\\nthey didn\\'t make that very clear in the instructions\\nplus, in the console they don\\'t output what I return, which imo is kinda weird"
                    },
                    {
                        "username": "nrrahul4",
                        "content": "Crazy fellazz.. Thanks man.. You saved my time."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Thanks for that bud!"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "user1306Qa",
                        "content": "Thank you.. these instructions smh"
                    },
                    {
                        "username": "madmonkey95",
                        "content": "\"non-decreasing order\"... just call it ascending. What\\'s with the purposely confusing text?"
                    },
                    {
                        "username": "yunyxue",
                        "content": "Non-decreasing means the next value can be the same as the current one, so [1,1] is also a non-decreasing-order list"
                    },
                    {
                        "username": "acnpssyy",
                        "content": "[@Arshad-Siddiqui](/Arshad-Siddiqui) L to my English teacher he never told me"
                    },
                    {
                        "username": "Arshad-Siddiqui",
                        "content": "Increasing indicates that the values are always higher than the last. In this case the next value might be the same so it isn\\'t increasing. Saying non-decreasing is more descriptive."
                    },
                    {
                        "username": "NischayAgrawal",
                        "content": "Damn !! never knew this. Thanks discussion section."
                    },
                    {
                        "username": "Salman4M",
                        "content": "there is difference between them. For example you have \\'a\\' list .                          a = [1,2,2,3,4,5,6,7,8] .  There are two \\'2\\' and if you say it is  sorted by ascending it isn\\'t. Because 2 is equal to other 2 . So it means there is no ascending between them. If you say non - decreasing order then this rule suits to that list. "
                    },
                    {
                        "username": "cccccwwwww",
                        "content": "The term comes from mathematical analysis. They\\'re using very precise language to avoid any ambiguities. Non-decreasing means a[i+1] >= a[i] rather than (strictly) increasing which would mean a[i+1] > a[i]. You can read up on it here: https://en.wikipedia.org/wiki/Monotonic_function"
                    },
                    {
                        "username": "ReeceBailey",
                        "content": "fr tho :kek:"
                    },
                    {
                        "username": "AJC2k19",
                        "content": "it got to me too but i had to think about it. They\\'re just being very formal specifying non-decreasing since ascending by definition implies increasing; however in an array [1,1,2,2] the second 1 is not greater than than the first. non-decreasing definition holds true here."
                    },
                    {
                        "username": "mrcogllrdo",
                        "content": "[@KovDimaY](/KovDimaY) if that were the case then the majority of filters in the wild for organizing info would have \"non-decreasing\" instead of \"ascending\" as an option to account for duplicates. I have never seen \"non-decreasing\" except today...kinda seems like you came up with that strict definition of ascending out of nowhere."
                    },
                    {
                        "username": "w0rkerbee",
                        "content": "[@KovDimaY](/KovDimaY) the expected answers r literallyin ascending order....."
                    },
                    {
                        "username": "ArthurSPrado",
                        "content": "non-decreasing order = !(decreasing-order) = ascending.  Everything non decreasing is ascending. What\\'s with the purposely confusing mind?"
                    },
                    {
                        "username": "laurentiucozma12",
                        "content": "[@KovDimaY](/KovDimaY) I\\'m pretty sure everyone here including me thinks [1,2,2,3,4,4,5] is ascending and \"non-decreasing\" just makes it more confusing. Idk where you took the definition, if there is something official somewhere for those words please let me know."
                    },
                    {
                        "username": "mewsxd",
                        "content": "i laughed so loud because i was so angry when i read it lmaoo"
                    },
                    {
                        "username": "jdx-code",
                        "content": "haha.. I read that twice to convince myself.. lol"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "\"Non-decreasing\" order and \"ascending\" are different things. \"Ascending\" means that each next element should be strictly bigger than previous. For example: [1,2,3,4,5]. \"Non-decreasing\" means that several elements in a row can be equal, but next one cannot be smaller than previous. For example: [1,2,2,3,4,4,5]. Each \"ascending\" order is \"non-decreasing\" but not each \"non-decreasing\" is \"ascending\". Normally is used to emphasise that numbers can be repeated and kinda prepare us for that."
                    },
                    {
                        "username": "jungle_jim",
                        "content": "The problem says to return the number, _k_, elements after removing duplicates. I get an error returning an integer in Python. I also get an error returning an array with non-repeating _k_ elements and repeating elements after. Which is _also_ supposed to be acceptable."
                    },
                    {
                        "username": "mukadas026",
                        "content": "the instructions got me a bit confused for a while too, they just want `k` to be an integer (length of the sorted part of the array)"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "augustooalcides",
                        "content": "nums vector is passed by reference, so you can modify it by just removing the duplicate numbers"
                    },
                    {
                        "username": "christopherblodgett",
                        "content": "[@abhinav__19](/abhinav__19)  the instructions on this are horrible. You should just be returning the length of the array after it has been cleaned up. BUT, be sure you are modify nums and not creating a second array, because it is checking nums to make sure you removed the duplicates from it."
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Same here"
                    },
                    {
                        "username": "gutta",
                        "content": "hi is there any error in question in question they asked to return size of array after removing duplicates but in output they are showing array.\\ncould you recitify it guys"
                    },
                    {
                        "username": "0xsahilv",
                        "content": "actually they want us to sort array in a way so that all unique elements get to first "
                    },
                    {
                        "username": "rohitmallya",
                        "content": "I too feel the same"
                    },
                    {
                        "username": "zetlian",
                        "content": "[@abdurrahman6489](/abdurrahman6489) still doesnt work for me\\n"
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "And me! I\\'m 75 questions in and no issues - then I hit this one and boom! Sure there\\'s a problem here."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Return the length of the sorted array.\\nThey will verify the same with their function.\\nYour function should return len(nums[:sorted_elements])"
                    },
                    {
                        "username": "Yeyenash",
                        "content": "I have exactly the same question! Who can explain this to us? \\uD83D\\uDE2D"
                    },
                    {
                        "username": "abdurrahman6489",
                        "content": "in the function it is type int. return the value of K. only\\n"
                    },
                    {
                        "username": "iq45y8i",
                        "content": "Answer is expecting an Array (duplicate removed). But the function has return type as int (single element). Please clarify"
                    },
                    {
                        "username": "Simo_Ben_Eckert",
                        "content": "They want you to modify nums but not return it. It is still ebing tested how nums is structured afterwards tho. What you are supposed to return is the length of the sorted part!"
                    },
                    {
                        "username": "shekhaman213",
                        "content": "Array (nums) is passed by reference in the function removeDuplicates , hence any changes in array will be reflected to the nums through its whole scope (outside the function as well)"
                    },
                    {
                        "username": "taychap",
                        "content": "Also note that the question is asking you to mutate the array passed into the function, not return it"
                    },
                    {
                        "username": "Nousie_94",
                        "content": "Answer is expecting the integer \"k\", which is meant in the description."
                    },
                    {
                        "username": "quantupus",
                        "content": "This is a terribly worded question and should be removed, also it is a ridiculously easy problem with a simple list(set(nums)) in python, but this doesn\\'t work due to weird test case things. Please remove this question from leetcode"
                    },
                    {
                        "username": "Coder_Rick",
                        "content": "[@falguni_mutha](/falguni_mutha) I try to solve this easy question using java Set that working fine in intelliJ text editor but here does not work due to the test cases.... "
                    },
                    {
                        "username": "jlgarcia_",
                        "content": "While I partly agree with you, doing `list(set(nums))` creates a new object. Thus, it doesn\\'t mutate the initial list itself, but creates a new one. The output still is the same tho."
                    },
                    {
                        "username": "falguni_mutha",
                        "content": "oh oh oh. I literally t=did this. The question is absolutely terrible. If the wanted the modified array ask for that. The test cases are so stupid"
                    },
                    {
                        "username": "ogorbatchev",
                        "content": "Hey guys, \\n\\nI just finished the exercice and by looking at some solutions, and worse, the solution given by leetcode .. it doesn\\'t remove the duplicate from the array. \\n\\nI mean you have the pointer to this array, and the function name is REMOVE DUPLICATES, the solution clearly doesn\\'t remove them but just put the values in the beginning of the array. \\n\\nMeh, i wanted to say it :p\\nI am furstrated to see this solution that doesn\\'t actually solve the problem \\uD83D\\uDE05\\n\\nWish you guys a good day/night!"
                    },
                    {
                        "username": "therohitbansal4",
                        "content": "Good afternoon /evening \\uD83D\\uDE05"
                    },
                    {
                        "username": "syx_data",
                        "content": "describe:\\nyou must do this by modifying the input array in-place with O(1) extra memory\\uFF0Cwhat does o(1)exrea memory mean\\n"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "[@Nousie_94](/Nousie_94) dude then why return len(list(set(nums))) does not work its senseless"
                    },
                    {
                        "username": "antoniojsp",
                        "content": "when you see 0(1), it means that the memory used would be the same if the array has 10 elements or one million."
                    },
                    {
                        "username": "Nousie_94",
                        "content": "that means, that you are not allowed to allocate new memory which space depends on the number of elements.\\n\\nIn other words: No matter how many elements in \"nums\" are, your code is not allowed to use more memory (except frorm the array \"nums\" itself, of course)."
                    },
                    {
                        "username": "hem_ajet",
                        "content": "![image](https://assets.leetcode.com/users/yhemanth_teja/image_1557658638.png)\\n"
                    },
                    {
                        "username": "munu8998rai",
                        "content": "[@rajdeepbiswas](/rajdeepbiswas) its working fine without that also!\\n"
                    },
                    {
                        "username": "rajdeepbiswas",
                        "content": "Late comment: is there an usage of the ptr variable that I am missing?"
                    },
                    {
                        "username": "ak_ghoul",
                        "content": "There\\'s this thing on leetcode that we are not allowed to write main function. There can be various ways possible to write code on basis of how things are at main function.\\n*I am having a problem to write code without seeing the main function. *\\nCan somebody tell me how to view it?"
                    },
                    {
                        "username": "bm9avan",
                        "content": " public static void main(String[] args) {\\n        int[] arr ={1,1,2,3};\\n        int i=removeDuplicates(arr);\\n        System.out.println(Arrays.toString(arr)+\"  \"+ i);\\n    }\\njust assume there is nothing execpt declares required values to call given function and print answer"
                    },
                    {
                        "username": "suatozkaya",
                        "content": "[@aryanabraham](/aryanabraham) Hi, this is actually how object oriented programming is implemented. In a real project you do not see what is happening outside of your object. You must code in such a way that, your object should encapsulate the method and just work as expected like here."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "aryanabraham",
                        "content": "Hey ak_ghoul!\\nLeetCode doesn\\'t  let you view the main function; only the function that does the prescribed task is viewable/editable. This is reminiscent of the type of problems one gets in most technical interviews. \\n\\nHappy LeetCoding!"
                    }
                ]
            },
            {
                "id": 1567170,
                "content": [
                    {
                        "username": "nvythedead",
                        "content": "They don\\'t really want you to remove the duplicates. They want you to sort the uniques at the front, then return the length of the sorted part. Then, behind the scenes, they slice the array at the length you give them and the result of that is what they check.\\n\\nJust FYI, this sh_t drove me crazy..."
                    },
                    {
                        "username": "NotAMoose",
                        "content": "Thank you, was ripping my hair out "
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You have to return the correct length of the de-duped array. But when you do the array itself has to be sorted with uniques at the front. You can slice off the extra ones yourself but the judge script is going to do it for you anyway so it\\'s less efficient."
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Nothing stopping you from setting a new array length yourself before returning the length. I didn\\'t realize I didn\\'t have to do it until you said so. Makes sense, though, since you return an int but the output is still an array."
                    },
                    {
                        "username": "Shmormius",
                        "content": "Oh my god, I was going to lose it, I knew something was weird but I couldn\\'t figure out what."
                    },
                    {
                        "username": "NovaVirusXander",
                        "content": "OMG... I was literally going \"Dafuq is going on\" for like 10 mins. Ty so much man #broFist"
                    },
                    {
                        "username": "imanulhuq",
                        "content": "Thank you\\nI was gone mad "
                    },
                    {
                        "username": "emily971133",
                        "content": "if I assign the correct list to the original list (nums), it still responses error...\\nso it seems that we really need to mutate the value of original list(nums)"
                    },
                    {
                        "username": "kuvi41",
                        "content": "Drove me crazy too. Thank god I read this comment, Or else I would have wasted another day. "
                    },
                    {
                        "username": "abobakr",
                        "content": "I don\\'t think. They check the array `nums`  try even without return any thing you will pass some test"
                    },
                    {
                        "username": "Levidps",
                        "content": "Agree! Personally I\\'m not a fan that it actually mutates the original value. This is fine for a problem here but in a real project I\\'d rather avoid this mutation..."
                    },
                    {
                        "username": "Aleton",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You modify the nums array, but you only return k."
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "So in the end what do I have to return? Wheter I return either K or the res array it gives me error"
                    },
                    {
                        "username": "TYork",
                        "content": "Poorly worded then"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "Maybe that is why my solution is not working here but it works in my code editor"
                    },
                    {
                        "username": "venusli370306",
                        "content": "I was on a train and this question buzzed me this whole way. "
                    },
                    {
                        "username": "roman-smal",
                        "content": "whereas in JS you should remove duplicates \\uD83E\\uDD2F"
                    },
                    {
                        "username": "FE_Developer2022",
                        "content": "Thanks man, this is why leetcode sucks. I\\'m heading back to hackerrank"
                    },
                    {
                        "username": "saraahmed2693",
                        "content": "You saved my day! It was driving me crazy!!\\nThank you so much"
                    },
                    {
                        "username": "mukadas026",
                        "content": "seriously man, thanks\\nthey didn\\'t make that very clear in the instructions\\nplus, in the console they don\\'t output what I return, which imo is kinda weird"
                    },
                    {
                        "username": "nrrahul4",
                        "content": "Crazy fellazz.. Thanks man.. You saved my time."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Thanks for that bud!"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "user1306Qa",
                        "content": "Thank you.. these instructions smh"
                    },
                    {
                        "username": "madmonkey95",
                        "content": "\"non-decreasing order\"... just call it ascending. What\\'s with the purposely confusing text?"
                    },
                    {
                        "username": "yunyxue",
                        "content": "Non-decreasing means the next value can be the same as the current one, so [1,1] is also a non-decreasing-order list"
                    },
                    {
                        "username": "acnpssyy",
                        "content": "[@Arshad-Siddiqui](/Arshad-Siddiqui) L to my English teacher he never told me"
                    },
                    {
                        "username": "Arshad-Siddiqui",
                        "content": "Increasing indicates that the values are always higher than the last. In this case the next value might be the same so it isn\\'t increasing. Saying non-decreasing is more descriptive."
                    },
                    {
                        "username": "NischayAgrawal",
                        "content": "Damn !! never knew this. Thanks discussion section."
                    },
                    {
                        "username": "Salman4M",
                        "content": "there is difference between them. For example you have \\'a\\' list .                          a = [1,2,2,3,4,5,6,7,8] .  There are two \\'2\\' and if you say it is  sorted by ascending it isn\\'t. Because 2 is equal to other 2 . So it means there is no ascending between them. If you say non - decreasing order then this rule suits to that list. "
                    },
                    {
                        "username": "cccccwwwww",
                        "content": "The term comes from mathematical analysis. They\\'re using very precise language to avoid any ambiguities. Non-decreasing means a[i+1] >= a[i] rather than (strictly) increasing which would mean a[i+1] > a[i]. You can read up on it here: https://en.wikipedia.org/wiki/Monotonic_function"
                    },
                    {
                        "username": "ReeceBailey",
                        "content": "fr tho :kek:"
                    },
                    {
                        "username": "AJC2k19",
                        "content": "it got to me too but i had to think about it. They\\'re just being very formal specifying non-decreasing since ascending by definition implies increasing; however in an array [1,1,2,2] the second 1 is not greater than than the first. non-decreasing definition holds true here."
                    },
                    {
                        "username": "mrcogllrdo",
                        "content": "[@KovDimaY](/KovDimaY) if that were the case then the majority of filters in the wild for organizing info would have \"non-decreasing\" instead of \"ascending\" as an option to account for duplicates. I have never seen \"non-decreasing\" except today...kinda seems like you came up with that strict definition of ascending out of nowhere."
                    },
                    {
                        "username": "w0rkerbee",
                        "content": "[@KovDimaY](/KovDimaY) the expected answers r literallyin ascending order....."
                    },
                    {
                        "username": "ArthurSPrado",
                        "content": "non-decreasing order = !(decreasing-order) = ascending.  Everything non decreasing is ascending. What\\'s with the purposely confusing mind?"
                    },
                    {
                        "username": "laurentiucozma12",
                        "content": "[@KovDimaY](/KovDimaY) I\\'m pretty sure everyone here including me thinks [1,2,2,3,4,4,5] is ascending and \"non-decreasing\" just makes it more confusing. Idk where you took the definition, if there is something official somewhere for those words please let me know."
                    },
                    {
                        "username": "mewsxd",
                        "content": "i laughed so loud because i was so angry when i read it lmaoo"
                    },
                    {
                        "username": "jdx-code",
                        "content": "haha.. I read that twice to convince myself.. lol"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "\"Non-decreasing\" order and \"ascending\" are different things. \"Ascending\" means that each next element should be strictly bigger than previous. For example: [1,2,3,4,5]. \"Non-decreasing\" means that several elements in a row can be equal, but next one cannot be smaller than previous. For example: [1,2,2,3,4,4,5]. Each \"ascending\" order is \"non-decreasing\" but not each \"non-decreasing\" is \"ascending\". Normally is used to emphasise that numbers can be repeated and kinda prepare us for that."
                    },
                    {
                        "username": "jungle_jim",
                        "content": "The problem says to return the number, _k_, elements after removing duplicates. I get an error returning an integer in Python. I also get an error returning an array with non-repeating _k_ elements and repeating elements after. Which is _also_ supposed to be acceptable."
                    },
                    {
                        "username": "mukadas026",
                        "content": "the instructions got me a bit confused for a while too, they just want `k` to be an integer (length of the sorted part of the array)"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "augustooalcides",
                        "content": "nums vector is passed by reference, so you can modify it by just removing the duplicate numbers"
                    },
                    {
                        "username": "christopherblodgett",
                        "content": "[@abhinav__19](/abhinav__19)  the instructions on this are horrible. You should just be returning the length of the array after it has been cleaned up. BUT, be sure you are modify nums and not creating a second array, because it is checking nums to make sure you removed the duplicates from it."
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Same here"
                    },
                    {
                        "username": "gutta",
                        "content": "hi is there any error in question in question they asked to return size of array after removing duplicates but in output they are showing array.\\ncould you recitify it guys"
                    },
                    {
                        "username": "0xsahilv",
                        "content": "actually they want us to sort array in a way so that all unique elements get to first "
                    },
                    {
                        "username": "rohitmallya",
                        "content": "I too feel the same"
                    },
                    {
                        "username": "zetlian",
                        "content": "[@abdurrahman6489](/abdurrahman6489) still doesnt work for me\\n"
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "And me! I\\'m 75 questions in and no issues - then I hit this one and boom! Sure there\\'s a problem here."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Return the length of the sorted array.\\nThey will verify the same with their function.\\nYour function should return len(nums[:sorted_elements])"
                    },
                    {
                        "username": "Yeyenash",
                        "content": "I have exactly the same question! Who can explain this to us? \\uD83D\\uDE2D"
                    },
                    {
                        "username": "abdurrahman6489",
                        "content": "in the function it is type int. return the value of K. only\\n"
                    },
                    {
                        "username": "iq45y8i",
                        "content": "Answer is expecting an Array (duplicate removed). But the function has return type as int (single element). Please clarify"
                    },
                    {
                        "username": "Simo_Ben_Eckert",
                        "content": "They want you to modify nums but not return it. It is still ebing tested how nums is structured afterwards tho. What you are supposed to return is the length of the sorted part!"
                    },
                    {
                        "username": "shekhaman213",
                        "content": "Array (nums) is passed by reference in the function removeDuplicates , hence any changes in array will be reflected to the nums through its whole scope (outside the function as well)"
                    },
                    {
                        "username": "taychap",
                        "content": "Also note that the question is asking you to mutate the array passed into the function, not return it"
                    },
                    {
                        "username": "Nousie_94",
                        "content": "Answer is expecting the integer \"k\", which is meant in the description."
                    },
                    {
                        "username": "quantupus",
                        "content": "This is a terribly worded question and should be removed, also it is a ridiculously easy problem with a simple list(set(nums)) in python, but this doesn\\'t work due to weird test case things. Please remove this question from leetcode"
                    },
                    {
                        "username": "Coder_Rick",
                        "content": "[@falguni_mutha](/falguni_mutha) I try to solve this easy question using java Set that working fine in intelliJ text editor but here does not work due to the test cases.... "
                    },
                    {
                        "username": "jlgarcia_",
                        "content": "While I partly agree with you, doing `list(set(nums))` creates a new object. Thus, it doesn\\'t mutate the initial list itself, but creates a new one. The output still is the same tho."
                    },
                    {
                        "username": "falguni_mutha",
                        "content": "oh oh oh. I literally t=did this. The question is absolutely terrible. If the wanted the modified array ask for that. The test cases are so stupid"
                    },
                    {
                        "username": "ogorbatchev",
                        "content": "Hey guys, \\n\\nI just finished the exercice and by looking at some solutions, and worse, the solution given by leetcode .. it doesn\\'t remove the duplicate from the array. \\n\\nI mean you have the pointer to this array, and the function name is REMOVE DUPLICATES, the solution clearly doesn\\'t remove them but just put the values in the beginning of the array. \\n\\nMeh, i wanted to say it :p\\nI am furstrated to see this solution that doesn\\'t actually solve the problem \\uD83D\\uDE05\\n\\nWish you guys a good day/night!"
                    },
                    {
                        "username": "therohitbansal4",
                        "content": "Good afternoon /evening \\uD83D\\uDE05"
                    },
                    {
                        "username": "syx_data",
                        "content": "describe:\\nyou must do this by modifying the input array in-place with O(1) extra memory\\uFF0Cwhat does o(1)exrea memory mean\\n"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "[@Nousie_94](/Nousie_94) dude then why return len(list(set(nums))) does not work its senseless"
                    },
                    {
                        "username": "antoniojsp",
                        "content": "when you see 0(1), it means that the memory used would be the same if the array has 10 elements or one million."
                    },
                    {
                        "username": "Nousie_94",
                        "content": "that means, that you are not allowed to allocate new memory which space depends on the number of elements.\\n\\nIn other words: No matter how many elements in \"nums\" are, your code is not allowed to use more memory (except frorm the array \"nums\" itself, of course)."
                    },
                    {
                        "username": "hem_ajet",
                        "content": "![image](https://assets.leetcode.com/users/yhemanth_teja/image_1557658638.png)\\n"
                    },
                    {
                        "username": "munu8998rai",
                        "content": "[@rajdeepbiswas](/rajdeepbiswas) its working fine without that also!\\n"
                    },
                    {
                        "username": "rajdeepbiswas",
                        "content": "Late comment: is there an usage of the ptr variable that I am missing?"
                    },
                    {
                        "username": "ak_ghoul",
                        "content": "There\\'s this thing on leetcode that we are not allowed to write main function. There can be various ways possible to write code on basis of how things are at main function.\\n*I am having a problem to write code without seeing the main function. *\\nCan somebody tell me how to view it?"
                    },
                    {
                        "username": "bm9avan",
                        "content": " public static void main(String[] args) {\\n        int[] arr ={1,1,2,3};\\n        int i=removeDuplicates(arr);\\n        System.out.println(Arrays.toString(arr)+\"  \"+ i);\\n    }\\njust assume there is nothing execpt declares required values to call given function and print answer"
                    },
                    {
                        "username": "suatozkaya",
                        "content": "[@aryanabraham](/aryanabraham) Hi, this is actually how object oriented programming is implemented. In a real project you do not see what is happening outside of your object. You must code in such a way that, your object should encapsulate the method and just work as expected like here."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "aryanabraham",
                        "content": "Hey ak_ghoul!\\nLeetCode doesn\\'t  let you view the main function; only the function that does the prescribed task is viewable/editable. This is reminiscent of the type of problems one gets in most technical interviews. \\n\\nHappy LeetCoding!"
                    }
                ]
            },
            {
                "id": 1568003,
                "content": [
                    {
                        "username": "nvythedead",
                        "content": "They don\\'t really want you to remove the duplicates. They want you to sort the uniques at the front, then return the length of the sorted part. Then, behind the scenes, they slice the array at the length you give them and the result of that is what they check.\\n\\nJust FYI, this sh_t drove me crazy..."
                    },
                    {
                        "username": "NotAMoose",
                        "content": "Thank you, was ripping my hair out "
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You have to return the correct length of the de-duped array. But when you do the array itself has to be sorted with uniques at the front. You can slice off the extra ones yourself but the judge script is going to do it for you anyway so it\\'s less efficient."
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Nothing stopping you from setting a new array length yourself before returning the length. I didn\\'t realize I didn\\'t have to do it until you said so. Makes sense, though, since you return an int but the output is still an array."
                    },
                    {
                        "username": "Shmormius",
                        "content": "Oh my god, I was going to lose it, I knew something was weird but I couldn\\'t figure out what."
                    },
                    {
                        "username": "NovaVirusXander",
                        "content": "OMG... I was literally going \"Dafuq is going on\" for like 10 mins. Ty so much man #broFist"
                    },
                    {
                        "username": "imanulhuq",
                        "content": "Thank you\\nI was gone mad "
                    },
                    {
                        "username": "emily971133",
                        "content": "if I assign the correct list to the original list (nums), it still responses error...\\nso it seems that we really need to mutate the value of original list(nums)"
                    },
                    {
                        "username": "kuvi41",
                        "content": "Drove me crazy too. Thank god I read this comment, Or else I would have wasted another day. "
                    },
                    {
                        "username": "abobakr",
                        "content": "I don\\'t think. They check the array `nums`  try even without return any thing you will pass some test"
                    },
                    {
                        "username": "Levidps",
                        "content": "Agree! Personally I\\'m not a fan that it actually mutates the original value. This is fine for a problem here but in a real project I\\'d rather avoid this mutation..."
                    },
                    {
                        "username": "Aleton",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You modify the nums array, but you only return k."
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "So in the end what do I have to return? Wheter I return either K or the res array it gives me error"
                    },
                    {
                        "username": "TYork",
                        "content": "Poorly worded then"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "Maybe that is why my solution is not working here but it works in my code editor"
                    },
                    {
                        "username": "venusli370306",
                        "content": "I was on a train and this question buzzed me this whole way. "
                    },
                    {
                        "username": "roman-smal",
                        "content": "whereas in JS you should remove duplicates \\uD83E\\uDD2F"
                    },
                    {
                        "username": "FE_Developer2022",
                        "content": "Thanks man, this is why leetcode sucks. I\\'m heading back to hackerrank"
                    },
                    {
                        "username": "saraahmed2693",
                        "content": "You saved my day! It was driving me crazy!!\\nThank you so much"
                    },
                    {
                        "username": "mukadas026",
                        "content": "seriously man, thanks\\nthey didn\\'t make that very clear in the instructions\\nplus, in the console they don\\'t output what I return, which imo is kinda weird"
                    },
                    {
                        "username": "nrrahul4",
                        "content": "Crazy fellazz.. Thanks man.. You saved my time."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Thanks for that bud!"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "user1306Qa",
                        "content": "Thank you.. these instructions smh"
                    },
                    {
                        "username": "madmonkey95",
                        "content": "\"non-decreasing order\"... just call it ascending. What\\'s with the purposely confusing text?"
                    },
                    {
                        "username": "yunyxue",
                        "content": "Non-decreasing means the next value can be the same as the current one, so [1,1] is also a non-decreasing-order list"
                    },
                    {
                        "username": "acnpssyy",
                        "content": "[@Arshad-Siddiqui](/Arshad-Siddiqui) L to my English teacher he never told me"
                    },
                    {
                        "username": "Arshad-Siddiqui",
                        "content": "Increasing indicates that the values are always higher than the last. In this case the next value might be the same so it isn\\'t increasing. Saying non-decreasing is more descriptive."
                    },
                    {
                        "username": "NischayAgrawal",
                        "content": "Damn !! never knew this. Thanks discussion section."
                    },
                    {
                        "username": "Salman4M",
                        "content": "there is difference between them. For example you have \\'a\\' list .                          a = [1,2,2,3,4,5,6,7,8] .  There are two \\'2\\' and if you say it is  sorted by ascending it isn\\'t. Because 2 is equal to other 2 . So it means there is no ascending between them. If you say non - decreasing order then this rule suits to that list. "
                    },
                    {
                        "username": "cccccwwwww",
                        "content": "The term comes from mathematical analysis. They\\'re using very precise language to avoid any ambiguities. Non-decreasing means a[i+1] >= a[i] rather than (strictly) increasing which would mean a[i+1] > a[i]. You can read up on it here: https://en.wikipedia.org/wiki/Monotonic_function"
                    },
                    {
                        "username": "ReeceBailey",
                        "content": "fr tho :kek:"
                    },
                    {
                        "username": "AJC2k19",
                        "content": "it got to me too but i had to think about it. They\\'re just being very formal specifying non-decreasing since ascending by definition implies increasing; however in an array [1,1,2,2] the second 1 is not greater than than the first. non-decreasing definition holds true here."
                    },
                    {
                        "username": "mrcogllrdo",
                        "content": "[@KovDimaY](/KovDimaY) if that were the case then the majority of filters in the wild for organizing info would have \"non-decreasing\" instead of \"ascending\" as an option to account for duplicates. I have never seen \"non-decreasing\" except today...kinda seems like you came up with that strict definition of ascending out of nowhere."
                    },
                    {
                        "username": "w0rkerbee",
                        "content": "[@KovDimaY](/KovDimaY) the expected answers r literallyin ascending order....."
                    },
                    {
                        "username": "ArthurSPrado",
                        "content": "non-decreasing order = !(decreasing-order) = ascending.  Everything non decreasing is ascending. What\\'s with the purposely confusing mind?"
                    },
                    {
                        "username": "laurentiucozma12",
                        "content": "[@KovDimaY](/KovDimaY) I\\'m pretty sure everyone here including me thinks [1,2,2,3,4,4,5] is ascending and \"non-decreasing\" just makes it more confusing. Idk where you took the definition, if there is something official somewhere for those words please let me know."
                    },
                    {
                        "username": "mewsxd",
                        "content": "i laughed so loud because i was so angry when i read it lmaoo"
                    },
                    {
                        "username": "jdx-code",
                        "content": "haha.. I read that twice to convince myself.. lol"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "\"Non-decreasing\" order and \"ascending\" are different things. \"Ascending\" means that each next element should be strictly bigger than previous. For example: [1,2,3,4,5]. \"Non-decreasing\" means that several elements in a row can be equal, but next one cannot be smaller than previous. For example: [1,2,2,3,4,4,5]. Each \"ascending\" order is \"non-decreasing\" but not each \"non-decreasing\" is \"ascending\". Normally is used to emphasise that numbers can be repeated and kinda prepare us for that."
                    },
                    {
                        "username": "jungle_jim",
                        "content": "The problem says to return the number, _k_, elements after removing duplicates. I get an error returning an integer in Python. I also get an error returning an array with non-repeating _k_ elements and repeating elements after. Which is _also_ supposed to be acceptable."
                    },
                    {
                        "username": "mukadas026",
                        "content": "the instructions got me a bit confused for a while too, they just want `k` to be an integer (length of the sorted part of the array)"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "augustooalcides",
                        "content": "nums vector is passed by reference, so you can modify it by just removing the duplicate numbers"
                    },
                    {
                        "username": "christopherblodgett",
                        "content": "[@abhinav__19](/abhinav__19)  the instructions on this are horrible. You should just be returning the length of the array after it has been cleaned up. BUT, be sure you are modify nums and not creating a second array, because it is checking nums to make sure you removed the duplicates from it."
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Same here"
                    },
                    {
                        "username": "gutta",
                        "content": "hi is there any error in question in question they asked to return size of array after removing duplicates but in output they are showing array.\\ncould you recitify it guys"
                    },
                    {
                        "username": "0xsahilv",
                        "content": "actually they want us to sort array in a way so that all unique elements get to first "
                    },
                    {
                        "username": "rohitmallya",
                        "content": "I too feel the same"
                    },
                    {
                        "username": "zetlian",
                        "content": "[@abdurrahman6489](/abdurrahman6489) still doesnt work for me\\n"
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "And me! I\\'m 75 questions in and no issues - then I hit this one and boom! Sure there\\'s a problem here."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Return the length of the sorted array.\\nThey will verify the same with their function.\\nYour function should return len(nums[:sorted_elements])"
                    },
                    {
                        "username": "Yeyenash",
                        "content": "I have exactly the same question! Who can explain this to us? \\uD83D\\uDE2D"
                    },
                    {
                        "username": "abdurrahman6489",
                        "content": "in the function it is type int. return the value of K. only\\n"
                    },
                    {
                        "username": "iq45y8i",
                        "content": "Answer is expecting an Array (duplicate removed). But the function has return type as int (single element). Please clarify"
                    },
                    {
                        "username": "Simo_Ben_Eckert",
                        "content": "They want you to modify nums but not return it. It is still ebing tested how nums is structured afterwards tho. What you are supposed to return is the length of the sorted part!"
                    },
                    {
                        "username": "shekhaman213",
                        "content": "Array (nums) is passed by reference in the function removeDuplicates , hence any changes in array will be reflected to the nums through its whole scope (outside the function as well)"
                    },
                    {
                        "username": "taychap",
                        "content": "Also note that the question is asking you to mutate the array passed into the function, not return it"
                    },
                    {
                        "username": "Nousie_94",
                        "content": "Answer is expecting the integer \"k\", which is meant in the description."
                    },
                    {
                        "username": "quantupus",
                        "content": "This is a terribly worded question and should be removed, also it is a ridiculously easy problem with a simple list(set(nums)) in python, but this doesn\\'t work due to weird test case things. Please remove this question from leetcode"
                    },
                    {
                        "username": "Coder_Rick",
                        "content": "[@falguni_mutha](/falguni_mutha) I try to solve this easy question using java Set that working fine in intelliJ text editor but here does not work due to the test cases.... "
                    },
                    {
                        "username": "jlgarcia_",
                        "content": "While I partly agree with you, doing `list(set(nums))` creates a new object. Thus, it doesn\\'t mutate the initial list itself, but creates a new one. The output still is the same tho."
                    },
                    {
                        "username": "falguni_mutha",
                        "content": "oh oh oh. I literally t=did this. The question is absolutely terrible. If the wanted the modified array ask for that. The test cases are so stupid"
                    },
                    {
                        "username": "ogorbatchev",
                        "content": "Hey guys, \\n\\nI just finished the exercice and by looking at some solutions, and worse, the solution given by leetcode .. it doesn\\'t remove the duplicate from the array. \\n\\nI mean you have the pointer to this array, and the function name is REMOVE DUPLICATES, the solution clearly doesn\\'t remove them but just put the values in the beginning of the array. \\n\\nMeh, i wanted to say it :p\\nI am furstrated to see this solution that doesn\\'t actually solve the problem \\uD83D\\uDE05\\n\\nWish you guys a good day/night!"
                    },
                    {
                        "username": "therohitbansal4",
                        "content": "Good afternoon /evening \\uD83D\\uDE05"
                    },
                    {
                        "username": "syx_data",
                        "content": "describe:\\nyou must do this by modifying the input array in-place with O(1) extra memory\\uFF0Cwhat does o(1)exrea memory mean\\n"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "[@Nousie_94](/Nousie_94) dude then why return len(list(set(nums))) does not work its senseless"
                    },
                    {
                        "username": "antoniojsp",
                        "content": "when you see 0(1), it means that the memory used would be the same if the array has 10 elements or one million."
                    },
                    {
                        "username": "Nousie_94",
                        "content": "that means, that you are not allowed to allocate new memory which space depends on the number of elements.\\n\\nIn other words: No matter how many elements in \"nums\" are, your code is not allowed to use more memory (except frorm the array \"nums\" itself, of course)."
                    },
                    {
                        "username": "hem_ajet",
                        "content": "![image](https://assets.leetcode.com/users/yhemanth_teja/image_1557658638.png)\\n"
                    },
                    {
                        "username": "munu8998rai",
                        "content": "[@rajdeepbiswas](/rajdeepbiswas) its working fine without that also!\\n"
                    },
                    {
                        "username": "rajdeepbiswas",
                        "content": "Late comment: is there an usage of the ptr variable that I am missing?"
                    },
                    {
                        "username": "ak_ghoul",
                        "content": "There\\'s this thing on leetcode that we are not allowed to write main function. There can be various ways possible to write code on basis of how things are at main function.\\n*I am having a problem to write code without seeing the main function. *\\nCan somebody tell me how to view it?"
                    },
                    {
                        "username": "bm9avan",
                        "content": " public static void main(String[] args) {\\n        int[] arr ={1,1,2,3};\\n        int i=removeDuplicates(arr);\\n        System.out.println(Arrays.toString(arr)+\"  \"+ i);\\n    }\\njust assume there is nothing execpt declares required values to call given function and print answer"
                    },
                    {
                        "username": "suatozkaya",
                        "content": "[@aryanabraham](/aryanabraham) Hi, this is actually how object oriented programming is implemented. In a real project you do not see what is happening outside of your object. You must code in such a way that, your object should encapsulate the method and just work as expected like here."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "aryanabraham",
                        "content": "Hey ak_ghoul!\\nLeetCode doesn\\'t  let you view the main function; only the function that does the prescribed task is viewable/editable. This is reminiscent of the type of problems one gets in most technical interviews. \\n\\nHappy LeetCoding!"
                    }
                ]
            },
            {
                "id": 1774620,
                "content": [
                    {
                        "username": "nvythedead",
                        "content": "They don\\'t really want you to remove the duplicates. They want you to sort the uniques at the front, then return the length of the sorted part. Then, behind the scenes, they slice the array at the length you give them and the result of that is what they check.\\n\\nJust FYI, this sh_t drove me crazy..."
                    },
                    {
                        "username": "NotAMoose",
                        "content": "Thank you, was ripping my hair out "
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You have to return the correct length of the de-duped array. But when you do the array itself has to be sorted with uniques at the front. You can slice off the extra ones yourself but the judge script is going to do it for you anyway so it\\'s less efficient."
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Nothing stopping you from setting a new array length yourself before returning the length. I didn\\'t realize I didn\\'t have to do it until you said so. Makes sense, though, since you return an int but the output is still an array."
                    },
                    {
                        "username": "Shmormius",
                        "content": "Oh my god, I was going to lose it, I knew something was weird but I couldn\\'t figure out what."
                    },
                    {
                        "username": "NovaVirusXander",
                        "content": "OMG... I was literally going \"Dafuq is going on\" for like 10 mins. Ty so much man #broFist"
                    },
                    {
                        "username": "imanulhuq",
                        "content": "Thank you\\nI was gone mad "
                    },
                    {
                        "username": "emily971133",
                        "content": "if I assign the correct list to the original list (nums), it still responses error...\\nso it seems that we really need to mutate the value of original list(nums)"
                    },
                    {
                        "username": "kuvi41",
                        "content": "Drove me crazy too. Thank god I read this comment, Or else I would have wasted another day. "
                    },
                    {
                        "username": "abobakr",
                        "content": "I don\\'t think. They check the array `nums`  try even without return any thing you will pass some test"
                    },
                    {
                        "username": "Levidps",
                        "content": "Agree! Personally I\\'m not a fan that it actually mutates the original value. This is fine for a problem here but in a real project I\\'d rather avoid this mutation..."
                    },
                    {
                        "username": "Aleton",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You modify the nums array, but you only return k."
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "So in the end what do I have to return? Wheter I return either K or the res array it gives me error"
                    },
                    {
                        "username": "TYork",
                        "content": "Poorly worded then"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "Maybe that is why my solution is not working here but it works in my code editor"
                    },
                    {
                        "username": "venusli370306",
                        "content": "I was on a train and this question buzzed me this whole way. "
                    },
                    {
                        "username": "roman-smal",
                        "content": "whereas in JS you should remove duplicates \\uD83E\\uDD2F"
                    },
                    {
                        "username": "FE_Developer2022",
                        "content": "Thanks man, this is why leetcode sucks. I\\'m heading back to hackerrank"
                    },
                    {
                        "username": "saraahmed2693",
                        "content": "You saved my day! It was driving me crazy!!\\nThank you so much"
                    },
                    {
                        "username": "mukadas026",
                        "content": "seriously man, thanks\\nthey didn\\'t make that very clear in the instructions\\nplus, in the console they don\\'t output what I return, which imo is kinda weird"
                    },
                    {
                        "username": "nrrahul4",
                        "content": "Crazy fellazz.. Thanks man.. You saved my time."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Thanks for that bud!"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "user1306Qa",
                        "content": "Thank you.. these instructions smh"
                    },
                    {
                        "username": "madmonkey95",
                        "content": "\"non-decreasing order\"... just call it ascending. What\\'s with the purposely confusing text?"
                    },
                    {
                        "username": "yunyxue",
                        "content": "Non-decreasing means the next value can be the same as the current one, so [1,1] is also a non-decreasing-order list"
                    },
                    {
                        "username": "acnpssyy",
                        "content": "[@Arshad-Siddiqui](/Arshad-Siddiqui) L to my English teacher he never told me"
                    },
                    {
                        "username": "Arshad-Siddiqui",
                        "content": "Increasing indicates that the values are always higher than the last. In this case the next value might be the same so it isn\\'t increasing. Saying non-decreasing is more descriptive."
                    },
                    {
                        "username": "NischayAgrawal",
                        "content": "Damn !! never knew this. Thanks discussion section."
                    },
                    {
                        "username": "Salman4M",
                        "content": "there is difference between them. For example you have \\'a\\' list .                          a = [1,2,2,3,4,5,6,7,8] .  There are two \\'2\\' and if you say it is  sorted by ascending it isn\\'t. Because 2 is equal to other 2 . So it means there is no ascending between them. If you say non - decreasing order then this rule suits to that list. "
                    },
                    {
                        "username": "cccccwwwww",
                        "content": "The term comes from mathematical analysis. They\\'re using very precise language to avoid any ambiguities. Non-decreasing means a[i+1] >= a[i] rather than (strictly) increasing which would mean a[i+1] > a[i]. You can read up on it here: https://en.wikipedia.org/wiki/Monotonic_function"
                    },
                    {
                        "username": "ReeceBailey",
                        "content": "fr tho :kek:"
                    },
                    {
                        "username": "AJC2k19",
                        "content": "it got to me too but i had to think about it. They\\'re just being very formal specifying non-decreasing since ascending by definition implies increasing; however in an array [1,1,2,2] the second 1 is not greater than than the first. non-decreasing definition holds true here."
                    },
                    {
                        "username": "mrcogllrdo",
                        "content": "[@KovDimaY](/KovDimaY) if that were the case then the majority of filters in the wild for organizing info would have \"non-decreasing\" instead of \"ascending\" as an option to account for duplicates. I have never seen \"non-decreasing\" except today...kinda seems like you came up with that strict definition of ascending out of nowhere."
                    },
                    {
                        "username": "w0rkerbee",
                        "content": "[@KovDimaY](/KovDimaY) the expected answers r literallyin ascending order....."
                    },
                    {
                        "username": "ArthurSPrado",
                        "content": "non-decreasing order = !(decreasing-order) = ascending.  Everything non decreasing is ascending. What\\'s with the purposely confusing mind?"
                    },
                    {
                        "username": "laurentiucozma12",
                        "content": "[@KovDimaY](/KovDimaY) I\\'m pretty sure everyone here including me thinks [1,2,2,3,4,4,5] is ascending and \"non-decreasing\" just makes it more confusing. Idk where you took the definition, if there is something official somewhere for those words please let me know."
                    },
                    {
                        "username": "mewsxd",
                        "content": "i laughed so loud because i was so angry when i read it lmaoo"
                    },
                    {
                        "username": "jdx-code",
                        "content": "haha.. I read that twice to convince myself.. lol"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "\"Non-decreasing\" order and \"ascending\" are different things. \"Ascending\" means that each next element should be strictly bigger than previous. For example: [1,2,3,4,5]. \"Non-decreasing\" means that several elements in a row can be equal, but next one cannot be smaller than previous. For example: [1,2,2,3,4,4,5]. Each \"ascending\" order is \"non-decreasing\" but not each \"non-decreasing\" is \"ascending\". Normally is used to emphasise that numbers can be repeated and kinda prepare us for that."
                    },
                    {
                        "username": "jungle_jim",
                        "content": "The problem says to return the number, _k_, elements after removing duplicates. I get an error returning an integer in Python. I also get an error returning an array with non-repeating _k_ elements and repeating elements after. Which is _also_ supposed to be acceptable."
                    },
                    {
                        "username": "mukadas026",
                        "content": "the instructions got me a bit confused for a while too, they just want `k` to be an integer (length of the sorted part of the array)"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "augustooalcides",
                        "content": "nums vector is passed by reference, so you can modify it by just removing the duplicate numbers"
                    },
                    {
                        "username": "christopherblodgett",
                        "content": "[@abhinav__19](/abhinav__19)  the instructions on this are horrible. You should just be returning the length of the array after it has been cleaned up. BUT, be sure you are modify nums and not creating a second array, because it is checking nums to make sure you removed the duplicates from it."
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Same here"
                    },
                    {
                        "username": "gutta",
                        "content": "hi is there any error in question in question they asked to return size of array after removing duplicates but in output they are showing array.\\ncould you recitify it guys"
                    },
                    {
                        "username": "0xsahilv",
                        "content": "actually they want us to sort array in a way so that all unique elements get to first "
                    },
                    {
                        "username": "rohitmallya",
                        "content": "I too feel the same"
                    },
                    {
                        "username": "zetlian",
                        "content": "[@abdurrahman6489](/abdurrahman6489) still doesnt work for me\\n"
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "And me! I\\'m 75 questions in and no issues - then I hit this one and boom! Sure there\\'s a problem here."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Return the length of the sorted array.\\nThey will verify the same with their function.\\nYour function should return len(nums[:sorted_elements])"
                    },
                    {
                        "username": "Yeyenash",
                        "content": "I have exactly the same question! Who can explain this to us? \\uD83D\\uDE2D"
                    },
                    {
                        "username": "abdurrahman6489",
                        "content": "in the function it is type int. return the value of K. only\\n"
                    },
                    {
                        "username": "iq45y8i",
                        "content": "Answer is expecting an Array (duplicate removed). But the function has return type as int (single element). Please clarify"
                    },
                    {
                        "username": "Simo_Ben_Eckert",
                        "content": "They want you to modify nums but not return it. It is still ebing tested how nums is structured afterwards tho. What you are supposed to return is the length of the sorted part!"
                    },
                    {
                        "username": "shekhaman213",
                        "content": "Array (nums) is passed by reference in the function removeDuplicates , hence any changes in array will be reflected to the nums through its whole scope (outside the function as well)"
                    },
                    {
                        "username": "taychap",
                        "content": "Also note that the question is asking you to mutate the array passed into the function, not return it"
                    },
                    {
                        "username": "Nousie_94",
                        "content": "Answer is expecting the integer \"k\", which is meant in the description."
                    },
                    {
                        "username": "quantupus",
                        "content": "This is a terribly worded question and should be removed, also it is a ridiculously easy problem with a simple list(set(nums)) in python, but this doesn\\'t work due to weird test case things. Please remove this question from leetcode"
                    },
                    {
                        "username": "Coder_Rick",
                        "content": "[@falguni_mutha](/falguni_mutha) I try to solve this easy question using java Set that working fine in intelliJ text editor but here does not work due to the test cases.... "
                    },
                    {
                        "username": "jlgarcia_",
                        "content": "While I partly agree with you, doing `list(set(nums))` creates a new object. Thus, it doesn\\'t mutate the initial list itself, but creates a new one. The output still is the same tho."
                    },
                    {
                        "username": "falguni_mutha",
                        "content": "oh oh oh. I literally t=did this. The question is absolutely terrible. If the wanted the modified array ask for that. The test cases are so stupid"
                    },
                    {
                        "username": "ogorbatchev",
                        "content": "Hey guys, \\n\\nI just finished the exercice and by looking at some solutions, and worse, the solution given by leetcode .. it doesn\\'t remove the duplicate from the array. \\n\\nI mean you have the pointer to this array, and the function name is REMOVE DUPLICATES, the solution clearly doesn\\'t remove them but just put the values in the beginning of the array. \\n\\nMeh, i wanted to say it :p\\nI am furstrated to see this solution that doesn\\'t actually solve the problem \\uD83D\\uDE05\\n\\nWish you guys a good day/night!"
                    },
                    {
                        "username": "therohitbansal4",
                        "content": "Good afternoon /evening \\uD83D\\uDE05"
                    },
                    {
                        "username": "syx_data",
                        "content": "describe:\\nyou must do this by modifying the input array in-place with O(1) extra memory\\uFF0Cwhat does o(1)exrea memory mean\\n"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "[@Nousie_94](/Nousie_94) dude then why return len(list(set(nums))) does not work its senseless"
                    },
                    {
                        "username": "antoniojsp",
                        "content": "when you see 0(1), it means that the memory used would be the same if the array has 10 elements or one million."
                    },
                    {
                        "username": "Nousie_94",
                        "content": "that means, that you are not allowed to allocate new memory which space depends on the number of elements.\\n\\nIn other words: No matter how many elements in \"nums\" are, your code is not allowed to use more memory (except frorm the array \"nums\" itself, of course)."
                    },
                    {
                        "username": "hem_ajet",
                        "content": "![image](https://assets.leetcode.com/users/yhemanth_teja/image_1557658638.png)\\n"
                    },
                    {
                        "username": "munu8998rai",
                        "content": "[@rajdeepbiswas](/rajdeepbiswas) its working fine without that also!\\n"
                    },
                    {
                        "username": "rajdeepbiswas",
                        "content": "Late comment: is there an usage of the ptr variable that I am missing?"
                    },
                    {
                        "username": "ak_ghoul",
                        "content": "There\\'s this thing on leetcode that we are not allowed to write main function. There can be various ways possible to write code on basis of how things are at main function.\\n*I am having a problem to write code without seeing the main function. *\\nCan somebody tell me how to view it?"
                    },
                    {
                        "username": "bm9avan",
                        "content": " public static void main(String[] args) {\\n        int[] arr ={1,1,2,3};\\n        int i=removeDuplicates(arr);\\n        System.out.println(Arrays.toString(arr)+\"  \"+ i);\\n    }\\njust assume there is nothing execpt declares required values to call given function and print answer"
                    },
                    {
                        "username": "suatozkaya",
                        "content": "[@aryanabraham](/aryanabraham) Hi, this is actually how object oriented programming is implemented. In a real project you do not see what is happening outside of your object. You must code in such a way that, your object should encapsulate the method and just work as expected like here."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "aryanabraham",
                        "content": "Hey ak_ghoul!\\nLeetCode doesn\\'t  let you view the main function; only the function that does the prescribed task is viewable/editable. This is reminiscent of the type of problems one gets in most technical interviews. \\n\\nHappy LeetCoding!"
                    }
                ]
            },
            {
                "id": 1568320,
                "content": [
                    {
                        "username": "nvythedead",
                        "content": "They don\\'t really want you to remove the duplicates. They want you to sort the uniques at the front, then return the length of the sorted part. Then, behind the scenes, they slice the array at the length you give them and the result of that is what they check.\\n\\nJust FYI, this sh_t drove me crazy..."
                    },
                    {
                        "username": "NotAMoose",
                        "content": "Thank you, was ripping my hair out "
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You have to return the correct length of the de-duped array. But when you do the array itself has to be sorted with uniques at the front. You can slice off the extra ones yourself but the judge script is going to do it for you anyway so it\\'s less efficient."
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Nothing stopping you from setting a new array length yourself before returning the length. I didn\\'t realize I didn\\'t have to do it until you said so. Makes sense, though, since you return an int but the output is still an array."
                    },
                    {
                        "username": "Shmormius",
                        "content": "Oh my god, I was going to lose it, I knew something was weird but I couldn\\'t figure out what."
                    },
                    {
                        "username": "NovaVirusXander",
                        "content": "OMG... I was literally going \"Dafuq is going on\" for like 10 mins. Ty so much man #broFist"
                    },
                    {
                        "username": "imanulhuq",
                        "content": "Thank you\\nI was gone mad "
                    },
                    {
                        "username": "emily971133",
                        "content": "if I assign the correct list to the original list (nums), it still responses error...\\nso it seems that we really need to mutate the value of original list(nums)"
                    },
                    {
                        "username": "kuvi41",
                        "content": "Drove me crazy too. Thank god I read this comment, Or else I would have wasted another day. "
                    },
                    {
                        "username": "abobakr",
                        "content": "I don\\'t think. They check the array `nums`  try even without return any thing you will pass some test"
                    },
                    {
                        "username": "Levidps",
                        "content": "Agree! Personally I\\'m not a fan that it actually mutates the original value. This is fine for a problem here but in a real project I\\'d rather avoid this mutation..."
                    },
                    {
                        "username": "Aleton",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You modify the nums array, but you only return k."
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "So in the end what do I have to return? Wheter I return either K or the res array it gives me error"
                    },
                    {
                        "username": "TYork",
                        "content": "Poorly worded then"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "Maybe that is why my solution is not working here but it works in my code editor"
                    },
                    {
                        "username": "venusli370306",
                        "content": "I was on a train and this question buzzed me this whole way. "
                    },
                    {
                        "username": "roman-smal",
                        "content": "whereas in JS you should remove duplicates \\uD83E\\uDD2F"
                    },
                    {
                        "username": "FE_Developer2022",
                        "content": "Thanks man, this is why leetcode sucks. I\\'m heading back to hackerrank"
                    },
                    {
                        "username": "saraahmed2693",
                        "content": "You saved my day! It was driving me crazy!!\\nThank you so much"
                    },
                    {
                        "username": "mukadas026",
                        "content": "seriously man, thanks\\nthey didn\\'t make that very clear in the instructions\\nplus, in the console they don\\'t output what I return, which imo is kinda weird"
                    },
                    {
                        "username": "nrrahul4",
                        "content": "Crazy fellazz.. Thanks man.. You saved my time."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Thanks for that bud!"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "user1306Qa",
                        "content": "Thank you.. these instructions smh"
                    },
                    {
                        "username": "madmonkey95",
                        "content": "\"non-decreasing order\"... just call it ascending. What\\'s with the purposely confusing text?"
                    },
                    {
                        "username": "yunyxue",
                        "content": "Non-decreasing means the next value can be the same as the current one, so [1,1] is also a non-decreasing-order list"
                    },
                    {
                        "username": "acnpssyy",
                        "content": "[@Arshad-Siddiqui](/Arshad-Siddiqui) L to my English teacher he never told me"
                    },
                    {
                        "username": "Arshad-Siddiqui",
                        "content": "Increasing indicates that the values are always higher than the last. In this case the next value might be the same so it isn\\'t increasing. Saying non-decreasing is more descriptive."
                    },
                    {
                        "username": "NischayAgrawal",
                        "content": "Damn !! never knew this. Thanks discussion section."
                    },
                    {
                        "username": "Salman4M",
                        "content": "there is difference between them. For example you have \\'a\\' list .                          a = [1,2,2,3,4,5,6,7,8] .  There are two \\'2\\' and if you say it is  sorted by ascending it isn\\'t. Because 2 is equal to other 2 . So it means there is no ascending between them. If you say non - decreasing order then this rule suits to that list. "
                    },
                    {
                        "username": "cccccwwwww",
                        "content": "The term comes from mathematical analysis. They\\'re using very precise language to avoid any ambiguities. Non-decreasing means a[i+1] >= a[i] rather than (strictly) increasing which would mean a[i+1] > a[i]. You can read up on it here: https://en.wikipedia.org/wiki/Monotonic_function"
                    },
                    {
                        "username": "ReeceBailey",
                        "content": "fr tho :kek:"
                    },
                    {
                        "username": "AJC2k19",
                        "content": "it got to me too but i had to think about it. They\\'re just being very formal specifying non-decreasing since ascending by definition implies increasing; however in an array [1,1,2,2] the second 1 is not greater than than the first. non-decreasing definition holds true here."
                    },
                    {
                        "username": "mrcogllrdo",
                        "content": "[@KovDimaY](/KovDimaY) if that were the case then the majority of filters in the wild for organizing info would have \"non-decreasing\" instead of \"ascending\" as an option to account for duplicates. I have never seen \"non-decreasing\" except today...kinda seems like you came up with that strict definition of ascending out of nowhere."
                    },
                    {
                        "username": "w0rkerbee",
                        "content": "[@KovDimaY](/KovDimaY) the expected answers r literallyin ascending order....."
                    },
                    {
                        "username": "ArthurSPrado",
                        "content": "non-decreasing order = !(decreasing-order) = ascending.  Everything non decreasing is ascending. What\\'s with the purposely confusing mind?"
                    },
                    {
                        "username": "laurentiucozma12",
                        "content": "[@KovDimaY](/KovDimaY) I\\'m pretty sure everyone here including me thinks [1,2,2,3,4,4,5] is ascending and \"non-decreasing\" just makes it more confusing. Idk where you took the definition, if there is something official somewhere for those words please let me know."
                    },
                    {
                        "username": "mewsxd",
                        "content": "i laughed so loud because i was so angry when i read it lmaoo"
                    },
                    {
                        "username": "jdx-code",
                        "content": "haha.. I read that twice to convince myself.. lol"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "\"Non-decreasing\" order and \"ascending\" are different things. \"Ascending\" means that each next element should be strictly bigger than previous. For example: [1,2,3,4,5]. \"Non-decreasing\" means that several elements in a row can be equal, but next one cannot be smaller than previous. For example: [1,2,2,3,4,4,5]. Each \"ascending\" order is \"non-decreasing\" but not each \"non-decreasing\" is \"ascending\". Normally is used to emphasise that numbers can be repeated and kinda prepare us for that."
                    },
                    {
                        "username": "jungle_jim",
                        "content": "The problem says to return the number, _k_, elements after removing duplicates. I get an error returning an integer in Python. I also get an error returning an array with non-repeating _k_ elements and repeating elements after. Which is _also_ supposed to be acceptable."
                    },
                    {
                        "username": "mukadas026",
                        "content": "the instructions got me a bit confused for a while too, they just want `k` to be an integer (length of the sorted part of the array)"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "augustooalcides",
                        "content": "nums vector is passed by reference, so you can modify it by just removing the duplicate numbers"
                    },
                    {
                        "username": "christopherblodgett",
                        "content": "[@abhinav__19](/abhinav__19)  the instructions on this are horrible. You should just be returning the length of the array after it has been cleaned up. BUT, be sure you are modify nums and not creating a second array, because it is checking nums to make sure you removed the duplicates from it."
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Same here"
                    },
                    {
                        "username": "gutta",
                        "content": "hi is there any error in question in question they asked to return size of array after removing duplicates but in output they are showing array.\\ncould you recitify it guys"
                    },
                    {
                        "username": "0xsahilv",
                        "content": "actually they want us to sort array in a way so that all unique elements get to first "
                    },
                    {
                        "username": "rohitmallya",
                        "content": "I too feel the same"
                    },
                    {
                        "username": "zetlian",
                        "content": "[@abdurrahman6489](/abdurrahman6489) still doesnt work for me\\n"
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "And me! I\\'m 75 questions in and no issues - then I hit this one and boom! Sure there\\'s a problem here."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Return the length of the sorted array.\\nThey will verify the same with their function.\\nYour function should return len(nums[:sorted_elements])"
                    },
                    {
                        "username": "Yeyenash",
                        "content": "I have exactly the same question! Who can explain this to us? \\uD83D\\uDE2D"
                    },
                    {
                        "username": "abdurrahman6489",
                        "content": "in the function it is type int. return the value of K. only\\n"
                    },
                    {
                        "username": "iq45y8i",
                        "content": "Answer is expecting an Array (duplicate removed). But the function has return type as int (single element). Please clarify"
                    },
                    {
                        "username": "Simo_Ben_Eckert",
                        "content": "They want you to modify nums but not return it. It is still ebing tested how nums is structured afterwards tho. What you are supposed to return is the length of the sorted part!"
                    },
                    {
                        "username": "shekhaman213",
                        "content": "Array (nums) is passed by reference in the function removeDuplicates , hence any changes in array will be reflected to the nums through its whole scope (outside the function as well)"
                    },
                    {
                        "username": "taychap",
                        "content": "Also note that the question is asking you to mutate the array passed into the function, not return it"
                    },
                    {
                        "username": "Nousie_94",
                        "content": "Answer is expecting the integer \"k\", which is meant in the description."
                    },
                    {
                        "username": "quantupus",
                        "content": "This is a terribly worded question and should be removed, also it is a ridiculously easy problem with a simple list(set(nums)) in python, but this doesn\\'t work due to weird test case things. Please remove this question from leetcode"
                    },
                    {
                        "username": "Coder_Rick",
                        "content": "[@falguni_mutha](/falguni_mutha) I try to solve this easy question using java Set that working fine in intelliJ text editor but here does not work due to the test cases.... "
                    },
                    {
                        "username": "jlgarcia_",
                        "content": "While I partly agree with you, doing `list(set(nums))` creates a new object. Thus, it doesn\\'t mutate the initial list itself, but creates a new one. The output still is the same tho."
                    },
                    {
                        "username": "falguni_mutha",
                        "content": "oh oh oh. I literally t=did this. The question is absolutely terrible. If the wanted the modified array ask for that. The test cases are so stupid"
                    },
                    {
                        "username": "ogorbatchev",
                        "content": "Hey guys, \\n\\nI just finished the exercice and by looking at some solutions, and worse, the solution given by leetcode .. it doesn\\'t remove the duplicate from the array. \\n\\nI mean you have the pointer to this array, and the function name is REMOVE DUPLICATES, the solution clearly doesn\\'t remove them but just put the values in the beginning of the array. \\n\\nMeh, i wanted to say it :p\\nI am furstrated to see this solution that doesn\\'t actually solve the problem \\uD83D\\uDE05\\n\\nWish you guys a good day/night!"
                    },
                    {
                        "username": "therohitbansal4",
                        "content": "Good afternoon /evening \\uD83D\\uDE05"
                    },
                    {
                        "username": "syx_data",
                        "content": "describe:\\nyou must do this by modifying the input array in-place with O(1) extra memory\\uFF0Cwhat does o(1)exrea memory mean\\n"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "[@Nousie_94](/Nousie_94) dude then why return len(list(set(nums))) does not work its senseless"
                    },
                    {
                        "username": "antoniojsp",
                        "content": "when you see 0(1), it means that the memory used would be the same if the array has 10 elements or one million."
                    },
                    {
                        "username": "Nousie_94",
                        "content": "that means, that you are not allowed to allocate new memory which space depends on the number of elements.\\n\\nIn other words: No matter how many elements in \"nums\" are, your code is not allowed to use more memory (except frorm the array \"nums\" itself, of course)."
                    },
                    {
                        "username": "hem_ajet",
                        "content": "![image](https://assets.leetcode.com/users/yhemanth_teja/image_1557658638.png)\\n"
                    },
                    {
                        "username": "munu8998rai",
                        "content": "[@rajdeepbiswas](/rajdeepbiswas) its working fine without that also!\\n"
                    },
                    {
                        "username": "rajdeepbiswas",
                        "content": "Late comment: is there an usage of the ptr variable that I am missing?"
                    },
                    {
                        "username": "ak_ghoul",
                        "content": "There\\'s this thing on leetcode that we are not allowed to write main function. There can be various ways possible to write code on basis of how things are at main function.\\n*I am having a problem to write code without seeing the main function. *\\nCan somebody tell me how to view it?"
                    },
                    {
                        "username": "bm9avan",
                        "content": " public static void main(String[] args) {\\n        int[] arr ={1,1,2,3};\\n        int i=removeDuplicates(arr);\\n        System.out.println(Arrays.toString(arr)+\"  \"+ i);\\n    }\\njust assume there is nothing execpt declares required values to call given function and print answer"
                    },
                    {
                        "username": "suatozkaya",
                        "content": "[@aryanabraham](/aryanabraham) Hi, this is actually how object oriented programming is implemented. In a real project you do not see what is happening outside of your object. You must code in such a way that, your object should encapsulate the method and just work as expected like here."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "aryanabraham",
                        "content": "Hey ak_ghoul!\\nLeetCode doesn\\'t  let you view the main function; only the function that does the prescribed task is viewable/editable. This is reminiscent of the type of problems one gets in most technical interviews. \\n\\nHappy LeetCoding!"
                    }
                ]
            },
            {
                "id": 1567354,
                "content": [
                    {
                        "username": "nvythedead",
                        "content": "They don\\'t really want you to remove the duplicates. They want you to sort the uniques at the front, then return the length of the sorted part. Then, behind the scenes, they slice the array at the length you give them and the result of that is what they check.\\n\\nJust FYI, this sh_t drove me crazy..."
                    },
                    {
                        "username": "NotAMoose",
                        "content": "Thank you, was ripping my hair out "
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You have to return the correct length of the de-duped array. But when you do the array itself has to be sorted with uniques at the front. You can slice off the extra ones yourself but the judge script is going to do it for you anyway so it\\'s less efficient."
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Nothing stopping you from setting a new array length yourself before returning the length. I didn\\'t realize I didn\\'t have to do it until you said so. Makes sense, though, since you return an int but the output is still an array."
                    },
                    {
                        "username": "Shmormius",
                        "content": "Oh my god, I was going to lose it, I knew something was weird but I couldn\\'t figure out what."
                    },
                    {
                        "username": "NovaVirusXander",
                        "content": "OMG... I was literally going \"Dafuq is going on\" for like 10 mins. Ty so much man #broFist"
                    },
                    {
                        "username": "imanulhuq",
                        "content": "Thank you\\nI was gone mad "
                    },
                    {
                        "username": "emily971133",
                        "content": "if I assign the correct list to the original list (nums), it still responses error...\\nso it seems that we really need to mutate the value of original list(nums)"
                    },
                    {
                        "username": "kuvi41",
                        "content": "Drove me crazy too. Thank god I read this comment, Or else I would have wasted another day. "
                    },
                    {
                        "username": "abobakr",
                        "content": "I don\\'t think. They check the array `nums`  try even without return any thing you will pass some test"
                    },
                    {
                        "username": "Levidps",
                        "content": "Agree! Personally I\\'m not a fan that it actually mutates the original value. This is fine for a problem here but in a real project I\\'d rather avoid this mutation..."
                    },
                    {
                        "username": "Aleton",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You modify the nums array, but you only return k."
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "So in the end what do I have to return? Wheter I return either K or the res array it gives me error"
                    },
                    {
                        "username": "TYork",
                        "content": "Poorly worded then"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "Maybe that is why my solution is not working here but it works in my code editor"
                    },
                    {
                        "username": "venusli370306",
                        "content": "I was on a train and this question buzzed me this whole way. "
                    },
                    {
                        "username": "roman-smal",
                        "content": "whereas in JS you should remove duplicates \\uD83E\\uDD2F"
                    },
                    {
                        "username": "FE_Developer2022",
                        "content": "Thanks man, this is why leetcode sucks. I\\'m heading back to hackerrank"
                    },
                    {
                        "username": "saraahmed2693",
                        "content": "You saved my day! It was driving me crazy!!\\nThank you so much"
                    },
                    {
                        "username": "mukadas026",
                        "content": "seriously man, thanks\\nthey didn\\'t make that very clear in the instructions\\nplus, in the console they don\\'t output what I return, which imo is kinda weird"
                    },
                    {
                        "username": "nrrahul4",
                        "content": "Crazy fellazz.. Thanks man.. You saved my time."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Thanks for that bud!"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "user1306Qa",
                        "content": "Thank you.. these instructions smh"
                    },
                    {
                        "username": "madmonkey95",
                        "content": "\"non-decreasing order\"... just call it ascending. What\\'s with the purposely confusing text?"
                    },
                    {
                        "username": "yunyxue",
                        "content": "Non-decreasing means the next value can be the same as the current one, so [1,1] is also a non-decreasing-order list"
                    },
                    {
                        "username": "acnpssyy",
                        "content": "[@Arshad-Siddiqui](/Arshad-Siddiqui) L to my English teacher he never told me"
                    },
                    {
                        "username": "Arshad-Siddiqui",
                        "content": "Increasing indicates that the values are always higher than the last. In this case the next value might be the same so it isn\\'t increasing. Saying non-decreasing is more descriptive."
                    },
                    {
                        "username": "NischayAgrawal",
                        "content": "Damn !! never knew this. Thanks discussion section."
                    },
                    {
                        "username": "Salman4M",
                        "content": "there is difference between them. For example you have \\'a\\' list .                          a = [1,2,2,3,4,5,6,7,8] .  There are two \\'2\\' and if you say it is  sorted by ascending it isn\\'t. Because 2 is equal to other 2 . So it means there is no ascending between them. If you say non - decreasing order then this rule suits to that list. "
                    },
                    {
                        "username": "cccccwwwww",
                        "content": "The term comes from mathematical analysis. They\\'re using very precise language to avoid any ambiguities. Non-decreasing means a[i+1] >= a[i] rather than (strictly) increasing which would mean a[i+1] > a[i]. You can read up on it here: https://en.wikipedia.org/wiki/Monotonic_function"
                    },
                    {
                        "username": "ReeceBailey",
                        "content": "fr tho :kek:"
                    },
                    {
                        "username": "AJC2k19",
                        "content": "it got to me too but i had to think about it. They\\'re just being very formal specifying non-decreasing since ascending by definition implies increasing; however in an array [1,1,2,2] the second 1 is not greater than than the first. non-decreasing definition holds true here."
                    },
                    {
                        "username": "mrcogllrdo",
                        "content": "[@KovDimaY](/KovDimaY) if that were the case then the majority of filters in the wild for organizing info would have \"non-decreasing\" instead of \"ascending\" as an option to account for duplicates. I have never seen \"non-decreasing\" except today...kinda seems like you came up with that strict definition of ascending out of nowhere."
                    },
                    {
                        "username": "w0rkerbee",
                        "content": "[@KovDimaY](/KovDimaY) the expected answers r literallyin ascending order....."
                    },
                    {
                        "username": "ArthurSPrado",
                        "content": "non-decreasing order = !(decreasing-order) = ascending.  Everything non decreasing is ascending. What\\'s with the purposely confusing mind?"
                    },
                    {
                        "username": "laurentiucozma12",
                        "content": "[@KovDimaY](/KovDimaY) I\\'m pretty sure everyone here including me thinks [1,2,2,3,4,4,5] is ascending and \"non-decreasing\" just makes it more confusing. Idk where you took the definition, if there is something official somewhere for those words please let me know."
                    },
                    {
                        "username": "mewsxd",
                        "content": "i laughed so loud because i was so angry when i read it lmaoo"
                    },
                    {
                        "username": "jdx-code",
                        "content": "haha.. I read that twice to convince myself.. lol"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "\"Non-decreasing\" order and \"ascending\" are different things. \"Ascending\" means that each next element should be strictly bigger than previous. For example: [1,2,3,4,5]. \"Non-decreasing\" means that several elements in a row can be equal, but next one cannot be smaller than previous. For example: [1,2,2,3,4,4,5]. Each \"ascending\" order is \"non-decreasing\" but not each \"non-decreasing\" is \"ascending\". Normally is used to emphasise that numbers can be repeated and kinda prepare us for that."
                    },
                    {
                        "username": "jungle_jim",
                        "content": "The problem says to return the number, _k_, elements after removing duplicates. I get an error returning an integer in Python. I also get an error returning an array with non-repeating _k_ elements and repeating elements after. Which is _also_ supposed to be acceptable."
                    },
                    {
                        "username": "mukadas026",
                        "content": "the instructions got me a bit confused for a while too, they just want `k` to be an integer (length of the sorted part of the array)"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "augustooalcides",
                        "content": "nums vector is passed by reference, so you can modify it by just removing the duplicate numbers"
                    },
                    {
                        "username": "christopherblodgett",
                        "content": "[@abhinav__19](/abhinav__19)  the instructions on this are horrible. You should just be returning the length of the array after it has been cleaned up. BUT, be sure you are modify nums and not creating a second array, because it is checking nums to make sure you removed the duplicates from it."
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Same here"
                    },
                    {
                        "username": "gutta",
                        "content": "hi is there any error in question in question they asked to return size of array after removing duplicates but in output they are showing array.\\ncould you recitify it guys"
                    },
                    {
                        "username": "0xsahilv",
                        "content": "actually they want us to sort array in a way so that all unique elements get to first "
                    },
                    {
                        "username": "rohitmallya",
                        "content": "I too feel the same"
                    },
                    {
                        "username": "zetlian",
                        "content": "[@abdurrahman6489](/abdurrahman6489) still doesnt work for me\\n"
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "And me! I\\'m 75 questions in and no issues - then I hit this one and boom! Sure there\\'s a problem here."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Return the length of the sorted array.\\nThey will verify the same with their function.\\nYour function should return len(nums[:sorted_elements])"
                    },
                    {
                        "username": "Yeyenash",
                        "content": "I have exactly the same question! Who can explain this to us? \\uD83D\\uDE2D"
                    },
                    {
                        "username": "abdurrahman6489",
                        "content": "in the function it is type int. return the value of K. only\\n"
                    },
                    {
                        "username": "iq45y8i",
                        "content": "Answer is expecting an Array (duplicate removed). But the function has return type as int (single element). Please clarify"
                    },
                    {
                        "username": "Simo_Ben_Eckert",
                        "content": "They want you to modify nums but not return it. It is still ebing tested how nums is structured afterwards tho. What you are supposed to return is the length of the sorted part!"
                    },
                    {
                        "username": "shekhaman213",
                        "content": "Array (nums) is passed by reference in the function removeDuplicates , hence any changes in array will be reflected to the nums through its whole scope (outside the function as well)"
                    },
                    {
                        "username": "taychap",
                        "content": "Also note that the question is asking you to mutate the array passed into the function, not return it"
                    },
                    {
                        "username": "Nousie_94",
                        "content": "Answer is expecting the integer \"k\", which is meant in the description."
                    },
                    {
                        "username": "quantupus",
                        "content": "This is a terribly worded question and should be removed, also it is a ridiculously easy problem with a simple list(set(nums)) in python, but this doesn\\'t work due to weird test case things. Please remove this question from leetcode"
                    },
                    {
                        "username": "Coder_Rick",
                        "content": "[@falguni_mutha](/falguni_mutha) I try to solve this easy question using java Set that working fine in intelliJ text editor but here does not work due to the test cases.... "
                    },
                    {
                        "username": "jlgarcia_",
                        "content": "While I partly agree with you, doing `list(set(nums))` creates a new object. Thus, it doesn\\'t mutate the initial list itself, but creates a new one. The output still is the same tho."
                    },
                    {
                        "username": "falguni_mutha",
                        "content": "oh oh oh. I literally t=did this. The question is absolutely terrible. If the wanted the modified array ask for that. The test cases are so stupid"
                    },
                    {
                        "username": "ogorbatchev",
                        "content": "Hey guys, \\n\\nI just finished the exercice and by looking at some solutions, and worse, the solution given by leetcode .. it doesn\\'t remove the duplicate from the array. \\n\\nI mean you have the pointer to this array, and the function name is REMOVE DUPLICATES, the solution clearly doesn\\'t remove them but just put the values in the beginning of the array. \\n\\nMeh, i wanted to say it :p\\nI am furstrated to see this solution that doesn\\'t actually solve the problem \\uD83D\\uDE05\\n\\nWish you guys a good day/night!"
                    },
                    {
                        "username": "therohitbansal4",
                        "content": "Good afternoon /evening \\uD83D\\uDE05"
                    },
                    {
                        "username": "syx_data",
                        "content": "describe:\\nyou must do this by modifying the input array in-place with O(1) extra memory\\uFF0Cwhat does o(1)exrea memory mean\\n"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "[@Nousie_94](/Nousie_94) dude then why return len(list(set(nums))) does not work its senseless"
                    },
                    {
                        "username": "antoniojsp",
                        "content": "when you see 0(1), it means that the memory used would be the same if the array has 10 elements or one million."
                    },
                    {
                        "username": "Nousie_94",
                        "content": "that means, that you are not allowed to allocate new memory which space depends on the number of elements.\\n\\nIn other words: No matter how many elements in \"nums\" are, your code is not allowed to use more memory (except frorm the array \"nums\" itself, of course)."
                    },
                    {
                        "username": "hem_ajet",
                        "content": "![image](https://assets.leetcode.com/users/yhemanth_teja/image_1557658638.png)\\n"
                    },
                    {
                        "username": "munu8998rai",
                        "content": "[@rajdeepbiswas](/rajdeepbiswas) its working fine without that also!\\n"
                    },
                    {
                        "username": "rajdeepbiswas",
                        "content": "Late comment: is there an usage of the ptr variable that I am missing?"
                    },
                    {
                        "username": "ak_ghoul",
                        "content": "There\\'s this thing on leetcode that we are not allowed to write main function. There can be various ways possible to write code on basis of how things are at main function.\\n*I am having a problem to write code without seeing the main function. *\\nCan somebody tell me how to view it?"
                    },
                    {
                        "username": "bm9avan",
                        "content": " public static void main(String[] args) {\\n        int[] arr ={1,1,2,3};\\n        int i=removeDuplicates(arr);\\n        System.out.println(Arrays.toString(arr)+\"  \"+ i);\\n    }\\njust assume there is nothing execpt declares required values to call given function and print answer"
                    },
                    {
                        "username": "suatozkaya",
                        "content": "[@aryanabraham](/aryanabraham) Hi, this is actually how object oriented programming is implemented. In a real project you do not see what is happening outside of your object. You must code in such a way that, your object should encapsulate the method and just work as expected like here."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "aryanabraham",
                        "content": "Hey ak_ghoul!\\nLeetCode doesn\\'t  let you view the main function; only the function that does the prescribed task is viewable/editable. This is reminiscent of the type of problems one gets in most technical interviews. \\n\\nHappy LeetCoding!"
                    }
                ]
            },
            {
                "id": 1568140,
                "content": [
                    {
                        "username": "nvythedead",
                        "content": "They don\\'t really want you to remove the duplicates. They want you to sort the uniques at the front, then return the length of the sorted part. Then, behind the scenes, they slice the array at the length you give them and the result of that is what they check.\\n\\nJust FYI, this sh_t drove me crazy..."
                    },
                    {
                        "username": "NotAMoose",
                        "content": "Thank you, was ripping my hair out "
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You have to return the correct length of the de-duped array. But when you do the array itself has to be sorted with uniques at the front. You can slice off the extra ones yourself but the judge script is going to do it for you anyway so it\\'s less efficient."
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Nothing stopping you from setting a new array length yourself before returning the length. I didn\\'t realize I didn\\'t have to do it until you said so. Makes sense, though, since you return an int but the output is still an array."
                    },
                    {
                        "username": "Shmormius",
                        "content": "Oh my god, I was going to lose it, I knew something was weird but I couldn\\'t figure out what."
                    },
                    {
                        "username": "NovaVirusXander",
                        "content": "OMG... I was literally going \"Dafuq is going on\" for like 10 mins. Ty so much man #broFist"
                    },
                    {
                        "username": "imanulhuq",
                        "content": "Thank you\\nI was gone mad "
                    },
                    {
                        "username": "emily971133",
                        "content": "if I assign the correct list to the original list (nums), it still responses error...\\nso it seems that we really need to mutate the value of original list(nums)"
                    },
                    {
                        "username": "kuvi41",
                        "content": "Drove me crazy too. Thank god I read this comment, Or else I would have wasted another day. "
                    },
                    {
                        "username": "abobakr",
                        "content": "I don\\'t think. They check the array `nums`  try even without return any thing you will pass some test"
                    },
                    {
                        "username": "Levidps",
                        "content": "Agree! Personally I\\'m not a fan that it actually mutates the original value. This is fine for a problem here but in a real project I\\'d rather avoid this mutation..."
                    },
                    {
                        "username": "Aleton",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You modify the nums array, but you only return k."
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "So in the end what do I have to return? Wheter I return either K or the res array it gives me error"
                    },
                    {
                        "username": "TYork",
                        "content": "Poorly worded then"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "Maybe that is why my solution is not working here but it works in my code editor"
                    },
                    {
                        "username": "venusli370306",
                        "content": "I was on a train and this question buzzed me this whole way. "
                    },
                    {
                        "username": "roman-smal",
                        "content": "whereas in JS you should remove duplicates \\uD83E\\uDD2F"
                    },
                    {
                        "username": "FE_Developer2022",
                        "content": "Thanks man, this is why leetcode sucks. I\\'m heading back to hackerrank"
                    },
                    {
                        "username": "saraahmed2693",
                        "content": "You saved my day! It was driving me crazy!!\\nThank you so much"
                    },
                    {
                        "username": "mukadas026",
                        "content": "seriously man, thanks\\nthey didn\\'t make that very clear in the instructions\\nplus, in the console they don\\'t output what I return, which imo is kinda weird"
                    },
                    {
                        "username": "nrrahul4",
                        "content": "Crazy fellazz.. Thanks man.. You saved my time."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Thanks for that bud!"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "user1306Qa",
                        "content": "Thank you.. these instructions smh"
                    },
                    {
                        "username": "madmonkey95",
                        "content": "\"non-decreasing order\"... just call it ascending. What\\'s with the purposely confusing text?"
                    },
                    {
                        "username": "yunyxue",
                        "content": "Non-decreasing means the next value can be the same as the current one, so [1,1] is also a non-decreasing-order list"
                    },
                    {
                        "username": "acnpssyy",
                        "content": "[@Arshad-Siddiqui](/Arshad-Siddiqui) L to my English teacher he never told me"
                    },
                    {
                        "username": "Arshad-Siddiqui",
                        "content": "Increasing indicates that the values are always higher than the last. In this case the next value might be the same so it isn\\'t increasing. Saying non-decreasing is more descriptive."
                    },
                    {
                        "username": "NischayAgrawal",
                        "content": "Damn !! never knew this. Thanks discussion section."
                    },
                    {
                        "username": "Salman4M",
                        "content": "there is difference between them. For example you have \\'a\\' list .                          a = [1,2,2,3,4,5,6,7,8] .  There are two \\'2\\' and if you say it is  sorted by ascending it isn\\'t. Because 2 is equal to other 2 . So it means there is no ascending between them. If you say non - decreasing order then this rule suits to that list. "
                    },
                    {
                        "username": "cccccwwwww",
                        "content": "The term comes from mathematical analysis. They\\'re using very precise language to avoid any ambiguities. Non-decreasing means a[i+1] >= a[i] rather than (strictly) increasing which would mean a[i+1] > a[i]. You can read up on it here: https://en.wikipedia.org/wiki/Monotonic_function"
                    },
                    {
                        "username": "ReeceBailey",
                        "content": "fr tho :kek:"
                    },
                    {
                        "username": "AJC2k19",
                        "content": "it got to me too but i had to think about it. They\\'re just being very formal specifying non-decreasing since ascending by definition implies increasing; however in an array [1,1,2,2] the second 1 is not greater than than the first. non-decreasing definition holds true here."
                    },
                    {
                        "username": "mrcogllrdo",
                        "content": "[@KovDimaY](/KovDimaY) if that were the case then the majority of filters in the wild for organizing info would have \"non-decreasing\" instead of \"ascending\" as an option to account for duplicates. I have never seen \"non-decreasing\" except today...kinda seems like you came up with that strict definition of ascending out of nowhere."
                    },
                    {
                        "username": "w0rkerbee",
                        "content": "[@KovDimaY](/KovDimaY) the expected answers r literallyin ascending order....."
                    },
                    {
                        "username": "ArthurSPrado",
                        "content": "non-decreasing order = !(decreasing-order) = ascending.  Everything non decreasing is ascending. What\\'s with the purposely confusing mind?"
                    },
                    {
                        "username": "laurentiucozma12",
                        "content": "[@KovDimaY](/KovDimaY) I\\'m pretty sure everyone here including me thinks [1,2,2,3,4,4,5] is ascending and \"non-decreasing\" just makes it more confusing. Idk where you took the definition, if there is something official somewhere for those words please let me know."
                    },
                    {
                        "username": "mewsxd",
                        "content": "i laughed so loud because i was so angry when i read it lmaoo"
                    },
                    {
                        "username": "jdx-code",
                        "content": "haha.. I read that twice to convince myself.. lol"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "\"Non-decreasing\" order and \"ascending\" are different things. \"Ascending\" means that each next element should be strictly bigger than previous. For example: [1,2,3,4,5]. \"Non-decreasing\" means that several elements in a row can be equal, but next one cannot be smaller than previous. For example: [1,2,2,3,4,4,5]. Each \"ascending\" order is \"non-decreasing\" but not each \"non-decreasing\" is \"ascending\". Normally is used to emphasise that numbers can be repeated and kinda prepare us for that."
                    },
                    {
                        "username": "jungle_jim",
                        "content": "The problem says to return the number, _k_, elements after removing duplicates. I get an error returning an integer in Python. I also get an error returning an array with non-repeating _k_ elements and repeating elements after. Which is _also_ supposed to be acceptable."
                    },
                    {
                        "username": "mukadas026",
                        "content": "the instructions got me a bit confused for a while too, they just want `k` to be an integer (length of the sorted part of the array)"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "augustooalcides",
                        "content": "nums vector is passed by reference, so you can modify it by just removing the duplicate numbers"
                    },
                    {
                        "username": "christopherblodgett",
                        "content": "[@abhinav__19](/abhinav__19)  the instructions on this are horrible. You should just be returning the length of the array after it has been cleaned up. BUT, be sure you are modify nums and not creating a second array, because it is checking nums to make sure you removed the duplicates from it."
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Same here"
                    },
                    {
                        "username": "gutta",
                        "content": "hi is there any error in question in question they asked to return size of array after removing duplicates but in output they are showing array.\\ncould you recitify it guys"
                    },
                    {
                        "username": "0xsahilv",
                        "content": "actually they want us to sort array in a way so that all unique elements get to first "
                    },
                    {
                        "username": "rohitmallya",
                        "content": "I too feel the same"
                    },
                    {
                        "username": "zetlian",
                        "content": "[@abdurrahman6489](/abdurrahman6489) still doesnt work for me\\n"
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "And me! I\\'m 75 questions in and no issues - then I hit this one and boom! Sure there\\'s a problem here."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Return the length of the sorted array.\\nThey will verify the same with their function.\\nYour function should return len(nums[:sorted_elements])"
                    },
                    {
                        "username": "Yeyenash",
                        "content": "I have exactly the same question! Who can explain this to us? \\uD83D\\uDE2D"
                    },
                    {
                        "username": "abdurrahman6489",
                        "content": "in the function it is type int. return the value of K. only\\n"
                    },
                    {
                        "username": "iq45y8i",
                        "content": "Answer is expecting an Array (duplicate removed). But the function has return type as int (single element). Please clarify"
                    },
                    {
                        "username": "Simo_Ben_Eckert",
                        "content": "They want you to modify nums but not return it. It is still ebing tested how nums is structured afterwards tho. What you are supposed to return is the length of the sorted part!"
                    },
                    {
                        "username": "shekhaman213",
                        "content": "Array (nums) is passed by reference in the function removeDuplicates , hence any changes in array will be reflected to the nums through its whole scope (outside the function as well)"
                    },
                    {
                        "username": "taychap",
                        "content": "Also note that the question is asking you to mutate the array passed into the function, not return it"
                    },
                    {
                        "username": "Nousie_94",
                        "content": "Answer is expecting the integer \"k\", which is meant in the description."
                    },
                    {
                        "username": "quantupus",
                        "content": "This is a terribly worded question and should be removed, also it is a ridiculously easy problem with a simple list(set(nums)) in python, but this doesn\\'t work due to weird test case things. Please remove this question from leetcode"
                    },
                    {
                        "username": "Coder_Rick",
                        "content": "[@falguni_mutha](/falguni_mutha) I try to solve this easy question using java Set that working fine in intelliJ text editor but here does not work due to the test cases.... "
                    },
                    {
                        "username": "jlgarcia_",
                        "content": "While I partly agree with you, doing `list(set(nums))` creates a new object. Thus, it doesn\\'t mutate the initial list itself, but creates a new one. The output still is the same tho."
                    },
                    {
                        "username": "falguni_mutha",
                        "content": "oh oh oh. I literally t=did this. The question is absolutely terrible. If the wanted the modified array ask for that. The test cases are so stupid"
                    },
                    {
                        "username": "ogorbatchev",
                        "content": "Hey guys, \\n\\nI just finished the exercice and by looking at some solutions, and worse, the solution given by leetcode .. it doesn\\'t remove the duplicate from the array. \\n\\nI mean you have the pointer to this array, and the function name is REMOVE DUPLICATES, the solution clearly doesn\\'t remove them but just put the values in the beginning of the array. \\n\\nMeh, i wanted to say it :p\\nI am furstrated to see this solution that doesn\\'t actually solve the problem \\uD83D\\uDE05\\n\\nWish you guys a good day/night!"
                    },
                    {
                        "username": "therohitbansal4",
                        "content": "Good afternoon /evening \\uD83D\\uDE05"
                    },
                    {
                        "username": "syx_data",
                        "content": "describe:\\nyou must do this by modifying the input array in-place with O(1) extra memory\\uFF0Cwhat does o(1)exrea memory mean\\n"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "[@Nousie_94](/Nousie_94) dude then why return len(list(set(nums))) does not work its senseless"
                    },
                    {
                        "username": "antoniojsp",
                        "content": "when you see 0(1), it means that the memory used would be the same if the array has 10 elements or one million."
                    },
                    {
                        "username": "Nousie_94",
                        "content": "that means, that you are not allowed to allocate new memory which space depends on the number of elements.\\n\\nIn other words: No matter how many elements in \"nums\" are, your code is not allowed to use more memory (except frorm the array \"nums\" itself, of course)."
                    },
                    {
                        "username": "hem_ajet",
                        "content": "![image](https://assets.leetcode.com/users/yhemanth_teja/image_1557658638.png)\\n"
                    },
                    {
                        "username": "munu8998rai",
                        "content": "[@rajdeepbiswas](/rajdeepbiswas) its working fine without that also!\\n"
                    },
                    {
                        "username": "rajdeepbiswas",
                        "content": "Late comment: is there an usage of the ptr variable that I am missing?"
                    },
                    {
                        "username": "ak_ghoul",
                        "content": "There\\'s this thing on leetcode that we are not allowed to write main function. There can be various ways possible to write code on basis of how things are at main function.\\n*I am having a problem to write code without seeing the main function. *\\nCan somebody tell me how to view it?"
                    },
                    {
                        "username": "bm9avan",
                        "content": " public static void main(String[] args) {\\n        int[] arr ={1,1,2,3};\\n        int i=removeDuplicates(arr);\\n        System.out.println(Arrays.toString(arr)+\"  \"+ i);\\n    }\\njust assume there is nothing execpt declares required values to call given function and print answer"
                    },
                    {
                        "username": "suatozkaya",
                        "content": "[@aryanabraham](/aryanabraham) Hi, this is actually how object oriented programming is implemented. In a real project you do not see what is happening outside of your object. You must code in such a way that, your object should encapsulate the method and just work as expected like here."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "aryanabraham",
                        "content": "Hey ak_ghoul!\\nLeetCode doesn\\'t  let you view the main function; only the function that does the prescribed task is viewable/editable. This is reminiscent of the type of problems one gets in most technical interviews. \\n\\nHappy LeetCoding!"
                    }
                ]
            },
            {
                "id": 1564850,
                "content": [
                    {
                        "username": "nvythedead",
                        "content": "They don\\'t really want you to remove the duplicates. They want you to sort the uniques at the front, then return the length of the sorted part. Then, behind the scenes, they slice the array at the length you give them and the result of that is what they check.\\n\\nJust FYI, this sh_t drove me crazy..."
                    },
                    {
                        "username": "NotAMoose",
                        "content": "Thank you, was ripping my hair out "
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You have to return the correct length of the de-duped array. But when you do the array itself has to be sorted with uniques at the front. You can slice off the extra ones yourself but the judge script is going to do it for you anyway so it\\'s less efficient."
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Nothing stopping you from setting a new array length yourself before returning the length. I didn\\'t realize I didn\\'t have to do it until you said so. Makes sense, though, since you return an int but the output is still an array."
                    },
                    {
                        "username": "Shmormius",
                        "content": "Oh my god, I was going to lose it, I knew something was weird but I couldn\\'t figure out what."
                    },
                    {
                        "username": "NovaVirusXander",
                        "content": "OMG... I was literally going \"Dafuq is going on\" for like 10 mins. Ty so much man #broFist"
                    },
                    {
                        "username": "imanulhuq",
                        "content": "Thank you\\nI was gone mad "
                    },
                    {
                        "username": "emily971133",
                        "content": "if I assign the correct list to the original list (nums), it still responses error...\\nso it seems that we really need to mutate the value of original list(nums)"
                    },
                    {
                        "username": "kuvi41",
                        "content": "Drove me crazy too. Thank god I read this comment, Or else I would have wasted another day. "
                    },
                    {
                        "username": "abobakr",
                        "content": "I don\\'t think. They check the array `nums`  try even without return any thing you will pass some test"
                    },
                    {
                        "username": "Levidps",
                        "content": "Agree! Personally I\\'m not a fan that it actually mutates the original value. This is fine for a problem here but in a real project I\\'d rather avoid this mutation..."
                    },
                    {
                        "username": "Aleton",
                        "content": "[@Stefano-Buzzoni](/Stefano-Buzzoni) You modify the nums array, but you only return k."
                    },
                    {
                        "username": "Stefano-Buzzoni",
                        "content": "So in the end what do I have to return? Wheter I return either K or the res array it gives me error"
                    },
                    {
                        "username": "TYork",
                        "content": "Poorly worded then"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "Maybe that is why my solution is not working here but it works in my code editor"
                    },
                    {
                        "username": "venusli370306",
                        "content": "I was on a train and this question buzzed me this whole way. "
                    },
                    {
                        "username": "roman-smal",
                        "content": "whereas in JS you should remove duplicates \\uD83E\\uDD2F"
                    },
                    {
                        "username": "FE_Developer2022",
                        "content": "Thanks man, this is why leetcode sucks. I\\'m heading back to hackerrank"
                    },
                    {
                        "username": "saraahmed2693",
                        "content": "You saved my day! It was driving me crazy!!\\nThank you so much"
                    },
                    {
                        "username": "mukadas026",
                        "content": "seriously man, thanks\\nthey didn\\'t make that very clear in the instructions\\nplus, in the console they don\\'t output what I return, which imo is kinda weird"
                    },
                    {
                        "username": "nrrahul4",
                        "content": "Crazy fellazz.. Thanks man.. You saved my time."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Thanks for that bud!"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "user1306Qa",
                        "content": "Thank you.. these instructions smh"
                    },
                    {
                        "username": "madmonkey95",
                        "content": "\"non-decreasing order\"... just call it ascending. What\\'s with the purposely confusing text?"
                    },
                    {
                        "username": "yunyxue",
                        "content": "Non-decreasing means the next value can be the same as the current one, so [1,1] is also a non-decreasing-order list"
                    },
                    {
                        "username": "acnpssyy",
                        "content": "[@Arshad-Siddiqui](/Arshad-Siddiqui) L to my English teacher he never told me"
                    },
                    {
                        "username": "Arshad-Siddiqui",
                        "content": "Increasing indicates that the values are always higher than the last. In this case the next value might be the same so it isn\\'t increasing. Saying non-decreasing is more descriptive."
                    },
                    {
                        "username": "NischayAgrawal",
                        "content": "Damn !! never knew this. Thanks discussion section."
                    },
                    {
                        "username": "Salman4M",
                        "content": "there is difference between them. For example you have \\'a\\' list .                          a = [1,2,2,3,4,5,6,7,8] .  There are two \\'2\\' and if you say it is  sorted by ascending it isn\\'t. Because 2 is equal to other 2 . So it means there is no ascending between them. If you say non - decreasing order then this rule suits to that list. "
                    },
                    {
                        "username": "cccccwwwww",
                        "content": "The term comes from mathematical analysis. They\\'re using very precise language to avoid any ambiguities. Non-decreasing means a[i+1] >= a[i] rather than (strictly) increasing which would mean a[i+1] > a[i]. You can read up on it here: https://en.wikipedia.org/wiki/Monotonic_function"
                    },
                    {
                        "username": "ReeceBailey",
                        "content": "fr tho :kek:"
                    },
                    {
                        "username": "AJC2k19",
                        "content": "it got to me too but i had to think about it. They\\'re just being very formal specifying non-decreasing since ascending by definition implies increasing; however in an array [1,1,2,2] the second 1 is not greater than than the first. non-decreasing definition holds true here."
                    },
                    {
                        "username": "mrcogllrdo",
                        "content": "[@KovDimaY](/KovDimaY) if that were the case then the majority of filters in the wild for organizing info would have \"non-decreasing\" instead of \"ascending\" as an option to account for duplicates. I have never seen \"non-decreasing\" except today...kinda seems like you came up with that strict definition of ascending out of nowhere."
                    },
                    {
                        "username": "w0rkerbee",
                        "content": "[@KovDimaY](/KovDimaY) the expected answers r literallyin ascending order....."
                    },
                    {
                        "username": "ArthurSPrado",
                        "content": "non-decreasing order = !(decreasing-order) = ascending.  Everything non decreasing is ascending. What\\'s with the purposely confusing mind?"
                    },
                    {
                        "username": "laurentiucozma12",
                        "content": "[@KovDimaY](/KovDimaY) I\\'m pretty sure everyone here including me thinks [1,2,2,3,4,4,5] is ascending and \"non-decreasing\" just makes it more confusing. Idk where you took the definition, if there is something official somewhere for those words please let me know."
                    },
                    {
                        "username": "mewsxd",
                        "content": "i laughed so loud because i was so angry when i read it lmaoo"
                    },
                    {
                        "username": "jdx-code",
                        "content": "haha.. I read that twice to convince myself.. lol"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "\"Non-decreasing\" order and \"ascending\" are different things. \"Ascending\" means that each next element should be strictly bigger than previous. For example: [1,2,3,4,5]. \"Non-decreasing\" means that several elements in a row can be equal, but next one cannot be smaller than previous. For example: [1,2,2,3,4,4,5]. Each \"ascending\" order is \"non-decreasing\" but not each \"non-decreasing\" is \"ascending\". Normally is used to emphasise that numbers can be repeated and kinda prepare us for that."
                    },
                    {
                        "username": "jungle_jim",
                        "content": "The problem says to return the number, _k_, elements after removing duplicates. I get an error returning an integer in Python. I also get an error returning an array with non-repeating _k_ elements and repeating elements after. Which is _also_ supposed to be acceptable."
                    },
                    {
                        "username": "mukadas026",
                        "content": "the instructions got me a bit confused for a while too, they just want `k` to be an integer (length of the sorted part of the array)"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "augustooalcides",
                        "content": "nums vector is passed by reference, so you can modify it by just removing the duplicate numbers"
                    },
                    {
                        "username": "christopherblodgett",
                        "content": "[@abhinav__19](/abhinav__19)  the instructions on this are horrible. You should just be returning the length of the array after it has been cleaned up. BUT, be sure you are modify nums and not creating a second array, because it is checking nums to make sure you removed the duplicates from it."
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Same here"
                    },
                    {
                        "username": "gutta",
                        "content": "hi is there any error in question in question they asked to return size of array after removing duplicates but in output they are showing array.\\ncould you recitify it guys"
                    },
                    {
                        "username": "0xsahilv",
                        "content": "actually they want us to sort array in a way so that all unique elements get to first "
                    },
                    {
                        "username": "rohitmallya",
                        "content": "I too feel the same"
                    },
                    {
                        "username": "zetlian",
                        "content": "[@abdurrahman6489](/abdurrahman6489) still doesnt work for me\\n"
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "And me! I\\'m 75 questions in and no issues - then I hit this one and boom! Sure there\\'s a problem here."
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Return the length of the sorted array.\\nThey will verify the same with their function.\\nYour function should return len(nums[:sorted_elements])"
                    },
                    {
                        "username": "Yeyenash",
                        "content": "I have exactly the same question! Who can explain this to us? \\uD83D\\uDE2D"
                    },
                    {
                        "username": "abdurrahman6489",
                        "content": "in the function it is type int. return the value of K. only\\n"
                    },
                    {
                        "username": "iq45y8i",
                        "content": "Answer is expecting an Array (duplicate removed). But the function has return type as int (single element). Please clarify"
                    },
                    {
                        "username": "Simo_Ben_Eckert",
                        "content": "They want you to modify nums but not return it. It is still ebing tested how nums is structured afterwards tho. What you are supposed to return is the length of the sorted part!"
                    },
                    {
                        "username": "shekhaman213",
                        "content": "Array (nums) is passed by reference in the function removeDuplicates , hence any changes in array will be reflected to the nums through its whole scope (outside the function as well)"
                    },
                    {
                        "username": "taychap",
                        "content": "Also note that the question is asking you to mutate the array passed into the function, not return it"
                    },
                    {
                        "username": "Nousie_94",
                        "content": "Answer is expecting the integer \"k\", which is meant in the description."
                    },
                    {
                        "username": "quantupus",
                        "content": "This is a terribly worded question and should be removed, also it is a ridiculously easy problem with a simple list(set(nums)) in python, but this doesn\\'t work due to weird test case things. Please remove this question from leetcode"
                    },
                    {
                        "username": "Coder_Rick",
                        "content": "[@falguni_mutha](/falguni_mutha) I try to solve this easy question using java Set that working fine in intelliJ text editor but here does not work due to the test cases.... "
                    },
                    {
                        "username": "jlgarcia_",
                        "content": "While I partly agree with you, doing `list(set(nums))` creates a new object. Thus, it doesn\\'t mutate the initial list itself, but creates a new one. The output still is the same tho."
                    },
                    {
                        "username": "falguni_mutha",
                        "content": "oh oh oh. I literally t=did this. The question is absolutely terrible. If the wanted the modified array ask for that. The test cases are so stupid"
                    },
                    {
                        "username": "ogorbatchev",
                        "content": "Hey guys, \\n\\nI just finished the exercice and by looking at some solutions, and worse, the solution given by leetcode .. it doesn\\'t remove the duplicate from the array. \\n\\nI mean you have the pointer to this array, and the function name is REMOVE DUPLICATES, the solution clearly doesn\\'t remove them but just put the values in the beginning of the array. \\n\\nMeh, i wanted to say it :p\\nI am furstrated to see this solution that doesn\\'t actually solve the problem \\uD83D\\uDE05\\n\\nWish you guys a good day/night!"
                    },
                    {
                        "username": "therohitbansal4",
                        "content": "Good afternoon /evening \\uD83D\\uDE05"
                    },
                    {
                        "username": "syx_data",
                        "content": "describe:\\nyou must do this by modifying the input array in-place with O(1) extra memory\\uFF0Cwhat does o(1)exrea memory mean\\n"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "[@Nousie_94](/Nousie_94) dude then why return len(list(set(nums))) does not work its senseless"
                    },
                    {
                        "username": "antoniojsp",
                        "content": "when you see 0(1), it means that the memory used would be the same if the array has 10 elements or one million."
                    },
                    {
                        "username": "Nousie_94",
                        "content": "that means, that you are not allowed to allocate new memory which space depends on the number of elements.\\n\\nIn other words: No matter how many elements in \"nums\" are, your code is not allowed to use more memory (except frorm the array \"nums\" itself, of course)."
                    },
                    {
                        "username": "hem_ajet",
                        "content": "![image](https://assets.leetcode.com/users/yhemanth_teja/image_1557658638.png)\\n"
                    },
                    {
                        "username": "munu8998rai",
                        "content": "[@rajdeepbiswas](/rajdeepbiswas) its working fine without that also!\\n"
                    },
                    {
                        "username": "rajdeepbiswas",
                        "content": "Late comment: is there an usage of the ptr variable that I am missing?"
                    },
                    {
                        "username": "ak_ghoul",
                        "content": "There\\'s this thing on leetcode that we are not allowed to write main function. There can be various ways possible to write code on basis of how things are at main function.\\n*I am having a problem to write code without seeing the main function. *\\nCan somebody tell me how to view it?"
                    },
                    {
                        "username": "bm9avan",
                        "content": " public static void main(String[] args) {\\n        int[] arr ={1,1,2,3};\\n        int i=removeDuplicates(arr);\\n        System.out.println(Arrays.toString(arr)+\"  \"+ i);\\n    }\\njust assume there is nothing execpt declares required values to call given function and print answer"
                    },
                    {
                        "username": "suatozkaya",
                        "content": "[@aryanabraham](/aryanabraham) Hi, this is actually how object oriented programming is implemented. In a real project you do not see what is happening outside of your object. You must code in such a way that, your object should encapsulate the method and just work as expected like here."
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "aryanabraham",
                        "content": "Hey ak_ghoul!\\nLeetCode doesn\\'t  let you view the main function; only the function that does the prescribed task is viewable/editable. This is reminiscent of the type of problems one gets in most technical interviews. \\n\\nHappy LeetCoding!"
                    }
                ]
            },
            {
                "id": 1574154,
                "content": [
                    {
                        "username": "praveensbj8",
                        "content": "This is the javascript solution I tried which is correct but terminal showing wrong answer, Please help.\\n\\nSolution : [1,1,2].filter((n,i,nums) => nums.indexOf(n) === i).length;"
                    },
                    {
                        "username": "user5181l",
                        "content": "We need to return the same array. in filter and map function was create the new array of results so it will get the wrong answer.\nSo we can use foreach function or for function to get the correct ans."
                    },
                    {
                        "username": "kirti_9",
                        "content": "Because output should also return \\'_\\' underscore symbol as per the length of duplicates in it.\\nfor example: [ 1,1,2 ]\\nouput: [ 1,2,_ ]\\nhere we have 1 extra duplicate so need to return the underscore instead of that duplicate"
                    },
                    {
                        "username": "sameergaikwad222",
                        "content": "i tried this solution which gives me right ans but leetcode saying it is giving me wrong ans\\nreturn nums = [... new Set(nums)]; \\njust one liner code. :("
                    },
                    {
                        "username": "YogiKnight",
                        "content": "Same thing is happening to me but for the python version"
                    },
                    {
                        "username": "AksharGoyal",
                        "content": "Is the process broken? I am converting the nums to a set then a list again but it\\'s showing me something else\\n![image](https://assets.leetcode.com/users/images/a3130a38-5248-4d5d-9595-91eee80039de_1626070452.4349406.png)\\n"
                    },
                    {
                        "username": "anuraggupta29",
                        "content": "The description says \\'It doesn\\'t matter what you leave behind that length\\', but it is not accepting my python solution.\\nIt says you answer [1,2,None], expected answer [1,2]. Any Ideas?"
                    },
                    {
                        "username": "idklol8",
                        "content": "It looks like in this instance, you\\'re retuning 3 when it\\'s expecting a 2, so the grader is looking at the first 3 elements in the array."
                    },
                    {
                        "username": "rufengch",
                        "content": "Input: `[1, 1]`\\nExpected: `[1]`\\n\\nIsn't this wrong? \\n\\nIt says `It doesn't matter what you leave beyond the new length.`"
                    },
                    {
                        "username": "d4mir",
                        "content": "expected [1] with k = 1, elements after first elements don\\'t show up since they don\\'t matter"
                    },
                    {
                        "username": "sukelali",
                        "content": "Is there any way to reduce the O(n) of this solution ?\\n\\n    public class Solution {\\n        public int RemoveDuplicates(int[] nums) {\\n\\n            int insertIndex = 1;\\n\\n            for(int i = 1; i < nums.Length; i++)\\n            {\\n                if(nums[i-1] != nums[i])\\n                {\\n                    nums[insertIndex] = nums[i];\\n\\n                    insertIndex++;\\n                }\\n            }\\n\\n            return insertIndex;\\n\\n        }\\n    }"
                    },
                    {
                        "username": "KimFarida",
                        "content": "Use two pointers. Using a while loop, first initailze your stop to the end of the array and intialize i to zero. and k = i + 1. \\nYou should have while i < j and k < j .\\nSo youre checking nums[i] and the the value after it, nums[k]. If they are same, keep increasing k till they are not. else, in the case they are not, take the value of nums[k] and put it in nums[i + 1]. You can then increase i.\\nYou can now return i + 1\\n(which is the index of i plus one, being that i starts from 0)\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        i = 0\\n        j = len(nums)\\n        k = i + 1\\n\\n        while i < j and k < j:\\n            if nums[i] == nums[k]:\\n                k+=1\\n            else:\\n                nums[i+1] = nums[k]\\n                i += 1\\n        return i + 1\\nActually took me a while to get it. This is my second time solving this problem "
                    },
                    {
                        "username": "zhxlee",
                        "content": "why len(set(nums)) is wrong?"
                    },
                    {
                        "username": "sana479",
                        "content": "[@kBrostoff](/kBrostoff) I sorted nums then did len(set(nums)). It actually works perfectly on pycharm  "
                    },
                    {
                        "username": "Jvidal1997",
                        "content": "[@kBrostoff](/kBrostoff) No it doesn\\'t, but a set can\\'t contain duplicates. So the length of it returns the number of unique chars.\\n\\nThe problem here is it will return the integer effectively, but it doesn\\'t modify the list. Essentially the duplicates need to be pushed to the end before returning the number of unique characters."
                    },
                    {
                        "username": "kBrostoff",
                        "content": "Python\\'s `set` doesn\\'t maintain order."
                    },
                    {
                        "username": "FeYaroslava",
                        "content": "If you code fails even the first test in situation like\\nyou answer [1,2], expected answer [1,2] or similar:\\n\\n1. You must modify the array \"nums\" without overwriting the data to another variable.\\n2. Your code should use O(1) memory. \\n3. You must return the length of the sorted array (the number of unique digits in the array).\\n\\nI hope this helps."
                    },
                    {
                        "username": "Bobzero",
                        "content": "They should probably change the title for this question.. \\nAsking someone to remove duplicates and then tell him to return an integer value which will decide the correct length of the rearranged array is kind of cheating though..."
                    },
                    {
                        "username": "kallolmedhi24",
                        "content": "exactly\\n"
                    },
                    {
                        "username": "subhasishhalder107",
                        "content": "![image](https://assets.leetcode.com/users/images/5ba3e386-b61c-4326-9c13-25ddea8f93db_1644804878.1030195.jpeg)\\n"
                    },
                    {
                        "username": "user7753pC",
                        "content": "![image](https://assets.leetcode.com/users/images/599daee3-6748-4ea4-89ec-3bf24d6e6684_1628841560.093207.png)\\n\\nHave anyone experienced leetcode behaves weirdly? \\nMy output is correct as per console.log but  seems they output is bit off\\n"
                    },
                    {
                        "username": "dinesh_kamani",
                        "content": "Actually as per my observation, You are not supposed to take new array as it is mentioned in the question, infact when you go with this approach u will get more than O(1) space complexity, which actually violates the given condition!!!"
                    }
                ]
            },
            {
                "id": 1568596,
                "content": [
                    {
                        "username": "praveensbj8",
                        "content": "This is the javascript solution I tried which is correct but terminal showing wrong answer, Please help.\\n\\nSolution : [1,1,2].filter((n,i,nums) => nums.indexOf(n) === i).length;"
                    },
                    {
                        "username": "user5181l",
                        "content": "We need to return the same array. in filter and map function was create the new array of results so it will get the wrong answer.\nSo we can use foreach function or for function to get the correct ans."
                    },
                    {
                        "username": "kirti_9",
                        "content": "Because output should also return \\'_\\' underscore symbol as per the length of duplicates in it.\\nfor example: [ 1,1,2 ]\\nouput: [ 1,2,_ ]\\nhere we have 1 extra duplicate so need to return the underscore instead of that duplicate"
                    },
                    {
                        "username": "sameergaikwad222",
                        "content": "i tried this solution which gives me right ans but leetcode saying it is giving me wrong ans\\nreturn nums = [... new Set(nums)]; \\njust one liner code. :("
                    },
                    {
                        "username": "YogiKnight",
                        "content": "Same thing is happening to me but for the python version"
                    },
                    {
                        "username": "AksharGoyal",
                        "content": "Is the process broken? I am converting the nums to a set then a list again but it\\'s showing me something else\\n![image](https://assets.leetcode.com/users/images/a3130a38-5248-4d5d-9595-91eee80039de_1626070452.4349406.png)\\n"
                    },
                    {
                        "username": "anuraggupta29",
                        "content": "The description says \\'It doesn\\'t matter what you leave behind that length\\', but it is not accepting my python solution.\\nIt says you answer [1,2,None], expected answer [1,2]. Any Ideas?"
                    },
                    {
                        "username": "idklol8",
                        "content": "It looks like in this instance, you\\'re retuning 3 when it\\'s expecting a 2, so the grader is looking at the first 3 elements in the array."
                    },
                    {
                        "username": "rufengch",
                        "content": "Input: `[1, 1]`\\nExpected: `[1]`\\n\\nIsn't this wrong? \\n\\nIt says `It doesn't matter what you leave beyond the new length.`"
                    },
                    {
                        "username": "d4mir",
                        "content": "expected [1] with k = 1, elements after first elements don\\'t show up since they don\\'t matter"
                    },
                    {
                        "username": "sukelali",
                        "content": "Is there any way to reduce the O(n) of this solution ?\\n\\n    public class Solution {\\n        public int RemoveDuplicates(int[] nums) {\\n\\n            int insertIndex = 1;\\n\\n            for(int i = 1; i < nums.Length; i++)\\n            {\\n                if(nums[i-1] != nums[i])\\n                {\\n                    nums[insertIndex] = nums[i];\\n\\n                    insertIndex++;\\n                }\\n            }\\n\\n            return insertIndex;\\n\\n        }\\n    }"
                    },
                    {
                        "username": "KimFarida",
                        "content": "Use two pointers. Using a while loop, first initailze your stop to the end of the array and intialize i to zero. and k = i + 1. \\nYou should have while i < j and k < j .\\nSo youre checking nums[i] and the the value after it, nums[k]. If they are same, keep increasing k till they are not. else, in the case they are not, take the value of nums[k] and put it in nums[i + 1]. You can then increase i.\\nYou can now return i + 1\\n(which is the index of i plus one, being that i starts from 0)\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        i = 0\\n        j = len(nums)\\n        k = i + 1\\n\\n        while i < j and k < j:\\n            if nums[i] == nums[k]:\\n                k+=1\\n            else:\\n                nums[i+1] = nums[k]\\n                i += 1\\n        return i + 1\\nActually took me a while to get it. This is my second time solving this problem "
                    },
                    {
                        "username": "zhxlee",
                        "content": "why len(set(nums)) is wrong?"
                    },
                    {
                        "username": "sana479",
                        "content": "[@kBrostoff](/kBrostoff) I sorted nums then did len(set(nums)). It actually works perfectly on pycharm  "
                    },
                    {
                        "username": "Jvidal1997",
                        "content": "[@kBrostoff](/kBrostoff) No it doesn\\'t, but a set can\\'t contain duplicates. So the length of it returns the number of unique chars.\\n\\nThe problem here is it will return the integer effectively, but it doesn\\'t modify the list. Essentially the duplicates need to be pushed to the end before returning the number of unique characters."
                    },
                    {
                        "username": "kBrostoff",
                        "content": "Python\\'s `set` doesn\\'t maintain order."
                    },
                    {
                        "username": "FeYaroslava",
                        "content": "If you code fails even the first test in situation like\\nyou answer [1,2], expected answer [1,2] or similar:\\n\\n1. You must modify the array \"nums\" without overwriting the data to another variable.\\n2. Your code should use O(1) memory. \\n3. You must return the length of the sorted array (the number of unique digits in the array).\\n\\nI hope this helps."
                    },
                    {
                        "username": "Bobzero",
                        "content": "They should probably change the title for this question.. \\nAsking someone to remove duplicates and then tell him to return an integer value which will decide the correct length of the rearranged array is kind of cheating though..."
                    },
                    {
                        "username": "kallolmedhi24",
                        "content": "exactly\\n"
                    },
                    {
                        "username": "subhasishhalder107",
                        "content": "![image](https://assets.leetcode.com/users/images/5ba3e386-b61c-4326-9c13-25ddea8f93db_1644804878.1030195.jpeg)\\n"
                    },
                    {
                        "username": "user7753pC",
                        "content": "![image](https://assets.leetcode.com/users/images/599daee3-6748-4ea4-89ec-3bf24d6e6684_1628841560.093207.png)\\n\\nHave anyone experienced leetcode behaves weirdly? \\nMy output is correct as per console.log but  seems they output is bit off\\n"
                    },
                    {
                        "username": "dinesh_kamani",
                        "content": "Actually as per my observation, You are not supposed to take new array as it is mentioned in the question, infact when you go with this approach u will get more than O(1) space complexity, which actually violates the given condition!!!"
                    }
                ]
            },
            {
                "id": 1574115,
                "content": [
                    {
                        "username": "praveensbj8",
                        "content": "This is the javascript solution I tried which is correct but terminal showing wrong answer, Please help.\\n\\nSolution : [1,1,2].filter((n,i,nums) => nums.indexOf(n) === i).length;"
                    },
                    {
                        "username": "user5181l",
                        "content": "We need to return the same array. in filter and map function was create the new array of results so it will get the wrong answer.\nSo we can use foreach function or for function to get the correct ans."
                    },
                    {
                        "username": "kirti_9",
                        "content": "Because output should also return \\'_\\' underscore symbol as per the length of duplicates in it.\\nfor example: [ 1,1,2 ]\\nouput: [ 1,2,_ ]\\nhere we have 1 extra duplicate so need to return the underscore instead of that duplicate"
                    },
                    {
                        "username": "sameergaikwad222",
                        "content": "i tried this solution which gives me right ans but leetcode saying it is giving me wrong ans\\nreturn nums = [... new Set(nums)]; \\njust one liner code. :("
                    },
                    {
                        "username": "YogiKnight",
                        "content": "Same thing is happening to me but for the python version"
                    },
                    {
                        "username": "AksharGoyal",
                        "content": "Is the process broken? I am converting the nums to a set then a list again but it\\'s showing me something else\\n![image](https://assets.leetcode.com/users/images/a3130a38-5248-4d5d-9595-91eee80039de_1626070452.4349406.png)\\n"
                    },
                    {
                        "username": "anuraggupta29",
                        "content": "The description says \\'It doesn\\'t matter what you leave behind that length\\', but it is not accepting my python solution.\\nIt says you answer [1,2,None], expected answer [1,2]. Any Ideas?"
                    },
                    {
                        "username": "idklol8",
                        "content": "It looks like in this instance, you\\'re retuning 3 when it\\'s expecting a 2, so the grader is looking at the first 3 elements in the array."
                    },
                    {
                        "username": "rufengch",
                        "content": "Input: `[1, 1]`\\nExpected: `[1]`\\n\\nIsn't this wrong? \\n\\nIt says `It doesn't matter what you leave beyond the new length.`"
                    },
                    {
                        "username": "d4mir",
                        "content": "expected [1] with k = 1, elements after first elements don\\'t show up since they don\\'t matter"
                    },
                    {
                        "username": "sukelali",
                        "content": "Is there any way to reduce the O(n) of this solution ?\\n\\n    public class Solution {\\n        public int RemoveDuplicates(int[] nums) {\\n\\n            int insertIndex = 1;\\n\\n            for(int i = 1; i < nums.Length; i++)\\n            {\\n                if(nums[i-1] != nums[i])\\n                {\\n                    nums[insertIndex] = nums[i];\\n\\n                    insertIndex++;\\n                }\\n            }\\n\\n            return insertIndex;\\n\\n        }\\n    }"
                    },
                    {
                        "username": "KimFarida",
                        "content": "Use two pointers. Using a while loop, first initailze your stop to the end of the array and intialize i to zero. and k = i + 1. \\nYou should have while i < j and k < j .\\nSo youre checking nums[i] and the the value after it, nums[k]. If they are same, keep increasing k till they are not. else, in the case they are not, take the value of nums[k] and put it in nums[i + 1]. You can then increase i.\\nYou can now return i + 1\\n(which is the index of i plus one, being that i starts from 0)\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        i = 0\\n        j = len(nums)\\n        k = i + 1\\n\\n        while i < j and k < j:\\n            if nums[i] == nums[k]:\\n                k+=1\\n            else:\\n                nums[i+1] = nums[k]\\n                i += 1\\n        return i + 1\\nActually took me a while to get it. This is my second time solving this problem "
                    },
                    {
                        "username": "zhxlee",
                        "content": "why len(set(nums)) is wrong?"
                    },
                    {
                        "username": "sana479",
                        "content": "[@kBrostoff](/kBrostoff) I sorted nums then did len(set(nums)). It actually works perfectly on pycharm  "
                    },
                    {
                        "username": "Jvidal1997",
                        "content": "[@kBrostoff](/kBrostoff) No it doesn\\'t, but a set can\\'t contain duplicates. So the length of it returns the number of unique chars.\\n\\nThe problem here is it will return the integer effectively, but it doesn\\'t modify the list. Essentially the duplicates need to be pushed to the end before returning the number of unique characters."
                    },
                    {
                        "username": "kBrostoff",
                        "content": "Python\\'s `set` doesn\\'t maintain order."
                    },
                    {
                        "username": "FeYaroslava",
                        "content": "If you code fails even the first test in situation like\\nyou answer [1,2], expected answer [1,2] or similar:\\n\\n1. You must modify the array \"nums\" without overwriting the data to another variable.\\n2. Your code should use O(1) memory. \\n3. You must return the length of the sorted array (the number of unique digits in the array).\\n\\nI hope this helps."
                    },
                    {
                        "username": "Bobzero",
                        "content": "They should probably change the title for this question.. \\nAsking someone to remove duplicates and then tell him to return an integer value which will decide the correct length of the rearranged array is kind of cheating though..."
                    },
                    {
                        "username": "kallolmedhi24",
                        "content": "exactly\\n"
                    },
                    {
                        "username": "subhasishhalder107",
                        "content": "![image](https://assets.leetcode.com/users/images/5ba3e386-b61c-4326-9c13-25ddea8f93db_1644804878.1030195.jpeg)\\n"
                    },
                    {
                        "username": "user7753pC",
                        "content": "![image](https://assets.leetcode.com/users/images/599daee3-6748-4ea4-89ec-3bf24d6e6684_1628841560.093207.png)\\n\\nHave anyone experienced leetcode behaves weirdly? \\nMy output is correct as per console.log but  seems they output is bit off\\n"
                    },
                    {
                        "username": "dinesh_kamani",
                        "content": "Actually as per my observation, You are not supposed to take new array as it is mentioned in the question, infact when you go with this approach u will get more than O(1) space complexity, which actually violates the given condition!!!"
                    }
                ]
            },
            {
                "id": 1571066,
                "content": [
                    {
                        "username": "praveensbj8",
                        "content": "This is the javascript solution I tried which is correct but terminal showing wrong answer, Please help.\\n\\nSolution : [1,1,2].filter((n,i,nums) => nums.indexOf(n) === i).length;"
                    },
                    {
                        "username": "user5181l",
                        "content": "We need to return the same array. in filter and map function was create the new array of results so it will get the wrong answer.\nSo we can use foreach function or for function to get the correct ans."
                    },
                    {
                        "username": "kirti_9",
                        "content": "Because output should also return \\'_\\' underscore symbol as per the length of duplicates in it.\\nfor example: [ 1,1,2 ]\\nouput: [ 1,2,_ ]\\nhere we have 1 extra duplicate so need to return the underscore instead of that duplicate"
                    },
                    {
                        "username": "sameergaikwad222",
                        "content": "i tried this solution which gives me right ans but leetcode saying it is giving me wrong ans\\nreturn nums = [... new Set(nums)]; \\njust one liner code. :("
                    },
                    {
                        "username": "YogiKnight",
                        "content": "Same thing is happening to me but for the python version"
                    },
                    {
                        "username": "AksharGoyal",
                        "content": "Is the process broken? I am converting the nums to a set then a list again but it\\'s showing me something else\\n![image](https://assets.leetcode.com/users/images/a3130a38-5248-4d5d-9595-91eee80039de_1626070452.4349406.png)\\n"
                    },
                    {
                        "username": "anuraggupta29",
                        "content": "The description says \\'It doesn\\'t matter what you leave behind that length\\', but it is not accepting my python solution.\\nIt says you answer [1,2,None], expected answer [1,2]. Any Ideas?"
                    },
                    {
                        "username": "idklol8",
                        "content": "It looks like in this instance, you\\'re retuning 3 when it\\'s expecting a 2, so the grader is looking at the first 3 elements in the array."
                    },
                    {
                        "username": "rufengch",
                        "content": "Input: `[1, 1]`\\nExpected: `[1]`\\n\\nIsn't this wrong? \\n\\nIt says `It doesn't matter what you leave beyond the new length.`"
                    },
                    {
                        "username": "d4mir",
                        "content": "expected [1] with k = 1, elements after first elements don\\'t show up since they don\\'t matter"
                    },
                    {
                        "username": "sukelali",
                        "content": "Is there any way to reduce the O(n) of this solution ?\\n\\n    public class Solution {\\n        public int RemoveDuplicates(int[] nums) {\\n\\n            int insertIndex = 1;\\n\\n            for(int i = 1; i < nums.Length; i++)\\n            {\\n                if(nums[i-1] != nums[i])\\n                {\\n                    nums[insertIndex] = nums[i];\\n\\n                    insertIndex++;\\n                }\\n            }\\n\\n            return insertIndex;\\n\\n        }\\n    }"
                    },
                    {
                        "username": "KimFarida",
                        "content": "Use two pointers. Using a while loop, first initailze your stop to the end of the array and intialize i to zero. and k = i + 1. \\nYou should have while i < j and k < j .\\nSo youre checking nums[i] and the the value after it, nums[k]. If they are same, keep increasing k till they are not. else, in the case they are not, take the value of nums[k] and put it in nums[i + 1]. You can then increase i.\\nYou can now return i + 1\\n(which is the index of i plus one, being that i starts from 0)\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        i = 0\\n        j = len(nums)\\n        k = i + 1\\n\\n        while i < j and k < j:\\n            if nums[i] == nums[k]:\\n                k+=1\\n            else:\\n                nums[i+1] = nums[k]\\n                i += 1\\n        return i + 1\\nActually took me a while to get it. This is my second time solving this problem "
                    },
                    {
                        "username": "zhxlee",
                        "content": "why len(set(nums)) is wrong?"
                    },
                    {
                        "username": "sana479",
                        "content": "[@kBrostoff](/kBrostoff) I sorted nums then did len(set(nums)). It actually works perfectly on pycharm  "
                    },
                    {
                        "username": "Jvidal1997",
                        "content": "[@kBrostoff](/kBrostoff) No it doesn\\'t, but a set can\\'t contain duplicates. So the length of it returns the number of unique chars.\\n\\nThe problem here is it will return the integer effectively, but it doesn\\'t modify the list. Essentially the duplicates need to be pushed to the end before returning the number of unique characters."
                    },
                    {
                        "username": "kBrostoff",
                        "content": "Python\\'s `set` doesn\\'t maintain order."
                    },
                    {
                        "username": "FeYaroslava",
                        "content": "If you code fails even the first test in situation like\\nyou answer [1,2], expected answer [1,2] or similar:\\n\\n1. You must modify the array \"nums\" without overwriting the data to another variable.\\n2. Your code should use O(1) memory. \\n3. You must return the length of the sorted array (the number of unique digits in the array).\\n\\nI hope this helps."
                    },
                    {
                        "username": "Bobzero",
                        "content": "They should probably change the title for this question.. \\nAsking someone to remove duplicates and then tell him to return an integer value which will decide the correct length of the rearranged array is kind of cheating though..."
                    },
                    {
                        "username": "kallolmedhi24",
                        "content": "exactly\\n"
                    },
                    {
                        "username": "subhasishhalder107",
                        "content": "![image](https://assets.leetcode.com/users/images/5ba3e386-b61c-4326-9c13-25ddea8f93db_1644804878.1030195.jpeg)\\n"
                    },
                    {
                        "username": "user7753pC",
                        "content": "![image](https://assets.leetcode.com/users/images/599daee3-6748-4ea4-89ec-3bf24d6e6684_1628841560.093207.png)\\n\\nHave anyone experienced leetcode behaves weirdly? \\nMy output is correct as per console.log but  seems they output is bit off\\n"
                    },
                    {
                        "username": "dinesh_kamani",
                        "content": "Actually as per my observation, You are not supposed to take new array as it is mentioned in the question, infact when you go with this approach u will get more than O(1) space complexity, which actually violates the given condition!!!"
                    }
                ]
            },
            {
                "id": 1769129,
                "content": [
                    {
                        "username": "praveensbj8",
                        "content": "This is the javascript solution I tried which is correct but terminal showing wrong answer, Please help.\\n\\nSolution : [1,1,2].filter((n,i,nums) => nums.indexOf(n) === i).length;"
                    },
                    {
                        "username": "user5181l",
                        "content": "We need to return the same array. in filter and map function was create the new array of results so it will get the wrong answer.\nSo we can use foreach function or for function to get the correct ans."
                    },
                    {
                        "username": "kirti_9",
                        "content": "Because output should also return \\'_\\' underscore symbol as per the length of duplicates in it.\\nfor example: [ 1,1,2 ]\\nouput: [ 1,2,_ ]\\nhere we have 1 extra duplicate so need to return the underscore instead of that duplicate"
                    },
                    {
                        "username": "sameergaikwad222",
                        "content": "i tried this solution which gives me right ans but leetcode saying it is giving me wrong ans\\nreturn nums = [... new Set(nums)]; \\njust one liner code. :("
                    },
                    {
                        "username": "YogiKnight",
                        "content": "Same thing is happening to me but for the python version"
                    },
                    {
                        "username": "AksharGoyal",
                        "content": "Is the process broken? I am converting the nums to a set then a list again but it\\'s showing me something else\\n![image](https://assets.leetcode.com/users/images/a3130a38-5248-4d5d-9595-91eee80039de_1626070452.4349406.png)\\n"
                    },
                    {
                        "username": "anuraggupta29",
                        "content": "The description says \\'It doesn\\'t matter what you leave behind that length\\', but it is not accepting my python solution.\\nIt says you answer [1,2,None], expected answer [1,2]. Any Ideas?"
                    },
                    {
                        "username": "idklol8",
                        "content": "It looks like in this instance, you\\'re retuning 3 when it\\'s expecting a 2, so the grader is looking at the first 3 elements in the array."
                    },
                    {
                        "username": "rufengch",
                        "content": "Input: `[1, 1]`\\nExpected: `[1]`\\n\\nIsn't this wrong? \\n\\nIt says `It doesn't matter what you leave beyond the new length.`"
                    },
                    {
                        "username": "d4mir",
                        "content": "expected [1] with k = 1, elements after first elements don\\'t show up since they don\\'t matter"
                    },
                    {
                        "username": "sukelali",
                        "content": "Is there any way to reduce the O(n) of this solution ?\\n\\n    public class Solution {\\n        public int RemoveDuplicates(int[] nums) {\\n\\n            int insertIndex = 1;\\n\\n            for(int i = 1; i < nums.Length; i++)\\n            {\\n                if(nums[i-1] != nums[i])\\n                {\\n                    nums[insertIndex] = nums[i];\\n\\n                    insertIndex++;\\n                }\\n            }\\n\\n            return insertIndex;\\n\\n        }\\n    }"
                    },
                    {
                        "username": "KimFarida",
                        "content": "Use two pointers. Using a while loop, first initailze your stop to the end of the array and intialize i to zero. and k = i + 1. \\nYou should have while i < j and k < j .\\nSo youre checking nums[i] and the the value after it, nums[k]. If they are same, keep increasing k till they are not. else, in the case they are not, take the value of nums[k] and put it in nums[i + 1]. You can then increase i.\\nYou can now return i + 1\\n(which is the index of i plus one, being that i starts from 0)\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        i = 0\\n        j = len(nums)\\n        k = i + 1\\n\\n        while i < j and k < j:\\n            if nums[i] == nums[k]:\\n                k+=1\\n            else:\\n                nums[i+1] = nums[k]\\n                i += 1\\n        return i + 1\\nActually took me a while to get it. This is my second time solving this problem "
                    },
                    {
                        "username": "zhxlee",
                        "content": "why len(set(nums)) is wrong?"
                    },
                    {
                        "username": "sana479",
                        "content": "[@kBrostoff](/kBrostoff) I sorted nums then did len(set(nums)). It actually works perfectly on pycharm  "
                    },
                    {
                        "username": "Jvidal1997",
                        "content": "[@kBrostoff](/kBrostoff) No it doesn\\'t, but a set can\\'t contain duplicates. So the length of it returns the number of unique chars.\\n\\nThe problem here is it will return the integer effectively, but it doesn\\'t modify the list. Essentially the duplicates need to be pushed to the end before returning the number of unique characters."
                    },
                    {
                        "username": "kBrostoff",
                        "content": "Python\\'s `set` doesn\\'t maintain order."
                    },
                    {
                        "username": "FeYaroslava",
                        "content": "If you code fails even the first test in situation like\\nyou answer [1,2], expected answer [1,2] or similar:\\n\\n1. You must modify the array \"nums\" without overwriting the data to another variable.\\n2. Your code should use O(1) memory. \\n3. You must return the length of the sorted array (the number of unique digits in the array).\\n\\nI hope this helps."
                    },
                    {
                        "username": "Bobzero",
                        "content": "They should probably change the title for this question.. \\nAsking someone to remove duplicates and then tell him to return an integer value which will decide the correct length of the rearranged array is kind of cheating though..."
                    },
                    {
                        "username": "kallolmedhi24",
                        "content": "exactly\\n"
                    },
                    {
                        "username": "subhasishhalder107",
                        "content": "![image](https://assets.leetcode.com/users/images/5ba3e386-b61c-4326-9c13-25ddea8f93db_1644804878.1030195.jpeg)\\n"
                    },
                    {
                        "username": "user7753pC",
                        "content": "![image](https://assets.leetcode.com/users/images/599daee3-6748-4ea4-89ec-3bf24d6e6684_1628841560.093207.png)\\n\\nHave anyone experienced leetcode behaves weirdly? \\nMy output is correct as per console.log but  seems they output is bit off\\n"
                    },
                    {
                        "username": "dinesh_kamani",
                        "content": "Actually as per my observation, You are not supposed to take new array as it is mentioned in the question, infact when you go with this approach u will get more than O(1) space complexity, which actually violates the given condition!!!"
                    }
                ]
            },
            {
                "id": 1571065,
                "content": [
                    {
                        "username": "praveensbj8",
                        "content": "This is the javascript solution I tried which is correct but terminal showing wrong answer, Please help.\\n\\nSolution : [1,1,2].filter((n,i,nums) => nums.indexOf(n) === i).length;"
                    },
                    {
                        "username": "user5181l",
                        "content": "We need to return the same array. in filter and map function was create the new array of results so it will get the wrong answer.\nSo we can use foreach function or for function to get the correct ans."
                    },
                    {
                        "username": "kirti_9",
                        "content": "Because output should also return \\'_\\' underscore symbol as per the length of duplicates in it.\\nfor example: [ 1,1,2 ]\\nouput: [ 1,2,_ ]\\nhere we have 1 extra duplicate so need to return the underscore instead of that duplicate"
                    },
                    {
                        "username": "sameergaikwad222",
                        "content": "i tried this solution which gives me right ans but leetcode saying it is giving me wrong ans\\nreturn nums = [... new Set(nums)]; \\njust one liner code. :("
                    },
                    {
                        "username": "YogiKnight",
                        "content": "Same thing is happening to me but for the python version"
                    },
                    {
                        "username": "AksharGoyal",
                        "content": "Is the process broken? I am converting the nums to a set then a list again but it\\'s showing me something else\\n![image](https://assets.leetcode.com/users/images/a3130a38-5248-4d5d-9595-91eee80039de_1626070452.4349406.png)\\n"
                    },
                    {
                        "username": "anuraggupta29",
                        "content": "The description says \\'It doesn\\'t matter what you leave behind that length\\', but it is not accepting my python solution.\\nIt says you answer [1,2,None], expected answer [1,2]. Any Ideas?"
                    },
                    {
                        "username": "idklol8",
                        "content": "It looks like in this instance, you\\'re retuning 3 when it\\'s expecting a 2, so the grader is looking at the first 3 elements in the array."
                    },
                    {
                        "username": "rufengch",
                        "content": "Input: `[1, 1]`\\nExpected: `[1]`\\n\\nIsn't this wrong? \\n\\nIt says `It doesn't matter what you leave beyond the new length.`"
                    },
                    {
                        "username": "d4mir",
                        "content": "expected [1] with k = 1, elements after first elements don\\'t show up since they don\\'t matter"
                    },
                    {
                        "username": "sukelali",
                        "content": "Is there any way to reduce the O(n) of this solution ?\\n\\n    public class Solution {\\n        public int RemoveDuplicates(int[] nums) {\\n\\n            int insertIndex = 1;\\n\\n            for(int i = 1; i < nums.Length; i++)\\n            {\\n                if(nums[i-1] != nums[i])\\n                {\\n                    nums[insertIndex] = nums[i];\\n\\n                    insertIndex++;\\n                }\\n            }\\n\\n            return insertIndex;\\n\\n        }\\n    }"
                    },
                    {
                        "username": "KimFarida",
                        "content": "Use two pointers. Using a while loop, first initailze your stop to the end of the array and intialize i to zero. and k = i + 1. \\nYou should have while i < j and k < j .\\nSo youre checking nums[i] and the the value after it, nums[k]. If they are same, keep increasing k till they are not. else, in the case they are not, take the value of nums[k] and put it in nums[i + 1]. You can then increase i.\\nYou can now return i + 1\\n(which is the index of i plus one, being that i starts from 0)\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        i = 0\\n        j = len(nums)\\n        k = i + 1\\n\\n        while i < j and k < j:\\n            if nums[i] == nums[k]:\\n                k+=1\\n            else:\\n                nums[i+1] = nums[k]\\n                i += 1\\n        return i + 1\\nActually took me a while to get it. This is my second time solving this problem "
                    },
                    {
                        "username": "zhxlee",
                        "content": "why len(set(nums)) is wrong?"
                    },
                    {
                        "username": "sana479",
                        "content": "[@kBrostoff](/kBrostoff) I sorted nums then did len(set(nums)). It actually works perfectly on pycharm  "
                    },
                    {
                        "username": "Jvidal1997",
                        "content": "[@kBrostoff](/kBrostoff) No it doesn\\'t, but a set can\\'t contain duplicates. So the length of it returns the number of unique chars.\\n\\nThe problem here is it will return the integer effectively, but it doesn\\'t modify the list. Essentially the duplicates need to be pushed to the end before returning the number of unique characters."
                    },
                    {
                        "username": "kBrostoff",
                        "content": "Python\\'s `set` doesn\\'t maintain order."
                    },
                    {
                        "username": "FeYaroslava",
                        "content": "If you code fails even the first test in situation like\\nyou answer [1,2], expected answer [1,2] or similar:\\n\\n1. You must modify the array \"nums\" without overwriting the data to another variable.\\n2. Your code should use O(1) memory. \\n3. You must return the length of the sorted array (the number of unique digits in the array).\\n\\nI hope this helps."
                    },
                    {
                        "username": "Bobzero",
                        "content": "They should probably change the title for this question.. \\nAsking someone to remove duplicates and then tell him to return an integer value which will decide the correct length of the rearranged array is kind of cheating though..."
                    },
                    {
                        "username": "kallolmedhi24",
                        "content": "exactly\\n"
                    },
                    {
                        "username": "subhasishhalder107",
                        "content": "![image](https://assets.leetcode.com/users/images/5ba3e386-b61c-4326-9c13-25ddea8f93db_1644804878.1030195.jpeg)\\n"
                    },
                    {
                        "username": "user7753pC",
                        "content": "![image](https://assets.leetcode.com/users/images/599daee3-6748-4ea4-89ec-3bf24d6e6684_1628841560.093207.png)\\n\\nHave anyone experienced leetcode behaves weirdly? \\nMy output is correct as per console.log but  seems they output is bit off\\n"
                    },
                    {
                        "username": "dinesh_kamani",
                        "content": "Actually as per my observation, You are not supposed to take new array as it is mentioned in the question, infact when you go with this approach u will get more than O(1) space complexity, which actually violates the given condition!!!"
                    }
                ]
            },
            {
                "id": 1845122,
                "content": [
                    {
                        "username": "praveensbj8",
                        "content": "This is the javascript solution I tried which is correct but terminal showing wrong answer, Please help.\\n\\nSolution : [1,1,2].filter((n,i,nums) => nums.indexOf(n) === i).length;"
                    },
                    {
                        "username": "user5181l",
                        "content": "We need to return the same array. in filter and map function was create the new array of results so it will get the wrong answer.\nSo we can use foreach function or for function to get the correct ans."
                    },
                    {
                        "username": "kirti_9",
                        "content": "Because output should also return \\'_\\' underscore symbol as per the length of duplicates in it.\\nfor example: [ 1,1,2 ]\\nouput: [ 1,2,_ ]\\nhere we have 1 extra duplicate so need to return the underscore instead of that duplicate"
                    },
                    {
                        "username": "sameergaikwad222",
                        "content": "i tried this solution which gives me right ans but leetcode saying it is giving me wrong ans\\nreturn nums = [... new Set(nums)]; \\njust one liner code. :("
                    },
                    {
                        "username": "YogiKnight",
                        "content": "Same thing is happening to me but for the python version"
                    },
                    {
                        "username": "AksharGoyal",
                        "content": "Is the process broken? I am converting the nums to a set then a list again but it\\'s showing me something else\\n![image](https://assets.leetcode.com/users/images/a3130a38-5248-4d5d-9595-91eee80039de_1626070452.4349406.png)\\n"
                    },
                    {
                        "username": "anuraggupta29",
                        "content": "The description says \\'It doesn\\'t matter what you leave behind that length\\', but it is not accepting my python solution.\\nIt says you answer [1,2,None], expected answer [1,2]. Any Ideas?"
                    },
                    {
                        "username": "idklol8",
                        "content": "It looks like in this instance, you\\'re retuning 3 when it\\'s expecting a 2, so the grader is looking at the first 3 elements in the array."
                    },
                    {
                        "username": "rufengch",
                        "content": "Input: `[1, 1]`\\nExpected: `[1]`\\n\\nIsn't this wrong? \\n\\nIt says `It doesn't matter what you leave beyond the new length.`"
                    },
                    {
                        "username": "d4mir",
                        "content": "expected [1] with k = 1, elements after first elements don\\'t show up since they don\\'t matter"
                    },
                    {
                        "username": "sukelali",
                        "content": "Is there any way to reduce the O(n) of this solution ?\\n\\n    public class Solution {\\n        public int RemoveDuplicates(int[] nums) {\\n\\n            int insertIndex = 1;\\n\\n            for(int i = 1; i < nums.Length; i++)\\n            {\\n                if(nums[i-1] != nums[i])\\n                {\\n                    nums[insertIndex] = nums[i];\\n\\n                    insertIndex++;\\n                }\\n            }\\n\\n            return insertIndex;\\n\\n        }\\n    }"
                    },
                    {
                        "username": "KimFarida",
                        "content": "Use two pointers. Using a while loop, first initailze your stop to the end of the array and intialize i to zero. and k = i + 1. \\nYou should have while i < j and k < j .\\nSo youre checking nums[i] and the the value after it, nums[k]. If they are same, keep increasing k till they are not. else, in the case they are not, take the value of nums[k] and put it in nums[i + 1]. You can then increase i.\\nYou can now return i + 1\\n(which is the index of i plus one, being that i starts from 0)\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        i = 0\\n        j = len(nums)\\n        k = i + 1\\n\\n        while i < j and k < j:\\n            if nums[i] == nums[k]:\\n                k+=1\\n            else:\\n                nums[i+1] = nums[k]\\n                i += 1\\n        return i + 1\\nActually took me a while to get it. This is my second time solving this problem "
                    },
                    {
                        "username": "zhxlee",
                        "content": "why len(set(nums)) is wrong?"
                    },
                    {
                        "username": "sana479",
                        "content": "[@kBrostoff](/kBrostoff) I sorted nums then did len(set(nums)). It actually works perfectly on pycharm  "
                    },
                    {
                        "username": "Jvidal1997",
                        "content": "[@kBrostoff](/kBrostoff) No it doesn\\'t, but a set can\\'t contain duplicates. So the length of it returns the number of unique chars.\\n\\nThe problem here is it will return the integer effectively, but it doesn\\'t modify the list. Essentially the duplicates need to be pushed to the end before returning the number of unique characters."
                    },
                    {
                        "username": "kBrostoff",
                        "content": "Python\\'s `set` doesn\\'t maintain order."
                    },
                    {
                        "username": "FeYaroslava",
                        "content": "If you code fails even the first test in situation like\\nyou answer [1,2], expected answer [1,2] or similar:\\n\\n1. You must modify the array \"nums\" without overwriting the data to another variable.\\n2. Your code should use O(1) memory. \\n3. You must return the length of the sorted array (the number of unique digits in the array).\\n\\nI hope this helps."
                    },
                    {
                        "username": "Bobzero",
                        "content": "They should probably change the title for this question.. \\nAsking someone to remove duplicates and then tell him to return an integer value which will decide the correct length of the rearranged array is kind of cheating though..."
                    },
                    {
                        "username": "kallolmedhi24",
                        "content": "exactly\\n"
                    },
                    {
                        "username": "subhasishhalder107",
                        "content": "![image](https://assets.leetcode.com/users/images/5ba3e386-b61c-4326-9c13-25ddea8f93db_1644804878.1030195.jpeg)\\n"
                    },
                    {
                        "username": "user7753pC",
                        "content": "![image](https://assets.leetcode.com/users/images/599daee3-6748-4ea4-89ec-3bf24d6e6684_1628841560.093207.png)\\n\\nHave anyone experienced leetcode behaves weirdly? \\nMy output is correct as per console.log but  seems they output is bit off\\n"
                    },
                    {
                        "username": "dinesh_kamani",
                        "content": "Actually as per my observation, You are not supposed to take new array as it is mentioned in the question, infact when you go with this approach u will get more than O(1) space complexity, which actually violates the given condition!!!"
                    }
                ]
            },
            {
                "id": 1659297,
                "content": [
                    {
                        "username": "praveensbj8",
                        "content": "This is the javascript solution I tried which is correct but terminal showing wrong answer, Please help.\\n\\nSolution : [1,1,2].filter((n,i,nums) => nums.indexOf(n) === i).length;"
                    },
                    {
                        "username": "user5181l",
                        "content": "We need to return the same array. in filter and map function was create the new array of results so it will get the wrong answer.\nSo we can use foreach function or for function to get the correct ans."
                    },
                    {
                        "username": "kirti_9",
                        "content": "Because output should also return \\'_\\' underscore symbol as per the length of duplicates in it.\\nfor example: [ 1,1,2 ]\\nouput: [ 1,2,_ ]\\nhere we have 1 extra duplicate so need to return the underscore instead of that duplicate"
                    },
                    {
                        "username": "sameergaikwad222",
                        "content": "i tried this solution which gives me right ans but leetcode saying it is giving me wrong ans\\nreturn nums = [... new Set(nums)]; \\njust one liner code. :("
                    },
                    {
                        "username": "YogiKnight",
                        "content": "Same thing is happening to me but for the python version"
                    },
                    {
                        "username": "AksharGoyal",
                        "content": "Is the process broken? I am converting the nums to a set then a list again but it\\'s showing me something else\\n![image](https://assets.leetcode.com/users/images/a3130a38-5248-4d5d-9595-91eee80039de_1626070452.4349406.png)\\n"
                    },
                    {
                        "username": "anuraggupta29",
                        "content": "The description says \\'It doesn\\'t matter what you leave behind that length\\', but it is not accepting my python solution.\\nIt says you answer [1,2,None], expected answer [1,2]. Any Ideas?"
                    },
                    {
                        "username": "idklol8",
                        "content": "It looks like in this instance, you\\'re retuning 3 when it\\'s expecting a 2, so the grader is looking at the first 3 elements in the array."
                    },
                    {
                        "username": "rufengch",
                        "content": "Input: `[1, 1]`\\nExpected: `[1]`\\n\\nIsn't this wrong? \\n\\nIt says `It doesn't matter what you leave beyond the new length.`"
                    },
                    {
                        "username": "d4mir",
                        "content": "expected [1] with k = 1, elements after first elements don\\'t show up since they don\\'t matter"
                    },
                    {
                        "username": "sukelali",
                        "content": "Is there any way to reduce the O(n) of this solution ?\\n\\n    public class Solution {\\n        public int RemoveDuplicates(int[] nums) {\\n\\n            int insertIndex = 1;\\n\\n            for(int i = 1; i < nums.Length; i++)\\n            {\\n                if(nums[i-1] != nums[i])\\n                {\\n                    nums[insertIndex] = nums[i];\\n\\n                    insertIndex++;\\n                }\\n            }\\n\\n            return insertIndex;\\n\\n        }\\n    }"
                    },
                    {
                        "username": "KimFarida",
                        "content": "Use two pointers. Using a while loop, first initailze your stop to the end of the array and intialize i to zero. and k = i + 1. \\nYou should have while i < j and k < j .\\nSo youre checking nums[i] and the the value after it, nums[k]. If they are same, keep increasing k till they are not. else, in the case they are not, take the value of nums[k] and put it in nums[i + 1]. You can then increase i.\\nYou can now return i + 1\\n(which is the index of i plus one, being that i starts from 0)\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        i = 0\\n        j = len(nums)\\n        k = i + 1\\n\\n        while i < j and k < j:\\n            if nums[i] == nums[k]:\\n                k+=1\\n            else:\\n                nums[i+1] = nums[k]\\n                i += 1\\n        return i + 1\\nActually took me a while to get it. This is my second time solving this problem "
                    },
                    {
                        "username": "zhxlee",
                        "content": "why len(set(nums)) is wrong?"
                    },
                    {
                        "username": "sana479",
                        "content": "[@kBrostoff](/kBrostoff) I sorted nums then did len(set(nums)). It actually works perfectly on pycharm  "
                    },
                    {
                        "username": "Jvidal1997",
                        "content": "[@kBrostoff](/kBrostoff) No it doesn\\'t, but a set can\\'t contain duplicates. So the length of it returns the number of unique chars.\\n\\nThe problem here is it will return the integer effectively, but it doesn\\'t modify the list. Essentially the duplicates need to be pushed to the end before returning the number of unique characters."
                    },
                    {
                        "username": "kBrostoff",
                        "content": "Python\\'s `set` doesn\\'t maintain order."
                    },
                    {
                        "username": "FeYaroslava",
                        "content": "If you code fails even the first test in situation like\\nyou answer [1,2], expected answer [1,2] or similar:\\n\\n1. You must modify the array \"nums\" without overwriting the data to another variable.\\n2. Your code should use O(1) memory. \\n3. You must return the length of the sorted array (the number of unique digits in the array).\\n\\nI hope this helps."
                    },
                    {
                        "username": "Bobzero",
                        "content": "They should probably change the title for this question.. \\nAsking someone to remove duplicates and then tell him to return an integer value which will decide the correct length of the rearranged array is kind of cheating though..."
                    },
                    {
                        "username": "kallolmedhi24",
                        "content": "exactly\\n"
                    },
                    {
                        "username": "subhasishhalder107",
                        "content": "![image](https://assets.leetcode.com/users/images/5ba3e386-b61c-4326-9c13-25ddea8f93db_1644804878.1030195.jpeg)\\n"
                    },
                    {
                        "username": "user7753pC",
                        "content": "![image](https://assets.leetcode.com/users/images/599daee3-6748-4ea4-89ec-3bf24d6e6684_1628841560.093207.png)\\n\\nHave anyone experienced leetcode behaves weirdly? \\nMy output is correct as per console.log but  seems they output is bit off\\n"
                    },
                    {
                        "username": "dinesh_kamani",
                        "content": "Actually as per my observation, You are not supposed to take new array as it is mentioned in the question, infact when you go with this approach u will get more than O(1) space complexity, which actually violates the given condition!!!"
                    }
                ]
            },
            {
                "id": 1576384,
                "content": [
                    {
                        "username": "praveensbj8",
                        "content": "This is the javascript solution I tried which is correct but terminal showing wrong answer, Please help.\\n\\nSolution : [1,1,2].filter((n,i,nums) => nums.indexOf(n) === i).length;"
                    },
                    {
                        "username": "user5181l",
                        "content": "We need to return the same array. in filter and map function was create the new array of results so it will get the wrong answer.\nSo we can use foreach function or for function to get the correct ans."
                    },
                    {
                        "username": "kirti_9",
                        "content": "Because output should also return \\'_\\' underscore symbol as per the length of duplicates in it.\\nfor example: [ 1,1,2 ]\\nouput: [ 1,2,_ ]\\nhere we have 1 extra duplicate so need to return the underscore instead of that duplicate"
                    },
                    {
                        "username": "sameergaikwad222",
                        "content": "i tried this solution which gives me right ans but leetcode saying it is giving me wrong ans\\nreturn nums = [... new Set(nums)]; \\njust one liner code. :("
                    },
                    {
                        "username": "YogiKnight",
                        "content": "Same thing is happening to me but for the python version"
                    },
                    {
                        "username": "AksharGoyal",
                        "content": "Is the process broken? I am converting the nums to a set then a list again but it\\'s showing me something else\\n![image](https://assets.leetcode.com/users/images/a3130a38-5248-4d5d-9595-91eee80039de_1626070452.4349406.png)\\n"
                    },
                    {
                        "username": "anuraggupta29",
                        "content": "The description says \\'It doesn\\'t matter what you leave behind that length\\', but it is not accepting my python solution.\\nIt says you answer [1,2,None], expected answer [1,2]. Any Ideas?"
                    },
                    {
                        "username": "idklol8",
                        "content": "It looks like in this instance, you\\'re retuning 3 when it\\'s expecting a 2, so the grader is looking at the first 3 elements in the array."
                    },
                    {
                        "username": "rufengch",
                        "content": "Input: `[1, 1]`\\nExpected: `[1]`\\n\\nIsn't this wrong? \\n\\nIt says `It doesn't matter what you leave beyond the new length.`"
                    },
                    {
                        "username": "d4mir",
                        "content": "expected [1] with k = 1, elements after first elements don\\'t show up since they don\\'t matter"
                    },
                    {
                        "username": "sukelali",
                        "content": "Is there any way to reduce the O(n) of this solution ?\\n\\n    public class Solution {\\n        public int RemoveDuplicates(int[] nums) {\\n\\n            int insertIndex = 1;\\n\\n            for(int i = 1; i < nums.Length; i++)\\n            {\\n                if(nums[i-1] != nums[i])\\n                {\\n                    nums[insertIndex] = nums[i];\\n\\n                    insertIndex++;\\n                }\\n            }\\n\\n            return insertIndex;\\n\\n        }\\n    }"
                    },
                    {
                        "username": "KimFarida",
                        "content": "Use two pointers. Using a while loop, first initailze your stop to the end of the array and intialize i to zero. and k = i + 1. \\nYou should have while i < j and k < j .\\nSo youre checking nums[i] and the the value after it, nums[k]. If they are same, keep increasing k till they are not. else, in the case they are not, take the value of nums[k] and put it in nums[i + 1]. You can then increase i.\\nYou can now return i + 1\\n(which is the index of i plus one, being that i starts from 0)\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        i = 0\\n        j = len(nums)\\n        k = i + 1\\n\\n        while i < j and k < j:\\n            if nums[i] == nums[k]:\\n                k+=1\\n            else:\\n                nums[i+1] = nums[k]\\n                i += 1\\n        return i + 1\\nActually took me a while to get it. This is my second time solving this problem "
                    },
                    {
                        "username": "zhxlee",
                        "content": "why len(set(nums)) is wrong?"
                    },
                    {
                        "username": "sana479",
                        "content": "[@kBrostoff](/kBrostoff) I sorted nums then did len(set(nums)). It actually works perfectly on pycharm  "
                    },
                    {
                        "username": "Jvidal1997",
                        "content": "[@kBrostoff](/kBrostoff) No it doesn\\'t, but a set can\\'t contain duplicates. So the length of it returns the number of unique chars.\\n\\nThe problem here is it will return the integer effectively, but it doesn\\'t modify the list. Essentially the duplicates need to be pushed to the end before returning the number of unique characters."
                    },
                    {
                        "username": "kBrostoff",
                        "content": "Python\\'s `set` doesn\\'t maintain order."
                    },
                    {
                        "username": "FeYaroslava",
                        "content": "If you code fails even the first test in situation like\\nyou answer [1,2], expected answer [1,2] or similar:\\n\\n1. You must modify the array \"nums\" without overwriting the data to another variable.\\n2. Your code should use O(1) memory. \\n3. You must return the length of the sorted array (the number of unique digits in the array).\\n\\nI hope this helps."
                    },
                    {
                        "username": "Bobzero",
                        "content": "They should probably change the title for this question.. \\nAsking someone to remove duplicates and then tell him to return an integer value which will decide the correct length of the rearranged array is kind of cheating though..."
                    },
                    {
                        "username": "kallolmedhi24",
                        "content": "exactly\\n"
                    },
                    {
                        "username": "subhasishhalder107",
                        "content": "![image](https://assets.leetcode.com/users/images/5ba3e386-b61c-4326-9c13-25ddea8f93db_1644804878.1030195.jpeg)\\n"
                    },
                    {
                        "username": "user7753pC",
                        "content": "![image](https://assets.leetcode.com/users/images/599daee3-6748-4ea4-89ec-3bf24d6e6684_1628841560.093207.png)\\n\\nHave anyone experienced leetcode behaves weirdly? \\nMy output is correct as per console.log but  seems they output is bit off\\n"
                    },
                    {
                        "username": "dinesh_kamani",
                        "content": "Actually as per my observation, You are not supposed to take new array as it is mentioned in the question, infact when you go with this approach u will get more than O(1) space complexity, which actually violates the given condition!!!"
                    }
                ]
            },
            {
                "id": 1570551,
                "content": [
                    {
                        "username": "praveensbj8",
                        "content": "This is the javascript solution I tried which is correct but terminal showing wrong answer, Please help.\\n\\nSolution : [1,1,2].filter((n,i,nums) => nums.indexOf(n) === i).length;"
                    },
                    {
                        "username": "user5181l",
                        "content": "We need to return the same array. in filter and map function was create the new array of results so it will get the wrong answer.\nSo we can use foreach function or for function to get the correct ans."
                    },
                    {
                        "username": "kirti_9",
                        "content": "Because output should also return \\'_\\' underscore symbol as per the length of duplicates in it.\\nfor example: [ 1,1,2 ]\\nouput: [ 1,2,_ ]\\nhere we have 1 extra duplicate so need to return the underscore instead of that duplicate"
                    },
                    {
                        "username": "sameergaikwad222",
                        "content": "i tried this solution which gives me right ans but leetcode saying it is giving me wrong ans\\nreturn nums = [... new Set(nums)]; \\njust one liner code. :("
                    },
                    {
                        "username": "YogiKnight",
                        "content": "Same thing is happening to me but for the python version"
                    },
                    {
                        "username": "AksharGoyal",
                        "content": "Is the process broken? I am converting the nums to a set then a list again but it\\'s showing me something else\\n![image](https://assets.leetcode.com/users/images/a3130a38-5248-4d5d-9595-91eee80039de_1626070452.4349406.png)\\n"
                    },
                    {
                        "username": "anuraggupta29",
                        "content": "The description says \\'It doesn\\'t matter what you leave behind that length\\', but it is not accepting my python solution.\\nIt says you answer [1,2,None], expected answer [1,2]. Any Ideas?"
                    },
                    {
                        "username": "idklol8",
                        "content": "It looks like in this instance, you\\'re retuning 3 when it\\'s expecting a 2, so the grader is looking at the first 3 elements in the array."
                    },
                    {
                        "username": "rufengch",
                        "content": "Input: `[1, 1]`\\nExpected: `[1]`\\n\\nIsn't this wrong? \\n\\nIt says `It doesn't matter what you leave beyond the new length.`"
                    },
                    {
                        "username": "d4mir",
                        "content": "expected [1] with k = 1, elements after first elements don\\'t show up since they don\\'t matter"
                    },
                    {
                        "username": "sukelali",
                        "content": "Is there any way to reduce the O(n) of this solution ?\\n\\n    public class Solution {\\n        public int RemoveDuplicates(int[] nums) {\\n\\n            int insertIndex = 1;\\n\\n            for(int i = 1; i < nums.Length; i++)\\n            {\\n                if(nums[i-1] != nums[i])\\n                {\\n                    nums[insertIndex] = nums[i];\\n\\n                    insertIndex++;\\n                }\\n            }\\n\\n            return insertIndex;\\n\\n        }\\n    }"
                    },
                    {
                        "username": "KimFarida",
                        "content": "Use two pointers. Using a while loop, first initailze your stop to the end of the array and intialize i to zero. and k = i + 1. \\nYou should have while i < j and k < j .\\nSo youre checking nums[i] and the the value after it, nums[k]. If they are same, keep increasing k till they are not. else, in the case they are not, take the value of nums[k] and put it in nums[i + 1]. You can then increase i.\\nYou can now return i + 1\\n(which is the index of i plus one, being that i starts from 0)\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        i = 0\\n        j = len(nums)\\n        k = i + 1\\n\\n        while i < j and k < j:\\n            if nums[i] == nums[k]:\\n                k+=1\\n            else:\\n                nums[i+1] = nums[k]\\n                i += 1\\n        return i + 1\\nActually took me a while to get it. This is my second time solving this problem "
                    },
                    {
                        "username": "zhxlee",
                        "content": "why len(set(nums)) is wrong?"
                    },
                    {
                        "username": "sana479",
                        "content": "[@kBrostoff](/kBrostoff) I sorted nums then did len(set(nums)). It actually works perfectly on pycharm  "
                    },
                    {
                        "username": "Jvidal1997",
                        "content": "[@kBrostoff](/kBrostoff) No it doesn\\'t, but a set can\\'t contain duplicates. So the length of it returns the number of unique chars.\\n\\nThe problem here is it will return the integer effectively, but it doesn\\'t modify the list. Essentially the duplicates need to be pushed to the end before returning the number of unique characters."
                    },
                    {
                        "username": "kBrostoff",
                        "content": "Python\\'s `set` doesn\\'t maintain order."
                    },
                    {
                        "username": "FeYaroslava",
                        "content": "If you code fails even the first test in situation like\\nyou answer [1,2], expected answer [1,2] or similar:\\n\\n1. You must modify the array \"nums\" without overwriting the data to another variable.\\n2. Your code should use O(1) memory. \\n3. You must return the length of the sorted array (the number of unique digits in the array).\\n\\nI hope this helps."
                    },
                    {
                        "username": "Bobzero",
                        "content": "They should probably change the title for this question.. \\nAsking someone to remove duplicates and then tell him to return an integer value which will decide the correct length of the rearranged array is kind of cheating though..."
                    },
                    {
                        "username": "kallolmedhi24",
                        "content": "exactly\\n"
                    },
                    {
                        "username": "subhasishhalder107",
                        "content": "![image](https://assets.leetcode.com/users/images/5ba3e386-b61c-4326-9c13-25ddea8f93db_1644804878.1030195.jpeg)\\n"
                    },
                    {
                        "username": "user7753pC",
                        "content": "![image](https://assets.leetcode.com/users/images/599daee3-6748-4ea4-89ec-3bf24d6e6684_1628841560.093207.png)\\n\\nHave anyone experienced leetcode behaves weirdly? \\nMy output is correct as per console.log but  seems they output is bit off\\n"
                    },
                    {
                        "username": "dinesh_kamani",
                        "content": "Actually as per my observation, You are not supposed to take new array as it is mentioned in the question, infact when you go with this approach u will get more than O(1) space complexity, which actually violates the given condition!!!"
                    }
                ]
            },
            {
                "id": 1569419,
                "content": [
                    {
                        "username": "sbookworm",
                        "content": "When I using go to implement the solution, the expect result in the test case checking is an array, but the problem should return a int, What\\'s the matter?"
                    },
                    {
                        "username": "user3803Ce",
                        "content": "Your solution returns an int and the problem\\'s main function \\'cuts\\' array nums using your returned value, creating output array of new length (your returned value)"
                    },
                    {
                        "username": "zombieprocess",
                        "content": "The problem states:\\n\\n> Do not allocate extra space for another array, you must do this in\\n> place with constant memory.\\n\\nIsn't it true that the size of an Java array is fixed when you allocate it?   How can the requirement of not allocating extra space for another array in place with constant memory be satisfied?"
                    },
                    {
                        "username": "charlescolfer",
                        "content": " Do yourself a favor and read the comments from people who spent hours deciphering the hieroglyphics they left for us... \\n\\nClassic terrible Quality Control from Leetcode - the Description is simply incorrect and misleading. You will spend more time understanding what the English on screen is asking you to do, rather than the logic. "
                    },
                    {
                        "username": "riyan372828",
                        "content": "[Watch](https://www.youtube.com/watch?v=aM4B1syX4sc)\\nhttps://www.youtube.com/watch?v=aM4B1syX4sc\\n\\n\\n\\nAlso you can SUBSCRIBE \\uD83E\\uDC81 \\uD83E\\uDC81 \\uD83E\\uDC81 this channel for the daily leetcode challange solution.\\n\\n\\n\\n\\n\\n\\n\\nhttps://t.me/dsacoder \\u2B05\\u2B05 Telegram link to discuss leetcode daily questions and other dsa problems\\n**If you find my solution helpful please upvote it.**"
                    },
                    {
                        "username": "dikshantgupta30",
                        "content": "Ok , so in this questions we need to calculate the length of the unique elements in the array and also update the array as per the length calculated.\\n\\nSuppose we have array [0, 0, 1, 1, 1, 2, 2, 3, 3, 4] which is given in question .Now we need to first find the length of unique elements present in the array which is 5 . Now we need to update the array 5 times or the first 5 indices in such a way that we only got 5 unique elements on the first 5 indices in the array. \\n\\n**===>> So number of unique elements present in the array is the number of indices at which unique elements is present**"
                    },
                    {
                        "username": "wannaBeDarKnight",
                        "content": "![image](https://assets.leetcode.com/users/images/d1e30f3f-3fdf-47c4-a37a-c18666c418a3_1635576673.8389168.png)\\n"
                    },
                    {
                        "username": "CoderDes",
                        "content": "Have the same issue. In different environment there is a correct answer. How to handle that issue?"
                    },
                    {
                        "username": "joybhallaa",
                        "content": "I\\'m using sets in javascript, and it\\'s passing the test cases but the formatting of the output is different ! and that\\'s normal array behaviour ! smh "
                    },
                    {
                        "username": "ly2015CNTJ",
                        "content": "It\\'s a non-sence problem at all."
                    },
                    {
                        "username": "lasomu",
                        "content": "terrible problem description. I had to look at answer to figure out what the problem is."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "what a garbage! \n\n**misleading explained:**\n\n1.  You need to modiify the `nums`  list. Not reassign it or slice.  **Literally run a for-loop over it and use `.replace()`**\n2. Then you need to return an `int` instead of a `list`, a **number of unique elements** in `nums`. \n\nConclusion:\n\n**Worth your time?**  Not at all, instead of one item you need to return two. The one is displayed, the other one is hidden.\n**Check the solution?** Sure. Old Greek poem says, if there's a constant mismatch between your output and the expexcted result, you better check the solution. \n"
                    },
                    {
                        "username": "cjanowiak",
                        "content": "I missed the requirement to return k, returned nothing instead, and my submission was accepted for all test cases. Seems like the judge is not actually checking the return value of the function, just the values in the array after running it. (Python 3)"
                    }
                ]
            },
            {
                "id": 1567171,
                "content": [
                    {
                        "username": "sbookworm",
                        "content": "When I using go to implement the solution, the expect result in the test case checking is an array, but the problem should return a int, What\\'s the matter?"
                    },
                    {
                        "username": "user3803Ce",
                        "content": "Your solution returns an int and the problem\\'s main function \\'cuts\\' array nums using your returned value, creating output array of new length (your returned value)"
                    },
                    {
                        "username": "zombieprocess",
                        "content": "The problem states:\\n\\n> Do not allocate extra space for another array, you must do this in\\n> place with constant memory.\\n\\nIsn't it true that the size of an Java array is fixed when you allocate it?   How can the requirement of not allocating extra space for another array in place with constant memory be satisfied?"
                    },
                    {
                        "username": "charlescolfer",
                        "content": " Do yourself a favor and read the comments from people who spent hours deciphering the hieroglyphics they left for us... \\n\\nClassic terrible Quality Control from Leetcode - the Description is simply incorrect and misleading. You will spend more time understanding what the English on screen is asking you to do, rather than the logic. "
                    },
                    {
                        "username": "riyan372828",
                        "content": "[Watch](https://www.youtube.com/watch?v=aM4B1syX4sc)\\nhttps://www.youtube.com/watch?v=aM4B1syX4sc\\n\\n\\n\\nAlso you can SUBSCRIBE \\uD83E\\uDC81 \\uD83E\\uDC81 \\uD83E\\uDC81 this channel for the daily leetcode challange solution.\\n\\n\\n\\n\\n\\n\\n\\nhttps://t.me/dsacoder \\u2B05\\u2B05 Telegram link to discuss leetcode daily questions and other dsa problems\\n**If you find my solution helpful please upvote it.**"
                    },
                    {
                        "username": "dikshantgupta30",
                        "content": "Ok , so in this questions we need to calculate the length of the unique elements in the array and also update the array as per the length calculated.\\n\\nSuppose we have array [0, 0, 1, 1, 1, 2, 2, 3, 3, 4] which is given in question .Now we need to first find the length of unique elements present in the array which is 5 . Now we need to update the array 5 times or the first 5 indices in such a way that we only got 5 unique elements on the first 5 indices in the array. \\n\\n**===>> So number of unique elements present in the array is the number of indices at which unique elements is present**"
                    },
                    {
                        "username": "wannaBeDarKnight",
                        "content": "![image](https://assets.leetcode.com/users/images/d1e30f3f-3fdf-47c4-a37a-c18666c418a3_1635576673.8389168.png)\\n"
                    },
                    {
                        "username": "CoderDes",
                        "content": "Have the same issue. In different environment there is a correct answer. How to handle that issue?"
                    },
                    {
                        "username": "joybhallaa",
                        "content": "I\\'m using sets in javascript, and it\\'s passing the test cases but the formatting of the output is different ! and that\\'s normal array behaviour ! smh "
                    },
                    {
                        "username": "ly2015CNTJ",
                        "content": "It\\'s a non-sence problem at all."
                    },
                    {
                        "username": "lasomu",
                        "content": "terrible problem description. I had to look at answer to figure out what the problem is."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "what a garbage! \n\n**misleading explained:**\n\n1.  You need to modiify the `nums`  list. Not reassign it or slice.  **Literally run a for-loop over it and use `.replace()`**\n2. Then you need to return an `int` instead of a `list`, a **number of unique elements** in `nums`. \n\nConclusion:\n\n**Worth your time?**  Not at all, instead of one item you need to return two. The one is displayed, the other one is hidden.\n**Check the solution?** Sure. Old Greek poem says, if there's a constant mismatch between your output and the expexcted result, you better check the solution. \n"
                    },
                    {
                        "username": "cjanowiak",
                        "content": "I missed the requirement to return k, returned nothing instead, and my submission was accepted for all test cases. Seems like the judge is not actually checking the return value of the function, just the values in the array after running it. (Python 3)"
                    }
                ]
            },
            {
                "id": 1958808,
                "content": [
                    {
                        "username": "sbookworm",
                        "content": "When I using go to implement the solution, the expect result in the test case checking is an array, but the problem should return a int, What\\'s the matter?"
                    },
                    {
                        "username": "user3803Ce",
                        "content": "Your solution returns an int and the problem\\'s main function \\'cuts\\' array nums using your returned value, creating output array of new length (your returned value)"
                    },
                    {
                        "username": "zombieprocess",
                        "content": "The problem states:\\n\\n> Do not allocate extra space for another array, you must do this in\\n> place with constant memory.\\n\\nIsn't it true that the size of an Java array is fixed when you allocate it?   How can the requirement of not allocating extra space for another array in place with constant memory be satisfied?"
                    },
                    {
                        "username": "charlescolfer",
                        "content": " Do yourself a favor and read the comments from people who spent hours deciphering the hieroglyphics they left for us... \\n\\nClassic terrible Quality Control from Leetcode - the Description is simply incorrect and misleading. You will spend more time understanding what the English on screen is asking you to do, rather than the logic. "
                    },
                    {
                        "username": "riyan372828",
                        "content": "[Watch](https://www.youtube.com/watch?v=aM4B1syX4sc)\\nhttps://www.youtube.com/watch?v=aM4B1syX4sc\\n\\n\\n\\nAlso you can SUBSCRIBE \\uD83E\\uDC81 \\uD83E\\uDC81 \\uD83E\\uDC81 this channel for the daily leetcode challange solution.\\n\\n\\n\\n\\n\\n\\n\\nhttps://t.me/dsacoder \\u2B05\\u2B05 Telegram link to discuss leetcode daily questions and other dsa problems\\n**If you find my solution helpful please upvote it.**"
                    },
                    {
                        "username": "dikshantgupta30",
                        "content": "Ok , so in this questions we need to calculate the length of the unique elements in the array and also update the array as per the length calculated.\\n\\nSuppose we have array [0, 0, 1, 1, 1, 2, 2, 3, 3, 4] which is given in question .Now we need to first find the length of unique elements present in the array which is 5 . Now we need to update the array 5 times or the first 5 indices in such a way that we only got 5 unique elements on the first 5 indices in the array. \\n\\n**===>> So number of unique elements present in the array is the number of indices at which unique elements is present**"
                    },
                    {
                        "username": "wannaBeDarKnight",
                        "content": "![image](https://assets.leetcode.com/users/images/d1e30f3f-3fdf-47c4-a37a-c18666c418a3_1635576673.8389168.png)\\n"
                    },
                    {
                        "username": "CoderDes",
                        "content": "Have the same issue. In different environment there is a correct answer. How to handle that issue?"
                    },
                    {
                        "username": "joybhallaa",
                        "content": "I\\'m using sets in javascript, and it\\'s passing the test cases but the formatting of the output is different ! and that\\'s normal array behaviour ! smh "
                    },
                    {
                        "username": "ly2015CNTJ",
                        "content": "It\\'s a non-sence problem at all."
                    },
                    {
                        "username": "lasomu",
                        "content": "terrible problem description. I had to look at answer to figure out what the problem is."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "what a garbage! \n\n**misleading explained:**\n\n1.  You need to modiify the `nums`  list. Not reassign it or slice.  **Literally run a for-loop over it and use `.replace()`**\n2. Then you need to return an `int` instead of a `list`, a **number of unique elements** in `nums`. \n\nConclusion:\n\n**Worth your time?**  Not at all, instead of one item you need to return two. The one is displayed, the other one is hidden.\n**Check the solution?** Sure. Old Greek poem says, if there's a constant mismatch between your output and the expexcted result, you better check the solution. \n"
                    },
                    {
                        "username": "cjanowiak",
                        "content": "I missed the requirement to return k, returned nothing instead, and my submission was accepted for all test cases. Seems like the judge is not actually checking the return value of the function, just the values in the array after running it. (Python 3)"
                    }
                ]
            },
            {
                "id": 1679856,
                "content": [
                    {
                        "username": "sbookworm",
                        "content": "When I using go to implement the solution, the expect result in the test case checking is an array, but the problem should return a int, What\\'s the matter?"
                    },
                    {
                        "username": "user3803Ce",
                        "content": "Your solution returns an int and the problem\\'s main function \\'cuts\\' array nums using your returned value, creating output array of new length (your returned value)"
                    },
                    {
                        "username": "zombieprocess",
                        "content": "The problem states:\\n\\n> Do not allocate extra space for another array, you must do this in\\n> place with constant memory.\\n\\nIsn't it true that the size of an Java array is fixed when you allocate it?   How can the requirement of not allocating extra space for another array in place with constant memory be satisfied?"
                    },
                    {
                        "username": "charlescolfer",
                        "content": " Do yourself a favor and read the comments from people who spent hours deciphering the hieroglyphics they left for us... \\n\\nClassic terrible Quality Control from Leetcode - the Description is simply incorrect and misleading. You will spend more time understanding what the English on screen is asking you to do, rather than the logic. "
                    },
                    {
                        "username": "riyan372828",
                        "content": "[Watch](https://www.youtube.com/watch?v=aM4B1syX4sc)\\nhttps://www.youtube.com/watch?v=aM4B1syX4sc\\n\\n\\n\\nAlso you can SUBSCRIBE \\uD83E\\uDC81 \\uD83E\\uDC81 \\uD83E\\uDC81 this channel for the daily leetcode challange solution.\\n\\n\\n\\n\\n\\n\\n\\nhttps://t.me/dsacoder \\u2B05\\u2B05 Telegram link to discuss leetcode daily questions and other dsa problems\\n**If you find my solution helpful please upvote it.**"
                    },
                    {
                        "username": "dikshantgupta30",
                        "content": "Ok , so in this questions we need to calculate the length of the unique elements in the array and also update the array as per the length calculated.\\n\\nSuppose we have array [0, 0, 1, 1, 1, 2, 2, 3, 3, 4] which is given in question .Now we need to first find the length of unique elements present in the array which is 5 . Now we need to update the array 5 times or the first 5 indices in such a way that we only got 5 unique elements on the first 5 indices in the array. \\n\\n**===>> So number of unique elements present in the array is the number of indices at which unique elements is present**"
                    },
                    {
                        "username": "wannaBeDarKnight",
                        "content": "![image](https://assets.leetcode.com/users/images/d1e30f3f-3fdf-47c4-a37a-c18666c418a3_1635576673.8389168.png)\\n"
                    },
                    {
                        "username": "CoderDes",
                        "content": "Have the same issue. In different environment there is a correct answer. How to handle that issue?"
                    },
                    {
                        "username": "joybhallaa",
                        "content": "I\\'m using sets in javascript, and it\\'s passing the test cases but the formatting of the output is different ! and that\\'s normal array behaviour ! smh "
                    },
                    {
                        "username": "ly2015CNTJ",
                        "content": "It\\'s a non-sence problem at all."
                    },
                    {
                        "username": "lasomu",
                        "content": "terrible problem description. I had to look at answer to figure out what the problem is."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "what a garbage! \n\n**misleading explained:**\n\n1.  You need to modiify the `nums`  list. Not reassign it or slice.  **Literally run a for-loop over it and use `.replace()`**\n2. Then you need to return an `int` instead of a `list`, a **number of unique elements** in `nums`. \n\nConclusion:\n\n**Worth your time?**  Not at all, instead of one item you need to return two. The one is displayed, the other one is hidden.\n**Check the solution?** Sure. Old Greek poem says, if there's a constant mismatch between your output and the expexcted result, you better check the solution. \n"
                    },
                    {
                        "username": "cjanowiak",
                        "content": "I missed the requirement to return k, returned nothing instead, and my submission was accepted for all test cases. Seems like the judge is not actually checking the return value of the function, just the values in the array after running it. (Python 3)"
                    }
                ]
            },
            {
                "id": 1570883,
                "content": [
                    {
                        "username": "sbookworm",
                        "content": "When I using go to implement the solution, the expect result in the test case checking is an array, but the problem should return a int, What\\'s the matter?"
                    },
                    {
                        "username": "user3803Ce",
                        "content": "Your solution returns an int and the problem\\'s main function \\'cuts\\' array nums using your returned value, creating output array of new length (your returned value)"
                    },
                    {
                        "username": "zombieprocess",
                        "content": "The problem states:\\n\\n> Do not allocate extra space for another array, you must do this in\\n> place with constant memory.\\n\\nIsn't it true that the size of an Java array is fixed when you allocate it?   How can the requirement of not allocating extra space for another array in place with constant memory be satisfied?"
                    },
                    {
                        "username": "charlescolfer",
                        "content": " Do yourself a favor and read the comments from people who spent hours deciphering the hieroglyphics they left for us... \\n\\nClassic terrible Quality Control from Leetcode - the Description is simply incorrect and misleading. You will spend more time understanding what the English on screen is asking you to do, rather than the logic. "
                    },
                    {
                        "username": "riyan372828",
                        "content": "[Watch](https://www.youtube.com/watch?v=aM4B1syX4sc)\\nhttps://www.youtube.com/watch?v=aM4B1syX4sc\\n\\n\\n\\nAlso you can SUBSCRIBE \\uD83E\\uDC81 \\uD83E\\uDC81 \\uD83E\\uDC81 this channel for the daily leetcode challange solution.\\n\\n\\n\\n\\n\\n\\n\\nhttps://t.me/dsacoder \\u2B05\\u2B05 Telegram link to discuss leetcode daily questions and other dsa problems\\n**If you find my solution helpful please upvote it.**"
                    },
                    {
                        "username": "dikshantgupta30",
                        "content": "Ok , so in this questions we need to calculate the length of the unique elements in the array and also update the array as per the length calculated.\\n\\nSuppose we have array [0, 0, 1, 1, 1, 2, 2, 3, 3, 4] which is given in question .Now we need to first find the length of unique elements present in the array which is 5 . Now we need to update the array 5 times or the first 5 indices in such a way that we only got 5 unique elements on the first 5 indices in the array. \\n\\n**===>> So number of unique elements present in the array is the number of indices at which unique elements is present**"
                    },
                    {
                        "username": "wannaBeDarKnight",
                        "content": "![image](https://assets.leetcode.com/users/images/d1e30f3f-3fdf-47c4-a37a-c18666c418a3_1635576673.8389168.png)\\n"
                    },
                    {
                        "username": "CoderDes",
                        "content": "Have the same issue. In different environment there is a correct answer. How to handle that issue?"
                    },
                    {
                        "username": "joybhallaa",
                        "content": "I\\'m using sets in javascript, and it\\'s passing the test cases but the formatting of the output is different ! and that\\'s normal array behaviour ! smh "
                    },
                    {
                        "username": "ly2015CNTJ",
                        "content": "It\\'s a non-sence problem at all."
                    },
                    {
                        "username": "lasomu",
                        "content": "terrible problem description. I had to look at answer to figure out what the problem is."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "what a garbage! \n\n**misleading explained:**\n\n1.  You need to modiify the `nums`  list. Not reassign it or slice.  **Literally run a for-loop over it and use `.replace()`**\n2. Then you need to return an `int` instead of a `list`, a **number of unique elements** in `nums`. \n\nConclusion:\n\n**Worth your time?**  Not at all, instead of one item you need to return two. The one is displayed, the other one is hidden.\n**Check the solution?** Sure. Old Greek poem says, if there's a constant mismatch between your output and the expexcted result, you better check the solution. \n"
                    },
                    {
                        "username": "cjanowiak",
                        "content": "I missed the requirement to return k, returned nothing instead, and my submission was accepted for all test cases. Seems like the judge is not actually checking the return value of the function, just the values in the array after running it. (Python 3)"
                    }
                ]
            },
            {
                "id": 1575906,
                "content": [
                    {
                        "username": "sbookworm",
                        "content": "When I using go to implement the solution, the expect result in the test case checking is an array, but the problem should return a int, What\\'s the matter?"
                    },
                    {
                        "username": "user3803Ce",
                        "content": "Your solution returns an int and the problem\\'s main function \\'cuts\\' array nums using your returned value, creating output array of new length (your returned value)"
                    },
                    {
                        "username": "zombieprocess",
                        "content": "The problem states:\\n\\n> Do not allocate extra space for another array, you must do this in\\n> place with constant memory.\\n\\nIsn't it true that the size of an Java array is fixed when you allocate it?   How can the requirement of not allocating extra space for another array in place with constant memory be satisfied?"
                    },
                    {
                        "username": "charlescolfer",
                        "content": " Do yourself a favor and read the comments from people who spent hours deciphering the hieroglyphics they left for us... \\n\\nClassic terrible Quality Control from Leetcode - the Description is simply incorrect and misleading. You will spend more time understanding what the English on screen is asking you to do, rather than the logic. "
                    },
                    {
                        "username": "riyan372828",
                        "content": "[Watch](https://www.youtube.com/watch?v=aM4B1syX4sc)\\nhttps://www.youtube.com/watch?v=aM4B1syX4sc\\n\\n\\n\\nAlso you can SUBSCRIBE \\uD83E\\uDC81 \\uD83E\\uDC81 \\uD83E\\uDC81 this channel for the daily leetcode challange solution.\\n\\n\\n\\n\\n\\n\\n\\nhttps://t.me/dsacoder \\u2B05\\u2B05 Telegram link to discuss leetcode daily questions and other dsa problems\\n**If you find my solution helpful please upvote it.**"
                    },
                    {
                        "username": "dikshantgupta30",
                        "content": "Ok , so in this questions we need to calculate the length of the unique elements in the array and also update the array as per the length calculated.\\n\\nSuppose we have array [0, 0, 1, 1, 1, 2, 2, 3, 3, 4] which is given in question .Now we need to first find the length of unique elements present in the array which is 5 . Now we need to update the array 5 times or the first 5 indices in such a way that we only got 5 unique elements on the first 5 indices in the array. \\n\\n**===>> So number of unique elements present in the array is the number of indices at which unique elements is present**"
                    },
                    {
                        "username": "wannaBeDarKnight",
                        "content": "![image](https://assets.leetcode.com/users/images/d1e30f3f-3fdf-47c4-a37a-c18666c418a3_1635576673.8389168.png)\\n"
                    },
                    {
                        "username": "CoderDes",
                        "content": "Have the same issue. In different environment there is a correct answer. How to handle that issue?"
                    },
                    {
                        "username": "joybhallaa",
                        "content": "I\\'m using sets in javascript, and it\\'s passing the test cases but the formatting of the output is different ! and that\\'s normal array behaviour ! smh "
                    },
                    {
                        "username": "ly2015CNTJ",
                        "content": "It\\'s a non-sence problem at all."
                    },
                    {
                        "username": "lasomu",
                        "content": "terrible problem description. I had to look at answer to figure out what the problem is."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "what a garbage! \n\n**misleading explained:**\n\n1.  You need to modiify the `nums`  list. Not reassign it or slice.  **Literally run a for-loop over it and use `.replace()`**\n2. Then you need to return an `int` instead of a `list`, a **number of unique elements** in `nums`. \n\nConclusion:\n\n**Worth your time?**  Not at all, instead of one item you need to return two. The one is displayed, the other one is hidden.\n**Check the solution?** Sure. Old Greek poem says, if there's a constant mismatch between your output and the expexcted result, you better check the solution. \n"
                    },
                    {
                        "username": "cjanowiak",
                        "content": "I missed the requirement to return k, returned nothing instead, and my submission was accepted for all test cases. Seems like the judge is not actually checking the return value of the function, just the values in the array after running it. (Python 3)"
                    }
                ]
            },
            {
                "id": 1573038,
                "content": [
                    {
                        "username": "sbookworm",
                        "content": "When I using go to implement the solution, the expect result in the test case checking is an array, but the problem should return a int, What\\'s the matter?"
                    },
                    {
                        "username": "user3803Ce",
                        "content": "Your solution returns an int and the problem\\'s main function \\'cuts\\' array nums using your returned value, creating output array of new length (your returned value)"
                    },
                    {
                        "username": "zombieprocess",
                        "content": "The problem states:\\n\\n> Do not allocate extra space for another array, you must do this in\\n> place with constant memory.\\n\\nIsn't it true that the size of an Java array is fixed when you allocate it?   How can the requirement of not allocating extra space for another array in place with constant memory be satisfied?"
                    },
                    {
                        "username": "charlescolfer",
                        "content": " Do yourself a favor and read the comments from people who spent hours deciphering the hieroglyphics they left for us... \\n\\nClassic terrible Quality Control from Leetcode - the Description is simply incorrect and misleading. You will spend more time understanding what the English on screen is asking you to do, rather than the logic. "
                    },
                    {
                        "username": "riyan372828",
                        "content": "[Watch](https://www.youtube.com/watch?v=aM4B1syX4sc)\\nhttps://www.youtube.com/watch?v=aM4B1syX4sc\\n\\n\\n\\nAlso you can SUBSCRIBE \\uD83E\\uDC81 \\uD83E\\uDC81 \\uD83E\\uDC81 this channel for the daily leetcode challange solution.\\n\\n\\n\\n\\n\\n\\n\\nhttps://t.me/dsacoder \\u2B05\\u2B05 Telegram link to discuss leetcode daily questions and other dsa problems\\n**If you find my solution helpful please upvote it.**"
                    },
                    {
                        "username": "dikshantgupta30",
                        "content": "Ok , so in this questions we need to calculate the length of the unique elements in the array and also update the array as per the length calculated.\\n\\nSuppose we have array [0, 0, 1, 1, 1, 2, 2, 3, 3, 4] which is given in question .Now we need to first find the length of unique elements present in the array which is 5 . Now we need to update the array 5 times or the first 5 indices in such a way that we only got 5 unique elements on the first 5 indices in the array. \\n\\n**===>> So number of unique elements present in the array is the number of indices at which unique elements is present**"
                    },
                    {
                        "username": "wannaBeDarKnight",
                        "content": "![image](https://assets.leetcode.com/users/images/d1e30f3f-3fdf-47c4-a37a-c18666c418a3_1635576673.8389168.png)\\n"
                    },
                    {
                        "username": "CoderDes",
                        "content": "Have the same issue. In different environment there is a correct answer. How to handle that issue?"
                    },
                    {
                        "username": "joybhallaa",
                        "content": "I\\'m using sets in javascript, and it\\'s passing the test cases but the formatting of the output is different ! and that\\'s normal array behaviour ! smh "
                    },
                    {
                        "username": "ly2015CNTJ",
                        "content": "It\\'s a non-sence problem at all."
                    },
                    {
                        "username": "lasomu",
                        "content": "terrible problem description. I had to look at answer to figure out what the problem is."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "what a garbage! \n\n**misleading explained:**\n\n1.  You need to modiify the `nums`  list. Not reassign it or slice.  **Literally run a for-loop over it and use `.replace()`**\n2. Then you need to return an `int` instead of a `list`, a **number of unique elements** in `nums`. \n\nConclusion:\n\n**Worth your time?**  Not at all, instead of one item you need to return two. The one is displayed, the other one is hidden.\n**Check the solution?** Sure. Old Greek poem says, if there's a constant mismatch between your output and the expexcted result, you better check the solution. \n"
                    },
                    {
                        "username": "cjanowiak",
                        "content": "I missed the requirement to return k, returned nothing instead, and my submission was accepted for all test cases. Seems like the judge is not actually checking the return value of the function, just the values in the array after running it. (Python 3)"
                    }
                ]
            },
            {
                "id": 1572752,
                "content": [
                    {
                        "username": "sbookworm",
                        "content": "When I using go to implement the solution, the expect result in the test case checking is an array, but the problem should return a int, What\\'s the matter?"
                    },
                    {
                        "username": "user3803Ce",
                        "content": "Your solution returns an int and the problem\\'s main function \\'cuts\\' array nums using your returned value, creating output array of new length (your returned value)"
                    },
                    {
                        "username": "zombieprocess",
                        "content": "The problem states:\\n\\n> Do not allocate extra space for another array, you must do this in\\n> place with constant memory.\\n\\nIsn't it true that the size of an Java array is fixed when you allocate it?   How can the requirement of not allocating extra space for another array in place with constant memory be satisfied?"
                    },
                    {
                        "username": "charlescolfer",
                        "content": " Do yourself a favor and read the comments from people who spent hours deciphering the hieroglyphics they left for us... \\n\\nClassic terrible Quality Control from Leetcode - the Description is simply incorrect and misleading. You will spend more time understanding what the English on screen is asking you to do, rather than the logic. "
                    },
                    {
                        "username": "riyan372828",
                        "content": "[Watch](https://www.youtube.com/watch?v=aM4B1syX4sc)\\nhttps://www.youtube.com/watch?v=aM4B1syX4sc\\n\\n\\n\\nAlso you can SUBSCRIBE \\uD83E\\uDC81 \\uD83E\\uDC81 \\uD83E\\uDC81 this channel for the daily leetcode challange solution.\\n\\n\\n\\n\\n\\n\\n\\nhttps://t.me/dsacoder \\u2B05\\u2B05 Telegram link to discuss leetcode daily questions and other dsa problems\\n**If you find my solution helpful please upvote it.**"
                    },
                    {
                        "username": "dikshantgupta30",
                        "content": "Ok , so in this questions we need to calculate the length of the unique elements in the array and also update the array as per the length calculated.\\n\\nSuppose we have array [0, 0, 1, 1, 1, 2, 2, 3, 3, 4] which is given in question .Now we need to first find the length of unique elements present in the array which is 5 . Now we need to update the array 5 times or the first 5 indices in such a way that we only got 5 unique elements on the first 5 indices in the array. \\n\\n**===>> So number of unique elements present in the array is the number of indices at which unique elements is present**"
                    },
                    {
                        "username": "wannaBeDarKnight",
                        "content": "![image](https://assets.leetcode.com/users/images/d1e30f3f-3fdf-47c4-a37a-c18666c418a3_1635576673.8389168.png)\\n"
                    },
                    {
                        "username": "CoderDes",
                        "content": "Have the same issue. In different environment there is a correct answer. How to handle that issue?"
                    },
                    {
                        "username": "joybhallaa",
                        "content": "I\\'m using sets in javascript, and it\\'s passing the test cases but the formatting of the output is different ! and that\\'s normal array behaviour ! smh "
                    },
                    {
                        "username": "ly2015CNTJ",
                        "content": "It\\'s a non-sence problem at all."
                    },
                    {
                        "username": "lasomu",
                        "content": "terrible problem description. I had to look at answer to figure out what the problem is."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "what a garbage! \n\n**misleading explained:**\n\n1.  You need to modiify the `nums`  list. Not reassign it or slice.  **Literally run a for-loop over it and use `.replace()`**\n2. Then you need to return an `int` instead of a `list`, a **number of unique elements** in `nums`. \n\nConclusion:\n\n**Worth your time?**  Not at all, instead of one item you need to return two. The one is displayed, the other one is hidden.\n**Check the solution?** Sure. Old Greek poem says, if there's a constant mismatch between your output and the expexcted result, you better check the solution. \n"
                    },
                    {
                        "username": "cjanowiak",
                        "content": "I missed the requirement to return k, returned nothing instead, and my submission was accepted for all test cases. Seems like the judge is not actually checking the return value of the function, just the values in the array after running it. (Python 3)"
                    }
                ]
            },
            {
                "id": 1967605,
                "content": [
                    {
                        "username": "sbookworm",
                        "content": "When I using go to implement the solution, the expect result in the test case checking is an array, but the problem should return a int, What\\'s the matter?"
                    },
                    {
                        "username": "user3803Ce",
                        "content": "Your solution returns an int and the problem\\'s main function \\'cuts\\' array nums using your returned value, creating output array of new length (your returned value)"
                    },
                    {
                        "username": "zombieprocess",
                        "content": "The problem states:\\n\\n> Do not allocate extra space for another array, you must do this in\\n> place with constant memory.\\n\\nIsn't it true that the size of an Java array is fixed when you allocate it?   How can the requirement of not allocating extra space for another array in place with constant memory be satisfied?"
                    },
                    {
                        "username": "charlescolfer",
                        "content": " Do yourself a favor and read the comments from people who spent hours deciphering the hieroglyphics they left for us... \\n\\nClassic terrible Quality Control from Leetcode - the Description is simply incorrect and misleading. You will spend more time understanding what the English on screen is asking you to do, rather than the logic. "
                    },
                    {
                        "username": "riyan372828",
                        "content": "[Watch](https://www.youtube.com/watch?v=aM4B1syX4sc)\\nhttps://www.youtube.com/watch?v=aM4B1syX4sc\\n\\n\\n\\nAlso you can SUBSCRIBE \\uD83E\\uDC81 \\uD83E\\uDC81 \\uD83E\\uDC81 this channel for the daily leetcode challange solution.\\n\\n\\n\\n\\n\\n\\n\\nhttps://t.me/dsacoder \\u2B05\\u2B05 Telegram link to discuss leetcode daily questions and other dsa problems\\n**If you find my solution helpful please upvote it.**"
                    },
                    {
                        "username": "dikshantgupta30",
                        "content": "Ok , so in this questions we need to calculate the length of the unique elements in the array and also update the array as per the length calculated.\\n\\nSuppose we have array [0, 0, 1, 1, 1, 2, 2, 3, 3, 4] which is given in question .Now we need to first find the length of unique elements present in the array which is 5 . Now we need to update the array 5 times or the first 5 indices in such a way that we only got 5 unique elements on the first 5 indices in the array. \\n\\n**===>> So number of unique elements present in the array is the number of indices at which unique elements is present**"
                    },
                    {
                        "username": "wannaBeDarKnight",
                        "content": "![image](https://assets.leetcode.com/users/images/d1e30f3f-3fdf-47c4-a37a-c18666c418a3_1635576673.8389168.png)\\n"
                    },
                    {
                        "username": "CoderDes",
                        "content": "Have the same issue. In different environment there is a correct answer. How to handle that issue?"
                    },
                    {
                        "username": "joybhallaa",
                        "content": "I\\'m using sets in javascript, and it\\'s passing the test cases but the formatting of the output is different ! and that\\'s normal array behaviour ! smh "
                    },
                    {
                        "username": "ly2015CNTJ",
                        "content": "It\\'s a non-sence problem at all."
                    },
                    {
                        "username": "lasomu",
                        "content": "terrible problem description. I had to look at answer to figure out what the problem is."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "what a garbage! \n\n**misleading explained:**\n\n1.  You need to modiify the `nums`  list. Not reassign it or slice.  **Literally run a for-loop over it and use `.replace()`**\n2. Then you need to return an `int` instead of a `list`, a **number of unique elements** in `nums`. \n\nConclusion:\n\n**Worth your time?**  Not at all, instead of one item you need to return two. The one is displayed, the other one is hidden.\n**Check the solution?** Sure. Old Greek poem says, if there's a constant mismatch between your output and the expexcted result, you better check the solution. \n"
                    },
                    {
                        "username": "cjanowiak",
                        "content": "I missed the requirement to return k, returned nothing instead, and my submission was accepted for all test cases. Seems like the judge is not actually checking the return value of the function, just the values in the array after running it. (Python 3)"
                    }
                ]
            },
            {
                "id": 1680066,
                "content": [
                    {
                        "username": "sbookworm",
                        "content": "When I using go to implement the solution, the expect result in the test case checking is an array, but the problem should return a int, What\\'s the matter?"
                    },
                    {
                        "username": "user3803Ce",
                        "content": "Your solution returns an int and the problem\\'s main function \\'cuts\\' array nums using your returned value, creating output array of new length (your returned value)"
                    },
                    {
                        "username": "zombieprocess",
                        "content": "The problem states:\\n\\n> Do not allocate extra space for another array, you must do this in\\n> place with constant memory.\\n\\nIsn't it true that the size of an Java array is fixed when you allocate it?   How can the requirement of not allocating extra space for another array in place with constant memory be satisfied?"
                    },
                    {
                        "username": "charlescolfer",
                        "content": " Do yourself a favor and read the comments from people who spent hours deciphering the hieroglyphics they left for us... \\n\\nClassic terrible Quality Control from Leetcode - the Description is simply incorrect and misleading. You will spend more time understanding what the English on screen is asking you to do, rather than the logic. "
                    },
                    {
                        "username": "riyan372828",
                        "content": "[Watch](https://www.youtube.com/watch?v=aM4B1syX4sc)\\nhttps://www.youtube.com/watch?v=aM4B1syX4sc\\n\\n\\n\\nAlso you can SUBSCRIBE \\uD83E\\uDC81 \\uD83E\\uDC81 \\uD83E\\uDC81 this channel for the daily leetcode challange solution.\\n\\n\\n\\n\\n\\n\\n\\nhttps://t.me/dsacoder \\u2B05\\u2B05 Telegram link to discuss leetcode daily questions and other dsa problems\\n**If you find my solution helpful please upvote it.**"
                    },
                    {
                        "username": "dikshantgupta30",
                        "content": "Ok , so in this questions we need to calculate the length of the unique elements in the array and also update the array as per the length calculated.\\n\\nSuppose we have array [0, 0, 1, 1, 1, 2, 2, 3, 3, 4] which is given in question .Now we need to first find the length of unique elements present in the array which is 5 . Now we need to update the array 5 times or the first 5 indices in such a way that we only got 5 unique elements on the first 5 indices in the array. \\n\\n**===>> So number of unique elements present in the array is the number of indices at which unique elements is present**"
                    },
                    {
                        "username": "wannaBeDarKnight",
                        "content": "![image](https://assets.leetcode.com/users/images/d1e30f3f-3fdf-47c4-a37a-c18666c418a3_1635576673.8389168.png)\\n"
                    },
                    {
                        "username": "CoderDes",
                        "content": "Have the same issue. In different environment there is a correct answer. How to handle that issue?"
                    },
                    {
                        "username": "joybhallaa",
                        "content": "I\\'m using sets in javascript, and it\\'s passing the test cases but the formatting of the output is different ! and that\\'s normal array behaviour ! smh "
                    },
                    {
                        "username": "ly2015CNTJ",
                        "content": "It\\'s a non-sence problem at all."
                    },
                    {
                        "username": "lasomu",
                        "content": "terrible problem description. I had to look at answer to figure out what the problem is."
                    },
                    {
                        "username": "a_andreasian",
                        "content": "what a garbage! \n\n**misleading explained:**\n\n1.  You need to modiify the `nums`  list. Not reassign it or slice.  **Literally run a for-loop over it and use `.replace()`**\n2. Then you need to return an `int` instead of a `list`, a **number of unique elements** in `nums`. \n\nConclusion:\n\n**Worth your time?**  Not at all, instead of one item you need to return two. The one is displayed, the other one is hidden.\n**Check the solution?** Sure. Old Greek poem says, if there's a constant mismatch between your output and the expexcted result, you better check the solution. \n"
                    },
                    {
                        "username": "cjanowiak",
                        "content": "I missed the requirement to return k, returned nothing instead, and my submission was accepted for all test cases. Seems like the judge is not actually checking the return value of the function, just the values in the array after running it. (Python 3)"
                    }
                ]
            },
            {
                "id": 1841460,
                "content": [
                    {
                        "username": "Vithesh",
                        "content": "I mean this question was obviously easy. The thing is how we implement it. I used swapping but swapping was not necessary at all. Just replace the repeating with next unique and greater one. so it took me around 15 min to solve which not good considering a easy problems. But why do people hate this question .I don\\'t know."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "If I remove the for loop, it no longer works, despite the fact that the result it returns having nothing to do with the for loop. \"removeDuplicates=nums=>{\\n    let nums2 = Array.from(new Set(nums))\\n    console.log(nums2)\\n    const len = nums.length;\\n    for(i = 0; i < len - 1; i++) {\\n      if(i > nums.length - 1) {\\n        break;\\n      }\\n      if (nums[i] === nums[i + 1]) {\\n        nums.splice(i, 1);\\n        i--;\\n      }\\n    }\\n    console.log(nums)\\n    console.log(nums2.length)\\n    console.log(nums.length)\\n    return nums2.length\\n}\". If it\\'s so easy why don\\'t explain the question and why my code isn\\'t working?"
                    },
                    {
                        "username": "AmarilloSlim",
                        "content": "Hi everyone!\\n\\nI don\\'t understand, what  i must to return. When i return lenght of removed duplicates array, Leetcode raise error, that he expected to see array like [1,2,3], but when i retern array like [1,2,3] Leetcode raise error that i must return integer. Please explain me, what i must to return.\\nThanx."
                    },
                    {
                        "username": "roman-smal",
                        "content": "you should return a length of the array you\\'ve got. For example for\\nInput: nums = [0,0,1,1,1,2,2,3,3,4]\\nOutput: 5, nums = [0,1,2,3,4,_,_,_,_,_]\\n\\nSo for JS you should return arr.length which is 5, whereas the input array \\'nums\\' should be mutated to [0,1,2,3,4]. I suppose for some other languages it should be changed into [0,1,2,3,4,_,_,_,_,_]. JL"
                    },
                    {
                        "username": "Manviel",
                        "content": "var myArray = [1, 2, 1];\\nlet unique = [...new Set(myArray)];\\n[1, 2]"
                    },
                    {
                        "username": "ozzymoron",
                        "content": "This doesn\\'t work because you created a new array. Requirement is O(1). Spread operator makes it O(n)"
                    },
                    {
                        "username": "tejasparmar1211999",
                        "content": "same issue.\\nvar removeDuplicates = function(nums) {\\n    let res=new Set(nums);\\n    let res1=[...res];\\n    return res1;\\n};\\nnot sure why not working. "
                    },
                    {
                        "username": "rgonzalezp",
                        "content": "I know it actually works on tests cases, but most of the solutions I have seen here just replace the first values of the array and not actually remove duplicates, anyone agrees?"
                    },
                    {
                        "username": "FACEPLANT",
                        "content": "\\tnums[:] = sorted(set(nums))\\n\\treturn len(nums)\\n\\n"
                    },
                    {
                        "username": "alinapenkina00",
                        "content": "Can't understand why my solution is wrong. It returns correct expected result in my IDE, but wrong in LeetCode compiler.\n```   \n     public int removeDuplicates(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        for (int i = 0; i < nums.length; i++) {\n            set.add(nums[I]);\n        }\n        return set.size();\n    }"
                    },
                    {
                        "username": "isydor",
                        "content": "you must remove the duplicates in-place - means changing the nums itself not creating a new variable."
                    },
                    {
                        "username": "madhav_varshney",
                        "content": "Having the same issue"
                    },
                    {
                        "username": "madhav_varshney",
                        "content": "I think there is something wrong with the Leetcode\\'s editor. \\n```\\nvar removeDuplicates = function(nums) {\\n    nums = [...new Set(nums)];\\n    return nums.length;\\n};\\n```\\nThis code giving me correct answer on other online editor but here I am getting wrong answer.\\n\\nAnyone facing same?"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "The question description is not correct, they want you to place the unique elements at the front of the array and place the duplicate ones at the end (no matter in what order). And they want you to return the length of uniquely placed elements only!"
                    },
                    {
                        "username": "Saad03",
                        "content": "\\n      \\nguys can someone tell me where i went wrong. code works fine in jupyter notebook but having errors here\\n\\n\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        nums=set(nums)\\n        nums= list(nums)\\n        return nums\\n"
                    },
                    {
                        "username": "ganesh009",
                        "content": "why this is failing?\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        x= set(nums)\\n        nums = list(x)\\n        return len(nums)"
                    }
                ]
            },
            {
                "id": 1792941,
                "content": [
                    {
                        "username": "Vithesh",
                        "content": "I mean this question was obviously easy. The thing is how we implement it. I used swapping but swapping was not necessary at all. Just replace the repeating with next unique and greater one. so it took me around 15 min to solve which not good considering a easy problems. But why do people hate this question .I don\\'t know."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "If I remove the for loop, it no longer works, despite the fact that the result it returns having nothing to do with the for loop. \"removeDuplicates=nums=>{\\n    let nums2 = Array.from(new Set(nums))\\n    console.log(nums2)\\n    const len = nums.length;\\n    for(i = 0; i < len - 1; i++) {\\n      if(i > nums.length - 1) {\\n        break;\\n      }\\n      if (nums[i] === nums[i + 1]) {\\n        nums.splice(i, 1);\\n        i--;\\n      }\\n    }\\n    console.log(nums)\\n    console.log(nums2.length)\\n    console.log(nums.length)\\n    return nums2.length\\n}\". If it\\'s so easy why don\\'t explain the question and why my code isn\\'t working?"
                    },
                    {
                        "username": "AmarilloSlim",
                        "content": "Hi everyone!\\n\\nI don\\'t understand, what  i must to return. When i return lenght of removed duplicates array, Leetcode raise error, that he expected to see array like [1,2,3], but when i retern array like [1,2,3] Leetcode raise error that i must return integer. Please explain me, what i must to return.\\nThanx."
                    },
                    {
                        "username": "roman-smal",
                        "content": "you should return a length of the array you\\'ve got. For example for\\nInput: nums = [0,0,1,1,1,2,2,3,3,4]\\nOutput: 5, nums = [0,1,2,3,4,_,_,_,_,_]\\n\\nSo for JS you should return arr.length which is 5, whereas the input array \\'nums\\' should be mutated to [0,1,2,3,4]. I suppose for some other languages it should be changed into [0,1,2,3,4,_,_,_,_,_]. JL"
                    },
                    {
                        "username": "Manviel",
                        "content": "var myArray = [1, 2, 1];\\nlet unique = [...new Set(myArray)];\\n[1, 2]"
                    },
                    {
                        "username": "ozzymoron",
                        "content": "This doesn\\'t work because you created a new array. Requirement is O(1). Spread operator makes it O(n)"
                    },
                    {
                        "username": "tejasparmar1211999",
                        "content": "same issue.\\nvar removeDuplicates = function(nums) {\\n    let res=new Set(nums);\\n    let res1=[...res];\\n    return res1;\\n};\\nnot sure why not working. "
                    },
                    {
                        "username": "rgonzalezp",
                        "content": "I know it actually works on tests cases, but most of the solutions I have seen here just replace the first values of the array and not actually remove duplicates, anyone agrees?"
                    },
                    {
                        "username": "FACEPLANT",
                        "content": "\\tnums[:] = sorted(set(nums))\\n\\treturn len(nums)\\n\\n"
                    },
                    {
                        "username": "alinapenkina00",
                        "content": "Can't understand why my solution is wrong. It returns correct expected result in my IDE, but wrong in LeetCode compiler.\n```   \n     public int removeDuplicates(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        for (int i = 0; i < nums.length; i++) {\n            set.add(nums[I]);\n        }\n        return set.size();\n    }"
                    },
                    {
                        "username": "isydor",
                        "content": "you must remove the duplicates in-place - means changing the nums itself not creating a new variable."
                    },
                    {
                        "username": "madhav_varshney",
                        "content": "Having the same issue"
                    },
                    {
                        "username": "madhav_varshney",
                        "content": "I think there is something wrong with the Leetcode\\'s editor. \\n```\\nvar removeDuplicates = function(nums) {\\n    nums = [...new Set(nums)];\\n    return nums.length;\\n};\\n```\\nThis code giving me correct answer on other online editor but here I am getting wrong answer.\\n\\nAnyone facing same?"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "The question description is not correct, they want you to place the unique elements at the front of the array and place the duplicate ones at the end (no matter in what order). And they want you to return the length of uniquely placed elements only!"
                    },
                    {
                        "username": "Saad03",
                        "content": "\\n      \\nguys can someone tell me where i went wrong. code works fine in jupyter notebook but having errors here\\n\\n\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        nums=set(nums)\\n        nums= list(nums)\\n        return nums\\n"
                    },
                    {
                        "username": "ganesh009",
                        "content": "why this is failing?\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        x= set(nums)\\n        nums = list(x)\\n        return len(nums)"
                    }
                ]
            },
            {
                "id": 1573121,
                "content": [
                    {
                        "username": "Vithesh",
                        "content": "I mean this question was obviously easy. The thing is how we implement it. I used swapping but swapping was not necessary at all. Just replace the repeating with next unique and greater one. so it took me around 15 min to solve which not good considering a easy problems. But why do people hate this question .I don\\'t know."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "If I remove the for loop, it no longer works, despite the fact that the result it returns having nothing to do with the for loop. \"removeDuplicates=nums=>{\\n    let nums2 = Array.from(new Set(nums))\\n    console.log(nums2)\\n    const len = nums.length;\\n    for(i = 0; i < len - 1; i++) {\\n      if(i > nums.length - 1) {\\n        break;\\n      }\\n      if (nums[i] === nums[i + 1]) {\\n        nums.splice(i, 1);\\n        i--;\\n      }\\n    }\\n    console.log(nums)\\n    console.log(nums2.length)\\n    console.log(nums.length)\\n    return nums2.length\\n}\". If it\\'s so easy why don\\'t explain the question and why my code isn\\'t working?"
                    },
                    {
                        "username": "AmarilloSlim",
                        "content": "Hi everyone!\\n\\nI don\\'t understand, what  i must to return. When i return lenght of removed duplicates array, Leetcode raise error, that he expected to see array like [1,2,3], but when i retern array like [1,2,3] Leetcode raise error that i must return integer. Please explain me, what i must to return.\\nThanx."
                    },
                    {
                        "username": "roman-smal",
                        "content": "you should return a length of the array you\\'ve got. For example for\\nInput: nums = [0,0,1,1,1,2,2,3,3,4]\\nOutput: 5, nums = [0,1,2,3,4,_,_,_,_,_]\\n\\nSo for JS you should return arr.length which is 5, whereas the input array \\'nums\\' should be mutated to [0,1,2,3,4]. I suppose for some other languages it should be changed into [0,1,2,3,4,_,_,_,_,_]. JL"
                    },
                    {
                        "username": "Manviel",
                        "content": "var myArray = [1, 2, 1];\\nlet unique = [...new Set(myArray)];\\n[1, 2]"
                    },
                    {
                        "username": "ozzymoron",
                        "content": "This doesn\\'t work because you created a new array. Requirement is O(1). Spread operator makes it O(n)"
                    },
                    {
                        "username": "tejasparmar1211999",
                        "content": "same issue.\\nvar removeDuplicates = function(nums) {\\n    let res=new Set(nums);\\n    let res1=[...res];\\n    return res1;\\n};\\nnot sure why not working. "
                    },
                    {
                        "username": "rgonzalezp",
                        "content": "I know it actually works on tests cases, but most of the solutions I have seen here just replace the first values of the array and not actually remove duplicates, anyone agrees?"
                    },
                    {
                        "username": "FACEPLANT",
                        "content": "\\tnums[:] = sorted(set(nums))\\n\\treturn len(nums)\\n\\n"
                    },
                    {
                        "username": "alinapenkina00",
                        "content": "Can't understand why my solution is wrong. It returns correct expected result in my IDE, but wrong in LeetCode compiler.\n```   \n     public int removeDuplicates(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        for (int i = 0; i < nums.length; i++) {\n            set.add(nums[I]);\n        }\n        return set.size();\n    }"
                    },
                    {
                        "username": "isydor",
                        "content": "you must remove the duplicates in-place - means changing the nums itself not creating a new variable."
                    },
                    {
                        "username": "madhav_varshney",
                        "content": "Having the same issue"
                    },
                    {
                        "username": "madhav_varshney",
                        "content": "I think there is something wrong with the Leetcode\\'s editor. \\n```\\nvar removeDuplicates = function(nums) {\\n    nums = [...new Set(nums)];\\n    return nums.length;\\n};\\n```\\nThis code giving me correct answer on other online editor but here I am getting wrong answer.\\n\\nAnyone facing same?"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "The question description is not correct, they want you to place the unique elements at the front of the array and place the duplicate ones at the end (no matter in what order). And they want you to return the length of uniquely placed elements only!"
                    },
                    {
                        "username": "Saad03",
                        "content": "\\n      \\nguys can someone tell me where i went wrong. code works fine in jupyter notebook but having errors here\\n\\n\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        nums=set(nums)\\n        nums= list(nums)\\n        return nums\\n"
                    },
                    {
                        "username": "ganesh009",
                        "content": "why this is failing?\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        x= set(nums)\\n        nums = list(x)\\n        return len(nums)"
                    }
                ]
            },
            {
                "id": 1572293,
                "content": [
                    {
                        "username": "Vithesh",
                        "content": "I mean this question was obviously easy. The thing is how we implement it. I used swapping but swapping was not necessary at all. Just replace the repeating with next unique and greater one. so it took me around 15 min to solve which not good considering a easy problems. But why do people hate this question .I don\\'t know."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "If I remove the for loop, it no longer works, despite the fact that the result it returns having nothing to do with the for loop. \"removeDuplicates=nums=>{\\n    let nums2 = Array.from(new Set(nums))\\n    console.log(nums2)\\n    const len = nums.length;\\n    for(i = 0; i < len - 1; i++) {\\n      if(i > nums.length - 1) {\\n        break;\\n      }\\n      if (nums[i] === nums[i + 1]) {\\n        nums.splice(i, 1);\\n        i--;\\n      }\\n    }\\n    console.log(nums)\\n    console.log(nums2.length)\\n    console.log(nums.length)\\n    return nums2.length\\n}\". If it\\'s so easy why don\\'t explain the question and why my code isn\\'t working?"
                    },
                    {
                        "username": "AmarilloSlim",
                        "content": "Hi everyone!\\n\\nI don\\'t understand, what  i must to return. When i return lenght of removed duplicates array, Leetcode raise error, that he expected to see array like [1,2,3], but when i retern array like [1,2,3] Leetcode raise error that i must return integer. Please explain me, what i must to return.\\nThanx."
                    },
                    {
                        "username": "roman-smal",
                        "content": "you should return a length of the array you\\'ve got. For example for\\nInput: nums = [0,0,1,1,1,2,2,3,3,4]\\nOutput: 5, nums = [0,1,2,3,4,_,_,_,_,_]\\n\\nSo for JS you should return arr.length which is 5, whereas the input array \\'nums\\' should be mutated to [0,1,2,3,4]. I suppose for some other languages it should be changed into [0,1,2,3,4,_,_,_,_,_]. JL"
                    },
                    {
                        "username": "Manviel",
                        "content": "var myArray = [1, 2, 1];\\nlet unique = [...new Set(myArray)];\\n[1, 2]"
                    },
                    {
                        "username": "ozzymoron",
                        "content": "This doesn\\'t work because you created a new array. Requirement is O(1). Spread operator makes it O(n)"
                    },
                    {
                        "username": "tejasparmar1211999",
                        "content": "same issue.\\nvar removeDuplicates = function(nums) {\\n    let res=new Set(nums);\\n    let res1=[...res];\\n    return res1;\\n};\\nnot sure why not working. "
                    },
                    {
                        "username": "rgonzalezp",
                        "content": "I know it actually works on tests cases, but most of the solutions I have seen here just replace the first values of the array and not actually remove duplicates, anyone agrees?"
                    },
                    {
                        "username": "FACEPLANT",
                        "content": "\\tnums[:] = sorted(set(nums))\\n\\treturn len(nums)\\n\\n"
                    },
                    {
                        "username": "alinapenkina00",
                        "content": "Can't understand why my solution is wrong. It returns correct expected result in my IDE, but wrong in LeetCode compiler.\n```   \n     public int removeDuplicates(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        for (int i = 0; i < nums.length; i++) {\n            set.add(nums[I]);\n        }\n        return set.size();\n    }"
                    },
                    {
                        "username": "isydor",
                        "content": "you must remove the duplicates in-place - means changing the nums itself not creating a new variable."
                    },
                    {
                        "username": "madhav_varshney",
                        "content": "Having the same issue"
                    },
                    {
                        "username": "madhav_varshney",
                        "content": "I think there is something wrong with the Leetcode\\'s editor. \\n```\\nvar removeDuplicates = function(nums) {\\n    nums = [...new Set(nums)];\\n    return nums.length;\\n};\\n```\\nThis code giving me correct answer on other online editor but here I am getting wrong answer.\\n\\nAnyone facing same?"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "The question description is not correct, they want you to place the unique elements at the front of the array and place the duplicate ones at the end (no matter in what order). And they want you to return the length of uniquely placed elements only!"
                    },
                    {
                        "username": "Saad03",
                        "content": "\\n      \\nguys can someone tell me where i went wrong. code works fine in jupyter notebook but having errors here\\n\\n\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        nums=set(nums)\\n        nums= list(nums)\\n        return nums\\n"
                    },
                    {
                        "username": "ganesh009",
                        "content": "why this is failing?\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        x= set(nums)\\n        nums = list(x)\\n        return len(nums)"
                    }
                ]
            },
            {
                "id": 1574735,
                "content": [
                    {
                        "username": "Vithesh",
                        "content": "I mean this question was obviously easy. The thing is how we implement it. I used swapping but swapping was not necessary at all. Just replace the repeating with next unique and greater one. so it took me around 15 min to solve which not good considering a easy problems. But why do people hate this question .I don\\'t know."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "If I remove the for loop, it no longer works, despite the fact that the result it returns having nothing to do with the for loop. \"removeDuplicates=nums=>{\\n    let nums2 = Array.from(new Set(nums))\\n    console.log(nums2)\\n    const len = nums.length;\\n    for(i = 0; i < len - 1; i++) {\\n      if(i > nums.length - 1) {\\n        break;\\n      }\\n      if (nums[i] === nums[i + 1]) {\\n        nums.splice(i, 1);\\n        i--;\\n      }\\n    }\\n    console.log(nums)\\n    console.log(nums2.length)\\n    console.log(nums.length)\\n    return nums2.length\\n}\". If it\\'s so easy why don\\'t explain the question and why my code isn\\'t working?"
                    },
                    {
                        "username": "AmarilloSlim",
                        "content": "Hi everyone!\\n\\nI don\\'t understand, what  i must to return. When i return lenght of removed duplicates array, Leetcode raise error, that he expected to see array like [1,2,3], but when i retern array like [1,2,3] Leetcode raise error that i must return integer. Please explain me, what i must to return.\\nThanx."
                    },
                    {
                        "username": "roman-smal",
                        "content": "you should return a length of the array you\\'ve got. For example for\\nInput: nums = [0,0,1,1,1,2,2,3,3,4]\\nOutput: 5, nums = [0,1,2,3,4,_,_,_,_,_]\\n\\nSo for JS you should return arr.length which is 5, whereas the input array \\'nums\\' should be mutated to [0,1,2,3,4]. I suppose for some other languages it should be changed into [0,1,2,3,4,_,_,_,_,_]. JL"
                    },
                    {
                        "username": "Manviel",
                        "content": "var myArray = [1, 2, 1];\\nlet unique = [...new Set(myArray)];\\n[1, 2]"
                    },
                    {
                        "username": "ozzymoron",
                        "content": "This doesn\\'t work because you created a new array. Requirement is O(1). Spread operator makes it O(n)"
                    },
                    {
                        "username": "tejasparmar1211999",
                        "content": "same issue.\\nvar removeDuplicates = function(nums) {\\n    let res=new Set(nums);\\n    let res1=[...res];\\n    return res1;\\n};\\nnot sure why not working. "
                    },
                    {
                        "username": "rgonzalezp",
                        "content": "I know it actually works on tests cases, but most of the solutions I have seen here just replace the first values of the array and not actually remove duplicates, anyone agrees?"
                    },
                    {
                        "username": "FACEPLANT",
                        "content": "\\tnums[:] = sorted(set(nums))\\n\\treturn len(nums)\\n\\n"
                    },
                    {
                        "username": "alinapenkina00",
                        "content": "Can't understand why my solution is wrong. It returns correct expected result in my IDE, but wrong in LeetCode compiler.\n```   \n     public int removeDuplicates(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        for (int i = 0; i < nums.length; i++) {\n            set.add(nums[I]);\n        }\n        return set.size();\n    }"
                    },
                    {
                        "username": "isydor",
                        "content": "you must remove the duplicates in-place - means changing the nums itself not creating a new variable."
                    },
                    {
                        "username": "madhav_varshney",
                        "content": "Having the same issue"
                    },
                    {
                        "username": "madhav_varshney",
                        "content": "I think there is something wrong with the Leetcode\\'s editor. \\n```\\nvar removeDuplicates = function(nums) {\\n    nums = [...new Set(nums)];\\n    return nums.length;\\n};\\n```\\nThis code giving me correct answer on other online editor but here I am getting wrong answer.\\n\\nAnyone facing same?"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "The question description is not correct, they want you to place the unique elements at the front of the array and place the duplicate ones at the end (no matter in what order). And they want you to return the length of uniquely placed elements only!"
                    },
                    {
                        "username": "Saad03",
                        "content": "\\n      \\nguys can someone tell me where i went wrong. code works fine in jupyter notebook but having errors here\\n\\n\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        nums=set(nums)\\n        nums= list(nums)\\n        return nums\\n"
                    },
                    {
                        "username": "ganesh009",
                        "content": "why this is failing?\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        x= set(nums)\\n        nums = list(x)\\n        return len(nums)"
                    }
                ]
            },
            {
                "id": 2056809,
                "content": [
                    {
                        "username": "Vithesh",
                        "content": "I mean this question was obviously easy. The thing is how we implement it. I used swapping but swapping was not necessary at all. Just replace the repeating with next unique and greater one. so it took me around 15 min to solve which not good considering a easy problems. But why do people hate this question .I don\\'t know."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "If I remove the for loop, it no longer works, despite the fact that the result it returns having nothing to do with the for loop. \"removeDuplicates=nums=>{\\n    let nums2 = Array.from(new Set(nums))\\n    console.log(nums2)\\n    const len = nums.length;\\n    for(i = 0; i < len - 1; i++) {\\n      if(i > nums.length - 1) {\\n        break;\\n      }\\n      if (nums[i] === nums[i + 1]) {\\n        nums.splice(i, 1);\\n        i--;\\n      }\\n    }\\n    console.log(nums)\\n    console.log(nums2.length)\\n    console.log(nums.length)\\n    return nums2.length\\n}\". If it\\'s so easy why don\\'t explain the question and why my code isn\\'t working?"
                    },
                    {
                        "username": "AmarilloSlim",
                        "content": "Hi everyone!\\n\\nI don\\'t understand, what  i must to return. When i return lenght of removed duplicates array, Leetcode raise error, that he expected to see array like [1,2,3], but when i retern array like [1,2,3] Leetcode raise error that i must return integer. Please explain me, what i must to return.\\nThanx."
                    },
                    {
                        "username": "roman-smal",
                        "content": "you should return a length of the array you\\'ve got. For example for\\nInput: nums = [0,0,1,1,1,2,2,3,3,4]\\nOutput: 5, nums = [0,1,2,3,4,_,_,_,_,_]\\n\\nSo for JS you should return arr.length which is 5, whereas the input array \\'nums\\' should be mutated to [0,1,2,3,4]. I suppose for some other languages it should be changed into [0,1,2,3,4,_,_,_,_,_]. JL"
                    },
                    {
                        "username": "Manviel",
                        "content": "var myArray = [1, 2, 1];\\nlet unique = [...new Set(myArray)];\\n[1, 2]"
                    },
                    {
                        "username": "ozzymoron",
                        "content": "This doesn\\'t work because you created a new array. Requirement is O(1). Spread operator makes it O(n)"
                    },
                    {
                        "username": "tejasparmar1211999",
                        "content": "same issue.\\nvar removeDuplicates = function(nums) {\\n    let res=new Set(nums);\\n    let res1=[...res];\\n    return res1;\\n};\\nnot sure why not working. "
                    },
                    {
                        "username": "rgonzalezp",
                        "content": "I know it actually works on tests cases, but most of the solutions I have seen here just replace the first values of the array and not actually remove duplicates, anyone agrees?"
                    },
                    {
                        "username": "FACEPLANT",
                        "content": "\\tnums[:] = sorted(set(nums))\\n\\treturn len(nums)\\n\\n"
                    },
                    {
                        "username": "alinapenkina00",
                        "content": "Can't understand why my solution is wrong. It returns correct expected result in my IDE, but wrong in LeetCode compiler.\n```   \n     public int removeDuplicates(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        for (int i = 0; i < nums.length; i++) {\n            set.add(nums[I]);\n        }\n        return set.size();\n    }"
                    },
                    {
                        "username": "isydor",
                        "content": "you must remove the duplicates in-place - means changing the nums itself not creating a new variable."
                    },
                    {
                        "username": "madhav_varshney",
                        "content": "Having the same issue"
                    },
                    {
                        "username": "madhav_varshney",
                        "content": "I think there is something wrong with the Leetcode\\'s editor. \\n```\\nvar removeDuplicates = function(nums) {\\n    nums = [...new Set(nums)];\\n    return nums.length;\\n};\\n```\\nThis code giving me correct answer on other online editor but here I am getting wrong answer.\\n\\nAnyone facing same?"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "The question description is not correct, they want you to place the unique elements at the front of the array and place the duplicate ones at the end (no matter in what order). And they want you to return the length of uniquely placed elements only!"
                    },
                    {
                        "username": "Saad03",
                        "content": "\\n      \\nguys can someone tell me where i went wrong. code works fine in jupyter notebook but having errors here\\n\\n\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        nums=set(nums)\\n        nums= list(nums)\\n        return nums\\n"
                    },
                    {
                        "username": "ganesh009",
                        "content": "why this is failing?\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        x= set(nums)\\n        nums = list(x)\\n        return len(nums)"
                    }
                ]
            },
            {
                "id": 2054869,
                "content": [
                    {
                        "username": "Vithesh",
                        "content": "I mean this question was obviously easy. The thing is how we implement it. I used swapping but swapping was not necessary at all. Just replace the repeating with next unique and greater one. so it took me around 15 min to solve which not good considering a easy problems. But why do people hate this question .I don\\'t know."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "If I remove the for loop, it no longer works, despite the fact that the result it returns having nothing to do with the for loop. \"removeDuplicates=nums=>{\\n    let nums2 = Array.from(new Set(nums))\\n    console.log(nums2)\\n    const len = nums.length;\\n    for(i = 0; i < len - 1; i++) {\\n      if(i > nums.length - 1) {\\n        break;\\n      }\\n      if (nums[i] === nums[i + 1]) {\\n        nums.splice(i, 1);\\n        i--;\\n      }\\n    }\\n    console.log(nums)\\n    console.log(nums2.length)\\n    console.log(nums.length)\\n    return nums2.length\\n}\". If it\\'s so easy why don\\'t explain the question and why my code isn\\'t working?"
                    },
                    {
                        "username": "AmarilloSlim",
                        "content": "Hi everyone!\\n\\nI don\\'t understand, what  i must to return. When i return lenght of removed duplicates array, Leetcode raise error, that he expected to see array like [1,2,3], but when i retern array like [1,2,3] Leetcode raise error that i must return integer. Please explain me, what i must to return.\\nThanx."
                    },
                    {
                        "username": "roman-smal",
                        "content": "you should return a length of the array you\\'ve got. For example for\\nInput: nums = [0,0,1,1,1,2,2,3,3,4]\\nOutput: 5, nums = [0,1,2,3,4,_,_,_,_,_]\\n\\nSo for JS you should return arr.length which is 5, whereas the input array \\'nums\\' should be mutated to [0,1,2,3,4]. I suppose for some other languages it should be changed into [0,1,2,3,4,_,_,_,_,_]. JL"
                    },
                    {
                        "username": "Manviel",
                        "content": "var myArray = [1, 2, 1];\\nlet unique = [...new Set(myArray)];\\n[1, 2]"
                    },
                    {
                        "username": "ozzymoron",
                        "content": "This doesn\\'t work because you created a new array. Requirement is O(1). Spread operator makes it O(n)"
                    },
                    {
                        "username": "tejasparmar1211999",
                        "content": "same issue.\\nvar removeDuplicates = function(nums) {\\n    let res=new Set(nums);\\n    let res1=[...res];\\n    return res1;\\n};\\nnot sure why not working. "
                    },
                    {
                        "username": "rgonzalezp",
                        "content": "I know it actually works on tests cases, but most of the solutions I have seen here just replace the first values of the array and not actually remove duplicates, anyone agrees?"
                    },
                    {
                        "username": "FACEPLANT",
                        "content": "\\tnums[:] = sorted(set(nums))\\n\\treturn len(nums)\\n\\n"
                    },
                    {
                        "username": "alinapenkina00",
                        "content": "Can't understand why my solution is wrong. It returns correct expected result in my IDE, but wrong in LeetCode compiler.\n```   \n     public int removeDuplicates(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        for (int i = 0; i < nums.length; i++) {\n            set.add(nums[I]);\n        }\n        return set.size();\n    }"
                    },
                    {
                        "username": "isydor",
                        "content": "you must remove the duplicates in-place - means changing the nums itself not creating a new variable."
                    },
                    {
                        "username": "madhav_varshney",
                        "content": "Having the same issue"
                    },
                    {
                        "username": "madhav_varshney",
                        "content": "I think there is something wrong with the Leetcode\\'s editor. \\n```\\nvar removeDuplicates = function(nums) {\\n    nums = [...new Set(nums)];\\n    return nums.length;\\n};\\n```\\nThis code giving me correct answer on other online editor but here I am getting wrong answer.\\n\\nAnyone facing same?"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "The question description is not correct, they want you to place the unique elements at the front of the array and place the duplicate ones at the end (no matter in what order). And they want you to return the length of uniquely placed elements only!"
                    },
                    {
                        "username": "Saad03",
                        "content": "\\n      \\nguys can someone tell me where i went wrong. code works fine in jupyter notebook but having errors here\\n\\n\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        nums=set(nums)\\n        nums= list(nums)\\n        return nums\\n"
                    },
                    {
                        "username": "ganesh009",
                        "content": "why this is failing?\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        x= set(nums)\\n        nums = list(x)\\n        return len(nums)"
                    }
                ]
            },
            {
                "id": 1961019,
                "content": [
                    {
                        "username": "Vithesh",
                        "content": "I mean this question was obviously easy. The thing is how we implement it. I used swapping but swapping was not necessary at all. Just replace the repeating with next unique and greater one. so it took me around 15 min to solve which not good considering a easy problems. But why do people hate this question .I don\\'t know."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "If I remove the for loop, it no longer works, despite the fact that the result it returns having nothing to do with the for loop. \"removeDuplicates=nums=>{\\n    let nums2 = Array.from(new Set(nums))\\n    console.log(nums2)\\n    const len = nums.length;\\n    for(i = 0; i < len - 1; i++) {\\n      if(i > nums.length - 1) {\\n        break;\\n      }\\n      if (nums[i] === nums[i + 1]) {\\n        nums.splice(i, 1);\\n        i--;\\n      }\\n    }\\n    console.log(nums)\\n    console.log(nums2.length)\\n    console.log(nums.length)\\n    return nums2.length\\n}\". If it\\'s so easy why don\\'t explain the question and why my code isn\\'t working?"
                    },
                    {
                        "username": "AmarilloSlim",
                        "content": "Hi everyone!\\n\\nI don\\'t understand, what  i must to return. When i return lenght of removed duplicates array, Leetcode raise error, that he expected to see array like [1,2,3], but when i retern array like [1,2,3] Leetcode raise error that i must return integer. Please explain me, what i must to return.\\nThanx."
                    },
                    {
                        "username": "roman-smal",
                        "content": "you should return a length of the array you\\'ve got. For example for\\nInput: nums = [0,0,1,1,1,2,2,3,3,4]\\nOutput: 5, nums = [0,1,2,3,4,_,_,_,_,_]\\n\\nSo for JS you should return arr.length which is 5, whereas the input array \\'nums\\' should be mutated to [0,1,2,3,4]. I suppose for some other languages it should be changed into [0,1,2,3,4,_,_,_,_,_]. JL"
                    },
                    {
                        "username": "Manviel",
                        "content": "var myArray = [1, 2, 1];\\nlet unique = [...new Set(myArray)];\\n[1, 2]"
                    },
                    {
                        "username": "ozzymoron",
                        "content": "This doesn\\'t work because you created a new array. Requirement is O(1). Spread operator makes it O(n)"
                    },
                    {
                        "username": "tejasparmar1211999",
                        "content": "same issue.\\nvar removeDuplicates = function(nums) {\\n    let res=new Set(nums);\\n    let res1=[...res];\\n    return res1;\\n};\\nnot sure why not working. "
                    },
                    {
                        "username": "rgonzalezp",
                        "content": "I know it actually works on tests cases, but most of the solutions I have seen here just replace the first values of the array and not actually remove duplicates, anyone agrees?"
                    },
                    {
                        "username": "FACEPLANT",
                        "content": "\\tnums[:] = sorted(set(nums))\\n\\treturn len(nums)\\n\\n"
                    },
                    {
                        "username": "alinapenkina00",
                        "content": "Can't understand why my solution is wrong. It returns correct expected result in my IDE, but wrong in LeetCode compiler.\n```   \n     public int removeDuplicates(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        for (int i = 0; i < nums.length; i++) {\n            set.add(nums[I]);\n        }\n        return set.size();\n    }"
                    },
                    {
                        "username": "isydor",
                        "content": "you must remove the duplicates in-place - means changing the nums itself not creating a new variable."
                    },
                    {
                        "username": "madhav_varshney",
                        "content": "Having the same issue"
                    },
                    {
                        "username": "madhav_varshney",
                        "content": "I think there is something wrong with the Leetcode\\'s editor. \\n```\\nvar removeDuplicates = function(nums) {\\n    nums = [...new Set(nums)];\\n    return nums.length;\\n};\\n```\\nThis code giving me correct answer on other online editor but here I am getting wrong answer.\\n\\nAnyone facing same?"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "The question description is not correct, they want you to place the unique elements at the front of the array and place the duplicate ones at the end (no matter in what order). And they want you to return the length of uniquely placed elements only!"
                    },
                    {
                        "username": "Saad03",
                        "content": "\\n      \\nguys can someone tell me where i went wrong. code works fine in jupyter notebook but having errors here\\n\\n\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        nums=set(nums)\\n        nums= list(nums)\\n        return nums\\n"
                    },
                    {
                        "username": "ganesh009",
                        "content": "why this is failing?\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        x= set(nums)\\n        nums = list(x)\\n        return len(nums)"
                    }
                ]
            },
            {
                "id": 1954873,
                "content": [
                    {
                        "username": "Vithesh",
                        "content": "I mean this question was obviously easy. The thing is how we implement it. I used swapping but swapping was not necessary at all. Just replace the repeating with next unique and greater one. so it took me around 15 min to solve which not good considering a easy problems. But why do people hate this question .I don\\'t know."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "If I remove the for loop, it no longer works, despite the fact that the result it returns having nothing to do with the for loop. \"removeDuplicates=nums=>{\\n    let nums2 = Array.from(new Set(nums))\\n    console.log(nums2)\\n    const len = nums.length;\\n    for(i = 0; i < len - 1; i++) {\\n      if(i > nums.length - 1) {\\n        break;\\n      }\\n      if (nums[i] === nums[i + 1]) {\\n        nums.splice(i, 1);\\n        i--;\\n      }\\n    }\\n    console.log(nums)\\n    console.log(nums2.length)\\n    console.log(nums.length)\\n    return nums2.length\\n}\". If it\\'s so easy why don\\'t explain the question and why my code isn\\'t working?"
                    },
                    {
                        "username": "AmarilloSlim",
                        "content": "Hi everyone!\\n\\nI don\\'t understand, what  i must to return. When i return lenght of removed duplicates array, Leetcode raise error, that he expected to see array like [1,2,3], but when i retern array like [1,2,3] Leetcode raise error that i must return integer. Please explain me, what i must to return.\\nThanx."
                    },
                    {
                        "username": "roman-smal",
                        "content": "you should return a length of the array you\\'ve got. For example for\\nInput: nums = [0,0,1,1,1,2,2,3,3,4]\\nOutput: 5, nums = [0,1,2,3,4,_,_,_,_,_]\\n\\nSo for JS you should return arr.length which is 5, whereas the input array \\'nums\\' should be mutated to [0,1,2,3,4]. I suppose for some other languages it should be changed into [0,1,2,3,4,_,_,_,_,_]. JL"
                    },
                    {
                        "username": "Manviel",
                        "content": "var myArray = [1, 2, 1];\\nlet unique = [...new Set(myArray)];\\n[1, 2]"
                    },
                    {
                        "username": "ozzymoron",
                        "content": "This doesn\\'t work because you created a new array. Requirement is O(1). Spread operator makes it O(n)"
                    },
                    {
                        "username": "tejasparmar1211999",
                        "content": "same issue.\\nvar removeDuplicates = function(nums) {\\n    let res=new Set(nums);\\n    let res1=[...res];\\n    return res1;\\n};\\nnot sure why not working. "
                    },
                    {
                        "username": "rgonzalezp",
                        "content": "I know it actually works on tests cases, but most of the solutions I have seen here just replace the first values of the array and not actually remove duplicates, anyone agrees?"
                    },
                    {
                        "username": "FACEPLANT",
                        "content": "\\tnums[:] = sorted(set(nums))\\n\\treturn len(nums)\\n\\n"
                    },
                    {
                        "username": "alinapenkina00",
                        "content": "Can't understand why my solution is wrong. It returns correct expected result in my IDE, but wrong in LeetCode compiler.\n```   \n     public int removeDuplicates(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        for (int i = 0; i < nums.length; i++) {\n            set.add(nums[I]);\n        }\n        return set.size();\n    }"
                    },
                    {
                        "username": "isydor",
                        "content": "you must remove the duplicates in-place - means changing the nums itself not creating a new variable."
                    },
                    {
                        "username": "madhav_varshney",
                        "content": "Having the same issue"
                    },
                    {
                        "username": "madhav_varshney",
                        "content": "I think there is something wrong with the Leetcode\\'s editor. \\n```\\nvar removeDuplicates = function(nums) {\\n    nums = [...new Set(nums)];\\n    return nums.length;\\n};\\n```\\nThis code giving me correct answer on other online editor but here I am getting wrong answer.\\n\\nAnyone facing same?"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "The question description is not correct, they want you to place the unique elements at the front of the array and place the duplicate ones at the end (no matter in what order). And they want you to return the length of uniquely placed elements only!"
                    },
                    {
                        "username": "Saad03",
                        "content": "\\n      \\nguys can someone tell me where i went wrong. code works fine in jupyter notebook but having errors here\\n\\n\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        nums=set(nums)\\n        nums= list(nums)\\n        return nums\\n"
                    },
                    {
                        "username": "ganesh009",
                        "content": "why this is failing?\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        x= set(nums)\\n        nums = list(x)\\n        return len(nums)"
                    }
                ]
            },
            {
                "id": 1925134,
                "content": [
                    {
                        "username": "Vithesh",
                        "content": "I mean this question was obviously easy. The thing is how we implement it. I used swapping but swapping was not necessary at all. Just replace the repeating with next unique and greater one. so it took me around 15 min to solve which not good considering a easy problems. But why do people hate this question .I don\\'t know."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "If I remove the for loop, it no longer works, despite the fact that the result it returns having nothing to do with the for loop. \"removeDuplicates=nums=>{\\n    let nums2 = Array.from(new Set(nums))\\n    console.log(nums2)\\n    const len = nums.length;\\n    for(i = 0; i < len - 1; i++) {\\n      if(i > nums.length - 1) {\\n        break;\\n      }\\n      if (nums[i] === nums[i + 1]) {\\n        nums.splice(i, 1);\\n        i--;\\n      }\\n    }\\n    console.log(nums)\\n    console.log(nums2.length)\\n    console.log(nums.length)\\n    return nums2.length\\n}\". If it\\'s so easy why don\\'t explain the question and why my code isn\\'t working?"
                    },
                    {
                        "username": "AmarilloSlim",
                        "content": "Hi everyone!\\n\\nI don\\'t understand, what  i must to return. When i return lenght of removed duplicates array, Leetcode raise error, that he expected to see array like [1,2,3], but when i retern array like [1,2,3] Leetcode raise error that i must return integer. Please explain me, what i must to return.\\nThanx."
                    },
                    {
                        "username": "roman-smal",
                        "content": "you should return a length of the array you\\'ve got. For example for\\nInput: nums = [0,0,1,1,1,2,2,3,3,4]\\nOutput: 5, nums = [0,1,2,3,4,_,_,_,_,_]\\n\\nSo for JS you should return arr.length which is 5, whereas the input array \\'nums\\' should be mutated to [0,1,2,3,4]. I suppose for some other languages it should be changed into [0,1,2,3,4,_,_,_,_,_]. JL"
                    },
                    {
                        "username": "Manviel",
                        "content": "var myArray = [1, 2, 1];\\nlet unique = [...new Set(myArray)];\\n[1, 2]"
                    },
                    {
                        "username": "ozzymoron",
                        "content": "This doesn\\'t work because you created a new array. Requirement is O(1). Spread operator makes it O(n)"
                    },
                    {
                        "username": "tejasparmar1211999",
                        "content": "same issue.\\nvar removeDuplicates = function(nums) {\\n    let res=new Set(nums);\\n    let res1=[...res];\\n    return res1;\\n};\\nnot sure why not working. "
                    },
                    {
                        "username": "rgonzalezp",
                        "content": "I know it actually works on tests cases, but most of the solutions I have seen here just replace the first values of the array and not actually remove duplicates, anyone agrees?"
                    },
                    {
                        "username": "FACEPLANT",
                        "content": "\\tnums[:] = sorted(set(nums))\\n\\treturn len(nums)\\n\\n"
                    },
                    {
                        "username": "alinapenkina00",
                        "content": "Can't understand why my solution is wrong. It returns correct expected result in my IDE, but wrong in LeetCode compiler.\n```   \n     public int removeDuplicates(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        for (int i = 0; i < nums.length; i++) {\n            set.add(nums[I]);\n        }\n        return set.size();\n    }"
                    },
                    {
                        "username": "isydor",
                        "content": "you must remove the duplicates in-place - means changing the nums itself not creating a new variable."
                    },
                    {
                        "username": "madhav_varshney",
                        "content": "Having the same issue"
                    },
                    {
                        "username": "madhav_varshney",
                        "content": "I think there is something wrong with the Leetcode\\'s editor. \\n```\\nvar removeDuplicates = function(nums) {\\n    nums = [...new Set(nums)];\\n    return nums.length;\\n};\\n```\\nThis code giving me correct answer on other online editor but here I am getting wrong answer.\\n\\nAnyone facing same?"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "The question description is not correct, they want you to place the unique elements at the front of the array and place the duplicate ones at the end (no matter in what order). And they want you to return the length of uniquely placed elements only!"
                    },
                    {
                        "username": "Saad03",
                        "content": "\\n      \\nguys can someone tell me where i went wrong. code works fine in jupyter notebook but having errors here\\n\\n\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        nums=set(nums)\\n        nums= list(nums)\\n        return nums\\n"
                    },
                    {
                        "username": "ganesh009",
                        "content": "why this is failing?\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        x= set(nums)\\n        nums = list(x)\\n        return len(nums)"
                    }
                ]
            },
            {
                "id": 1921026,
                "content": [
                    {
                        "username": "cubo142",
                        "content": "lmao 15k downvote aigh imma head out"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "It works on my IDE."
                    },
                    {
                        "username": "user1751JL",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n       \\n        nums = [0,0,1,1,1,2,2,3,3,4]\\n        nums=set(nums)\\n        nums=list(nums)\\n        nums=sorted(nums)\\n\\n        return len(nums)\\n\\nwhy this is wrong"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "1. You have to modify it in place.\\n2. Why are you using a class?"
                    },
                    {
                        "username": "alphazwest",
                        "content": "Am I the only one that thinks \"non-decreasing order\" is a really strange way to say \"increasing\" or \"ascending\" order?"
                    },
                    {
                        "username": "varunnn_23",
                        "content": "keep in mind no duplicate array can be formed"
                    },
                    {
                        "username": "Aarushi_Jain___",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        a=[]\\n        for i in nums:\\n            if i not in a:\\n                a.append(i)\\n        nums=a.copy()\\n        k=len(nums)\\n        \\n        return k \\n\\nThis code is giving right answer in other compiler but leetcode is not accepting it...can someone please explain why"
                    },
                    {
                        "username": "rasam1102",
                        "content": "Don\\'t use extra arrays/lists\\nMake changes to nu,s itself"
                    },
                    {
                        "username": "rasam1102",
                        "content": "`remove the duplicates in-place such that each unique element appears only once.`\\nAll those having an issue with the solution, they have clearly said that we have to make changes to the passed array i.e. `nums` itself and then just return the len(nums)"
                    },
                    {
                        "username": "ufve0704terry",
                        "content": "Why is this always go wrong?\\nMy program have no problem when I test in my lapto\\n\\nInput nums =[1,1,2]\\nOutput:[1]\\nExpected:[1,2]\\n\\n  int removeDuplicates(vector<int>& nums) {\\n        int count=0;\\n        for(int a=1;a<nums.size();a++)\\n            while(nums[a]==nums[a-1]&&a<nums.size())\\n                nums.erase(nums.begin()+a),count++;\\n        return count;\\n    }\\n\\n"
                    },
                    {
                        "username": "Chenga88",
                        "content": "same for me"
                    },
                    {
                        "username": "tunebaker",
                        "content": "the same result (("
                    },
                    {
                        "username": "ericocarina1987",
                        "content": "var removeDuplicates = function(nums) {\\n    //remove the duplicates\\n\\n    nums = [...new Set(nums)]\\n    console.log(nums)\\n    return nums\\n    //return new arr length and the arr\\n};\\n\\ni wrote these code but it always returns an empty array, can someone tell me why?"
                    },
                    {
                        "username": "jakecatron",
                        "content": "I have the same question. This is was my solutions as well."
                    },
                    {
                        "username": "ericocarina1987",
                        "content": "\\n    arr = [...new Set(nums)]\\n    console.log(arr)\\n    return arr\\n};\\n\\nwhy this is not working , i tried on other console and it return the right value but in leet code it returns a empty array"
                    }
                ]
            },
            {
                "id": 1898524,
                "content": [
                    {
                        "username": "cubo142",
                        "content": "lmao 15k downvote aigh imma head out"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "It works on my IDE."
                    },
                    {
                        "username": "user1751JL",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n       \\n        nums = [0,0,1,1,1,2,2,3,3,4]\\n        nums=set(nums)\\n        nums=list(nums)\\n        nums=sorted(nums)\\n\\n        return len(nums)\\n\\nwhy this is wrong"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "1. You have to modify it in place.\\n2. Why are you using a class?"
                    },
                    {
                        "username": "alphazwest",
                        "content": "Am I the only one that thinks \"non-decreasing order\" is a really strange way to say \"increasing\" or \"ascending\" order?"
                    },
                    {
                        "username": "varunnn_23",
                        "content": "keep in mind no duplicate array can be formed"
                    },
                    {
                        "username": "Aarushi_Jain___",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        a=[]\\n        for i in nums:\\n            if i not in a:\\n                a.append(i)\\n        nums=a.copy()\\n        k=len(nums)\\n        \\n        return k \\n\\nThis code is giving right answer in other compiler but leetcode is not accepting it...can someone please explain why"
                    },
                    {
                        "username": "rasam1102",
                        "content": "Don\\'t use extra arrays/lists\\nMake changes to nu,s itself"
                    },
                    {
                        "username": "rasam1102",
                        "content": "`remove the duplicates in-place such that each unique element appears only once.`\\nAll those having an issue with the solution, they have clearly said that we have to make changes to the passed array i.e. `nums` itself and then just return the len(nums)"
                    },
                    {
                        "username": "ufve0704terry",
                        "content": "Why is this always go wrong?\\nMy program have no problem when I test in my lapto\\n\\nInput nums =[1,1,2]\\nOutput:[1]\\nExpected:[1,2]\\n\\n  int removeDuplicates(vector<int>& nums) {\\n        int count=0;\\n        for(int a=1;a<nums.size();a++)\\n            while(nums[a]==nums[a-1]&&a<nums.size())\\n                nums.erase(nums.begin()+a),count++;\\n        return count;\\n    }\\n\\n"
                    },
                    {
                        "username": "Chenga88",
                        "content": "same for me"
                    },
                    {
                        "username": "tunebaker",
                        "content": "the same result (("
                    },
                    {
                        "username": "ericocarina1987",
                        "content": "var removeDuplicates = function(nums) {\\n    //remove the duplicates\\n\\n    nums = [...new Set(nums)]\\n    console.log(nums)\\n    return nums\\n    //return new arr length and the arr\\n};\\n\\ni wrote these code but it always returns an empty array, can someone tell me why?"
                    },
                    {
                        "username": "jakecatron",
                        "content": "I have the same question. This is was my solutions as well."
                    },
                    {
                        "username": "ericocarina1987",
                        "content": "\\n    arr = [...new Set(nums)]\\n    console.log(arr)\\n    return arr\\n};\\n\\nwhy this is not working , i tried on other console and it return the right value but in leet code it returns a empty array"
                    }
                ]
            },
            {
                "id": 1896297,
                "content": [
                    {
                        "username": "cubo142",
                        "content": "lmao 15k downvote aigh imma head out"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "It works on my IDE."
                    },
                    {
                        "username": "user1751JL",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n       \\n        nums = [0,0,1,1,1,2,2,3,3,4]\\n        nums=set(nums)\\n        nums=list(nums)\\n        nums=sorted(nums)\\n\\n        return len(nums)\\n\\nwhy this is wrong"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "1. You have to modify it in place.\\n2. Why are you using a class?"
                    },
                    {
                        "username": "alphazwest",
                        "content": "Am I the only one that thinks \"non-decreasing order\" is a really strange way to say \"increasing\" or \"ascending\" order?"
                    },
                    {
                        "username": "varunnn_23",
                        "content": "keep in mind no duplicate array can be formed"
                    },
                    {
                        "username": "Aarushi_Jain___",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        a=[]\\n        for i in nums:\\n            if i not in a:\\n                a.append(i)\\n        nums=a.copy()\\n        k=len(nums)\\n        \\n        return k \\n\\nThis code is giving right answer in other compiler but leetcode is not accepting it...can someone please explain why"
                    },
                    {
                        "username": "rasam1102",
                        "content": "Don\\'t use extra arrays/lists\\nMake changes to nu,s itself"
                    },
                    {
                        "username": "rasam1102",
                        "content": "`remove the duplicates in-place such that each unique element appears only once.`\\nAll those having an issue with the solution, they have clearly said that we have to make changes to the passed array i.e. `nums` itself and then just return the len(nums)"
                    },
                    {
                        "username": "ufve0704terry",
                        "content": "Why is this always go wrong?\\nMy program have no problem when I test in my lapto\\n\\nInput nums =[1,1,2]\\nOutput:[1]\\nExpected:[1,2]\\n\\n  int removeDuplicates(vector<int>& nums) {\\n        int count=0;\\n        for(int a=1;a<nums.size();a++)\\n            while(nums[a]==nums[a-1]&&a<nums.size())\\n                nums.erase(nums.begin()+a),count++;\\n        return count;\\n    }\\n\\n"
                    },
                    {
                        "username": "Chenga88",
                        "content": "same for me"
                    },
                    {
                        "username": "tunebaker",
                        "content": "the same result (("
                    },
                    {
                        "username": "ericocarina1987",
                        "content": "var removeDuplicates = function(nums) {\\n    //remove the duplicates\\n\\n    nums = [...new Set(nums)]\\n    console.log(nums)\\n    return nums\\n    //return new arr length and the arr\\n};\\n\\ni wrote these code but it always returns an empty array, can someone tell me why?"
                    },
                    {
                        "username": "jakecatron",
                        "content": "I have the same question. This is was my solutions as well."
                    },
                    {
                        "username": "ericocarina1987",
                        "content": "\\n    arr = [...new Set(nums)]\\n    console.log(arr)\\n    return arr\\n};\\n\\nwhy this is not working , i tried on other console and it return the right value but in leet code it returns a empty array"
                    }
                ]
            },
            {
                "id": 1872980,
                "content": [
                    {
                        "username": "cubo142",
                        "content": "lmao 15k downvote aigh imma head out"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "It works on my IDE."
                    },
                    {
                        "username": "user1751JL",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n       \\n        nums = [0,0,1,1,1,2,2,3,3,4]\\n        nums=set(nums)\\n        nums=list(nums)\\n        nums=sorted(nums)\\n\\n        return len(nums)\\n\\nwhy this is wrong"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "1. You have to modify it in place.\\n2. Why are you using a class?"
                    },
                    {
                        "username": "alphazwest",
                        "content": "Am I the only one that thinks \"non-decreasing order\" is a really strange way to say \"increasing\" or \"ascending\" order?"
                    },
                    {
                        "username": "varunnn_23",
                        "content": "keep in mind no duplicate array can be formed"
                    },
                    {
                        "username": "Aarushi_Jain___",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        a=[]\\n        for i in nums:\\n            if i not in a:\\n                a.append(i)\\n        nums=a.copy()\\n        k=len(nums)\\n        \\n        return k \\n\\nThis code is giving right answer in other compiler but leetcode is not accepting it...can someone please explain why"
                    },
                    {
                        "username": "rasam1102",
                        "content": "Don\\'t use extra arrays/lists\\nMake changes to nu,s itself"
                    },
                    {
                        "username": "rasam1102",
                        "content": "`remove the duplicates in-place such that each unique element appears only once.`\\nAll those having an issue with the solution, they have clearly said that we have to make changes to the passed array i.e. `nums` itself and then just return the len(nums)"
                    },
                    {
                        "username": "ufve0704terry",
                        "content": "Why is this always go wrong?\\nMy program have no problem when I test in my lapto\\n\\nInput nums =[1,1,2]\\nOutput:[1]\\nExpected:[1,2]\\n\\n  int removeDuplicates(vector<int>& nums) {\\n        int count=0;\\n        for(int a=1;a<nums.size();a++)\\n            while(nums[a]==nums[a-1]&&a<nums.size())\\n                nums.erase(nums.begin()+a),count++;\\n        return count;\\n    }\\n\\n"
                    },
                    {
                        "username": "Chenga88",
                        "content": "same for me"
                    },
                    {
                        "username": "tunebaker",
                        "content": "the same result (("
                    },
                    {
                        "username": "ericocarina1987",
                        "content": "var removeDuplicates = function(nums) {\\n    //remove the duplicates\\n\\n    nums = [...new Set(nums)]\\n    console.log(nums)\\n    return nums\\n    //return new arr length and the arr\\n};\\n\\ni wrote these code but it always returns an empty array, can someone tell me why?"
                    },
                    {
                        "username": "jakecatron",
                        "content": "I have the same question. This is was my solutions as well."
                    },
                    {
                        "username": "ericocarina1987",
                        "content": "\\n    arr = [...new Set(nums)]\\n    console.log(arr)\\n    return arr\\n};\\n\\nwhy this is not working , i tried on other console and it return the right value but in leet code it returns a empty array"
                    }
                ]
            },
            {
                "id": 1865447,
                "content": [
                    {
                        "username": "cubo142",
                        "content": "lmao 15k downvote aigh imma head out"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "It works on my IDE."
                    },
                    {
                        "username": "user1751JL",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n       \\n        nums = [0,0,1,1,1,2,2,3,3,4]\\n        nums=set(nums)\\n        nums=list(nums)\\n        nums=sorted(nums)\\n\\n        return len(nums)\\n\\nwhy this is wrong"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "1. You have to modify it in place.\\n2. Why are you using a class?"
                    },
                    {
                        "username": "alphazwest",
                        "content": "Am I the only one that thinks \"non-decreasing order\" is a really strange way to say \"increasing\" or \"ascending\" order?"
                    },
                    {
                        "username": "varunnn_23",
                        "content": "keep in mind no duplicate array can be formed"
                    },
                    {
                        "username": "Aarushi_Jain___",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        a=[]\\n        for i in nums:\\n            if i not in a:\\n                a.append(i)\\n        nums=a.copy()\\n        k=len(nums)\\n        \\n        return k \\n\\nThis code is giving right answer in other compiler but leetcode is not accepting it...can someone please explain why"
                    },
                    {
                        "username": "rasam1102",
                        "content": "Don\\'t use extra arrays/lists\\nMake changes to nu,s itself"
                    },
                    {
                        "username": "rasam1102",
                        "content": "`remove the duplicates in-place such that each unique element appears only once.`\\nAll those having an issue with the solution, they have clearly said that we have to make changes to the passed array i.e. `nums` itself and then just return the len(nums)"
                    },
                    {
                        "username": "ufve0704terry",
                        "content": "Why is this always go wrong?\\nMy program have no problem when I test in my lapto\\n\\nInput nums =[1,1,2]\\nOutput:[1]\\nExpected:[1,2]\\n\\n  int removeDuplicates(vector<int>& nums) {\\n        int count=0;\\n        for(int a=1;a<nums.size();a++)\\n            while(nums[a]==nums[a-1]&&a<nums.size())\\n                nums.erase(nums.begin()+a),count++;\\n        return count;\\n    }\\n\\n"
                    },
                    {
                        "username": "Chenga88",
                        "content": "same for me"
                    },
                    {
                        "username": "tunebaker",
                        "content": "the same result (("
                    },
                    {
                        "username": "ericocarina1987",
                        "content": "var removeDuplicates = function(nums) {\\n    //remove the duplicates\\n\\n    nums = [...new Set(nums)]\\n    console.log(nums)\\n    return nums\\n    //return new arr length and the arr\\n};\\n\\ni wrote these code but it always returns an empty array, can someone tell me why?"
                    },
                    {
                        "username": "jakecatron",
                        "content": "I have the same question. This is was my solutions as well."
                    },
                    {
                        "username": "ericocarina1987",
                        "content": "\\n    arr = [...new Set(nums)]\\n    console.log(arr)\\n    return arr\\n};\\n\\nwhy this is not working , i tried on other console and it return the right value but in leet code it returns a empty array"
                    }
                ]
            },
            {
                "id": 1865315,
                "content": [
                    {
                        "username": "cubo142",
                        "content": "lmao 15k downvote aigh imma head out"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "It works on my IDE."
                    },
                    {
                        "username": "user1751JL",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n       \\n        nums = [0,0,1,1,1,2,2,3,3,4]\\n        nums=set(nums)\\n        nums=list(nums)\\n        nums=sorted(nums)\\n\\n        return len(nums)\\n\\nwhy this is wrong"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "1. You have to modify it in place.\\n2. Why are you using a class?"
                    },
                    {
                        "username": "alphazwest",
                        "content": "Am I the only one that thinks \"non-decreasing order\" is a really strange way to say \"increasing\" or \"ascending\" order?"
                    },
                    {
                        "username": "varunnn_23",
                        "content": "keep in mind no duplicate array can be formed"
                    },
                    {
                        "username": "Aarushi_Jain___",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        a=[]\\n        for i in nums:\\n            if i not in a:\\n                a.append(i)\\n        nums=a.copy()\\n        k=len(nums)\\n        \\n        return k \\n\\nThis code is giving right answer in other compiler but leetcode is not accepting it...can someone please explain why"
                    },
                    {
                        "username": "rasam1102",
                        "content": "Don\\'t use extra arrays/lists\\nMake changes to nu,s itself"
                    },
                    {
                        "username": "rasam1102",
                        "content": "`remove the duplicates in-place such that each unique element appears only once.`\\nAll those having an issue with the solution, they have clearly said that we have to make changes to the passed array i.e. `nums` itself and then just return the len(nums)"
                    },
                    {
                        "username": "ufve0704terry",
                        "content": "Why is this always go wrong?\\nMy program have no problem when I test in my lapto\\n\\nInput nums =[1,1,2]\\nOutput:[1]\\nExpected:[1,2]\\n\\n  int removeDuplicates(vector<int>& nums) {\\n        int count=0;\\n        for(int a=1;a<nums.size();a++)\\n            while(nums[a]==nums[a-1]&&a<nums.size())\\n                nums.erase(nums.begin()+a),count++;\\n        return count;\\n    }\\n\\n"
                    },
                    {
                        "username": "Chenga88",
                        "content": "same for me"
                    },
                    {
                        "username": "tunebaker",
                        "content": "the same result (("
                    },
                    {
                        "username": "ericocarina1987",
                        "content": "var removeDuplicates = function(nums) {\\n    //remove the duplicates\\n\\n    nums = [...new Set(nums)]\\n    console.log(nums)\\n    return nums\\n    //return new arr length and the arr\\n};\\n\\ni wrote these code but it always returns an empty array, can someone tell me why?"
                    },
                    {
                        "username": "jakecatron",
                        "content": "I have the same question. This is was my solutions as well."
                    },
                    {
                        "username": "ericocarina1987",
                        "content": "\\n    arr = [...new Set(nums)]\\n    console.log(arr)\\n    return arr\\n};\\n\\nwhy this is not working , i tried on other console and it return the right value but in leet code it returns a empty array"
                    }
                ]
            },
            {
                "id": 1862334,
                "content": [
                    {
                        "username": "cubo142",
                        "content": "lmao 15k downvote aigh imma head out"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "It works on my IDE."
                    },
                    {
                        "username": "user1751JL",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n       \\n        nums = [0,0,1,1,1,2,2,3,3,4]\\n        nums=set(nums)\\n        nums=list(nums)\\n        nums=sorted(nums)\\n\\n        return len(nums)\\n\\nwhy this is wrong"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "1. You have to modify it in place.\\n2. Why are you using a class?"
                    },
                    {
                        "username": "alphazwest",
                        "content": "Am I the only one that thinks \"non-decreasing order\" is a really strange way to say \"increasing\" or \"ascending\" order?"
                    },
                    {
                        "username": "varunnn_23",
                        "content": "keep in mind no duplicate array can be formed"
                    },
                    {
                        "username": "Aarushi_Jain___",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        a=[]\\n        for i in nums:\\n            if i not in a:\\n                a.append(i)\\n        nums=a.copy()\\n        k=len(nums)\\n        \\n        return k \\n\\nThis code is giving right answer in other compiler but leetcode is not accepting it...can someone please explain why"
                    },
                    {
                        "username": "rasam1102",
                        "content": "Don\\'t use extra arrays/lists\\nMake changes to nu,s itself"
                    },
                    {
                        "username": "rasam1102",
                        "content": "`remove the duplicates in-place such that each unique element appears only once.`\\nAll those having an issue with the solution, they have clearly said that we have to make changes to the passed array i.e. `nums` itself and then just return the len(nums)"
                    },
                    {
                        "username": "ufve0704terry",
                        "content": "Why is this always go wrong?\\nMy program have no problem when I test in my lapto\\n\\nInput nums =[1,1,2]\\nOutput:[1]\\nExpected:[1,2]\\n\\n  int removeDuplicates(vector<int>& nums) {\\n        int count=0;\\n        for(int a=1;a<nums.size();a++)\\n            while(nums[a]==nums[a-1]&&a<nums.size())\\n                nums.erase(nums.begin()+a),count++;\\n        return count;\\n    }\\n\\n"
                    },
                    {
                        "username": "Chenga88",
                        "content": "same for me"
                    },
                    {
                        "username": "tunebaker",
                        "content": "the same result (("
                    },
                    {
                        "username": "ericocarina1987",
                        "content": "var removeDuplicates = function(nums) {\\n    //remove the duplicates\\n\\n    nums = [...new Set(nums)]\\n    console.log(nums)\\n    return nums\\n    //return new arr length and the arr\\n};\\n\\ni wrote these code but it always returns an empty array, can someone tell me why?"
                    },
                    {
                        "username": "jakecatron",
                        "content": "I have the same question. This is was my solutions as well."
                    },
                    {
                        "username": "ericocarina1987",
                        "content": "\\n    arr = [...new Set(nums)]\\n    console.log(arr)\\n    return arr\\n};\\n\\nwhy this is not working , i tried on other console and it return the right value but in leet code it returns a empty array"
                    }
                ]
            },
            {
                "id": 1830708,
                "content": [
                    {
                        "username": "cubo142",
                        "content": "lmao 15k downvote aigh imma head out"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "It works on my IDE."
                    },
                    {
                        "username": "user1751JL",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n       \\n        nums = [0,0,1,1,1,2,2,3,3,4]\\n        nums=set(nums)\\n        nums=list(nums)\\n        nums=sorted(nums)\\n\\n        return len(nums)\\n\\nwhy this is wrong"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "1. You have to modify it in place.\\n2. Why are you using a class?"
                    },
                    {
                        "username": "alphazwest",
                        "content": "Am I the only one that thinks \"non-decreasing order\" is a really strange way to say \"increasing\" or \"ascending\" order?"
                    },
                    {
                        "username": "varunnn_23",
                        "content": "keep in mind no duplicate array can be formed"
                    },
                    {
                        "username": "Aarushi_Jain___",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        a=[]\\n        for i in nums:\\n            if i not in a:\\n                a.append(i)\\n        nums=a.copy()\\n        k=len(nums)\\n        \\n        return k \\n\\nThis code is giving right answer in other compiler but leetcode is not accepting it...can someone please explain why"
                    },
                    {
                        "username": "rasam1102",
                        "content": "Don\\'t use extra arrays/lists\\nMake changes to nu,s itself"
                    },
                    {
                        "username": "rasam1102",
                        "content": "`remove the duplicates in-place such that each unique element appears only once.`\\nAll those having an issue with the solution, they have clearly said that we have to make changes to the passed array i.e. `nums` itself and then just return the len(nums)"
                    },
                    {
                        "username": "ufve0704terry",
                        "content": "Why is this always go wrong?\\nMy program have no problem when I test in my lapto\\n\\nInput nums =[1,1,2]\\nOutput:[1]\\nExpected:[1,2]\\n\\n  int removeDuplicates(vector<int>& nums) {\\n        int count=0;\\n        for(int a=1;a<nums.size();a++)\\n            while(nums[a]==nums[a-1]&&a<nums.size())\\n                nums.erase(nums.begin()+a),count++;\\n        return count;\\n    }\\n\\n"
                    },
                    {
                        "username": "Chenga88",
                        "content": "same for me"
                    },
                    {
                        "username": "tunebaker",
                        "content": "the same result (("
                    },
                    {
                        "username": "ericocarina1987",
                        "content": "var removeDuplicates = function(nums) {\\n    //remove the duplicates\\n\\n    nums = [...new Set(nums)]\\n    console.log(nums)\\n    return nums\\n    //return new arr length and the arr\\n};\\n\\ni wrote these code but it always returns an empty array, can someone tell me why?"
                    },
                    {
                        "username": "jakecatron",
                        "content": "I have the same question. This is was my solutions as well."
                    },
                    {
                        "username": "ericocarina1987",
                        "content": "\\n    arr = [...new Set(nums)]\\n    console.log(arr)\\n    return arr\\n};\\n\\nwhy this is not working , i tried on other console and it return the right value but in leet code it returns a empty array"
                    }
                ]
            },
            {
                "id": 1827130,
                "content": [
                    {
                        "username": "cubo142",
                        "content": "lmao 15k downvote aigh imma head out"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "It works on my IDE."
                    },
                    {
                        "username": "user1751JL",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n       \\n        nums = [0,0,1,1,1,2,2,3,3,4]\\n        nums=set(nums)\\n        nums=list(nums)\\n        nums=sorted(nums)\\n\\n        return len(nums)\\n\\nwhy this is wrong"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "1. You have to modify it in place.\\n2. Why are you using a class?"
                    },
                    {
                        "username": "alphazwest",
                        "content": "Am I the only one that thinks \"non-decreasing order\" is a really strange way to say \"increasing\" or \"ascending\" order?"
                    },
                    {
                        "username": "varunnn_23",
                        "content": "keep in mind no duplicate array can be formed"
                    },
                    {
                        "username": "Aarushi_Jain___",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        a=[]\\n        for i in nums:\\n            if i not in a:\\n                a.append(i)\\n        nums=a.copy()\\n        k=len(nums)\\n        \\n        return k \\n\\nThis code is giving right answer in other compiler but leetcode is not accepting it...can someone please explain why"
                    },
                    {
                        "username": "rasam1102",
                        "content": "Don\\'t use extra arrays/lists\\nMake changes to nu,s itself"
                    },
                    {
                        "username": "rasam1102",
                        "content": "`remove the duplicates in-place such that each unique element appears only once.`\\nAll those having an issue with the solution, they have clearly said that we have to make changes to the passed array i.e. `nums` itself and then just return the len(nums)"
                    },
                    {
                        "username": "ufve0704terry",
                        "content": "Why is this always go wrong?\\nMy program have no problem when I test in my lapto\\n\\nInput nums =[1,1,2]\\nOutput:[1]\\nExpected:[1,2]\\n\\n  int removeDuplicates(vector<int>& nums) {\\n        int count=0;\\n        for(int a=1;a<nums.size();a++)\\n            while(nums[a]==nums[a-1]&&a<nums.size())\\n                nums.erase(nums.begin()+a),count++;\\n        return count;\\n    }\\n\\n"
                    },
                    {
                        "username": "Chenga88",
                        "content": "same for me"
                    },
                    {
                        "username": "tunebaker",
                        "content": "the same result (("
                    },
                    {
                        "username": "ericocarina1987",
                        "content": "var removeDuplicates = function(nums) {\\n    //remove the duplicates\\n\\n    nums = [...new Set(nums)]\\n    console.log(nums)\\n    return nums\\n    //return new arr length and the arr\\n};\\n\\ni wrote these code but it always returns an empty array, can someone tell me why?"
                    },
                    {
                        "username": "jakecatron",
                        "content": "I have the same question. This is was my solutions as well."
                    },
                    {
                        "username": "ericocarina1987",
                        "content": "\\n    arr = [...new Set(nums)]\\n    console.log(arr)\\n    return arr\\n};\\n\\nwhy this is not working , i tried on other console and it return the right value but in leet code it returns a empty array"
                    }
                ]
            },
            {
                "id": 1827119,
                "content": [
                    {
                        "username": "cubo142",
                        "content": "lmao 15k downvote aigh imma head out"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "It works on my IDE."
                    },
                    {
                        "username": "user1751JL",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n       \\n        nums = [0,0,1,1,1,2,2,3,3,4]\\n        nums=set(nums)\\n        nums=list(nums)\\n        nums=sorted(nums)\\n\\n        return len(nums)\\n\\nwhy this is wrong"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "1. You have to modify it in place.\\n2. Why are you using a class?"
                    },
                    {
                        "username": "alphazwest",
                        "content": "Am I the only one that thinks \"non-decreasing order\" is a really strange way to say \"increasing\" or \"ascending\" order?"
                    },
                    {
                        "username": "varunnn_23",
                        "content": "keep in mind no duplicate array can be formed"
                    },
                    {
                        "username": "Aarushi_Jain___",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        a=[]\\n        for i in nums:\\n            if i not in a:\\n                a.append(i)\\n        nums=a.copy()\\n        k=len(nums)\\n        \\n        return k \\n\\nThis code is giving right answer in other compiler but leetcode is not accepting it...can someone please explain why"
                    },
                    {
                        "username": "rasam1102",
                        "content": "Don\\'t use extra arrays/lists\\nMake changes to nu,s itself"
                    },
                    {
                        "username": "rasam1102",
                        "content": "`remove the duplicates in-place such that each unique element appears only once.`\\nAll those having an issue with the solution, they have clearly said that we have to make changes to the passed array i.e. `nums` itself and then just return the len(nums)"
                    },
                    {
                        "username": "ufve0704terry",
                        "content": "Why is this always go wrong?\\nMy program have no problem when I test in my lapto\\n\\nInput nums =[1,1,2]\\nOutput:[1]\\nExpected:[1,2]\\n\\n  int removeDuplicates(vector<int>& nums) {\\n        int count=0;\\n        for(int a=1;a<nums.size();a++)\\n            while(nums[a]==nums[a-1]&&a<nums.size())\\n                nums.erase(nums.begin()+a),count++;\\n        return count;\\n    }\\n\\n"
                    },
                    {
                        "username": "Chenga88",
                        "content": "same for me"
                    },
                    {
                        "username": "tunebaker",
                        "content": "the same result (("
                    },
                    {
                        "username": "ericocarina1987",
                        "content": "var removeDuplicates = function(nums) {\\n    //remove the duplicates\\n\\n    nums = [...new Set(nums)]\\n    console.log(nums)\\n    return nums\\n    //return new arr length and the arr\\n};\\n\\ni wrote these code but it always returns an empty array, can someone tell me why?"
                    },
                    {
                        "username": "jakecatron",
                        "content": "I have the same question. This is was my solutions as well."
                    },
                    {
                        "username": "ericocarina1987",
                        "content": "\\n    arr = [...new Set(nums)]\\n    console.log(arr)\\n    return arr\\n};\\n\\nwhy this is not working , i tried on other console and it return the right value but in leet code it returns a empty array"
                    }
                ]
            },
            {
                "id": 1799999,
                "content": [
                    {
                        "username": "toygrr",
                        "content": "I tried solving this using the new Set method to remove duplicate keys, and then convert that into an array.  This does not work for what ever reason, but in my IDE it pops out a correct solution.\\n\\nDoes this have something to do with the version of JavaScript that leetcode uses?"
                    },
                    {
                        "username": "toygrr",
                        "content": "[@idklol8](/idklol8) I see, I\\'ll try a different approach, thanks!"
                    },
                    {
                        "username": "idklol8",
                        "content": "They want you to remove the duplicates from within the array without creating a new array. They\\'re checking the array that was passed into the RemoveDuplicates method for the results."
                    },
                    {
                        "username": "samrocksc",
                        "content": "Modifying a param in Javascript is probably the worst thing you could do in production..."
                    },
                    {
                        "username": "the_coder_8297",
                        "content": "Why the test case [1] is giving me Run Time Error.\\nMy code is as follows\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int n = nums.size();\\n        int i = 0,j = 0;\\n        while(j < n){\\n            nums[i++] = nums[j];\\n            while(j < n && nums[j] == nums[j+1]) j++;\\n            j++;\\n        }\\n        return i;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "yannicklescure",
                        "content": "This problem is completely bugged from the instructions to the run! \\uD83E\\uDD2E\\nJavascript doesn\\'t accept the return !!! WTF"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "The thing is that you need to mutate the original array instead of returning the new one. This is the most tricky part that creates confusion in this task. And the return has to be just the number until which tests should check the original array that was provided as an input. I hope that helps "
                    },
                    {
                        "username": "deezyto",
                        "content": "You can run a loop and if the number is repeated, remove it from the array using the splice method, then do i-- (not the best js solution but it works);"
                    },
                    {
                        "username": "Preposterone",
                        "content": "I hated this problem."
                    },
                    {
                        "username": "nmehrotra",
                        "content": "Why this question has so many dislikes ? Almost double the likes ."
                    },
                    {
                        "username": "mrpiggy97",
                        "content": "my guess is that the description is way too complicated for what it really asks"
                    },
                    {
                        "username": "dball1126",
                        "content": "Someone from Leetcode needs to fix this problem, the test cases are broken in Ruby\\nRemove Duplicates from Sorted Array\\n\\nSubmission Detail\\n0 / 161 test cases passed.\\nStatus: Runtime Error\\nSubmitted: 1 minute ago\\nRuntime Error Message:\\nLine 55: no implicit conversion of Integer into Array (TypeError) in serializer__.rb (-)\\nLast executed input:\\n[1,1,2]\\nSubmitted Code: 1 minute ago\\n\\nLanguage: ruby  Edit Code  \\n\\n\\nMy code is correct, not to mention the method doesn\\'t even run with just returning NUMS"
                    },
                    {
                        "username": "kymed",
                        "content": "Like they don\\'t actually ever delete an element?? But it says delete in place??"
                    },
                    {
                        "username": "hrneet",
                        "content": "return [...new Set(nums)].length;"
                    },
                    {
                        "username": "yorkshire",
                        "content": "Even though the question requies that the changes are in-place, the judge does not check this (in Python).\\n\\nI can move the unique elements to the front, then append random numbers to the array (actually a list) or delete the junk at the end and it doesn\\'t matter. The judge only checks the array up to the required length.\\n\\nIf there is a requirement in the question, it should be tested in the judge!"
                    }
                ]
            },
            {
                "id": 1750886,
                "content": [
                    {
                        "username": "toygrr",
                        "content": "I tried solving this using the new Set method to remove duplicate keys, and then convert that into an array.  This does not work for what ever reason, but in my IDE it pops out a correct solution.\\n\\nDoes this have something to do with the version of JavaScript that leetcode uses?"
                    },
                    {
                        "username": "toygrr",
                        "content": "[@idklol8](/idklol8) I see, I\\'ll try a different approach, thanks!"
                    },
                    {
                        "username": "idklol8",
                        "content": "They want you to remove the duplicates from within the array without creating a new array. They\\'re checking the array that was passed into the RemoveDuplicates method for the results."
                    },
                    {
                        "username": "samrocksc",
                        "content": "Modifying a param in Javascript is probably the worst thing you could do in production..."
                    },
                    {
                        "username": "the_coder_8297",
                        "content": "Why the test case [1] is giving me Run Time Error.\\nMy code is as follows\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int n = nums.size();\\n        int i = 0,j = 0;\\n        while(j < n){\\n            nums[i++] = nums[j];\\n            while(j < n && nums[j] == nums[j+1]) j++;\\n            j++;\\n        }\\n        return i;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "yannicklescure",
                        "content": "This problem is completely bugged from the instructions to the run! \\uD83E\\uDD2E\\nJavascript doesn\\'t accept the return !!! WTF"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "The thing is that you need to mutate the original array instead of returning the new one. This is the most tricky part that creates confusion in this task. And the return has to be just the number until which tests should check the original array that was provided as an input. I hope that helps "
                    },
                    {
                        "username": "deezyto",
                        "content": "You can run a loop and if the number is repeated, remove it from the array using the splice method, then do i-- (not the best js solution but it works);"
                    },
                    {
                        "username": "Preposterone",
                        "content": "I hated this problem."
                    },
                    {
                        "username": "nmehrotra",
                        "content": "Why this question has so many dislikes ? Almost double the likes ."
                    },
                    {
                        "username": "mrpiggy97",
                        "content": "my guess is that the description is way too complicated for what it really asks"
                    },
                    {
                        "username": "dball1126",
                        "content": "Someone from Leetcode needs to fix this problem, the test cases are broken in Ruby\\nRemove Duplicates from Sorted Array\\n\\nSubmission Detail\\n0 / 161 test cases passed.\\nStatus: Runtime Error\\nSubmitted: 1 minute ago\\nRuntime Error Message:\\nLine 55: no implicit conversion of Integer into Array (TypeError) in serializer__.rb (-)\\nLast executed input:\\n[1,1,2]\\nSubmitted Code: 1 minute ago\\n\\nLanguage: ruby  Edit Code  \\n\\n\\nMy code is correct, not to mention the method doesn\\'t even run with just returning NUMS"
                    },
                    {
                        "username": "kymed",
                        "content": "Like they don\\'t actually ever delete an element?? But it says delete in place??"
                    },
                    {
                        "username": "hrneet",
                        "content": "return [...new Set(nums)].length;"
                    },
                    {
                        "username": "yorkshire",
                        "content": "Even though the question requies that the changes are in-place, the judge does not check this (in Python).\\n\\nI can move the unique elements to the front, then append random numbers to the array (actually a list) or delete the junk at the end and it doesn\\'t matter. The judge only checks the array up to the required length.\\n\\nIf there is a requirement in the question, it should be tested in the judge!"
                    }
                ]
            },
            {
                "id": 1749407,
                "content": [
                    {
                        "username": "toygrr",
                        "content": "I tried solving this using the new Set method to remove duplicate keys, and then convert that into an array.  This does not work for what ever reason, but in my IDE it pops out a correct solution.\\n\\nDoes this have something to do with the version of JavaScript that leetcode uses?"
                    },
                    {
                        "username": "toygrr",
                        "content": "[@idklol8](/idklol8) I see, I\\'ll try a different approach, thanks!"
                    },
                    {
                        "username": "idklol8",
                        "content": "They want you to remove the duplicates from within the array without creating a new array. They\\'re checking the array that was passed into the RemoveDuplicates method for the results."
                    },
                    {
                        "username": "samrocksc",
                        "content": "Modifying a param in Javascript is probably the worst thing you could do in production..."
                    },
                    {
                        "username": "the_coder_8297",
                        "content": "Why the test case [1] is giving me Run Time Error.\\nMy code is as follows\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int n = nums.size();\\n        int i = 0,j = 0;\\n        while(j < n){\\n            nums[i++] = nums[j];\\n            while(j < n && nums[j] == nums[j+1]) j++;\\n            j++;\\n        }\\n        return i;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "yannicklescure",
                        "content": "This problem is completely bugged from the instructions to the run! \\uD83E\\uDD2E\\nJavascript doesn\\'t accept the return !!! WTF"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "The thing is that you need to mutate the original array instead of returning the new one. This is the most tricky part that creates confusion in this task. And the return has to be just the number until which tests should check the original array that was provided as an input. I hope that helps "
                    },
                    {
                        "username": "deezyto",
                        "content": "You can run a loop and if the number is repeated, remove it from the array using the splice method, then do i-- (not the best js solution but it works);"
                    },
                    {
                        "username": "Preposterone",
                        "content": "I hated this problem."
                    },
                    {
                        "username": "nmehrotra",
                        "content": "Why this question has so many dislikes ? Almost double the likes ."
                    },
                    {
                        "username": "mrpiggy97",
                        "content": "my guess is that the description is way too complicated for what it really asks"
                    },
                    {
                        "username": "dball1126",
                        "content": "Someone from Leetcode needs to fix this problem, the test cases are broken in Ruby\\nRemove Duplicates from Sorted Array\\n\\nSubmission Detail\\n0 / 161 test cases passed.\\nStatus: Runtime Error\\nSubmitted: 1 minute ago\\nRuntime Error Message:\\nLine 55: no implicit conversion of Integer into Array (TypeError) in serializer__.rb (-)\\nLast executed input:\\n[1,1,2]\\nSubmitted Code: 1 minute ago\\n\\nLanguage: ruby  Edit Code  \\n\\n\\nMy code is correct, not to mention the method doesn\\'t even run with just returning NUMS"
                    },
                    {
                        "username": "kymed",
                        "content": "Like they don\\'t actually ever delete an element?? But it says delete in place??"
                    },
                    {
                        "username": "hrneet",
                        "content": "return [...new Set(nums)].length;"
                    },
                    {
                        "username": "yorkshire",
                        "content": "Even though the question requies that the changes are in-place, the judge does not check this (in Python).\\n\\nI can move the unique elements to the front, then append random numbers to the array (actually a list) or delete the junk at the end and it doesn\\'t matter. The judge only checks the array up to the required length.\\n\\nIf there is a requirement in the question, it should be tested in the judge!"
                    }
                ]
            },
            {
                "id": 1742039,
                "content": [
                    {
                        "username": "toygrr",
                        "content": "I tried solving this using the new Set method to remove duplicate keys, and then convert that into an array.  This does not work for what ever reason, but in my IDE it pops out a correct solution.\\n\\nDoes this have something to do with the version of JavaScript that leetcode uses?"
                    },
                    {
                        "username": "toygrr",
                        "content": "[@idklol8](/idklol8) I see, I\\'ll try a different approach, thanks!"
                    },
                    {
                        "username": "idklol8",
                        "content": "They want you to remove the duplicates from within the array without creating a new array. They\\'re checking the array that was passed into the RemoveDuplicates method for the results."
                    },
                    {
                        "username": "samrocksc",
                        "content": "Modifying a param in Javascript is probably the worst thing you could do in production..."
                    },
                    {
                        "username": "the_coder_8297",
                        "content": "Why the test case [1] is giving me Run Time Error.\\nMy code is as follows\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int n = nums.size();\\n        int i = 0,j = 0;\\n        while(j < n){\\n            nums[i++] = nums[j];\\n            while(j < n && nums[j] == nums[j+1]) j++;\\n            j++;\\n        }\\n        return i;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "yannicklescure",
                        "content": "This problem is completely bugged from the instructions to the run! \\uD83E\\uDD2E\\nJavascript doesn\\'t accept the return !!! WTF"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "The thing is that you need to mutate the original array instead of returning the new one. This is the most tricky part that creates confusion in this task. And the return has to be just the number until which tests should check the original array that was provided as an input. I hope that helps "
                    },
                    {
                        "username": "deezyto",
                        "content": "You can run a loop and if the number is repeated, remove it from the array using the splice method, then do i-- (not the best js solution but it works);"
                    },
                    {
                        "username": "Preposterone",
                        "content": "I hated this problem."
                    },
                    {
                        "username": "nmehrotra",
                        "content": "Why this question has so many dislikes ? Almost double the likes ."
                    },
                    {
                        "username": "mrpiggy97",
                        "content": "my guess is that the description is way too complicated for what it really asks"
                    },
                    {
                        "username": "dball1126",
                        "content": "Someone from Leetcode needs to fix this problem, the test cases are broken in Ruby\\nRemove Duplicates from Sorted Array\\n\\nSubmission Detail\\n0 / 161 test cases passed.\\nStatus: Runtime Error\\nSubmitted: 1 minute ago\\nRuntime Error Message:\\nLine 55: no implicit conversion of Integer into Array (TypeError) in serializer__.rb (-)\\nLast executed input:\\n[1,1,2]\\nSubmitted Code: 1 minute ago\\n\\nLanguage: ruby  Edit Code  \\n\\n\\nMy code is correct, not to mention the method doesn\\'t even run with just returning NUMS"
                    },
                    {
                        "username": "kymed",
                        "content": "Like they don\\'t actually ever delete an element?? But it says delete in place??"
                    },
                    {
                        "username": "hrneet",
                        "content": "return [...new Set(nums)].length;"
                    },
                    {
                        "username": "yorkshire",
                        "content": "Even though the question requies that the changes are in-place, the judge does not check this (in Python).\\n\\nI can move the unique elements to the front, then append random numbers to the array (actually a list) or delete the junk at the end and it doesn\\'t matter. The judge only checks the array up to the required length.\\n\\nIf there is a requirement in the question, it should be tested in the judge!"
                    }
                ]
            },
            {
                "id": 1740931,
                "content": [
                    {
                        "username": "toygrr",
                        "content": "I tried solving this using the new Set method to remove duplicate keys, and then convert that into an array.  This does not work for what ever reason, but in my IDE it pops out a correct solution.\\n\\nDoes this have something to do with the version of JavaScript that leetcode uses?"
                    },
                    {
                        "username": "toygrr",
                        "content": "[@idklol8](/idklol8) I see, I\\'ll try a different approach, thanks!"
                    },
                    {
                        "username": "idklol8",
                        "content": "They want you to remove the duplicates from within the array without creating a new array. They\\'re checking the array that was passed into the RemoveDuplicates method for the results."
                    },
                    {
                        "username": "samrocksc",
                        "content": "Modifying a param in Javascript is probably the worst thing you could do in production..."
                    },
                    {
                        "username": "the_coder_8297",
                        "content": "Why the test case [1] is giving me Run Time Error.\\nMy code is as follows\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int n = nums.size();\\n        int i = 0,j = 0;\\n        while(j < n){\\n            nums[i++] = nums[j];\\n            while(j < n && nums[j] == nums[j+1]) j++;\\n            j++;\\n        }\\n        return i;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "yannicklescure",
                        "content": "This problem is completely bugged from the instructions to the run! \\uD83E\\uDD2E\\nJavascript doesn\\'t accept the return !!! WTF"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "The thing is that you need to mutate the original array instead of returning the new one. This is the most tricky part that creates confusion in this task. And the return has to be just the number until which tests should check the original array that was provided as an input. I hope that helps "
                    },
                    {
                        "username": "deezyto",
                        "content": "You can run a loop and if the number is repeated, remove it from the array using the splice method, then do i-- (not the best js solution but it works);"
                    },
                    {
                        "username": "Preposterone",
                        "content": "I hated this problem."
                    },
                    {
                        "username": "nmehrotra",
                        "content": "Why this question has so many dislikes ? Almost double the likes ."
                    },
                    {
                        "username": "mrpiggy97",
                        "content": "my guess is that the description is way too complicated for what it really asks"
                    },
                    {
                        "username": "dball1126",
                        "content": "Someone from Leetcode needs to fix this problem, the test cases are broken in Ruby\\nRemove Duplicates from Sorted Array\\n\\nSubmission Detail\\n0 / 161 test cases passed.\\nStatus: Runtime Error\\nSubmitted: 1 minute ago\\nRuntime Error Message:\\nLine 55: no implicit conversion of Integer into Array (TypeError) in serializer__.rb (-)\\nLast executed input:\\n[1,1,2]\\nSubmitted Code: 1 minute ago\\n\\nLanguage: ruby  Edit Code  \\n\\n\\nMy code is correct, not to mention the method doesn\\'t even run with just returning NUMS"
                    },
                    {
                        "username": "kymed",
                        "content": "Like they don\\'t actually ever delete an element?? But it says delete in place??"
                    },
                    {
                        "username": "hrneet",
                        "content": "return [...new Set(nums)].length;"
                    },
                    {
                        "username": "yorkshire",
                        "content": "Even though the question requies that the changes are in-place, the judge does not check this (in Python).\\n\\nI can move the unique elements to the front, then append random numbers to the array (actually a list) or delete the junk at the end and it doesn\\'t matter. The judge only checks the array up to the required length.\\n\\nIf there is a requirement in the question, it should be tested in the judge!"
                    }
                ]
            },
            {
                "id": 1575627,
                "content": [
                    {
                        "username": "toygrr",
                        "content": "I tried solving this using the new Set method to remove duplicate keys, and then convert that into an array.  This does not work for what ever reason, but in my IDE it pops out a correct solution.\\n\\nDoes this have something to do with the version of JavaScript that leetcode uses?"
                    },
                    {
                        "username": "toygrr",
                        "content": "[@idklol8](/idklol8) I see, I\\'ll try a different approach, thanks!"
                    },
                    {
                        "username": "idklol8",
                        "content": "They want you to remove the duplicates from within the array without creating a new array. They\\'re checking the array that was passed into the RemoveDuplicates method for the results."
                    },
                    {
                        "username": "samrocksc",
                        "content": "Modifying a param in Javascript is probably the worst thing you could do in production..."
                    },
                    {
                        "username": "the_coder_8297",
                        "content": "Why the test case [1] is giving me Run Time Error.\\nMy code is as follows\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int n = nums.size();\\n        int i = 0,j = 0;\\n        while(j < n){\\n            nums[i++] = nums[j];\\n            while(j < n && nums[j] == nums[j+1]) j++;\\n            j++;\\n        }\\n        return i;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "yannicklescure",
                        "content": "This problem is completely bugged from the instructions to the run! \\uD83E\\uDD2E\\nJavascript doesn\\'t accept the return !!! WTF"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "The thing is that you need to mutate the original array instead of returning the new one. This is the most tricky part that creates confusion in this task. And the return has to be just the number until which tests should check the original array that was provided as an input. I hope that helps "
                    },
                    {
                        "username": "deezyto",
                        "content": "You can run a loop and if the number is repeated, remove it from the array using the splice method, then do i-- (not the best js solution but it works);"
                    },
                    {
                        "username": "Preposterone",
                        "content": "I hated this problem."
                    },
                    {
                        "username": "nmehrotra",
                        "content": "Why this question has so many dislikes ? Almost double the likes ."
                    },
                    {
                        "username": "mrpiggy97",
                        "content": "my guess is that the description is way too complicated for what it really asks"
                    },
                    {
                        "username": "dball1126",
                        "content": "Someone from Leetcode needs to fix this problem, the test cases are broken in Ruby\\nRemove Duplicates from Sorted Array\\n\\nSubmission Detail\\n0 / 161 test cases passed.\\nStatus: Runtime Error\\nSubmitted: 1 minute ago\\nRuntime Error Message:\\nLine 55: no implicit conversion of Integer into Array (TypeError) in serializer__.rb (-)\\nLast executed input:\\n[1,1,2]\\nSubmitted Code: 1 minute ago\\n\\nLanguage: ruby  Edit Code  \\n\\n\\nMy code is correct, not to mention the method doesn\\'t even run with just returning NUMS"
                    },
                    {
                        "username": "kymed",
                        "content": "Like they don\\'t actually ever delete an element?? But it says delete in place??"
                    },
                    {
                        "username": "hrneet",
                        "content": "return [...new Set(nums)].length;"
                    },
                    {
                        "username": "yorkshire",
                        "content": "Even though the question requies that the changes are in-place, the judge does not check this (in Python).\\n\\nI can move the unique elements to the front, then append random numbers to the array (actually a list) or delete the junk at the end and it doesn\\'t matter. The judge only checks the array up to the required length.\\n\\nIf there is a requirement in the question, it should be tested in the judge!"
                    }
                ]
            },
            {
                "id": 1573270,
                "content": [
                    {
                        "username": "toygrr",
                        "content": "I tried solving this using the new Set method to remove duplicate keys, and then convert that into an array.  This does not work for what ever reason, but in my IDE it pops out a correct solution.\\n\\nDoes this have something to do with the version of JavaScript that leetcode uses?"
                    },
                    {
                        "username": "toygrr",
                        "content": "[@idklol8](/idklol8) I see, I\\'ll try a different approach, thanks!"
                    },
                    {
                        "username": "idklol8",
                        "content": "They want you to remove the duplicates from within the array without creating a new array. They\\'re checking the array that was passed into the RemoveDuplicates method for the results."
                    },
                    {
                        "username": "samrocksc",
                        "content": "Modifying a param in Javascript is probably the worst thing you could do in production..."
                    },
                    {
                        "username": "the_coder_8297",
                        "content": "Why the test case [1] is giving me Run Time Error.\\nMy code is as follows\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int n = nums.size();\\n        int i = 0,j = 0;\\n        while(j < n){\\n            nums[i++] = nums[j];\\n            while(j < n && nums[j] == nums[j+1]) j++;\\n            j++;\\n        }\\n        return i;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "yannicklescure",
                        "content": "This problem is completely bugged from the instructions to the run! \\uD83E\\uDD2E\\nJavascript doesn\\'t accept the return !!! WTF"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "The thing is that you need to mutate the original array instead of returning the new one. This is the most tricky part that creates confusion in this task. And the return has to be just the number until which tests should check the original array that was provided as an input. I hope that helps "
                    },
                    {
                        "username": "deezyto",
                        "content": "You can run a loop and if the number is repeated, remove it from the array using the splice method, then do i-- (not the best js solution but it works);"
                    },
                    {
                        "username": "Preposterone",
                        "content": "I hated this problem."
                    },
                    {
                        "username": "nmehrotra",
                        "content": "Why this question has so many dislikes ? Almost double the likes ."
                    },
                    {
                        "username": "mrpiggy97",
                        "content": "my guess is that the description is way too complicated for what it really asks"
                    },
                    {
                        "username": "dball1126",
                        "content": "Someone from Leetcode needs to fix this problem, the test cases are broken in Ruby\\nRemove Duplicates from Sorted Array\\n\\nSubmission Detail\\n0 / 161 test cases passed.\\nStatus: Runtime Error\\nSubmitted: 1 minute ago\\nRuntime Error Message:\\nLine 55: no implicit conversion of Integer into Array (TypeError) in serializer__.rb (-)\\nLast executed input:\\n[1,1,2]\\nSubmitted Code: 1 minute ago\\n\\nLanguage: ruby  Edit Code  \\n\\n\\nMy code is correct, not to mention the method doesn\\'t even run with just returning NUMS"
                    },
                    {
                        "username": "kymed",
                        "content": "Like they don\\'t actually ever delete an element?? But it says delete in place??"
                    },
                    {
                        "username": "hrneet",
                        "content": "return [...new Set(nums)].length;"
                    },
                    {
                        "username": "yorkshire",
                        "content": "Even though the question requies that the changes are in-place, the judge does not check this (in Python).\\n\\nI can move the unique elements to the front, then append random numbers to the array (actually a list) or delete the junk at the end and it doesn\\'t matter. The judge only checks the array up to the required length.\\n\\nIf there is a requirement in the question, it should be tested in the judge!"
                    }
                ]
            },
            {
                "id": 1573111,
                "content": [
                    {
                        "username": "toygrr",
                        "content": "I tried solving this using the new Set method to remove duplicate keys, and then convert that into an array.  This does not work for what ever reason, but in my IDE it pops out a correct solution.\\n\\nDoes this have something to do with the version of JavaScript that leetcode uses?"
                    },
                    {
                        "username": "toygrr",
                        "content": "[@idklol8](/idklol8) I see, I\\'ll try a different approach, thanks!"
                    },
                    {
                        "username": "idklol8",
                        "content": "They want you to remove the duplicates from within the array without creating a new array. They\\'re checking the array that was passed into the RemoveDuplicates method for the results."
                    },
                    {
                        "username": "samrocksc",
                        "content": "Modifying a param in Javascript is probably the worst thing you could do in production..."
                    },
                    {
                        "username": "the_coder_8297",
                        "content": "Why the test case [1] is giving me Run Time Error.\\nMy code is as follows\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int n = nums.size();\\n        int i = 0,j = 0;\\n        while(j < n){\\n            nums[i++] = nums[j];\\n            while(j < n && nums[j] == nums[j+1]) j++;\\n            j++;\\n        }\\n        return i;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "yannicklescure",
                        "content": "This problem is completely bugged from the instructions to the run! \\uD83E\\uDD2E\\nJavascript doesn\\'t accept the return !!! WTF"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "The thing is that you need to mutate the original array instead of returning the new one. This is the most tricky part that creates confusion in this task. And the return has to be just the number until which tests should check the original array that was provided as an input. I hope that helps "
                    },
                    {
                        "username": "deezyto",
                        "content": "You can run a loop and if the number is repeated, remove it from the array using the splice method, then do i-- (not the best js solution but it works);"
                    },
                    {
                        "username": "Preposterone",
                        "content": "I hated this problem."
                    },
                    {
                        "username": "nmehrotra",
                        "content": "Why this question has so many dislikes ? Almost double the likes ."
                    },
                    {
                        "username": "mrpiggy97",
                        "content": "my guess is that the description is way too complicated for what it really asks"
                    },
                    {
                        "username": "dball1126",
                        "content": "Someone from Leetcode needs to fix this problem, the test cases are broken in Ruby\\nRemove Duplicates from Sorted Array\\n\\nSubmission Detail\\n0 / 161 test cases passed.\\nStatus: Runtime Error\\nSubmitted: 1 minute ago\\nRuntime Error Message:\\nLine 55: no implicit conversion of Integer into Array (TypeError) in serializer__.rb (-)\\nLast executed input:\\n[1,1,2]\\nSubmitted Code: 1 minute ago\\n\\nLanguage: ruby  Edit Code  \\n\\n\\nMy code is correct, not to mention the method doesn\\'t even run with just returning NUMS"
                    },
                    {
                        "username": "kymed",
                        "content": "Like they don\\'t actually ever delete an element?? But it says delete in place??"
                    },
                    {
                        "username": "hrneet",
                        "content": "return [...new Set(nums)].length;"
                    },
                    {
                        "username": "yorkshire",
                        "content": "Even though the question requies that the changes are in-place, the judge does not check this (in Python).\\n\\nI can move the unique elements to the front, then append random numbers to the array (actually a list) or delete the junk at the end and it doesn\\'t matter. The judge only checks the array up to the required length.\\n\\nIf there is a requirement in the question, it should be tested in the judge!"
                    }
                ]
            },
            {
                "id": 1573068,
                "content": [
                    {
                        "username": "toygrr",
                        "content": "I tried solving this using the new Set method to remove duplicate keys, and then convert that into an array.  This does not work for what ever reason, but in my IDE it pops out a correct solution.\\n\\nDoes this have something to do with the version of JavaScript that leetcode uses?"
                    },
                    {
                        "username": "toygrr",
                        "content": "[@idklol8](/idklol8) I see, I\\'ll try a different approach, thanks!"
                    },
                    {
                        "username": "idklol8",
                        "content": "They want you to remove the duplicates from within the array without creating a new array. They\\'re checking the array that was passed into the RemoveDuplicates method for the results."
                    },
                    {
                        "username": "samrocksc",
                        "content": "Modifying a param in Javascript is probably the worst thing you could do in production..."
                    },
                    {
                        "username": "the_coder_8297",
                        "content": "Why the test case [1] is giving me Run Time Error.\\nMy code is as follows\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int n = nums.size();\\n        int i = 0,j = 0;\\n        while(j < n){\\n            nums[i++] = nums[j];\\n            while(j < n && nums[j] == nums[j+1]) j++;\\n            j++;\\n        }\\n        return i;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "yannicklescure",
                        "content": "This problem is completely bugged from the instructions to the run! \\uD83E\\uDD2E\\nJavascript doesn\\'t accept the return !!! WTF"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "The thing is that you need to mutate the original array instead of returning the new one. This is the most tricky part that creates confusion in this task. And the return has to be just the number until which tests should check the original array that was provided as an input. I hope that helps "
                    },
                    {
                        "username": "deezyto",
                        "content": "You can run a loop and if the number is repeated, remove it from the array using the splice method, then do i-- (not the best js solution but it works);"
                    },
                    {
                        "username": "Preposterone",
                        "content": "I hated this problem."
                    },
                    {
                        "username": "nmehrotra",
                        "content": "Why this question has so many dislikes ? Almost double the likes ."
                    },
                    {
                        "username": "mrpiggy97",
                        "content": "my guess is that the description is way too complicated for what it really asks"
                    },
                    {
                        "username": "dball1126",
                        "content": "Someone from Leetcode needs to fix this problem, the test cases are broken in Ruby\\nRemove Duplicates from Sorted Array\\n\\nSubmission Detail\\n0 / 161 test cases passed.\\nStatus: Runtime Error\\nSubmitted: 1 minute ago\\nRuntime Error Message:\\nLine 55: no implicit conversion of Integer into Array (TypeError) in serializer__.rb (-)\\nLast executed input:\\n[1,1,2]\\nSubmitted Code: 1 minute ago\\n\\nLanguage: ruby  Edit Code  \\n\\n\\nMy code is correct, not to mention the method doesn\\'t even run with just returning NUMS"
                    },
                    {
                        "username": "kymed",
                        "content": "Like they don\\'t actually ever delete an element?? But it says delete in place??"
                    },
                    {
                        "username": "hrneet",
                        "content": "return [...new Set(nums)].length;"
                    },
                    {
                        "username": "yorkshire",
                        "content": "Even though the question requies that the changes are in-place, the judge does not check this (in Python).\\n\\nI can move the unique elements to the front, then append random numbers to the array (actually a list) or delete the junk at the end and it doesn\\'t matter. The judge only checks the array up to the required length.\\n\\nIf there is a requirement in the question, it should be tested in the judge!"
                    }
                ]
            },
            {
                "id": 1572448,
                "content": [
                    {
                        "username": "toygrr",
                        "content": "I tried solving this using the new Set method to remove duplicate keys, and then convert that into an array.  This does not work for what ever reason, but in my IDE it pops out a correct solution.\\n\\nDoes this have something to do with the version of JavaScript that leetcode uses?"
                    },
                    {
                        "username": "toygrr",
                        "content": "[@idklol8](/idklol8) I see, I\\'ll try a different approach, thanks!"
                    },
                    {
                        "username": "idklol8",
                        "content": "They want you to remove the duplicates from within the array without creating a new array. They\\'re checking the array that was passed into the RemoveDuplicates method for the results."
                    },
                    {
                        "username": "samrocksc",
                        "content": "Modifying a param in Javascript is probably the worst thing you could do in production..."
                    },
                    {
                        "username": "the_coder_8297",
                        "content": "Why the test case [1] is giving me Run Time Error.\\nMy code is as follows\\n```\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int n = nums.size();\\n        int i = 0,j = 0;\\n        while(j < n){\\n            nums[i++] = nums[j];\\n            while(j < n && nums[j] == nums[j+1]) j++;\\n            j++;\\n        }\\n        return i;\\n    }\\n};\\n```"
                    },
                    {
                        "username": "yannicklescure",
                        "content": "This problem is completely bugged from the instructions to the run! \\uD83E\\uDD2E\\nJavascript doesn\\'t accept the return !!! WTF"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "The thing is that you need to mutate the original array instead of returning the new one. This is the most tricky part that creates confusion in this task. And the return has to be just the number until which tests should check the original array that was provided as an input. I hope that helps "
                    },
                    {
                        "username": "deezyto",
                        "content": "You can run a loop and if the number is repeated, remove it from the array using the splice method, then do i-- (not the best js solution but it works);"
                    },
                    {
                        "username": "Preposterone",
                        "content": "I hated this problem."
                    },
                    {
                        "username": "nmehrotra",
                        "content": "Why this question has so many dislikes ? Almost double the likes ."
                    },
                    {
                        "username": "mrpiggy97",
                        "content": "my guess is that the description is way too complicated for what it really asks"
                    },
                    {
                        "username": "dball1126",
                        "content": "Someone from Leetcode needs to fix this problem, the test cases are broken in Ruby\\nRemove Duplicates from Sorted Array\\n\\nSubmission Detail\\n0 / 161 test cases passed.\\nStatus: Runtime Error\\nSubmitted: 1 minute ago\\nRuntime Error Message:\\nLine 55: no implicit conversion of Integer into Array (TypeError) in serializer__.rb (-)\\nLast executed input:\\n[1,1,2]\\nSubmitted Code: 1 minute ago\\n\\nLanguage: ruby  Edit Code  \\n\\n\\nMy code is correct, not to mention the method doesn\\'t even run with just returning NUMS"
                    },
                    {
                        "username": "kymed",
                        "content": "Like they don\\'t actually ever delete an element?? But it says delete in place??"
                    },
                    {
                        "username": "hrneet",
                        "content": "return [...new Set(nums)].length;"
                    },
                    {
                        "username": "yorkshire",
                        "content": "Even though the question requies that the changes are in-place, the judge does not check this (in Python).\\n\\nI can move the unique elements to the front, then append random numbers to the array (actually a list) or delete the junk at the end and it doesn\\'t matter. The judge only checks the array up to the required length.\\n\\nIf there is a requirement in the question, it should be tested in the judge!"
                    }
                ]
            },
            {
                "id": 1571890,
                "content": [
                    {
                        "username": "FlorianFang",
                        "content": "why the return value is \"int\" but the answer is \"int[]\" ??"
                    },
                    {
                        "username": "agreatlord",
                        "content": "auto u = unique(nums.begin(), nums.end());\\nnums.erase(u, nums.end());\\nreturn nums.size();"
                    },
                    {
                        "username": "Zhuzeng",
                        "content": "I got this error:\\n\\nSubmission Result: Wrong Answer\\n\\nInput:\\t[1,2]\\nOutput:\\t[2]\\nExpected:\\t[1,2]\\n\\nBut as the question requests, we are required to return the new length, not the new array, so why the OJ says \"expected [1,2]\" ?"
                    },
                    {
                        "username": "klona926",
                        "content": "def dmove_duplication(nums):\\n    print(list(set(nums)))\\nremove_duplication([1,1,2])\\nremove_duplication([0,0,1,1,1,2,2,3,3,4])"
                    },
                    {
                        "username": "zorndyuke",
                        "content": "I think there is a bug in the Javascript Check.\n\nAs far as I understood, the function should remove duplicates and return the length of the filtered Array.\n\nSo as you can see in the stdout the filtered Array contains the correct, non-duplicate values and the length is 2 like the example says too. But what I don't understand is the \"Your/Expected answer\" section. The description says it want the length as number (also the docblock says it), but why the \"answers\" have the array output format? Also where does it get the [1,1] result? \n\nEither I missunderstand something important or it's just buggy.\n\n![image](https://s3-lc-upload.s3.amazonaws.com/users/zorndyuke/image_1519379846.png)\n(Url to image: https://s3-lc-upload.s3.amazonaws.com/users/zorndyuke/image_1519379846.png)"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "In-place modification is expected from you, if you try to create a separate array, then all the distinct elements will be in your auxiliary array, but the original array sill holds all the elements in the same order as it was before. Leetcode is checking order of elements in your original array, not in your auxiliary array! So try to modify original one!\\n\\nAlso, don\\'t remove the duplicates from the array, just shift them at the end of the array (order doesn\\'t matter for duplicate elements). In the end, return the count that represents, how many distinct elements you shifted to the front of the array!"
                    },
                    {
                        "username": "pandora111",
                        "content": "in removing duplicate, how do I delete an element from int [] in Java?"
                    },
                    {
                        "username": "ksiv",
                        "content": "we don\\'t, just move these. That is for \"K\" it\\'s a length of elements to read from the beginning, the rest just ignored."
                    },
                    {
                        "username": "michalhodulofficial",
                        "content": "LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>();\n        for(int i = 0;i<nums.length;i++){\n            linkedHashSet.add(nums[i]);\n        }\n        return linkedHashSet.size();\n\nwhy this doenst work guys ? LinkedHashSet adding just unique numbers and then in return is .size() how much of these records is in hasset,in idea everything work"
                    },
                    {
                        "username": "Elsone",
                        "content": "This question is weird and so confusing. I\\'ve managed to get the right answer. you have to modify nums itself.  "
                    },
                    {
                        "username": "SasonBraha",
                        "content": "This questions is terribly worded. "
                    },
                    {
                        "username": "lukeASB",
                        "content": "The phrasing of this question is dumb. \n\nThe question should just say sort the distinct values in the front of the array and return the length.\n\n"
                    }
                ]
            },
            {
                "id": 1571067,
                "content": [
                    {
                        "username": "FlorianFang",
                        "content": "why the return value is \"int\" but the answer is \"int[]\" ??"
                    },
                    {
                        "username": "agreatlord",
                        "content": "auto u = unique(nums.begin(), nums.end());\\nnums.erase(u, nums.end());\\nreturn nums.size();"
                    },
                    {
                        "username": "Zhuzeng",
                        "content": "I got this error:\\n\\nSubmission Result: Wrong Answer\\n\\nInput:\\t[1,2]\\nOutput:\\t[2]\\nExpected:\\t[1,2]\\n\\nBut as the question requests, we are required to return the new length, not the new array, so why the OJ says \"expected [1,2]\" ?"
                    },
                    {
                        "username": "klona926",
                        "content": "def dmove_duplication(nums):\\n    print(list(set(nums)))\\nremove_duplication([1,1,2])\\nremove_duplication([0,0,1,1,1,2,2,3,3,4])"
                    },
                    {
                        "username": "zorndyuke",
                        "content": "I think there is a bug in the Javascript Check.\n\nAs far as I understood, the function should remove duplicates and return the length of the filtered Array.\n\nSo as you can see in the stdout the filtered Array contains the correct, non-duplicate values and the length is 2 like the example says too. But what I don't understand is the \"Your/Expected answer\" section. The description says it want the length as number (also the docblock says it), but why the \"answers\" have the array output format? Also where does it get the [1,1] result? \n\nEither I missunderstand something important or it's just buggy.\n\n![image](https://s3-lc-upload.s3.amazonaws.com/users/zorndyuke/image_1519379846.png)\n(Url to image: https://s3-lc-upload.s3.amazonaws.com/users/zorndyuke/image_1519379846.png)"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "In-place modification is expected from you, if you try to create a separate array, then all the distinct elements will be in your auxiliary array, but the original array sill holds all the elements in the same order as it was before. Leetcode is checking order of elements in your original array, not in your auxiliary array! So try to modify original one!\\n\\nAlso, don\\'t remove the duplicates from the array, just shift them at the end of the array (order doesn\\'t matter for duplicate elements). In the end, return the count that represents, how many distinct elements you shifted to the front of the array!"
                    },
                    {
                        "username": "pandora111",
                        "content": "in removing duplicate, how do I delete an element from int [] in Java?"
                    },
                    {
                        "username": "ksiv",
                        "content": "we don\\'t, just move these. That is for \"K\" it\\'s a length of elements to read from the beginning, the rest just ignored."
                    },
                    {
                        "username": "michalhodulofficial",
                        "content": "LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>();\n        for(int i = 0;i<nums.length;i++){\n            linkedHashSet.add(nums[i]);\n        }\n        return linkedHashSet.size();\n\nwhy this doenst work guys ? LinkedHashSet adding just unique numbers and then in return is .size() how much of these records is in hasset,in idea everything work"
                    },
                    {
                        "username": "Elsone",
                        "content": "This question is weird and so confusing. I\\'ve managed to get the right answer. you have to modify nums itself.  "
                    },
                    {
                        "username": "SasonBraha",
                        "content": "This questions is terribly worded. "
                    },
                    {
                        "username": "lukeASB",
                        "content": "The phrasing of this question is dumb. \n\nThe question should just say sort the distinct values in the front of the array and return the length.\n\n"
                    }
                ]
            },
            {
                "id": 1568846,
                "content": [
                    {
                        "username": "FlorianFang",
                        "content": "why the return value is \"int\" but the answer is \"int[]\" ??"
                    },
                    {
                        "username": "agreatlord",
                        "content": "auto u = unique(nums.begin(), nums.end());\\nnums.erase(u, nums.end());\\nreturn nums.size();"
                    },
                    {
                        "username": "Zhuzeng",
                        "content": "I got this error:\\n\\nSubmission Result: Wrong Answer\\n\\nInput:\\t[1,2]\\nOutput:\\t[2]\\nExpected:\\t[1,2]\\n\\nBut as the question requests, we are required to return the new length, not the new array, so why the OJ says \"expected [1,2]\" ?"
                    },
                    {
                        "username": "klona926",
                        "content": "def dmove_duplication(nums):\\n    print(list(set(nums)))\\nremove_duplication([1,1,2])\\nremove_duplication([0,0,1,1,1,2,2,3,3,4])"
                    },
                    {
                        "username": "zorndyuke",
                        "content": "I think there is a bug in the Javascript Check.\n\nAs far as I understood, the function should remove duplicates and return the length of the filtered Array.\n\nSo as you can see in the stdout the filtered Array contains the correct, non-duplicate values and the length is 2 like the example says too. But what I don't understand is the \"Your/Expected answer\" section. The description says it want the length as number (also the docblock says it), but why the \"answers\" have the array output format? Also where does it get the [1,1] result? \n\nEither I missunderstand something important or it's just buggy.\n\n![image](https://s3-lc-upload.s3.amazonaws.com/users/zorndyuke/image_1519379846.png)\n(Url to image: https://s3-lc-upload.s3.amazonaws.com/users/zorndyuke/image_1519379846.png)"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "In-place modification is expected from you, if you try to create a separate array, then all the distinct elements will be in your auxiliary array, but the original array sill holds all the elements in the same order as it was before. Leetcode is checking order of elements in your original array, not in your auxiliary array! So try to modify original one!\\n\\nAlso, don\\'t remove the duplicates from the array, just shift them at the end of the array (order doesn\\'t matter for duplicate elements). In the end, return the count that represents, how many distinct elements you shifted to the front of the array!"
                    },
                    {
                        "username": "pandora111",
                        "content": "in removing duplicate, how do I delete an element from int [] in Java?"
                    },
                    {
                        "username": "ksiv",
                        "content": "we don\\'t, just move these. That is for \"K\" it\\'s a length of elements to read from the beginning, the rest just ignored."
                    },
                    {
                        "username": "michalhodulofficial",
                        "content": "LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>();\n        for(int i = 0;i<nums.length;i++){\n            linkedHashSet.add(nums[i]);\n        }\n        return linkedHashSet.size();\n\nwhy this doenst work guys ? LinkedHashSet adding just unique numbers and then in return is .size() how much of these records is in hasset,in idea everything work"
                    },
                    {
                        "username": "Elsone",
                        "content": "This question is weird and so confusing. I\\'ve managed to get the right answer. you have to modify nums itself.  "
                    },
                    {
                        "username": "SasonBraha",
                        "content": "This questions is terribly worded. "
                    },
                    {
                        "username": "lukeASB",
                        "content": "The phrasing of this question is dumb. \n\nThe question should just say sort the distinct values in the front of the array and return the length.\n\n"
                    }
                ]
            },
            {
                "id": 1572387,
                "content": [
                    {
                        "username": "FlorianFang",
                        "content": "why the return value is \"int\" but the answer is \"int[]\" ??"
                    },
                    {
                        "username": "agreatlord",
                        "content": "auto u = unique(nums.begin(), nums.end());\\nnums.erase(u, nums.end());\\nreturn nums.size();"
                    },
                    {
                        "username": "Zhuzeng",
                        "content": "I got this error:\\n\\nSubmission Result: Wrong Answer\\n\\nInput:\\t[1,2]\\nOutput:\\t[2]\\nExpected:\\t[1,2]\\n\\nBut as the question requests, we are required to return the new length, not the new array, so why the OJ says \"expected [1,2]\" ?"
                    },
                    {
                        "username": "klona926",
                        "content": "def dmove_duplication(nums):\\n    print(list(set(nums)))\\nremove_duplication([1,1,2])\\nremove_duplication([0,0,1,1,1,2,2,3,3,4])"
                    },
                    {
                        "username": "zorndyuke",
                        "content": "I think there is a bug in the Javascript Check.\n\nAs far as I understood, the function should remove duplicates and return the length of the filtered Array.\n\nSo as you can see in the stdout the filtered Array contains the correct, non-duplicate values and the length is 2 like the example says too. But what I don't understand is the \"Your/Expected answer\" section. The description says it want the length as number (also the docblock says it), but why the \"answers\" have the array output format? Also where does it get the [1,1] result? \n\nEither I missunderstand something important or it's just buggy.\n\n![image](https://s3-lc-upload.s3.amazonaws.com/users/zorndyuke/image_1519379846.png)\n(Url to image: https://s3-lc-upload.s3.amazonaws.com/users/zorndyuke/image_1519379846.png)"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "In-place modification is expected from you, if you try to create a separate array, then all the distinct elements will be in your auxiliary array, but the original array sill holds all the elements in the same order as it was before. Leetcode is checking order of elements in your original array, not in your auxiliary array! So try to modify original one!\\n\\nAlso, don\\'t remove the duplicates from the array, just shift them at the end of the array (order doesn\\'t matter for duplicate elements). In the end, return the count that represents, how many distinct elements you shifted to the front of the array!"
                    },
                    {
                        "username": "pandora111",
                        "content": "in removing duplicate, how do I delete an element from int [] in Java?"
                    },
                    {
                        "username": "ksiv",
                        "content": "we don\\'t, just move these. That is for \"K\" it\\'s a length of elements to read from the beginning, the rest just ignored."
                    },
                    {
                        "username": "michalhodulofficial",
                        "content": "LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>();\n        for(int i = 0;i<nums.length;i++){\n            linkedHashSet.add(nums[i]);\n        }\n        return linkedHashSet.size();\n\nwhy this doenst work guys ? LinkedHashSet adding just unique numbers and then in return is .size() how much of these records is in hasset,in idea everything work"
                    },
                    {
                        "username": "Elsone",
                        "content": "This question is weird and so confusing. I\\'ve managed to get the right answer. you have to modify nums itself.  "
                    },
                    {
                        "username": "SasonBraha",
                        "content": "This questions is terribly worded. "
                    },
                    {
                        "username": "lukeASB",
                        "content": "The phrasing of this question is dumb. \n\nThe question should just say sort the distinct values in the front of the array and return the length.\n\n"
                    }
                ]
            },
            {
                "id": 1571862,
                "content": [
                    {
                        "username": "FlorianFang",
                        "content": "why the return value is \"int\" but the answer is \"int[]\" ??"
                    },
                    {
                        "username": "agreatlord",
                        "content": "auto u = unique(nums.begin(), nums.end());\\nnums.erase(u, nums.end());\\nreturn nums.size();"
                    },
                    {
                        "username": "Zhuzeng",
                        "content": "I got this error:\\n\\nSubmission Result: Wrong Answer\\n\\nInput:\\t[1,2]\\nOutput:\\t[2]\\nExpected:\\t[1,2]\\n\\nBut as the question requests, we are required to return the new length, not the new array, so why the OJ says \"expected [1,2]\" ?"
                    },
                    {
                        "username": "klona926",
                        "content": "def dmove_duplication(nums):\\n    print(list(set(nums)))\\nremove_duplication([1,1,2])\\nremove_duplication([0,0,1,1,1,2,2,3,3,4])"
                    },
                    {
                        "username": "zorndyuke",
                        "content": "I think there is a bug in the Javascript Check.\n\nAs far as I understood, the function should remove duplicates and return the length of the filtered Array.\n\nSo as you can see in the stdout the filtered Array contains the correct, non-duplicate values and the length is 2 like the example says too. But what I don't understand is the \"Your/Expected answer\" section. The description says it want the length as number (also the docblock says it), but why the \"answers\" have the array output format? Also where does it get the [1,1] result? \n\nEither I missunderstand something important or it's just buggy.\n\n![image](https://s3-lc-upload.s3.amazonaws.com/users/zorndyuke/image_1519379846.png)\n(Url to image: https://s3-lc-upload.s3.amazonaws.com/users/zorndyuke/image_1519379846.png)"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "In-place modification is expected from you, if you try to create a separate array, then all the distinct elements will be in your auxiliary array, but the original array sill holds all the elements in the same order as it was before. Leetcode is checking order of elements in your original array, not in your auxiliary array! So try to modify original one!\\n\\nAlso, don\\'t remove the duplicates from the array, just shift them at the end of the array (order doesn\\'t matter for duplicate elements). In the end, return the count that represents, how many distinct elements you shifted to the front of the array!"
                    },
                    {
                        "username": "pandora111",
                        "content": "in removing duplicate, how do I delete an element from int [] in Java?"
                    },
                    {
                        "username": "ksiv",
                        "content": "we don\\'t, just move these. That is for \"K\" it\\'s a length of elements to read from the beginning, the rest just ignored."
                    },
                    {
                        "username": "michalhodulofficial",
                        "content": "LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>();\n        for(int i = 0;i<nums.length;i++){\n            linkedHashSet.add(nums[i]);\n        }\n        return linkedHashSet.size();\n\nwhy this doenst work guys ? LinkedHashSet adding just unique numbers and then in return is .size() how much of these records is in hasset,in idea everything work"
                    },
                    {
                        "username": "Elsone",
                        "content": "This question is weird and so confusing. I\\'ve managed to get the right answer. you have to modify nums itself.  "
                    },
                    {
                        "username": "SasonBraha",
                        "content": "This questions is terribly worded. "
                    },
                    {
                        "username": "lukeASB",
                        "content": "The phrasing of this question is dumb. \n\nThe question should just say sort the distinct values in the front of the array and return the length.\n\n"
                    }
                ]
            },
            {
                "id": 1571068,
                "content": [
                    {
                        "username": "FlorianFang",
                        "content": "why the return value is \"int\" but the answer is \"int[]\" ??"
                    },
                    {
                        "username": "agreatlord",
                        "content": "auto u = unique(nums.begin(), nums.end());\\nnums.erase(u, nums.end());\\nreturn nums.size();"
                    },
                    {
                        "username": "Zhuzeng",
                        "content": "I got this error:\\n\\nSubmission Result: Wrong Answer\\n\\nInput:\\t[1,2]\\nOutput:\\t[2]\\nExpected:\\t[1,2]\\n\\nBut as the question requests, we are required to return the new length, not the new array, so why the OJ says \"expected [1,2]\" ?"
                    },
                    {
                        "username": "klona926",
                        "content": "def dmove_duplication(nums):\\n    print(list(set(nums)))\\nremove_duplication([1,1,2])\\nremove_duplication([0,0,1,1,1,2,2,3,3,4])"
                    },
                    {
                        "username": "zorndyuke",
                        "content": "I think there is a bug in the Javascript Check.\n\nAs far as I understood, the function should remove duplicates and return the length of the filtered Array.\n\nSo as you can see in the stdout the filtered Array contains the correct, non-duplicate values and the length is 2 like the example says too. But what I don't understand is the \"Your/Expected answer\" section. The description says it want the length as number (also the docblock says it), but why the \"answers\" have the array output format? Also where does it get the [1,1] result? \n\nEither I missunderstand something important or it's just buggy.\n\n![image](https://s3-lc-upload.s3.amazonaws.com/users/zorndyuke/image_1519379846.png)\n(Url to image: https://s3-lc-upload.s3.amazonaws.com/users/zorndyuke/image_1519379846.png)"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "In-place modification is expected from you, if you try to create a separate array, then all the distinct elements will be in your auxiliary array, but the original array sill holds all the elements in the same order as it was before. Leetcode is checking order of elements in your original array, not in your auxiliary array! So try to modify original one!\\n\\nAlso, don\\'t remove the duplicates from the array, just shift them at the end of the array (order doesn\\'t matter for duplicate elements). In the end, return the count that represents, how many distinct elements you shifted to the front of the array!"
                    },
                    {
                        "username": "pandora111",
                        "content": "in removing duplicate, how do I delete an element from int [] in Java?"
                    },
                    {
                        "username": "ksiv",
                        "content": "we don\\'t, just move these. That is for \"K\" it\\'s a length of elements to read from the beginning, the rest just ignored."
                    },
                    {
                        "username": "michalhodulofficial",
                        "content": "LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>();\n        for(int i = 0;i<nums.length;i++){\n            linkedHashSet.add(nums[i]);\n        }\n        return linkedHashSet.size();\n\nwhy this doenst work guys ? LinkedHashSet adding just unique numbers and then in return is .size() how much of these records is in hasset,in idea everything work"
                    },
                    {
                        "username": "Elsone",
                        "content": "This question is weird and so confusing. I\\'ve managed to get the right answer. you have to modify nums itself.  "
                    },
                    {
                        "username": "SasonBraha",
                        "content": "This questions is terribly worded. "
                    },
                    {
                        "username": "lukeASB",
                        "content": "The phrasing of this question is dumb. \n\nThe question should just say sort the distinct values in the front of the array and return the length.\n\n"
                    }
                ]
            },
            {
                "id": 2076885,
                "content": [
                    {
                        "username": "FlorianFang",
                        "content": "why the return value is \"int\" but the answer is \"int[]\" ??"
                    },
                    {
                        "username": "agreatlord",
                        "content": "auto u = unique(nums.begin(), nums.end());\\nnums.erase(u, nums.end());\\nreturn nums.size();"
                    },
                    {
                        "username": "Zhuzeng",
                        "content": "I got this error:\\n\\nSubmission Result: Wrong Answer\\n\\nInput:\\t[1,2]\\nOutput:\\t[2]\\nExpected:\\t[1,2]\\n\\nBut as the question requests, we are required to return the new length, not the new array, so why the OJ says \"expected [1,2]\" ?"
                    },
                    {
                        "username": "klona926",
                        "content": "def dmove_duplication(nums):\\n    print(list(set(nums)))\\nremove_duplication([1,1,2])\\nremove_duplication([0,0,1,1,1,2,2,3,3,4])"
                    },
                    {
                        "username": "zorndyuke",
                        "content": "I think there is a bug in the Javascript Check.\n\nAs far as I understood, the function should remove duplicates and return the length of the filtered Array.\n\nSo as you can see in the stdout the filtered Array contains the correct, non-duplicate values and the length is 2 like the example says too. But what I don't understand is the \"Your/Expected answer\" section. The description says it want the length as number (also the docblock says it), but why the \"answers\" have the array output format? Also where does it get the [1,1] result? \n\nEither I missunderstand something important or it's just buggy.\n\n![image](https://s3-lc-upload.s3.amazonaws.com/users/zorndyuke/image_1519379846.png)\n(Url to image: https://s3-lc-upload.s3.amazonaws.com/users/zorndyuke/image_1519379846.png)"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "In-place modification is expected from you, if you try to create a separate array, then all the distinct elements will be in your auxiliary array, but the original array sill holds all the elements in the same order as it was before. Leetcode is checking order of elements in your original array, not in your auxiliary array! So try to modify original one!\\n\\nAlso, don\\'t remove the duplicates from the array, just shift them at the end of the array (order doesn\\'t matter for duplicate elements). In the end, return the count that represents, how many distinct elements you shifted to the front of the array!"
                    },
                    {
                        "username": "pandora111",
                        "content": "in removing duplicate, how do I delete an element from int [] in Java?"
                    },
                    {
                        "username": "ksiv",
                        "content": "we don\\'t, just move these. That is for \"K\" it\\'s a length of elements to read from the beginning, the rest just ignored."
                    },
                    {
                        "username": "michalhodulofficial",
                        "content": "LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>();\n        for(int i = 0;i<nums.length;i++){\n            linkedHashSet.add(nums[i]);\n        }\n        return linkedHashSet.size();\n\nwhy this doenst work guys ? LinkedHashSet adding just unique numbers and then in return is .size() how much of these records is in hasset,in idea everything work"
                    },
                    {
                        "username": "Elsone",
                        "content": "This question is weird and so confusing. I\\'ve managed to get the right answer. you have to modify nums itself.  "
                    },
                    {
                        "username": "SasonBraha",
                        "content": "This questions is terribly worded. "
                    },
                    {
                        "username": "lukeASB",
                        "content": "The phrasing of this question is dumb. \n\nThe question should just say sort the distinct values in the front of the array and return the length.\n\n"
                    }
                ]
            },
            {
                "id": 2074625,
                "content": [
                    {
                        "username": "FlorianFang",
                        "content": "why the return value is \"int\" but the answer is \"int[]\" ??"
                    },
                    {
                        "username": "agreatlord",
                        "content": "auto u = unique(nums.begin(), nums.end());\\nnums.erase(u, nums.end());\\nreturn nums.size();"
                    },
                    {
                        "username": "Zhuzeng",
                        "content": "I got this error:\\n\\nSubmission Result: Wrong Answer\\n\\nInput:\\t[1,2]\\nOutput:\\t[2]\\nExpected:\\t[1,2]\\n\\nBut as the question requests, we are required to return the new length, not the new array, so why the OJ says \"expected [1,2]\" ?"
                    },
                    {
                        "username": "klona926",
                        "content": "def dmove_duplication(nums):\\n    print(list(set(nums)))\\nremove_duplication([1,1,2])\\nremove_duplication([0,0,1,1,1,2,2,3,3,4])"
                    },
                    {
                        "username": "zorndyuke",
                        "content": "I think there is a bug in the Javascript Check.\n\nAs far as I understood, the function should remove duplicates and return the length of the filtered Array.\n\nSo as you can see in the stdout the filtered Array contains the correct, non-duplicate values and the length is 2 like the example says too. But what I don't understand is the \"Your/Expected answer\" section. The description says it want the length as number (also the docblock says it), but why the \"answers\" have the array output format? Also where does it get the [1,1] result? \n\nEither I missunderstand something important or it's just buggy.\n\n![image](https://s3-lc-upload.s3.amazonaws.com/users/zorndyuke/image_1519379846.png)\n(Url to image: https://s3-lc-upload.s3.amazonaws.com/users/zorndyuke/image_1519379846.png)"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "In-place modification is expected from you, if you try to create a separate array, then all the distinct elements will be in your auxiliary array, but the original array sill holds all the elements in the same order as it was before. Leetcode is checking order of elements in your original array, not in your auxiliary array! So try to modify original one!\\n\\nAlso, don\\'t remove the duplicates from the array, just shift them at the end of the array (order doesn\\'t matter for duplicate elements). In the end, return the count that represents, how many distinct elements you shifted to the front of the array!"
                    },
                    {
                        "username": "pandora111",
                        "content": "in removing duplicate, how do I delete an element from int [] in Java?"
                    },
                    {
                        "username": "ksiv",
                        "content": "we don\\'t, just move these. That is for \"K\" it\\'s a length of elements to read from the beginning, the rest just ignored."
                    },
                    {
                        "username": "michalhodulofficial",
                        "content": "LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>();\n        for(int i = 0;i<nums.length;i++){\n            linkedHashSet.add(nums[i]);\n        }\n        return linkedHashSet.size();\n\nwhy this doenst work guys ? LinkedHashSet adding just unique numbers and then in return is .size() how much of these records is in hasset,in idea everything work"
                    },
                    {
                        "username": "Elsone",
                        "content": "This question is weird and so confusing. I\\'ve managed to get the right answer. you have to modify nums itself.  "
                    },
                    {
                        "username": "SasonBraha",
                        "content": "This questions is terribly worded. "
                    },
                    {
                        "username": "lukeASB",
                        "content": "The phrasing of this question is dumb. \n\nThe question should just say sort the distinct values in the front of the array and return the length.\n\n"
                    }
                ]
            },
            {
                "id": 2070393,
                "content": [
                    {
                        "username": "FlorianFang",
                        "content": "why the return value is \"int\" but the answer is \"int[]\" ??"
                    },
                    {
                        "username": "agreatlord",
                        "content": "auto u = unique(nums.begin(), nums.end());\\nnums.erase(u, nums.end());\\nreturn nums.size();"
                    },
                    {
                        "username": "Zhuzeng",
                        "content": "I got this error:\\n\\nSubmission Result: Wrong Answer\\n\\nInput:\\t[1,2]\\nOutput:\\t[2]\\nExpected:\\t[1,2]\\n\\nBut as the question requests, we are required to return the new length, not the new array, so why the OJ says \"expected [1,2]\" ?"
                    },
                    {
                        "username": "klona926",
                        "content": "def dmove_duplication(nums):\\n    print(list(set(nums)))\\nremove_duplication([1,1,2])\\nremove_duplication([0,0,1,1,1,2,2,3,3,4])"
                    },
                    {
                        "username": "zorndyuke",
                        "content": "I think there is a bug in the Javascript Check.\n\nAs far as I understood, the function should remove duplicates and return the length of the filtered Array.\n\nSo as you can see in the stdout the filtered Array contains the correct, non-duplicate values and the length is 2 like the example says too. But what I don't understand is the \"Your/Expected answer\" section. The description says it want the length as number (also the docblock says it), but why the \"answers\" have the array output format? Also where does it get the [1,1] result? \n\nEither I missunderstand something important or it's just buggy.\n\n![image](https://s3-lc-upload.s3.amazonaws.com/users/zorndyuke/image_1519379846.png)\n(Url to image: https://s3-lc-upload.s3.amazonaws.com/users/zorndyuke/image_1519379846.png)"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "In-place modification is expected from you, if you try to create a separate array, then all the distinct elements will be in your auxiliary array, but the original array sill holds all the elements in the same order as it was before. Leetcode is checking order of elements in your original array, not in your auxiliary array! So try to modify original one!\\n\\nAlso, don\\'t remove the duplicates from the array, just shift them at the end of the array (order doesn\\'t matter for duplicate elements). In the end, return the count that represents, how many distinct elements you shifted to the front of the array!"
                    },
                    {
                        "username": "pandora111",
                        "content": "in removing duplicate, how do I delete an element from int [] in Java?"
                    },
                    {
                        "username": "ksiv",
                        "content": "we don\\'t, just move these. That is for \"K\" it\\'s a length of elements to read from the beginning, the rest just ignored."
                    },
                    {
                        "username": "michalhodulofficial",
                        "content": "LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>();\n        for(int i = 0;i<nums.length;i++){\n            linkedHashSet.add(nums[i]);\n        }\n        return linkedHashSet.size();\n\nwhy this doenst work guys ? LinkedHashSet adding just unique numbers and then in return is .size() how much of these records is in hasset,in idea everything work"
                    },
                    {
                        "username": "Elsone",
                        "content": "This question is weird and so confusing. I\\'ve managed to get the right answer. you have to modify nums itself.  "
                    },
                    {
                        "username": "SasonBraha",
                        "content": "This questions is terribly worded. "
                    },
                    {
                        "username": "lukeASB",
                        "content": "The phrasing of this question is dumb. \n\nThe question should just say sort the distinct values in the front of the array and return the length.\n\n"
                    }
                ]
            },
            {
                "id": 2069158,
                "content": [
                    {
                        "username": "FlorianFang",
                        "content": "why the return value is \"int\" but the answer is \"int[]\" ??"
                    },
                    {
                        "username": "agreatlord",
                        "content": "auto u = unique(nums.begin(), nums.end());\\nnums.erase(u, nums.end());\\nreturn nums.size();"
                    },
                    {
                        "username": "Zhuzeng",
                        "content": "I got this error:\\n\\nSubmission Result: Wrong Answer\\n\\nInput:\\t[1,2]\\nOutput:\\t[2]\\nExpected:\\t[1,2]\\n\\nBut as the question requests, we are required to return the new length, not the new array, so why the OJ says \"expected [1,2]\" ?"
                    },
                    {
                        "username": "klona926",
                        "content": "def dmove_duplication(nums):\\n    print(list(set(nums)))\\nremove_duplication([1,1,2])\\nremove_duplication([0,0,1,1,1,2,2,3,3,4])"
                    },
                    {
                        "username": "zorndyuke",
                        "content": "I think there is a bug in the Javascript Check.\n\nAs far as I understood, the function should remove duplicates and return the length of the filtered Array.\n\nSo as you can see in the stdout the filtered Array contains the correct, non-duplicate values and the length is 2 like the example says too. But what I don't understand is the \"Your/Expected answer\" section. The description says it want the length as number (also the docblock says it), but why the \"answers\" have the array output format? Also where does it get the [1,1] result? \n\nEither I missunderstand something important or it's just buggy.\n\n![image](https://s3-lc-upload.s3.amazonaws.com/users/zorndyuke/image_1519379846.png)\n(Url to image: https://s3-lc-upload.s3.amazonaws.com/users/zorndyuke/image_1519379846.png)"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "In-place modification is expected from you, if you try to create a separate array, then all the distinct elements will be in your auxiliary array, but the original array sill holds all the elements in the same order as it was before. Leetcode is checking order of elements in your original array, not in your auxiliary array! So try to modify original one!\\n\\nAlso, don\\'t remove the duplicates from the array, just shift them at the end of the array (order doesn\\'t matter for duplicate elements). In the end, return the count that represents, how many distinct elements you shifted to the front of the array!"
                    },
                    {
                        "username": "pandora111",
                        "content": "in removing duplicate, how do I delete an element from int [] in Java?"
                    },
                    {
                        "username": "ksiv",
                        "content": "we don\\'t, just move these. That is for \"K\" it\\'s a length of elements to read from the beginning, the rest just ignored."
                    },
                    {
                        "username": "michalhodulofficial",
                        "content": "LinkedHashSet<Integer> linkedHashSet = new LinkedHashSet<>();\n        for(int i = 0;i<nums.length;i++){\n            linkedHashSet.add(nums[i]);\n        }\n        return linkedHashSet.size();\n\nwhy this doenst work guys ? LinkedHashSet adding just unique numbers and then in return is .size() how much of these records is in hasset,in idea everything work"
                    },
                    {
                        "username": "Elsone",
                        "content": "This question is weird and so confusing. I\\'ve managed to get the right answer. you have to modify nums itself.  "
                    },
                    {
                        "username": "SasonBraha",
                        "content": "This questions is terribly worded. "
                    },
                    {
                        "username": "lukeASB",
                        "content": "The phrasing of this question is dumb. \n\nThe question should just say sort the distinct values in the front of the array and return the length.\n\n"
                    }
                ]
            },
            {
                "id": 2068812,
                "content": [
                    {
                        "username": "6CRIPT",
                        "content": "I dont get why if nums size does not matter why then  `return len(list(set(nums)))` does not work as expected :/"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "I dont get that if the size of nums is not important (the problem says) why  `return len(list(set(nums)))` does not work as expected."
                    },
                    {
                        "username": "Ram33code",
                        "content": "\n    let b = [];\n    for(i=0;i<nums.length;i++)\n    {\n        if(b.indexOf(nums[i]) == -1)\n        {\n            b.push(nums[i]);\n        }\n    }\n    return b;\n\n\nWhy does this code doesn't work ?? Can anyone explain ? tried returning b.length as well. This doesn't  work .."
                    },
                    {
                        "username": "SoftwareDevOne",
                        "content": "This is one of the worse coding challenges in leetcode. It is not known exactly what they are asking for. I have tried to return the size of the array that is ordered... I have tried to return the ordered array but without modifying its size, I have tried to return multiple things guessing what they are asking for. Nothing works. it\\'s awful."
                    },
                    {
                        "username": "njtan142",
                        "content": "So you actually need to return the length of sorted array and then manipulate the nums array itself. Could have been specified but they didn\\'t, which lead to a lot of confusion. A HUGE downvote for me"
                    },
                    {
                        "username": "Aayushyu",
                        "content": "ah yes gotta love my non decreasing order arrays"
                    },
                    {
                        "username": "matiasbett22",
                        "content": "I\\'m trying to use Linq to solve this but it doesnt work, anyone has any idea why?"
                    },
                    {
                        "username": "user9133dZ",
                        "content": "hey guys , i am getting output as [1,2,\\'_\\'] what should i do to fix it. i am using python"
                    },
                    {
                        "username": "tamnguyen79685",
                        "content": "uhm runtime error @@"
                    },
                    {
                        "username": "caldempsey",
                        "content": "I like this, it tests your ability to read and meet real world unit tests that are given to you, much better than all the math problems that plague this site :) I think it's one of the best problems on leetcode, its a more realistic test you could give an interview candidate with a unit test sat beside it."
                    }
                ]
            },
            {
                "id": 2068810,
                "content": [
                    {
                        "username": "6CRIPT",
                        "content": "I dont get why if nums size does not matter why then  `return len(list(set(nums)))` does not work as expected :/"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "I dont get that if the size of nums is not important (the problem says) why  `return len(list(set(nums)))` does not work as expected."
                    },
                    {
                        "username": "Ram33code",
                        "content": "\n    let b = [];\n    for(i=0;i<nums.length;i++)\n    {\n        if(b.indexOf(nums[i]) == -1)\n        {\n            b.push(nums[i]);\n        }\n    }\n    return b;\n\n\nWhy does this code doesn't work ?? Can anyone explain ? tried returning b.length as well. This doesn't  work .."
                    },
                    {
                        "username": "SoftwareDevOne",
                        "content": "This is one of the worse coding challenges in leetcode. It is not known exactly what they are asking for. I have tried to return the size of the array that is ordered... I have tried to return the ordered array but without modifying its size, I have tried to return multiple things guessing what they are asking for. Nothing works. it\\'s awful."
                    },
                    {
                        "username": "njtan142",
                        "content": "So you actually need to return the length of sorted array and then manipulate the nums array itself. Could have been specified but they didn\\'t, which lead to a lot of confusion. A HUGE downvote for me"
                    },
                    {
                        "username": "Aayushyu",
                        "content": "ah yes gotta love my non decreasing order arrays"
                    },
                    {
                        "username": "matiasbett22",
                        "content": "I\\'m trying to use Linq to solve this but it doesnt work, anyone has any idea why?"
                    },
                    {
                        "username": "user9133dZ",
                        "content": "hey guys , i am getting output as [1,2,\\'_\\'] what should i do to fix it. i am using python"
                    },
                    {
                        "username": "tamnguyen79685",
                        "content": "uhm runtime error @@"
                    },
                    {
                        "username": "caldempsey",
                        "content": "I like this, it tests your ability to read and meet real world unit tests that are given to you, much better than all the math problems that plague this site :) I think it's one of the best problems on leetcode, its a more realistic test you could give an interview candidate with a unit test sat beside it."
                    }
                ]
            },
            {
                "id": 2068569,
                "content": [
                    {
                        "username": "6CRIPT",
                        "content": "I dont get why if nums size does not matter why then  `return len(list(set(nums)))` does not work as expected :/"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "I dont get that if the size of nums is not important (the problem says) why  `return len(list(set(nums)))` does not work as expected."
                    },
                    {
                        "username": "Ram33code",
                        "content": "\n    let b = [];\n    for(i=0;i<nums.length;i++)\n    {\n        if(b.indexOf(nums[i]) == -1)\n        {\n            b.push(nums[i]);\n        }\n    }\n    return b;\n\n\nWhy does this code doesn't work ?? Can anyone explain ? tried returning b.length as well. This doesn't  work .."
                    },
                    {
                        "username": "SoftwareDevOne",
                        "content": "This is one of the worse coding challenges in leetcode. It is not known exactly what they are asking for. I have tried to return the size of the array that is ordered... I have tried to return the ordered array but without modifying its size, I have tried to return multiple things guessing what they are asking for. Nothing works. it\\'s awful."
                    },
                    {
                        "username": "njtan142",
                        "content": "So you actually need to return the length of sorted array and then manipulate the nums array itself. Could have been specified but they didn\\'t, which lead to a lot of confusion. A HUGE downvote for me"
                    },
                    {
                        "username": "Aayushyu",
                        "content": "ah yes gotta love my non decreasing order arrays"
                    },
                    {
                        "username": "matiasbett22",
                        "content": "I\\'m trying to use Linq to solve this but it doesnt work, anyone has any idea why?"
                    },
                    {
                        "username": "user9133dZ",
                        "content": "hey guys , i am getting output as [1,2,\\'_\\'] what should i do to fix it. i am using python"
                    },
                    {
                        "username": "tamnguyen79685",
                        "content": "uhm runtime error @@"
                    },
                    {
                        "username": "caldempsey",
                        "content": "I like this, it tests your ability to read and meet real world unit tests that are given to you, much better than all the math problems that plague this site :) I think it's one of the best problems on leetcode, its a more realistic test you could give an interview candidate with a unit test sat beside it."
                    }
                ]
            },
            {
                "id": 2067662,
                "content": [
                    {
                        "username": "6CRIPT",
                        "content": "I dont get why if nums size does not matter why then  `return len(list(set(nums)))` does not work as expected :/"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "I dont get that if the size of nums is not important (the problem says) why  `return len(list(set(nums)))` does not work as expected."
                    },
                    {
                        "username": "Ram33code",
                        "content": "\n    let b = [];\n    for(i=0;i<nums.length;i++)\n    {\n        if(b.indexOf(nums[i]) == -1)\n        {\n            b.push(nums[i]);\n        }\n    }\n    return b;\n\n\nWhy does this code doesn't work ?? Can anyone explain ? tried returning b.length as well. This doesn't  work .."
                    },
                    {
                        "username": "SoftwareDevOne",
                        "content": "This is one of the worse coding challenges in leetcode. It is not known exactly what they are asking for. I have tried to return the size of the array that is ordered... I have tried to return the ordered array but without modifying its size, I have tried to return multiple things guessing what they are asking for. Nothing works. it\\'s awful."
                    },
                    {
                        "username": "njtan142",
                        "content": "So you actually need to return the length of sorted array and then manipulate the nums array itself. Could have been specified but they didn\\'t, which lead to a lot of confusion. A HUGE downvote for me"
                    },
                    {
                        "username": "Aayushyu",
                        "content": "ah yes gotta love my non decreasing order arrays"
                    },
                    {
                        "username": "matiasbett22",
                        "content": "I\\'m trying to use Linq to solve this but it doesnt work, anyone has any idea why?"
                    },
                    {
                        "username": "user9133dZ",
                        "content": "hey guys , i am getting output as [1,2,\\'_\\'] what should i do to fix it. i am using python"
                    },
                    {
                        "username": "tamnguyen79685",
                        "content": "uhm runtime error @@"
                    },
                    {
                        "username": "caldempsey",
                        "content": "I like this, it tests your ability to read and meet real world unit tests that are given to you, much better than all the math problems that plague this site :) I think it's one of the best problems on leetcode, its a more realistic test you could give an interview candidate with a unit test sat beside it."
                    }
                ]
            },
            {
                "id": 2065913,
                "content": [
                    {
                        "username": "6CRIPT",
                        "content": "I dont get why if nums size does not matter why then  `return len(list(set(nums)))` does not work as expected :/"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "I dont get that if the size of nums is not important (the problem says) why  `return len(list(set(nums)))` does not work as expected."
                    },
                    {
                        "username": "Ram33code",
                        "content": "\n    let b = [];\n    for(i=0;i<nums.length;i++)\n    {\n        if(b.indexOf(nums[i]) == -1)\n        {\n            b.push(nums[i]);\n        }\n    }\n    return b;\n\n\nWhy does this code doesn't work ?? Can anyone explain ? tried returning b.length as well. This doesn't  work .."
                    },
                    {
                        "username": "SoftwareDevOne",
                        "content": "This is one of the worse coding challenges in leetcode. It is not known exactly what they are asking for. I have tried to return the size of the array that is ordered... I have tried to return the ordered array but without modifying its size, I have tried to return multiple things guessing what they are asking for. Nothing works. it\\'s awful."
                    },
                    {
                        "username": "njtan142",
                        "content": "So you actually need to return the length of sorted array and then manipulate the nums array itself. Could have been specified but they didn\\'t, which lead to a lot of confusion. A HUGE downvote for me"
                    },
                    {
                        "username": "Aayushyu",
                        "content": "ah yes gotta love my non decreasing order arrays"
                    },
                    {
                        "username": "matiasbett22",
                        "content": "I\\'m trying to use Linq to solve this but it doesnt work, anyone has any idea why?"
                    },
                    {
                        "username": "user9133dZ",
                        "content": "hey guys , i am getting output as [1,2,\\'_\\'] what should i do to fix it. i am using python"
                    },
                    {
                        "username": "tamnguyen79685",
                        "content": "uhm runtime error @@"
                    },
                    {
                        "username": "caldempsey",
                        "content": "I like this, it tests your ability to read and meet real world unit tests that are given to you, much better than all the math problems that plague this site :) I think it's one of the best problems on leetcode, its a more realistic test you could give an interview candidate with a unit test sat beside it."
                    }
                ]
            },
            {
                "id": 2065909,
                "content": [
                    {
                        "username": "6CRIPT",
                        "content": "I dont get why if nums size does not matter why then  `return len(list(set(nums)))` does not work as expected :/"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "I dont get that if the size of nums is not important (the problem says) why  `return len(list(set(nums)))` does not work as expected."
                    },
                    {
                        "username": "Ram33code",
                        "content": "\n    let b = [];\n    for(i=0;i<nums.length;i++)\n    {\n        if(b.indexOf(nums[i]) == -1)\n        {\n            b.push(nums[i]);\n        }\n    }\n    return b;\n\n\nWhy does this code doesn't work ?? Can anyone explain ? tried returning b.length as well. This doesn't  work .."
                    },
                    {
                        "username": "SoftwareDevOne",
                        "content": "This is one of the worse coding challenges in leetcode. It is not known exactly what they are asking for. I have tried to return the size of the array that is ordered... I have tried to return the ordered array but without modifying its size, I have tried to return multiple things guessing what they are asking for. Nothing works. it\\'s awful."
                    },
                    {
                        "username": "njtan142",
                        "content": "So you actually need to return the length of sorted array and then manipulate the nums array itself. Could have been specified but they didn\\'t, which lead to a lot of confusion. A HUGE downvote for me"
                    },
                    {
                        "username": "Aayushyu",
                        "content": "ah yes gotta love my non decreasing order arrays"
                    },
                    {
                        "username": "matiasbett22",
                        "content": "I\\'m trying to use Linq to solve this but it doesnt work, anyone has any idea why?"
                    },
                    {
                        "username": "user9133dZ",
                        "content": "hey guys , i am getting output as [1,2,\\'_\\'] what should i do to fix it. i am using python"
                    },
                    {
                        "username": "tamnguyen79685",
                        "content": "uhm runtime error @@"
                    },
                    {
                        "username": "caldempsey",
                        "content": "I like this, it tests your ability to read and meet real world unit tests that are given to you, much better than all the math problems that plague this site :) I think it's one of the best problems on leetcode, its a more realistic test you could give an interview candidate with a unit test sat beside it."
                    }
                ]
            },
            {
                "id": 2058050,
                "content": [
                    {
                        "username": "6CRIPT",
                        "content": "I dont get why if nums size does not matter why then  `return len(list(set(nums)))` does not work as expected :/"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "I dont get that if the size of nums is not important (the problem says) why  `return len(list(set(nums)))` does not work as expected."
                    },
                    {
                        "username": "Ram33code",
                        "content": "\n    let b = [];\n    for(i=0;i<nums.length;i++)\n    {\n        if(b.indexOf(nums[i]) == -1)\n        {\n            b.push(nums[i]);\n        }\n    }\n    return b;\n\n\nWhy does this code doesn't work ?? Can anyone explain ? tried returning b.length as well. This doesn't  work .."
                    },
                    {
                        "username": "SoftwareDevOne",
                        "content": "This is one of the worse coding challenges in leetcode. It is not known exactly what they are asking for. I have tried to return the size of the array that is ordered... I have tried to return the ordered array but without modifying its size, I have tried to return multiple things guessing what they are asking for. Nothing works. it\\'s awful."
                    },
                    {
                        "username": "njtan142",
                        "content": "So you actually need to return the length of sorted array and then manipulate the nums array itself. Could have been specified but they didn\\'t, which lead to a lot of confusion. A HUGE downvote for me"
                    },
                    {
                        "username": "Aayushyu",
                        "content": "ah yes gotta love my non decreasing order arrays"
                    },
                    {
                        "username": "matiasbett22",
                        "content": "I\\'m trying to use Linq to solve this but it doesnt work, anyone has any idea why?"
                    },
                    {
                        "username": "user9133dZ",
                        "content": "hey guys , i am getting output as [1,2,\\'_\\'] what should i do to fix it. i am using python"
                    },
                    {
                        "username": "tamnguyen79685",
                        "content": "uhm runtime error @@"
                    },
                    {
                        "username": "caldempsey",
                        "content": "I like this, it tests your ability to read and meet real world unit tests that are given to you, much better than all the math problems that plague this site :) I think it's one of the best problems on leetcode, its a more realistic test you could give an interview candidate with a unit test sat beside it."
                    }
                ]
            },
            {
                "id": 2057671,
                "content": [
                    {
                        "username": "6CRIPT",
                        "content": "I dont get why if nums size does not matter why then  `return len(list(set(nums)))` does not work as expected :/"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "I dont get that if the size of nums is not important (the problem says) why  `return len(list(set(nums)))` does not work as expected."
                    },
                    {
                        "username": "Ram33code",
                        "content": "\n    let b = [];\n    for(i=0;i<nums.length;i++)\n    {\n        if(b.indexOf(nums[i]) == -1)\n        {\n            b.push(nums[i]);\n        }\n    }\n    return b;\n\n\nWhy does this code doesn't work ?? Can anyone explain ? tried returning b.length as well. This doesn't  work .."
                    },
                    {
                        "username": "SoftwareDevOne",
                        "content": "This is one of the worse coding challenges in leetcode. It is not known exactly what they are asking for. I have tried to return the size of the array that is ordered... I have tried to return the ordered array but without modifying its size, I have tried to return multiple things guessing what they are asking for. Nothing works. it\\'s awful."
                    },
                    {
                        "username": "njtan142",
                        "content": "So you actually need to return the length of sorted array and then manipulate the nums array itself. Could have been specified but they didn\\'t, which lead to a lot of confusion. A HUGE downvote for me"
                    },
                    {
                        "username": "Aayushyu",
                        "content": "ah yes gotta love my non decreasing order arrays"
                    },
                    {
                        "username": "matiasbett22",
                        "content": "I\\'m trying to use Linq to solve this but it doesnt work, anyone has any idea why?"
                    },
                    {
                        "username": "user9133dZ",
                        "content": "hey guys , i am getting output as [1,2,\\'_\\'] what should i do to fix it. i am using python"
                    },
                    {
                        "username": "tamnguyen79685",
                        "content": "uhm runtime error @@"
                    },
                    {
                        "username": "caldempsey",
                        "content": "I like this, it tests your ability to read and meet real world unit tests that are given to you, much better than all the math problems that plague this site :) I think it's one of the best problems on leetcode, its a more realistic test you could give an interview candidate with a unit test sat beside it."
                    }
                ]
            },
            {
                "id": 2057431,
                "content": [
                    {
                        "username": "6CRIPT",
                        "content": "I dont get why if nums size does not matter why then  `return len(list(set(nums)))` does not work as expected :/"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "I dont get that if the size of nums is not important (the problem says) why  `return len(list(set(nums)))` does not work as expected."
                    },
                    {
                        "username": "Ram33code",
                        "content": "\n    let b = [];\n    for(i=0;i<nums.length;i++)\n    {\n        if(b.indexOf(nums[i]) == -1)\n        {\n            b.push(nums[i]);\n        }\n    }\n    return b;\n\n\nWhy does this code doesn't work ?? Can anyone explain ? tried returning b.length as well. This doesn't  work .."
                    },
                    {
                        "username": "SoftwareDevOne",
                        "content": "This is one of the worse coding challenges in leetcode. It is not known exactly what they are asking for. I have tried to return the size of the array that is ordered... I have tried to return the ordered array but without modifying its size, I have tried to return multiple things guessing what they are asking for. Nothing works. it\\'s awful."
                    },
                    {
                        "username": "njtan142",
                        "content": "So you actually need to return the length of sorted array and then manipulate the nums array itself. Could have been specified but they didn\\'t, which lead to a lot of confusion. A HUGE downvote for me"
                    },
                    {
                        "username": "Aayushyu",
                        "content": "ah yes gotta love my non decreasing order arrays"
                    },
                    {
                        "username": "matiasbett22",
                        "content": "I\\'m trying to use Linq to solve this but it doesnt work, anyone has any idea why?"
                    },
                    {
                        "username": "user9133dZ",
                        "content": "hey guys , i am getting output as [1,2,\\'_\\'] what should i do to fix it. i am using python"
                    },
                    {
                        "username": "tamnguyen79685",
                        "content": "uhm runtime error @@"
                    },
                    {
                        "username": "caldempsey",
                        "content": "I like this, it tests your ability to read and meet real world unit tests that are given to you, much better than all the math problems that plague this site :) I think it's one of the best problems on leetcode, its a more realistic test you could give an interview candidate with a unit test sat beside it."
                    }
                ]
            },
            {
                "id": 2054865,
                "content": [
                    {
                        "username": "6CRIPT",
                        "content": "I dont get why if nums size does not matter why then  `return len(list(set(nums)))` does not work as expected :/"
                    },
                    {
                        "username": "6CRIPT",
                        "content": "I dont get that if the size of nums is not important (the problem says) why  `return len(list(set(nums)))` does not work as expected."
                    },
                    {
                        "username": "Ram33code",
                        "content": "\n    let b = [];\n    for(i=0;i<nums.length;i++)\n    {\n        if(b.indexOf(nums[i]) == -1)\n        {\n            b.push(nums[i]);\n        }\n    }\n    return b;\n\n\nWhy does this code doesn't work ?? Can anyone explain ? tried returning b.length as well. This doesn't  work .."
                    },
                    {
                        "username": "SoftwareDevOne",
                        "content": "This is one of the worse coding challenges in leetcode. It is not known exactly what they are asking for. I have tried to return the size of the array that is ordered... I have tried to return the ordered array but without modifying its size, I have tried to return multiple things guessing what they are asking for. Nothing works. it\\'s awful."
                    },
                    {
                        "username": "njtan142",
                        "content": "So you actually need to return the length of sorted array and then manipulate the nums array itself. Could have been specified but they didn\\'t, which lead to a lot of confusion. A HUGE downvote for me"
                    },
                    {
                        "username": "Aayushyu",
                        "content": "ah yes gotta love my non decreasing order arrays"
                    },
                    {
                        "username": "matiasbett22",
                        "content": "I\\'m trying to use Linq to solve this but it doesnt work, anyone has any idea why?"
                    },
                    {
                        "username": "user9133dZ",
                        "content": "hey guys , i am getting output as [1,2,\\'_\\'] what should i do to fix it. i am using python"
                    },
                    {
                        "username": "tamnguyen79685",
                        "content": "uhm runtime error @@"
                    },
                    {
                        "username": "caldempsey",
                        "content": "I like this, it tests your ability to read and meet real world unit tests that are given to you, much better than all the math problems that plague this site :) I think it's one of the best problems on leetcode, its a more realistic test you could give an interview candidate with a unit test sat beside it."
                    }
                ]
            },
            {
                "id": 2053665,
                "content": [
                    {
                        "username": "sivaunaccepting",
                        "content": "why no one talking about usage of hash set for this question?"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "How to replace your duplicated numbers with a character in TypeScript while the array has number type?"
                    },
                    {
                        "username": "harishonfire2000",
                        "content": "can anyone explain why this is not working\\n `var removeDuplicates = function(nums) {\\n    var i= Math.max(...nums)\\n     var a= Math.min(...nums)\\n      var arr=[]\\n     for(var j=a;j<=i;j++){\\n        arr.push(j)\\n     }\\n     \\n   return arr\\n};`"
                    },
                    {
                        "username": "lostghost",
                        "content": "Why the hell is this invalid?\\nInput\\n`[0,0,1,1,1,2,2,3,3,4]`\\nOutput\\n`[0,1,2,3,4,2,2,3,3,4]`\\nExpected\\n`[0,1,2,3,4]`"
                    },
                    {
                        "username": "JWPB",
                        "content": "Can someone tell me, why I can\\'t use here a Python `set` function? It takes care of duplicates automatically, but here it doesn\\'t work. I don\\'t understand."
                    },
                    {
                        "username": "chernosmaga",
                        "content": "I don\\'t get it. They want me to get [1,2] and I got it in IDEA okay, but the output here is [1,1]. How does this even work?"
                    },
                    {
                        "username": "user6593XG",
                        "content": "Question: Could you in theory transform the array into a set and then back?\\n"
                    },
                    {
                        "username": "satardekaraary47",
                        "content": "Hello Guys \\nI don\\'t solve this problem using DSA as I don\\'t study the DSA part yet. I solve this with basics using only loops and if. \\nWe just have to check weather two adjacent numbers are dissimilar or not. if they are dissimilar then we stored the number in new array at 0th position and increase its index. if they are similar then we just iterate the loop until it satisfies the condition. The range in which the condition don\\'t satisfied is the range where numbers are similar. And after total iteration of loops we just stored the last number in the new array . Also to count unique number just count it in the if statement and print at the last."
                    },
                    {
                        "username": "taikhoanhocchung2",
                        "content": "where am i wrong ?\\n\\n\\n public class Solution {\\n    public int RemoveDuplicates(int[] nums) {\\n        // ArrayList duplicateNums = new ArrayList();\\n\\n        \\n\\n        List<int> result = new List<int>();\\n\\n        // duplicateNums.Add(nums[0]);\\n\\n        int[] duplicateNums = new int[100];\\n        duplicateNums[0] = (nums[0]);\\n        result.Add(nums[0]);\\n        for(int i = 1; i< nums.Length; i++) {\\n            Console.WriteLine(\"Value \" + i + \" \" + nums[i]);\\n            if(!Array.Exists(duplicateNums, e => e ==  nums[i] )) {\\n                Console.WriteLine(\"In exist \"  + nums[i]);\\n                duplicateNums[i] = (nums[i]);\\n                result.Add(nums[i]);\\n            }\\n        }\\n\\n        Console.WriteLine(\"Length is\"+ result.Count);\\n\\n        return result.Count;\\n    }\\n}"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "Here are a few issues in your code:\\n\\nArray Index: You are setting duplicateNums[i] = nums[i];. This will overwrite some elements in the duplicateNums array which should not be the case.\\n\\nArray Initialization: You have initialized duplicateNums as an array of length 100 filled with zeros. This will cause problems if the number 0 exists in the original array.\\n\\nEfficiency: Using Array.Exists() in each iteration would make the code O(n^2), where n is the length of the array."
                    },
                    {
                        "username": "talekarss123",
                        "content": "review the test cases for javascript program, workable program isn\\'t accepting.\\nYou don\\'t decide the approach of code "
                    }
                ]
            },
            {
                "id": 2049758,
                "content": [
                    {
                        "username": "sivaunaccepting",
                        "content": "why no one talking about usage of hash set for this question?"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "How to replace your duplicated numbers with a character in TypeScript while the array has number type?"
                    },
                    {
                        "username": "harishonfire2000",
                        "content": "can anyone explain why this is not working\\n `var removeDuplicates = function(nums) {\\n    var i= Math.max(...nums)\\n     var a= Math.min(...nums)\\n      var arr=[]\\n     for(var j=a;j<=i;j++){\\n        arr.push(j)\\n     }\\n     \\n   return arr\\n};`"
                    },
                    {
                        "username": "lostghost",
                        "content": "Why the hell is this invalid?\\nInput\\n`[0,0,1,1,1,2,2,3,3,4]`\\nOutput\\n`[0,1,2,3,4,2,2,3,3,4]`\\nExpected\\n`[0,1,2,3,4]`"
                    },
                    {
                        "username": "JWPB",
                        "content": "Can someone tell me, why I can\\'t use here a Python `set` function? It takes care of duplicates automatically, but here it doesn\\'t work. I don\\'t understand."
                    },
                    {
                        "username": "chernosmaga",
                        "content": "I don\\'t get it. They want me to get [1,2] and I got it in IDEA okay, but the output here is [1,1]. How does this even work?"
                    },
                    {
                        "username": "user6593XG",
                        "content": "Question: Could you in theory transform the array into a set and then back?\\n"
                    },
                    {
                        "username": "satardekaraary47",
                        "content": "Hello Guys \\nI don\\'t solve this problem using DSA as I don\\'t study the DSA part yet. I solve this with basics using only loops and if. \\nWe just have to check weather two adjacent numbers are dissimilar or not. if they are dissimilar then we stored the number in new array at 0th position and increase its index. if they are similar then we just iterate the loop until it satisfies the condition. The range in which the condition don\\'t satisfied is the range where numbers are similar. And after total iteration of loops we just stored the last number in the new array . Also to count unique number just count it in the if statement and print at the last."
                    },
                    {
                        "username": "taikhoanhocchung2",
                        "content": "where am i wrong ?\\n\\n\\n public class Solution {\\n    public int RemoveDuplicates(int[] nums) {\\n        // ArrayList duplicateNums = new ArrayList();\\n\\n        \\n\\n        List<int> result = new List<int>();\\n\\n        // duplicateNums.Add(nums[0]);\\n\\n        int[] duplicateNums = new int[100];\\n        duplicateNums[0] = (nums[0]);\\n        result.Add(nums[0]);\\n        for(int i = 1; i< nums.Length; i++) {\\n            Console.WriteLine(\"Value \" + i + \" \" + nums[i]);\\n            if(!Array.Exists(duplicateNums, e => e ==  nums[i] )) {\\n                Console.WriteLine(\"In exist \"  + nums[i]);\\n                duplicateNums[i] = (nums[i]);\\n                result.Add(nums[i]);\\n            }\\n        }\\n\\n        Console.WriteLine(\"Length is\"+ result.Count);\\n\\n        return result.Count;\\n    }\\n}"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "Here are a few issues in your code:\\n\\nArray Index: You are setting duplicateNums[i] = nums[i];. This will overwrite some elements in the duplicateNums array which should not be the case.\\n\\nArray Initialization: You have initialized duplicateNums as an array of length 100 filled with zeros. This will cause problems if the number 0 exists in the original array.\\n\\nEfficiency: Using Array.Exists() in each iteration would make the code O(n^2), where n is the length of the array."
                    },
                    {
                        "username": "talekarss123",
                        "content": "review the test cases for javascript program, workable program isn\\'t accepting.\\nYou don\\'t decide the approach of code "
                    }
                ]
            },
            {
                "id": 2049457,
                "content": [
                    {
                        "username": "sivaunaccepting",
                        "content": "why no one talking about usage of hash set for this question?"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "How to replace your duplicated numbers with a character in TypeScript while the array has number type?"
                    },
                    {
                        "username": "harishonfire2000",
                        "content": "can anyone explain why this is not working\\n `var removeDuplicates = function(nums) {\\n    var i= Math.max(...nums)\\n     var a= Math.min(...nums)\\n      var arr=[]\\n     for(var j=a;j<=i;j++){\\n        arr.push(j)\\n     }\\n     \\n   return arr\\n};`"
                    },
                    {
                        "username": "lostghost",
                        "content": "Why the hell is this invalid?\\nInput\\n`[0,0,1,1,1,2,2,3,3,4]`\\nOutput\\n`[0,1,2,3,4,2,2,3,3,4]`\\nExpected\\n`[0,1,2,3,4]`"
                    },
                    {
                        "username": "JWPB",
                        "content": "Can someone tell me, why I can\\'t use here a Python `set` function? It takes care of duplicates automatically, but here it doesn\\'t work. I don\\'t understand."
                    },
                    {
                        "username": "chernosmaga",
                        "content": "I don\\'t get it. They want me to get [1,2] and I got it in IDEA okay, but the output here is [1,1]. How does this even work?"
                    },
                    {
                        "username": "user6593XG",
                        "content": "Question: Could you in theory transform the array into a set and then back?\\n"
                    },
                    {
                        "username": "satardekaraary47",
                        "content": "Hello Guys \\nI don\\'t solve this problem using DSA as I don\\'t study the DSA part yet. I solve this with basics using only loops and if. \\nWe just have to check weather two adjacent numbers are dissimilar or not. if they are dissimilar then we stored the number in new array at 0th position and increase its index. if they are similar then we just iterate the loop until it satisfies the condition. The range in which the condition don\\'t satisfied is the range where numbers are similar. And after total iteration of loops we just stored the last number in the new array . Also to count unique number just count it in the if statement and print at the last."
                    },
                    {
                        "username": "taikhoanhocchung2",
                        "content": "where am i wrong ?\\n\\n\\n public class Solution {\\n    public int RemoveDuplicates(int[] nums) {\\n        // ArrayList duplicateNums = new ArrayList();\\n\\n        \\n\\n        List<int> result = new List<int>();\\n\\n        // duplicateNums.Add(nums[0]);\\n\\n        int[] duplicateNums = new int[100];\\n        duplicateNums[0] = (nums[0]);\\n        result.Add(nums[0]);\\n        for(int i = 1; i< nums.Length; i++) {\\n            Console.WriteLine(\"Value \" + i + \" \" + nums[i]);\\n            if(!Array.Exists(duplicateNums, e => e ==  nums[i] )) {\\n                Console.WriteLine(\"In exist \"  + nums[i]);\\n                duplicateNums[i] = (nums[i]);\\n                result.Add(nums[i]);\\n            }\\n        }\\n\\n        Console.WriteLine(\"Length is\"+ result.Count);\\n\\n        return result.Count;\\n    }\\n}"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "Here are a few issues in your code:\\n\\nArray Index: You are setting duplicateNums[i] = nums[i];. This will overwrite some elements in the duplicateNums array which should not be the case.\\n\\nArray Initialization: You have initialized duplicateNums as an array of length 100 filled with zeros. This will cause problems if the number 0 exists in the original array.\\n\\nEfficiency: Using Array.Exists() in each iteration would make the code O(n^2), where n is the length of the array."
                    },
                    {
                        "username": "talekarss123",
                        "content": "review the test cases for javascript program, workable program isn\\'t accepting.\\nYou don\\'t decide the approach of code "
                    }
                ]
            },
            {
                "id": 2049192,
                "content": [
                    {
                        "username": "sivaunaccepting",
                        "content": "why no one talking about usage of hash set for this question?"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "How to replace your duplicated numbers with a character in TypeScript while the array has number type?"
                    },
                    {
                        "username": "harishonfire2000",
                        "content": "can anyone explain why this is not working\\n `var removeDuplicates = function(nums) {\\n    var i= Math.max(...nums)\\n     var a= Math.min(...nums)\\n      var arr=[]\\n     for(var j=a;j<=i;j++){\\n        arr.push(j)\\n     }\\n     \\n   return arr\\n};`"
                    },
                    {
                        "username": "lostghost",
                        "content": "Why the hell is this invalid?\\nInput\\n`[0,0,1,1,1,2,2,3,3,4]`\\nOutput\\n`[0,1,2,3,4,2,2,3,3,4]`\\nExpected\\n`[0,1,2,3,4]`"
                    },
                    {
                        "username": "JWPB",
                        "content": "Can someone tell me, why I can\\'t use here a Python `set` function? It takes care of duplicates automatically, but here it doesn\\'t work. I don\\'t understand."
                    },
                    {
                        "username": "chernosmaga",
                        "content": "I don\\'t get it. They want me to get [1,2] and I got it in IDEA okay, but the output here is [1,1]. How does this even work?"
                    },
                    {
                        "username": "user6593XG",
                        "content": "Question: Could you in theory transform the array into a set and then back?\\n"
                    },
                    {
                        "username": "satardekaraary47",
                        "content": "Hello Guys \\nI don\\'t solve this problem using DSA as I don\\'t study the DSA part yet. I solve this with basics using only loops and if. \\nWe just have to check weather two adjacent numbers are dissimilar or not. if they are dissimilar then we stored the number in new array at 0th position and increase its index. if they are similar then we just iterate the loop until it satisfies the condition. The range in which the condition don\\'t satisfied is the range where numbers are similar. And after total iteration of loops we just stored the last number in the new array . Also to count unique number just count it in the if statement and print at the last."
                    },
                    {
                        "username": "taikhoanhocchung2",
                        "content": "where am i wrong ?\\n\\n\\n public class Solution {\\n    public int RemoveDuplicates(int[] nums) {\\n        // ArrayList duplicateNums = new ArrayList();\\n\\n        \\n\\n        List<int> result = new List<int>();\\n\\n        // duplicateNums.Add(nums[0]);\\n\\n        int[] duplicateNums = new int[100];\\n        duplicateNums[0] = (nums[0]);\\n        result.Add(nums[0]);\\n        for(int i = 1; i< nums.Length; i++) {\\n            Console.WriteLine(\"Value \" + i + \" \" + nums[i]);\\n            if(!Array.Exists(duplicateNums, e => e ==  nums[i] )) {\\n                Console.WriteLine(\"In exist \"  + nums[i]);\\n                duplicateNums[i] = (nums[i]);\\n                result.Add(nums[i]);\\n            }\\n        }\\n\\n        Console.WriteLine(\"Length is\"+ result.Count);\\n\\n        return result.Count;\\n    }\\n}"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "Here are a few issues in your code:\\n\\nArray Index: You are setting duplicateNums[i] = nums[i];. This will overwrite some elements in the duplicateNums array which should not be the case.\\n\\nArray Initialization: You have initialized duplicateNums as an array of length 100 filled with zeros. This will cause problems if the number 0 exists in the original array.\\n\\nEfficiency: Using Array.Exists() in each iteration would make the code O(n^2), where n is the length of the array."
                    },
                    {
                        "username": "talekarss123",
                        "content": "review the test cases for javascript program, workable program isn\\'t accepting.\\nYou don\\'t decide the approach of code "
                    }
                ]
            },
            {
                "id": 2048461,
                "content": [
                    {
                        "username": "sivaunaccepting",
                        "content": "why no one talking about usage of hash set for this question?"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "How to replace your duplicated numbers with a character in TypeScript while the array has number type?"
                    },
                    {
                        "username": "harishonfire2000",
                        "content": "can anyone explain why this is not working\\n `var removeDuplicates = function(nums) {\\n    var i= Math.max(...nums)\\n     var a= Math.min(...nums)\\n      var arr=[]\\n     for(var j=a;j<=i;j++){\\n        arr.push(j)\\n     }\\n     \\n   return arr\\n};`"
                    },
                    {
                        "username": "lostghost",
                        "content": "Why the hell is this invalid?\\nInput\\n`[0,0,1,1,1,2,2,3,3,4]`\\nOutput\\n`[0,1,2,3,4,2,2,3,3,4]`\\nExpected\\n`[0,1,2,3,4]`"
                    },
                    {
                        "username": "JWPB",
                        "content": "Can someone tell me, why I can\\'t use here a Python `set` function? It takes care of duplicates automatically, but here it doesn\\'t work. I don\\'t understand."
                    },
                    {
                        "username": "chernosmaga",
                        "content": "I don\\'t get it. They want me to get [1,2] and I got it in IDEA okay, but the output here is [1,1]. How does this even work?"
                    },
                    {
                        "username": "user6593XG",
                        "content": "Question: Could you in theory transform the array into a set and then back?\\n"
                    },
                    {
                        "username": "satardekaraary47",
                        "content": "Hello Guys \\nI don\\'t solve this problem using DSA as I don\\'t study the DSA part yet. I solve this with basics using only loops and if. \\nWe just have to check weather two adjacent numbers are dissimilar or not. if they are dissimilar then we stored the number in new array at 0th position and increase its index. if they are similar then we just iterate the loop until it satisfies the condition. The range in which the condition don\\'t satisfied is the range where numbers are similar. And after total iteration of loops we just stored the last number in the new array . Also to count unique number just count it in the if statement and print at the last."
                    },
                    {
                        "username": "taikhoanhocchung2",
                        "content": "where am i wrong ?\\n\\n\\n public class Solution {\\n    public int RemoveDuplicates(int[] nums) {\\n        // ArrayList duplicateNums = new ArrayList();\\n\\n        \\n\\n        List<int> result = new List<int>();\\n\\n        // duplicateNums.Add(nums[0]);\\n\\n        int[] duplicateNums = new int[100];\\n        duplicateNums[0] = (nums[0]);\\n        result.Add(nums[0]);\\n        for(int i = 1; i< nums.Length; i++) {\\n            Console.WriteLine(\"Value \" + i + \" \" + nums[i]);\\n            if(!Array.Exists(duplicateNums, e => e ==  nums[i] )) {\\n                Console.WriteLine(\"In exist \"  + nums[i]);\\n                duplicateNums[i] = (nums[i]);\\n                result.Add(nums[i]);\\n            }\\n        }\\n\\n        Console.WriteLine(\"Length is\"+ result.Count);\\n\\n        return result.Count;\\n    }\\n}"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "Here are a few issues in your code:\\n\\nArray Index: You are setting duplicateNums[i] = nums[i];. This will overwrite some elements in the duplicateNums array which should not be the case.\\n\\nArray Initialization: You have initialized duplicateNums as an array of length 100 filled with zeros. This will cause problems if the number 0 exists in the original array.\\n\\nEfficiency: Using Array.Exists() in each iteration would make the code O(n^2), where n is the length of the array."
                    },
                    {
                        "username": "talekarss123",
                        "content": "review the test cases for javascript program, workable program isn\\'t accepting.\\nYou don\\'t decide the approach of code "
                    }
                ]
            },
            {
                "id": 2046665,
                "content": [
                    {
                        "username": "sivaunaccepting",
                        "content": "why no one talking about usage of hash set for this question?"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "How to replace your duplicated numbers with a character in TypeScript while the array has number type?"
                    },
                    {
                        "username": "harishonfire2000",
                        "content": "can anyone explain why this is not working\\n `var removeDuplicates = function(nums) {\\n    var i= Math.max(...nums)\\n     var a= Math.min(...nums)\\n      var arr=[]\\n     for(var j=a;j<=i;j++){\\n        arr.push(j)\\n     }\\n     \\n   return arr\\n};`"
                    },
                    {
                        "username": "lostghost",
                        "content": "Why the hell is this invalid?\\nInput\\n`[0,0,1,1,1,2,2,3,3,4]`\\nOutput\\n`[0,1,2,3,4,2,2,3,3,4]`\\nExpected\\n`[0,1,2,3,4]`"
                    },
                    {
                        "username": "JWPB",
                        "content": "Can someone tell me, why I can\\'t use here a Python `set` function? It takes care of duplicates automatically, but here it doesn\\'t work. I don\\'t understand."
                    },
                    {
                        "username": "chernosmaga",
                        "content": "I don\\'t get it. They want me to get [1,2] and I got it in IDEA okay, but the output here is [1,1]. How does this even work?"
                    },
                    {
                        "username": "user6593XG",
                        "content": "Question: Could you in theory transform the array into a set and then back?\\n"
                    },
                    {
                        "username": "satardekaraary47",
                        "content": "Hello Guys \\nI don\\'t solve this problem using DSA as I don\\'t study the DSA part yet. I solve this with basics using only loops and if. \\nWe just have to check weather two adjacent numbers are dissimilar or not. if they are dissimilar then we stored the number in new array at 0th position and increase its index. if they are similar then we just iterate the loop until it satisfies the condition. The range in which the condition don\\'t satisfied is the range where numbers are similar. And after total iteration of loops we just stored the last number in the new array . Also to count unique number just count it in the if statement and print at the last."
                    },
                    {
                        "username": "taikhoanhocchung2",
                        "content": "where am i wrong ?\\n\\n\\n public class Solution {\\n    public int RemoveDuplicates(int[] nums) {\\n        // ArrayList duplicateNums = new ArrayList();\\n\\n        \\n\\n        List<int> result = new List<int>();\\n\\n        // duplicateNums.Add(nums[0]);\\n\\n        int[] duplicateNums = new int[100];\\n        duplicateNums[0] = (nums[0]);\\n        result.Add(nums[0]);\\n        for(int i = 1; i< nums.Length; i++) {\\n            Console.WriteLine(\"Value \" + i + \" \" + nums[i]);\\n            if(!Array.Exists(duplicateNums, e => e ==  nums[i] )) {\\n                Console.WriteLine(\"In exist \"  + nums[i]);\\n                duplicateNums[i] = (nums[i]);\\n                result.Add(nums[i]);\\n            }\\n        }\\n\\n        Console.WriteLine(\"Length is\"+ result.Count);\\n\\n        return result.Count;\\n    }\\n}"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "Here are a few issues in your code:\\n\\nArray Index: You are setting duplicateNums[i] = nums[i];. This will overwrite some elements in the duplicateNums array which should not be the case.\\n\\nArray Initialization: You have initialized duplicateNums as an array of length 100 filled with zeros. This will cause problems if the number 0 exists in the original array.\\n\\nEfficiency: Using Array.Exists() in each iteration would make the code O(n^2), where n is the length of the array."
                    },
                    {
                        "username": "talekarss123",
                        "content": "review the test cases for javascript program, workable program isn\\'t accepting.\\nYou don\\'t decide the approach of code "
                    }
                ]
            },
            {
                "id": 2045707,
                "content": [
                    {
                        "username": "sivaunaccepting",
                        "content": "why no one talking about usage of hash set for this question?"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "How to replace your duplicated numbers with a character in TypeScript while the array has number type?"
                    },
                    {
                        "username": "harishonfire2000",
                        "content": "can anyone explain why this is not working\\n `var removeDuplicates = function(nums) {\\n    var i= Math.max(...nums)\\n     var a= Math.min(...nums)\\n      var arr=[]\\n     for(var j=a;j<=i;j++){\\n        arr.push(j)\\n     }\\n     \\n   return arr\\n};`"
                    },
                    {
                        "username": "lostghost",
                        "content": "Why the hell is this invalid?\\nInput\\n`[0,0,1,1,1,2,2,3,3,4]`\\nOutput\\n`[0,1,2,3,4,2,2,3,3,4]`\\nExpected\\n`[0,1,2,3,4]`"
                    },
                    {
                        "username": "JWPB",
                        "content": "Can someone tell me, why I can\\'t use here a Python `set` function? It takes care of duplicates automatically, but here it doesn\\'t work. I don\\'t understand."
                    },
                    {
                        "username": "chernosmaga",
                        "content": "I don\\'t get it. They want me to get [1,2] and I got it in IDEA okay, but the output here is [1,1]. How does this even work?"
                    },
                    {
                        "username": "user6593XG",
                        "content": "Question: Could you in theory transform the array into a set and then back?\\n"
                    },
                    {
                        "username": "satardekaraary47",
                        "content": "Hello Guys \\nI don\\'t solve this problem using DSA as I don\\'t study the DSA part yet. I solve this with basics using only loops and if. \\nWe just have to check weather two adjacent numbers are dissimilar or not. if they are dissimilar then we stored the number in new array at 0th position and increase its index. if they are similar then we just iterate the loop until it satisfies the condition. The range in which the condition don\\'t satisfied is the range where numbers are similar. And after total iteration of loops we just stored the last number in the new array . Also to count unique number just count it in the if statement and print at the last."
                    },
                    {
                        "username": "taikhoanhocchung2",
                        "content": "where am i wrong ?\\n\\n\\n public class Solution {\\n    public int RemoveDuplicates(int[] nums) {\\n        // ArrayList duplicateNums = new ArrayList();\\n\\n        \\n\\n        List<int> result = new List<int>();\\n\\n        // duplicateNums.Add(nums[0]);\\n\\n        int[] duplicateNums = new int[100];\\n        duplicateNums[0] = (nums[0]);\\n        result.Add(nums[0]);\\n        for(int i = 1; i< nums.Length; i++) {\\n            Console.WriteLine(\"Value \" + i + \" \" + nums[i]);\\n            if(!Array.Exists(duplicateNums, e => e ==  nums[i] )) {\\n                Console.WriteLine(\"In exist \"  + nums[i]);\\n                duplicateNums[i] = (nums[i]);\\n                result.Add(nums[i]);\\n            }\\n        }\\n\\n        Console.WriteLine(\"Length is\"+ result.Count);\\n\\n        return result.Count;\\n    }\\n}"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "Here are a few issues in your code:\\n\\nArray Index: You are setting duplicateNums[i] = nums[i];. This will overwrite some elements in the duplicateNums array which should not be the case.\\n\\nArray Initialization: You have initialized duplicateNums as an array of length 100 filled with zeros. This will cause problems if the number 0 exists in the original array.\\n\\nEfficiency: Using Array.Exists() in each iteration would make the code O(n^2), where n is the length of the array."
                    },
                    {
                        "username": "talekarss123",
                        "content": "review the test cases for javascript program, workable program isn\\'t accepting.\\nYou don\\'t decide the approach of code "
                    }
                ]
            },
            {
                "id": 2045450,
                "content": [
                    {
                        "username": "sivaunaccepting",
                        "content": "why no one talking about usage of hash set for this question?"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "How to replace your duplicated numbers with a character in TypeScript while the array has number type?"
                    },
                    {
                        "username": "harishonfire2000",
                        "content": "can anyone explain why this is not working\\n `var removeDuplicates = function(nums) {\\n    var i= Math.max(...nums)\\n     var a= Math.min(...nums)\\n      var arr=[]\\n     for(var j=a;j<=i;j++){\\n        arr.push(j)\\n     }\\n     \\n   return arr\\n};`"
                    },
                    {
                        "username": "lostghost",
                        "content": "Why the hell is this invalid?\\nInput\\n`[0,0,1,1,1,2,2,3,3,4]`\\nOutput\\n`[0,1,2,3,4,2,2,3,3,4]`\\nExpected\\n`[0,1,2,3,4]`"
                    },
                    {
                        "username": "JWPB",
                        "content": "Can someone tell me, why I can\\'t use here a Python `set` function? It takes care of duplicates automatically, but here it doesn\\'t work. I don\\'t understand."
                    },
                    {
                        "username": "chernosmaga",
                        "content": "I don\\'t get it. They want me to get [1,2] and I got it in IDEA okay, but the output here is [1,1]. How does this even work?"
                    },
                    {
                        "username": "user6593XG",
                        "content": "Question: Could you in theory transform the array into a set and then back?\\n"
                    },
                    {
                        "username": "satardekaraary47",
                        "content": "Hello Guys \\nI don\\'t solve this problem using DSA as I don\\'t study the DSA part yet. I solve this with basics using only loops and if. \\nWe just have to check weather two adjacent numbers are dissimilar or not. if they are dissimilar then we stored the number in new array at 0th position and increase its index. if they are similar then we just iterate the loop until it satisfies the condition. The range in which the condition don\\'t satisfied is the range where numbers are similar. And after total iteration of loops we just stored the last number in the new array . Also to count unique number just count it in the if statement and print at the last."
                    },
                    {
                        "username": "taikhoanhocchung2",
                        "content": "where am i wrong ?\\n\\n\\n public class Solution {\\n    public int RemoveDuplicates(int[] nums) {\\n        // ArrayList duplicateNums = new ArrayList();\\n\\n        \\n\\n        List<int> result = new List<int>();\\n\\n        // duplicateNums.Add(nums[0]);\\n\\n        int[] duplicateNums = new int[100];\\n        duplicateNums[0] = (nums[0]);\\n        result.Add(nums[0]);\\n        for(int i = 1; i< nums.Length; i++) {\\n            Console.WriteLine(\"Value \" + i + \" \" + nums[i]);\\n            if(!Array.Exists(duplicateNums, e => e ==  nums[i] )) {\\n                Console.WriteLine(\"In exist \"  + nums[i]);\\n                duplicateNums[i] = (nums[i]);\\n                result.Add(nums[i]);\\n            }\\n        }\\n\\n        Console.WriteLine(\"Length is\"+ result.Count);\\n\\n        return result.Count;\\n    }\\n}"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "Here are a few issues in your code:\\n\\nArray Index: You are setting duplicateNums[i] = nums[i];. This will overwrite some elements in the duplicateNums array which should not be the case.\\n\\nArray Initialization: You have initialized duplicateNums as an array of length 100 filled with zeros. This will cause problems if the number 0 exists in the original array.\\n\\nEfficiency: Using Array.Exists() in each iteration would make the code O(n^2), where n is the length of the array."
                    },
                    {
                        "username": "talekarss123",
                        "content": "review the test cases for javascript program, workable program isn\\'t accepting.\\nYou don\\'t decide the approach of code "
                    }
                ]
            },
            {
                "id": 2045055,
                "content": [
                    {
                        "username": "sivaunaccepting",
                        "content": "why no one talking about usage of hash set for this question?"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "How to replace your duplicated numbers with a character in TypeScript while the array has number type?"
                    },
                    {
                        "username": "harishonfire2000",
                        "content": "can anyone explain why this is not working\\n `var removeDuplicates = function(nums) {\\n    var i= Math.max(...nums)\\n     var a= Math.min(...nums)\\n      var arr=[]\\n     for(var j=a;j<=i;j++){\\n        arr.push(j)\\n     }\\n     \\n   return arr\\n};`"
                    },
                    {
                        "username": "lostghost",
                        "content": "Why the hell is this invalid?\\nInput\\n`[0,0,1,1,1,2,2,3,3,4]`\\nOutput\\n`[0,1,2,3,4,2,2,3,3,4]`\\nExpected\\n`[0,1,2,3,4]`"
                    },
                    {
                        "username": "JWPB",
                        "content": "Can someone tell me, why I can\\'t use here a Python `set` function? It takes care of duplicates automatically, but here it doesn\\'t work. I don\\'t understand."
                    },
                    {
                        "username": "chernosmaga",
                        "content": "I don\\'t get it. They want me to get [1,2] and I got it in IDEA okay, but the output here is [1,1]. How does this even work?"
                    },
                    {
                        "username": "user6593XG",
                        "content": "Question: Could you in theory transform the array into a set and then back?\\n"
                    },
                    {
                        "username": "satardekaraary47",
                        "content": "Hello Guys \\nI don\\'t solve this problem using DSA as I don\\'t study the DSA part yet. I solve this with basics using only loops and if. \\nWe just have to check weather two adjacent numbers are dissimilar or not. if they are dissimilar then we stored the number in new array at 0th position and increase its index. if they are similar then we just iterate the loop until it satisfies the condition. The range in which the condition don\\'t satisfied is the range where numbers are similar. And after total iteration of loops we just stored the last number in the new array . Also to count unique number just count it in the if statement and print at the last."
                    },
                    {
                        "username": "taikhoanhocchung2",
                        "content": "where am i wrong ?\\n\\n\\n public class Solution {\\n    public int RemoveDuplicates(int[] nums) {\\n        // ArrayList duplicateNums = new ArrayList();\\n\\n        \\n\\n        List<int> result = new List<int>();\\n\\n        // duplicateNums.Add(nums[0]);\\n\\n        int[] duplicateNums = new int[100];\\n        duplicateNums[0] = (nums[0]);\\n        result.Add(nums[0]);\\n        for(int i = 1; i< nums.Length; i++) {\\n            Console.WriteLine(\"Value \" + i + \" \" + nums[i]);\\n            if(!Array.Exists(duplicateNums, e => e ==  nums[i] )) {\\n                Console.WriteLine(\"In exist \"  + nums[i]);\\n                duplicateNums[i] = (nums[i]);\\n                result.Add(nums[i]);\\n            }\\n        }\\n\\n        Console.WriteLine(\"Length is\"+ result.Count);\\n\\n        return result.Count;\\n    }\\n}"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "Here are a few issues in your code:\\n\\nArray Index: You are setting duplicateNums[i] = nums[i];. This will overwrite some elements in the duplicateNums array which should not be the case.\\n\\nArray Initialization: You have initialized duplicateNums as an array of length 100 filled with zeros. This will cause problems if the number 0 exists in the original array.\\n\\nEfficiency: Using Array.Exists() in each iteration would make the code O(n^2), where n is the length of the array."
                    },
                    {
                        "username": "talekarss123",
                        "content": "review the test cases for javascript program, workable program isn\\'t accepting.\\nYou don\\'t decide the approach of code "
                    }
                ]
            },
            {
                "id": 2043738,
                "content": [
                    {
                        "username": "sivaunaccepting",
                        "content": "why no one talking about usage of hash set for this question?"
                    },
                    {
                        "username": "MenaiAla",
                        "content": "How to replace your duplicated numbers with a character in TypeScript while the array has number type?"
                    },
                    {
                        "username": "harishonfire2000",
                        "content": "can anyone explain why this is not working\\n `var removeDuplicates = function(nums) {\\n    var i= Math.max(...nums)\\n     var a= Math.min(...nums)\\n      var arr=[]\\n     for(var j=a;j<=i;j++){\\n        arr.push(j)\\n     }\\n     \\n   return arr\\n};`"
                    },
                    {
                        "username": "lostghost",
                        "content": "Why the hell is this invalid?\\nInput\\n`[0,0,1,1,1,2,2,3,3,4]`\\nOutput\\n`[0,1,2,3,4,2,2,3,3,4]`\\nExpected\\n`[0,1,2,3,4]`"
                    },
                    {
                        "username": "JWPB",
                        "content": "Can someone tell me, why I can\\'t use here a Python `set` function? It takes care of duplicates automatically, but here it doesn\\'t work. I don\\'t understand."
                    },
                    {
                        "username": "chernosmaga",
                        "content": "I don\\'t get it. They want me to get [1,2] and I got it in IDEA okay, but the output here is [1,1]. How does this even work?"
                    },
                    {
                        "username": "user6593XG",
                        "content": "Question: Could you in theory transform the array into a set and then back?\\n"
                    },
                    {
                        "username": "satardekaraary47",
                        "content": "Hello Guys \\nI don\\'t solve this problem using DSA as I don\\'t study the DSA part yet. I solve this with basics using only loops and if. \\nWe just have to check weather two adjacent numbers are dissimilar or not. if they are dissimilar then we stored the number in new array at 0th position and increase its index. if they are similar then we just iterate the loop until it satisfies the condition. The range in which the condition don\\'t satisfied is the range where numbers are similar. And after total iteration of loops we just stored the last number in the new array . Also to count unique number just count it in the if statement and print at the last."
                    },
                    {
                        "username": "taikhoanhocchung2",
                        "content": "where am i wrong ?\\n\\n\\n public class Solution {\\n    public int RemoveDuplicates(int[] nums) {\\n        // ArrayList duplicateNums = new ArrayList();\\n\\n        \\n\\n        List<int> result = new List<int>();\\n\\n        // duplicateNums.Add(nums[0]);\\n\\n        int[] duplicateNums = new int[100];\\n        duplicateNums[0] = (nums[0]);\\n        result.Add(nums[0]);\\n        for(int i = 1; i< nums.Length; i++) {\\n            Console.WriteLine(\"Value \" + i + \" \" + nums[i]);\\n            if(!Array.Exists(duplicateNums, e => e ==  nums[i] )) {\\n                Console.WriteLine(\"In exist \"  + nums[i]);\\n                duplicateNums[i] = (nums[i]);\\n                result.Add(nums[i]);\\n            }\\n        }\\n\\n        Console.WriteLine(\"Length is\"+ result.Count);\\n\\n        return result.Count;\\n    }\\n}"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "Here are a few issues in your code:\\n\\nArray Index: You are setting duplicateNums[i] = nums[i];. This will overwrite some elements in the duplicateNums array which should not be the case.\\n\\nArray Initialization: You have initialized duplicateNums as an array of length 100 filled with zeros. This will cause problems if the number 0 exists in the original array.\\n\\nEfficiency: Using Array.Exists() in each iteration would make the code O(n^2), where n is the length of the array."
                    },
                    {
                        "username": "talekarss123",
                        "content": "review the test cases for javascript program, workable program isn\\'t accepting.\\nYou don\\'t decide the approach of code "
                    }
                ]
            },
            {
                "id": 2043616,
                "content": [
                    {
                        "username": "Rich_Lin",
                        "content": "I\\'ve came through some questions including this, that the answer is not the answer.\\nI did everything right but it\\'ll somehow says I\\'m wrong.\\nAfter checking other\\'s answer........I\\'m so confused, like, the output in the description and the actual output they want are different.\\nLike.......what the hell\\nAm i the only one got confused and trying for hours just to realize that?"
                    },
                    {
                        "username": "arsen172317",
                        "content": "guys just remove duplicates and return nums.length"
                    },
                    {
                        "username": "aaryakapoor10",
                        "content": "they want us to return the size of array in integer but in output the result is in array , what to do?"
                    },
                    {
                        "username": "munnakumar5461",
                        "content": "There is no problem in the given question.\\nyou need to work on in-place array.\\njust remove the unwanted element from the resulted  nums array.\\nit should work."
                    },
                    {
                        "username": "kumarsatish876",
                        "content": "class Solution {\\n    public int removeDuplicates(int[] a) {\\n        int max=a[0];\\n        int j=1;\\n        for(int i=1;i<a.length;i++)\\n        {\\n            if(max<a[i])\\n            {\\n                a[j]=a[i];\\n                j++;\\n                max=a[i];\\n            }\\n        }\\n        return j;\\n    }\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "lomag123",
                        "content": "No need to waste your time with this one, skip this sh*tty problem. It is even better to do one push-up than wasting your time with this one. "
                    },
                    {
                        "username": "anikethreddy",
                        "content": "I tried using another variable to get the solution and then assign it to nums but it did not work but when I rearranged nums the code was executed. Any idea on why ?\\nI did try making nums global "
                    },
                    {
                        "username": "AlexandreD13",
                        "content": "Shitty question. Then everyone on the internet says, \"hEre Are the 250 lEEtcOde quEstIons I pracTicEd for mY Google IntervIEw\"."
                    },
                    {
                        "username": "cblakely",
                        "content": "Another terrible question written by an idiot."
                    },
                    {
                        "username": "pratikftw",
                        "content": "Time Wasted . checking my code over and over again but cant figure out that stdout is giving different value and output throwing another value that doesn\\'t even match the expected answer."
                    }
                ]
            },
            {
                "id": 2043077,
                "content": [
                    {
                        "username": "Rich_Lin",
                        "content": "I\\'ve came through some questions including this, that the answer is not the answer.\\nI did everything right but it\\'ll somehow says I\\'m wrong.\\nAfter checking other\\'s answer........I\\'m so confused, like, the output in the description and the actual output they want are different.\\nLike.......what the hell\\nAm i the only one got confused and trying for hours just to realize that?"
                    },
                    {
                        "username": "arsen172317",
                        "content": "guys just remove duplicates and return nums.length"
                    },
                    {
                        "username": "aaryakapoor10",
                        "content": "they want us to return the size of array in integer but in output the result is in array , what to do?"
                    },
                    {
                        "username": "munnakumar5461",
                        "content": "There is no problem in the given question.\\nyou need to work on in-place array.\\njust remove the unwanted element from the resulted  nums array.\\nit should work."
                    },
                    {
                        "username": "kumarsatish876",
                        "content": "class Solution {\\n    public int removeDuplicates(int[] a) {\\n        int max=a[0];\\n        int j=1;\\n        for(int i=1;i<a.length;i++)\\n        {\\n            if(max<a[i])\\n            {\\n                a[j]=a[i];\\n                j++;\\n                max=a[i];\\n            }\\n        }\\n        return j;\\n    }\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "lomag123",
                        "content": "No need to waste your time with this one, skip this sh*tty problem. It is even better to do one push-up than wasting your time with this one. "
                    },
                    {
                        "username": "anikethreddy",
                        "content": "I tried using another variable to get the solution and then assign it to nums but it did not work but when I rearranged nums the code was executed. Any idea on why ?\\nI did try making nums global "
                    },
                    {
                        "username": "AlexandreD13",
                        "content": "Shitty question. Then everyone on the internet says, \"hEre Are the 250 lEEtcOde quEstIons I pracTicEd for mY Google IntervIEw\"."
                    },
                    {
                        "username": "cblakely",
                        "content": "Another terrible question written by an idiot."
                    },
                    {
                        "username": "pratikftw",
                        "content": "Time Wasted . checking my code over and over again but cant figure out that stdout is giving different value and output throwing another value that doesn\\'t even match the expected answer."
                    }
                ]
            },
            {
                "id": 2037306,
                "content": [
                    {
                        "username": "Rich_Lin",
                        "content": "I\\'ve came through some questions including this, that the answer is not the answer.\\nI did everything right but it\\'ll somehow says I\\'m wrong.\\nAfter checking other\\'s answer........I\\'m so confused, like, the output in the description and the actual output they want are different.\\nLike.......what the hell\\nAm i the only one got confused and trying for hours just to realize that?"
                    },
                    {
                        "username": "arsen172317",
                        "content": "guys just remove duplicates and return nums.length"
                    },
                    {
                        "username": "aaryakapoor10",
                        "content": "they want us to return the size of array in integer but in output the result is in array , what to do?"
                    },
                    {
                        "username": "munnakumar5461",
                        "content": "There is no problem in the given question.\\nyou need to work on in-place array.\\njust remove the unwanted element from the resulted  nums array.\\nit should work."
                    },
                    {
                        "username": "kumarsatish876",
                        "content": "class Solution {\\n    public int removeDuplicates(int[] a) {\\n        int max=a[0];\\n        int j=1;\\n        for(int i=1;i<a.length;i++)\\n        {\\n            if(max<a[i])\\n            {\\n                a[j]=a[i];\\n                j++;\\n                max=a[i];\\n            }\\n        }\\n        return j;\\n    }\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "lomag123",
                        "content": "No need to waste your time with this one, skip this sh*tty problem. It is even better to do one push-up than wasting your time with this one. "
                    },
                    {
                        "username": "anikethreddy",
                        "content": "I tried using another variable to get the solution and then assign it to nums but it did not work but when I rearranged nums the code was executed. Any idea on why ?\\nI did try making nums global "
                    },
                    {
                        "username": "AlexandreD13",
                        "content": "Shitty question. Then everyone on the internet says, \"hEre Are the 250 lEEtcOde quEstIons I pracTicEd for mY Google IntervIEw\"."
                    },
                    {
                        "username": "cblakely",
                        "content": "Another terrible question written by an idiot."
                    },
                    {
                        "username": "pratikftw",
                        "content": "Time Wasted . checking my code over and over again but cant figure out that stdout is giving different value and output throwing another value that doesn\\'t even match the expected answer."
                    }
                ]
            },
            {
                "id": 2036620,
                "content": [
                    {
                        "username": "Rich_Lin",
                        "content": "I\\'ve came through some questions including this, that the answer is not the answer.\\nI did everything right but it\\'ll somehow says I\\'m wrong.\\nAfter checking other\\'s answer........I\\'m so confused, like, the output in the description and the actual output they want are different.\\nLike.......what the hell\\nAm i the only one got confused and trying for hours just to realize that?"
                    },
                    {
                        "username": "arsen172317",
                        "content": "guys just remove duplicates and return nums.length"
                    },
                    {
                        "username": "aaryakapoor10",
                        "content": "they want us to return the size of array in integer but in output the result is in array , what to do?"
                    },
                    {
                        "username": "munnakumar5461",
                        "content": "There is no problem in the given question.\\nyou need to work on in-place array.\\njust remove the unwanted element from the resulted  nums array.\\nit should work."
                    },
                    {
                        "username": "kumarsatish876",
                        "content": "class Solution {\\n    public int removeDuplicates(int[] a) {\\n        int max=a[0];\\n        int j=1;\\n        for(int i=1;i<a.length;i++)\\n        {\\n            if(max<a[i])\\n            {\\n                a[j]=a[i];\\n                j++;\\n                max=a[i];\\n            }\\n        }\\n        return j;\\n    }\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "lomag123",
                        "content": "No need to waste your time with this one, skip this sh*tty problem. It is even better to do one push-up than wasting your time with this one. "
                    },
                    {
                        "username": "anikethreddy",
                        "content": "I tried using another variable to get the solution and then assign it to nums but it did not work but when I rearranged nums the code was executed. Any idea on why ?\\nI did try making nums global "
                    },
                    {
                        "username": "AlexandreD13",
                        "content": "Shitty question. Then everyone on the internet says, \"hEre Are the 250 lEEtcOde quEstIons I pracTicEd for mY Google IntervIEw\"."
                    },
                    {
                        "username": "cblakely",
                        "content": "Another terrible question written by an idiot."
                    },
                    {
                        "username": "pratikftw",
                        "content": "Time Wasted . checking my code over and over again but cant figure out that stdout is giving different value and output throwing another value that doesn\\'t even match the expected answer."
                    }
                ]
            },
            {
                "id": 2036381,
                "content": [
                    {
                        "username": "Rich_Lin",
                        "content": "I\\'ve came through some questions including this, that the answer is not the answer.\\nI did everything right but it\\'ll somehow says I\\'m wrong.\\nAfter checking other\\'s answer........I\\'m so confused, like, the output in the description and the actual output they want are different.\\nLike.......what the hell\\nAm i the only one got confused and trying for hours just to realize that?"
                    },
                    {
                        "username": "arsen172317",
                        "content": "guys just remove duplicates and return nums.length"
                    },
                    {
                        "username": "aaryakapoor10",
                        "content": "they want us to return the size of array in integer but in output the result is in array , what to do?"
                    },
                    {
                        "username": "munnakumar5461",
                        "content": "There is no problem in the given question.\\nyou need to work on in-place array.\\njust remove the unwanted element from the resulted  nums array.\\nit should work."
                    },
                    {
                        "username": "kumarsatish876",
                        "content": "class Solution {\\n    public int removeDuplicates(int[] a) {\\n        int max=a[0];\\n        int j=1;\\n        for(int i=1;i<a.length;i++)\\n        {\\n            if(max<a[i])\\n            {\\n                a[j]=a[i];\\n                j++;\\n                max=a[i];\\n            }\\n        }\\n        return j;\\n    }\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "lomag123",
                        "content": "No need to waste your time with this one, skip this sh*tty problem. It is even better to do one push-up than wasting your time with this one. "
                    },
                    {
                        "username": "anikethreddy",
                        "content": "I tried using another variable to get the solution and then assign it to nums but it did not work but when I rearranged nums the code was executed. Any idea on why ?\\nI did try making nums global "
                    },
                    {
                        "username": "AlexandreD13",
                        "content": "Shitty question. Then everyone on the internet says, \"hEre Are the 250 lEEtcOde quEstIons I pracTicEd for mY Google IntervIEw\"."
                    },
                    {
                        "username": "cblakely",
                        "content": "Another terrible question written by an idiot."
                    },
                    {
                        "username": "pratikftw",
                        "content": "Time Wasted . checking my code over and over again but cant figure out that stdout is giving different value and output throwing another value that doesn\\'t even match the expected answer."
                    }
                ]
            },
            {
                "id": 2033637,
                "content": [
                    {
                        "username": "Rich_Lin",
                        "content": "I\\'ve came through some questions including this, that the answer is not the answer.\\nI did everything right but it\\'ll somehow says I\\'m wrong.\\nAfter checking other\\'s answer........I\\'m so confused, like, the output in the description and the actual output they want are different.\\nLike.......what the hell\\nAm i the only one got confused and trying for hours just to realize that?"
                    },
                    {
                        "username": "arsen172317",
                        "content": "guys just remove duplicates and return nums.length"
                    },
                    {
                        "username": "aaryakapoor10",
                        "content": "they want us to return the size of array in integer but in output the result is in array , what to do?"
                    },
                    {
                        "username": "munnakumar5461",
                        "content": "There is no problem in the given question.\\nyou need to work on in-place array.\\njust remove the unwanted element from the resulted  nums array.\\nit should work."
                    },
                    {
                        "username": "kumarsatish876",
                        "content": "class Solution {\\n    public int removeDuplicates(int[] a) {\\n        int max=a[0];\\n        int j=1;\\n        for(int i=1;i<a.length;i++)\\n        {\\n            if(max<a[i])\\n            {\\n                a[j]=a[i];\\n                j++;\\n                max=a[i];\\n            }\\n        }\\n        return j;\\n    }\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "lomag123",
                        "content": "No need to waste your time with this one, skip this sh*tty problem. It is even better to do one push-up than wasting your time with this one. "
                    },
                    {
                        "username": "anikethreddy",
                        "content": "I tried using another variable to get the solution and then assign it to nums but it did not work but when I rearranged nums the code was executed. Any idea on why ?\\nI did try making nums global "
                    },
                    {
                        "username": "AlexandreD13",
                        "content": "Shitty question. Then everyone on the internet says, \"hEre Are the 250 lEEtcOde quEstIons I pracTicEd for mY Google IntervIEw\"."
                    },
                    {
                        "username": "cblakely",
                        "content": "Another terrible question written by an idiot."
                    },
                    {
                        "username": "pratikftw",
                        "content": "Time Wasted . checking my code over and over again but cant figure out that stdout is giving different value and output throwing another value that doesn\\'t even match the expected answer."
                    }
                ]
            },
            {
                "id": 2033196,
                "content": [
                    {
                        "username": "Rich_Lin",
                        "content": "I\\'ve came through some questions including this, that the answer is not the answer.\\nI did everything right but it\\'ll somehow says I\\'m wrong.\\nAfter checking other\\'s answer........I\\'m so confused, like, the output in the description and the actual output they want are different.\\nLike.......what the hell\\nAm i the only one got confused and trying for hours just to realize that?"
                    },
                    {
                        "username": "arsen172317",
                        "content": "guys just remove duplicates and return nums.length"
                    },
                    {
                        "username": "aaryakapoor10",
                        "content": "they want us to return the size of array in integer but in output the result is in array , what to do?"
                    },
                    {
                        "username": "munnakumar5461",
                        "content": "There is no problem in the given question.\\nyou need to work on in-place array.\\njust remove the unwanted element from the resulted  nums array.\\nit should work."
                    },
                    {
                        "username": "kumarsatish876",
                        "content": "class Solution {\\n    public int removeDuplicates(int[] a) {\\n        int max=a[0];\\n        int j=1;\\n        for(int i=1;i<a.length;i++)\\n        {\\n            if(max<a[i])\\n            {\\n                a[j]=a[i];\\n                j++;\\n                max=a[i];\\n            }\\n        }\\n        return j;\\n    }\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "lomag123",
                        "content": "No need to waste your time with this one, skip this sh*tty problem. It is even better to do one push-up than wasting your time with this one. "
                    },
                    {
                        "username": "anikethreddy",
                        "content": "I tried using another variable to get the solution and then assign it to nums but it did not work but when I rearranged nums the code was executed. Any idea on why ?\\nI did try making nums global "
                    },
                    {
                        "username": "AlexandreD13",
                        "content": "Shitty question. Then everyone on the internet says, \"hEre Are the 250 lEEtcOde quEstIons I pracTicEd for mY Google IntervIEw\"."
                    },
                    {
                        "username": "cblakely",
                        "content": "Another terrible question written by an idiot."
                    },
                    {
                        "username": "pratikftw",
                        "content": "Time Wasted . checking my code over and over again but cant figure out that stdout is giving different value and output throwing another value that doesn\\'t even match the expected answer."
                    }
                ]
            },
            {
                "id": 2031717,
                "content": [
                    {
                        "username": "Rich_Lin",
                        "content": "I\\'ve came through some questions including this, that the answer is not the answer.\\nI did everything right but it\\'ll somehow says I\\'m wrong.\\nAfter checking other\\'s answer........I\\'m so confused, like, the output in the description and the actual output they want are different.\\nLike.......what the hell\\nAm i the only one got confused and trying for hours just to realize that?"
                    },
                    {
                        "username": "arsen172317",
                        "content": "guys just remove duplicates and return nums.length"
                    },
                    {
                        "username": "aaryakapoor10",
                        "content": "they want us to return the size of array in integer but in output the result is in array , what to do?"
                    },
                    {
                        "username": "munnakumar5461",
                        "content": "There is no problem in the given question.\\nyou need to work on in-place array.\\njust remove the unwanted element from the resulted  nums array.\\nit should work."
                    },
                    {
                        "username": "kumarsatish876",
                        "content": "class Solution {\\n    public int removeDuplicates(int[] a) {\\n        int max=a[0];\\n        int j=1;\\n        for(int i=1;i<a.length;i++)\\n        {\\n            if(max<a[i])\\n            {\\n                a[j]=a[i];\\n                j++;\\n                max=a[i];\\n            }\\n        }\\n        return j;\\n    }\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "lomag123",
                        "content": "No need to waste your time with this one, skip this sh*tty problem. It is even better to do one push-up than wasting your time with this one. "
                    },
                    {
                        "username": "anikethreddy",
                        "content": "I tried using another variable to get the solution and then assign it to nums but it did not work but when I rearranged nums the code was executed. Any idea on why ?\\nI did try making nums global "
                    },
                    {
                        "username": "AlexandreD13",
                        "content": "Shitty question. Then everyone on the internet says, \"hEre Are the 250 lEEtcOde quEstIons I pracTicEd for mY Google IntervIEw\"."
                    },
                    {
                        "username": "cblakely",
                        "content": "Another terrible question written by an idiot."
                    },
                    {
                        "username": "pratikftw",
                        "content": "Time Wasted . checking my code over and over again but cant figure out that stdout is giving different value and output throwing another value that doesn\\'t even match the expected answer."
                    }
                ]
            },
            {
                "id": 2029088,
                "content": [
                    {
                        "username": "Rich_Lin",
                        "content": "I\\'ve came through some questions including this, that the answer is not the answer.\\nI did everything right but it\\'ll somehow says I\\'m wrong.\\nAfter checking other\\'s answer........I\\'m so confused, like, the output in the description and the actual output they want are different.\\nLike.......what the hell\\nAm i the only one got confused and trying for hours just to realize that?"
                    },
                    {
                        "username": "arsen172317",
                        "content": "guys just remove duplicates and return nums.length"
                    },
                    {
                        "username": "aaryakapoor10",
                        "content": "they want us to return the size of array in integer but in output the result is in array , what to do?"
                    },
                    {
                        "username": "munnakumar5461",
                        "content": "There is no problem in the given question.\\nyou need to work on in-place array.\\njust remove the unwanted element from the resulted  nums array.\\nit should work."
                    },
                    {
                        "username": "kumarsatish876",
                        "content": "class Solution {\\n    public int removeDuplicates(int[] a) {\\n        int max=a[0];\\n        int j=1;\\n        for(int i=1;i<a.length;i++)\\n        {\\n            if(max<a[i])\\n            {\\n                a[j]=a[i];\\n                j++;\\n                max=a[i];\\n            }\\n        }\\n        return j;\\n    }\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "lomag123",
                        "content": "No need to waste your time with this one, skip this sh*tty problem. It is even better to do one push-up than wasting your time with this one. "
                    },
                    {
                        "username": "anikethreddy",
                        "content": "I tried using another variable to get the solution and then assign it to nums but it did not work but when I rearranged nums the code was executed. Any idea on why ?\\nI did try making nums global "
                    },
                    {
                        "username": "AlexandreD13",
                        "content": "Shitty question. Then everyone on the internet says, \"hEre Are the 250 lEEtcOde quEstIons I pracTicEd for mY Google IntervIEw\"."
                    },
                    {
                        "username": "cblakely",
                        "content": "Another terrible question written by an idiot."
                    },
                    {
                        "username": "pratikftw",
                        "content": "Time Wasted . checking my code over and over again but cant figure out that stdout is giving different value and output throwing another value that doesn\\'t even match the expected answer."
                    }
                ]
            },
            {
                "id": 2028520,
                "content": [
                    {
                        "username": "Rich_Lin",
                        "content": "I\\'ve came through some questions including this, that the answer is not the answer.\\nI did everything right but it\\'ll somehow says I\\'m wrong.\\nAfter checking other\\'s answer........I\\'m so confused, like, the output in the description and the actual output they want are different.\\nLike.......what the hell\\nAm i the only one got confused and trying for hours just to realize that?"
                    },
                    {
                        "username": "arsen172317",
                        "content": "guys just remove duplicates and return nums.length"
                    },
                    {
                        "username": "aaryakapoor10",
                        "content": "they want us to return the size of array in integer but in output the result is in array , what to do?"
                    },
                    {
                        "username": "munnakumar5461",
                        "content": "There is no problem in the given question.\\nyou need to work on in-place array.\\njust remove the unwanted element from the resulted  nums array.\\nit should work."
                    },
                    {
                        "username": "kumarsatish876",
                        "content": "class Solution {\\n    public int removeDuplicates(int[] a) {\\n        int max=a[0];\\n        int j=1;\\n        for(int i=1;i<a.length;i++)\\n        {\\n            if(max<a[i])\\n            {\\n                a[j]=a[i];\\n                j++;\\n                max=a[i];\\n            }\\n        }\\n        return j;\\n    }\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Great!\\nNow lets read the rules together.\\n\\n\\uD83D\\uDCA1 Discussion Rules\\n1. Please don\\'t post any solutions in this discussion.\\n\\n2. The problem discussion is for asking questions about the problem or for sharing tips - anything except for solutions.\\n\\n3. If you\\'d like to share your solution for feedback and ideas, please head to the solutions tab and post it there."
                    },
                    {
                        "username": "lomag123",
                        "content": "No need to waste your time with this one, skip this sh*tty problem. It is even better to do one push-up than wasting your time with this one. "
                    },
                    {
                        "username": "anikethreddy",
                        "content": "I tried using another variable to get the solution and then assign it to nums but it did not work but when I rearranged nums the code was executed. Any idea on why ?\\nI did try making nums global "
                    },
                    {
                        "username": "AlexandreD13",
                        "content": "Shitty question. Then everyone on the internet says, \"hEre Are the 250 lEEtcOde quEstIons I pracTicEd for mY Google IntervIEw\"."
                    },
                    {
                        "username": "cblakely",
                        "content": "Another terrible question written by an idiot."
                    },
                    {
                        "username": "pratikftw",
                        "content": "Time Wasted . checking my code over and over again but cant figure out that stdout is giving different value and output throwing another value that doesn\\'t even match the expected answer."
                    }
                ]
            },
            {
                "id": 2027697,
                "content": [
                    {
                        "username": "HomieOhmie",
                        "content": "Man, the wording of this problem and the weird error message that pops up on wrong answer to the testcase made this one quite difficult.\\n\\nThe error message \\'TypeError: # is not valid value for the expected return type integer[]\\' only tells you that the obtained nums list, cut by the number of unique elements, is wrong.\\n\\nIt\\'s easy to notice what the error implies if you check the values in the debugger,if you check what you will return, or if you print the values of nums yourself on a small instance of the problem."
                    },
                    {
                        "username": "jglopes91",
                        "content": "Completely confusing question..."
                    },
                    {
                        "username": "u37445",
                        "content": "\"It does not matter what you leave beyond the returned k (hence they are underscores).\"\\n\\nWrong Answer\\nInput: nums =[1,1,2]\\nOutput: [1,2,2]\\nExpected: [1,2]\\n\\n\\nhmmmmmm..........................."
                    },
                    {
                        "username": "the_bobba",
                        "content": "Problems with 50%+ downvotes should be removed..."
                    },
                    {
                        "username": "vinod95359199",
                        "content": "where i did mistake \\n\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) \\n    {\\n        int count=0;\\n        for(int i=0;i<=nums.length-1;++i)\\n        {\\n            for(int j=i+1;j<=nums.length-1;++j)\\n            {\\n                if(nums[i]==nums[j])\\n                {\\n                    \\n                    continue;\\n                }\\n                else{\\n                    count+=nums[i];\\n                }\\n            }\\n        }\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "Promit_11",
                        "content": "For a question, there is two answers:\n1st one:\nclass Solution:\n def removeDuplicates(self, nums: list[int]) -> int:\n        new = []\n        for i in nums:\n            if i not in new:\n                new.append(i)\n        result = len(nums) - len(new)\n        return result\n2nd One:\nclass Solution:\n    def removeDuplicates(self, nums: list[int]) -> int:\n        j = 1\n        for i in range(1, len(nums)):\n            if nums[i] != nums[i - 1]:\n                nums[j] = nums[i]\n                 j += 1\n         return j\nBoth codes is giving the same answers. But Leet Code is accepting only 2nd one. For the first one, it is showing the wrong output. If anyone knows, why this is happening please let me know. \nLeet code problem number 26. Remove Duplicates from Sorted Array.\n#Avoid_indentations"
                    },
                    {
                        "username": "Justus7827",
                        "content": "My solution works in Visual Studio but doesn\\'t work the same in leetcode. I pass 17 testcases and get stuck on [ 1, 1, 2 ]. My code in VS removes the duplicate 1 so the array is now [ 1, 2 ] and also returns the correct count for \"k\". However, when I run the solution on here, it says my output was [ 1, 1 ]. Why does it do this?"
                    },
                    {
                        "username": "anvar__cool",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums = list(set(nums))\\n        return len(nums)\\nWhy it\\'s not working? I tried this code in jupyter notebook and it\\'s working, but here it doesn\\'t even change the nums, although if i print nums inside this method, stdout gives correct answer..."
                    },
                    {
                        "username": "n4pw01f",
                        "content": "They want you to move the elements in place for some reason, Set, etc won\\'t work. You have to basically move the elements"
                    },
                    {
                        "username": "ansh_2001",
                        "content": "Just return the number of distinct elements in the array and shift all the distinct elements to the front of array  in ascending order."
                    },
                    {
                        "username": "varshini-S",
                        "content": "why cant we use set over here? can anyone give me a valid reason or did I took the question wrong?\\nSet<Integer> set = new HashSet<>();\\n    for(int i : nums)\\n        set.add(i);\\n    return set.size();"
                    },
                    {
                        "username": "ksiv",
                        "content": "I think it comes from here \"remove the duplicates in-place \""
                    },
                    {
                        "username": "ansh_2001",
                        "content": "You can use set here as i also used it in my solution and it cleared all the test cases."
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "You don't have to return uniques in `nums`!!!, the catch here is you have to Change the array `nums` such that the first `k` elements of nums contain the unique elements, and then return `k` (number of uniques in `nums`) only!!!\n**Custom Judge** will check first 'K' elements in `nums` to grade your solution!!"
                    }
                ]
            },
            {
                "id": 2027601,
                "content": [
                    {
                        "username": "HomieOhmie",
                        "content": "Man, the wording of this problem and the weird error message that pops up on wrong answer to the testcase made this one quite difficult.\\n\\nThe error message \\'TypeError: # is not valid value for the expected return type integer[]\\' only tells you that the obtained nums list, cut by the number of unique elements, is wrong.\\n\\nIt\\'s easy to notice what the error implies if you check the values in the debugger,if you check what you will return, or if you print the values of nums yourself on a small instance of the problem."
                    },
                    {
                        "username": "jglopes91",
                        "content": "Completely confusing question..."
                    },
                    {
                        "username": "u37445",
                        "content": "\"It does not matter what you leave beyond the returned k (hence they are underscores).\"\\n\\nWrong Answer\\nInput: nums =[1,1,2]\\nOutput: [1,2,2]\\nExpected: [1,2]\\n\\n\\nhmmmmmm..........................."
                    },
                    {
                        "username": "the_bobba",
                        "content": "Problems with 50%+ downvotes should be removed..."
                    },
                    {
                        "username": "vinod95359199",
                        "content": "where i did mistake \\n\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) \\n    {\\n        int count=0;\\n        for(int i=0;i<=nums.length-1;++i)\\n        {\\n            for(int j=i+1;j<=nums.length-1;++j)\\n            {\\n                if(nums[i]==nums[j])\\n                {\\n                    \\n                    continue;\\n                }\\n                else{\\n                    count+=nums[i];\\n                }\\n            }\\n        }\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "Promit_11",
                        "content": "For a question, there is two answers:\n1st one:\nclass Solution:\n def removeDuplicates(self, nums: list[int]) -> int:\n        new = []\n        for i in nums:\n            if i not in new:\n                new.append(i)\n        result = len(nums) - len(new)\n        return result\n2nd One:\nclass Solution:\n    def removeDuplicates(self, nums: list[int]) -> int:\n        j = 1\n        for i in range(1, len(nums)):\n            if nums[i] != nums[i - 1]:\n                nums[j] = nums[i]\n                 j += 1\n         return j\nBoth codes is giving the same answers. But Leet Code is accepting only 2nd one. For the first one, it is showing the wrong output. If anyone knows, why this is happening please let me know. \nLeet code problem number 26. Remove Duplicates from Sorted Array.\n#Avoid_indentations"
                    },
                    {
                        "username": "Justus7827",
                        "content": "My solution works in Visual Studio but doesn\\'t work the same in leetcode. I pass 17 testcases and get stuck on [ 1, 1, 2 ]. My code in VS removes the duplicate 1 so the array is now [ 1, 2 ] and also returns the correct count for \"k\". However, when I run the solution on here, it says my output was [ 1, 1 ]. Why does it do this?"
                    },
                    {
                        "username": "anvar__cool",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums = list(set(nums))\\n        return len(nums)\\nWhy it\\'s not working? I tried this code in jupyter notebook and it\\'s working, but here it doesn\\'t even change the nums, although if i print nums inside this method, stdout gives correct answer..."
                    },
                    {
                        "username": "n4pw01f",
                        "content": "They want you to move the elements in place for some reason, Set, etc won\\'t work. You have to basically move the elements"
                    },
                    {
                        "username": "ansh_2001",
                        "content": "Just return the number of distinct elements in the array and shift all the distinct elements to the front of array  in ascending order."
                    },
                    {
                        "username": "varshini-S",
                        "content": "why cant we use set over here? can anyone give me a valid reason or did I took the question wrong?\\nSet<Integer> set = new HashSet<>();\\n    for(int i : nums)\\n        set.add(i);\\n    return set.size();"
                    },
                    {
                        "username": "ksiv",
                        "content": "I think it comes from here \"remove the duplicates in-place \""
                    },
                    {
                        "username": "ansh_2001",
                        "content": "You can use set here as i also used it in my solution and it cleared all the test cases."
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "You don't have to return uniques in `nums`!!!, the catch here is you have to Change the array `nums` such that the first `k` elements of nums contain the unique elements, and then return `k` (number of uniques in `nums`) only!!!\n**Custom Judge** will check first 'K' elements in `nums` to grade your solution!!"
                    }
                ]
            },
            {
                "id": 2019965,
                "content": [
                    {
                        "username": "HomieOhmie",
                        "content": "Man, the wording of this problem and the weird error message that pops up on wrong answer to the testcase made this one quite difficult.\\n\\nThe error message \\'TypeError: # is not valid value for the expected return type integer[]\\' only tells you that the obtained nums list, cut by the number of unique elements, is wrong.\\n\\nIt\\'s easy to notice what the error implies if you check the values in the debugger,if you check what you will return, or if you print the values of nums yourself on a small instance of the problem."
                    },
                    {
                        "username": "jglopes91",
                        "content": "Completely confusing question..."
                    },
                    {
                        "username": "u37445",
                        "content": "\"It does not matter what you leave beyond the returned k (hence they are underscores).\"\\n\\nWrong Answer\\nInput: nums =[1,1,2]\\nOutput: [1,2,2]\\nExpected: [1,2]\\n\\n\\nhmmmmmm..........................."
                    },
                    {
                        "username": "the_bobba",
                        "content": "Problems with 50%+ downvotes should be removed..."
                    },
                    {
                        "username": "vinod95359199",
                        "content": "where i did mistake \\n\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) \\n    {\\n        int count=0;\\n        for(int i=0;i<=nums.length-1;++i)\\n        {\\n            for(int j=i+1;j<=nums.length-1;++j)\\n            {\\n                if(nums[i]==nums[j])\\n                {\\n                    \\n                    continue;\\n                }\\n                else{\\n                    count+=nums[i];\\n                }\\n            }\\n        }\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "Promit_11",
                        "content": "For a question, there is two answers:\n1st one:\nclass Solution:\n def removeDuplicates(self, nums: list[int]) -> int:\n        new = []\n        for i in nums:\n            if i not in new:\n                new.append(i)\n        result = len(nums) - len(new)\n        return result\n2nd One:\nclass Solution:\n    def removeDuplicates(self, nums: list[int]) -> int:\n        j = 1\n        for i in range(1, len(nums)):\n            if nums[i] != nums[i - 1]:\n                nums[j] = nums[i]\n                 j += 1\n         return j\nBoth codes is giving the same answers. But Leet Code is accepting only 2nd one. For the first one, it is showing the wrong output. If anyone knows, why this is happening please let me know. \nLeet code problem number 26. Remove Duplicates from Sorted Array.\n#Avoid_indentations"
                    },
                    {
                        "username": "Justus7827",
                        "content": "My solution works in Visual Studio but doesn\\'t work the same in leetcode. I pass 17 testcases and get stuck on [ 1, 1, 2 ]. My code in VS removes the duplicate 1 so the array is now [ 1, 2 ] and also returns the correct count for \"k\". However, when I run the solution on here, it says my output was [ 1, 1 ]. Why does it do this?"
                    },
                    {
                        "username": "anvar__cool",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums = list(set(nums))\\n        return len(nums)\\nWhy it\\'s not working? I tried this code in jupyter notebook and it\\'s working, but here it doesn\\'t even change the nums, although if i print nums inside this method, stdout gives correct answer..."
                    },
                    {
                        "username": "n4pw01f",
                        "content": "They want you to move the elements in place for some reason, Set, etc won\\'t work. You have to basically move the elements"
                    },
                    {
                        "username": "ansh_2001",
                        "content": "Just return the number of distinct elements in the array and shift all the distinct elements to the front of array  in ascending order."
                    },
                    {
                        "username": "varshini-S",
                        "content": "why cant we use set over here? can anyone give me a valid reason or did I took the question wrong?\\nSet<Integer> set = new HashSet<>();\\n    for(int i : nums)\\n        set.add(i);\\n    return set.size();"
                    },
                    {
                        "username": "ksiv",
                        "content": "I think it comes from here \"remove the duplicates in-place \""
                    },
                    {
                        "username": "ansh_2001",
                        "content": "You can use set here as i also used it in my solution and it cleared all the test cases."
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "You don't have to return uniques in `nums`!!!, the catch here is you have to Change the array `nums` such that the first `k` elements of nums contain the unique elements, and then return `k` (number of uniques in `nums`) only!!!\n**Custom Judge** will check first 'K' elements in `nums` to grade your solution!!"
                    }
                ]
            },
            {
                "id": 2018686,
                "content": [
                    {
                        "username": "HomieOhmie",
                        "content": "Man, the wording of this problem and the weird error message that pops up on wrong answer to the testcase made this one quite difficult.\\n\\nThe error message \\'TypeError: # is not valid value for the expected return type integer[]\\' only tells you that the obtained nums list, cut by the number of unique elements, is wrong.\\n\\nIt\\'s easy to notice what the error implies if you check the values in the debugger,if you check what you will return, or if you print the values of nums yourself on a small instance of the problem."
                    },
                    {
                        "username": "jglopes91",
                        "content": "Completely confusing question..."
                    },
                    {
                        "username": "u37445",
                        "content": "\"It does not matter what you leave beyond the returned k (hence they are underscores).\"\\n\\nWrong Answer\\nInput: nums =[1,1,2]\\nOutput: [1,2,2]\\nExpected: [1,2]\\n\\n\\nhmmmmmm..........................."
                    },
                    {
                        "username": "the_bobba",
                        "content": "Problems with 50%+ downvotes should be removed..."
                    },
                    {
                        "username": "vinod95359199",
                        "content": "where i did mistake \\n\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) \\n    {\\n        int count=0;\\n        for(int i=0;i<=nums.length-1;++i)\\n        {\\n            for(int j=i+1;j<=nums.length-1;++j)\\n            {\\n                if(nums[i]==nums[j])\\n                {\\n                    \\n                    continue;\\n                }\\n                else{\\n                    count+=nums[i];\\n                }\\n            }\\n        }\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "Promit_11",
                        "content": "For a question, there is two answers:\n1st one:\nclass Solution:\n def removeDuplicates(self, nums: list[int]) -> int:\n        new = []\n        for i in nums:\n            if i not in new:\n                new.append(i)\n        result = len(nums) - len(new)\n        return result\n2nd One:\nclass Solution:\n    def removeDuplicates(self, nums: list[int]) -> int:\n        j = 1\n        for i in range(1, len(nums)):\n            if nums[i] != nums[i - 1]:\n                nums[j] = nums[i]\n                 j += 1\n         return j\nBoth codes is giving the same answers. But Leet Code is accepting only 2nd one. For the first one, it is showing the wrong output. If anyone knows, why this is happening please let me know. \nLeet code problem number 26. Remove Duplicates from Sorted Array.\n#Avoid_indentations"
                    },
                    {
                        "username": "Justus7827",
                        "content": "My solution works in Visual Studio but doesn\\'t work the same in leetcode. I pass 17 testcases and get stuck on [ 1, 1, 2 ]. My code in VS removes the duplicate 1 so the array is now [ 1, 2 ] and also returns the correct count for \"k\". However, when I run the solution on here, it says my output was [ 1, 1 ]. Why does it do this?"
                    },
                    {
                        "username": "anvar__cool",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums = list(set(nums))\\n        return len(nums)\\nWhy it\\'s not working? I tried this code in jupyter notebook and it\\'s working, but here it doesn\\'t even change the nums, although if i print nums inside this method, stdout gives correct answer..."
                    },
                    {
                        "username": "n4pw01f",
                        "content": "They want you to move the elements in place for some reason, Set, etc won\\'t work. You have to basically move the elements"
                    },
                    {
                        "username": "ansh_2001",
                        "content": "Just return the number of distinct elements in the array and shift all the distinct elements to the front of array  in ascending order."
                    },
                    {
                        "username": "varshini-S",
                        "content": "why cant we use set over here? can anyone give me a valid reason or did I took the question wrong?\\nSet<Integer> set = new HashSet<>();\\n    for(int i : nums)\\n        set.add(i);\\n    return set.size();"
                    },
                    {
                        "username": "ksiv",
                        "content": "I think it comes from here \"remove the duplicates in-place \""
                    },
                    {
                        "username": "ansh_2001",
                        "content": "You can use set here as i also used it in my solution and it cleared all the test cases."
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "You don't have to return uniques in `nums`!!!, the catch here is you have to Change the array `nums` such that the first `k` elements of nums contain the unique elements, and then return `k` (number of uniques in `nums`) only!!!\n**Custom Judge** will check first 'K' elements in `nums` to grade your solution!!"
                    }
                ]
            },
            {
                "id": 2014967,
                "content": [
                    {
                        "username": "HomieOhmie",
                        "content": "Man, the wording of this problem and the weird error message that pops up on wrong answer to the testcase made this one quite difficult.\\n\\nThe error message \\'TypeError: # is not valid value for the expected return type integer[]\\' only tells you that the obtained nums list, cut by the number of unique elements, is wrong.\\n\\nIt\\'s easy to notice what the error implies if you check the values in the debugger,if you check what you will return, or if you print the values of nums yourself on a small instance of the problem."
                    },
                    {
                        "username": "jglopes91",
                        "content": "Completely confusing question..."
                    },
                    {
                        "username": "u37445",
                        "content": "\"It does not matter what you leave beyond the returned k (hence they are underscores).\"\\n\\nWrong Answer\\nInput: nums =[1,1,2]\\nOutput: [1,2,2]\\nExpected: [1,2]\\n\\n\\nhmmmmmm..........................."
                    },
                    {
                        "username": "the_bobba",
                        "content": "Problems with 50%+ downvotes should be removed..."
                    },
                    {
                        "username": "vinod95359199",
                        "content": "where i did mistake \\n\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) \\n    {\\n        int count=0;\\n        for(int i=0;i<=nums.length-1;++i)\\n        {\\n            for(int j=i+1;j<=nums.length-1;++j)\\n            {\\n                if(nums[i]==nums[j])\\n                {\\n                    \\n                    continue;\\n                }\\n                else{\\n                    count+=nums[i];\\n                }\\n            }\\n        }\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "Promit_11",
                        "content": "For a question, there is two answers:\n1st one:\nclass Solution:\n def removeDuplicates(self, nums: list[int]) -> int:\n        new = []\n        for i in nums:\n            if i not in new:\n                new.append(i)\n        result = len(nums) - len(new)\n        return result\n2nd One:\nclass Solution:\n    def removeDuplicates(self, nums: list[int]) -> int:\n        j = 1\n        for i in range(1, len(nums)):\n            if nums[i] != nums[i - 1]:\n                nums[j] = nums[i]\n                 j += 1\n         return j\nBoth codes is giving the same answers. But Leet Code is accepting only 2nd one. For the first one, it is showing the wrong output. If anyone knows, why this is happening please let me know. \nLeet code problem number 26. Remove Duplicates from Sorted Array.\n#Avoid_indentations"
                    },
                    {
                        "username": "Justus7827",
                        "content": "My solution works in Visual Studio but doesn\\'t work the same in leetcode. I pass 17 testcases and get stuck on [ 1, 1, 2 ]. My code in VS removes the duplicate 1 so the array is now [ 1, 2 ] and also returns the correct count for \"k\". However, when I run the solution on here, it says my output was [ 1, 1 ]. Why does it do this?"
                    },
                    {
                        "username": "anvar__cool",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums = list(set(nums))\\n        return len(nums)\\nWhy it\\'s not working? I tried this code in jupyter notebook and it\\'s working, but here it doesn\\'t even change the nums, although if i print nums inside this method, stdout gives correct answer..."
                    },
                    {
                        "username": "n4pw01f",
                        "content": "They want you to move the elements in place for some reason, Set, etc won\\'t work. You have to basically move the elements"
                    },
                    {
                        "username": "ansh_2001",
                        "content": "Just return the number of distinct elements in the array and shift all the distinct elements to the front of array  in ascending order."
                    },
                    {
                        "username": "varshini-S",
                        "content": "why cant we use set over here? can anyone give me a valid reason or did I took the question wrong?\\nSet<Integer> set = new HashSet<>();\\n    for(int i : nums)\\n        set.add(i);\\n    return set.size();"
                    },
                    {
                        "username": "ksiv",
                        "content": "I think it comes from here \"remove the duplicates in-place \""
                    },
                    {
                        "username": "ansh_2001",
                        "content": "You can use set here as i also used it in my solution and it cleared all the test cases."
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "You don't have to return uniques in `nums`!!!, the catch here is you have to Change the array `nums` such that the first `k` elements of nums contain the unique elements, and then return `k` (number of uniques in `nums`) only!!!\n**Custom Judge** will check first 'K' elements in `nums` to grade your solution!!"
                    }
                ]
            },
            {
                "id": 2014485,
                "content": [
                    {
                        "username": "HomieOhmie",
                        "content": "Man, the wording of this problem and the weird error message that pops up on wrong answer to the testcase made this one quite difficult.\\n\\nThe error message \\'TypeError: # is not valid value for the expected return type integer[]\\' only tells you that the obtained nums list, cut by the number of unique elements, is wrong.\\n\\nIt\\'s easy to notice what the error implies if you check the values in the debugger,if you check what you will return, or if you print the values of nums yourself on a small instance of the problem."
                    },
                    {
                        "username": "jglopes91",
                        "content": "Completely confusing question..."
                    },
                    {
                        "username": "u37445",
                        "content": "\"It does not matter what you leave beyond the returned k (hence they are underscores).\"\\n\\nWrong Answer\\nInput: nums =[1,1,2]\\nOutput: [1,2,2]\\nExpected: [1,2]\\n\\n\\nhmmmmmm..........................."
                    },
                    {
                        "username": "the_bobba",
                        "content": "Problems with 50%+ downvotes should be removed..."
                    },
                    {
                        "username": "vinod95359199",
                        "content": "where i did mistake \\n\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) \\n    {\\n        int count=0;\\n        for(int i=0;i<=nums.length-1;++i)\\n        {\\n            for(int j=i+1;j<=nums.length-1;++j)\\n            {\\n                if(nums[i]==nums[j])\\n                {\\n                    \\n                    continue;\\n                }\\n                else{\\n                    count+=nums[i];\\n                }\\n            }\\n        }\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "Promit_11",
                        "content": "For a question, there is two answers:\n1st one:\nclass Solution:\n def removeDuplicates(self, nums: list[int]) -> int:\n        new = []\n        for i in nums:\n            if i not in new:\n                new.append(i)\n        result = len(nums) - len(new)\n        return result\n2nd One:\nclass Solution:\n    def removeDuplicates(self, nums: list[int]) -> int:\n        j = 1\n        for i in range(1, len(nums)):\n            if nums[i] != nums[i - 1]:\n                nums[j] = nums[i]\n                 j += 1\n         return j\nBoth codes is giving the same answers. But Leet Code is accepting only 2nd one. For the first one, it is showing the wrong output. If anyone knows, why this is happening please let me know. \nLeet code problem number 26. Remove Duplicates from Sorted Array.\n#Avoid_indentations"
                    },
                    {
                        "username": "Justus7827",
                        "content": "My solution works in Visual Studio but doesn\\'t work the same in leetcode. I pass 17 testcases and get stuck on [ 1, 1, 2 ]. My code in VS removes the duplicate 1 so the array is now [ 1, 2 ] and also returns the correct count for \"k\". However, when I run the solution on here, it says my output was [ 1, 1 ]. Why does it do this?"
                    },
                    {
                        "username": "anvar__cool",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums = list(set(nums))\\n        return len(nums)\\nWhy it\\'s not working? I tried this code in jupyter notebook and it\\'s working, but here it doesn\\'t even change the nums, although if i print nums inside this method, stdout gives correct answer..."
                    },
                    {
                        "username": "n4pw01f",
                        "content": "They want you to move the elements in place for some reason, Set, etc won\\'t work. You have to basically move the elements"
                    },
                    {
                        "username": "ansh_2001",
                        "content": "Just return the number of distinct elements in the array and shift all the distinct elements to the front of array  in ascending order."
                    },
                    {
                        "username": "varshini-S",
                        "content": "why cant we use set over here? can anyone give me a valid reason or did I took the question wrong?\\nSet<Integer> set = new HashSet<>();\\n    for(int i : nums)\\n        set.add(i);\\n    return set.size();"
                    },
                    {
                        "username": "ksiv",
                        "content": "I think it comes from here \"remove the duplicates in-place \""
                    },
                    {
                        "username": "ansh_2001",
                        "content": "You can use set here as i also used it in my solution and it cleared all the test cases."
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "You don't have to return uniques in `nums`!!!, the catch here is you have to Change the array `nums` such that the first `k` elements of nums contain the unique elements, and then return `k` (number of uniques in `nums`) only!!!\n**Custom Judge** will check first 'K' elements in `nums` to grade your solution!!"
                    }
                ]
            },
            {
                "id": 2013979,
                "content": [
                    {
                        "username": "HomieOhmie",
                        "content": "Man, the wording of this problem and the weird error message that pops up on wrong answer to the testcase made this one quite difficult.\\n\\nThe error message \\'TypeError: # is not valid value for the expected return type integer[]\\' only tells you that the obtained nums list, cut by the number of unique elements, is wrong.\\n\\nIt\\'s easy to notice what the error implies if you check the values in the debugger,if you check what you will return, or if you print the values of nums yourself on a small instance of the problem."
                    },
                    {
                        "username": "jglopes91",
                        "content": "Completely confusing question..."
                    },
                    {
                        "username": "u37445",
                        "content": "\"It does not matter what you leave beyond the returned k (hence they are underscores).\"\\n\\nWrong Answer\\nInput: nums =[1,1,2]\\nOutput: [1,2,2]\\nExpected: [1,2]\\n\\n\\nhmmmmmm..........................."
                    },
                    {
                        "username": "the_bobba",
                        "content": "Problems with 50%+ downvotes should be removed..."
                    },
                    {
                        "username": "vinod95359199",
                        "content": "where i did mistake \\n\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) \\n    {\\n        int count=0;\\n        for(int i=0;i<=nums.length-1;++i)\\n        {\\n            for(int j=i+1;j<=nums.length-1;++j)\\n            {\\n                if(nums[i]==nums[j])\\n                {\\n                    \\n                    continue;\\n                }\\n                else{\\n                    count+=nums[i];\\n                }\\n            }\\n        }\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "Promit_11",
                        "content": "For a question, there is two answers:\n1st one:\nclass Solution:\n def removeDuplicates(self, nums: list[int]) -> int:\n        new = []\n        for i in nums:\n            if i not in new:\n                new.append(i)\n        result = len(nums) - len(new)\n        return result\n2nd One:\nclass Solution:\n    def removeDuplicates(self, nums: list[int]) -> int:\n        j = 1\n        for i in range(1, len(nums)):\n            if nums[i] != nums[i - 1]:\n                nums[j] = nums[i]\n                 j += 1\n         return j\nBoth codes is giving the same answers. But Leet Code is accepting only 2nd one. For the first one, it is showing the wrong output. If anyone knows, why this is happening please let me know. \nLeet code problem number 26. Remove Duplicates from Sorted Array.\n#Avoid_indentations"
                    },
                    {
                        "username": "Justus7827",
                        "content": "My solution works in Visual Studio but doesn\\'t work the same in leetcode. I pass 17 testcases and get stuck on [ 1, 1, 2 ]. My code in VS removes the duplicate 1 so the array is now [ 1, 2 ] and also returns the correct count for \"k\". However, when I run the solution on here, it says my output was [ 1, 1 ]. Why does it do this?"
                    },
                    {
                        "username": "anvar__cool",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums = list(set(nums))\\n        return len(nums)\\nWhy it\\'s not working? I tried this code in jupyter notebook and it\\'s working, but here it doesn\\'t even change the nums, although if i print nums inside this method, stdout gives correct answer..."
                    },
                    {
                        "username": "n4pw01f",
                        "content": "They want you to move the elements in place for some reason, Set, etc won\\'t work. You have to basically move the elements"
                    },
                    {
                        "username": "ansh_2001",
                        "content": "Just return the number of distinct elements in the array and shift all the distinct elements to the front of array  in ascending order."
                    },
                    {
                        "username": "varshini-S",
                        "content": "why cant we use set over here? can anyone give me a valid reason or did I took the question wrong?\\nSet<Integer> set = new HashSet<>();\\n    for(int i : nums)\\n        set.add(i);\\n    return set.size();"
                    },
                    {
                        "username": "ksiv",
                        "content": "I think it comes from here \"remove the duplicates in-place \""
                    },
                    {
                        "username": "ansh_2001",
                        "content": "You can use set here as i also used it in my solution and it cleared all the test cases."
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "You don't have to return uniques in `nums`!!!, the catch here is you have to Change the array `nums` such that the first `k` elements of nums contain the unique elements, and then return `k` (number of uniques in `nums`) only!!!\n**Custom Judge** will check first 'K' elements in `nums` to grade your solution!!"
                    }
                ]
            },
            {
                "id": 2013916,
                "content": [
                    {
                        "username": "HomieOhmie",
                        "content": "Man, the wording of this problem and the weird error message that pops up on wrong answer to the testcase made this one quite difficult.\\n\\nThe error message \\'TypeError: # is not valid value for the expected return type integer[]\\' only tells you that the obtained nums list, cut by the number of unique elements, is wrong.\\n\\nIt\\'s easy to notice what the error implies if you check the values in the debugger,if you check what you will return, or if you print the values of nums yourself on a small instance of the problem."
                    },
                    {
                        "username": "jglopes91",
                        "content": "Completely confusing question..."
                    },
                    {
                        "username": "u37445",
                        "content": "\"It does not matter what you leave beyond the returned k (hence they are underscores).\"\\n\\nWrong Answer\\nInput: nums =[1,1,2]\\nOutput: [1,2,2]\\nExpected: [1,2]\\n\\n\\nhmmmmmm..........................."
                    },
                    {
                        "username": "the_bobba",
                        "content": "Problems with 50%+ downvotes should be removed..."
                    },
                    {
                        "username": "vinod95359199",
                        "content": "where i did mistake \\n\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) \\n    {\\n        int count=0;\\n        for(int i=0;i<=nums.length-1;++i)\\n        {\\n            for(int j=i+1;j<=nums.length-1;++j)\\n            {\\n                if(nums[i]==nums[j])\\n                {\\n                    \\n                    continue;\\n                }\\n                else{\\n                    count+=nums[i];\\n                }\\n            }\\n        }\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "Promit_11",
                        "content": "For a question, there is two answers:\n1st one:\nclass Solution:\n def removeDuplicates(self, nums: list[int]) -> int:\n        new = []\n        for i in nums:\n            if i not in new:\n                new.append(i)\n        result = len(nums) - len(new)\n        return result\n2nd One:\nclass Solution:\n    def removeDuplicates(self, nums: list[int]) -> int:\n        j = 1\n        for i in range(1, len(nums)):\n            if nums[i] != nums[i - 1]:\n                nums[j] = nums[i]\n                 j += 1\n         return j\nBoth codes is giving the same answers. But Leet Code is accepting only 2nd one. For the first one, it is showing the wrong output. If anyone knows, why this is happening please let me know. \nLeet code problem number 26. Remove Duplicates from Sorted Array.\n#Avoid_indentations"
                    },
                    {
                        "username": "Justus7827",
                        "content": "My solution works in Visual Studio but doesn\\'t work the same in leetcode. I pass 17 testcases and get stuck on [ 1, 1, 2 ]. My code in VS removes the duplicate 1 so the array is now [ 1, 2 ] and also returns the correct count for \"k\". However, when I run the solution on here, it says my output was [ 1, 1 ]. Why does it do this?"
                    },
                    {
                        "username": "anvar__cool",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums = list(set(nums))\\n        return len(nums)\\nWhy it\\'s not working? I tried this code in jupyter notebook and it\\'s working, but here it doesn\\'t even change the nums, although if i print nums inside this method, stdout gives correct answer..."
                    },
                    {
                        "username": "n4pw01f",
                        "content": "They want you to move the elements in place for some reason, Set, etc won\\'t work. You have to basically move the elements"
                    },
                    {
                        "username": "ansh_2001",
                        "content": "Just return the number of distinct elements in the array and shift all the distinct elements to the front of array  in ascending order."
                    },
                    {
                        "username": "varshini-S",
                        "content": "why cant we use set over here? can anyone give me a valid reason or did I took the question wrong?\\nSet<Integer> set = new HashSet<>();\\n    for(int i : nums)\\n        set.add(i);\\n    return set.size();"
                    },
                    {
                        "username": "ksiv",
                        "content": "I think it comes from here \"remove the duplicates in-place \""
                    },
                    {
                        "username": "ansh_2001",
                        "content": "You can use set here as i also used it in my solution and it cleared all the test cases."
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "You don't have to return uniques in `nums`!!!, the catch here is you have to Change the array `nums` such that the first `k` elements of nums contain the unique elements, and then return `k` (number of uniques in `nums`) only!!!\n**Custom Judge** will check first 'K' elements in `nums` to grade your solution!!"
                    }
                ]
            },
            {
                "id": 2013795,
                "content": [
                    {
                        "username": "HomieOhmie",
                        "content": "Man, the wording of this problem and the weird error message that pops up on wrong answer to the testcase made this one quite difficult.\\n\\nThe error message \\'TypeError: # is not valid value for the expected return type integer[]\\' only tells you that the obtained nums list, cut by the number of unique elements, is wrong.\\n\\nIt\\'s easy to notice what the error implies if you check the values in the debugger,if you check what you will return, or if you print the values of nums yourself on a small instance of the problem."
                    },
                    {
                        "username": "jglopes91",
                        "content": "Completely confusing question..."
                    },
                    {
                        "username": "u37445",
                        "content": "\"It does not matter what you leave beyond the returned k (hence they are underscores).\"\\n\\nWrong Answer\\nInput: nums =[1,1,2]\\nOutput: [1,2,2]\\nExpected: [1,2]\\n\\n\\nhmmmmmm..........................."
                    },
                    {
                        "username": "the_bobba",
                        "content": "Problems with 50%+ downvotes should be removed..."
                    },
                    {
                        "username": "vinod95359199",
                        "content": "where i did mistake \\n\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) \\n    {\\n        int count=0;\\n        for(int i=0;i<=nums.length-1;++i)\\n        {\\n            for(int j=i+1;j<=nums.length-1;++j)\\n            {\\n                if(nums[i]==nums[j])\\n                {\\n                    \\n                    continue;\\n                }\\n                else{\\n                    count+=nums[i];\\n                }\\n            }\\n        }\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "Promit_11",
                        "content": "For a question, there is two answers:\n1st one:\nclass Solution:\n def removeDuplicates(self, nums: list[int]) -> int:\n        new = []\n        for i in nums:\n            if i not in new:\n                new.append(i)\n        result = len(nums) - len(new)\n        return result\n2nd One:\nclass Solution:\n    def removeDuplicates(self, nums: list[int]) -> int:\n        j = 1\n        for i in range(1, len(nums)):\n            if nums[i] != nums[i - 1]:\n                nums[j] = nums[i]\n                 j += 1\n         return j\nBoth codes is giving the same answers. But Leet Code is accepting only 2nd one. For the first one, it is showing the wrong output. If anyone knows, why this is happening please let me know. \nLeet code problem number 26. Remove Duplicates from Sorted Array.\n#Avoid_indentations"
                    },
                    {
                        "username": "Justus7827",
                        "content": "My solution works in Visual Studio but doesn\\'t work the same in leetcode. I pass 17 testcases and get stuck on [ 1, 1, 2 ]. My code in VS removes the duplicate 1 so the array is now [ 1, 2 ] and also returns the correct count for \"k\". However, when I run the solution on here, it says my output was [ 1, 1 ]. Why does it do this?"
                    },
                    {
                        "username": "anvar__cool",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums = list(set(nums))\\n        return len(nums)\\nWhy it\\'s not working? I tried this code in jupyter notebook and it\\'s working, but here it doesn\\'t even change the nums, although if i print nums inside this method, stdout gives correct answer..."
                    },
                    {
                        "username": "n4pw01f",
                        "content": "They want you to move the elements in place for some reason, Set, etc won\\'t work. You have to basically move the elements"
                    },
                    {
                        "username": "ansh_2001",
                        "content": "Just return the number of distinct elements in the array and shift all the distinct elements to the front of array  in ascending order."
                    },
                    {
                        "username": "varshini-S",
                        "content": "why cant we use set over here? can anyone give me a valid reason or did I took the question wrong?\\nSet<Integer> set = new HashSet<>();\\n    for(int i : nums)\\n        set.add(i);\\n    return set.size();"
                    },
                    {
                        "username": "ksiv",
                        "content": "I think it comes from here \"remove the duplicates in-place \""
                    },
                    {
                        "username": "ansh_2001",
                        "content": "You can use set here as i also used it in my solution and it cleared all the test cases."
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "You don't have to return uniques in `nums`!!!, the catch here is you have to Change the array `nums` such that the first `k` elements of nums contain the unique elements, and then return `k` (number of uniques in `nums`) only!!!\n**Custom Judge** will check first 'K' elements in `nums` to grade your solution!!"
                    }
                ]
            },
            {
                "id": 2013355,
                "content": [
                    {
                        "username": "HomieOhmie",
                        "content": "Man, the wording of this problem and the weird error message that pops up on wrong answer to the testcase made this one quite difficult.\\n\\nThe error message \\'TypeError: # is not valid value for the expected return type integer[]\\' only tells you that the obtained nums list, cut by the number of unique elements, is wrong.\\n\\nIt\\'s easy to notice what the error implies if you check the values in the debugger,if you check what you will return, or if you print the values of nums yourself on a small instance of the problem."
                    },
                    {
                        "username": "jglopes91",
                        "content": "Completely confusing question..."
                    },
                    {
                        "username": "u37445",
                        "content": "\"It does not matter what you leave beyond the returned k (hence they are underscores).\"\\n\\nWrong Answer\\nInput: nums =[1,1,2]\\nOutput: [1,2,2]\\nExpected: [1,2]\\n\\n\\nhmmmmmm..........................."
                    },
                    {
                        "username": "the_bobba",
                        "content": "Problems with 50%+ downvotes should be removed..."
                    },
                    {
                        "username": "vinod95359199",
                        "content": "where i did mistake \\n\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) \\n    {\\n        int count=0;\\n        for(int i=0;i<=nums.length-1;++i)\\n        {\\n            for(int j=i+1;j<=nums.length-1;++j)\\n            {\\n                if(nums[i]==nums[j])\\n                {\\n                    \\n                    continue;\\n                }\\n                else{\\n                    count+=nums[i];\\n                }\\n            }\\n        }\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "Promit_11",
                        "content": "For a question, there is two answers:\n1st one:\nclass Solution:\n def removeDuplicates(self, nums: list[int]) -> int:\n        new = []\n        for i in nums:\n            if i not in new:\n                new.append(i)\n        result = len(nums) - len(new)\n        return result\n2nd One:\nclass Solution:\n    def removeDuplicates(self, nums: list[int]) -> int:\n        j = 1\n        for i in range(1, len(nums)):\n            if nums[i] != nums[i - 1]:\n                nums[j] = nums[i]\n                 j += 1\n         return j\nBoth codes is giving the same answers. But Leet Code is accepting only 2nd one. For the first one, it is showing the wrong output. If anyone knows, why this is happening please let me know. \nLeet code problem number 26. Remove Duplicates from Sorted Array.\n#Avoid_indentations"
                    },
                    {
                        "username": "Justus7827",
                        "content": "My solution works in Visual Studio but doesn\\'t work the same in leetcode. I pass 17 testcases and get stuck on [ 1, 1, 2 ]. My code in VS removes the duplicate 1 so the array is now [ 1, 2 ] and also returns the correct count for \"k\". However, when I run the solution on here, it says my output was [ 1, 1 ]. Why does it do this?"
                    },
                    {
                        "username": "anvar__cool",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums = list(set(nums))\\n        return len(nums)\\nWhy it\\'s not working? I tried this code in jupyter notebook and it\\'s working, but here it doesn\\'t even change the nums, although if i print nums inside this method, stdout gives correct answer..."
                    },
                    {
                        "username": "n4pw01f",
                        "content": "They want you to move the elements in place for some reason, Set, etc won\\'t work. You have to basically move the elements"
                    },
                    {
                        "username": "ansh_2001",
                        "content": "Just return the number of distinct elements in the array and shift all the distinct elements to the front of array  in ascending order."
                    },
                    {
                        "username": "varshini-S",
                        "content": "why cant we use set over here? can anyone give me a valid reason or did I took the question wrong?\\nSet<Integer> set = new HashSet<>();\\n    for(int i : nums)\\n        set.add(i);\\n    return set.size();"
                    },
                    {
                        "username": "ksiv",
                        "content": "I think it comes from here \"remove the duplicates in-place \""
                    },
                    {
                        "username": "ansh_2001",
                        "content": "You can use set here as i also used it in my solution and it cleared all the test cases."
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "You don't have to return uniques in `nums`!!!, the catch here is you have to Change the array `nums` such that the first `k` elements of nums contain the unique elements, and then return `k` (number of uniques in `nums`) only!!!\n**Custom Judge** will check first 'K' elements in `nums` to grade your solution!!"
                    }
                ]
            },
            {
                "id": 2011307,
                "content": [
                    {
                        "username": "NoobCoder1231231231",
                        "content": "Why can\\'t we just create a new list and name it nums?\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@ksiv](/ksiv) Thank you"
                    },
                    {
                        "username": "ksiv",
                        "content": "I think it comes from here \"remove the duplicates in-place \""
                    },
                    {
                        "username": "darthnithin",
                        "content": "So i'm looping backwards through the nums list. My question is why does it take 20 times longer when i do \n `nums.remove(number)`\ninstead of\n`nums[i]`\n\nEdit: I figured it out i think: `remove` searches the list to find the element"
                    },
                    {
                        "username": "n4pw01f",
                        "content": "Horribly worded question"
                    },
                    {
                        "username": "jmiah717",
                        "content": "This is bugged. I keep getting errors on my output being [] when in the debugger it clearly shows my nums string is not empty. Whatever testing you are doing behind the scenes is slicing my array and thus causing the result to be invalid, when it is in fact, a valid entry. I even modified for a single number in the list when I shouldn\\'t have had to for the same reason. \\n"
                    },
                    {
                        "username": "ksiv",
                        "content": "// My solution does not work here:\n \nclass Solution {\n    public  int removeDuplicates(int[] nums) {\n        List<Integer> list = IntStream.of(nums).distinct().boxed().collect(Collectors.toList());\n        nums = list.stream().mapToInt(j->j).toArray();\n\n        return list.size();\n    }\n}\n\n\n/*\nSays output is [1,1]. meaning built-in distinct did not work well. I tried to see what Jave they use System.getProperty(\"java.version\") - but it's not available (unlike GFG).\nWorks fine locally on jdk-11.0.12.7-hotspot */\n\n// p.s. i'm trying to make this commet look as buggy. For some reason the return section is treated as a piece of code :-)"
                    },
                    {
                        "username": "talmeezfaizy",
                        "content": "Question is not clearly explained but by analysing the output I could assess the requirement. \\nYou have to return the integer value of number of unique elements.\\nMain function which is not visible but I could assess from the solution, takes that integer (assume it to be k) and print  first k elements of the nums array which is the final expected output. \\n\\nAs it prints the elements of nums array, hence creating a new array is of no use, because we have to modify the nums array. \\n\\nOne thing is surprising that first I created a different array and assigned it to the nums, but that solution didn\\'t work. So somewhere there is a check which wants us to maintain the space complexity of O(1) and hence modify the nums array itself while traversing it. \\n\\n\\nI can share the logic for it, if someone needs it. "
                    },
                    {
                        "username": "pijushmondal617",
                        "content": "problem is easy, but this description makes its difficult. terribly described. could be written in simple words"
                    },
                    {
                        "username": "DIVYARAJSINH2906",
                        "content": "For this problem when I run my code in intellij that time it's gives me the same output as given in example but I am getting wrong answer anybody can tell me what is happening?\n\n//if length is 1 or 0 it returns same number\nif(nums.length==0 || nums.length==1){\n            return nums.length;\n        }\n        int[] arr=new int[nums.length];\n        int index=0;\n        for(int i=0;i<nums.length;i++){\n            while(i<nums.length-1 && nums[i]==nums[i+1]){\n                //just move the nums index to ahead\n                i++;\n            }\n            //after loop end assign the value of last nums index to arr index\n            arr[index]=nums[i];\n            index++;\n        }\n        return index; "
                    },
                    {
                        "username": "JL1172",
                        "content": "why does this not work ? \\nvar removeDuplicates = function(nums) {\\n   let result = [];\\nfor (let i in nums) {\\n    if (result.indexOf(nums[i]) === -1) {\\n        result.push(nums[i]);\\n    }\\n}\\nreturn result;\\n};\\nIt feels like its super simple and when I console.log the result it works just fine and I get a new array with no duplicates. When i return the result It shows up as an empty array. What am I not getting?"
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Re-read the description. Return the number of elements after de-dupe, not an array"
                    },
                    {
                        "username": "KRATOS_23",
                        "content": "Im so confused. Why cant we just make a HashSet and return its size? What are we doing here?"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "actually you need to modify `nums` aswell, when you return `k`, the `Custom Judge` will check the first `K` elements of `nums` and compare it with the correct output!!"
                    }
                ]
            },
            {
                "id": 2010196,
                "content": [
                    {
                        "username": "NoobCoder1231231231",
                        "content": "Why can\\'t we just create a new list and name it nums?\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@ksiv](/ksiv) Thank you"
                    },
                    {
                        "username": "ksiv",
                        "content": "I think it comes from here \"remove the duplicates in-place \""
                    },
                    {
                        "username": "darthnithin",
                        "content": "So i'm looping backwards through the nums list. My question is why does it take 20 times longer when i do \n `nums.remove(number)`\ninstead of\n`nums[i]`\n\nEdit: I figured it out i think: `remove` searches the list to find the element"
                    },
                    {
                        "username": "n4pw01f",
                        "content": "Horribly worded question"
                    },
                    {
                        "username": "jmiah717",
                        "content": "This is bugged. I keep getting errors on my output being [] when in the debugger it clearly shows my nums string is not empty. Whatever testing you are doing behind the scenes is slicing my array and thus causing the result to be invalid, when it is in fact, a valid entry. I even modified for a single number in the list when I shouldn\\'t have had to for the same reason. \\n"
                    },
                    {
                        "username": "ksiv",
                        "content": "// My solution does not work here:\n \nclass Solution {\n    public  int removeDuplicates(int[] nums) {\n        List<Integer> list = IntStream.of(nums).distinct().boxed().collect(Collectors.toList());\n        nums = list.stream().mapToInt(j->j).toArray();\n\n        return list.size();\n    }\n}\n\n\n/*\nSays output is [1,1]. meaning built-in distinct did not work well. I tried to see what Jave they use System.getProperty(\"java.version\") - but it's not available (unlike GFG).\nWorks fine locally on jdk-11.0.12.7-hotspot */\n\n// p.s. i'm trying to make this commet look as buggy. For some reason the return section is treated as a piece of code :-)"
                    },
                    {
                        "username": "talmeezfaizy",
                        "content": "Question is not clearly explained but by analysing the output I could assess the requirement. \\nYou have to return the integer value of number of unique elements.\\nMain function which is not visible but I could assess from the solution, takes that integer (assume it to be k) and print  first k elements of the nums array which is the final expected output. \\n\\nAs it prints the elements of nums array, hence creating a new array is of no use, because we have to modify the nums array. \\n\\nOne thing is surprising that first I created a different array and assigned it to the nums, but that solution didn\\'t work. So somewhere there is a check which wants us to maintain the space complexity of O(1) and hence modify the nums array itself while traversing it. \\n\\n\\nI can share the logic for it, if someone needs it. "
                    },
                    {
                        "username": "pijushmondal617",
                        "content": "problem is easy, but this description makes its difficult. terribly described. could be written in simple words"
                    },
                    {
                        "username": "DIVYARAJSINH2906",
                        "content": "For this problem when I run my code in intellij that time it's gives me the same output as given in example but I am getting wrong answer anybody can tell me what is happening?\n\n//if length is 1 or 0 it returns same number\nif(nums.length==0 || nums.length==1){\n            return nums.length;\n        }\n        int[] arr=new int[nums.length];\n        int index=0;\n        for(int i=0;i<nums.length;i++){\n            while(i<nums.length-1 && nums[i]==nums[i+1]){\n                //just move the nums index to ahead\n                i++;\n            }\n            //after loop end assign the value of last nums index to arr index\n            arr[index]=nums[i];\n            index++;\n        }\n        return index; "
                    },
                    {
                        "username": "JL1172",
                        "content": "why does this not work ? \\nvar removeDuplicates = function(nums) {\\n   let result = [];\\nfor (let i in nums) {\\n    if (result.indexOf(nums[i]) === -1) {\\n        result.push(nums[i]);\\n    }\\n}\\nreturn result;\\n};\\nIt feels like its super simple and when I console.log the result it works just fine and I get a new array with no duplicates. When i return the result It shows up as an empty array. What am I not getting?"
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Re-read the description. Return the number of elements after de-dupe, not an array"
                    },
                    {
                        "username": "KRATOS_23",
                        "content": "Im so confused. Why cant we just make a HashSet and return its size? What are we doing here?"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "actually you need to modify `nums` aswell, when you return `k`, the `Custom Judge` will check the first `K` elements of `nums` and compare it with the correct output!!"
                    }
                ]
            },
            {
                "id": 2009504,
                "content": [
                    {
                        "username": "NoobCoder1231231231",
                        "content": "Why can\\'t we just create a new list and name it nums?\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@ksiv](/ksiv) Thank you"
                    },
                    {
                        "username": "ksiv",
                        "content": "I think it comes from here \"remove the duplicates in-place \""
                    },
                    {
                        "username": "darthnithin",
                        "content": "So i'm looping backwards through the nums list. My question is why does it take 20 times longer when i do \n `nums.remove(number)`\ninstead of\n`nums[i]`\n\nEdit: I figured it out i think: `remove` searches the list to find the element"
                    },
                    {
                        "username": "n4pw01f",
                        "content": "Horribly worded question"
                    },
                    {
                        "username": "jmiah717",
                        "content": "This is bugged. I keep getting errors on my output being [] when in the debugger it clearly shows my nums string is not empty. Whatever testing you are doing behind the scenes is slicing my array and thus causing the result to be invalid, when it is in fact, a valid entry. I even modified for a single number in the list when I shouldn\\'t have had to for the same reason. \\n"
                    },
                    {
                        "username": "ksiv",
                        "content": "// My solution does not work here:\n \nclass Solution {\n    public  int removeDuplicates(int[] nums) {\n        List<Integer> list = IntStream.of(nums).distinct().boxed().collect(Collectors.toList());\n        nums = list.stream().mapToInt(j->j).toArray();\n\n        return list.size();\n    }\n}\n\n\n/*\nSays output is [1,1]. meaning built-in distinct did not work well. I tried to see what Jave they use System.getProperty(\"java.version\") - but it's not available (unlike GFG).\nWorks fine locally on jdk-11.0.12.7-hotspot */\n\n// p.s. i'm trying to make this commet look as buggy. For some reason the return section is treated as a piece of code :-)"
                    },
                    {
                        "username": "talmeezfaizy",
                        "content": "Question is not clearly explained but by analysing the output I could assess the requirement. \\nYou have to return the integer value of number of unique elements.\\nMain function which is not visible but I could assess from the solution, takes that integer (assume it to be k) and print  first k elements of the nums array which is the final expected output. \\n\\nAs it prints the elements of nums array, hence creating a new array is of no use, because we have to modify the nums array. \\n\\nOne thing is surprising that first I created a different array and assigned it to the nums, but that solution didn\\'t work. So somewhere there is a check which wants us to maintain the space complexity of O(1) and hence modify the nums array itself while traversing it. \\n\\n\\nI can share the logic for it, if someone needs it. "
                    },
                    {
                        "username": "pijushmondal617",
                        "content": "problem is easy, but this description makes its difficult. terribly described. could be written in simple words"
                    },
                    {
                        "username": "DIVYARAJSINH2906",
                        "content": "For this problem when I run my code in intellij that time it's gives me the same output as given in example but I am getting wrong answer anybody can tell me what is happening?\n\n//if length is 1 or 0 it returns same number\nif(nums.length==0 || nums.length==1){\n            return nums.length;\n        }\n        int[] arr=new int[nums.length];\n        int index=0;\n        for(int i=0;i<nums.length;i++){\n            while(i<nums.length-1 && nums[i]==nums[i+1]){\n                //just move the nums index to ahead\n                i++;\n            }\n            //after loop end assign the value of last nums index to arr index\n            arr[index]=nums[i];\n            index++;\n        }\n        return index; "
                    },
                    {
                        "username": "JL1172",
                        "content": "why does this not work ? \\nvar removeDuplicates = function(nums) {\\n   let result = [];\\nfor (let i in nums) {\\n    if (result.indexOf(nums[i]) === -1) {\\n        result.push(nums[i]);\\n    }\\n}\\nreturn result;\\n};\\nIt feels like its super simple and when I console.log the result it works just fine and I get a new array with no duplicates. When i return the result It shows up as an empty array. What am I not getting?"
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Re-read the description. Return the number of elements after de-dupe, not an array"
                    },
                    {
                        "username": "KRATOS_23",
                        "content": "Im so confused. Why cant we just make a HashSet and return its size? What are we doing here?"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "actually you need to modify `nums` aswell, when you return `k`, the `Custom Judge` will check the first `K` elements of `nums` and compare it with the correct output!!"
                    }
                ]
            },
            {
                "id": 2008496,
                "content": [
                    {
                        "username": "NoobCoder1231231231",
                        "content": "Why can\\'t we just create a new list and name it nums?\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@ksiv](/ksiv) Thank you"
                    },
                    {
                        "username": "ksiv",
                        "content": "I think it comes from here \"remove the duplicates in-place \""
                    },
                    {
                        "username": "darthnithin",
                        "content": "So i'm looping backwards through the nums list. My question is why does it take 20 times longer when i do \n `nums.remove(number)`\ninstead of\n`nums[i]`\n\nEdit: I figured it out i think: `remove` searches the list to find the element"
                    },
                    {
                        "username": "n4pw01f",
                        "content": "Horribly worded question"
                    },
                    {
                        "username": "jmiah717",
                        "content": "This is bugged. I keep getting errors on my output being [] when in the debugger it clearly shows my nums string is not empty. Whatever testing you are doing behind the scenes is slicing my array and thus causing the result to be invalid, when it is in fact, a valid entry. I even modified for a single number in the list when I shouldn\\'t have had to for the same reason. \\n"
                    },
                    {
                        "username": "ksiv",
                        "content": "// My solution does not work here:\n \nclass Solution {\n    public  int removeDuplicates(int[] nums) {\n        List<Integer> list = IntStream.of(nums).distinct().boxed().collect(Collectors.toList());\n        nums = list.stream().mapToInt(j->j).toArray();\n\n        return list.size();\n    }\n}\n\n\n/*\nSays output is [1,1]. meaning built-in distinct did not work well. I tried to see what Jave they use System.getProperty(\"java.version\") - but it's not available (unlike GFG).\nWorks fine locally on jdk-11.0.12.7-hotspot */\n\n// p.s. i'm trying to make this commet look as buggy. For some reason the return section is treated as a piece of code :-)"
                    },
                    {
                        "username": "talmeezfaizy",
                        "content": "Question is not clearly explained but by analysing the output I could assess the requirement. \\nYou have to return the integer value of number of unique elements.\\nMain function which is not visible but I could assess from the solution, takes that integer (assume it to be k) and print  first k elements of the nums array which is the final expected output. \\n\\nAs it prints the elements of nums array, hence creating a new array is of no use, because we have to modify the nums array. \\n\\nOne thing is surprising that first I created a different array and assigned it to the nums, but that solution didn\\'t work. So somewhere there is a check which wants us to maintain the space complexity of O(1) and hence modify the nums array itself while traversing it. \\n\\n\\nI can share the logic for it, if someone needs it. "
                    },
                    {
                        "username": "pijushmondal617",
                        "content": "problem is easy, but this description makes its difficult. terribly described. could be written in simple words"
                    },
                    {
                        "username": "DIVYARAJSINH2906",
                        "content": "For this problem when I run my code in intellij that time it's gives me the same output as given in example but I am getting wrong answer anybody can tell me what is happening?\n\n//if length is 1 or 0 it returns same number\nif(nums.length==0 || nums.length==1){\n            return nums.length;\n        }\n        int[] arr=new int[nums.length];\n        int index=0;\n        for(int i=0;i<nums.length;i++){\n            while(i<nums.length-1 && nums[i]==nums[i+1]){\n                //just move the nums index to ahead\n                i++;\n            }\n            //after loop end assign the value of last nums index to arr index\n            arr[index]=nums[i];\n            index++;\n        }\n        return index; "
                    },
                    {
                        "username": "JL1172",
                        "content": "why does this not work ? \\nvar removeDuplicates = function(nums) {\\n   let result = [];\\nfor (let i in nums) {\\n    if (result.indexOf(nums[i]) === -1) {\\n        result.push(nums[i]);\\n    }\\n}\\nreturn result;\\n};\\nIt feels like its super simple and when I console.log the result it works just fine and I get a new array with no duplicates. When i return the result It shows up as an empty array. What am I not getting?"
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Re-read the description. Return the number of elements after de-dupe, not an array"
                    },
                    {
                        "username": "KRATOS_23",
                        "content": "Im so confused. Why cant we just make a HashSet and return its size? What are we doing here?"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "actually you need to modify `nums` aswell, when you return `k`, the `Custom Judge` will check the first `K` elements of `nums` and compare it with the correct output!!"
                    }
                ]
            },
            {
                "id": 2008402,
                "content": [
                    {
                        "username": "NoobCoder1231231231",
                        "content": "Why can\\'t we just create a new list and name it nums?\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@ksiv](/ksiv) Thank you"
                    },
                    {
                        "username": "ksiv",
                        "content": "I think it comes from here \"remove the duplicates in-place \""
                    },
                    {
                        "username": "darthnithin",
                        "content": "So i'm looping backwards through the nums list. My question is why does it take 20 times longer when i do \n `nums.remove(number)`\ninstead of\n`nums[i]`\n\nEdit: I figured it out i think: `remove` searches the list to find the element"
                    },
                    {
                        "username": "n4pw01f",
                        "content": "Horribly worded question"
                    },
                    {
                        "username": "jmiah717",
                        "content": "This is bugged. I keep getting errors on my output being [] when in the debugger it clearly shows my nums string is not empty. Whatever testing you are doing behind the scenes is slicing my array and thus causing the result to be invalid, when it is in fact, a valid entry. I even modified for a single number in the list when I shouldn\\'t have had to for the same reason. \\n"
                    },
                    {
                        "username": "ksiv",
                        "content": "// My solution does not work here:\n \nclass Solution {\n    public  int removeDuplicates(int[] nums) {\n        List<Integer> list = IntStream.of(nums).distinct().boxed().collect(Collectors.toList());\n        nums = list.stream().mapToInt(j->j).toArray();\n\n        return list.size();\n    }\n}\n\n\n/*\nSays output is [1,1]. meaning built-in distinct did not work well. I tried to see what Jave they use System.getProperty(\"java.version\") - but it's not available (unlike GFG).\nWorks fine locally on jdk-11.0.12.7-hotspot */\n\n// p.s. i'm trying to make this commet look as buggy. For some reason the return section is treated as a piece of code :-)"
                    },
                    {
                        "username": "talmeezfaizy",
                        "content": "Question is not clearly explained but by analysing the output I could assess the requirement. \\nYou have to return the integer value of number of unique elements.\\nMain function which is not visible but I could assess from the solution, takes that integer (assume it to be k) and print  first k elements of the nums array which is the final expected output. \\n\\nAs it prints the elements of nums array, hence creating a new array is of no use, because we have to modify the nums array. \\n\\nOne thing is surprising that first I created a different array and assigned it to the nums, but that solution didn\\'t work. So somewhere there is a check which wants us to maintain the space complexity of O(1) and hence modify the nums array itself while traversing it. \\n\\n\\nI can share the logic for it, if someone needs it. "
                    },
                    {
                        "username": "pijushmondal617",
                        "content": "problem is easy, but this description makes its difficult. terribly described. could be written in simple words"
                    },
                    {
                        "username": "DIVYARAJSINH2906",
                        "content": "For this problem when I run my code in intellij that time it's gives me the same output as given in example but I am getting wrong answer anybody can tell me what is happening?\n\n//if length is 1 or 0 it returns same number\nif(nums.length==0 || nums.length==1){\n            return nums.length;\n        }\n        int[] arr=new int[nums.length];\n        int index=0;\n        for(int i=0;i<nums.length;i++){\n            while(i<nums.length-1 && nums[i]==nums[i+1]){\n                //just move the nums index to ahead\n                i++;\n            }\n            //after loop end assign the value of last nums index to arr index\n            arr[index]=nums[i];\n            index++;\n        }\n        return index; "
                    },
                    {
                        "username": "JL1172",
                        "content": "why does this not work ? \\nvar removeDuplicates = function(nums) {\\n   let result = [];\\nfor (let i in nums) {\\n    if (result.indexOf(nums[i]) === -1) {\\n        result.push(nums[i]);\\n    }\\n}\\nreturn result;\\n};\\nIt feels like its super simple and when I console.log the result it works just fine and I get a new array with no duplicates. When i return the result It shows up as an empty array. What am I not getting?"
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Re-read the description. Return the number of elements after de-dupe, not an array"
                    },
                    {
                        "username": "KRATOS_23",
                        "content": "Im so confused. Why cant we just make a HashSet and return its size? What are we doing here?"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "actually you need to modify `nums` aswell, when you return `k`, the `Custom Judge` will check the first `K` elements of `nums` and compare it with the correct output!!"
                    }
                ]
            },
            {
                "id": 2007365,
                "content": [
                    {
                        "username": "NoobCoder1231231231",
                        "content": "Why can\\'t we just create a new list and name it nums?\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@ksiv](/ksiv) Thank you"
                    },
                    {
                        "username": "ksiv",
                        "content": "I think it comes from here \"remove the duplicates in-place \""
                    },
                    {
                        "username": "darthnithin",
                        "content": "So i'm looping backwards through the nums list. My question is why does it take 20 times longer when i do \n `nums.remove(number)`\ninstead of\n`nums[i]`\n\nEdit: I figured it out i think: `remove` searches the list to find the element"
                    },
                    {
                        "username": "n4pw01f",
                        "content": "Horribly worded question"
                    },
                    {
                        "username": "jmiah717",
                        "content": "This is bugged. I keep getting errors on my output being [] when in the debugger it clearly shows my nums string is not empty. Whatever testing you are doing behind the scenes is slicing my array and thus causing the result to be invalid, when it is in fact, a valid entry. I even modified for a single number in the list when I shouldn\\'t have had to for the same reason. \\n"
                    },
                    {
                        "username": "ksiv",
                        "content": "// My solution does not work here:\n \nclass Solution {\n    public  int removeDuplicates(int[] nums) {\n        List<Integer> list = IntStream.of(nums).distinct().boxed().collect(Collectors.toList());\n        nums = list.stream().mapToInt(j->j).toArray();\n\n        return list.size();\n    }\n}\n\n\n/*\nSays output is [1,1]. meaning built-in distinct did not work well. I tried to see what Jave they use System.getProperty(\"java.version\") - but it's not available (unlike GFG).\nWorks fine locally on jdk-11.0.12.7-hotspot */\n\n// p.s. i'm trying to make this commet look as buggy. For some reason the return section is treated as a piece of code :-)"
                    },
                    {
                        "username": "talmeezfaizy",
                        "content": "Question is not clearly explained but by analysing the output I could assess the requirement. \\nYou have to return the integer value of number of unique elements.\\nMain function which is not visible but I could assess from the solution, takes that integer (assume it to be k) and print  first k elements of the nums array which is the final expected output. \\n\\nAs it prints the elements of nums array, hence creating a new array is of no use, because we have to modify the nums array. \\n\\nOne thing is surprising that first I created a different array and assigned it to the nums, but that solution didn\\'t work. So somewhere there is a check which wants us to maintain the space complexity of O(1) and hence modify the nums array itself while traversing it. \\n\\n\\nI can share the logic for it, if someone needs it. "
                    },
                    {
                        "username": "pijushmondal617",
                        "content": "problem is easy, but this description makes its difficult. terribly described. could be written in simple words"
                    },
                    {
                        "username": "DIVYARAJSINH2906",
                        "content": "For this problem when I run my code in intellij that time it's gives me the same output as given in example but I am getting wrong answer anybody can tell me what is happening?\n\n//if length is 1 or 0 it returns same number\nif(nums.length==0 || nums.length==1){\n            return nums.length;\n        }\n        int[] arr=new int[nums.length];\n        int index=0;\n        for(int i=0;i<nums.length;i++){\n            while(i<nums.length-1 && nums[i]==nums[i+1]){\n                //just move the nums index to ahead\n                i++;\n            }\n            //after loop end assign the value of last nums index to arr index\n            arr[index]=nums[i];\n            index++;\n        }\n        return index; "
                    },
                    {
                        "username": "JL1172",
                        "content": "why does this not work ? \\nvar removeDuplicates = function(nums) {\\n   let result = [];\\nfor (let i in nums) {\\n    if (result.indexOf(nums[i]) === -1) {\\n        result.push(nums[i]);\\n    }\\n}\\nreturn result;\\n};\\nIt feels like its super simple and when I console.log the result it works just fine and I get a new array with no duplicates. When i return the result It shows up as an empty array. What am I not getting?"
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Re-read the description. Return the number of elements after de-dupe, not an array"
                    },
                    {
                        "username": "KRATOS_23",
                        "content": "Im so confused. Why cant we just make a HashSet and return its size? What are we doing here?"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "actually you need to modify `nums` aswell, when you return `k`, the `Custom Judge` will check the first `K` elements of `nums` and compare it with the correct output!!"
                    }
                ]
            },
            {
                "id": 2007269,
                "content": [
                    {
                        "username": "NoobCoder1231231231",
                        "content": "Why can\\'t we just create a new list and name it nums?\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@ksiv](/ksiv) Thank you"
                    },
                    {
                        "username": "ksiv",
                        "content": "I think it comes from here \"remove the duplicates in-place \""
                    },
                    {
                        "username": "darthnithin",
                        "content": "So i'm looping backwards through the nums list. My question is why does it take 20 times longer when i do \n `nums.remove(number)`\ninstead of\n`nums[i]`\n\nEdit: I figured it out i think: `remove` searches the list to find the element"
                    },
                    {
                        "username": "n4pw01f",
                        "content": "Horribly worded question"
                    },
                    {
                        "username": "jmiah717",
                        "content": "This is bugged. I keep getting errors on my output being [] when in the debugger it clearly shows my nums string is not empty. Whatever testing you are doing behind the scenes is slicing my array and thus causing the result to be invalid, when it is in fact, a valid entry. I even modified for a single number in the list when I shouldn\\'t have had to for the same reason. \\n"
                    },
                    {
                        "username": "ksiv",
                        "content": "// My solution does not work here:\n \nclass Solution {\n    public  int removeDuplicates(int[] nums) {\n        List<Integer> list = IntStream.of(nums).distinct().boxed().collect(Collectors.toList());\n        nums = list.stream().mapToInt(j->j).toArray();\n\n        return list.size();\n    }\n}\n\n\n/*\nSays output is [1,1]. meaning built-in distinct did not work well. I tried to see what Jave they use System.getProperty(\"java.version\") - but it's not available (unlike GFG).\nWorks fine locally on jdk-11.0.12.7-hotspot */\n\n// p.s. i'm trying to make this commet look as buggy. For some reason the return section is treated as a piece of code :-)"
                    },
                    {
                        "username": "talmeezfaizy",
                        "content": "Question is not clearly explained but by analysing the output I could assess the requirement. \\nYou have to return the integer value of number of unique elements.\\nMain function which is not visible but I could assess from the solution, takes that integer (assume it to be k) and print  first k elements of the nums array which is the final expected output. \\n\\nAs it prints the elements of nums array, hence creating a new array is of no use, because we have to modify the nums array. \\n\\nOne thing is surprising that first I created a different array and assigned it to the nums, but that solution didn\\'t work. So somewhere there is a check which wants us to maintain the space complexity of O(1) and hence modify the nums array itself while traversing it. \\n\\n\\nI can share the logic for it, if someone needs it. "
                    },
                    {
                        "username": "pijushmondal617",
                        "content": "problem is easy, but this description makes its difficult. terribly described. could be written in simple words"
                    },
                    {
                        "username": "DIVYARAJSINH2906",
                        "content": "For this problem when I run my code in intellij that time it's gives me the same output as given in example but I am getting wrong answer anybody can tell me what is happening?\n\n//if length is 1 or 0 it returns same number\nif(nums.length==0 || nums.length==1){\n            return nums.length;\n        }\n        int[] arr=new int[nums.length];\n        int index=0;\n        for(int i=0;i<nums.length;i++){\n            while(i<nums.length-1 && nums[i]==nums[i+1]){\n                //just move the nums index to ahead\n                i++;\n            }\n            //after loop end assign the value of last nums index to arr index\n            arr[index]=nums[i];\n            index++;\n        }\n        return index; "
                    },
                    {
                        "username": "JL1172",
                        "content": "why does this not work ? \\nvar removeDuplicates = function(nums) {\\n   let result = [];\\nfor (let i in nums) {\\n    if (result.indexOf(nums[i]) === -1) {\\n        result.push(nums[i]);\\n    }\\n}\\nreturn result;\\n};\\nIt feels like its super simple and when I console.log the result it works just fine and I get a new array with no duplicates. When i return the result It shows up as an empty array. What am I not getting?"
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Re-read the description. Return the number of elements after de-dupe, not an array"
                    },
                    {
                        "username": "KRATOS_23",
                        "content": "Im so confused. Why cant we just make a HashSet and return its size? What are we doing here?"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "actually you need to modify `nums` aswell, when you return `k`, the `Custom Judge` will check the first `K` elements of `nums` and compare it with the correct output!!"
                    }
                ]
            },
            {
                "id": 2004835,
                "content": [
                    {
                        "username": "NoobCoder1231231231",
                        "content": "Why can\\'t we just create a new list and name it nums?\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@ksiv](/ksiv) Thank you"
                    },
                    {
                        "username": "ksiv",
                        "content": "I think it comes from here \"remove the duplicates in-place \""
                    },
                    {
                        "username": "darthnithin",
                        "content": "So i'm looping backwards through the nums list. My question is why does it take 20 times longer when i do \n `nums.remove(number)`\ninstead of\n`nums[i]`\n\nEdit: I figured it out i think: `remove` searches the list to find the element"
                    },
                    {
                        "username": "n4pw01f",
                        "content": "Horribly worded question"
                    },
                    {
                        "username": "jmiah717",
                        "content": "This is bugged. I keep getting errors on my output being [] when in the debugger it clearly shows my nums string is not empty. Whatever testing you are doing behind the scenes is slicing my array and thus causing the result to be invalid, when it is in fact, a valid entry. I even modified for a single number in the list when I shouldn\\'t have had to for the same reason. \\n"
                    },
                    {
                        "username": "ksiv",
                        "content": "// My solution does not work here:\n \nclass Solution {\n    public  int removeDuplicates(int[] nums) {\n        List<Integer> list = IntStream.of(nums).distinct().boxed().collect(Collectors.toList());\n        nums = list.stream().mapToInt(j->j).toArray();\n\n        return list.size();\n    }\n}\n\n\n/*\nSays output is [1,1]. meaning built-in distinct did not work well. I tried to see what Jave they use System.getProperty(\"java.version\") - but it's not available (unlike GFG).\nWorks fine locally on jdk-11.0.12.7-hotspot */\n\n// p.s. i'm trying to make this commet look as buggy. For some reason the return section is treated as a piece of code :-)"
                    },
                    {
                        "username": "talmeezfaizy",
                        "content": "Question is not clearly explained but by analysing the output I could assess the requirement. \\nYou have to return the integer value of number of unique elements.\\nMain function which is not visible but I could assess from the solution, takes that integer (assume it to be k) and print  first k elements of the nums array which is the final expected output. \\n\\nAs it prints the elements of nums array, hence creating a new array is of no use, because we have to modify the nums array. \\n\\nOne thing is surprising that first I created a different array and assigned it to the nums, but that solution didn\\'t work. So somewhere there is a check which wants us to maintain the space complexity of O(1) and hence modify the nums array itself while traversing it. \\n\\n\\nI can share the logic for it, if someone needs it. "
                    },
                    {
                        "username": "pijushmondal617",
                        "content": "problem is easy, but this description makes its difficult. terribly described. could be written in simple words"
                    },
                    {
                        "username": "DIVYARAJSINH2906",
                        "content": "For this problem when I run my code in intellij that time it's gives me the same output as given in example but I am getting wrong answer anybody can tell me what is happening?\n\n//if length is 1 or 0 it returns same number\nif(nums.length==0 || nums.length==1){\n            return nums.length;\n        }\n        int[] arr=new int[nums.length];\n        int index=0;\n        for(int i=0;i<nums.length;i++){\n            while(i<nums.length-1 && nums[i]==nums[i+1]){\n                //just move the nums index to ahead\n                i++;\n            }\n            //after loop end assign the value of last nums index to arr index\n            arr[index]=nums[i];\n            index++;\n        }\n        return index; "
                    },
                    {
                        "username": "JL1172",
                        "content": "why does this not work ? \\nvar removeDuplicates = function(nums) {\\n   let result = [];\\nfor (let i in nums) {\\n    if (result.indexOf(nums[i]) === -1) {\\n        result.push(nums[i]);\\n    }\\n}\\nreturn result;\\n};\\nIt feels like its super simple and when I console.log the result it works just fine and I get a new array with no duplicates. When i return the result It shows up as an empty array. What am I not getting?"
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Re-read the description. Return the number of elements after de-dupe, not an array"
                    },
                    {
                        "username": "KRATOS_23",
                        "content": "Im so confused. Why cant we just make a HashSet and return its size? What are we doing here?"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "actually you need to modify `nums` aswell, when you return `k`, the `Custom Judge` will check the first `K` elements of `nums` and compare it with the correct output!!"
                    }
                ]
            },
            {
                "id": 2004335,
                "content": [
                    {
                        "username": "NoobCoder1231231231",
                        "content": "Why can\\'t we just create a new list and name it nums?\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@ksiv](/ksiv) Thank you"
                    },
                    {
                        "username": "ksiv",
                        "content": "I think it comes from here \"remove the duplicates in-place \""
                    },
                    {
                        "username": "darthnithin",
                        "content": "So i'm looping backwards through the nums list. My question is why does it take 20 times longer when i do \n `nums.remove(number)`\ninstead of\n`nums[i]`\n\nEdit: I figured it out i think: `remove` searches the list to find the element"
                    },
                    {
                        "username": "n4pw01f",
                        "content": "Horribly worded question"
                    },
                    {
                        "username": "jmiah717",
                        "content": "This is bugged. I keep getting errors on my output being [] when in the debugger it clearly shows my nums string is not empty. Whatever testing you are doing behind the scenes is slicing my array and thus causing the result to be invalid, when it is in fact, a valid entry. I even modified for a single number in the list when I shouldn\\'t have had to for the same reason. \\n"
                    },
                    {
                        "username": "ksiv",
                        "content": "// My solution does not work here:\n \nclass Solution {\n    public  int removeDuplicates(int[] nums) {\n        List<Integer> list = IntStream.of(nums).distinct().boxed().collect(Collectors.toList());\n        nums = list.stream().mapToInt(j->j).toArray();\n\n        return list.size();\n    }\n}\n\n\n/*\nSays output is [1,1]. meaning built-in distinct did not work well. I tried to see what Jave they use System.getProperty(\"java.version\") - but it's not available (unlike GFG).\nWorks fine locally on jdk-11.0.12.7-hotspot */\n\n// p.s. i'm trying to make this commet look as buggy. For some reason the return section is treated as a piece of code :-)"
                    },
                    {
                        "username": "talmeezfaizy",
                        "content": "Question is not clearly explained but by analysing the output I could assess the requirement. \\nYou have to return the integer value of number of unique elements.\\nMain function which is not visible but I could assess from the solution, takes that integer (assume it to be k) and print  first k elements of the nums array which is the final expected output. \\n\\nAs it prints the elements of nums array, hence creating a new array is of no use, because we have to modify the nums array. \\n\\nOne thing is surprising that first I created a different array and assigned it to the nums, but that solution didn\\'t work. So somewhere there is a check which wants us to maintain the space complexity of O(1) and hence modify the nums array itself while traversing it. \\n\\n\\nI can share the logic for it, if someone needs it. "
                    },
                    {
                        "username": "pijushmondal617",
                        "content": "problem is easy, but this description makes its difficult. terribly described. could be written in simple words"
                    },
                    {
                        "username": "DIVYARAJSINH2906",
                        "content": "For this problem when I run my code in intellij that time it's gives me the same output as given in example but I am getting wrong answer anybody can tell me what is happening?\n\n//if length is 1 or 0 it returns same number\nif(nums.length==0 || nums.length==1){\n            return nums.length;\n        }\n        int[] arr=new int[nums.length];\n        int index=0;\n        for(int i=0;i<nums.length;i++){\n            while(i<nums.length-1 && nums[i]==nums[i+1]){\n                //just move the nums index to ahead\n                i++;\n            }\n            //after loop end assign the value of last nums index to arr index\n            arr[index]=nums[i];\n            index++;\n        }\n        return index; "
                    },
                    {
                        "username": "JL1172",
                        "content": "why does this not work ? \\nvar removeDuplicates = function(nums) {\\n   let result = [];\\nfor (let i in nums) {\\n    if (result.indexOf(nums[i]) === -1) {\\n        result.push(nums[i]);\\n    }\\n}\\nreturn result;\\n};\\nIt feels like its super simple and when I console.log the result it works just fine and I get a new array with no duplicates. When i return the result It shows up as an empty array. What am I not getting?"
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Re-read the description. Return the number of elements after de-dupe, not an array"
                    },
                    {
                        "username": "KRATOS_23",
                        "content": "Im so confused. Why cant we just make a HashSet and return its size? What are we doing here?"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "actually you need to modify `nums` aswell, when you return `k`, the `Custom Judge` will check the first `K` elements of `nums` and compare it with the correct output!!"
                    }
                ]
            },
            {
                "id": 2000336,
                "content": [
                    {
                        "username": "NoobCoder1231231231",
                        "content": "Why can\\'t we just create a new list and name it nums?\\n"
                    },
                    {
                        "username": "NoobCoder1231231231",
                        "content": "[@ksiv](/ksiv) Thank you"
                    },
                    {
                        "username": "ksiv",
                        "content": "I think it comes from here \"remove the duplicates in-place \""
                    },
                    {
                        "username": "darthnithin",
                        "content": "So i'm looping backwards through the nums list. My question is why does it take 20 times longer when i do \n `nums.remove(number)`\ninstead of\n`nums[i]`\n\nEdit: I figured it out i think: `remove` searches the list to find the element"
                    },
                    {
                        "username": "n4pw01f",
                        "content": "Horribly worded question"
                    },
                    {
                        "username": "jmiah717",
                        "content": "This is bugged. I keep getting errors on my output being [] when in the debugger it clearly shows my nums string is not empty. Whatever testing you are doing behind the scenes is slicing my array and thus causing the result to be invalid, when it is in fact, a valid entry. I even modified for a single number in the list when I shouldn\\'t have had to for the same reason. \\n"
                    },
                    {
                        "username": "ksiv",
                        "content": "// My solution does not work here:\n \nclass Solution {\n    public  int removeDuplicates(int[] nums) {\n        List<Integer> list = IntStream.of(nums).distinct().boxed().collect(Collectors.toList());\n        nums = list.stream().mapToInt(j->j).toArray();\n\n        return list.size();\n    }\n}\n\n\n/*\nSays output is [1,1]. meaning built-in distinct did not work well. I tried to see what Jave they use System.getProperty(\"java.version\") - but it's not available (unlike GFG).\nWorks fine locally on jdk-11.0.12.7-hotspot */\n\n// p.s. i'm trying to make this commet look as buggy. For some reason the return section is treated as a piece of code :-)"
                    },
                    {
                        "username": "talmeezfaizy",
                        "content": "Question is not clearly explained but by analysing the output I could assess the requirement. \\nYou have to return the integer value of number of unique elements.\\nMain function which is not visible but I could assess from the solution, takes that integer (assume it to be k) and print  first k elements of the nums array which is the final expected output. \\n\\nAs it prints the elements of nums array, hence creating a new array is of no use, because we have to modify the nums array. \\n\\nOne thing is surprising that first I created a different array and assigned it to the nums, but that solution didn\\'t work. So somewhere there is a check which wants us to maintain the space complexity of O(1) and hence modify the nums array itself while traversing it. \\n\\n\\nI can share the logic for it, if someone needs it. "
                    },
                    {
                        "username": "pijushmondal617",
                        "content": "problem is easy, but this description makes its difficult. terribly described. could be written in simple words"
                    },
                    {
                        "username": "DIVYARAJSINH2906",
                        "content": "For this problem when I run my code in intellij that time it's gives me the same output as given in example but I am getting wrong answer anybody can tell me what is happening?\n\n//if length is 1 or 0 it returns same number\nif(nums.length==0 || nums.length==1){\n            return nums.length;\n        }\n        int[] arr=new int[nums.length];\n        int index=0;\n        for(int i=0;i<nums.length;i++){\n            while(i<nums.length-1 && nums[i]==nums[i+1]){\n                //just move the nums index to ahead\n                i++;\n            }\n            //after loop end assign the value of last nums index to arr index\n            arr[index]=nums[i];\n            index++;\n        }\n        return index; "
                    },
                    {
                        "username": "JL1172",
                        "content": "why does this not work ? \\nvar removeDuplicates = function(nums) {\\n   let result = [];\\nfor (let i in nums) {\\n    if (result.indexOf(nums[i]) === -1) {\\n        result.push(nums[i]);\\n    }\\n}\\nreturn result;\\n};\\nIt feels like its super simple and when I console.log the result it works just fine and I get a new array with no duplicates. When i return the result It shows up as an empty array. What am I not getting?"
                    },
                    {
                        "username": "stevemcguigan",
                        "content": "Re-read the description. Return the number of elements after de-dupe, not an array"
                    },
                    {
                        "username": "KRATOS_23",
                        "content": "Im so confused. Why cant we just make a HashSet and return its size? What are we doing here?"
                    },
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "actually you need to modify `nums` aswell, when you return `k`, the `Custom Judge` will check the first `K` elements of `nums` and compare it with the correct output!!"
                    }
                ]
            },
            {
                "id": 1999858,
                "content": [
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Iterative Approach with Detailed Explanation , time: $$O(n)$$, space: $$O(1)$$\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/3862998/simple-iterative-o-n-approach-beats-99-9-runtime/"
                    },
                    {
                        "username": "ankitparashar700",
                        "content": "The catch here is that you have to filter duplicate and update in the existing array with same memory location."
                    },
                    {
                        "username": "WonderMilk",
                        "content": "I\\'m having some issues here. Not the best at programing, but I could have sworn that the \"nums\" list would be mutable. What I ended up doing in my code was attempting to create a set of the contents from \"nums\", since a set cannot contain duplicates, and then setting \"nums\" equal to the set I created. \\n\\nThe \"Stdout\" when I run the code shows that \"nums\" does indeed get set to a list with no duplicates inside of it, but the output seems to indicate that the \"nums\" list does not actually become altered outside of the function like I thought it would."
                    },
                    {
                        "username": "Nikaspar",
                        "content": "Omg. How I can return len(nums) == 4 if input len(nums) == 10 and They don\\'t really want you to remove the duplicates. Madman\\'s delirium!"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "It\\'s less common to manipulate arrays in-place because modern computers have large amounts of memory and the cost of creating a new array is typically not prohibitive. Additionally, most high-level languages provide built-in functions for removing duplicates from an array or list. The problem requires in-place modification of the array, which goes against the principles of functional programming - so that\\'s not an option. Also, the problem does not specify what should be done in the case of an empty array. "
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Interesting answer for an interview :)"
                    },
                    {
                        "username": "ycwiz",
                        "content": "they want you to return the number of unique integers . and when you do make changes to the original list of integers make changes as you find unique numbers"
                    },
                    {
                        "username": "prashantverma1357",
                        "content": "pls help me out on this i dont get where im going wrong this was supposed to be so simple T_T\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        le1 = len(nums)\\n        nums = list(set(nums))\\n        le2 = len(nums)\\n        for i in range(le1-le2):\\n            nums.append(\"_\")\\n        return le2\\nim converting the initial list nums into a set then back into a list for appending\\nthe output for list(set([1,1,2]))  should be 1,2 why is it showing 1,1 even if it slices the inital list at the value we are providing ive changed the initial list to have only the unique elements i cant figure this out\\n \\n\\n"
                    },
                    {
                        "username": "ShadowGreg",
                        "content": "        SortedSet<int> temp = new SortedSet<int>(nums);\\n        nums = null;\\n        nums = temp.ToArray();\\n        return temp.Count;\\n\\ndon\\'t worck? "
                    },
                    {
                        "username": "ShadowGreg",
                        "content": "[@Souvik-223](/Souvik-223)  in C#"
                    },
                    {
                        "username": "Souvik-223",
                        "content": "Is it in python? "
                    },
                    {
                        "username": "Souvik-223",
                        "content": "I have uploaded a detailed solution for this confusing problem. The question isn't properly explained here and it might confuse a lot of people. \nCheck out the answer with the explanation and the easiest solution here :- https://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/3792140/best-solution-in-java-with-1ms-43-89mb-and-proper-explanation-of-the-question/\n\nHope this helps in everyones learning."
                    },
                    {
                        "username": "sangam_verma",
                        "content": "why this ques got more dislikes than likes? \\uD83E\\uDDD0"
                    }
                ]
            },
            {
                "id": 1998835,
                "content": [
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Iterative Approach with Detailed Explanation , time: $$O(n)$$, space: $$O(1)$$\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/3862998/simple-iterative-o-n-approach-beats-99-9-runtime/"
                    },
                    {
                        "username": "ankitparashar700",
                        "content": "The catch here is that you have to filter duplicate and update in the existing array with same memory location."
                    },
                    {
                        "username": "WonderMilk",
                        "content": "I\\'m having some issues here. Not the best at programing, but I could have sworn that the \"nums\" list would be mutable. What I ended up doing in my code was attempting to create a set of the contents from \"nums\", since a set cannot contain duplicates, and then setting \"nums\" equal to the set I created. \\n\\nThe \"Stdout\" when I run the code shows that \"nums\" does indeed get set to a list with no duplicates inside of it, but the output seems to indicate that the \"nums\" list does not actually become altered outside of the function like I thought it would."
                    },
                    {
                        "username": "Nikaspar",
                        "content": "Omg. How I can return len(nums) == 4 if input len(nums) == 10 and They don\\'t really want you to remove the duplicates. Madman\\'s delirium!"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "It\\'s less common to manipulate arrays in-place because modern computers have large amounts of memory and the cost of creating a new array is typically not prohibitive. Additionally, most high-level languages provide built-in functions for removing duplicates from an array or list. The problem requires in-place modification of the array, which goes against the principles of functional programming - so that\\'s not an option. Also, the problem does not specify what should be done in the case of an empty array. "
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Interesting answer for an interview :)"
                    },
                    {
                        "username": "ycwiz",
                        "content": "they want you to return the number of unique integers . and when you do make changes to the original list of integers make changes as you find unique numbers"
                    },
                    {
                        "username": "prashantverma1357",
                        "content": "pls help me out on this i dont get where im going wrong this was supposed to be so simple T_T\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        le1 = len(nums)\\n        nums = list(set(nums))\\n        le2 = len(nums)\\n        for i in range(le1-le2):\\n            nums.append(\"_\")\\n        return le2\\nim converting the initial list nums into a set then back into a list for appending\\nthe output for list(set([1,1,2]))  should be 1,2 why is it showing 1,1 even if it slices the inital list at the value we are providing ive changed the initial list to have only the unique elements i cant figure this out\\n \\n\\n"
                    },
                    {
                        "username": "ShadowGreg",
                        "content": "        SortedSet<int> temp = new SortedSet<int>(nums);\\n        nums = null;\\n        nums = temp.ToArray();\\n        return temp.Count;\\n\\ndon\\'t worck? "
                    },
                    {
                        "username": "ShadowGreg",
                        "content": "[@Souvik-223](/Souvik-223)  in C#"
                    },
                    {
                        "username": "Souvik-223",
                        "content": "Is it in python? "
                    },
                    {
                        "username": "Souvik-223",
                        "content": "I have uploaded a detailed solution for this confusing problem. The question isn't properly explained here and it might confuse a lot of people. \nCheck out the answer with the explanation and the easiest solution here :- https://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/3792140/best-solution-in-java-with-1ms-43-89mb-and-proper-explanation-of-the-question/\n\nHope this helps in everyones learning."
                    },
                    {
                        "username": "sangam_verma",
                        "content": "why this ques got more dislikes than likes? \\uD83E\\uDDD0"
                    }
                ]
            },
            {
                "id": 1998649,
                "content": [
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Iterative Approach with Detailed Explanation , time: $$O(n)$$, space: $$O(1)$$\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/3862998/simple-iterative-o-n-approach-beats-99-9-runtime/"
                    },
                    {
                        "username": "ankitparashar700",
                        "content": "The catch here is that you have to filter duplicate and update in the existing array with same memory location."
                    },
                    {
                        "username": "WonderMilk",
                        "content": "I\\'m having some issues here. Not the best at programing, but I could have sworn that the \"nums\" list would be mutable. What I ended up doing in my code was attempting to create a set of the contents from \"nums\", since a set cannot contain duplicates, and then setting \"nums\" equal to the set I created. \\n\\nThe \"Stdout\" when I run the code shows that \"nums\" does indeed get set to a list with no duplicates inside of it, but the output seems to indicate that the \"nums\" list does not actually become altered outside of the function like I thought it would."
                    },
                    {
                        "username": "Nikaspar",
                        "content": "Omg. How I can return len(nums) == 4 if input len(nums) == 10 and They don\\'t really want you to remove the duplicates. Madman\\'s delirium!"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "It\\'s less common to manipulate arrays in-place because modern computers have large amounts of memory and the cost of creating a new array is typically not prohibitive. Additionally, most high-level languages provide built-in functions for removing duplicates from an array or list. The problem requires in-place modification of the array, which goes against the principles of functional programming - so that\\'s not an option. Also, the problem does not specify what should be done in the case of an empty array. "
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Interesting answer for an interview :)"
                    },
                    {
                        "username": "ycwiz",
                        "content": "they want you to return the number of unique integers . and when you do make changes to the original list of integers make changes as you find unique numbers"
                    },
                    {
                        "username": "prashantverma1357",
                        "content": "pls help me out on this i dont get where im going wrong this was supposed to be so simple T_T\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        le1 = len(nums)\\n        nums = list(set(nums))\\n        le2 = len(nums)\\n        for i in range(le1-le2):\\n            nums.append(\"_\")\\n        return le2\\nim converting the initial list nums into a set then back into a list for appending\\nthe output for list(set([1,1,2]))  should be 1,2 why is it showing 1,1 even if it slices the inital list at the value we are providing ive changed the initial list to have only the unique elements i cant figure this out\\n \\n\\n"
                    },
                    {
                        "username": "ShadowGreg",
                        "content": "        SortedSet<int> temp = new SortedSet<int>(nums);\\n        nums = null;\\n        nums = temp.ToArray();\\n        return temp.Count;\\n\\ndon\\'t worck? "
                    },
                    {
                        "username": "ShadowGreg",
                        "content": "[@Souvik-223](/Souvik-223)  in C#"
                    },
                    {
                        "username": "Souvik-223",
                        "content": "Is it in python? "
                    },
                    {
                        "username": "Souvik-223",
                        "content": "I have uploaded a detailed solution for this confusing problem. The question isn't properly explained here and it might confuse a lot of people. \nCheck out the answer with the explanation and the easiest solution here :- https://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/3792140/best-solution-in-java-with-1ms-43-89mb-and-proper-explanation-of-the-question/\n\nHope this helps in everyones learning."
                    },
                    {
                        "username": "sangam_verma",
                        "content": "why this ques got more dislikes than likes? \\uD83E\\uDDD0"
                    }
                ]
            },
            {
                "id": 1995945,
                "content": [
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Iterative Approach with Detailed Explanation , time: $$O(n)$$, space: $$O(1)$$\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/3862998/simple-iterative-o-n-approach-beats-99-9-runtime/"
                    },
                    {
                        "username": "ankitparashar700",
                        "content": "The catch here is that you have to filter duplicate and update in the existing array with same memory location."
                    },
                    {
                        "username": "WonderMilk",
                        "content": "I\\'m having some issues here. Not the best at programing, but I could have sworn that the \"nums\" list would be mutable. What I ended up doing in my code was attempting to create a set of the contents from \"nums\", since a set cannot contain duplicates, and then setting \"nums\" equal to the set I created. \\n\\nThe \"Stdout\" when I run the code shows that \"nums\" does indeed get set to a list with no duplicates inside of it, but the output seems to indicate that the \"nums\" list does not actually become altered outside of the function like I thought it would."
                    },
                    {
                        "username": "Nikaspar",
                        "content": "Omg. How I can return len(nums) == 4 if input len(nums) == 10 and They don\\'t really want you to remove the duplicates. Madman\\'s delirium!"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "It\\'s less common to manipulate arrays in-place because modern computers have large amounts of memory and the cost of creating a new array is typically not prohibitive. Additionally, most high-level languages provide built-in functions for removing duplicates from an array or list. The problem requires in-place modification of the array, which goes against the principles of functional programming - so that\\'s not an option. Also, the problem does not specify what should be done in the case of an empty array. "
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Interesting answer for an interview :)"
                    },
                    {
                        "username": "ycwiz",
                        "content": "they want you to return the number of unique integers . and when you do make changes to the original list of integers make changes as you find unique numbers"
                    },
                    {
                        "username": "prashantverma1357",
                        "content": "pls help me out on this i dont get where im going wrong this was supposed to be so simple T_T\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        le1 = len(nums)\\n        nums = list(set(nums))\\n        le2 = len(nums)\\n        for i in range(le1-le2):\\n            nums.append(\"_\")\\n        return le2\\nim converting the initial list nums into a set then back into a list for appending\\nthe output for list(set([1,1,2]))  should be 1,2 why is it showing 1,1 even if it slices the inital list at the value we are providing ive changed the initial list to have only the unique elements i cant figure this out\\n \\n\\n"
                    },
                    {
                        "username": "ShadowGreg",
                        "content": "        SortedSet<int> temp = new SortedSet<int>(nums);\\n        nums = null;\\n        nums = temp.ToArray();\\n        return temp.Count;\\n\\ndon\\'t worck? "
                    },
                    {
                        "username": "ShadowGreg",
                        "content": "[@Souvik-223](/Souvik-223)  in C#"
                    },
                    {
                        "username": "Souvik-223",
                        "content": "Is it in python? "
                    },
                    {
                        "username": "Souvik-223",
                        "content": "I have uploaded a detailed solution for this confusing problem. The question isn't properly explained here and it might confuse a lot of people. \nCheck out the answer with the explanation and the easiest solution here :- https://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/3792140/best-solution-in-java-with-1ms-43-89mb-and-proper-explanation-of-the-question/\n\nHope this helps in everyones learning."
                    },
                    {
                        "username": "sangam_verma",
                        "content": "why this ques got more dislikes than likes? \\uD83E\\uDDD0"
                    }
                ]
            },
            {
                "id": 1994842,
                "content": [
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Iterative Approach with Detailed Explanation , time: $$O(n)$$, space: $$O(1)$$\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/3862998/simple-iterative-o-n-approach-beats-99-9-runtime/"
                    },
                    {
                        "username": "ankitparashar700",
                        "content": "The catch here is that you have to filter duplicate and update in the existing array with same memory location."
                    },
                    {
                        "username": "WonderMilk",
                        "content": "I\\'m having some issues here. Not the best at programing, but I could have sworn that the \"nums\" list would be mutable. What I ended up doing in my code was attempting to create a set of the contents from \"nums\", since a set cannot contain duplicates, and then setting \"nums\" equal to the set I created. \\n\\nThe \"Stdout\" when I run the code shows that \"nums\" does indeed get set to a list with no duplicates inside of it, but the output seems to indicate that the \"nums\" list does not actually become altered outside of the function like I thought it would."
                    },
                    {
                        "username": "Nikaspar",
                        "content": "Omg. How I can return len(nums) == 4 if input len(nums) == 10 and They don\\'t really want you to remove the duplicates. Madman\\'s delirium!"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "It\\'s less common to manipulate arrays in-place because modern computers have large amounts of memory and the cost of creating a new array is typically not prohibitive. Additionally, most high-level languages provide built-in functions for removing duplicates from an array or list. The problem requires in-place modification of the array, which goes against the principles of functional programming - so that\\'s not an option. Also, the problem does not specify what should be done in the case of an empty array. "
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Interesting answer for an interview :)"
                    },
                    {
                        "username": "ycwiz",
                        "content": "they want you to return the number of unique integers . and when you do make changes to the original list of integers make changes as you find unique numbers"
                    },
                    {
                        "username": "prashantverma1357",
                        "content": "pls help me out on this i dont get where im going wrong this was supposed to be so simple T_T\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        le1 = len(nums)\\n        nums = list(set(nums))\\n        le2 = len(nums)\\n        for i in range(le1-le2):\\n            nums.append(\"_\")\\n        return le2\\nim converting the initial list nums into a set then back into a list for appending\\nthe output for list(set([1,1,2]))  should be 1,2 why is it showing 1,1 even if it slices the inital list at the value we are providing ive changed the initial list to have only the unique elements i cant figure this out\\n \\n\\n"
                    },
                    {
                        "username": "ShadowGreg",
                        "content": "        SortedSet<int> temp = new SortedSet<int>(nums);\\n        nums = null;\\n        nums = temp.ToArray();\\n        return temp.Count;\\n\\ndon\\'t worck? "
                    },
                    {
                        "username": "ShadowGreg",
                        "content": "[@Souvik-223](/Souvik-223)  in C#"
                    },
                    {
                        "username": "Souvik-223",
                        "content": "Is it in python? "
                    },
                    {
                        "username": "Souvik-223",
                        "content": "I have uploaded a detailed solution for this confusing problem. The question isn't properly explained here and it might confuse a lot of people. \nCheck out the answer with the explanation and the easiest solution here :- https://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/3792140/best-solution-in-java-with-1ms-43-89mb-and-proper-explanation-of-the-question/\n\nHope this helps in everyones learning."
                    },
                    {
                        "username": "sangam_verma",
                        "content": "why this ques got more dislikes than likes? \\uD83E\\uDDD0"
                    }
                ]
            },
            {
                "id": 1987838,
                "content": [
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Iterative Approach with Detailed Explanation , time: $$O(n)$$, space: $$O(1)$$\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/3862998/simple-iterative-o-n-approach-beats-99-9-runtime/"
                    },
                    {
                        "username": "ankitparashar700",
                        "content": "The catch here is that you have to filter duplicate and update in the existing array with same memory location."
                    },
                    {
                        "username": "WonderMilk",
                        "content": "I\\'m having some issues here. Not the best at programing, but I could have sworn that the \"nums\" list would be mutable. What I ended up doing in my code was attempting to create a set of the contents from \"nums\", since a set cannot contain duplicates, and then setting \"nums\" equal to the set I created. \\n\\nThe \"Stdout\" when I run the code shows that \"nums\" does indeed get set to a list with no duplicates inside of it, but the output seems to indicate that the \"nums\" list does not actually become altered outside of the function like I thought it would."
                    },
                    {
                        "username": "Nikaspar",
                        "content": "Omg. How I can return len(nums) == 4 if input len(nums) == 10 and They don\\'t really want you to remove the duplicates. Madman\\'s delirium!"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "It\\'s less common to manipulate arrays in-place because modern computers have large amounts of memory and the cost of creating a new array is typically not prohibitive. Additionally, most high-level languages provide built-in functions for removing duplicates from an array or list. The problem requires in-place modification of the array, which goes against the principles of functional programming - so that\\'s not an option. Also, the problem does not specify what should be done in the case of an empty array. "
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Interesting answer for an interview :)"
                    },
                    {
                        "username": "ycwiz",
                        "content": "they want you to return the number of unique integers . and when you do make changes to the original list of integers make changes as you find unique numbers"
                    },
                    {
                        "username": "prashantverma1357",
                        "content": "pls help me out on this i dont get where im going wrong this was supposed to be so simple T_T\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        le1 = len(nums)\\n        nums = list(set(nums))\\n        le2 = len(nums)\\n        for i in range(le1-le2):\\n            nums.append(\"_\")\\n        return le2\\nim converting the initial list nums into a set then back into a list for appending\\nthe output for list(set([1,1,2]))  should be 1,2 why is it showing 1,1 even if it slices the inital list at the value we are providing ive changed the initial list to have only the unique elements i cant figure this out\\n \\n\\n"
                    },
                    {
                        "username": "ShadowGreg",
                        "content": "        SortedSet<int> temp = new SortedSet<int>(nums);\\n        nums = null;\\n        nums = temp.ToArray();\\n        return temp.Count;\\n\\ndon\\'t worck? "
                    },
                    {
                        "username": "ShadowGreg",
                        "content": "[@Souvik-223](/Souvik-223)  in C#"
                    },
                    {
                        "username": "Souvik-223",
                        "content": "Is it in python? "
                    },
                    {
                        "username": "Souvik-223",
                        "content": "I have uploaded a detailed solution for this confusing problem. The question isn't properly explained here and it might confuse a lot of people. \nCheck out the answer with the explanation and the easiest solution here :- https://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/3792140/best-solution-in-java-with-1ms-43-89mb-and-proper-explanation-of-the-question/\n\nHope this helps in everyones learning."
                    },
                    {
                        "username": "sangam_verma",
                        "content": "why this ques got more dislikes than likes? \\uD83E\\uDDD0"
                    }
                ]
            },
            {
                "id": 1985541,
                "content": [
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Iterative Approach with Detailed Explanation , time: $$O(n)$$, space: $$O(1)$$\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/3862998/simple-iterative-o-n-approach-beats-99-9-runtime/"
                    },
                    {
                        "username": "ankitparashar700",
                        "content": "The catch here is that you have to filter duplicate and update in the existing array with same memory location."
                    },
                    {
                        "username": "WonderMilk",
                        "content": "I\\'m having some issues here. Not the best at programing, but I could have sworn that the \"nums\" list would be mutable. What I ended up doing in my code was attempting to create a set of the contents from \"nums\", since a set cannot contain duplicates, and then setting \"nums\" equal to the set I created. \\n\\nThe \"Stdout\" when I run the code shows that \"nums\" does indeed get set to a list with no duplicates inside of it, but the output seems to indicate that the \"nums\" list does not actually become altered outside of the function like I thought it would."
                    },
                    {
                        "username": "Nikaspar",
                        "content": "Omg. How I can return len(nums) == 4 if input len(nums) == 10 and They don\\'t really want you to remove the duplicates. Madman\\'s delirium!"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "It\\'s less common to manipulate arrays in-place because modern computers have large amounts of memory and the cost of creating a new array is typically not prohibitive. Additionally, most high-level languages provide built-in functions for removing duplicates from an array or list. The problem requires in-place modification of the array, which goes against the principles of functional programming - so that\\'s not an option. Also, the problem does not specify what should be done in the case of an empty array. "
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Interesting answer for an interview :)"
                    },
                    {
                        "username": "ycwiz",
                        "content": "they want you to return the number of unique integers . and when you do make changes to the original list of integers make changes as you find unique numbers"
                    },
                    {
                        "username": "prashantverma1357",
                        "content": "pls help me out on this i dont get where im going wrong this was supposed to be so simple T_T\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        le1 = len(nums)\\n        nums = list(set(nums))\\n        le2 = len(nums)\\n        for i in range(le1-le2):\\n            nums.append(\"_\")\\n        return le2\\nim converting the initial list nums into a set then back into a list for appending\\nthe output for list(set([1,1,2]))  should be 1,2 why is it showing 1,1 even if it slices the inital list at the value we are providing ive changed the initial list to have only the unique elements i cant figure this out\\n \\n\\n"
                    },
                    {
                        "username": "ShadowGreg",
                        "content": "        SortedSet<int> temp = new SortedSet<int>(nums);\\n        nums = null;\\n        nums = temp.ToArray();\\n        return temp.Count;\\n\\ndon\\'t worck? "
                    },
                    {
                        "username": "ShadowGreg",
                        "content": "[@Souvik-223](/Souvik-223)  in C#"
                    },
                    {
                        "username": "Souvik-223",
                        "content": "Is it in python? "
                    },
                    {
                        "username": "Souvik-223",
                        "content": "I have uploaded a detailed solution for this confusing problem. The question isn't properly explained here and it might confuse a lot of people. \nCheck out the answer with the explanation and the easiest solution here :- https://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/3792140/best-solution-in-java-with-1ms-43-89mb-and-proper-explanation-of-the-question/\n\nHope this helps in everyones learning."
                    },
                    {
                        "username": "sangam_verma",
                        "content": "why this ques got more dislikes than likes? \\uD83E\\uDDD0"
                    }
                ]
            },
            {
                "id": 1978963,
                "content": [
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Iterative Approach with Detailed Explanation , time: $$O(n)$$, space: $$O(1)$$\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/3862998/simple-iterative-o-n-approach-beats-99-9-runtime/"
                    },
                    {
                        "username": "ankitparashar700",
                        "content": "The catch here is that you have to filter duplicate and update in the existing array with same memory location."
                    },
                    {
                        "username": "WonderMilk",
                        "content": "I\\'m having some issues here. Not the best at programing, but I could have sworn that the \"nums\" list would be mutable. What I ended up doing in my code was attempting to create a set of the contents from \"nums\", since a set cannot contain duplicates, and then setting \"nums\" equal to the set I created. \\n\\nThe \"Stdout\" when I run the code shows that \"nums\" does indeed get set to a list with no duplicates inside of it, but the output seems to indicate that the \"nums\" list does not actually become altered outside of the function like I thought it would."
                    },
                    {
                        "username": "Nikaspar",
                        "content": "Omg. How I can return len(nums) == 4 if input len(nums) == 10 and They don\\'t really want you to remove the duplicates. Madman\\'s delirium!"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "It\\'s less common to manipulate arrays in-place because modern computers have large amounts of memory and the cost of creating a new array is typically not prohibitive. Additionally, most high-level languages provide built-in functions for removing duplicates from an array or list. The problem requires in-place modification of the array, which goes against the principles of functional programming - so that\\'s not an option. Also, the problem does not specify what should be done in the case of an empty array. "
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Interesting answer for an interview :)"
                    },
                    {
                        "username": "ycwiz",
                        "content": "they want you to return the number of unique integers . and when you do make changes to the original list of integers make changes as you find unique numbers"
                    },
                    {
                        "username": "prashantverma1357",
                        "content": "pls help me out on this i dont get where im going wrong this was supposed to be so simple T_T\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        le1 = len(nums)\\n        nums = list(set(nums))\\n        le2 = len(nums)\\n        for i in range(le1-le2):\\n            nums.append(\"_\")\\n        return le2\\nim converting the initial list nums into a set then back into a list for appending\\nthe output for list(set([1,1,2]))  should be 1,2 why is it showing 1,1 even if it slices the inital list at the value we are providing ive changed the initial list to have only the unique elements i cant figure this out\\n \\n\\n"
                    },
                    {
                        "username": "ShadowGreg",
                        "content": "        SortedSet<int> temp = new SortedSet<int>(nums);\\n        nums = null;\\n        nums = temp.ToArray();\\n        return temp.Count;\\n\\ndon\\'t worck? "
                    },
                    {
                        "username": "ShadowGreg",
                        "content": "[@Souvik-223](/Souvik-223)  in C#"
                    },
                    {
                        "username": "Souvik-223",
                        "content": "Is it in python? "
                    },
                    {
                        "username": "Souvik-223",
                        "content": "I have uploaded a detailed solution for this confusing problem. The question isn't properly explained here and it might confuse a lot of people. \nCheck out the answer with the explanation and the easiest solution here :- https://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/3792140/best-solution-in-java-with-1ms-43-89mb-and-proper-explanation-of-the-question/\n\nHope this helps in everyones learning."
                    },
                    {
                        "username": "sangam_verma",
                        "content": "why this ques got more dislikes than likes? \\uD83E\\uDDD0"
                    }
                ]
            },
            {
                "id": 1978531,
                "content": [
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Iterative Approach with Detailed Explanation , time: $$O(n)$$, space: $$O(1)$$\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/3862998/simple-iterative-o-n-approach-beats-99-9-runtime/"
                    },
                    {
                        "username": "ankitparashar700",
                        "content": "The catch here is that you have to filter duplicate and update in the existing array with same memory location."
                    },
                    {
                        "username": "WonderMilk",
                        "content": "I\\'m having some issues here. Not the best at programing, but I could have sworn that the \"nums\" list would be mutable. What I ended up doing in my code was attempting to create a set of the contents from \"nums\", since a set cannot contain duplicates, and then setting \"nums\" equal to the set I created. \\n\\nThe \"Stdout\" when I run the code shows that \"nums\" does indeed get set to a list with no duplicates inside of it, but the output seems to indicate that the \"nums\" list does not actually become altered outside of the function like I thought it would."
                    },
                    {
                        "username": "Nikaspar",
                        "content": "Omg. How I can return len(nums) == 4 if input len(nums) == 10 and They don\\'t really want you to remove the duplicates. Madman\\'s delirium!"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "It\\'s less common to manipulate arrays in-place because modern computers have large amounts of memory and the cost of creating a new array is typically not prohibitive. Additionally, most high-level languages provide built-in functions for removing duplicates from an array or list. The problem requires in-place modification of the array, which goes against the principles of functional programming - so that\\'s not an option. Also, the problem does not specify what should be done in the case of an empty array. "
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Interesting answer for an interview :)"
                    },
                    {
                        "username": "ycwiz",
                        "content": "they want you to return the number of unique integers . and when you do make changes to the original list of integers make changes as you find unique numbers"
                    },
                    {
                        "username": "prashantverma1357",
                        "content": "pls help me out on this i dont get where im going wrong this was supposed to be so simple T_T\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        le1 = len(nums)\\n        nums = list(set(nums))\\n        le2 = len(nums)\\n        for i in range(le1-le2):\\n            nums.append(\"_\")\\n        return le2\\nim converting the initial list nums into a set then back into a list for appending\\nthe output for list(set([1,1,2]))  should be 1,2 why is it showing 1,1 even if it slices the inital list at the value we are providing ive changed the initial list to have only the unique elements i cant figure this out\\n \\n\\n"
                    },
                    {
                        "username": "ShadowGreg",
                        "content": "        SortedSet<int> temp = new SortedSet<int>(nums);\\n        nums = null;\\n        nums = temp.ToArray();\\n        return temp.Count;\\n\\ndon\\'t worck? "
                    },
                    {
                        "username": "ShadowGreg",
                        "content": "[@Souvik-223](/Souvik-223)  in C#"
                    },
                    {
                        "username": "Souvik-223",
                        "content": "Is it in python? "
                    },
                    {
                        "username": "Souvik-223",
                        "content": "I have uploaded a detailed solution for this confusing problem. The question isn't properly explained here and it might confuse a lot of people. \nCheck out the answer with the explanation and the easiest solution here :- https://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/3792140/best-solution-in-java-with-1ms-43-89mb-and-proper-explanation-of-the-question/\n\nHope this helps in everyones learning."
                    },
                    {
                        "username": "sangam_verma",
                        "content": "why this ques got more dislikes than likes? \\uD83E\\uDDD0"
                    }
                ]
            },
            {
                "id": 1975645,
                "content": [
                    {
                        "username": "Saurav_Singh_Rautela",
                        "content": "Simple Iterative Approach with Detailed Explanation , time: $$O(n)$$, space: $$O(1)$$\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/3862998/simple-iterative-o-n-approach-beats-99-9-runtime/"
                    },
                    {
                        "username": "ankitparashar700",
                        "content": "The catch here is that you have to filter duplicate and update in the existing array with same memory location."
                    },
                    {
                        "username": "WonderMilk",
                        "content": "I\\'m having some issues here. Not the best at programing, but I could have sworn that the \"nums\" list would be mutable. What I ended up doing in my code was attempting to create a set of the contents from \"nums\", since a set cannot contain duplicates, and then setting \"nums\" equal to the set I created. \\n\\nThe \"Stdout\" when I run the code shows that \"nums\" does indeed get set to a list with no duplicates inside of it, but the output seems to indicate that the \"nums\" list does not actually become altered outside of the function like I thought it would."
                    },
                    {
                        "username": "Nikaspar",
                        "content": "Omg. How I can return len(nums) == 4 if input len(nums) == 10 and They don\\'t really want you to remove the duplicates. Madman\\'s delirium!"
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "It\\'s less common to manipulate arrays in-place because modern computers have large amounts of memory and the cost of creating a new array is typically not prohibitive. Additionally, most high-level languages provide built-in functions for removing duplicates from an array or list. The problem requires in-place modification of the array, which goes against the principles of functional programming - so that\\'s not an option. Also, the problem does not specify what should be done in the case of an empty array. "
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Interesting answer for an interview :)"
                    },
                    {
                        "username": "ycwiz",
                        "content": "they want you to return the number of unique integers . and when you do make changes to the original list of integers make changes as you find unique numbers"
                    },
                    {
                        "username": "prashantverma1357",
                        "content": "pls help me out on this i dont get where im going wrong this was supposed to be so simple T_T\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        le1 = len(nums)\\n        nums = list(set(nums))\\n        le2 = len(nums)\\n        for i in range(le1-le2):\\n            nums.append(\"_\")\\n        return le2\\nim converting the initial list nums into a set then back into a list for appending\\nthe output for list(set([1,1,2]))  should be 1,2 why is it showing 1,1 even if it slices the inital list at the value we are providing ive changed the initial list to have only the unique elements i cant figure this out\\n \\n\\n"
                    },
                    {
                        "username": "ShadowGreg",
                        "content": "        SortedSet<int> temp = new SortedSet<int>(nums);\\n        nums = null;\\n        nums = temp.ToArray();\\n        return temp.Count;\\n\\ndon\\'t worck? "
                    },
                    {
                        "username": "ShadowGreg",
                        "content": "[@Souvik-223](/Souvik-223)  in C#"
                    },
                    {
                        "username": "Souvik-223",
                        "content": "Is it in python? "
                    },
                    {
                        "username": "Souvik-223",
                        "content": "I have uploaded a detailed solution for this confusing problem. The question isn't properly explained here and it might confuse a lot of people. \nCheck out the answer with the explanation and the easiest solution here :- https://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/3792140/best-solution-in-java-with-1ms-43-89mb-and-proper-explanation-of-the-question/\n\nHope this helps in everyones learning."
                    },
                    {
                        "username": "sangam_verma",
                        "content": "why this ques got more dislikes than likes? \\uD83E\\uDDD0"
                    }
                ]
            },
            {
                "id": 1975448,
                "content": [
                    {
                        "username": "upendra_allagadda",
                        "content": "The example and description confuses you. According to the explanation, the assertion should be stopped by the length of k but it is not."
                    },
                    {
                        "username": "croegen",
                        "content": "I am confused with allmost all proposed solutions. I firstly solved the issue myself but got triggered by realy low score I get. \\nSo most of quickest solutions propose to iterate through array by checking the two elements next to each other.\\nLets say we have const arr = [1, 2, 3, 4, 4, 5, 6];\\nWe itarate to 4th element and then assign arr[4]=arr[5]\\n[1, 2, 3, 4, 5, 5, 6]\\nThen we assign arr[5]=arr[6]\\n[1, 2, 3, 4, 5, 6, 6]\\nOkay, great, how do you remove the last element? Non of solutions have the condition to remove those duplicates from the end, by copying the elements in array we still have the same length? What am I missing here?"
                    },
                    {
                        "username": "croegen",
                        "content": "[@svenyboyyt](/svenyboyyt) Yeah, I got it now, I totally missed the part about truncation of leftovers from array after all iterations before returning of the k."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "If you have n unique elements, the first n elements need to be unique. You don\\'t have to remove the duplicates because it\\'s not in the first n elements, but you can. And then you have to return the length."
                    },
                    {
                        "username": "croegen",
                        "content": "I get it, I missed the part about truncation of leftovers from array after all iterations."
                    },
                    {
                        "username": "RajuBudhoju",
                        "content": "can i use set?"
                    },
                    {
                        "username": "DenisKutlubaev",
                        "content": "This is one of the best coding problems with a beautiful concise solution. I solved it, but my solution was not this elegant."
                    },
                    {
                        "username": "jw52sc",
                        "content": "Spend almost 1 day to to get different pattern of the solution. But eventually, I believe the question got bug. Till now, I still not able to pass but I get exactly what i want based on my understanding. "
                    },
                    {
                        "username": "Darw",
                        "content": "What should I to return? An integer or an array?"
                    },
                    {
                        "username": "Grumpy_Tucker3",
                        "content": "integer obviously\\n"
                    },
                    {
                        "username": "Grumpy_Tucker3",
                        "content": "Its a medium level question\\n"
                    },
                    {
                        "username": "ivstefanov",
                        "content": "C++\\n\\n#include <algorithm>\\n#include <iostream>\\n#include <vector>\\n#include <set>\\n\\nstd::pair<std::vector<int>, int> removeDuplicates(const std::vector<int>& nums) {\\n    std::set<int> uniqueNumbers(nums.begin(), nums.end());\\n    std::vector<int> result(uniqueNumbers.begin(), uniqueNumbers.end());\\n    int numDuplicatesDeleted = nums.size() - result.size();\\n    return std::make_pair(result, numDuplicatesDeleted);\\n}\\n\\nint main() {\\n    std::vector<int> nums;\\n    std::vector<int> uniqueNumbers;\\n    int nDuplicatesDeleted = 0;\\n    int nSize = 0;\\n    int temp = 0;\\n    std::cout << \"How many numbers would you insert: \";\\n    std::cin >> nSize;\\n\\n    std::cout << \"\\\\n---Filling the vector---\" << std::endl;\\n    for (int i = 0; i < nSize; i++) {\\n        std::cout << \"Insert number #\" << i + 1 << \": \";\\n        std::cin >> temp;\\n        nums.push_back(temp);\\n    }\\n\\n    std::cout << \"\\\\n---Input vector---\\\\n[ \";\\n    for (int e : nums) {\\n        std::cout << e << \", \";\\n    }\\n    std::cout << \"\\\\b\\\\b ]\" << std::endl;\\n\\n    // Sort input vector\\n    std::sort(nums.begin(), nums.end());\\n\\n    // Delete duplicates\\n    std::pair<std::vector<int>, int> result = removeDuplicates(nums);\\n    uniqueNumbers = result.first;\\n    nDuplicatesDeleted = result.second;\\n\\n    std::cout << \"\\\\n---Output vector---\\\\n[ \";\\n    for (int i = 0; i < uniqueNumbers.size(); i++) {\\n        std::cout << uniqueNumbers[i];\\n        if (i != uniqueNumbers.size() - 1) {\\n            std::cout << \", \";\\n        }\\n    }\\n    for (int i = 0; i < nDuplicatesDeleted; i++) {\\n        std::cout << \", _\";\\n    }\\n    std::cout << \" ]\" << std::endl;\\n\\n    return 0;\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "How smart you are!\\nBut have you seen the rule number 1 in Discussion section?\\nIt says \"Please don\\'t post any solutions in this discussion.\""
                    },
                    {
                        "username": "gcode_it",
                        "content": "my output is correct in IDLE. Yet error here\\n `def removeDuplicates(nums):\\n        \\n       d = {n:0 for n in nums}\\n        arr = [key for key in  d.keys()]\\n        count = len(arr)\\n        for i in range(len(arr), len(nums)):\\n            nums[i] = \\'_\\'\\n            arr.append(nums[i])\\n        \\n        return \\'{}, nums = {}\\'.format(count, arr)`\\n\\n"
                    },
                    {
                        "username": "vladd55k",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        k = 0\\n        alreadyExist = []\\n        for i in range(len(nums)):\\n            if nums[i] in alreadyExist:\\n                nums[i] = \\'*\\'\\n            else:\\n                alreadyExist.append(nums[i])\\n                k += 1\\n        for item in nums:\\n            if item == \\'*\\':\\n                nums.remove(item)     \\n        return k\\n\\n\\nWhy this thing runs into error? Why this test program say to me that 5 isn`t an integer?"
                    }
                ]
            },
            {
                "id": 1974200,
                "content": [
                    {
                        "username": "upendra_allagadda",
                        "content": "The example and description confuses you. According to the explanation, the assertion should be stopped by the length of k but it is not."
                    },
                    {
                        "username": "croegen",
                        "content": "I am confused with allmost all proposed solutions. I firstly solved the issue myself but got triggered by realy low score I get. \\nSo most of quickest solutions propose to iterate through array by checking the two elements next to each other.\\nLets say we have const arr = [1, 2, 3, 4, 4, 5, 6];\\nWe itarate to 4th element and then assign arr[4]=arr[5]\\n[1, 2, 3, 4, 5, 5, 6]\\nThen we assign arr[5]=arr[6]\\n[1, 2, 3, 4, 5, 6, 6]\\nOkay, great, how do you remove the last element? Non of solutions have the condition to remove those duplicates from the end, by copying the elements in array we still have the same length? What am I missing here?"
                    },
                    {
                        "username": "croegen",
                        "content": "[@svenyboyyt](/svenyboyyt) Yeah, I got it now, I totally missed the part about truncation of leftovers from array after all iterations before returning of the k."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "If you have n unique elements, the first n elements need to be unique. You don\\'t have to remove the duplicates because it\\'s not in the first n elements, but you can. And then you have to return the length."
                    },
                    {
                        "username": "croegen",
                        "content": "I get it, I missed the part about truncation of leftovers from array after all iterations."
                    },
                    {
                        "username": "RajuBudhoju",
                        "content": "can i use set?"
                    },
                    {
                        "username": "DenisKutlubaev",
                        "content": "This is one of the best coding problems with a beautiful concise solution. I solved it, but my solution was not this elegant."
                    },
                    {
                        "username": "jw52sc",
                        "content": "Spend almost 1 day to to get different pattern of the solution. But eventually, I believe the question got bug. Till now, I still not able to pass but I get exactly what i want based on my understanding. "
                    },
                    {
                        "username": "Darw",
                        "content": "What should I to return? An integer or an array?"
                    },
                    {
                        "username": "Grumpy_Tucker3",
                        "content": "integer obviously\\n"
                    },
                    {
                        "username": "Grumpy_Tucker3",
                        "content": "Its a medium level question\\n"
                    },
                    {
                        "username": "ivstefanov",
                        "content": "C++\\n\\n#include <algorithm>\\n#include <iostream>\\n#include <vector>\\n#include <set>\\n\\nstd::pair<std::vector<int>, int> removeDuplicates(const std::vector<int>& nums) {\\n    std::set<int> uniqueNumbers(nums.begin(), nums.end());\\n    std::vector<int> result(uniqueNumbers.begin(), uniqueNumbers.end());\\n    int numDuplicatesDeleted = nums.size() - result.size();\\n    return std::make_pair(result, numDuplicatesDeleted);\\n}\\n\\nint main() {\\n    std::vector<int> nums;\\n    std::vector<int> uniqueNumbers;\\n    int nDuplicatesDeleted = 0;\\n    int nSize = 0;\\n    int temp = 0;\\n    std::cout << \"How many numbers would you insert: \";\\n    std::cin >> nSize;\\n\\n    std::cout << \"\\\\n---Filling the vector---\" << std::endl;\\n    for (int i = 0; i < nSize; i++) {\\n        std::cout << \"Insert number #\" << i + 1 << \": \";\\n        std::cin >> temp;\\n        nums.push_back(temp);\\n    }\\n\\n    std::cout << \"\\\\n---Input vector---\\\\n[ \";\\n    for (int e : nums) {\\n        std::cout << e << \", \";\\n    }\\n    std::cout << \"\\\\b\\\\b ]\" << std::endl;\\n\\n    // Sort input vector\\n    std::sort(nums.begin(), nums.end());\\n\\n    // Delete duplicates\\n    std::pair<std::vector<int>, int> result = removeDuplicates(nums);\\n    uniqueNumbers = result.first;\\n    nDuplicatesDeleted = result.second;\\n\\n    std::cout << \"\\\\n---Output vector---\\\\n[ \";\\n    for (int i = 0; i < uniqueNumbers.size(); i++) {\\n        std::cout << uniqueNumbers[i];\\n        if (i != uniqueNumbers.size() - 1) {\\n            std::cout << \", \";\\n        }\\n    }\\n    for (int i = 0; i < nDuplicatesDeleted; i++) {\\n        std::cout << \", _\";\\n    }\\n    std::cout << \" ]\" << std::endl;\\n\\n    return 0;\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "How smart you are!\\nBut have you seen the rule number 1 in Discussion section?\\nIt says \"Please don\\'t post any solutions in this discussion.\""
                    },
                    {
                        "username": "gcode_it",
                        "content": "my output is correct in IDLE. Yet error here\\n `def removeDuplicates(nums):\\n        \\n       d = {n:0 for n in nums}\\n        arr = [key for key in  d.keys()]\\n        count = len(arr)\\n        for i in range(len(arr), len(nums)):\\n            nums[i] = \\'_\\'\\n            arr.append(nums[i])\\n        \\n        return \\'{}, nums = {}\\'.format(count, arr)`\\n\\n"
                    },
                    {
                        "username": "vladd55k",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        k = 0\\n        alreadyExist = []\\n        for i in range(len(nums)):\\n            if nums[i] in alreadyExist:\\n                nums[i] = \\'*\\'\\n            else:\\n                alreadyExist.append(nums[i])\\n                k += 1\\n        for item in nums:\\n            if item == \\'*\\':\\n                nums.remove(item)     \\n        return k\\n\\n\\nWhy this thing runs into error? Why this test program say to me that 5 isn`t an integer?"
                    }
                ]
            },
            {
                "id": 1973622,
                "content": [
                    {
                        "username": "upendra_allagadda",
                        "content": "The example and description confuses you. According to the explanation, the assertion should be stopped by the length of k but it is not."
                    },
                    {
                        "username": "croegen",
                        "content": "I am confused with allmost all proposed solutions. I firstly solved the issue myself but got triggered by realy low score I get. \\nSo most of quickest solutions propose to iterate through array by checking the two elements next to each other.\\nLets say we have const arr = [1, 2, 3, 4, 4, 5, 6];\\nWe itarate to 4th element and then assign arr[4]=arr[5]\\n[1, 2, 3, 4, 5, 5, 6]\\nThen we assign arr[5]=arr[6]\\n[1, 2, 3, 4, 5, 6, 6]\\nOkay, great, how do you remove the last element? Non of solutions have the condition to remove those duplicates from the end, by copying the elements in array we still have the same length? What am I missing here?"
                    },
                    {
                        "username": "croegen",
                        "content": "[@svenyboyyt](/svenyboyyt) Yeah, I got it now, I totally missed the part about truncation of leftovers from array after all iterations before returning of the k."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "If you have n unique elements, the first n elements need to be unique. You don\\'t have to remove the duplicates because it\\'s not in the first n elements, but you can. And then you have to return the length."
                    },
                    {
                        "username": "croegen",
                        "content": "I get it, I missed the part about truncation of leftovers from array after all iterations."
                    },
                    {
                        "username": "RajuBudhoju",
                        "content": "can i use set?"
                    },
                    {
                        "username": "DenisKutlubaev",
                        "content": "This is one of the best coding problems with a beautiful concise solution. I solved it, but my solution was not this elegant."
                    },
                    {
                        "username": "jw52sc",
                        "content": "Spend almost 1 day to to get different pattern of the solution. But eventually, I believe the question got bug. Till now, I still not able to pass but I get exactly what i want based on my understanding. "
                    },
                    {
                        "username": "Darw",
                        "content": "What should I to return? An integer or an array?"
                    },
                    {
                        "username": "Grumpy_Tucker3",
                        "content": "integer obviously\\n"
                    },
                    {
                        "username": "Grumpy_Tucker3",
                        "content": "Its a medium level question\\n"
                    },
                    {
                        "username": "ivstefanov",
                        "content": "C++\\n\\n#include <algorithm>\\n#include <iostream>\\n#include <vector>\\n#include <set>\\n\\nstd::pair<std::vector<int>, int> removeDuplicates(const std::vector<int>& nums) {\\n    std::set<int> uniqueNumbers(nums.begin(), nums.end());\\n    std::vector<int> result(uniqueNumbers.begin(), uniqueNumbers.end());\\n    int numDuplicatesDeleted = nums.size() - result.size();\\n    return std::make_pair(result, numDuplicatesDeleted);\\n}\\n\\nint main() {\\n    std::vector<int> nums;\\n    std::vector<int> uniqueNumbers;\\n    int nDuplicatesDeleted = 0;\\n    int nSize = 0;\\n    int temp = 0;\\n    std::cout << \"How many numbers would you insert: \";\\n    std::cin >> nSize;\\n\\n    std::cout << \"\\\\n---Filling the vector---\" << std::endl;\\n    for (int i = 0; i < nSize; i++) {\\n        std::cout << \"Insert number #\" << i + 1 << \": \";\\n        std::cin >> temp;\\n        nums.push_back(temp);\\n    }\\n\\n    std::cout << \"\\\\n---Input vector---\\\\n[ \";\\n    for (int e : nums) {\\n        std::cout << e << \", \";\\n    }\\n    std::cout << \"\\\\b\\\\b ]\" << std::endl;\\n\\n    // Sort input vector\\n    std::sort(nums.begin(), nums.end());\\n\\n    // Delete duplicates\\n    std::pair<std::vector<int>, int> result = removeDuplicates(nums);\\n    uniqueNumbers = result.first;\\n    nDuplicatesDeleted = result.second;\\n\\n    std::cout << \"\\\\n---Output vector---\\\\n[ \";\\n    for (int i = 0; i < uniqueNumbers.size(); i++) {\\n        std::cout << uniqueNumbers[i];\\n        if (i != uniqueNumbers.size() - 1) {\\n            std::cout << \", \";\\n        }\\n    }\\n    for (int i = 0; i < nDuplicatesDeleted; i++) {\\n        std::cout << \", _\";\\n    }\\n    std::cout << \" ]\" << std::endl;\\n\\n    return 0;\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "How smart you are!\\nBut have you seen the rule number 1 in Discussion section?\\nIt says \"Please don\\'t post any solutions in this discussion.\""
                    },
                    {
                        "username": "gcode_it",
                        "content": "my output is correct in IDLE. Yet error here\\n `def removeDuplicates(nums):\\n        \\n       d = {n:0 for n in nums}\\n        arr = [key for key in  d.keys()]\\n        count = len(arr)\\n        for i in range(len(arr), len(nums)):\\n            nums[i] = \\'_\\'\\n            arr.append(nums[i])\\n        \\n        return \\'{}, nums = {}\\'.format(count, arr)`\\n\\n"
                    },
                    {
                        "username": "vladd55k",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        k = 0\\n        alreadyExist = []\\n        for i in range(len(nums)):\\n            if nums[i] in alreadyExist:\\n                nums[i] = \\'*\\'\\n            else:\\n                alreadyExist.append(nums[i])\\n                k += 1\\n        for item in nums:\\n            if item == \\'*\\':\\n                nums.remove(item)     \\n        return k\\n\\n\\nWhy this thing runs into error? Why this test program say to me that 5 isn`t an integer?"
                    }
                ]
            },
            {
                "id": 1972787,
                "content": [
                    {
                        "username": "upendra_allagadda",
                        "content": "The example and description confuses you. According to the explanation, the assertion should be stopped by the length of k but it is not."
                    },
                    {
                        "username": "croegen",
                        "content": "I am confused with allmost all proposed solutions. I firstly solved the issue myself but got triggered by realy low score I get. \\nSo most of quickest solutions propose to iterate through array by checking the two elements next to each other.\\nLets say we have const arr = [1, 2, 3, 4, 4, 5, 6];\\nWe itarate to 4th element and then assign arr[4]=arr[5]\\n[1, 2, 3, 4, 5, 5, 6]\\nThen we assign arr[5]=arr[6]\\n[1, 2, 3, 4, 5, 6, 6]\\nOkay, great, how do you remove the last element? Non of solutions have the condition to remove those duplicates from the end, by copying the elements in array we still have the same length? What am I missing here?"
                    },
                    {
                        "username": "croegen",
                        "content": "[@svenyboyyt](/svenyboyyt) Yeah, I got it now, I totally missed the part about truncation of leftovers from array after all iterations before returning of the k."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "If you have n unique elements, the first n elements need to be unique. You don\\'t have to remove the duplicates because it\\'s not in the first n elements, but you can. And then you have to return the length."
                    },
                    {
                        "username": "croegen",
                        "content": "I get it, I missed the part about truncation of leftovers from array after all iterations."
                    },
                    {
                        "username": "RajuBudhoju",
                        "content": "can i use set?"
                    },
                    {
                        "username": "DenisKutlubaev",
                        "content": "This is one of the best coding problems with a beautiful concise solution. I solved it, but my solution was not this elegant."
                    },
                    {
                        "username": "jw52sc",
                        "content": "Spend almost 1 day to to get different pattern of the solution. But eventually, I believe the question got bug. Till now, I still not able to pass but I get exactly what i want based on my understanding. "
                    },
                    {
                        "username": "Darw",
                        "content": "What should I to return? An integer or an array?"
                    },
                    {
                        "username": "Grumpy_Tucker3",
                        "content": "integer obviously\\n"
                    },
                    {
                        "username": "Grumpy_Tucker3",
                        "content": "Its a medium level question\\n"
                    },
                    {
                        "username": "ivstefanov",
                        "content": "C++\\n\\n#include <algorithm>\\n#include <iostream>\\n#include <vector>\\n#include <set>\\n\\nstd::pair<std::vector<int>, int> removeDuplicates(const std::vector<int>& nums) {\\n    std::set<int> uniqueNumbers(nums.begin(), nums.end());\\n    std::vector<int> result(uniqueNumbers.begin(), uniqueNumbers.end());\\n    int numDuplicatesDeleted = nums.size() - result.size();\\n    return std::make_pair(result, numDuplicatesDeleted);\\n}\\n\\nint main() {\\n    std::vector<int> nums;\\n    std::vector<int> uniqueNumbers;\\n    int nDuplicatesDeleted = 0;\\n    int nSize = 0;\\n    int temp = 0;\\n    std::cout << \"How many numbers would you insert: \";\\n    std::cin >> nSize;\\n\\n    std::cout << \"\\\\n---Filling the vector---\" << std::endl;\\n    for (int i = 0; i < nSize; i++) {\\n        std::cout << \"Insert number #\" << i + 1 << \": \";\\n        std::cin >> temp;\\n        nums.push_back(temp);\\n    }\\n\\n    std::cout << \"\\\\n---Input vector---\\\\n[ \";\\n    for (int e : nums) {\\n        std::cout << e << \", \";\\n    }\\n    std::cout << \"\\\\b\\\\b ]\" << std::endl;\\n\\n    // Sort input vector\\n    std::sort(nums.begin(), nums.end());\\n\\n    // Delete duplicates\\n    std::pair<std::vector<int>, int> result = removeDuplicates(nums);\\n    uniqueNumbers = result.first;\\n    nDuplicatesDeleted = result.second;\\n\\n    std::cout << \"\\\\n---Output vector---\\\\n[ \";\\n    for (int i = 0; i < uniqueNumbers.size(); i++) {\\n        std::cout << uniqueNumbers[i];\\n        if (i != uniqueNumbers.size() - 1) {\\n            std::cout << \", \";\\n        }\\n    }\\n    for (int i = 0; i < nDuplicatesDeleted; i++) {\\n        std::cout << \", _\";\\n    }\\n    std::cout << \" ]\" << std::endl;\\n\\n    return 0;\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "How smart you are!\\nBut have you seen the rule number 1 in Discussion section?\\nIt says \"Please don\\'t post any solutions in this discussion.\""
                    },
                    {
                        "username": "gcode_it",
                        "content": "my output is correct in IDLE. Yet error here\\n `def removeDuplicates(nums):\\n        \\n       d = {n:0 for n in nums}\\n        arr = [key for key in  d.keys()]\\n        count = len(arr)\\n        for i in range(len(arr), len(nums)):\\n            nums[i] = \\'_\\'\\n            arr.append(nums[i])\\n        \\n        return \\'{}, nums = {}\\'.format(count, arr)`\\n\\n"
                    },
                    {
                        "username": "vladd55k",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        k = 0\\n        alreadyExist = []\\n        for i in range(len(nums)):\\n            if nums[i] in alreadyExist:\\n                nums[i] = \\'*\\'\\n            else:\\n                alreadyExist.append(nums[i])\\n                k += 1\\n        for item in nums:\\n            if item == \\'*\\':\\n                nums.remove(item)     \\n        return k\\n\\n\\nWhy this thing runs into error? Why this test program say to me that 5 isn`t an integer?"
                    }
                ]
            },
            {
                "id": 1970475,
                "content": [
                    {
                        "username": "upendra_allagadda",
                        "content": "The example and description confuses you. According to the explanation, the assertion should be stopped by the length of k but it is not."
                    },
                    {
                        "username": "croegen",
                        "content": "I am confused with allmost all proposed solutions. I firstly solved the issue myself but got triggered by realy low score I get. \\nSo most of quickest solutions propose to iterate through array by checking the two elements next to each other.\\nLets say we have const arr = [1, 2, 3, 4, 4, 5, 6];\\nWe itarate to 4th element and then assign arr[4]=arr[5]\\n[1, 2, 3, 4, 5, 5, 6]\\nThen we assign arr[5]=arr[6]\\n[1, 2, 3, 4, 5, 6, 6]\\nOkay, great, how do you remove the last element? Non of solutions have the condition to remove those duplicates from the end, by copying the elements in array we still have the same length? What am I missing here?"
                    },
                    {
                        "username": "croegen",
                        "content": "[@svenyboyyt](/svenyboyyt) Yeah, I got it now, I totally missed the part about truncation of leftovers from array after all iterations before returning of the k."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "If you have n unique elements, the first n elements need to be unique. You don\\'t have to remove the duplicates because it\\'s not in the first n elements, but you can. And then you have to return the length."
                    },
                    {
                        "username": "croegen",
                        "content": "I get it, I missed the part about truncation of leftovers from array after all iterations."
                    },
                    {
                        "username": "RajuBudhoju",
                        "content": "can i use set?"
                    },
                    {
                        "username": "DenisKutlubaev",
                        "content": "This is one of the best coding problems with a beautiful concise solution. I solved it, but my solution was not this elegant."
                    },
                    {
                        "username": "jw52sc",
                        "content": "Spend almost 1 day to to get different pattern of the solution. But eventually, I believe the question got bug. Till now, I still not able to pass but I get exactly what i want based on my understanding. "
                    },
                    {
                        "username": "Darw",
                        "content": "What should I to return? An integer or an array?"
                    },
                    {
                        "username": "Grumpy_Tucker3",
                        "content": "integer obviously\\n"
                    },
                    {
                        "username": "Grumpy_Tucker3",
                        "content": "Its a medium level question\\n"
                    },
                    {
                        "username": "ivstefanov",
                        "content": "C++\\n\\n#include <algorithm>\\n#include <iostream>\\n#include <vector>\\n#include <set>\\n\\nstd::pair<std::vector<int>, int> removeDuplicates(const std::vector<int>& nums) {\\n    std::set<int> uniqueNumbers(nums.begin(), nums.end());\\n    std::vector<int> result(uniqueNumbers.begin(), uniqueNumbers.end());\\n    int numDuplicatesDeleted = nums.size() - result.size();\\n    return std::make_pair(result, numDuplicatesDeleted);\\n}\\n\\nint main() {\\n    std::vector<int> nums;\\n    std::vector<int> uniqueNumbers;\\n    int nDuplicatesDeleted = 0;\\n    int nSize = 0;\\n    int temp = 0;\\n    std::cout << \"How many numbers would you insert: \";\\n    std::cin >> nSize;\\n\\n    std::cout << \"\\\\n---Filling the vector---\" << std::endl;\\n    for (int i = 0; i < nSize; i++) {\\n        std::cout << \"Insert number #\" << i + 1 << \": \";\\n        std::cin >> temp;\\n        nums.push_back(temp);\\n    }\\n\\n    std::cout << \"\\\\n---Input vector---\\\\n[ \";\\n    for (int e : nums) {\\n        std::cout << e << \", \";\\n    }\\n    std::cout << \"\\\\b\\\\b ]\" << std::endl;\\n\\n    // Sort input vector\\n    std::sort(nums.begin(), nums.end());\\n\\n    // Delete duplicates\\n    std::pair<std::vector<int>, int> result = removeDuplicates(nums);\\n    uniqueNumbers = result.first;\\n    nDuplicatesDeleted = result.second;\\n\\n    std::cout << \"\\\\n---Output vector---\\\\n[ \";\\n    for (int i = 0; i < uniqueNumbers.size(); i++) {\\n        std::cout << uniqueNumbers[i];\\n        if (i != uniqueNumbers.size() - 1) {\\n            std::cout << \", \";\\n        }\\n    }\\n    for (int i = 0; i < nDuplicatesDeleted; i++) {\\n        std::cout << \", _\";\\n    }\\n    std::cout << \" ]\" << std::endl;\\n\\n    return 0;\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "How smart you are!\\nBut have you seen the rule number 1 in Discussion section?\\nIt says \"Please don\\'t post any solutions in this discussion.\""
                    },
                    {
                        "username": "gcode_it",
                        "content": "my output is correct in IDLE. Yet error here\\n `def removeDuplicates(nums):\\n        \\n       d = {n:0 for n in nums}\\n        arr = [key for key in  d.keys()]\\n        count = len(arr)\\n        for i in range(len(arr), len(nums)):\\n            nums[i] = \\'_\\'\\n            arr.append(nums[i])\\n        \\n        return \\'{}, nums = {}\\'.format(count, arr)`\\n\\n"
                    },
                    {
                        "username": "vladd55k",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        k = 0\\n        alreadyExist = []\\n        for i in range(len(nums)):\\n            if nums[i] in alreadyExist:\\n                nums[i] = \\'*\\'\\n            else:\\n                alreadyExist.append(nums[i])\\n                k += 1\\n        for item in nums:\\n            if item == \\'*\\':\\n                nums.remove(item)     \\n        return k\\n\\n\\nWhy this thing runs into error? Why this test program say to me that 5 isn`t an integer?"
                    }
                ]
            },
            {
                "id": 1970318,
                "content": [
                    {
                        "username": "upendra_allagadda",
                        "content": "The example and description confuses you. According to the explanation, the assertion should be stopped by the length of k but it is not."
                    },
                    {
                        "username": "croegen",
                        "content": "I am confused with allmost all proposed solutions. I firstly solved the issue myself but got triggered by realy low score I get. \\nSo most of quickest solutions propose to iterate through array by checking the two elements next to each other.\\nLets say we have const arr = [1, 2, 3, 4, 4, 5, 6];\\nWe itarate to 4th element and then assign arr[4]=arr[5]\\n[1, 2, 3, 4, 5, 5, 6]\\nThen we assign arr[5]=arr[6]\\n[1, 2, 3, 4, 5, 6, 6]\\nOkay, great, how do you remove the last element? Non of solutions have the condition to remove those duplicates from the end, by copying the elements in array we still have the same length? What am I missing here?"
                    },
                    {
                        "username": "croegen",
                        "content": "[@svenyboyyt](/svenyboyyt) Yeah, I got it now, I totally missed the part about truncation of leftovers from array after all iterations before returning of the k."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "If you have n unique elements, the first n elements need to be unique. You don\\'t have to remove the duplicates because it\\'s not in the first n elements, but you can. And then you have to return the length."
                    },
                    {
                        "username": "croegen",
                        "content": "I get it, I missed the part about truncation of leftovers from array after all iterations."
                    },
                    {
                        "username": "RajuBudhoju",
                        "content": "can i use set?"
                    },
                    {
                        "username": "DenisKutlubaev",
                        "content": "This is one of the best coding problems with a beautiful concise solution. I solved it, but my solution was not this elegant."
                    },
                    {
                        "username": "jw52sc",
                        "content": "Spend almost 1 day to to get different pattern of the solution. But eventually, I believe the question got bug. Till now, I still not able to pass but I get exactly what i want based on my understanding. "
                    },
                    {
                        "username": "Darw",
                        "content": "What should I to return? An integer or an array?"
                    },
                    {
                        "username": "Grumpy_Tucker3",
                        "content": "integer obviously\\n"
                    },
                    {
                        "username": "Grumpy_Tucker3",
                        "content": "Its a medium level question\\n"
                    },
                    {
                        "username": "ivstefanov",
                        "content": "C++\\n\\n#include <algorithm>\\n#include <iostream>\\n#include <vector>\\n#include <set>\\n\\nstd::pair<std::vector<int>, int> removeDuplicates(const std::vector<int>& nums) {\\n    std::set<int> uniqueNumbers(nums.begin(), nums.end());\\n    std::vector<int> result(uniqueNumbers.begin(), uniqueNumbers.end());\\n    int numDuplicatesDeleted = nums.size() - result.size();\\n    return std::make_pair(result, numDuplicatesDeleted);\\n}\\n\\nint main() {\\n    std::vector<int> nums;\\n    std::vector<int> uniqueNumbers;\\n    int nDuplicatesDeleted = 0;\\n    int nSize = 0;\\n    int temp = 0;\\n    std::cout << \"How many numbers would you insert: \";\\n    std::cin >> nSize;\\n\\n    std::cout << \"\\\\n---Filling the vector---\" << std::endl;\\n    for (int i = 0; i < nSize; i++) {\\n        std::cout << \"Insert number #\" << i + 1 << \": \";\\n        std::cin >> temp;\\n        nums.push_back(temp);\\n    }\\n\\n    std::cout << \"\\\\n---Input vector---\\\\n[ \";\\n    for (int e : nums) {\\n        std::cout << e << \", \";\\n    }\\n    std::cout << \"\\\\b\\\\b ]\" << std::endl;\\n\\n    // Sort input vector\\n    std::sort(nums.begin(), nums.end());\\n\\n    // Delete duplicates\\n    std::pair<std::vector<int>, int> result = removeDuplicates(nums);\\n    uniqueNumbers = result.first;\\n    nDuplicatesDeleted = result.second;\\n\\n    std::cout << \"\\\\n---Output vector---\\\\n[ \";\\n    for (int i = 0; i < uniqueNumbers.size(); i++) {\\n        std::cout << uniqueNumbers[i];\\n        if (i != uniqueNumbers.size() - 1) {\\n            std::cout << \", \";\\n        }\\n    }\\n    for (int i = 0; i < nDuplicatesDeleted; i++) {\\n        std::cout << \", _\";\\n    }\\n    std::cout << \" ]\" << std::endl;\\n\\n    return 0;\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "How smart you are!\\nBut have you seen the rule number 1 in Discussion section?\\nIt says \"Please don\\'t post any solutions in this discussion.\""
                    },
                    {
                        "username": "gcode_it",
                        "content": "my output is correct in IDLE. Yet error here\\n `def removeDuplicates(nums):\\n        \\n       d = {n:0 for n in nums}\\n        arr = [key for key in  d.keys()]\\n        count = len(arr)\\n        for i in range(len(arr), len(nums)):\\n            nums[i] = \\'_\\'\\n            arr.append(nums[i])\\n        \\n        return \\'{}, nums = {}\\'.format(count, arr)`\\n\\n"
                    },
                    {
                        "username": "vladd55k",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        k = 0\\n        alreadyExist = []\\n        for i in range(len(nums)):\\n            if nums[i] in alreadyExist:\\n                nums[i] = \\'*\\'\\n            else:\\n                alreadyExist.append(nums[i])\\n                k += 1\\n        for item in nums:\\n            if item == \\'*\\':\\n                nums.remove(item)     \\n        return k\\n\\n\\nWhy this thing runs into error? Why this test program say to me that 5 isn`t an integer?"
                    }
                ]
            },
            {
                "id": 1969214,
                "content": [
                    {
                        "username": "upendra_allagadda",
                        "content": "The example and description confuses you. According to the explanation, the assertion should be stopped by the length of k but it is not."
                    },
                    {
                        "username": "croegen",
                        "content": "I am confused with allmost all proposed solutions. I firstly solved the issue myself but got triggered by realy low score I get. \\nSo most of quickest solutions propose to iterate through array by checking the two elements next to each other.\\nLets say we have const arr = [1, 2, 3, 4, 4, 5, 6];\\nWe itarate to 4th element and then assign arr[4]=arr[5]\\n[1, 2, 3, 4, 5, 5, 6]\\nThen we assign arr[5]=arr[6]\\n[1, 2, 3, 4, 5, 6, 6]\\nOkay, great, how do you remove the last element? Non of solutions have the condition to remove those duplicates from the end, by copying the elements in array we still have the same length? What am I missing here?"
                    },
                    {
                        "username": "croegen",
                        "content": "[@svenyboyyt](/svenyboyyt) Yeah, I got it now, I totally missed the part about truncation of leftovers from array after all iterations before returning of the k."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "If you have n unique elements, the first n elements need to be unique. You don\\'t have to remove the duplicates because it\\'s not in the first n elements, but you can. And then you have to return the length."
                    },
                    {
                        "username": "croegen",
                        "content": "I get it, I missed the part about truncation of leftovers from array after all iterations."
                    },
                    {
                        "username": "RajuBudhoju",
                        "content": "can i use set?"
                    },
                    {
                        "username": "DenisKutlubaev",
                        "content": "This is one of the best coding problems with a beautiful concise solution. I solved it, but my solution was not this elegant."
                    },
                    {
                        "username": "jw52sc",
                        "content": "Spend almost 1 day to to get different pattern of the solution. But eventually, I believe the question got bug. Till now, I still not able to pass but I get exactly what i want based on my understanding. "
                    },
                    {
                        "username": "Darw",
                        "content": "What should I to return? An integer or an array?"
                    },
                    {
                        "username": "Grumpy_Tucker3",
                        "content": "integer obviously\\n"
                    },
                    {
                        "username": "Grumpy_Tucker3",
                        "content": "Its a medium level question\\n"
                    },
                    {
                        "username": "ivstefanov",
                        "content": "C++\\n\\n#include <algorithm>\\n#include <iostream>\\n#include <vector>\\n#include <set>\\n\\nstd::pair<std::vector<int>, int> removeDuplicates(const std::vector<int>& nums) {\\n    std::set<int> uniqueNumbers(nums.begin(), nums.end());\\n    std::vector<int> result(uniqueNumbers.begin(), uniqueNumbers.end());\\n    int numDuplicatesDeleted = nums.size() - result.size();\\n    return std::make_pair(result, numDuplicatesDeleted);\\n}\\n\\nint main() {\\n    std::vector<int> nums;\\n    std::vector<int> uniqueNumbers;\\n    int nDuplicatesDeleted = 0;\\n    int nSize = 0;\\n    int temp = 0;\\n    std::cout << \"How many numbers would you insert: \";\\n    std::cin >> nSize;\\n\\n    std::cout << \"\\\\n---Filling the vector---\" << std::endl;\\n    for (int i = 0; i < nSize; i++) {\\n        std::cout << \"Insert number #\" << i + 1 << \": \";\\n        std::cin >> temp;\\n        nums.push_back(temp);\\n    }\\n\\n    std::cout << \"\\\\n---Input vector---\\\\n[ \";\\n    for (int e : nums) {\\n        std::cout << e << \", \";\\n    }\\n    std::cout << \"\\\\b\\\\b ]\" << std::endl;\\n\\n    // Sort input vector\\n    std::sort(nums.begin(), nums.end());\\n\\n    // Delete duplicates\\n    std::pair<std::vector<int>, int> result = removeDuplicates(nums);\\n    uniqueNumbers = result.first;\\n    nDuplicatesDeleted = result.second;\\n\\n    std::cout << \"\\\\n---Output vector---\\\\n[ \";\\n    for (int i = 0; i < uniqueNumbers.size(); i++) {\\n        std::cout << uniqueNumbers[i];\\n        if (i != uniqueNumbers.size() - 1) {\\n            std::cout << \", \";\\n        }\\n    }\\n    for (int i = 0; i < nDuplicatesDeleted; i++) {\\n        std::cout << \", _\";\\n    }\\n    std::cout << \" ]\" << std::endl;\\n\\n    return 0;\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "How smart you are!\\nBut have you seen the rule number 1 in Discussion section?\\nIt says \"Please don\\'t post any solutions in this discussion.\""
                    },
                    {
                        "username": "gcode_it",
                        "content": "my output is correct in IDLE. Yet error here\\n `def removeDuplicates(nums):\\n        \\n       d = {n:0 for n in nums}\\n        arr = [key for key in  d.keys()]\\n        count = len(arr)\\n        for i in range(len(arr), len(nums)):\\n            nums[i] = \\'_\\'\\n            arr.append(nums[i])\\n        \\n        return \\'{}, nums = {}\\'.format(count, arr)`\\n\\n"
                    },
                    {
                        "username": "vladd55k",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        k = 0\\n        alreadyExist = []\\n        for i in range(len(nums)):\\n            if nums[i] in alreadyExist:\\n                nums[i] = \\'*\\'\\n            else:\\n                alreadyExist.append(nums[i])\\n                k += 1\\n        for item in nums:\\n            if item == \\'*\\':\\n                nums.remove(item)     \\n        return k\\n\\n\\nWhy this thing runs into error? Why this test program say to me that 5 isn`t an integer?"
                    }
                ]
            },
            {
                "id": 1968286,
                "content": [
                    {
                        "username": "upendra_allagadda",
                        "content": "The example and description confuses you. According to the explanation, the assertion should be stopped by the length of k but it is not."
                    },
                    {
                        "username": "croegen",
                        "content": "I am confused with allmost all proposed solutions. I firstly solved the issue myself but got triggered by realy low score I get. \\nSo most of quickest solutions propose to iterate through array by checking the two elements next to each other.\\nLets say we have const arr = [1, 2, 3, 4, 4, 5, 6];\\nWe itarate to 4th element and then assign arr[4]=arr[5]\\n[1, 2, 3, 4, 5, 5, 6]\\nThen we assign arr[5]=arr[6]\\n[1, 2, 3, 4, 5, 6, 6]\\nOkay, great, how do you remove the last element? Non of solutions have the condition to remove those duplicates from the end, by copying the elements in array we still have the same length? What am I missing here?"
                    },
                    {
                        "username": "croegen",
                        "content": "[@svenyboyyt](/svenyboyyt) Yeah, I got it now, I totally missed the part about truncation of leftovers from array after all iterations before returning of the k."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "If you have n unique elements, the first n elements need to be unique. You don\\'t have to remove the duplicates because it\\'s not in the first n elements, but you can. And then you have to return the length."
                    },
                    {
                        "username": "croegen",
                        "content": "I get it, I missed the part about truncation of leftovers from array after all iterations."
                    },
                    {
                        "username": "RajuBudhoju",
                        "content": "can i use set?"
                    },
                    {
                        "username": "DenisKutlubaev",
                        "content": "This is one of the best coding problems with a beautiful concise solution. I solved it, but my solution was not this elegant."
                    },
                    {
                        "username": "jw52sc",
                        "content": "Spend almost 1 day to to get different pattern of the solution. But eventually, I believe the question got bug. Till now, I still not able to pass but I get exactly what i want based on my understanding. "
                    },
                    {
                        "username": "Darw",
                        "content": "What should I to return? An integer or an array?"
                    },
                    {
                        "username": "Grumpy_Tucker3",
                        "content": "integer obviously\\n"
                    },
                    {
                        "username": "Grumpy_Tucker3",
                        "content": "Its a medium level question\\n"
                    },
                    {
                        "username": "ivstefanov",
                        "content": "C++\\n\\n#include <algorithm>\\n#include <iostream>\\n#include <vector>\\n#include <set>\\n\\nstd::pair<std::vector<int>, int> removeDuplicates(const std::vector<int>& nums) {\\n    std::set<int> uniqueNumbers(nums.begin(), nums.end());\\n    std::vector<int> result(uniqueNumbers.begin(), uniqueNumbers.end());\\n    int numDuplicatesDeleted = nums.size() - result.size();\\n    return std::make_pair(result, numDuplicatesDeleted);\\n}\\n\\nint main() {\\n    std::vector<int> nums;\\n    std::vector<int> uniqueNumbers;\\n    int nDuplicatesDeleted = 0;\\n    int nSize = 0;\\n    int temp = 0;\\n    std::cout << \"How many numbers would you insert: \";\\n    std::cin >> nSize;\\n\\n    std::cout << \"\\\\n---Filling the vector---\" << std::endl;\\n    for (int i = 0; i < nSize; i++) {\\n        std::cout << \"Insert number #\" << i + 1 << \": \";\\n        std::cin >> temp;\\n        nums.push_back(temp);\\n    }\\n\\n    std::cout << \"\\\\n---Input vector---\\\\n[ \";\\n    for (int e : nums) {\\n        std::cout << e << \", \";\\n    }\\n    std::cout << \"\\\\b\\\\b ]\" << std::endl;\\n\\n    // Sort input vector\\n    std::sort(nums.begin(), nums.end());\\n\\n    // Delete duplicates\\n    std::pair<std::vector<int>, int> result = removeDuplicates(nums);\\n    uniqueNumbers = result.first;\\n    nDuplicatesDeleted = result.second;\\n\\n    std::cout << \"\\\\n---Output vector---\\\\n[ \";\\n    for (int i = 0; i < uniqueNumbers.size(); i++) {\\n        std::cout << uniqueNumbers[i];\\n        if (i != uniqueNumbers.size() - 1) {\\n            std::cout << \", \";\\n        }\\n    }\\n    for (int i = 0; i < nDuplicatesDeleted; i++) {\\n        std::cout << \", _\";\\n    }\\n    std::cout << \" ]\" << std::endl;\\n\\n    return 0;\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "How smart you are!\\nBut have you seen the rule number 1 in Discussion section?\\nIt says \"Please don\\'t post any solutions in this discussion.\""
                    },
                    {
                        "username": "gcode_it",
                        "content": "my output is correct in IDLE. Yet error here\\n `def removeDuplicates(nums):\\n        \\n       d = {n:0 for n in nums}\\n        arr = [key for key in  d.keys()]\\n        count = len(arr)\\n        for i in range(len(arr), len(nums)):\\n            nums[i] = \\'_\\'\\n            arr.append(nums[i])\\n        \\n        return \\'{}, nums = {}\\'.format(count, arr)`\\n\\n"
                    },
                    {
                        "username": "vladd55k",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        k = 0\\n        alreadyExist = []\\n        for i in range(len(nums)):\\n            if nums[i] in alreadyExist:\\n                nums[i] = \\'*\\'\\n            else:\\n                alreadyExist.append(nums[i])\\n                k += 1\\n        for item in nums:\\n            if item == \\'*\\':\\n                nums.remove(item)     \\n        return k\\n\\n\\nWhy this thing runs into error? Why this test program say to me that 5 isn`t an integer?"
                    }
                ]
            },
            {
                "id": 1966390,
                "content": [
                    {
                        "username": "upendra_allagadda",
                        "content": "The example and description confuses you. According to the explanation, the assertion should be stopped by the length of k but it is not."
                    },
                    {
                        "username": "croegen",
                        "content": "I am confused with allmost all proposed solutions. I firstly solved the issue myself but got triggered by realy low score I get. \\nSo most of quickest solutions propose to iterate through array by checking the two elements next to each other.\\nLets say we have const arr = [1, 2, 3, 4, 4, 5, 6];\\nWe itarate to 4th element and then assign arr[4]=arr[5]\\n[1, 2, 3, 4, 5, 5, 6]\\nThen we assign arr[5]=arr[6]\\n[1, 2, 3, 4, 5, 6, 6]\\nOkay, great, how do you remove the last element? Non of solutions have the condition to remove those duplicates from the end, by copying the elements in array we still have the same length? What am I missing here?"
                    },
                    {
                        "username": "croegen",
                        "content": "[@svenyboyyt](/svenyboyyt) Yeah, I got it now, I totally missed the part about truncation of leftovers from array after all iterations before returning of the k."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "If you have n unique elements, the first n elements need to be unique. You don\\'t have to remove the duplicates because it\\'s not in the first n elements, but you can. And then you have to return the length."
                    },
                    {
                        "username": "croegen",
                        "content": "I get it, I missed the part about truncation of leftovers from array after all iterations."
                    },
                    {
                        "username": "RajuBudhoju",
                        "content": "can i use set?"
                    },
                    {
                        "username": "DenisKutlubaev",
                        "content": "This is one of the best coding problems with a beautiful concise solution. I solved it, but my solution was not this elegant."
                    },
                    {
                        "username": "jw52sc",
                        "content": "Spend almost 1 day to to get different pattern of the solution. But eventually, I believe the question got bug. Till now, I still not able to pass but I get exactly what i want based on my understanding. "
                    },
                    {
                        "username": "Darw",
                        "content": "What should I to return? An integer or an array?"
                    },
                    {
                        "username": "Grumpy_Tucker3",
                        "content": "integer obviously\\n"
                    },
                    {
                        "username": "Grumpy_Tucker3",
                        "content": "Its a medium level question\\n"
                    },
                    {
                        "username": "ivstefanov",
                        "content": "C++\\n\\n#include <algorithm>\\n#include <iostream>\\n#include <vector>\\n#include <set>\\n\\nstd::pair<std::vector<int>, int> removeDuplicates(const std::vector<int>& nums) {\\n    std::set<int> uniqueNumbers(nums.begin(), nums.end());\\n    std::vector<int> result(uniqueNumbers.begin(), uniqueNumbers.end());\\n    int numDuplicatesDeleted = nums.size() - result.size();\\n    return std::make_pair(result, numDuplicatesDeleted);\\n}\\n\\nint main() {\\n    std::vector<int> nums;\\n    std::vector<int> uniqueNumbers;\\n    int nDuplicatesDeleted = 0;\\n    int nSize = 0;\\n    int temp = 0;\\n    std::cout << \"How many numbers would you insert: \";\\n    std::cin >> nSize;\\n\\n    std::cout << \"\\\\n---Filling the vector---\" << std::endl;\\n    for (int i = 0; i < nSize; i++) {\\n        std::cout << \"Insert number #\" << i + 1 << \": \";\\n        std::cin >> temp;\\n        nums.push_back(temp);\\n    }\\n\\n    std::cout << \"\\\\n---Input vector---\\\\n[ \";\\n    for (int e : nums) {\\n        std::cout << e << \", \";\\n    }\\n    std::cout << \"\\\\b\\\\b ]\" << std::endl;\\n\\n    // Sort input vector\\n    std::sort(nums.begin(), nums.end());\\n\\n    // Delete duplicates\\n    std::pair<std::vector<int>, int> result = removeDuplicates(nums);\\n    uniqueNumbers = result.first;\\n    nDuplicatesDeleted = result.second;\\n\\n    std::cout << \"\\\\n---Output vector---\\\\n[ \";\\n    for (int i = 0; i < uniqueNumbers.size(); i++) {\\n        std::cout << uniqueNumbers[i];\\n        if (i != uniqueNumbers.size() - 1) {\\n            std::cout << \", \";\\n        }\\n    }\\n    for (int i = 0; i < nDuplicatesDeleted; i++) {\\n        std::cout << \", _\";\\n    }\\n    std::cout << \" ]\" << std::endl;\\n\\n    return 0;\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "How smart you are!\\nBut have you seen the rule number 1 in Discussion section?\\nIt says \"Please don\\'t post any solutions in this discussion.\""
                    },
                    {
                        "username": "gcode_it",
                        "content": "my output is correct in IDLE. Yet error here\\n `def removeDuplicates(nums):\\n        \\n       d = {n:0 for n in nums}\\n        arr = [key for key in  d.keys()]\\n        count = len(arr)\\n        for i in range(len(arr), len(nums)):\\n            nums[i] = \\'_\\'\\n            arr.append(nums[i])\\n        \\n        return \\'{}, nums = {}\\'.format(count, arr)`\\n\\n"
                    },
                    {
                        "username": "vladd55k",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        k = 0\\n        alreadyExist = []\\n        for i in range(len(nums)):\\n            if nums[i] in alreadyExist:\\n                nums[i] = \\'*\\'\\n            else:\\n                alreadyExist.append(nums[i])\\n                k += 1\\n        for item in nums:\\n            if item == \\'*\\':\\n                nums.remove(item)     \\n        return k\\n\\n\\nWhy this thing runs into error? Why this test program say to me that 5 isn`t an integer?"
                    }
                ]
            },
            {
                "id": 1963833,
                "content": [
                    {
                        "username": "upendra_allagadda",
                        "content": "The example and description confuses you. According to the explanation, the assertion should be stopped by the length of k but it is not."
                    },
                    {
                        "username": "croegen",
                        "content": "I am confused with allmost all proposed solutions. I firstly solved the issue myself but got triggered by realy low score I get. \\nSo most of quickest solutions propose to iterate through array by checking the two elements next to each other.\\nLets say we have const arr = [1, 2, 3, 4, 4, 5, 6];\\nWe itarate to 4th element and then assign arr[4]=arr[5]\\n[1, 2, 3, 4, 5, 5, 6]\\nThen we assign arr[5]=arr[6]\\n[1, 2, 3, 4, 5, 6, 6]\\nOkay, great, how do you remove the last element? Non of solutions have the condition to remove those duplicates from the end, by copying the elements in array we still have the same length? What am I missing here?"
                    },
                    {
                        "username": "croegen",
                        "content": "[@svenyboyyt](/svenyboyyt) Yeah, I got it now, I totally missed the part about truncation of leftovers from array after all iterations before returning of the k."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "If you have n unique elements, the first n elements need to be unique. You don\\'t have to remove the duplicates because it\\'s not in the first n elements, but you can. And then you have to return the length."
                    },
                    {
                        "username": "croegen",
                        "content": "I get it, I missed the part about truncation of leftovers from array after all iterations."
                    },
                    {
                        "username": "RajuBudhoju",
                        "content": "can i use set?"
                    },
                    {
                        "username": "DenisKutlubaev",
                        "content": "This is one of the best coding problems with a beautiful concise solution. I solved it, but my solution was not this elegant."
                    },
                    {
                        "username": "jw52sc",
                        "content": "Spend almost 1 day to to get different pattern of the solution. But eventually, I believe the question got bug. Till now, I still not able to pass but I get exactly what i want based on my understanding. "
                    },
                    {
                        "username": "Darw",
                        "content": "What should I to return? An integer or an array?"
                    },
                    {
                        "username": "Grumpy_Tucker3",
                        "content": "integer obviously\\n"
                    },
                    {
                        "username": "Grumpy_Tucker3",
                        "content": "Its a medium level question\\n"
                    },
                    {
                        "username": "ivstefanov",
                        "content": "C++\\n\\n#include <algorithm>\\n#include <iostream>\\n#include <vector>\\n#include <set>\\n\\nstd::pair<std::vector<int>, int> removeDuplicates(const std::vector<int>& nums) {\\n    std::set<int> uniqueNumbers(nums.begin(), nums.end());\\n    std::vector<int> result(uniqueNumbers.begin(), uniqueNumbers.end());\\n    int numDuplicatesDeleted = nums.size() - result.size();\\n    return std::make_pair(result, numDuplicatesDeleted);\\n}\\n\\nint main() {\\n    std::vector<int> nums;\\n    std::vector<int> uniqueNumbers;\\n    int nDuplicatesDeleted = 0;\\n    int nSize = 0;\\n    int temp = 0;\\n    std::cout << \"How many numbers would you insert: \";\\n    std::cin >> nSize;\\n\\n    std::cout << \"\\\\n---Filling the vector---\" << std::endl;\\n    for (int i = 0; i < nSize; i++) {\\n        std::cout << \"Insert number #\" << i + 1 << \": \";\\n        std::cin >> temp;\\n        nums.push_back(temp);\\n    }\\n\\n    std::cout << \"\\\\n---Input vector---\\\\n[ \";\\n    for (int e : nums) {\\n        std::cout << e << \", \";\\n    }\\n    std::cout << \"\\\\b\\\\b ]\" << std::endl;\\n\\n    // Sort input vector\\n    std::sort(nums.begin(), nums.end());\\n\\n    // Delete duplicates\\n    std::pair<std::vector<int>, int> result = removeDuplicates(nums);\\n    uniqueNumbers = result.first;\\n    nDuplicatesDeleted = result.second;\\n\\n    std::cout << \"\\\\n---Output vector---\\\\n[ \";\\n    for (int i = 0; i < uniqueNumbers.size(); i++) {\\n        std::cout << uniqueNumbers[i];\\n        if (i != uniqueNumbers.size() - 1) {\\n            std::cout << \", \";\\n        }\\n    }\\n    for (int i = 0; i < nDuplicatesDeleted; i++) {\\n        std::cout << \", _\";\\n    }\\n    std::cout << \" ]\" << std::endl;\\n\\n    return 0;\\n}"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "How smart you are!\\nBut have you seen the rule number 1 in Discussion section?\\nIt says \"Please don\\'t post any solutions in this discussion.\""
                    },
                    {
                        "username": "gcode_it",
                        "content": "my output is correct in IDLE. Yet error here\\n `def removeDuplicates(nums):\\n        \\n       d = {n:0 for n in nums}\\n        arr = [key for key in  d.keys()]\\n        count = len(arr)\\n        for i in range(len(arr), len(nums)):\\n            nums[i] = \\'_\\'\\n            arr.append(nums[i])\\n        \\n        return \\'{}, nums = {}\\'.format(count, arr)`\\n\\n"
                    },
                    {
                        "username": "vladd55k",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        k = 0\\n        alreadyExist = []\\n        for i in range(len(nums)):\\n            if nums[i] in alreadyExist:\\n                nums[i] = \\'*\\'\\n            else:\\n                alreadyExist.append(nums[i])\\n                k += 1\\n        for item in nums:\\n            if item == \\'*\\':\\n                nums.remove(item)     \\n        return k\\n\\n\\nWhy this thing runs into error? Why this test program say to me that 5 isn`t an integer?"
                    }
                ]
            },
            {
                "id": 1962687,
                "content": [
                    {
                        "username": "tarunaf07",
                        "content": "can someone explain what is wrong with the my java code?\\nit runs fine on my local IDE\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        ArrayList<Integer> list=new ArrayList<>();\\n\\n    for(int i=0;i<nums.length;i++){\\n        for(int j=0;j<nums.length;j++){\\n            if(nums[j]>nums[i]){\\n                i=j-1;\\n                break;\\n            }\\n        }\\n        list.add(nums[i]);\\n    }\\n    return list.size();\\n    }\\n}"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "I think you are not modifying nums array, but appending it to some other list. The question wants you to manipulate the array in-place. And return the no. of modified elements."
                    },
                    {
                        "username": "SwiftSkilz",
                        "content": "They are not letting me return an array."
                    },
                    {
                        "username": "tuyendt6",
                        "content": "what is solution ,\\nhacker ? please fix it and band account them \\n\\nf=open(\"user.out\",\\'w\\')\\nfor l in stdin:\\n    nums = list(set(map(int,l.rstrip()[1:-1].split(\\',\\'))))\\n    for num in nums:\\n        while nums.count(num)>1:nums.remove(num)\\n    nums.sort()\\n    print(str(nums).replace(\\' \\',\\'\\'),file=f)\\nexit()"
                    },
                    {
                        "username": "imran26_96",
                        "content": "Hey Everyone nice to join a new journey with coding please give me some reference to learn and grow thank you :)"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "EXPLANATION: You need to modify the array in place and not assign it to a new array. Then you have to return its length "
                    },
                    {
                        "username": "adityadewhy",
                        "content": "absolute horrible description"
                    },
                    {
                        "username": "skreabin55",
                        "content": "class Solution:\n    def removeDuplicates(self, nums: list[int]) -> int:\n        result = []\n        for i in nums:\n            if i not in result:\n                result.append(i)\n\n        return len(result)\n\nwhy is it not working?"
                    },
                    {
                        "username": "Danylo16",
                        "content": "If im not mistaken, there is no need to change an array. You can just make counter. Am i right?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "No. You need to modify the array and return its length."
                    },
                    {
                        "username": "Shahidzbi4213",
                        "content": "what\\'s wrong with that approach?  \\n\\n `nums.toSet().size`\\n"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You need to modify it and then return the length "
                    },
                    {
                        "username": "PoojaSivakumar23",
                        "content": "int count=nums.length>0?1:0;\\n       \\n        int N=nums.length;\\n        for(int i=0;i<N-1;i++){\\n            if(nums[i]!=nums[i+1]){\\n                count++;\\n            }\\n        }\\n        return count; why this code doesnt work"
                    }
                ]
            },
            {
                "id": 1960216,
                "content": [
                    {
                        "username": "tarunaf07",
                        "content": "can someone explain what is wrong with the my java code?\\nit runs fine on my local IDE\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        ArrayList<Integer> list=new ArrayList<>();\\n\\n    for(int i=0;i<nums.length;i++){\\n        for(int j=0;j<nums.length;j++){\\n            if(nums[j]>nums[i]){\\n                i=j-1;\\n                break;\\n            }\\n        }\\n        list.add(nums[i]);\\n    }\\n    return list.size();\\n    }\\n}"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "I think you are not modifying nums array, but appending it to some other list. The question wants you to manipulate the array in-place. And return the no. of modified elements."
                    },
                    {
                        "username": "SwiftSkilz",
                        "content": "They are not letting me return an array."
                    },
                    {
                        "username": "tuyendt6",
                        "content": "what is solution ,\\nhacker ? please fix it and band account them \\n\\nf=open(\"user.out\",\\'w\\')\\nfor l in stdin:\\n    nums = list(set(map(int,l.rstrip()[1:-1].split(\\',\\'))))\\n    for num in nums:\\n        while nums.count(num)>1:nums.remove(num)\\n    nums.sort()\\n    print(str(nums).replace(\\' \\',\\'\\'),file=f)\\nexit()"
                    },
                    {
                        "username": "imran26_96",
                        "content": "Hey Everyone nice to join a new journey with coding please give me some reference to learn and grow thank you :)"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "EXPLANATION: You need to modify the array in place and not assign it to a new array. Then you have to return its length "
                    },
                    {
                        "username": "adityadewhy",
                        "content": "absolute horrible description"
                    },
                    {
                        "username": "skreabin55",
                        "content": "class Solution:\n    def removeDuplicates(self, nums: list[int]) -> int:\n        result = []\n        for i in nums:\n            if i not in result:\n                result.append(i)\n\n        return len(result)\n\nwhy is it not working?"
                    },
                    {
                        "username": "Danylo16",
                        "content": "If im not mistaken, there is no need to change an array. You can just make counter. Am i right?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "No. You need to modify the array and return its length."
                    },
                    {
                        "username": "Shahidzbi4213",
                        "content": "what\\'s wrong with that approach?  \\n\\n `nums.toSet().size`\\n"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You need to modify it and then return the length "
                    },
                    {
                        "username": "PoojaSivakumar23",
                        "content": "int count=nums.length>0?1:0;\\n       \\n        int N=nums.length;\\n        for(int i=0;i<N-1;i++){\\n            if(nums[i]!=nums[i+1]){\\n                count++;\\n            }\\n        }\\n        return count; why this code doesnt work"
                    }
                ]
            },
            {
                "id": 1959695,
                "content": [
                    {
                        "username": "tarunaf07",
                        "content": "can someone explain what is wrong with the my java code?\\nit runs fine on my local IDE\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        ArrayList<Integer> list=new ArrayList<>();\\n\\n    for(int i=0;i<nums.length;i++){\\n        for(int j=0;j<nums.length;j++){\\n            if(nums[j]>nums[i]){\\n                i=j-1;\\n                break;\\n            }\\n        }\\n        list.add(nums[i]);\\n    }\\n    return list.size();\\n    }\\n}"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "I think you are not modifying nums array, but appending it to some other list. The question wants you to manipulate the array in-place. And return the no. of modified elements."
                    },
                    {
                        "username": "SwiftSkilz",
                        "content": "They are not letting me return an array."
                    },
                    {
                        "username": "tuyendt6",
                        "content": "what is solution ,\\nhacker ? please fix it and band account them \\n\\nf=open(\"user.out\",\\'w\\')\\nfor l in stdin:\\n    nums = list(set(map(int,l.rstrip()[1:-1].split(\\',\\'))))\\n    for num in nums:\\n        while nums.count(num)>1:nums.remove(num)\\n    nums.sort()\\n    print(str(nums).replace(\\' \\',\\'\\'),file=f)\\nexit()"
                    },
                    {
                        "username": "imran26_96",
                        "content": "Hey Everyone nice to join a new journey with coding please give me some reference to learn and grow thank you :)"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "EXPLANATION: You need to modify the array in place and not assign it to a new array. Then you have to return its length "
                    },
                    {
                        "username": "adityadewhy",
                        "content": "absolute horrible description"
                    },
                    {
                        "username": "skreabin55",
                        "content": "class Solution:\n    def removeDuplicates(self, nums: list[int]) -> int:\n        result = []\n        for i in nums:\n            if i not in result:\n                result.append(i)\n\n        return len(result)\n\nwhy is it not working?"
                    },
                    {
                        "username": "Danylo16",
                        "content": "If im not mistaken, there is no need to change an array. You can just make counter. Am i right?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "No. You need to modify the array and return its length."
                    },
                    {
                        "username": "Shahidzbi4213",
                        "content": "what\\'s wrong with that approach?  \\n\\n `nums.toSet().size`\\n"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You need to modify it and then return the length "
                    },
                    {
                        "username": "PoojaSivakumar23",
                        "content": "int count=nums.length>0?1:0;\\n       \\n        int N=nums.length;\\n        for(int i=0;i<N-1;i++){\\n            if(nums[i]!=nums[i+1]){\\n                count++;\\n            }\\n        }\\n        return count; why this code doesnt work"
                    }
                ]
            },
            {
                "id": 1958957,
                "content": [
                    {
                        "username": "tarunaf07",
                        "content": "can someone explain what is wrong with the my java code?\\nit runs fine on my local IDE\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        ArrayList<Integer> list=new ArrayList<>();\\n\\n    for(int i=0;i<nums.length;i++){\\n        for(int j=0;j<nums.length;j++){\\n            if(nums[j]>nums[i]){\\n                i=j-1;\\n                break;\\n            }\\n        }\\n        list.add(nums[i]);\\n    }\\n    return list.size();\\n    }\\n}"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "I think you are not modifying nums array, but appending it to some other list. The question wants you to manipulate the array in-place. And return the no. of modified elements."
                    },
                    {
                        "username": "SwiftSkilz",
                        "content": "They are not letting me return an array."
                    },
                    {
                        "username": "tuyendt6",
                        "content": "what is solution ,\\nhacker ? please fix it and band account them \\n\\nf=open(\"user.out\",\\'w\\')\\nfor l in stdin:\\n    nums = list(set(map(int,l.rstrip()[1:-1].split(\\',\\'))))\\n    for num in nums:\\n        while nums.count(num)>1:nums.remove(num)\\n    nums.sort()\\n    print(str(nums).replace(\\' \\',\\'\\'),file=f)\\nexit()"
                    },
                    {
                        "username": "imran26_96",
                        "content": "Hey Everyone nice to join a new journey with coding please give me some reference to learn and grow thank you :)"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "EXPLANATION: You need to modify the array in place and not assign it to a new array. Then you have to return its length "
                    },
                    {
                        "username": "adityadewhy",
                        "content": "absolute horrible description"
                    },
                    {
                        "username": "skreabin55",
                        "content": "class Solution:\n    def removeDuplicates(self, nums: list[int]) -> int:\n        result = []\n        for i in nums:\n            if i not in result:\n                result.append(i)\n\n        return len(result)\n\nwhy is it not working?"
                    },
                    {
                        "username": "Danylo16",
                        "content": "If im not mistaken, there is no need to change an array. You can just make counter. Am i right?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "No. You need to modify the array and return its length."
                    },
                    {
                        "username": "Shahidzbi4213",
                        "content": "what\\'s wrong with that approach?  \\n\\n `nums.toSet().size`\\n"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You need to modify it and then return the length "
                    },
                    {
                        "username": "PoojaSivakumar23",
                        "content": "int count=nums.length>0?1:0;\\n       \\n        int N=nums.length;\\n        for(int i=0;i<N-1;i++){\\n            if(nums[i]!=nums[i+1]){\\n                count++;\\n            }\\n        }\\n        return count; why this code doesnt work"
                    }
                ]
            },
            {
                "id": 1958877,
                "content": [
                    {
                        "username": "tarunaf07",
                        "content": "can someone explain what is wrong with the my java code?\\nit runs fine on my local IDE\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        ArrayList<Integer> list=new ArrayList<>();\\n\\n    for(int i=0;i<nums.length;i++){\\n        for(int j=0;j<nums.length;j++){\\n            if(nums[j]>nums[i]){\\n                i=j-1;\\n                break;\\n            }\\n        }\\n        list.add(nums[i]);\\n    }\\n    return list.size();\\n    }\\n}"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "I think you are not modifying nums array, but appending it to some other list. The question wants you to manipulate the array in-place. And return the no. of modified elements."
                    },
                    {
                        "username": "SwiftSkilz",
                        "content": "They are not letting me return an array."
                    },
                    {
                        "username": "tuyendt6",
                        "content": "what is solution ,\\nhacker ? please fix it and band account them \\n\\nf=open(\"user.out\",\\'w\\')\\nfor l in stdin:\\n    nums = list(set(map(int,l.rstrip()[1:-1].split(\\',\\'))))\\n    for num in nums:\\n        while nums.count(num)>1:nums.remove(num)\\n    nums.sort()\\n    print(str(nums).replace(\\' \\',\\'\\'),file=f)\\nexit()"
                    },
                    {
                        "username": "imran26_96",
                        "content": "Hey Everyone nice to join a new journey with coding please give me some reference to learn and grow thank you :)"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "EXPLANATION: You need to modify the array in place and not assign it to a new array. Then you have to return its length "
                    },
                    {
                        "username": "adityadewhy",
                        "content": "absolute horrible description"
                    },
                    {
                        "username": "skreabin55",
                        "content": "class Solution:\n    def removeDuplicates(self, nums: list[int]) -> int:\n        result = []\n        for i in nums:\n            if i not in result:\n                result.append(i)\n\n        return len(result)\n\nwhy is it not working?"
                    },
                    {
                        "username": "Danylo16",
                        "content": "If im not mistaken, there is no need to change an array. You can just make counter. Am i right?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "No. You need to modify the array and return its length."
                    },
                    {
                        "username": "Shahidzbi4213",
                        "content": "what\\'s wrong with that approach?  \\n\\n `nums.toSet().size`\\n"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You need to modify it and then return the length "
                    },
                    {
                        "username": "PoojaSivakumar23",
                        "content": "int count=nums.length>0?1:0;\\n       \\n        int N=nums.length;\\n        for(int i=0;i<N-1;i++){\\n            if(nums[i]!=nums[i+1]){\\n                count++;\\n            }\\n        }\\n        return count; why this code doesnt work"
                    }
                ]
            },
            {
                "id": 1954555,
                "content": [
                    {
                        "username": "tarunaf07",
                        "content": "can someone explain what is wrong with the my java code?\\nit runs fine on my local IDE\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        ArrayList<Integer> list=new ArrayList<>();\\n\\n    for(int i=0;i<nums.length;i++){\\n        for(int j=0;j<nums.length;j++){\\n            if(nums[j]>nums[i]){\\n                i=j-1;\\n                break;\\n            }\\n        }\\n        list.add(nums[i]);\\n    }\\n    return list.size();\\n    }\\n}"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "I think you are not modifying nums array, but appending it to some other list. The question wants you to manipulate the array in-place. And return the no. of modified elements."
                    },
                    {
                        "username": "SwiftSkilz",
                        "content": "They are not letting me return an array."
                    },
                    {
                        "username": "tuyendt6",
                        "content": "what is solution ,\\nhacker ? please fix it and band account them \\n\\nf=open(\"user.out\",\\'w\\')\\nfor l in stdin:\\n    nums = list(set(map(int,l.rstrip()[1:-1].split(\\',\\'))))\\n    for num in nums:\\n        while nums.count(num)>1:nums.remove(num)\\n    nums.sort()\\n    print(str(nums).replace(\\' \\',\\'\\'),file=f)\\nexit()"
                    },
                    {
                        "username": "imran26_96",
                        "content": "Hey Everyone nice to join a new journey with coding please give me some reference to learn and grow thank you :)"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "EXPLANATION: You need to modify the array in place and not assign it to a new array. Then you have to return its length "
                    },
                    {
                        "username": "adityadewhy",
                        "content": "absolute horrible description"
                    },
                    {
                        "username": "skreabin55",
                        "content": "class Solution:\n    def removeDuplicates(self, nums: list[int]) -> int:\n        result = []\n        for i in nums:\n            if i not in result:\n                result.append(i)\n\n        return len(result)\n\nwhy is it not working?"
                    },
                    {
                        "username": "Danylo16",
                        "content": "If im not mistaken, there is no need to change an array. You can just make counter. Am i right?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "No. You need to modify the array and return its length."
                    },
                    {
                        "username": "Shahidzbi4213",
                        "content": "what\\'s wrong with that approach?  \\n\\n `nums.toSet().size`\\n"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You need to modify it and then return the length "
                    },
                    {
                        "username": "PoojaSivakumar23",
                        "content": "int count=nums.length>0?1:0;\\n       \\n        int N=nums.length;\\n        for(int i=0;i<N-1;i++){\\n            if(nums[i]!=nums[i+1]){\\n                count++;\\n            }\\n        }\\n        return count; why this code doesnt work"
                    }
                ]
            },
            {
                "id": 1953074,
                "content": [
                    {
                        "username": "tarunaf07",
                        "content": "can someone explain what is wrong with the my java code?\\nit runs fine on my local IDE\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        ArrayList<Integer> list=new ArrayList<>();\\n\\n    for(int i=0;i<nums.length;i++){\\n        for(int j=0;j<nums.length;j++){\\n            if(nums[j]>nums[i]){\\n                i=j-1;\\n                break;\\n            }\\n        }\\n        list.add(nums[i]);\\n    }\\n    return list.size();\\n    }\\n}"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "I think you are not modifying nums array, but appending it to some other list. The question wants you to manipulate the array in-place. And return the no. of modified elements."
                    },
                    {
                        "username": "SwiftSkilz",
                        "content": "They are not letting me return an array."
                    },
                    {
                        "username": "tuyendt6",
                        "content": "what is solution ,\\nhacker ? please fix it and band account them \\n\\nf=open(\"user.out\",\\'w\\')\\nfor l in stdin:\\n    nums = list(set(map(int,l.rstrip()[1:-1].split(\\',\\'))))\\n    for num in nums:\\n        while nums.count(num)>1:nums.remove(num)\\n    nums.sort()\\n    print(str(nums).replace(\\' \\',\\'\\'),file=f)\\nexit()"
                    },
                    {
                        "username": "imran26_96",
                        "content": "Hey Everyone nice to join a new journey with coding please give me some reference to learn and grow thank you :)"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "EXPLANATION: You need to modify the array in place and not assign it to a new array. Then you have to return its length "
                    },
                    {
                        "username": "adityadewhy",
                        "content": "absolute horrible description"
                    },
                    {
                        "username": "skreabin55",
                        "content": "class Solution:\n    def removeDuplicates(self, nums: list[int]) -> int:\n        result = []\n        for i in nums:\n            if i not in result:\n                result.append(i)\n\n        return len(result)\n\nwhy is it not working?"
                    },
                    {
                        "username": "Danylo16",
                        "content": "If im not mistaken, there is no need to change an array. You can just make counter. Am i right?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "No. You need to modify the array and return its length."
                    },
                    {
                        "username": "Shahidzbi4213",
                        "content": "what\\'s wrong with that approach?  \\n\\n `nums.toSet().size`\\n"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You need to modify it and then return the length "
                    },
                    {
                        "username": "PoojaSivakumar23",
                        "content": "int count=nums.length>0?1:0;\\n       \\n        int N=nums.length;\\n        for(int i=0;i<N-1;i++){\\n            if(nums[i]!=nums[i+1]){\\n                count++;\\n            }\\n        }\\n        return count; why this code doesnt work"
                    }
                ]
            },
            {
                "id": 1951826,
                "content": [
                    {
                        "username": "tarunaf07",
                        "content": "can someone explain what is wrong with the my java code?\\nit runs fine on my local IDE\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        ArrayList<Integer> list=new ArrayList<>();\\n\\n    for(int i=0;i<nums.length;i++){\\n        for(int j=0;j<nums.length;j++){\\n            if(nums[j]>nums[i]){\\n                i=j-1;\\n                break;\\n            }\\n        }\\n        list.add(nums[i]);\\n    }\\n    return list.size();\\n    }\\n}"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "I think you are not modifying nums array, but appending it to some other list. The question wants you to manipulate the array in-place. And return the no. of modified elements."
                    },
                    {
                        "username": "SwiftSkilz",
                        "content": "They are not letting me return an array."
                    },
                    {
                        "username": "tuyendt6",
                        "content": "what is solution ,\\nhacker ? please fix it and band account them \\n\\nf=open(\"user.out\",\\'w\\')\\nfor l in stdin:\\n    nums = list(set(map(int,l.rstrip()[1:-1].split(\\',\\'))))\\n    for num in nums:\\n        while nums.count(num)>1:nums.remove(num)\\n    nums.sort()\\n    print(str(nums).replace(\\' \\',\\'\\'),file=f)\\nexit()"
                    },
                    {
                        "username": "imran26_96",
                        "content": "Hey Everyone nice to join a new journey with coding please give me some reference to learn and grow thank you :)"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "EXPLANATION: You need to modify the array in place and not assign it to a new array. Then you have to return its length "
                    },
                    {
                        "username": "adityadewhy",
                        "content": "absolute horrible description"
                    },
                    {
                        "username": "skreabin55",
                        "content": "class Solution:\n    def removeDuplicates(self, nums: list[int]) -> int:\n        result = []\n        for i in nums:\n            if i not in result:\n                result.append(i)\n\n        return len(result)\n\nwhy is it not working?"
                    },
                    {
                        "username": "Danylo16",
                        "content": "If im not mistaken, there is no need to change an array. You can just make counter. Am i right?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "No. You need to modify the array and return its length."
                    },
                    {
                        "username": "Shahidzbi4213",
                        "content": "what\\'s wrong with that approach?  \\n\\n `nums.toSet().size`\\n"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You need to modify it and then return the length "
                    },
                    {
                        "username": "PoojaSivakumar23",
                        "content": "int count=nums.length>0?1:0;\\n       \\n        int N=nums.length;\\n        for(int i=0;i<N-1;i++){\\n            if(nums[i]!=nums[i+1]){\\n                count++;\\n            }\\n        }\\n        return count; why this code doesnt work"
                    }
                ]
            },
            {
                "id": 1951575,
                "content": [
                    {
                        "username": "tarunaf07",
                        "content": "can someone explain what is wrong with the my java code?\\nit runs fine on my local IDE\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        ArrayList<Integer> list=new ArrayList<>();\\n\\n    for(int i=0;i<nums.length;i++){\\n        for(int j=0;j<nums.length;j++){\\n            if(nums[j]>nums[i]){\\n                i=j-1;\\n                break;\\n            }\\n        }\\n        list.add(nums[i]);\\n    }\\n    return list.size();\\n    }\\n}"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "I think you are not modifying nums array, but appending it to some other list. The question wants you to manipulate the array in-place. And return the no. of modified elements."
                    },
                    {
                        "username": "SwiftSkilz",
                        "content": "They are not letting me return an array."
                    },
                    {
                        "username": "tuyendt6",
                        "content": "what is solution ,\\nhacker ? please fix it and band account them \\n\\nf=open(\"user.out\",\\'w\\')\\nfor l in stdin:\\n    nums = list(set(map(int,l.rstrip()[1:-1].split(\\',\\'))))\\n    for num in nums:\\n        while nums.count(num)>1:nums.remove(num)\\n    nums.sort()\\n    print(str(nums).replace(\\' \\',\\'\\'),file=f)\\nexit()"
                    },
                    {
                        "username": "imran26_96",
                        "content": "Hey Everyone nice to join a new journey with coding please give me some reference to learn and grow thank you :)"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "EXPLANATION: You need to modify the array in place and not assign it to a new array. Then you have to return its length "
                    },
                    {
                        "username": "adityadewhy",
                        "content": "absolute horrible description"
                    },
                    {
                        "username": "skreabin55",
                        "content": "class Solution:\n    def removeDuplicates(self, nums: list[int]) -> int:\n        result = []\n        for i in nums:\n            if i not in result:\n                result.append(i)\n\n        return len(result)\n\nwhy is it not working?"
                    },
                    {
                        "username": "Danylo16",
                        "content": "If im not mistaken, there is no need to change an array. You can just make counter. Am i right?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "No. You need to modify the array and return its length."
                    },
                    {
                        "username": "Shahidzbi4213",
                        "content": "what\\'s wrong with that approach?  \\n\\n `nums.toSet().size`\\n"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You need to modify it and then return the length "
                    },
                    {
                        "username": "PoojaSivakumar23",
                        "content": "int count=nums.length>0?1:0;\\n       \\n        int N=nums.length;\\n        for(int i=0;i<N-1;i++){\\n            if(nums[i]!=nums[i+1]){\\n                count++;\\n            }\\n        }\\n        return count; why this code doesnt work"
                    }
                ]
            },
            {
                "id": 1949986,
                "content": [
                    {
                        "username": "tarunaf07",
                        "content": "can someone explain what is wrong with the my java code?\\nit runs fine on my local IDE\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        ArrayList<Integer> list=new ArrayList<>();\\n\\n    for(int i=0;i<nums.length;i++){\\n        for(int j=0;j<nums.length;j++){\\n            if(nums[j]>nums[i]){\\n                i=j-1;\\n                break;\\n            }\\n        }\\n        list.add(nums[i]);\\n    }\\n    return list.size();\\n    }\\n}"
                    },
                    {
                        "username": "LokeshGl",
                        "content": "I think you are not modifying nums array, but appending it to some other list. The question wants you to manipulate the array in-place. And return the no. of modified elements."
                    },
                    {
                        "username": "SwiftSkilz",
                        "content": "They are not letting me return an array."
                    },
                    {
                        "username": "tuyendt6",
                        "content": "what is solution ,\\nhacker ? please fix it and band account them \\n\\nf=open(\"user.out\",\\'w\\')\\nfor l in stdin:\\n    nums = list(set(map(int,l.rstrip()[1:-1].split(\\',\\'))))\\n    for num in nums:\\n        while nums.count(num)>1:nums.remove(num)\\n    nums.sort()\\n    print(str(nums).replace(\\' \\',\\'\\'),file=f)\\nexit()"
                    },
                    {
                        "username": "imran26_96",
                        "content": "Hey Everyone nice to join a new journey with coding please give me some reference to learn and grow thank you :)"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "EXPLANATION: You need to modify the array in place and not assign it to a new array. Then you have to return its length "
                    },
                    {
                        "username": "adityadewhy",
                        "content": "absolute horrible description"
                    },
                    {
                        "username": "skreabin55",
                        "content": "class Solution:\n    def removeDuplicates(self, nums: list[int]) -> int:\n        result = []\n        for i in nums:\n            if i not in result:\n                result.append(i)\n\n        return len(result)\n\nwhy is it not working?"
                    },
                    {
                        "username": "Danylo16",
                        "content": "If im not mistaken, there is no need to change an array. You can just make counter. Am i right?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "No. You need to modify the array and return its length."
                    },
                    {
                        "username": "Shahidzbi4213",
                        "content": "what\\'s wrong with that approach?  \\n\\n `nums.toSet().size`\\n"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You need to modify it and then return the length "
                    },
                    {
                        "username": "PoojaSivakumar23",
                        "content": "int count=nums.length>0?1:0;\\n       \\n        int N=nums.length;\\n        for(int i=0;i<N-1;i++){\\n            if(nums[i]!=nums[i+1]){\\n                count++;\\n            }\\n        }\\n        return count; why this code doesnt work"
                    }
                ]
            },
            {
                "id": 1949819,
                "content": [
                    {
                        "username": "slin59587",
                        "content": "OMG! For the life of me that was hard to understand. They want you to modify the nums on the outside of def removeDuplicates(). Inside the removeDuplicates() they want a return of the size of the output. Input: nums = [0,0,1,1,1,2,2,3,3,4] modified to [0,1,2,3,4] make sure the nums on the outside changes. Then removeDuplicates() returns 5."
                    },
                    {
                        "username": "wayne_k",
                        "content": "Ideally, this would be a good solution\\n\\n `import java.util.*;\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {       \\n        int len = nums.length;     \\n        HashSet<Integer> set = new HashSet<>();\\n\\n        for (int i : nums){\\n            set.add(i);\\n        }\\n\\n        List<Integer> list = new ArrayList<>(set);\\n        nums = new int[set.size()];\\n\\n        for (int i = 0; i < set.size(); i++){\\n            nums[i] = list.get(i);\\n        }\\n        System.out.println(Arrays.toString(nums));\\n        int k = nums.length;\\n    \\n        return k;        \\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Ideally, this would be a good solution in Solutions section.\\nNot in Discussions."
                    },
                    {
                        "username": "Jerunnon",
                        "content": "Why can\\'t I just use Distinct in C# and return the length of the distincted array?\\n\\n `var distinct = nums.Distinct().ToArray(); `\\n`return distinct.Length;`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Because you have to modify it in place"
                    },
                    {
                        "username": "Ninjabdul",
                        "content": "trash ass problem"
                    },
                    {
                        "username": "dinesh1_07",
                        "content": "what is this error \nNameError: globalname 'solution' is not defined"
                    },
                    {
                        "username": "om155bhardwaj",
                        "content": "  int removeDuplicates(vector<int>& nums) {\\n        int k=0;\\n        set<int>st;\\n        for(auto it:nums){\\n            st.insert(it);\\n        }\\n        k=st.size();\\n        int i=0;\\n        for(auto it:st){\\n            nums[i]=it;\\n            i++;\\n        }\\n        return k;\\n    }\\n\\n\\ncan anyone explain that the function is returing an int that is k ,,then why that last \"for\\'\\' loop is used for , as it just traverses  the set "
                    },
                    {
                        "username": "ukase",
                        "content": "remove duplicate my ass mf "
                    },
                    {
                        "username": "Shubham_Tekawade",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int size1 = nums.size();\\n        //vector<int>store;\\n        int k;\\n        //int j=0;\\n        \\n       \\n        if ( size1 == 0 && size1 == 1)\\n        {\\n            return size1;\\n        }\\n\\n        for (int i=1;i<=size1;i++)\\n        {\\n            if (i!=size1)\\n            {\\n                if (nums[i-1] == nums[i])\\n                {\\n                    nums.erase(nums.begin()+(i-1));\\n                    i--;\\n                    size1--;\\n                } \\n            \\n            }\\n            \\n        }\\n        \\n        k=nums.size();\\n        return k;\\n\\n    }\\n};\\n\\nI am new to c++ ,and getting the below error, but not able to understand what exactly causing it.\\n\\n==21==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\\n==21==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you\\'re using ulimit -v\\n"
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "I\\'m getting a similar issue across all problem posts. I think this is just an issue on leetcodes end. Comment out your code and just do \"return 1\" to see if this still happens."
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "Hey, getting a weird issue where when I try to run my code, I get this error\n\n==23==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\n==23==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you're using ulimit -v\n\nThis occurs no matter what I have in the solution. For instance, I only have one line of code that says return 1 and this error shows up. This has been happening for other leetcode problems too."
                    },
                    {
                        "username": "ujjawal_OP",
                        "content": "there is some issue on leetcode as I have already solved and submitted it but right now if i am trying I am gettng same error ! so chill "
                    },
                    {
                        "username": "rikkyhermanto",
                        "content": "anytime I found a problem stating \"non-decreasing\" instead of using positive term like \"increasing/ascending\",,, I down-voted it."
                    }
                ]
            },
            {
                "id": 1949099,
                "content": [
                    {
                        "username": "slin59587",
                        "content": "OMG! For the life of me that was hard to understand. They want you to modify the nums on the outside of def removeDuplicates(). Inside the removeDuplicates() they want a return of the size of the output. Input: nums = [0,0,1,1,1,2,2,3,3,4] modified to [0,1,2,3,4] make sure the nums on the outside changes. Then removeDuplicates() returns 5."
                    },
                    {
                        "username": "wayne_k",
                        "content": "Ideally, this would be a good solution\\n\\n `import java.util.*;\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {       \\n        int len = nums.length;     \\n        HashSet<Integer> set = new HashSet<>();\\n\\n        for (int i : nums){\\n            set.add(i);\\n        }\\n\\n        List<Integer> list = new ArrayList<>(set);\\n        nums = new int[set.size()];\\n\\n        for (int i = 0; i < set.size(); i++){\\n            nums[i] = list.get(i);\\n        }\\n        System.out.println(Arrays.toString(nums));\\n        int k = nums.length;\\n    \\n        return k;        \\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Ideally, this would be a good solution in Solutions section.\\nNot in Discussions."
                    },
                    {
                        "username": "Jerunnon",
                        "content": "Why can\\'t I just use Distinct in C# and return the length of the distincted array?\\n\\n `var distinct = nums.Distinct().ToArray(); `\\n`return distinct.Length;`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Because you have to modify it in place"
                    },
                    {
                        "username": "Ninjabdul",
                        "content": "trash ass problem"
                    },
                    {
                        "username": "dinesh1_07",
                        "content": "what is this error \nNameError: globalname 'solution' is not defined"
                    },
                    {
                        "username": "om155bhardwaj",
                        "content": "  int removeDuplicates(vector<int>& nums) {\\n        int k=0;\\n        set<int>st;\\n        for(auto it:nums){\\n            st.insert(it);\\n        }\\n        k=st.size();\\n        int i=0;\\n        for(auto it:st){\\n            nums[i]=it;\\n            i++;\\n        }\\n        return k;\\n    }\\n\\n\\ncan anyone explain that the function is returing an int that is k ,,then why that last \"for\\'\\' loop is used for , as it just traverses  the set "
                    },
                    {
                        "username": "ukase",
                        "content": "remove duplicate my ass mf "
                    },
                    {
                        "username": "Shubham_Tekawade",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int size1 = nums.size();\\n        //vector<int>store;\\n        int k;\\n        //int j=0;\\n        \\n       \\n        if ( size1 == 0 && size1 == 1)\\n        {\\n            return size1;\\n        }\\n\\n        for (int i=1;i<=size1;i++)\\n        {\\n            if (i!=size1)\\n            {\\n                if (nums[i-1] == nums[i])\\n                {\\n                    nums.erase(nums.begin()+(i-1));\\n                    i--;\\n                    size1--;\\n                } \\n            \\n            }\\n            \\n        }\\n        \\n        k=nums.size();\\n        return k;\\n\\n    }\\n};\\n\\nI am new to c++ ,and getting the below error, but not able to understand what exactly causing it.\\n\\n==21==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\\n==21==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you\\'re using ulimit -v\\n"
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "I\\'m getting a similar issue across all problem posts. I think this is just an issue on leetcodes end. Comment out your code and just do \"return 1\" to see if this still happens."
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "Hey, getting a weird issue where when I try to run my code, I get this error\n\n==23==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\n==23==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you're using ulimit -v\n\nThis occurs no matter what I have in the solution. For instance, I only have one line of code that says return 1 and this error shows up. This has been happening for other leetcode problems too."
                    },
                    {
                        "username": "ujjawal_OP",
                        "content": "there is some issue on leetcode as I have already solved and submitted it but right now if i am trying I am gettng same error ! so chill "
                    },
                    {
                        "username": "rikkyhermanto",
                        "content": "anytime I found a problem stating \"non-decreasing\" instead of using positive term like \"increasing/ascending\",,, I down-voted it."
                    }
                ]
            },
            {
                "id": 1941413,
                "content": [
                    {
                        "username": "slin59587",
                        "content": "OMG! For the life of me that was hard to understand. They want you to modify the nums on the outside of def removeDuplicates(). Inside the removeDuplicates() they want a return of the size of the output. Input: nums = [0,0,1,1,1,2,2,3,3,4] modified to [0,1,2,3,4] make sure the nums on the outside changes. Then removeDuplicates() returns 5."
                    },
                    {
                        "username": "wayne_k",
                        "content": "Ideally, this would be a good solution\\n\\n `import java.util.*;\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {       \\n        int len = nums.length;     \\n        HashSet<Integer> set = new HashSet<>();\\n\\n        for (int i : nums){\\n            set.add(i);\\n        }\\n\\n        List<Integer> list = new ArrayList<>(set);\\n        nums = new int[set.size()];\\n\\n        for (int i = 0; i < set.size(); i++){\\n            nums[i] = list.get(i);\\n        }\\n        System.out.println(Arrays.toString(nums));\\n        int k = nums.length;\\n    \\n        return k;        \\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Ideally, this would be a good solution in Solutions section.\\nNot in Discussions."
                    },
                    {
                        "username": "Jerunnon",
                        "content": "Why can\\'t I just use Distinct in C# and return the length of the distincted array?\\n\\n `var distinct = nums.Distinct().ToArray(); `\\n`return distinct.Length;`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Because you have to modify it in place"
                    },
                    {
                        "username": "Ninjabdul",
                        "content": "trash ass problem"
                    },
                    {
                        "username": "dinesh1_07",
                        "content": "what is this error \nNameError: globalname 'solution' is not defined"
                    },
                    {
                        "username": "om155bhardwaj",
                        "content": "  int removeDuplicates(vector<int>& nums) {\\n        int k=0;\\n        set<int>st;\\n        for(auto it:nums){\\n            st.insert(it);\\n        }\\n        k=st.size();\\n        int i=0;\\n        for(auto it:st){\\n            nums[i]=it;\\n            i++;\\n        }\\n        return k;\\n    }\\n\\n\\ncan anyone explain that the function is returing an int that is k ,,then why that last \"for\\'\\' loop is used for , as it just traverses  the set "
                    },
                    {
                        "username": "ukase",
                        "content": "remove duplicate my ass mf "
                    },
                    {
                        "username": "Shubham_Tekawade",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int size1 = nums.size();\\n        //vector<int>store;\\n        int k;\\n        //int j=0;\\n        \\n       \\n        if ( size1 == 0 && size1 == 1)\\n        {\\n            return size1;\\n        }\\n\\n        for (int i=1;i<=size1;i++)\\n        {\\n            if (i!=size1)\\n            {\\n                if (nums[i-1] == nums[i])\\n                {\\n                    nums.erase(nums.begin()+(i-1));\\n                    i--;\\n                    size1--;\\n                } \\n            \\n            }\\n            \\n        }\\n        \\n        k=nums.size();\\n        return k;\\n\\n    }\\n};\\n\\nI am new to c++ ,and getting the below error, but not able to understand what exactly causing it.\\n\\n==21==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\\n==21==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you\\'re using ulimit -v\\n"
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "I\\'m getting a similar issue across all problem posts. I think this is just an issue on leetcodes end. Comment out your code and just do \"return 1\" to see if this still happens."
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "Hey, getting a weird issue where when I try to run my code, I get this error\n\n==23==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\n==23==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you're using ulimit -v\n\nThis occurs no matter what I have in the solution. For instance, I only have one line of code that says return 1 and this error shows up. This has been happening for other leetcode problems too."
                    },
                    {
                        "username": "ujjawal_OP",
                        "content": "there is some issue on leetcode as I have already solved and submitted it but right now if i am trying I am gettng same error ! so chill "
                    },
                    {
                        "username": "rikkyhermanto",
                        "content": "anytime I found a problem stating \"non-decreasing\" instead of using positive term like \"increasing/ascending\",,, I down-voted it."
                    }
                ]
            },
            {
                "id": 1938027,
                "content": [
                    {
                        "username": "slin59587",
                        "content": "OMG! For the life of me that was hard to understand. They want you to modify the nums on the outside of def removeDuplicates(). Inside the removeDuplicates() they want a return of the size of the output. Input: nums = [0,0,1,1,1,2,2,3,3,4] modified to [0,1,2,3,4] make sure the nums on the outside changes. Then removeDuplicates() returns 5."
                    },
                    {
                        "username": "wayne_k",
                        "content": "Ideally, this would be a good solution\\n\\n `import java.util.*;\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {       \\n        int len = nums.length;     \\n        HashSet<Integer> set = new HashSet<>();\\n\\n        for (int i : nums){\\n            set.add(i);\\n        }\\n\\n        List<Integer> list = new ArrayList<>(set);\\n        nums = new int[set.size()];\\n\\n        for (int i = 0; i < set.size(); i++){\\n            nums[i] = list.get(i);\\n        }\\n        System.out.println(Arrays.toString(nums));\\n        int k = nums.length;\\n    \\n        return k;        \\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Ideally, this would be a good solution in Solutions section.\\nNot in Discussions."
                    },
                    {
                        "username": "Jerunnon",
                        "content": "Why can\\'t I just use Distinct in C# and return the length of the distincted array?\\n\\n `var distinct = nums.Distinct().ToArray(); `\\n`return distinct.Length;`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Because you have to modify it in place"
                    },
                    {
                        "username": "Ninjabdul",
                        "content": "trash ass problem"
                    },
                    {
                        "username": "dinesh1_07",
                        "content": "what is this error \nNameError: globalname 'solution' is not defined"
                    },
                    {
                        "username": "om155bhardwaj",
                        "content": "  int removeDuplicates(vector<int>& nums) {\\n        int k=0;\\n        set<int>st;\\n        for(auto it:nums){\\n            st.insert(it);\\n        }\\n        k=st.size();\\n        int i=0;\\n        for(auto it:st){\\n            nums[i]=it;\\n            i++;\\n        }\\n        return k;\\n    }\\n\\n\\ncan anyone explain that the function is returing an int that is k ,,then why that last \"for\\'\\' loop is used for , as it just traverses  the set "
                    },
                    {
                        "username": "ukase",
                        "content": "remove duplicate my ass mf "
                    },
                    {
                        "username": "Shubham_Tekawade",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int size1 = nums.size();\\n        //vector<int>store;\\n        int k;\\n        //int j=0;\\n        \\n       \\n        if ( size1 == 0 && size1 == 1)\\n        {\\n            return size1;\\n        }\\n\\n        for (int i=1;i<=size1;i++)\\n        {\\n            if (i!=size1)\\n            {\\n                if (nums[i-1] == nums[i])\\n                {\\n                    nums.erase(nums.begin()+(i-1));\\n                    i--;\\n                    size1--;\\n                } \\n            \\n            }\\n            \\n        }\\n        \\n        k=nums.size();\\n        return k;\\n\\n    }\\n};\\n\\nI am new to c++ ,and getting the below error, but not able to understand what exactly causing it.\\n\\n==21==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\\n==21==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you\\'re using ulimit -v\\n"
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "I\\'m getting a similar issue across all problem posts. I think this is just an issue on leetcodes end. Comment out your code and just do \"return 1\" to see if this still happens."
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "Hey, getting a weird issue where when I try to run my code, I get this error\n\n==23==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\n==23==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you're using ulimit -v\n\nThis occurs no matter what I have in the solution. For instance, I only have one line of code that says return 1 and this error shows up. This has been happening for other leetcode problems too."
                    },
                    {
                        "username": "ujjawal_OP",
                        "content": "there is some issue on leetcode as I have already solved and submitted it but right now if i am trying I am gettng same error ! so chill "
                    },
                    {
                        "username": "rikkyhermanto",
                        "content": "anytime I found a problem stating \"non-decreasing\" instead of using positive term like \"increasing/ascending\",,, I down-voted it."
                    }
                ]
            },
            {
                "id": 1934916,
                "content": [
                    {
                        "username": "slin59587",
                        "content": "OMG! For the life of me that was hard to understand. They want you to modify the nums on the outside of def removeDuplicates(). Inside the removeDuplicates() they want a return of the size of the output. Input: nums = [0,0,1,1,1,2,2,3,3,4] modified to [0,1,2,3,4] make sure the nums on the outside changes. Then removeDuplicates() returns 5."
                    },
                    {
                        "username": "wayne_k",
                        "content": "Ideally, this would be a good solution\\n\\n `import java.util.*;\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {       \\n        int len = nums.length;     \\n        HashSet<Integer> set = new HashSet<>();\\n\\n        for (int i : nums){\\n            set.add(i);\\n        }\\n\\n        List<Integer> list = new ArrayList<>(set);\\n        nums = new int[set.size()];\\n\\n        for (int i = 0; i < set.size(); i++){\\n            nums[i] = list.get(i);\\n        }\\n        System.out.println(Arrays.toString(nums));\\n        int k = nums.length;\\n    \\n        return k;        \\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Ideally, this would be a good solution in Solutions section.\\nNot in Discussions."
                    },
                    {
                        "username": "Jerunnon",
                        "content": "Why can\\'t I just use Distinct in C# and return the length of the distincted array?\\n\\n `var distinct = nums.Distinct().ToArray(); `\\n`return distinct.Length;`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Because you have to modify it in place"
                    },
                    {
                        "username": "Ninjabdul",
                        "content": "trash ass problem"
                    },
                    {
                        "username": "dinesh1_07",
                        "content": "what is this error \nNameError: globalname 'solution' is not defined"
                    },
                    {
                        "username": "om155bhardwaj",
                        "content": "  int removeDuplicates(vector<int>& nums) {\\n        int k=0;\\n        set<int>st;\\n        for(auto it:nums){\\n            st.insert(it);\\n        }\\n        k=st.size();\\n        int i=0;\\n        for(auto it:st){\\n            nums[i]=it;\\n            i++;\\n        }\\n        return k;\\n    }\\n\\n\\ncan anyone explain that the function is returing an int that is k ,,then why that last \"for\\'\\' loop is used for , as it just traverses  the set "
                    },
                    {
                        "username": "ukase",
                        "content": "remove duplicate my ass mf "
                    },
                    {
                        "username": "Shubham_Tekawade",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int size1 = nums.size();\\n        //vector<int>store;\\n        int k;\\n        //int j=0;\\n        \\n       \\n        if ( size1 == 0 && size1 == 1)\\n        {\\n            return size1;\\n        }\\n\\n        for (int i=1;i<=size1;i++)\\n        {\\n            if (i!=size1)\\n            {\\n                if (nums[i-1] == nums[i])\\n                {\\n                    nums.erase(nums.begin()+(i-1));\\n                    i--;\\n                    size1--;\\n                } \\n            \\n            }\\n            \\n        }\\n        \\n        k=nums.size();\\n        return k;\\n\\n    }\\n};\\n\\nI am new to c++ ,and getting the below error, but not able to understand what exactly causing it.\\n\\n==21==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\\n==21==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you\\'re using ulimit -v\\n"
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "I\\'m getting a similar issue across all problem posts. I think this is just an issue on leetcodes end. Comment out your code and just do \"return 1\" to see if this still happens."
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "Hey, getting a weird issue where when I try to run my code, I get this error\n\n==23==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\n==23==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you're using ulimit -v\n\nThis occurs no matter what I have in the solution. For instance, I only have one line of code that says return 1 and this error shows up. This has been happening for other leetcode problems too."
                    },
                    {
                        "username": "ujjawal_OP",
                        "content": "there is some issue on leetcode as I have already solved and submitted it but right now if i am trying I am gettng same error ! so chill "
                    },
                    {
                        "username": "rikkyhermanto",
                        "content": "anytime I found a problem stating \"non-decreasing\" instead of using positive term like \"increasing/ascending\",,, I down-voted it."
                    }
                ]
            },
            {
                "id": 1933565,
                "content": [
                    {
                        "username": "slin59587",
                        "content": "OMG! For the life of me that was hard to understand. They want you to modify the nums on the outside of def removeDuplicates(). Inside the removeDuplicates() they want a return of the size of the output. Input: nums = [0,0,1,1,1,2,2,3,3,4] modified to [0,1,2,3,4] make sure the nums on the outside changes. Then removeDuplicates() returns 5."
                    },
                    {
                        "username": "wayne_k",
                        "content": "Ideally, this would be a good solution\\n\\n `import java.util.*;\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {       \\n        int len = nums.length;     \\n        HashSet<Integer> set = new HashSet<>();\\n\\n        for (int i : nums){\\n            set.add(i);\\n        }\\n\\n        List<Integer> list = new ArrayList<>(set);\\n        nums = new int[set.size()];\\n\\n        for (int i = 0; i < set.size(); i++){\\n            nums[i] = list.get(i);\\n        }\\n        System.out.println(Arrays.toString(nums));\\n        int k = nums.length;\\n    \\n        return k;        \\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Ideally, this would be a good solution in Solutions section.\\nNot in Discussions."
                    },
                    {
                        "username": "Jerunnon",
                        "content": "Why can\\'t I just use Distinct in C# and return the length of the distincted array?\\n\\n `var distinct = nums.Distinct().ToArray(); `\\n`return distinct.Length;`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Because you have to modify it in place"
                    },
                    {
                        "username": "Ninjabdul",
                        "content": "trash ass problem"
                    },
                    {
                        "username": "dinesh1_07",
                        "content": "what is this error \nNameError: globalname 'solution' is not defined"
                    },
                    {
                        "username": "om155bhardwaj",
                        "content": "  int removeDuplicates(vector<int>& nums) {\\n        int k=0;\\n        set<int>st;\\n        for(auto it:nums){\\n            st.insert(it);\\n        }\\n        k=st.size();\\n        int i=0;\\n        for(auto it:st){\\n            nums[i]=it;\\n            i++;\\n        }\\n        return k;\\n    }\\n\\n\\ncan anyone explain that the function is returing an int that is k ,,then why that last \"for\\'\\' loop is used for , as it just traverses  the set "
                    },
                    {
                        "username": "ukase",
                        "content": "remove duplicate my ass mf "
                    },
                    {
                        "username": "Shubham_Tekawade",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int size1 = nums.size();\\n        //vector<int>store;\\n        int k;\\n        //int j=0;\\n        \\n       \\n        if ( size1 == 0 && size1 == 1)\\n        {\\n            return size1;\\n        }\\n\\n        for (int i=1;i<=size1;i++)\\n        {\\n            if (i!=size1)\\n            {\\n                if (nums[i-1] == nums[i])\\n                {\\n                    nums.erase(nums.begin()+(i-1));\\n                    i--;\\n                    size1--;\\n                } \\n            \\n            }\\n            \\n        }\\n        \\n        k=nums.size();\\n        return k;\\n\\n    }\\n};\\n\\nI am new to c++ ,and getting the below error, but not able to understand what exactly causing it.\\n\\n==21==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\\n==21==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you\\'re using ulimit -v\\n"
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "I\\'m getting a similar issue across all problem posts. I think this is just an issue on leetcodes end. Comment out your code and just do \"return 1\" to see if this still happens."
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "Hey, getting a weird issue where when I try to run my code, I get this error\n\n==23==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\n==23==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you're using ulimit -v\n\nThis occurs no matter what I have in the solution. For instance, I only have one line of code that says return 1 and this error shows up. This has been happening for other leetcode problems too."
                    },
                    {
                        "username": "ujjawal_OP",
                        "content": "there is some issue on leetcode as I have already solved and submitted it but right now if i am trying I am gettng same error ! so chill "
                    },
                    {
                        "username": "rikkyhermanto",
                        "content": "anytime I found a problem stating \"non-decreasing\" instead of using positive term like \"increasing/ascending\",,, I down-voted it."
                    }
                ]
            },
            {
                "id": 1931947,
                "content": [
                    {
                        "username": "slin59587",
                        "content": "OMG! For the life of me that was hard to understand. They want you to modify the nums on the outside of def removeDuplicates(). Inside the removeDuplicates() they want a return of the size of the output. Input: nums = [0,0,1,1,1,2,2,3,3,4] modified to [0,1,2,3,4] make sure the nums on the outside changes. Then removeDuplicates() returns 5."
                    },
                    {
                        "username": "wayne_k",
                        "content": "Ideally, this would be a good solution\\n\\n `import java.util.*;\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {       \\n        int len = nums.length;     \\n        HashSet<Integer> set = new HashSet<>();\\n\\n        for (int i : nums){\\n            set.add(i);\\n        }\\n\\n        List<Integer> list = new ArrayList<>(set);\\n        nums = new int[set.size()];\\n\\n        for (int i = 0; i < set.size(); i++){\\n            nums[i] = list.get(i);\\n        }\\n        System.out.println(Arrays.toString(nums));\\n        int k = nums.length;\\n    \\n        return k;        \\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Ideally, this would be a good solution in Solutions section.\\nNot in Discussions."
                    },
                    {
                        "username": "Jerunnon",
                        "content": "Why can\\'t I just use Distinct in C# and return the length of the distincted array?\\n\\n `var distinct = nums.Distinct().ToArray(); `\\n`return distinct.Length;`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Because you have to modify it in place"
                    },
                    {
                        "username": "Ninjabdul",
                        "content": "trash ass problem"
                    },
                    {
                        "username": "dinesh1_07",
                        "content": "what is this error \nNameError: globalname 'solution' is not defined"
                    },
                    {
                        "username": "om155bhardwaj",
                        "content": "  int removeDuplicates(vector<int>& nums) {\\n        int k=0;\\n        set<int>st;\\n        for(auto it:nums){\\n            st.insert(it);\\n        }\\n        k=st.size();\\n        int i=0;\\n        for(auto it:st){\\n            nums[i]=it;\\n            i++;\\n        }\\n        return k;\\n    }\\n\\n\\ncan anyone explain that the function is returing an int that is k ,,then why that last \"for\\'\\' loop is used for , as it just traverses  the set "
                    },
                    {
                        "username": "ukase",
                        "content": "remove duplicate my ass mf "
                    },
                    {
                        "username": "Shubham_Tekawade",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int size1 = nums.size();\\n        //vector<int>store;\\n        int k;\\n        //int j=0;\\n        \\n       \\n        if ( size1 == 0 && size1 == 1)\\n        {\\n            return size1;\\n        }\\n\\n        for (int i=1;i<=size1;i++)\\n        {\\n            if (i!=size1)\\n            {\\n                if (nums[i-1] == nums[i])\\n                {\\n                    nums.erase(nums.begin()+(i-1));\\n                    i--;\\n                    size1--;\\n                } \\n            \\n            }\\n            \\n        }\\n        \\n        k=nums.size();\\n        return k;\\n\\n    }\\n};\\n\\nI am new to c++ ,and getting the below error, but not able to understand what exactly causing it.\\n\\n==21==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\\n==21==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you\\'re using ulimit -v\\n"
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "I\\'m getting a similar issue across all problem posts. I think this is just an issue on leetcodes end. Comment out your code and just do \"return 1\" to see if this still happens."
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "Hey, getting a weird issue where when I try to run my code, I get this error\n\n==23==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\n==23==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you're using ulimit -v\n\nThis occurs no matter what I have in the solution. For instance, I only have one line of code that says return 1 and this error shows up. This has been happening for other leetcode problems too."
                    },
                    {
                        "username": "ujjawal_OP",
                        "content": "there is some issue on leetcode as I have already solved and submitted it but right now if i am trying I am gettng same error ! so chill "
                    },
                    {
                        "username": "rikkyhermanto",
                        "content": "anytime I found a problem stating \"non-decreasing\" instead of using positive term like \"increasing/ascending\",,, I down-voted it."
                    }
                ]
            },
            {
                "id": 1930897,
                "content": [
                    {
                        "username": "slin59587",
                        "content": "OMG! For the life of me that was hard to understand. They want you to modify the nums on the outside of def removeDuplicates(). Inside the removeDuplicates() they want a return of the size of the output. Input: nums = [0,0,1,1,1,2,2,3,3,4] modified to [0,1,2,3,4] make sure the nums on the outside changes. Then removeDuplicates() returns 5."
                    },
                    {
                        "username": "wayne_k",
                        "content": "Ideally, this would be a good solution\\n\\n `import java.util.*;\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {       \\n        int len = nums.length;     \\n        HashSet<Integer> set = new HashSet<>();\\n\\n        for (int i : nums){\\n            set.add(i);\\n        }\\n\\n        List<Integer> list = new ArrayList<>(set);\\n        nums = new int[set.size()];\\n\\n        for (int i = 0; i < set.size(); i++){\\n            nums[i] = list.get(i);\\n        }\\n        System.out.println(Arrays.toString(nums));\\n        int k = nums.length;\\n    \\n        return k;        \\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Ideally, this would be a good solution in Solutions section.\\nNot in Discussions."
                    },
                    {
                        "username": "Jerunnon",
                        "content": "Why can\\'t I just use Distinct in C# and return the length of the distincted array?\\n\\n `var distinct = nums.Distinct().ToArray(); `\\n`return distinct.Length;`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Because you have to modify it in place"
                    },
                    {
                        "username": "Ninjabdul",
                        "content": "trash ass problem"
                    },
                    {
                        "username": "dinesh1_07",
                        "content": "what is this error \nNameError: globalname 'solution' is not defined"
                    },
                    {
                        "username": "om155bhardwaj",
                        "content": "  int removeDuplicates(vector<int>& nums) {\\n        int k=0;\\n        set<int>st;\\n        for(auto it:nums){\\n            st.insert(it);\\n        }\\n        k=st.size();\\n        int i=0;\\n        for(auto it:st){\\n            nums[i]=it;\\n            i++;\\n        }\\n        return k;\\n    }\\n\\n\\ncan anyone explain that the function is returing an int that is k ,,then why that last \"for\\'\\' loop is used for , as it just traverses  the set "
                    },
                    {
                        "username": "ukase",
                        "content": "remove duplicate my ass mf "
                    },
                    {
                        "username": "Shubham_Tekawade",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int size1 = nums.size();\\n        //vector<int>store;\\n        int k;\\n        //int j=0;\\n        \\n       \\n        if ( size1 == 0 && size1 == 1)\\n        {\\n            return size1;\\n        }\\n\\n        for (int i=1;i<=size1;i++)\\n        {\\n            if (i!=size1)\\n            {\\n                if (nums[i-1] == nums[i])\\n                {\\n                    nums.erase(nums.begin()+(i-1));\\n                    i--;\\n                    size1--;\\n                } \\n            \\n            }\\n            \\n        }\\n        \\n        k=nums.size();\\n        return k;\\n\\n    }\\n};\\n\\nI am new to c++ ,and getting the below error, but not able to understand what exactly causing it.\\n\\n==21==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\\n==21==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you\\'re using ulimit -v\\n"
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "I\\'m getting a similar issue across all problem posts. I think this is just an issue on leetcodes end. Comment out your code and just do \"return 1\" to see if this still happens."
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "Hey, getting a weird issue where when I try to run my code, I get this error\n\n==23==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\n==23==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you're using ulimit -v\n\nThis occurs no matter what I have in the solution. For instance, I only have one line of code that says return 1 and this error shows up. This has been happening for other leetcode problems too."
                    },
                    {
                        "username": "ujjawal_OP",
                        "content": "there is some issue on leetcode as I have already solved and submitted it but right now if i am trying I am gettng same error ! so chill "
                    },
                    {
                        "username": "rikkyhermanto",
                        "content": "anytime I found a problem stating \"non-decreasing\" instead of using positive term like \"increasing/ascending\",,, I down-voted it."
                    }
                ]
            },
            {
                "id": 1930872,
                "content": [
                    {
                        "username": "slin59587",
                        "content": "OMG! For the life of me that was hard to understand. They want you to modify the nums on the outside of def removeDuplicates(). Inside the removeDuplicates() they want a return of the size of the output. Input: nums = [0,0,1,1,1,2,2,3,3,4] modified to [0,1,2,3,4] make sure the nums on the outside changes. Then removeDuplicates() returns 5."
                    },
                    {
                        "username": "wayne_k",
                        "content": "Ideally, this would be a good solution\\n\\n `import java.util.*;\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {       \\n        int len = nums.length;     \\n        HashSet<Integer> set = new HashSet<>();\\n\\n        for (int i : nums){\\n            set.add(i);\\n        }\\n\\n        List<Integer> list = new ArrayList<>(set);\\n        nums = new int[set.size()];\\n\\n        for (int i = 0; i < set.size(); i++){\\n            nums[i] = list.get(i);\\n        }\\n        System.out.println(Arrays.toString(nums));\\n        int k = nums.length;\\n    \\n        return k;        \\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Ideally, this would be a good solution in Solutions section.\\nNot in Discussions."
                    },
                    {
                        "username": "Jerunnon",
                        "content": "Why can\\'t I just use Distinct in C# and return the length of the distincted array?\\n\\n `var distinct = nums.Distinct().ToArray(); `\\n`return distinct.Length;`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Because you have to modify it in place"
                    },
                    {
                        "username": "Ninjabdul",
                        "content": "trash ass problem"
                    },
                    {
                        "username": "dinesh1_07",
                        "content": "what is this error \nNameError: globalname 'solution' is not defined"
                    },
                    {
                        "username": "om155bhardwaj",
                        "content": "  int removeDuplicates(vector<int>& nums) {\\n        int k=0;\\n        set<int>st;\\n        for(auto it:nums){\\n            st.insert(it);\\n        }\\n        k=st.size();\\n        int i=0;\\n        for(auto it:st){\\n            nums[i]=it;\\n            i++;\\n        }\\n        return k;\\n    }\\n\\n\\ncan anyone explain that the function is returing an int that is k ,,then why that last \"for\\'\\' loop is used for , as it just traverses  the set "
                    },
                    {
                        "username": "ukase",
                        "content": "remove duplicate my ass mf "
                    },
                    {
                        "username": "Shubham_Tekawade",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int size1 = nums.size();\\n        //vector<int>store;\\n        int k;\\n        //int j=0;\\n        \\n       \\n        if ( size1 == 0 && size1 == 1)\\n        {\\n            return size1;\\n        }\\n\\n        for (int i=1;i<=size1;i++)\\n        {\\n            if (i!=size1)\\n            {\\n                if (nums[i-1] == nums[i])\\n                {\\n                    nums.erase(nums.begin()+(i-1));\\n                    i--;\\n                    size1--;\\n                } \\n            \\n            }\\n            \\n        }\\n        \\n        k=nums.size();\\n        return k;\\n\\n    }\\n};\\n\\nI am new to c++ ,and getting the below error, but not able to understand what exactly causing it.\\n\\n==21==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\\n==21==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you\\'re using ulimit -v\\n"
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "I\\'m getting a similar issue across all problem posts. I think this is just an issue on leetcodes end. Comment out your code and just do \"return 1\" to see if this still happens."
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "Hey, getting a weird issue where when I try to run my code, I get this error\n\n==23==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\n==23==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you're using ulimit -v\n\nThis occurs no matter what I have in the solution. For instance, I only have one line of code that says return 1 and this error shows up. This has been happening for other leetcode problems too."
                    },
                    {
                        "username": "ujjawal_OP",
                        "content": "there is some issue on leetcode as I have already solved and submitted it but right now if i am trying I am gettng same error ! so chill "
                    },
                    {
                        "username": "rikkyhermanto",
                        "content": "anytime I found a problem stating \"non-decreasing\" instead of using positive term like \"increasing/ascending\",,, I down-voted it."
                    }
                ]
            },
            {
                "id": 1930077,
                "content": [
                    {
                        "username": "slin59587",
                        "content": "OMG! For the life of me that was hard to understand. They want you to modify the nums on the outside of def removeDuplicates(). Inside the removeDuplicates() they want a return of the size of the output. Input: nums = [0,0,1,1,1,2,2,3,3,4] modified to [0,1,2,3,4] make sure the nums on the outside changes. Then removeDuplicates() returns 5."
                    },
                    {
                        "username": "wayne_k",
                        "content": "Ideally, this would be a good solution\\n\\n `import java.util.*;\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {       \\n        int len = nums.length;     \\n        HashSet<Integer> set = new HashSet<>();\\n\\n        for (int i : nums){\\n            set.add(i);\\n        }\\n\\n        List<Integer> list = new ArrayList<>(set);\\n        nums = new int[set.size()];\\n\\n        for (int i = 0; i < set.size(); i++){\\n            nums[i] = list.get(i);\\n        }\\n        System.out.println(Arrays.toString(nums));\\n        int k = nums.length;\\n    \\n        return k;        \\n    }\\n}`"
                    },
                    {
                        "username": "georgezakharov",
                        "content": "Ideally, this would be a good solution in Solutions section.\\nNot in Discussions."
                    },
                    {
                        "username": "Jerunnon",
                        "content": "Why can\\'t I just use Distinct in C# and return the length of the distincted array?\\n\\n `var distinct = nums.Distinct().ToArray(); `\\n`return distinct.Length;`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Because you have to modify it in place"
                    },
                    {
                        "username": "Ninjabdul",
                        "content": "trash ass problem"
                    },
                    {
                        "username": "dinesh1_07",
                        "content": "what is this error \nNameError: globalname 'solution' is not defined"
                    },
                    {
                        "username": "om155bhardwaj",
                        "content": "  int removeDuplicates(vector<int>& nums) {\\n        int k=0;\\n        set<int>st;\\n        for(auto it:nums){\\n            st.insert(it);\\n        }\\n        k=st.size();\\n        int i=0;\\n        for(auto it:st){\\n            nums[i]=it;\\n            i++;\\n        }\\n        return k;\\n    }\\n\\n\\ncan anyone explain that the function is returing an int that is k ,,then why that last \"for\\'\\' loop is used for , as it just traverses  the set "
                    },
                    {
                        "username": "ukase",
                        "content": "remove duplicate my ass mf "
                    },
                    {
                        "username": "Shubham_Tekawade",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int size1 = nums.size();\\n        //vector<int>store;\\n        int k;\\n        //int j=0;\\n        \\n       \\n        if ( size1 == 0 && size1 == 1)\\n        {\\n            return size1;\\n        }\\n\\n        for (int i=1;i<=size1;i++)\\n        {\\n            if (i!=size1)\\n            {\\n                if (nums[i-1] == nums[i])\\n                {\\n                    nums.erase(nums.begin()+(i-1));\\n                    i--;\\n                    size1--;\\n                } \\n            \\n            }\\n            \\n        }\\n        \\n        k=nums.size();\\n        return k;\\n\\n    }\\n};\\n\\nI am new to c++ ,and getting the below error, but not able to understand what exactly causing it.\\n\\n==21==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\\n==21==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you\\'re using ulimit -v\\n"
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "I\\'m getting a similar issue across all problem posts. I think this is just an issue on leetcodes end. Comment out your code and just do \"return 1\" to see if this still happens."
                    },
                    {
                        "username": "MaxwellVoorhes",
                        "content": "Hey, getting a weird issue where when I try to run my code, I get this error\n\n==23==ERROR: AddressSanitizer failed to allocate 0xdfff0001000 (15392894357504) bytes at address 2008fff7000 (errno: 12)\n==23==ReserveShadowMemoryRange failed while trying to map 0xdfff0001000 bytes. Perhaps you're using ulimit -v\n\nThis occurs no matter what I have in the solution. For instance, I only have one line of code that says return 1 and this error shows up. This has been happening for other leetcode problems too."
                    },
                    {
                        "username": "ujjawal_OP",
                        "content": "there is some issue on leetcode as I have already solved and submitted it but right now if i am trying I am gettng same error ! so chill "
                    },
                    {
                        "username": "rikkyhermanto",
                        "content": "anytime I found a problem stating \"non-decreasing\" instead of using positive term like \"increasing/ascending\",,, I down-voted it."
                    }
                ]
            },
            {
                "id": 1929701,
                "content": [
                    {
                        "username": "user5397PR",
                        "content": "`class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        dic = {}\\n        for i in nums:\\n            if i in dic:\\n                pass\\n            else:\\n                dic[i]=i\\n        nums = list(dic.keys())\\n        return len(dic)`\\n\\nI am using the above code which give incorrect Output in Leetcode for [nums] but it works fine in VS code.  Any idea why this issue?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "1. You have to mutate it.\\n2. I don\\'t know where you got the idea to use a class, it\\'s Python not Java. Although it might work idk, but it\\'s very unnecessary."
                    },
                    {
                        "username": "aditix2008",
                        "content": "There\\'s no such indication that we can\\'t use sets for the same, so can we use LinkedHashSet to solve this? Do we have to use a two pointer approach? "
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to modify in place so unlikely."
                    },
                    {
                        "username": "Kashif_Khan18",
                        "content": "The test cases expect array and the function is returning single integer. When I tried to return list of integers, I got compile error, and when I use single integer the test cases fail :)"
                    },
                    {
                        "username": "Naman_gupta21",
                        "content": "just for removing the confusion the question want you to return the size of array with unique element also you have to modify nums in  a way that it only has the unique element in same ascending order in simple words remove all the duplicate elments from nums"
                    },
                    {
                        "username": "bugzzbunny007",
                        "content": "can anyone tell me what is the issue in this code?\\n\\nvar removeDuplicates = function(nums) {\\n    const newvalue = new Set(nums);\\n    const result = [...newvalue]\\n    return result\\n};"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to modify it in place and then return the length.\n\n```javascript\nlet removeDuplicates = nums => {\n    for(const i in nums){\n        if(...) nums.splice(i, 0)\n    }\n    return nums.length\n}\n```"
                    },
                    {
                        "username": "MaxouMax",
                        "content": "mettez la reponse a chaque lvl pls"
                    },
                    {
                        "username": "githubnikhil",
                        "content": " $shoreArray = [];\\n \\n        foreach($nums as $key =>  $obj){\\n            if(!in_array($obj , $shoreArray)){\\n                array_push($shoreArray,$obj);\\n            }\\n        }\\n my code in php if i run in complier it work well why it is not working here "
                    },
                    {
                        "username": "fedegiovannacci",
                        "content": "I\\'m sorry if this is a noobish solution or idea but why can\\'t I use the following?\\n\\n `var removeDuplicates = function (nums) {\\n    nums = nums.filter((element, index) => {\\n        return nums.indexOf(element) == index\\n    })\\n    return nums.length\\n};`\\n\\nI think this should work but I might have missed something in the instructions; It\\'s mentioned that it doesn\\'t matter what\\'s next to the k unique elements and not having anything at all it\\'s a valid option under my perspective.\\n\\nThanks!"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "```javascript\nlet removeDuplicates = nums => {\n    for(const i in nums){\n        if(nums.indexOf(nums[i]) != i){\n            nums.splice(i)\n        }\n    }\n    return nums.length\n}\n```"
                    },
                    {
                        "username": "Ethan20230515",
                        "content": "I am using Python. If I cannot not just assign the value to 'nums' like 'nums = ......' ?\nBy this way, I can deliver the nums as required but it seem it is not accepted. I don't know why.\n\nwhat I have came up with is this, but I did not get accepted and don't understand why.\n\n `\n\n      \n        set_nums = set(nums)\n        k = len(set_nums)\n        \n        new_nums = list(set_nums)\n        l = []\n\n        for i in nums:\n            if i in set_nums and i in l:\n                new_nums.append(i)\n            else:\n                l.append(i)\n\n        nums = new_nums`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it."
                    },
                    {
                        "username": "444prajwal",
                        "content": "Each unique element will have at least 1 duplicate keep that in mind, test cases like [1,2,2,3] are not part of this, since it is an easy question"
                    }
                ]
            },
            {
                "id": 1927487,
                "content": [
                    {
                        "username": "user5397PR",
                        "content": "`class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        dic = {}\\n        for i in nums:\\n            if i in dic:\\n                pass\\n            else:\\n                dic[i]=i\\n        nums = list(dic.keys())\\n        return len(dic)`\\n\\nI am using the above code which give incorrect Output in Leetcode for [nums] but it works fine in VS code.  Any idea why this issue?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "1. You have to mutate it.\\n2. I don\\'t know where you got the idea to use a class, it\\'s Python not Java. Although it might work idk, but it\\'s very unnecessary."
                    },
                    {
                        "username": "aditix2008",
                        "content": "There\\'s no such indication that we can\\'t use sets for the same, so can we use LinkedHashSet to solve this? Do we have to use a two pointer approach? "
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to modify in place so unlikely."
                    },
                    {
                        "username": "Kashif_Khan18",
                        "content": "The test cases expect array and the function is returning single integer. When I tried to return list of integers, I got compile error, and when I use single integer the test cases fail :)"
                    },
                    {
                        "username": "Naman_gupta21",
                        "content": "just for removing the confusion the question want you to return the size of array with unique element also you have to modify nums in  a way that it only has the unique element in same ascending order in simple words remove all the duplicate elments from nums"
                    },
                    {
                        "username": "bugzzbunny007",
                        "content": "can anyone tell me what is the issue in this code?\\n\\nvar removeDuplicates = function(nums) {\\n    const newvalue = new Set(nums);\\n    const result = [...newvalue]\\n    return result\\n};"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to modify it in place and then return the length.\n\n```javascript\nlet removeDuplicates = nums => {\n    for(const i in nums){\n        if(...) nums.splice(i, 0)\n    }\n    return nums.length\n}\n```"
                    },
                    {
                        "username": "MaxouMax",
                        "content": "mettez la reponse a chaque lvl pls"
                    },
                    {
                        "username": "githubnikhil",
                        "content": " $shoreArray = [];\\n \\n        foreach($nums as $key =>  $obj){\\n            if(!in_array($obj , $shoreArray)){\\n                array_push($shoreArray,$obj);\\n            }\\n        }\\n my code in php if i run in complier it work well why it is not working here "
                    },
                    {
                        "username": "fedegiovannacci",
                        "content": "I\\'m sorry if this is a noobish solution or idea but why can\\'t I use the following?\\n\\n `var removeDuplicates = function (nums) {\\n    nums = nums.filter((element, index) => {\\n        return nums.indexOf(element) == index\\n    })\\n    return nums.length\\n};`\\n\\nI think this should work but I might have missed something in the instructions; It\\'s mentioned that it doesn\\'t matter what\\'s next to the k unique elements and not having anything at all it\\'s a valid option under my perspective.\\n\\nThanks!"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "```javascript\nlet removeDuplicates = nums => {\n    for(const i in nums){\n        if(nums.indexOf(nums[i]) != i){\n            nums.splice(i)\n        }\n    }\n    return nums.length\n}\n```"
                    },
                    {
                        "username": "Ethan20230515",
                        "content": "I am using Python. If I cannot not just assign the value to 'nums' like 'nums = ......' ?\nBy this way, I can deliver the nums as required but it seem it is not accepted. I don't know why.\n\nwhat I have came up with is this, but I did not get accepted and don't understand why.\n\n `\n\n      \n        set_nums = set(nums)\n        k = len(set_nums)\n        \n        new_nums = list(set_nums)\n        l = []\n\n        for i in nums:\n            if i in set_nums and i in l:\n                new_nums.append(i)\n            else:\n                l.append(i)\n\n        nums = new_nums`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it."
                    },
                    {
                        "username": "444prajwal",
                        "content": "Each unique element will have at least 1 duplicate keep that in mind, test cases like [1,2,2,3] are not part of this, since it is an easy question"
                    }
                ]
            },
            {
                "id": 1920057,
                "content": [
                    {
                        "username": "user5397PR",
                        "content": "`class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        dic = {}\\n        for i in nums:\\n            if i in dic:\\n                pass\\n            else:\\n                dic[i]=i\\n        nums = list(dic.keys())\\n        return len(dic)`\\n\\nI am using the above code which give incorrect Output in Leetcode for [nums] but it works fine in VS code.  Any idea why this issue?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "1. You have to mutate it.\\n2. I don\\'t know where you got the idea to use a class, it\\'s Python not Java. Although it might work idk, but it\\'s very unnecessary."
                    },
                    {
                        "username": "aditix2008",
                        "content": "There\\'s no such indication that we can\\'t use sets for the same, so can we use LinkedHashSet to solve this? Do we have to use a two pointer approach? "
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to modify in place so unlikely."
                    },
                    {
                        "username": "Kashif_Khan18",
                        "content": "The test cases expect array and the function is returning single integer. When I tried to return list of integers, I got compile error, and when I use single integer the test cases fail :)"
                    },
                    {
                        "username": "Naman_gupta21",
                        "content": "just for removing the confusion the question want you to return the size of array with unique element also you have to modify nums in  a way that it only has the unique element in same ascending order in simple words remove all the duplicate elments from nums"
                    },
                    {
                        "username": "bugzzbunny007",
                        "content": "can anyone tell me what is the issue in this code?\\n\\nvar removeDuplicates = function(nums) {\\n    const newvalue = new Set(nums);\\n    const result = [...newvalue]\\n    return result\\n};"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to modify it in place and then return the length.\n\n```javascript\nlet removeDuplicates = nums => {\n    for(const i in nums){\n        if(...) nums.splice(i, 0)\n    }\n    return nums.length\n}\n```"
                    },
                    {
                        "username": "MaxouMax",
                        "content": "mettez la reponse a chaque lvl pls"
                    },
                    {
                        "username": "githubnikhil",
                        "content": " $shoreArray = [];\\n \\n        foreach($nums as $key =>  $obj){\\n            if(!in_array($obj , $shoreArray)){\\n                array_push($shoreArray,$obj);\\n            }\\n        }\\n my code in php if i run in complier it work well why it is not working here "
                    },
                    {
                        "username": "fedegiovannacci",
                        "content": "I\\'m sorry if this is a noobish solution or idea but why can\\'t I use the following?\\n\\n `var removeDuplicates = function (nums) {\\n    nums = nums.filter((element, index) => {\\n        return nums.indexOf(element) == index\\n    })\\n    return nums.length\\n};`\\n\\nI think this should work but I might have missed something in the instructions; It\\'s mentioned that it doesn\\'t matter what\\'s next to the k unique elements and not having anything at all it\\'s a valid option under my perspective.\\n\\nThanks!"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "```javascript\nlet removeDuplicates = nums => {\n    for(const i in nums){\n        if(nums.indexOf(nums[i]) != i){\n            nums.splice(i)\n        }\n    }\n    return nums.length\n}\n```"
                    },
                    {
                        "username": "Ethan20230515",
                        "content": "I am using Python. If I cannot not just assign the value to 'nums' like 'nums = ......' ?\nBy this way, I can deliver the nums as required but it seem it is not accepted. I don't know why.\n\nwhat I have came up with is this, but I did not get accepted and don't understand why.\n\n `\n\n      \n        set_nums = set(nums)\n        k = len(set_nums)\n        \n        new_nums = list(set_nums)\n        l = []\n\n        for i in nums:\n            if i in set_nums and i in l:\n                new_nums.append(i)\n            else:\n                l.append(i)\n\n        nums = new_nums`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it."
                    },
                    {
                        "username": "444prajwal",
                        "content": "Each unique element will have at least 1 duplicate keep that in mind, test cases like [1,2,2,3] are not part of this, since it is an easy question"
                    }
                ]
            },
            {
                "id": 1918813,
                "content": [
                    {
                        "username": "user5397PR",
                        "content": "`class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        dic = {}\\n        for i in nums:\\n            if i in dic:\\n                pass\\n            else:\\n                dic[i]=i\\n        nums = list(dic.keys())\\n        return len(dic)`\\n\\nI am using the above code which give incorrect Output in Leetcode for [nums] but it works fine in VS code.  Any idea why this issue?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "1. You have to mutate it.\\n2. I don\\'t know where you got the idea to use a class, it\\'s Python not Java. Although it might work idk, but it\\'s very unnecessary."
                    },
                    {
                        "username": "aditix2008",
                        "content": "There\\'s no such indication that we can\\'t use sets for the same, so can we use LinkedHashSet to solve this? Do we have to use a two pointer approach? "
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to modify in place so unlikely."
                    },
                    {
                        "username": "Kashif_Khan18",
                        "content": "The test cases expect array and the function is returning single integer. When I tried to return list of integers, I got compile error, and when I use single integer the test cases fail :)"
                    },
                    {
                        "username": "Naman_gupta21",
                        "content": "just for removing the confusion the question want you to return the size of array with unique element also you have to modify nums in  a way that it only has the unique element in same ascending order in simple words remove all the duplicate elments from nums"
                    },
                    {
                        "username": "bugzzbunny007",
                        "content": "can anyone tell me what is the issue in this code?\\n\\nvar removeDuplicates = function(nums) {\\n    const newvalue = new Set(nums);\\n    const result = [...newvalue]\\n    return result\\n};"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to modify it in place and then return the length.\n\n```javascript\nlet removeDuplicates = nums => {\n    for(const i in nums){\n        if(...) nums.splice(i, 0)\n    }\n    return nums.length\n}\n```"
                    },
                    {
                        "username": "MaxouMax",
                        "content": "mettez la reponse a chaque lvl pls"
                    },
                    {
                        "username": "githubnikhil",
                        "content": " $shoreArray = [];\\n \\n        foreach($nums as $key =>  $obj){\\n            if(!in_array($obj , $shoreArray)){\\n                array_push($shoreArray,$obj);\\n            }\\n        }\\n my code in php if i run in complier it work well why it is not working here "
                    },
                    {
                        "username": "fedegiovannacci",
                        "content": "I\\'m sorry if this is a noobish solution or idea but why can\\'t I use the following?\\n\\n `var removeDuplicates = function (nums) {\\n    nums = nums.filter((element, index) => {\\n        return nums.indexOf(element) == index\\n    })\\n    return nums.length\\n};`\\n\\nI think this should work but I might have missed something in the instructions; It\\'s mentioned that it doesn\\'t matter what\\'s next to the k unique elements and not having anything at all it\\'s a valid option under my perspective.\\n\\nThanks!"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "```javascript\nlet removeDuplicates = nums => {\n    for(const i in nums){\n        if(nums.indexOf(nums[i]) != i){\n            nums.splice(i)\n        }\n    }\n    return nums.length\n}\n```"
                    },
                    {
                        "username": "Ethan20230515",
                        "content": "I am using Python. If I cannot not just assign the value to 'nums' like 'nums = ......' ?\nBy this way, I can deliver the nums as required but it seem it is not accepted. I don't know why.\n\nwhat I have came up with is this, but I did not get accepted and don't understand why.\n\n `\n\n      \n        set_nums = set(nums)\n        k = len(set_nums)\n        \n        new_nums = list(set_nums)\n        l = []\n\n        for i in nums:\n            if i in set_nums and i in l:\n                new_nums.append(i)\n            else:\n                l.append(i)\n\n        nums = new_nums`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it."
                    },
                    {
                        "username": "444prajwal",
                        "content": "Each unique element will have at least 1 duplicate keep that in mind, test cases like [1,2,2,3] are not part of this, since it is an easy question"
                    }
                ]
            },
            {
                "id": 1918711,
                "content": [
                    {
                        "username": "user5397PR",
                        "content": "`class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        dic = {}\\n        for i in nums:\\n            if i in dic:\\n                pass\\n            else:\\n                dic[i]=i\\n        nums = list(dic.keys())\\n        return len(dic)`\\n\\nI am using the above code which give incorrect Output in Leetcode for [nums] but it works fine in VS code.  Any idea why this issue?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "1. You have to mutate it.\\n2. I don\\'t know where you got the idea to use a class, it\\'s Python not Java. Although it might work idk, but it\\'s very unnecessary."
                    },
                    {
                        "username": "aditix2008",
                        "content": "There\\'s no such indication that we can\\'t use sets for the same, so can we use LinkedHashSet to solve this? Do we have to use a two pointer approach? "
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to modify in place so unlikely."
                    },
                    {
                        "username": "Kashif_Khan18",
                        "content": "The test cases expect array and the function is returning single integer. When I tried to return list of integers, I got compile error, and when I use single integer the test cases fail :)"
                    },
                    {
                        "username": "Naman_gupta21",
                        "content": "just for removing the confusion the question want you to return the size of array with unique element also you have to modify nums in  a way that it only has the unique element in same ascending order in simple words remove all the duplicate elments from nums"
                    },
                    {
                        "username": "bugzzbunny007",
                        "content": "can anyone tell me what is the issue in this code?\\n\\nvar removeDuplicates = function(nums) {\\n    const newvalue = new Set(nums);\\n    const result = [...newvalue]\\n    return result\\n};"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to modify it in place and then return the length.\n\n```javascript\nlet removeDuplicates = nums => {\n    for(const i in nums){\n        if(...) nums.splice(i, 0)\n    }\n    return nums.length\n}\n```"
                    },
                    {
                        "username": "MaxouMax",
                        "content": "mettez la reponse a chaque lvl pls"
                    },
                    {
                        "username": "githubnikhil",
                        "content": " $shoreArray = [];\\n \\n        foreach($nums as $key =>  $obj){\\n            if(!in_array($obj , $shoreArray)){\\n                array_push($shoreArray,$obj);\\n            }\\n        }\\n my code in php if i run in complier it work well why it is not working here "
                    },
                    {
                        "username": "fedegiovannacci",
                        "content": "I\\'m sorry if this is a noobish solution or idea but why can\\'t I use the following?\\n\\n `var removeDuplicates = function (nums) {\\n    nums = nums.filter((element, index) => {\\n        return nums.indexOf(element) == index\\n    })\\n    return nums.length\\n};`\\n\\nI think this should work but I might have missed something in the instructions; It\\'s mentioned that it doesn\\'t matter what\\'s next to the k unique elements and not having anything at all it\\'s a valid option under my perspective.\\n\\nThanks!"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "```javascript\nlet removeDuplicates = nums => {\n    for(const i in nums){\n        if(nums.indexOf(nums[i]) != i){\n            nums.splice(i)\n        }\n    }\n    return nums.length\n}\n```"
                    },
                    {
                        "username": "Ethan20230515",
                        "content": "I am using Python. If I cannot not just assign the value to 'nums' like 'nums = ......' ?\nBy this way, I can deliver the nums as required but it seem it is not accepted. I don't know why.\n\nwhat I have came up with is this, but I did not get accepted and don't understand why.\n\n `\n\n      \n        set_nums = set(nums)\n        k = len(set_nums)\n        \n        new_nums = list(set_nums)\n        l = []\n\n        for i in nums:\n            if i in set_nums and i in l:\n                new_nums.append(i)\n            else:\n                l.append(i)\n\n        nums = new_nums`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it."
                    },
                    {
                        "username": "444prajwal",
                        "content": "Each unique element will have at least 1 duplicate keep that in mind, test cases like [1,2,2,3] are not part of this, since it is an easy question"
                    }
                ]
            },
            {
                "id": 1917810,
                "content": [
                    {
                        "username": "user5397PR",
                        "content": "`class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        dic = {}\\n        for i in nums:\\n            if i in dic:\\n                pass\\n            else:\\n                dic[i]=i\\n        nums = list(dic.keys())\\n        return len(dic)`\\n\\nI am using the above code which give incorrect Output in Leetcode for [nums] but it works fine in VS code.  Any idea why this issue?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "1. You have to mutate it.\\n2. I don\\'t know where you got the idea to use a class, it\\'s Python not Java. Although it might work idk, but it\\'s very unnecessary."
                    },
                    {
                        "username": "aditix2008",
                        "content": "There\\'s no such indication that we can\\'t use sets for the same, so can we use LinkedHashSet to solve this? Do we have to use a two pointer approach? "
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to modify in place so unlikely."
                    },
                    {
                        "username": "Kashif_Khan18",
                        "content": "The test cases expect array and the function is returning single integer. When I tried to return list of integers, I got compile error, and when I use single integer the test cases fail :)"
                    },
                    {
                        "username": "Naman_gupta21",
                        "content": "just for removing the confusion the question want you to return the size of array with unique element also you have to modify nums in  a way that it only has the unique element in same ascending order in simple words remove all the duplicate elments from nums"
                    },
                    {
                        "username": "bugzzbunny007",
                        "content": "can anyone tell me what is the issue in this code?\\n\\nvar removeDuplicates = function(nums) {\\n    const newvalue = new Set(nums);\\n    const result = [...newvalue]\\n    return result\\n};"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to modify it in place and then return the length.\n\n```javascript\nlet removeDuplicates = nums => {\n    for(const i in nums){\n        if(...) nums.splice(i, 0)\n    }\n    return nums.length\n}\n```"
                    },
                    {
                        "username": "MaxouMax",
                        "content": "mettez la reponse a chaque lvl pls"
                    },
                    {
                        "username": "githubnikhil",
                        "content": " $shoreArray = [];\\n \\n        foreach($nums as $key =>  $obj){\\n            if(!in_array($obj , $shoreArray)){\\n                array_push($shoreArray,$obj);\\n            }\\n        }\\n my code in php if i run in complier it work well why it is not working here "
                    },
                    {
                        "username": "fedegiovannacci",
                        "content": "I\\'m sorry if this is a noobish solution or idea but why can\\'t I use the following?\\n\\n `var removeDuplicates = function (nums) {\\n    nums = nums.filter((element, index) => {\\n        return nums.indexOf(element) == index\\n    })\\n    return nums.length\\n};`\\n\\nI think this should work but I might have missed something in the instructions; It\\'s mentioned that it doesn\\'t matter what\\'s next to the k unique elements and not having anything at all it\\'s a valid option under my perspective.\\n\\nThanks!"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "```javascript\nlet removeDuplicates = nums => {\n    for(const i in nums){\n        if(nums.indexOf(nums[i]) != i){\n            nums.splice(i)\n        }\n    }\n    return nums.length\n}\n```"
                    },
                    {
                        "username": "Ethan20230515",
                        "content": "I am using Python. If I cannot not just assign the value to 'nums' like 'nums = ......' ?\nBy this way, I can deliver the nums as required but it seem it is not accepted. I don't know why.\n\nwhat I have came up with is this, but I did not get accepted and don't understand why.\n\n `\n\n      \n        set_nums = set(nums)\n        k = len(set_nums)\n        \n        new_nums = list(set_nums)\n        l = []\n\n        for i in nums:\n            if i in set_nums and i in l:\n                new_nums.append(i)\n            else:\n                l.append(i)\n\n        nums = new_nums`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it."
                    },
                    {
                        "username": "444prajwal",
                        "content": "Each unique element will have at least 1 duplicate keep that in mind, test cases like [1,2,2,3] are not part of this, since it is an easy question"
                    }
                ]
            },
            {
                "id": 1917360,
                "content": [
                    {
                        "username": "user5397PR",
                        "content": "`class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        dic = {}\\n        for i in nums:\\n            if i in dic:\\n                pass\\n            else:\\n                dic[i]=i\\n        nums = list(dic.keys())\\n        return len(dic)`\\n\\nI am using the above code which give incorrect Output in Leetcode for [nums] but it works fine in VS code.  Any idea why this issue?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "1. You have to mutate it.\\n2. I don\\'t know where you got the idea to use a class, it\\'s Python not Java. Although it might work idk, but it\\'s very unnecessary."
                    },
                    {
                        "username": "aditix2008",
                        "content": "There\\'s no such indication that we can\\'t use sets for the same, so can we use LinkedHashSet to solve this? Do we have to use a two pointer approach? "
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to modify in place so unlikely."
                    },
                    {
                        "username": "Kashif_Khan18",
                        "content": "The test cases expect array and the function is returning single integer. When I tried to return list of integers, I got compile error, and when I use single integer the test cases fail :)"
                    },
                    {
                        "username": "Naman_gupta21",
                        "content": "just for removing the confusion the question want you to return the size of array with unique element also you have to modify nums in  a way that it only has the unique element in same ascending order in simple words remove all the duplicate elments from nums"
                    },
                    {
                        "username": "bugzzbunny007",
                        "content": "can anyone tell me what is the issue in this code?\\n\\nvar removeDuplicates = function(nums) {\\n    const newvalue = new Set(nums);\\n    const result = [...newvalue]\\n    return result\\n};"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to modify it in place and then return the length.\n\n```javascript\nlet removeDuplicates = nums => {\n    for(const i in nums){\n        if(...) nums.splice(i, 0)\n    }\n    return nums.length\n}\n```"
                    },
                    {
                        "username": "MaxouMax",
                        "content": "mettez la reponse a chaque lvl pls"
                    },
                    {
                        "username": "githubnikhil",
                        "content": " $shoreArray = [];\\n \\n        foreach($nums as $key =>  $obj){\\n            if(!in_array($obj , $shoreArray)){\\n                array_push($shoreArray,$obj);\\n            }\\n        }\\n my code in php if i run in complier it work well why it is not working here "
                    },
                    {
                        "username": "fedegiovannacci",
                        "content": "I\\'m sorry if this is a noobish solution or idea but why can\\'t I use the following?\\n\\n `var removeDuplicates = function (nums) {\\n    nums = nums.filter((element, index) => {\\n        return nums.indexOf(element) == index\\n    })\\n    return nums.length\\n};`\\n\\nI think this should work but I might have missed something in the instructions; It\\'s mentioned that it doesn\\'t matter what\\'s next to the k unique elements and not having anything at all it\\'s a valid option under my perspective.\\n\\nThanks!"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "```javascript\nlet removeDuplicates = nums => {\n    for(const i in nums){\n        if(nums.indexOf(nums[i]) != i){\n            nums.splice(i)\n        }\n    }\n    return nums.length\n}\n```"
                    },
                    {
                        "username": "Ethan20230515",
                        "content": "I am using Python. If I cannot not just assign the value to 'nums' like 'nums = ......' ?\nBy this way, I can deliver the nums as required but it seem it is not accepted. I don't know why.\n\nwhat I have came up with is this, but I did not get accepted and don't understand why.\n\n `\n\n      \n        set_nums = set(nums)\n        k = len(set_nums)\n        \n        new_nums = list(set_nums)\n        l = []\n\n        for i in nums:\n            if i in set_nums and i in l:\n                new_nums.append(i)\n            else:\n                l.append(i)\n\n        nums = new_nums`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it."
                    },
                    {
                        "username": "444prajwal",
                        "content": "Each unique element will have at least 1 duplicate keep that in mind, test cases like [1,2,2,3] are not part of this, since it is an easy question"
                    }
                ]
            },
            {
                "id": 1917191,
                "content": [
                    {
                        "username": "user5397PR",
                        "content": "`class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        dic = {}\\n        for i in nums:\\n            if i in dic:\\n                pass\\n            else:\\n                dic[i]=i\\n        nums = list(dic.keys())\\n        return len(dic)`\\n\\nI am using the above code which give incorrect Output in Leetcode for [nums] but it works fine in VS code.  Any idea why this issue?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "1. You have to mutate it.\\n2. I don\\'t know where you got the idea to use a class, it\\'s Python not Java. Although it might work idk, but it\\'s very unnecessary."
                    },
                    {
                        "username": "aditix2008",
                        "content": "There\\'s no such indication that we can\\'t use sets for the same, so can we use LinkedHashSet to solve this? Do we have to use a two pointer approach? "
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to modify in place so unlikely."
                    },
                    {
                        "username": "Kashif_Khan18",
                        "content": "The test cases expect array and the function is returning single integer. When I tried to return list of integers, I got compile error, and when I use single integer the test cases fail :)"
                    },
                    {
                        "username": "Naman_gupta21",
                        "content": "just for removing the confusion the question want you to return the size of array with unique element also you have to modify nums in  a way that it only has the unique element in same ascending order in simple words remove all the duplicate elments from nums"
                    },
                    {
                        "username": "bugzzbunny007",
                        "content": "can anyone tell me what is the issue in this code?\\n\\nvar removeDuplicates = function(nums) {\\n    const newvalue = new Set(nums);\\n    const result = [...newvalue]\\n    return result\\n};"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to modify it in place and then return the length.\n\n```javascript\nlet removeDuplicates = nums => {\n    for(const i in nums){\n        if(...) nums.splice(i, 0)\n    }\n    return nums.length\n}\n```"
                    },
                    {
                        "username": "MaxouMax",
                        "content": "mettez la reponse a chaque lvl pls"
                    },
                    {
                        "username": "githubnikhil",
                        "content": " $shoreArray = [];\\n \\n        foreach($nums as $key =>  $obj){\\n            if(!in_array($obj , $shoreArray)){\\n                array_push($shoreArray,$obj);\\n            }\\n        }\\n my code in php if i run in complier it work well why it is not working here "
                    },
                    {
                        "username": "fedegiovannacci",
                        "content": "I\\'m sorry if this is a noobish solution or idea but why can\\'t I use the following?\\n\\n `var removeDuplicates = function (nums) {\\n    nums = nums.filter((element, index) => {\\n        return nums.indexOf(element) == index\\n    })\\n    return nums.length\\n};`\\n\\nI think this should work but I might have missed something in the instructions; It\\'s mentioned that it doesn\\'t matter what\\'s next to the k unique elements and not having anything at all it\\'s a valid option under my perspective.\\n\\nThanks!"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "```javascript\nlet removeDuplicates = nums => {\n    for(const i in nums){\n        if(nums.indexOf(nums[i]) != i){\n            nums.splice(i)\n        }\n    }\n    return nums.length\n}\n```"
                    },
                    {
                        "username": "Ethan20230515",
                        "content": "I am using Python. If I cannot not just assign the value to 'nums' like 'nums = ......' ?\nBy this way, I can deliver the nums as required but it seem it is not accepted. I don't know why.\n\nwhat I have came up with is this, but I did not get accepted and don't understand why.\n\n `\n\n      \n        set_nums = set(nums)\n        k = len(set_nums)\n        \n        new_nums = list(set_nums)\n        l = []\n\n        for i in nums:\n            if i in set_nums and i in l:\n                new_nums.append(i)\n            else:\n                l.append(i)\n\n        nums = new_nums`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it."
                    },
                    {
                        "username": "444prajwal",
                        "content": "Each unique element will have at least 1 duplicate keep that in mind, test cases like [1,2,2,3] are not part of this, since it is an easy question"
                    }
                ]
            },
            {
                "id": 1916721,
                "content": [
                    {
                        "username": "user5397PR",
                        "content": "`class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        dic = {}\\n        for i in nums:\\n            if i in dic:\\n                pass\\n            else:\\n                dic[i]=i\\n        nums = list(dic.keys())\\n        return len(dic)`\\n\\nI am using the above code which give incorrect Output in Leetcode for [nums] but it works fine in VS code.  Any idea why this issue?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "1. You have to mutate it.\\n2. I don\\'t know where you got the idea to use a class, it\\'s Python not Java. Although it might work idk, but it\\'s very unnecessary."
                    },
                    {
                        "username": "aditix2008",
                        "content": "There\\'s no such indication that we can\\'t use sets for the same, so can we use LinkedHashSet to solve this? Do we have to use a two pointer approach? "
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to modify in place so unlikely."
                    },
                    {
                        "username": "Kashif_Khan18",
                        "content": "The test cases expect array and the function is returning single integer. When I tried to return list of integers, I got compile error, and when I use single integer the test cases fail :)"
                    },
                    {
                        "username": "Naman_gupta21",
                        "content": "just for removing the confusion the question want you to return the size of array with unique element also you have to modify nums in  a way that it only has the unique element in same ascending order in simple words remove all the duplicate elments from nums"
                    },
                    {
                        "username": "bugzzbunny007",
                        "content": "can anyone tell me what is the issue in this code?\\n\\nvar removeDuplicates = function(nums) {\\n    const newvalue = new Set(nums);\\n    const result = [...newvalue]\\n    return result\\n};"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to modify it in place and then return the length.\n\n```javascript\nlet removeDuplicates = nums => {\n    for(const i in nums){\n        if(...) nums.splice(i, 0)\n    }\n    return nums.length\n}\n```"
                    },
                    {
                        "username": "MaxouMax",
                        "content": "mettez la reponse a chaque lvl pls"
                    },
                    {
                        "username": "githubnikhil",
                        "content": " $shoreArray = [];\\n \\n        foreach($nums as $key =>  $obj){\\n            if(!in_array($obj , $shoreArray)){\\n                array_push($shoreArray,$obj);\\n            }\\n        }\\n my code in php if i run in complier it work well why it is not working here "
                    },
                    {
                        "username": "fedegiovannacci",
                        "content": "I\\'m sorry if this is a noobish solution or idea but why can\\'t I use the following?\\n\\n `var removeDuplicates = function (nums) {\\n    nums = nums.filter((element, index) => {\\n        return nums.indexOf(element) == index\\n    })\\n    return nums.length\\n};`\\n\\nI think this should work but I might have missed something in the instructions; It\\'s mentioned that it doesn\\'t matter what\\'s next to the k unique elements and not having anything at all it\\'s a valid option under my perspective.\\n\\nThanks!"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "```javascript\nlet removeDuplicates = nums => {\n    for(const i in nums){\n        if(nums.indexOf(nums[i]) != i){\n            nums.splice(i)\n        }\n    }\n    return nums.length\n}\n```"
                    },
                    {
                        "username": "Ethan20230515",
                        "content": "I am using Python. If I cannot not just assign the value to 'nums' like 'nums = ......' ?\nBy this way, I can deliver the nums as required but it seem it is not accepted. I don't know why.\n\nwhat I have came up with is this, but I did not get accepted and don't understand why.\n\n `\n\n      \n        set_nums = set(nums)\n        k = len(set_nums)\n        \n        new_nums = list(set_nums)\n        l = []\n\n        for i in nums:\n            if i in set_nums and i in l:\n                new_nums.append(i)\n            else:\n                l.append(i)\n\n        nums = new_nums`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it."
                    },
                    {
                        "username": "444prajwal",
                        "content": "Each unique element will have at least 1 duplicate keep that in mind, test cases like [1,2,2,3] are not part of this, since it is an easy question"
                    }
                ]
            },
            {
                "id": 1913092,
                "content": [
                    {
                        "username": "user5397PR",
                        "content": "`class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        dic = {}\\n        for i in nums:\\n            if i in dic:\\n                pass\\n            else:\\n                dic[i]=i\\n        nums = list(dic.keys())\\n        return len(dic)`\\n\\nI am using the above code which give incorrect Output in Leetcode for [nums] but it works fine in VS code.  Any idea why this issue?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "1. You have to mutate it.\\n2. I don\\'t know where you got the idea to use a class, it\\'s Python not Java. Although it might work idk, but it\\'s very unnecessary."
                    },
                    {
                        "username": "aditix2008",
                        "content": "There\\'s no such indication that we can\\'t use sets for the same, so can we use LinkedHashSet to solve this? Do we have to use a two pointer approach? "
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to modify in place so unlikely."
                    },
                    {
                        "username": "Kashif_Khan18",
                        "content": "The test cases expect array and the function is returning single integer. When I tried to return list of integers, I got compile error, and when I use single integer the test cases fail :)"
                    },
                    {
                        "username": "Naman_gupta21",
                        "content": "just for removing the confusion the question want you to return the size of array with unique element also you have to modify nums in  a way that it only has the unique element in same ascending order in simple words remove all the duplicate elments from nums"
                    },
                    {
                        "username": "bugzzbunny007",
                        "content": "can anyone tell me what is the issue in this code?\\n\\nvar removeDuplicates = function(nums) {\\n    const newvalue = new Set(nums);\\n    const result = [...newvalue]\\n    return result\\n};"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to modify it in place and then return the length.\n\n```javascript\nlet removeDuplicates = nums => {\n    for(const i in nums){\n        if(...) nums.splice(i, 0)\n    }\n    return nums.length\n}\n```"
                    },
                    {
                        "username": "MaxouMax",
                        "content": "mettez la reponse a chaque lvl pls"
                    },
                    {
                        "username": "githubnikhil",
                        "content": " $shoreArray = [];\\n \\n        foreach($nums as $key =>  $obj){\\n            if(!in_array($obj , $shoreArray)){\\n                array_push($shoreArray,$obj);\\n            }\\n        }\\n my code in php if i run in complier it work well why it is not working here "
                    },
                    {
                        "username": "fedegiovannacci",
                        "content": "I\\'m sorry if this is a noobish solution or idea but why can\\'t I use the following?\\n\\n `var removeDuplicates = function (nums) {\\n    nums = nums.filter((element, index) => {\\n        return nums.indexOf(element) == index\\n    })\\n    return nums.length\\n};`\\n\\nI think this should work but I might have missed something in the instructions; It\\'s mentioned that it doesn\\'t matter what\\'s next to the k unique elements and not having anything at all it\\'s a valid option under my perspective.\\n\\nThanks!"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "```javascript\nlet removeDuplicates = nums => {\n    for(const i in nums){\n        if(nums.indexOf(nums[i]) != i){\n            nums.splice(i)\n        }\n    }\n    return nums.length\n}\n```"
                    },
                    {
                        "username": "Ethan20230515",
                        "content": "I am using Python. If I cannot not just assign the value to 'nums' like 'nums = ......' ?\nBy this way, I can deliver the nums as required but it seem it is not accepted. I don't know why.\n\nwhat I have came up with is this, but I did not get accepted and don't understand why.\n\n `\n\n      \n        set_nums = set(nums)\n        k = len(set_nums)\n        \n        new_nums = list(set_nums)\n        l = []\n\n        for i in nums:\n            if i in set_nums and i in l:\n                new_nums.append(i)\n            else:\n                l.append(i)\n\n        nums = new_nums`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it."
                    },
                    {
                        "username": "444prajwal",
                        "content": "Each unique element will have at least 1 duplicate keep that in mind, test cases like [1,2,2,3] are not part of this, since it is an easy question"
                    }
                ]
            },
            {
                "id": 1912870,
                "content": [
                    {
                        "username": "Sourabhm25678",
                        "content": "I tried it with java 8. The following solution is working in my machine but not here.\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n       Set<Integer> s1 = Arrays.stream(nums).boxed()\\n        .collect(Collectors.toSet());\\n        return s1.size();\\n    }\\n}"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "A_gentle_coder",
                        "content": "Hi all, \\n\\nI have been writing the following solutions, which returns exactly the required k, yet not working:\\n\\n `class Solution:\\n    \\n    def removeDuplicates(self, nums: List[int]) -> int:\\n\\n        interval = range(1, len(nums))\\n\\n        for i in interval:\\n\\n            if nums[i - 1] == nums[i]:\\n\\n                nums[i - 1] = \"_\"\\n\\n        nums_only = [x for x in nums if x != \"_\"]\\n\\n        string_in_nums = [x for x in nums if x == \"_\"]\\n\\n        nums_only_sorted = sorted(nums_only, reverse = False)\\n\\n        nums = nums_only_sorted + string_in_nums\\n\\n        k = len(nums_only_sorted)\\n\\n        return k`\\n\\nnums is defined as required, and k as well. What am I missing? Anyone willing to help?\\n"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "andrewgraham",
                        "content": "Why is this wrong (python):\n\n`nums=list(set(nums))`\n`return len(nums)`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "user5428DY",
                        "content": "What is a real life example where you would need to create a solution to a problem like this? "
                    },
                    {
                        "username": "mayur1710hanwate",
                        "content": "Java\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        \\n        int count = nums.length;\\n        int n = nums.length;\\n\\n        int j = 0;\\n        for(int i=0;i<n-1;i++){\\n            if(nums[i] == nums[i+1]){\\n                nums[i] = Integer.MAX_VALUE;\\n                count--;\\n            }\\n        }\\n        Arrays.sort(nums);\\n\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "mayur1710hanwate",
                        "content": "My solution in java - O(n) time O(1) space\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        \\n        int count = nums.length;\\n        int n = nums.length;\\n\\n        int j = 0;\\n        for(int i=0;i<n-1;i++){\\n            if(nums[i] == nums[i+1]){\\n                nums[i] = Integer.MAX_VALUE;\\n                count--;\\n            }\\n        }\\n        Arrays.sort(nums);\\n\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "prathmeshdodia7",
                        "content": "can anyone tell me what is wrong in this code it passes the test case 1 but not in case2\\n\\n\\nimport java.util.ArrayList;\\nimport java.util.HashSet;\\n\\npublic class Solution {\\n    public static int removeDuplicates(int[] nums) {\\n        ArrayList<Integer> al = new ArrayList<>();\\n        HashSet<Integer> hs = new HashSet<>();\\n\\n        for (int i = 1; i < nums.length; i++) {\\n            if (!hs.contains(nums[i])) {\\n                hs.add(nums[i]++);\\n                al.add(nums[i]);\\n            }\\n        }\\n\\n        return al.size();\\n    }\\n}\\n\\n"
                    },
                    {
                        "username": "Dominik2208F",
                        "content": " List<Integer> lista = new ArrayList<>();\n        int index=-1;\n        for (int numbers : nums) {\n            if(!lista.contains(numbers)) {\n                lista.add(numbers);\n                index++;\n                nums[index] = numbers;\n            }\n        }\n\n            return index+1;\n\n    }"
                    },
                    {
                        "username": "vined",
                        "content": "Why does Python\\'s set() not work? I tried it on my PC and it worked fine"
                    },
                    {
                        "username": "dalviprasad",
                        "content": "Hi All, I am getting wrong answer when I try to run the below code, can someone help me understand where am I going wrong?\\n\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        c = 0\\n        output1 = []\\n        for i in range(0, len(nums)):\\n            if nums[i] not in output1:\\n                output1.append(nums[i])\\n                c += 1\\n        return(c)\\n```"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Why do you have a class there? You can get rid of that, it\\'s not Java. Return is not a function, it\\'s a keyword. `return c`"
                    },
                    {
                        "username": "Cong-GD",
                        "content": "Notice: u don't only have to return the value k but have to remove(not remove literal) duplicate from the array \"nums\" and put it in order from start to k."
                    }
                ]
            },
            {
                "id": 1912043,
                "content": [
                    {
                        "username": "Sourabhm25678",
                        "content": "I tried it with java 8. The following solution is working in my machine but not here.\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n       Set<Integer> s1 = Arrays.stream(nums).boxed()\\n        .collect(Collectors.toSet());\\n        return s1.size();\\n    }\\n}"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "A_gentle_coder",
                        "content": "Hi all, \\n\\nI have been writing the following solutions, which returns exactly the required k, yet not working:\\n\\n `class Solution:\\n    \\n    def removeDuplicates(self, nums: List[int]) -> int:\\n\\n        interval = range(1, len(nums))\\n\\n        for i in interval:\\n\\n            if nums[i - 1] == nums[i]:\\n\\n                nums[i - 1] = \"_\"\\n\\n        nums_only = [x for x in nums if x != \"_\"]\\n\\n        string_in_nums = [x for x in nums if x == \"_\"]\\n\\n        nums_only_sorted = sorted(nums_only, reverse = False)\\n\\n        nums = nums_only_sorted + string_in_nums\\n\\n        k = len(nums_only_sorted)\\n\\n        return k`\\n\\nnums is defined as required, and k as well. What am I missing? Anyone willing to help?\\n"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "andrewgraham",
                        "content": "Why is this wrong (python):\n\n`nums=list(set(nums))`\n`return len(nums)`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "user5428DY",
                        "content": "What is a real life example where you would need to create a solution to a problem like this? "
                    },
                    {
                        "username": "mayur1710hanwate",
                        "content": "Java\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        \\n        int count = nums.length;\\n        int n = nums.length;\\n\\n        int j = 0;\\n        for(int i=0;i<n-1;i++){\\n            if(nums[i] == nums[i+1]){\\n                nums[i] = Integer.MAX_VALUE;\\n                count--;\\n            }\\n        }\\n        Arrays.sort(nums);\\n\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "mayur1710hanwate",
                        "content": "My solution in java - O(n) time O(1) space\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        \\n        int count = nums.length;\\n        int n = nums.length;\\n\\n        int j = 0;\\n        for(int i=0;i<n-1;i++){\\n            if(nums[i] == nums[i+1]){\\n                nums[i] = Integer.MAX_VALUE;\\n                count--;\\n            }\\n        }\\n        Arrays.sort(nums);\\n\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "prathmeshdodia7",
                        "content": "can anyone tell me what is wrong in this code it passes the test case 1 but not in case2\\n\\n\\nimport java.util.ArrayList;\\nimport java.util.HashSet;\\n\\npublic class Solution {\\n    public static int removeDuplicates(int[] nums) {\\n        ArrayList<Integer> al = new ArrayList<>();\\n        HashSet<Integer> hs = new HashSet<>();\\n\\n        for (int i = 1; i < nums.length; i++) {\\n            if (!hs.contains(nums[i])) {\\n                hs.add(nums[i]++);\\n                al.add(nums[i]);\\n            }\\n        }\\n\\n        return al.size();\\n    }\\n}\\n\\n"
                    },
                    {
                        "username": "Dominik2208F",
                        "content": " List<Integer> lista = new ArrayList<>();\n        int index=-1;\n        for (int numbers : nums) {\n            if(!lista.contains(numbers)) {\n                lista.add(numbers);\n                index++;\n                nums[index] = numbers;\n            }\n        }\n\n            return index+1;\n\n    }"
                    },
                    {
                        "username": "vined",
                        "content": "Why does Python\\'s set() not work? I tried it on my PC and it worked fine"
                    },
                    {
                        "username": "dalviprasad",
                        "content": "Hi All, I am getting wrong answer when I try to run the below code, can someone help me understand where am I going wrong?\\n\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        c = 0\\n        output1 = []\\n        for i in range(0, len(nums)):\\n            if nums[i] not in output1:\\n                output1.append(nums[i])\\n                c += 1\\n        return(c)\\n```"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Why do you have a class there? You can get rid of that, it\\'s not Java. Return is not a function, it\\'s a keyword. `return c`"
                    },
                    {
                        "username": "Cong-GD",
                        "content": "Notice: u don't only have to return the value k but have to remove(not remove literal) duplicate from the array \"nums\" and put it in order from start to k."
                    }
                ]
            },
            {
                "id": 1910055,
                "content": [
                    {
                        "username": "Sourabhm25678",
                        "content": "I tried it with java 8. The following solution is working in my machine but not here.\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n       Set<Integer> s1 = Arrays.stream(nums).boxed()\\n        .collect(Collectors.toSet());\\n        return s1.size();\\n    }\\n}"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "A_gentle_coder",
                        "content": "Hi all, \\n\\nI have been writing the following solutions, which returns exactly the required k, yet not working:\\n\\n `class Solution:\\n    \\n    def removeDuplicates(self, nums: List[int]) -> int:\\n\\n        interval = range(1, len(nums))\\n\\n        for i in interval:\\n\\n            if nums[i - 1] == nums[i]:\\n\\n                nums[i - 1] = \"_\"\\n\\n        nums_only = [x for x in nums if x != \"_\"]\\n\\n        string_in_nums = [x for x in nums if x == \"_\"]\\n\\n        nums_only_sorted = sorted(nums_only, reverse = False)\\n\\n        nums = nums_only_sorted + string_in_nums\\n\\n        k = len(nums_only_sorted)\\n\\n        return k`\\n\\nnums is defined as required, and k as well. What am I missing? Anyone willing to help?\\n"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "andrewgraham",
                        "content": "Why is this wrong (python):\n\n`nums=list(set(nums))`\n`return len(nums)`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "user5428DY",
                        "content": "What is a real life example where you would need to create a solution to a problem like this? "
                    },
                    {
                        "username": "mayur1710hanwate",
                        "content": "Java\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        \\n        int count = nums.length;\\n        int n = nums.length;\\n\\n        int j = 0;\\n        for(int i=0;i<n-1;i++){\\n            if(nums[i] == nums[i+1]){\\n                nums[i] = Integer.MAX_VALUE;\\n                count--;\\n            }\\n        }\\n        Arrays.sort(nums);\\n\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "mayur1710hanwate",
                        "content": "My solution in java - O(n) time O(1) space\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        \\n        int count = nums.length;\\n        int n = nums.length;\\n\\n        int j = 0;\\n        for(int i=0;i<n-1;i++){\\n            if(nums[i] == nums[i+1]){\\n                nums[i] = Integer.MAX_VALUE;\\n                count--;\\n            }\\n        }\\n        Arrays.sort(nums);\\n\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "prathmeshdodia7",
                        "content": "can anyone tell me what is wrong in this code it passes the test case 1 but not in case2\\n\\n\\nimport java.util.ArrayList;\\nimport java.util.HashSet;\\n\\npublic class Solution {\\n    public static int removeDuplicates(int[] nums) {\\n        ArrayList<Integer> al = new ArrayList<>();\\n        HashSet<Integer> hs = new HashSet<>();\\n\\n        for (int i = 1; i < nums.length; i++) {\\n            if (!hs.contains(nums[i])) {\\n                hs.add(nums[i]++);\\n                al.add(nums[i]);\\n            }\\n        }\\n\\n        return al.size();\\n    }\\n}\\n\\n"
                    },
                    {
                        "username": "Dominik2208F",
                        "content": " List<Integer> lista = new ArrayList<>();\n        int index=-1;\n        for (int numbers : nums) {\n            if(!lista.contains(numbers)) {\n                lista.add(numbers);\n                index++;\n                nums[index] = numbers;\n            }\n        }\n\n            return index+1;\n\n    }"
                    },
                    {
                        "username": "vined",
                        "content": "Why does Python\\'s set() not work? I tried it on my PC and it worked fine"
                    },
                    {
                        "username": "dalviprasad",
                        "content": "Hi All, I am getting wrong answer when I try to run the below code, can someone help me understand where am I going wrong?\\n\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        c = 0\\n        output1 = []\\n        for i in range(0, len(nums)):\\n            if nums[i] not in output1:\\n                output1.append(nums[i])\\n                c += 1\\n        return(c)\\n```"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Why do you have a class there? You can get rid of that, it\\'s not Java. Return is not a function, it\\'s a keyword. `return c`"
                    },
                    {
                        "username": "Cong-GD",
                        "content": "Notice: u don't only have to return the value k but have to remove(not remove literal) duplicate from the array \"nums\" and put it in order from start to k."
                    }
                ]
            },
            {
                "id": 1909140,
                "content": [
                    {
                        "username": "Sourabhm25678",
                        "content": "I tried it with java 8. The following solution is working in my machine but not here.\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n       Set<Integer> s1 = Arrays.stream(nums).boxed()\\n        .collect(Collectors.toSet());\\n        return s1.size();\\n    }\\n}"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "A_gentle_coder",
                        "content": "Hi all, \\n\\nI have been writing the following solutions, which returns exactly the required k, yet not working:\\n\\n `class Solution:\\n    \\n    def removeDuplicates(self, nums: List[int]) -> int:\\n\\n        interval = range(1, len(nums))\\n\\n        for i in interval:\\n\\n            if nums[i - 1] == nums[i]:\\n\\n                nums[i - 1] = \"_\"\\n\\n        nums_only = [x for x in nums if x != \"_\"]\\n\\n        string_in_nums = [x for x in nums if x == \"_\"]\\n\\n        nums_only_sorted = sorted(nums_only, reverse = False)\\n\\n        nums = nums_only_sorted + string_in_nums\\n\\n        k = len(nums_only_sorted)\\n\\n        return k`\\n\\nnums is defined as required, and k as well. What am I missing? Anyone willing to help?\\n"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "andrewgraham",
                        "content": "Why is this wrong (python):\n\n`nums=list(set(nums))`\n`return len(nums)`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "user5428DY",
                        "content": "What is a real life example where you would need to create a solution to a problem like this? "
                    },
                    {
                        "username": "mayur1710hanwate",
                        "content": "Java\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        \\n        int count = nums.length;\\n        int n = nums.length;\\n\\n        int j = 0;\\n        for(int i=0;i<n-1;i++){\\n            if(nums[i] == nums[i+1]){\\n                nums[i] = Integer.MAX_VALUE;\\n                count--;\\n            }\\n        }\\n        Arrays.sort(nums);\\n\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "mayur1710hanwate",
                        "content": "My solution in java - O(n) time O(1) space\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        \\n        int count = nums.length;\\n        int n = nums.length;\\n\\n        int j = 0;\\n        for(int i=0;i<n-1;i++){\\n            if(nums[i] == nums[i+1]){\\n                nums[i] = Integer.MAX_VALUE;\\n                count--;\\n            }\\n        }\\n        Arrays.sort(nums);\\n\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "prathmeshdodia7",
                        "content": "can anyone tell me what is wrong in this code it passes the test case 1 but not in case2\\n\\n\\nimport java.util.ArrayList;\\nimport java.util.HashSet;\\n\\npublic class Solution {\\n    public static int removeDuplicates(int[] nums) {\\n        ArrayList<Integer> al = new ArrayList<>();\\n        HashSet<Integer> hs = new HashSet<>();\\n\\n        for (int i = 1; i < nums.length; i++) {\\n            if (!hs.contains(nums[i])) {\\n                hs.add(nums[i]++);\\n                al.add(nums[i]);\\n            }\\n        }\\n\\n        return al.size();\\n    }\\n}\\n\\n"
                    },
                    {
                        "username": "Dominik2208F",
                        "content": " List<Integer> lista = new ArrayList<>();\n        int index=-1;\n        for (int numbers : nums) {\n            if(!lista.contains(numbers)) {\n                lista.add(numbers);\n                index++;\n                nums[index] = numbers;\n            }\n        }\n\n            return index+1;\n\n    }"
                    },
                    {
                        "username": "vined",
                        "content": "Why does Python\\'s set() not work? I tried it on my PC and it worked fine"
                    },
                    {
                        "username": "dalviprasad",
                        "content": "Hi All, I am getting wrong answer when I try to run the below code, can someone help me understand where am I going wrong?\\n\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        c = 0\\n        output1 = []\\n        for i in range(0, len(nums)):\\n            if nums[i] not in output1:\\n                output1.append(nums[i])\\n                c += 1\\n        return(c)\\n```"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Why do you have a class there? You can get rid of that, it\\'s not Java. Return is not a function, it\\'s a keyword. `return c`"
                    },
                    {
                        "username": "Cong-GD",
                        "content": "Notice: u don't only have to return the value k but have to remove(not remove literal) duplicate from the array \"nums\" and put it in order from start to k."
                    }
                ]
            },
            {
                "id": 1907856,
                "content": [
                    {
                        "username": "Sourabhm25678",
                        "content": "I tried it with java 8. The following solution is working in my machine but not here.\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n       Set<Integer> s1 = Arrays.stream(nums).boxed()\\n        .collect(Collectors.toSet());\\n        return s1.size();\\n    }\\n}"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "A_gentle_coder",
                        "content": "Hi all, \\n\\nI have been writing the following solutions, which returns exactly the required k, yet not working:\\n\\n `class Solution:\\n    \\n    def removeDuplicates(self, nums: List[int]) -> int:\\n\\n        interval = range(1, len(nums))\\n\\n        for i in interval:\\n\\n            if nums[i - 1] == nums[i]:\\n\\n                nums[i - 1] = \"_\"\\n\\n        nums_only = [x for x in nums if x != \"_\"]\\n\\n        string_in_nums = [x for x in nums if x == \"_\"]\\n\\n        nums_only_sorted = sorted(nums_only, reverse = False)\\n\\n        nums = nums_only_sorted + string_in_nums\\n\\n        k = len(nums_only_sorted)\\n\\n        return k`\\n\\nnums is defined as required, and k as well. What am I missing? Anyone willing to help?\\n"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "andrewgraham",
                        "content": "Why is this wrong (python):\n\n`nums=list(set(nums))`\n`return len(nums)`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "user5428DY",
                        "content": "What is a real life example where you would need to create a solution to a problem like this? "
                    },
                    {
                        "username": "mayur1710hanwate",
                        "content": "Java\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        \\n        int count = nums.length;\\n        int n = nums.length;\\n\\n        int j = 0;\\n        for(int i=0;i<n-1;i++){\\n            if(nums[i] == nums[i+1]){\\n                nums[i] = Integer.MAX_VALUE;\\n                count--;\\n            }\\n        }\\n        Arrays.sort(nums);\\n\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "mayur1710hanwate",
                        "content": "My solution in java - O(n) time O(1) space\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        \\n        int count = nums.length;\\n        int n = nums.length;\\n\\n        int j = 0;\\n        for(int i=0;i<n-1;i++){\\n            if(nums[i] == nums[i+1]){\\n                nums[i] = Integer.MAX_VALUE;\\n                count--;\\n            }\\n        }\\n        Arrays.sort(nums);\\n\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "prathmeshdodia7",
                        "content": "can anyone tell me what is wrong in this code it passes the test case 1 but not in case2\\n\\n\\nimport java.util.ArrayList;\\nimport java.util.HashSet;\\n\\npublic class Solution {\\n    public static int removeDuplicates(int[] nums) {\\n        ArrayList<Integer> al = new ArrayList<>();\\n        HashSet<Integer> hs = new HashSet<>();\\n\\n        for (int i = 1; i < nums.length; i++) {\\n            if (!hs.contains(nums[i])) {\\n                hs.add(nums[i]++);\\n                al.add(nums[i]);\\n            }\\n        }\\n\\n        return al.size();\\n    }\\n}\\n\\n"
                    },
                    {
                        "username": "Dominik2208F",
                        "content": " List<Integer> lista = new ArrayList<>();\n        int index=-1;\n        for (int numbers : nums) {\n            if(!lista.contains(numbers)) {\n                lista.add(numbers);\n                index++;\n                nums[index] = numbers;\n            }\n        }\n\n            return index+1;\n\n    }"
                    },
                    {
                        "username": "vined",
                        "content": "Why does Python\\'s set() not work? I tried it on my PC and it worked fine"
                    },
                    {
                        "username": "dalviprasad",
                        "content": "Hi All, I am getting wrong answer when I try to run the below code, can someone help me understand where am I going wrong?\\n\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        c = 0\\n        output1 = []\\n        for i in range(0, len(nums)):\\n            if nums[i] not in output1:\\n                output1.append(nums[i])\\n                c += 1\\n        return(c)\\n```"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Why do you have a class there? You can get rid of that, it\\'s not Java. Return is not a function, it\\'s a keyword. `return c`"
                    },
                    {
                        "username": "Cong-GD",
                        "content": "Notice: u don't only have to return the value k but have to remove(not remove literal) duplicate from the array \"nums\" and put it in order from start to k."
                    }
                ]
            },
            {
                "id": 1906559,
                "content": [
                    {
                        "username": "Sourabhm25678",
                        "content": "I tried it with java 8. The following solution is working in my machine but not here.\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n       Set<Integer> s1 = Arrays.stream(nums).boxed()\\n        .collect(Collectors.toSet());\\n        return s1.size();\\n    }\\n}"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "A_gentle_coder",
                        "content": "Hi all, \\n\\nI have been writing the following solutions, which returns exactly the required k, yet not working:\\n\\n `class Solution:\\n    \\n    def removeDuplicates(self, nums: List[int]) -> int:\\n\\n        interval = range(1, len(nums))\\n\\n        for i in interval:\\n\\n            if nums[i - 1] == nums[i]:\\n\\n                nums[i - 1] = \"_\"\\n\\n        nums_only = [x for x in nums if x != \"_\"]\\n\\n        string_in_nums = [x for x in nums if x == \"_\"]\\n\\n        nums_only_sorted = sorted(nums_only, reverse = False)\\n\\n        nums = nums_only_sorted + string_in_nums\\n\\n        k = len(nums_only_sorted)\\n\\n        return k`\\n\\nnums is defined as required, and k as well. What am I missing? Anyone willing to help?\\n"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "andrewgraham",
                        "content": "Why is this wrong (python):\n\n`nums=list(set(nums))`\n`return len(nums)`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "user5428DY",
                        "content": "What is a real life example where you would need to create a solution to a problem like this? "
                    },
                    {
                        "username": "mayur1710hanwate",
                        "content": "Java\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        \\n        int count = nums.length;\\n        int n = nums.length;\\n\\n        int j = 0;\\n        for(int i=0;i<n-1;i++){\\n            if(nums[i] == nums[i+1]){\\n                nums[i] = Integer.MAX_VALUE;\\n                count--;\\n            }\\n        }\\n        Arrays.sort(nums);\\n\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "mayur1710hanwate",
                        "content": "My solution in java - O(n) time O(1) space\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        \\n        int count = nums.length;\\n        int n = nums.length;\\n\\n        int j = 0;\\n        for(int i=0;i<n-1;i++){\\n            if(nums[i] == nums[i+1]){\\n                nums[i] = Integer.MAX_VALUE;\\n                count--;\\n            }\\n        }\\n        Arrays.sort(nums);\\n\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "prathmeshdodia7",
                        "content": "can anyone tell me what is wrong in this code it passes the test case 1 but not in case2\\n\\n\\nimport java.util.ArrayList;\\nimport java.util.HashSet;\\n\\npublic class Solution {\\n    public static int removeDuplicates(int[] nums) {\\n        ArrayList<Integer> al = new ArrayList<>();\\n        HashSet<Integer> hs = new HashSet<>();\\n\\n        for (int i = 1; i < nums.length; i++) {\\n            if (!hs.contains(nums[i])) {\\n                hs.add(nums[i]++);\\n                al.add(nums[i]);\\n            }\\n        }\\n\\n        return al.size();\\n    }\\n}\\n\\n"
                    },
                    {
                        "username": "Dominik2208F",
                        "content": " List<Integer> lista = new ArrayList<>();\n        int index=-1;\n        for (int numbers : nums) {\n            if(!lista.contains(numbers)) {\n                lista.add(numbers);\n                index++;\n                nums[index] = numbers;\n            }\n        }\n\n            return index+1;\n\n    }"
                    },
                    {
                        "username": "vined",
                        "content": "Why does Python\\'s set() not work? I tried it on my PC and it worked fine"
                    },
                    {
                        "username": "dalviprasad",
                        "content": "Hi All, I am getting wrong answer when I try to run the below code, can someone help me understand where am I going wrong?\\n\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        c = 0\\n        output1 = []\\n        for i in range(0, len(nums)):\\n            if nums[i] not in output1:\\n                output1.append(nums[i])\\n                c += 1\\n        return(c)\\n```"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Why do you have a class there? You can get rid of that, it\\'s not Java. Return is not a function, it\\'s a keyword. `return c`"
                    },
                    {
                        "username": "Cong-GD",
                        "content": "Notice: u don't only have to return the value k but have to remove(not remove literal) duplicate from the array \"nums\" and put it in order from start to k."
                    }
                ]
            },
            {
                "id": 1902721,
                "content": [
                    {
                        "username": "Sourabhm25678",
                        "content": "I tried it with java 8. The following solution is working in my machine but not here.\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n       Set<Integer> s1 = Arrays.stream(nums).boxed()\\n        .collect(Collectors.toSet());\\n        return s1.size();\\n    }\\n}"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "A_gentle_coder",
                        "content": "Hi all, \\n\\nI have been writing the following solutions, which returns exactly the required k, yet not working:\\n\\n `class Solution:\\n    \\n    def removeDuplicates(self, nums: List[int]) -> int:\\n\\n        interval = range(1, len(nums))\\n\\n        for i in interval:\\n\\n            if nums[i - 1] == nums[i]:\\n\\n                nums[i - 1] = \"_\"\\n\\n        nums_only = [x for x in nums if x != \"_\"]\\n\\n        string_in_nums = [x for x in nums if x == \"_\"]\\n\\n        nums_only_sorted = sorted(nums_only, reverse = False)\\n\\n        nums = nums_only_sorted + string_in_nums\\n\\n        k = len(nums_only_sorted)\\n\\n        return k`\\n\\nnums is defined as required, and k as well. What am I missing? Anyone willing to help?\\n"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "andrewgraham",
                        "content": "Why is this wrong (python):\n\n`nums=list(set(nums))`\n`return len(nums)`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "user5428DY",
                        "content": "What is a real life example where you would need to create a solution to a problem like this? "
                    },
                    {
                        "username": "mayur1710hanwate",
                        "content": "Java\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        \\n        int count = nums.length;\\n        int n = nums.length;\\n\\n        int j = 0;\\n        for(int i=0;i<n-1;i++){\\n            if(nums[i] == nums[i+1]){\\n                nums[i] = Integer.MAX_VALUE;\\n                count--;\\n            }\\n        }\\n        Arrays.sort(nums);\\n\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "mayur1710hanwate",
                        "content": "My solution in java - O(n) time O(1) space\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        \\n        int count = nums.length;\\n        int n = nums.length;\\n\\n        int j = 0;\\n        for(int i=0;i<n-1;i++){\\n            if(nums[i] == nums[i+1]){\\n                nums[i] = Integer.MAX_VALUE;\\n                count--;\\n            }\\n        }\\n        Arrays.sort(nums);\\n\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "prathmeshdodia7",
                        "content": "can anyone tell me what is wrong in this code it passes the test case 1 but not in case2\\n\\n\\nimport java.util.ArrayList;\\nimport java.util.HashSet;\\n\\npublic class Solution {\\n    public static int removeDuplicates(int[] nums) {\\n        ArrayList<Integer> al = new ArrayList<>();\\n        HashSet<Integer> hs = new HashSet<>();\\n\\n        for (int i = 1; i < nums.length; i++) {\\n            if (!hs.contains(nums[i])) {\\n                hs.add(nums[i]++);\\n                al.add(nums[i]);\\n            }\\n        }\\n\\n        return al.size();\\n    }\\n}\\n\\n"
                    },
                    {
                        "username": "Dominik2208F",
                        "content": " List<Integer> lista = new ArrayList<>();\n        int index=-1;\n        for (int numbers : nums) {\n            if(!lista.contains(numbers)) {\n                lista.add(numbers);\n                index++;\n                nums[index] = numbers;\n            }\n        }\n\n            return index+1;\n\n    }"
                    },
                    {
                        "username": "vined",
                        "content": "Why does Python\\'s set() not work? I tried it on my PC and it worked fine"
                    },
                    {
                        "username": "dalviprasad",
                        "content": "Hi All, I am getting wrong answer when I try to run the below code, can someone help me understand where am I going wrong?\\n\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        c = 0\\n        output1 = []\\n        for i in range(0, len(nums)):\\n            if nums[i] not in output1:\\n                output1.append(nums[i])\\n                c += 1\\n        return(c)\\n```"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Why do you have a class there? You can get rid of that, it\\'s not Java. Return is not a function, it\\'s a keyword. `return c`"
                    },
                    {
                        "username": "Cong-GD",
                        "content": "Notice: u don't only have to return the value k but have to remove(not remove literal) duplicate from the array \"nums\" and put it in order from start to k."
                    }
                ]
            },
            {
                "id": 1899825,
                "content": [
                    {
                        "username": "Sourabhm25678",
                        "content": "I tried it with java 8. The following solution is working in my machine but not here.\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n       Set<Integer> s1 = Arrays.stream(nums).boxed()\\n        .collect(Collectors.toSet());\\n        return s1.size();\\n    }\\n}"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "A_gentle_coder",
                        "content": "Hi all, \\n\\nI have been writing the following solutions, which returns exactly the required k, yet not working:\\n\\n `class Solution:\\n    \\n    def removeDuplicates(self, nums: List[int]) -> int:\\n\\n        interval = range(1, len(nums))\\n\\n        for i in interval:\\n\\n            if nums[i - 1] == nums[i]:\\n\\n                nums[i - 1] = \"_\"\\n\\n        nums_only = [x for x in nums if x != \"_\"]\\n\\n        string_in_nums = [x for x in nums if x == \"_\"]\\n\\n        nums_only_sorted = sorted(nums_only, reverse = False)\\n\\n        nums = nums_only_sorted + string_in_nums\\n\\n        k = len(nums_only_sorted)\\n\\n        return k`\\n\\nnums is defined as required, and k as well. What am I missing? Anyone willing to help?\\n"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "andrewgraham",
                        "content": "Why is this wrong (python):\n\n`nums=list(set(nums))`\n`return len(nums)`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "user5428DY",
                        "content": "What is a real life example where you would need to create a solution to a problem like this? "
                    },
                    {
                        "username": "mayur1710hanwate",
                        "content": "Java\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        \\n        int count = nums.length;\\n        int n = nums.length;\\n\\n        int j = 0;\\n        for(int i=0;i<n-1;i++){\\n            if(nums[i] == nums[i+1]){\\n                nums[i] = Integer.MAX_VALUE;\\n                count--;\\n            }\\n        }\\n        Arrays.sort(nums);\\n\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "mayur1710hanwate",
                        "content": "My solution in java - O(n) time O(1) space\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        \\n        int count = nums.length;\\n        int n = nums.length;\\n\\n        int j = 0;\\n        for(int i=0;i<n-1;i++){\\n            if(nums[i] == nums[i+1]){\\n                nums[i] = Integer.MAX_VALUE;\\n                count--;\\n            }\\n        }\\n        Arrays.sort(nums);\\n\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "prathmeshdodia7",
                        "content": "can anyone tell me what is wrong in this code it passes the test case 1 but not in case2\\n\\n\\nimport java.util.ArrayList;\\nimport java.util.HashSet;\\n\\npublic class Solution {\\n    public static int removeDuplicates(int[] nums) {\\n        ArrayList<Integer> al = new ArrayList<>();\\n        HashSet<Integer> hs = new HashSet<>();\\n\\n        for (int i = 1; i < nums.length; i++) {\\n            if (!hs.contains(nums[i])) {\\n                hs.add(nums[i]++);\\n                al.add(nums[i]);\\n            }\\n        }\\n\\n        return al.size();\\n    }\\n}\\n\\n"
                    },
                    {
                        "username": "Dominik2208F",
                        "content": " List<Integer> lista = new ArrayList<>();\n        int index=-1;\n        for (int numbers : nums) {\n            if(!lista.contains(numbers)) {\n                lista.add(numbers);\n                index++;\n                nums[index] = numbers;\n            }\n        }\n\n            return index+1;\n\n    }"
                    },
                    {
                        "username": "vined",
                        "content": "Why does Python\\'s set() not work? I tried it on my PC and it worked fine"
                    },
                    {
                        "username": "dalviprasad",
                        "content": "Hi All, I am getting wrong answer when I try to run the below code, can someone help me understand where am I going wrong?\\n\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        c = 0\\n        output1 = []\\n        for i in range(0, len(nums)):\\n            if nums[i] not in output1:\\n                output1.append(nums[i])\\n                c += 1\\n        return(c)\\n```"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Why do you have a class there? You can get rid of that, it\\'s not Java. Return is not a function, it\\'s a keyword. `return c`"
                    },
                    {
                        "username": "Cong-GD",
                        "content": "Notice: u don't only have to return the value k but have to remove(not remove literal) duplicate from the array \"nums\" and put it in order from start to k."
                    }
                ]
            },
            {
                "id": 1898390,
                "content": [
                    {
                        "username": "Sourabhm25678",
                        "content": "I tried it with java 8. The following solution is working in my machine but not here.\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n       Set<Integer> s1 = Arrays.stream(nums).boxed()\\n        .collect(Collectors.toSet());\\n        return s1.size();\\n    }\\n}"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "A_gentle_coder",
                        "content": "Hi all, \\n\\nI have been writing the following solutions, which returns exactly the required k, yet not working:\\n\\n `class Solution:\\n    \\n    def removeDuplicates(self, nums: List[int]) -> int:\\n\\n        interval = range(1, len(nums))\\n\\n        for i in interval:\\n\\n            if nums[i - 1] == nums[i]:\\n\\n                nums[i - 1] = \"_\"\\n\\n        nums_only = [x for x in nums if x != \"_\"]\\n\\n        string_in_nums = [x for x in nums if x == \"_\"]\\n\\n        nums_only_sorted = sorted(nums_only, reverse = False)\\n\\n        nums = nums_only_sorted + string_in_nums\\n\\n        k = len(nums_only_sorted)\\n\\n        return k`\\n\\nnums is defined as required, and k as well. What am I missing? Anyone willing to help?\\n"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "andrewgraham",
                        "content": "Why is this wrong (python):\n\n`nums=list(set(nums))`\n`return len(nums)`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "user5428DY",
                        "content": "What is a real life example where you would need to create a solution to a problem like this? "
                    },
                    {
                        "username": "mayur1710hanwate",
                        "content": "Java\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        \\n        int count = nums.length;\\n        int n = nums.length;\\n\\n        int j = 0;\\n        for(int i=0;i<n-1;i++){\\n            if(nums[i] == nums[i+1]){\\n                nums[i] = Integer.MAX_VALUE;\\n                count--;\\n            }\\n        }\\n        Arrays.sort(nums);\\n\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "mayur1710hanwate",
                        "content": "My solution in java - O(n) time O(1) space\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        \\n        int count = nums.length;\\n        int n = nums.length;\\n\\n        int j = 0;\\n        for(int i=0;i<n-1;i++){\\n            if(nums[i] == nums[i+1]){\\n                nums[i] = Integer.MAX_VALUE;\\n                count--;\\n            }\\n        }\\n        Arrays.sort(nums);\\n\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "prathmeshdodia7",
                        "content": "can anyone tell me what is wrong in this code it passes the test case 1 but not in case2\\n\\n\\nimport java.util.ArrayList;\\nimport java.util.HashSet;\\n\\npublic class Solution {\\n    public static int removeDuplicates(int[] nums) {\\n        ArrayList<Integer> al = new ArrayList<>();\\n        HashSet<Integer> hs = new HashSet<>();\\n\\n        for (int i = 1; i < nums.length; i++) {\\n            if (!hs.contains(nums[i])) {\\n                hs.add(nums[i]++);\\n                al.add(nums[i]);\\n            }\\n        }\\n\\n        return al.size();\\n    }\\n}\\n\\n"
                    },
                    {
                        "username": "Dominik2208F",
                        "content": " List<Integer> lista = new ArrayList<>();\n        int index=-1;\n        for (int numbers : nums) {\n            if(!lista.contains(numbers)) {\n                lista.add(numbers);\n                index++;\n                nums[index] = numbers;\n            }\n        }\n\n            return index+1;\n\n    }"
                    },
                    {
                        "username": "vined",
                        "content": "Why does Python\\'s set() not work? I tried it on my PC and it worked fine"
                    },
                    {
                        "username": "dalviprasad",
                        "content": "Hi All, I am getting wrong answer when I try to run the below code, can someone help me understand where am I going wrong?\\n\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        c = 0\\n        output1 = []\\n        for i in range(0, len(nums)):\\n            if nums[i] not in output1:\\n                output1.append(nums[i])\\n                c += 1\\n        return(c)\\n```"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Why do you have a class there? You can get rid of that, it\\'s not Java. Return is not a function, it\\'s a keyword. `return c`"
                    },
                    {
                        "username": "Cong-GD",
                        "content": "Notice: u don't only have to return the value k but have to remove(not remove literal) duplicate from the array \"nums\" and put it in order from start to k."
                    }
                ]
            },
            {
                "id": 1894315,
                "content": [
                    {
                        "username": "Sourabhm25678",
                        "content": "I tried it with java 8. The following solution is working in my machine but not here.\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n       Set<Integer> s1 = Arrays.stream(nums).boxed()\\n        .collect(Collectors.toSet());\\n        return s1.size();\\n    }\\n}"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "A_gentle_coder",
                        "content": "Hi all, \\n\\nI have been writing the following solutions, which returns exactly the required k, yet not working:\\n\\n `class Solution:\\n    \\n    def removeDuplicates(self, nums: List[int]) -> int:\\n\\n        interval = range(1, len(nums))\\n\\n        for i in interval:\\n\\n            if nums[i - 1] == nums[i]:\\n\\n                nums[i - 1] = \"_\"\\n\\n        nums_only = [x for x in nums if x != \"_\"]\\n\\n        string_in_nums = [x for x in nums if x == \"_\"]\\n\\n        nums_only_sorted = sorted(nums_only, reverse = False)\\n\\n        nums = nums_only_sorted + string_in_nums\\n\\n        k = len(nums_only_sorted)\\n\\n        return k`\\n\\nnums is defined as required, and k as well. What am I missing? Anyone willing to help?\\n"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "andrewgraham",
                        "content": "Why is this wrong (python):\n\n`nums=list(set(nums))`\n`return len(nums)`"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length"
                    },
                    {
                        "username": "user5428DY",
                        "content": "What is a real life example where you would need to create a solution to a problem like this? "
                    },
                    {
                        "username": "mayur1710hanwate",
                        "content": "Java\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        \\n        int count = nums.length;\\n        int n = nums.length;\\n\\n        int j = 0;\\n        for(int i=0;i<n-1;i++){\\n            if(nums[i] == nums[i+1]){\\n                nums[i] = Integer.MAX_VALUE;\\n                count--;\\n            }\\n        }\\n        Arrays.sort(nums);\\n\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "mayur1710hanwate",
                        "content": "My solution in java - O(n) time O(1) space\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        \\n        int count = nums.length;\\n        int n = nums.length;\\n\\n        int j = 0;\\n        for(int i=0;i<n-1;i++){\\n            if(nums[i] == nums[i+1]){\\n                nums[i] = Integer.MAX_VALUE;\\n                count--;\\n            }\\n        }\\n        Arrays.sort(nums);\\n\\n        return count;\\n    }\\n}"
                    },
                    {
                        "username": "prathmeshdodia7",
                        "content": "can anyone tell me what is wrong in this code it passes the test case 1 but not in case2\\n\\n\\nimport java.util.ArrayList;\\nimport java.util.HashSet;\\n\\npublic class Solution {\\n    public static int removeDuplicates(int[] nums) {\\n        ArrayList<Integer> al = new ArrayList<>();\\n        HashSet<Integer> hs = new HashSet<>();\\n\\n        for (int i = 1; i < nums.length; i++) {\\n            if (!hs.contains(nums[i])) {\\n                hs.add(nums[i]++);\\n                al.add(nums[i]);\\n            }\\n        }\\n\\n        return al.size();\\n    }\\n}\\n\\n"
                    },
                    {
                        "username": "Dominik2208F",
                        "content": " List<Integer> lista = new ArrayList<>();\n        int index=-1;\n        for (int numbers : nums) {\n            if(!lista.contains(numbers)) {\n                lista.add(numbers);\n                index++;\n                nums[index] = numbers;\n            }\n        }\n\n            return index+1;\n\n    }"
                    },
                    {
                        "username": "vined",
                        "content": "Why does Python\\'s set() not work? I tried it on my PC and it worked fine"
                    },
                    {
                        "username": "dalviprasad",
                        "content": "Hi All, I am getting wrong answer when I try to run the below code, can someone help me understand where am I going wrong?\\n\\n```\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        c = 0\\n        output1 = []\\n        for i in range(0, len(nums)):\\n            if nums[i] not in output1:\\n                output1.append(nums[i])\\n                c += 1\\n        return(c)\\n```"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Why do you have a class there? You can get rid of that, it\\'s not Java. Return is not a function, it\\'s a keyword. `return c`"
                    },
                    {
                        "username": "Cong-GD",
                        "content": "Notice: u don't only have to return the value k but have to remove(not remove literal) duplicate from the array \"nums\" and put it in order from start to k."
                    }
                ]
            },
            {
                "id": 1891925,
                "content": [
                    {
                        "username": "joaocasarin",
                        "content": "I understand that if the given array is [0,0,1,1,1,2,2,3,3,4], I should remove\n1x 0\n2x 1\n1x 2\n1x 3\n\nCorrect?\n\nIf so, the result of amount of removed duplicates is 5, which is the sum of amount of removed of each different number.\nHowever, the tests fail for this code in the LeetCode console:\n\n    function removeDuplicates(nums: number[]): number {\n        const mapping = new Map<number, number>();\n        let count = 0;\n\n        for (let i = 0; i < nums.length; i++) {\n            const num = nums[i];\n            mapping.set(num, (mapping.get(num) || 0) + 1);\n        }\n\n        for (let [k, v] of mapping) {\n            count += v - 1;\n        }\n\n        return count;\n    }\n\nIt does its job when running with Jest, it returns correctly the number 5.... What is wrong, did I misunderstand the problem?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length Also that is not a good solution. And use a for...of."
                    },
                    {
                        "username": "AlexanderBaggett",
                        "content": "in C# this should have been `return nums.Distinct().Count();`\\n\\nBut this obvious solution to remove duplicates from a sorted array and then return it\\'s count doesn\\'t work.\\nWHY? Because this problem is horribly worded. Even the outputs in the result don\\'t make sense. We return an integer, so why on earth are arrays in the output from test cases? Doesn\\'t make sense."
                    },
                    {
                        "username": "rohitpandey006",
                        "content": "Hi can we solve this problem using set in java??"
                    },
                    {
                        "username": "HolyArseny",
                        "content": "Dirty task\\'s description"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "thanks for leet, I solved how sort and replace duplicates with \"_\". \nah, the task wasn't that? no problem, No, I didn't waste any time. Deal with it, author of this sh_t. :*\nHahahaha"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "The nonduplicates have to be at the start so you can do that as long as they are at the end. Also you have to mutate it and return the length"
                    },
                    {
                        "username": "Jaarabits",
                        "content": "I hate this website ."
                    },
                    {
                        "username": "RudranshShrivastava",
                        "content": "For those who cant return k, and nums\\nYou just have to return k"
                    },
                    {
                        "username": "user1640rw",
                        "content": "Empty temp array with length of source array -> nums =  stream distinct toArray, and remember nums.length to result -> elements of nums to temp in loop -> nums = temp\\n\\nnums = [1,1,2] -> output: [1, 1]\\n\\nhow? In IDEA it works according to given conditions."
                    },
                    {
                        "username": "Hypgnotic",
                        "content": "This problem is very confusing and worded oddly. I thought I had to return an array with the duplicates removed at first. However that was wrong and gave out an error. Then I tried just outputting the given len(nums) of the new list without the duplicates still wrong. However what worked was that the original list had to be mutated and altered to remove it\\'s duplicates and then output the len(nums)."
                    },
                    {
                        "username": "abhinav-23",
                        "content": "Question Title: Remove Duplicates from Sorted Array\\nDoes not matches what the code should do, as no duplicates are removed. Duplicates are just replaced by non-duplicate numbers."
                    }
                ]
            },
            {
                "id": 1890344,
                "content": [
                    {
                        "username": "joaocasarin",
                        "content": "I understand that if the given array is [0,0,1,1,1,2,2,3,3,4], I should remove\n1x 0\n2x 1\n1x 2\n1x 3\n\nCorrect?\n\nIf so, the result of amount of removed duplicates is 5, which is the sum of amount of removed of each different number.\nHowever, the tests fail for this code in the LeetCode console:\n\n    function removeDuplicates(nums: number[]): number {\n        const mapping = new Map<number, number>();\n        let count = 0;\n\n        for (let i = 0; i < nums.length; i++) {\n            const num = nums[i];\n            mapping.set(num, (mapping.get(num) || 0) + 1);\n        }\n\n        for (let [k, v] of mapping) {\n            count += v - 1;\n        }\n\n        return count;\n    }\n\nIt does its job when running with Jest, it returns correctly the number 5.... What is wrong, did I misunderstand the problem?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length Also that is not a good solution. And use a for...of."
                    },
                    {
                        "username": "AlexanderBaggett",
                        "content": "in C# this should have been `return nums.Distinct().Count();`\\n\\nBut this obvious solution to remove duplicates from a sorted array and then return it\\'s count doesn\\'t work.\\nWHY? Because this problem is horribly worded. Even the outputs in the result don\\'t make sense. We return an integer, so why on earth are arrays in the output from test cases? Doesn\\'t make sense."
                    },
                    {
                        "username": "rohitpandey006",
                        "content": "Hi can we solve this problem using set in java??"
                    },
                    {
                        "username": "HolyArseny",
                        "content": "Dirty task\\'s description"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "thanks for leet, I solved how sort and replace duplicates with \"_\". \nah, the task wasn't that? no problem, No, I didn't waste any time. Deal with it, author of this sh_t. :*\nHahahaha"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "The nonduplicates have to be at the start so you can do that as long as they are at the end. Also you have to mutate it and return the length"
                    },
                    {
                        "username": "Jaarabits",
                        "content": "I hate this website ."
                    },
                    {
                        "username": "RudranshShrivastava",
                        "content": "For those who cant return k, and nums\\nYou just have to return k"
                    },
                    {
                        "username": "user1640rw",
                        "content": "Empty temp array with length of source array -> nums =  stream distinct toArray, and remember nums.length to result -> elements of nums to temp in loop -> nums = temp\\n\\nnums = [1,1,2] -> output: [1, 1]\\n\\nhow? In IDEA it works according to given conditions."
                    },
                    {
                        "username": "Hypgnotic",
                        "content": "This problem is very confusing and worded oddly. I thought I had to return an array with the duplicates removed at first. However that was wrong and gave out an error. Then I tried just outputting the given len(nums) of the new list without the duplicates still wrong. However what worked was that the original list had to be mutated and altered to remove it\\'s duplicates and then output the len(nums)."
                    },
                    {
                        "username": "abhinav-23",
                        "content": "Question Title: Remove Duplicates from Sorted Array\\nDoes not matches what the code should do, as no duplicates are removed. Duplicates are just replaced by non-duplicate numbers."
                    }
                ]
            },
            {
                "id": 1889886,
                "content": [
                    {
                        "username": "joaocasarin",
                        "content": "I understand that if the given array is [0,0,1,1,1,2,2,3,3,4], I should remove\n1x 0\n2x 1\n1x 2\n1x 3\n\nCorrect?\n\nIf so, the result of amount of removed duplicates is 5, which is the sum of amount of removed of each different number.\nHowever, the tests fail for this code in the LeetCode console:\n\n    function removeDuplicates(nums: number[]): number {\n        const mapping = new Map<number, number>();\n        let count = 0;\n\n        for (let i = 0; i < nums.length; i++) {\n            const num = nums[i];\n            mapping.set(num, (mapping.get(num) || 0) + 1);\n        }\n\n        for (let [k, v] of mapping) {\n            count += v - 1;\n        }\n\n        return count;\n    }\n\nIt does its job when running with Jest, it returns correctly the number 5.... What is wrong, did I misunderstand the problem?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length Also that is not a good solution. And use a for...of."
                    },
                    {
                        "username": "AlexanderBaggett",
                        "content": "in C# this should have been `return nums.Distinct().Count();`\\n\\nBut this obvious solution to remove duplicates from a sorted array and then return it\\'s count doesn\\'t work.\\nWHY? Because this problem is horribly worded. Even the outputs in the result don\\'t make sense. We return an integer, so why on earth are arrays in the output from test cases? Doesn\\'t make sense."
                    },
                    {
                        "username": "rohitpandey006",
                        "content": "Hi can we solve this problem using set in java??"
                    },
                    {
                        "username": "HolyArseny",
                        "content": "Dirty task\\'s description"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "thanks for leet, I solved how sort and replace duplicates with \"_\". \nah, the task wasn't that? no problem, No, I didn't waste any time. Deal with it, author of this sh_t. :*\nHahahaha"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "The nonduplicates have to be at the start so you can do that as long as they are at the end. Also you have to mutate it and return the length"
                    },
                    {
                        "username": "Jaarabits",
                        "content": "I hate this website ."
                    },
                    {
                        "username": "RudranshShrivastava",
                        "content": "For those who cant return k, and nums\\nYou just have to return k"
                    },
                    {
                        "username": "user1640rw",
                        "content": "Empty temp array with length of source array -> nums =  stream distinct toArray, and remember nums.length to result -> elements of nums to temp in loop -> nums = temp\\n\\nnums = [1,1,2] -> output: [1, 1]\\n\\nhow? In IDEA it works according to given conditions."
                    },
                    {
                        "username": "Hypgnotic",
                        "content": "This problem is very confusing and worded oddly. I thought I had to return an array with the duplicates removed at first. However that was wrong and gave out an error. Then I tried just outputting the given len(nums) of the new list without the duplicates still wrong. However what worked was that the original list had to be mutated and altered to remove it\\'s duplicates and then output the len(nums)."
                    },
                    {
                        "username": "abhinav-23",
                        "content": "Question Title: Remove Duplicates from Sorted Array\\nDoes not matches what the code should do, as no duplicates are removed. Duplicates are just replaced by non-duplicate numbers."
                    }
                ]
            },
            {
                "id": 1887031,
                "content": [
                    {
                        "username": "joaocasarin",
                        "content": "I understand that if the given array is [0,0,1,1,1,2,2,3,3,4], I should remove\n1x 0\n2x 1\n1x 2\n1x 3\n\nCorrect?\n\nIf so, the result of amount of removed duplicates is 5, which is the sum of amount of removed of each different number.\nHowever, the tests fail for this code in the LeetCode console:\n\n    function removeDuplicates(nums: number[]): number {\n        const mapping = new Map<number, number>();\n        let count = 0;\n\n        for (let i = 0; i < nums.length; i++) {\n            const num = nums[i];\n            mapping.set(num, (mapping.get(num) || 0) + 1);\n        }\n\n        for (let [k, v] of mapping) {\n            count += v - 1;\n        }\n\n        return count;\n    }\n\nIt does its job when running with Jest, it returns correctly the number 5.... What is wrong, did I misunderstand the problem?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length Also that is not a good solution. And use a for...of."
                    },
                    {
                        "username": "AlexanderBaggett",
                        "content": "in C# this should have been `return nums.Distinct().Count();`\\n\\nBut this obvious solution to remove duplicates from a sorted array and then return it\\'s count doesn\\'t work.\\nWHY? Because this problem is horribly worded. Even the outputs in the result don\\'t make sense. We return an integer, so why on earth are arrays in the output from test cases? Doesn\\'t make sense."
                    },
                    {
                        "username": "rohitpandey006",
                        "content": "Hi can we solve this problem using set in java??"
                    },
                    {
                        "username": "HolyArseny",
                        "content": "Dirty task\\'s description"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "thanks for leet, I solved how sort and replace duplicates with \"_\". \nah, the task wasn't that? no problem, No, I didn't waste any time. Deal with it, author of this sh_t. :*\nHahahaha"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "The nonduplicates have to be at the start so you can do that as long as they are at the end. Also you have to mutate it and return the length"
                    },
                    {
                        "username": "Jaarabits",
                        "content": "I hate this website ."
                    },
                    {
                        "username": "RudranshShrivastava",
                        "content": "For those who cant return k, and nums\\nYou just have to return k"
                    },
                    {
                        "username": "user1640rw",
                        "content": "Empty temp array with length of source array -> nums =  stream distinct toArray, and remember nums.length to result -> elements of nums to temp in loop -> nums = temp\\n\\nnums = [1,1,2] -> output: [1, 1]\\n\\nhow? In IDEA it works according to given conditions."
                    },
                    {
                        "username": "Hypgnotic",
                        "content": "This problem is very confusing and worded oddly. I thought I had to return an array with the duplicates removed at first. However that was wrong and gave out an error. Then I tried just outputting the given len(nums) of the new list without the duplicates still wrong. However what worked was that the original list had to be mutated and altered to remove it\\'s duplicates and then output the len(nums)."
                    },
                    {
                        "username": "abhinav-23",
                        "content": "Question Title: Remove Duplicates from Sorted Array\\nDoes not matches what the code should do, as no duplicates are removed. Duplicates are just replaced by non-duplicate numbers."
                    }
                ]
            },
            {
                "id": 1882517,
                "content": [
                    {
                        "username": "joaocasarin",
                        "content": "I understand that if the given array is [0,0,1,1,1,2,2,3,3,4], I should remove\n1x 0\n2x 1\n1x 2\n1x 3\n\nCorrect?\n\nIf so, the result of amount of removed duplicates is 5, which is the sum of amount of removed of each different number.\nHowever, the tests fail for this code in the LeetCode console:\n\n    function removeDuplicates(nums: number[]): number {\n        const mapping = new Map<number, number>();\n        let count = 0;\n\n        for (let i = 0; i < nums.length; i++) {\n            const num = nums[i];\n            mapping.set(num, (mapping.get(num) || 0) + 1);\n        }\n\n        for (let [k, v] of mapping) {\n            count += v - 1;\n        }\n\n        return count;\n    }\n\nIt does its job when running with Jest, it returns correctly the number 5.... What is wrong, did I misunderstand the problem?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length Also that is not a good solution. And use a for...of."
                    },
                    {
                        "username": "AlexanderBaggett",
                        "content": "in C# this should have been `return nums.Distinct().Count();`\\n\\nBut this obvious solution to remove duplicates from a sorted array and then return it\\'s count doesn\\'t work.\\nWHY? Because this problem is horribly worded. Even the outputs in the result don\\'t make sense. We return an integer, so why on earth are arrays in the output from test cases? Doesn\\'t make sense."
                    },
                    {
                        "username": "rohitpandey006",
                        "content": "Hi can we solve this problem using set in java??"
                    },
                    {
                        "username": "HolyArseny",
                        "content": "Dirty task\\'s description"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "thanks for leet, I solved how sort and replace duplicates with \"_\". \nah, the task wasn't that? no problem, No, I didn't waste any time. Deal with it, author of this sh_t. :*\nHahahaha"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "The nonduplicates have to be at the start so you can do that as long as they are at the end. Also you have to mutate it and return the length"
                    },
                    {
                        "username": "Jaarabits",
                        "content": "I hate this website ."
                    },
                    {
                        "username": "RudranshShrivastava",
                        "content": "For those who cant return k, and nums\\nYou just have to return k"
                    },
                    {
                        "username": "user1640rw",
                        "content": "Empty temp array with length of source array -> nums =  stream distinct toArray, and remember nums.length to result -> elements of nums to temp in loop -> nums = temp\\n\\nnums = [1,1,2] -> output: [1, 1]\\n\\nhow? In IDEA it works according to given conditions."
                    },
                    {
                        "username": "Hypgnotic",
                        "content": "This problem is very confusing and worded oddly. I thought I had to return an array with the duplicates removed at first. However that was wrong and gave out an error. Then I tried just outputting the given len(nums) of the new list without the duplicates still wrong. However what worked was that the original list had to be mutated and altered to remove it\\'s duplicates and then output the len(nums)."
                    },
                    {
                        "username": "abhinav-23",
                        "content": "Question Title: Remove Duplicates from Sorted Array\\nDoes not matches what the code should do, as no duplicates are removed. Duplicates are just replaced by non-duplicate numbers."
                    }
                ]
            },
            {
                "id": 1880051,
                "content": [
                    {
                        "username": "joaocasarin",
                        "content": "I understand that if the given array is [0,0,1,1,1,2,2,3,3,4], I should remove\n1x 0\n2x 1\n1x 2\n1x 3\n\nCorrect?\n\nIf so, the result of amount of removed duplicates is 5, which is the sum of amount of removed of each different number.\nHowever, the tests fail for this code in the LeetCode console:\n\n    function removeDuplicates(nums: number[]): number {\n        const mapping = new Map<number, number>();\n        let count = 0;\n\n        for (let i = 0; i < nums.length; i++) {\n            const num = nums[i];\n            mapping.set(num, (mapping.get(num) || 0) + 1);\n        }\n\n        for (let [k, v] of mapping) {\n            count += v - 1;\n        }\n\n        return count;\n    }\n\nIt does its job when running with Jest, it returns correctly the number 5.... What is wrong, did I misunderstand the problem?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length Also that is not a good solution. And use a for...of."
                    },
                    {
                        "username": "AlexanderBaggett",
                        "content": "in C# this should have been `return nums.Distinct().Count();`\\n\\nBut this obvious solution to remove duplicates from a sorted array and then return it\\'s count doesn\\'t work.\\nWHY? Because this problem is horribly worded. Even the outputs in the result don\\'t make sense. We return an integer, so why on earth are arrays in the output from test cases? Doesn\\'t make sense."
                    },
                    {
                        "username": "rohitpandey006",
                        "content": "Hi can we solve this problem using set in java??"
                    },
                    {
                        "username": "HolyArseny",
                        "content": "Dirty task\\'s description"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "thanks for leet, I solved how sort and replace duplicates with \"_\". \nah, the task wasn't that? no problem, No, I didn't waste any time. Deal with it, author of this sh_t. :*\nHahahaha"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "The nonduplicates have to be at the start so you can do that as long as they are at the end. Also you have to mutate it and return the length"
                    },
                    {
                        "username": "Jaarabits",
                        "content": "I hate this website ."
                    },
                    {
                        "username": "RudranshShrivastava",
                        "content": "For those who cant return k, and nums\\nYou just have to return k"
                    },
                    {
                        "username": "user1640rw",
                        "content": "Empty temp array with length of source array -> nums =  stream distinct toArray, and remember nums.length to result -> elements of nums to temp in loop -> nums = temp\\n\\nnums = [1,1,2] -> output: [1, 1]\\n\\nhow? In IDEA it works according to given conditions."
                    },
                    {
                        "username": "Hypgnotic",
                        "content": "This problem is very confusing and worded oddly. I thought I had to return an array with the duplicates removed at first. However that was wrong and gave out an error. Then I tried just outputting the given len(nums) of the new list without the duplicates still wrong. However what worked was that the original list had to be mutated and altered to remove it\\'s duplicates and then output the len(nums)."
                    },
                    {
                        "username": "abhinav-23",
                        "content": "Question Title: Remove Duplicates from Sorted Array\\nDoes not matches what the code should do, as no duplicates are removed. Duplicates are just replaced by non-duplicate numbers."
                    }
                ]
            },
            {
                "id": 1874967,
                "content": [
                    {
                        "username": "joaocasarin",
                        "content": "I understand that if the given array is [0,0,1,1,1,2,2,3,3,4], I should remove\n1x 0\n2x 1\n1x 2\n1x 3\n\nCorrect?\n\nIf so, the result of amount of removed duplicates is 5, which is the sum of amount of removed of each different number.\nHowever, the tests fail for this code in the LeetCode console:\n\n    function removeDuplicates(nums: number[]): number {\n        const mapping = new Map<number, number>();\n        let count = 0;\n\n        for (let i = 0; i < nums.length; i++) {\n            const num = nums[i];\n            mapping.set(num, (mapping.get(num) || 0) + 1);\n        }\n\n        for (let [k, v] of mapping) {\n            count += v - 1;\n        }\n\n        return count;\n    }\n\nIt does its job when running with Jest, it returns correctly the number 5.... What is wrong, did I misunderstand the problem?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length Also that is not a good solution. And use a for...of."
                    },
                    {
                        "username": "AlexanderBaggett",
                        "content": "in C# this should have been `return nums.Distinct().Count();`\\n\\nBut this obvious solution to remove duplicates from a sorted array and then return it\\'s count doesn\\'t work.\\nWHY? Because this problem is horribly worded. Even the outputs in the result don\\'t make sense. We return an integer, so why on earth are arrays in the output from test cases? Doesn\\'t make sense."
                    },
                    {
                        "username": "rohitpandey006",
                        "content": "Hi can we solve this problem using set in java??"
                    },
                    {
                        "username": "HolyArseny",
                        "content": "Dirty task\\'s description"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "thanks for leet, I solved how sort and replace duplicates with \"_\". \nah, the task wasn't that? no problem, No, I didn't waste any time. Deal with it, author of this sh_t. :*\nHahahaha"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "The nonduplicates have to be at the start so you can do that as long as they are at the end. Also you have to mutate it and return the length"
                    },
                    {
                        "username": "Jaarabits",
                        "content": "I hate this website ."
                    },
                    {
                        "username": "RudranshShrivastava",
                        "content": "For those who cant return k, and nums\\nYou just have to return k"
                    },
                    {
                        "username": "user1640rw",
                        "content": "Empty temp array with length of source array -> nums =  stream distinct toArray, and remember nums.length to result -> elements of nums to temp in loop -> nums = temp\\n\\nnums = [1,1,2] -> output: [1, 1]\\n\\nhow? In IDEA it works according to given conditions."
                    },
                    {
                        "username": "Hypgnotic",
                        "content": "This problem is very confusing and worded oddly. I thought I had to return an array with the duplicates removed at first. However that was wrong and gave out an error. Then I tried just outputting the given len(nums) of the new list without the duplicates still wrong. However what worked was that the original list had to be mutated and altered to remove it\\'s duplicates and then output the len(nums)."
                    },
                    {
                        "username": "abhinav-23",
                        "content": "Question Title: Remove Duplicates from Sorted Array\\nDoes not matches what the code should do, as no duplicates are removed. Duplicates are just replaced by non-duplicate numbers."
                    }
                ]
            },
            {
                "id": 1873482,
                "content": [
                    {
                        "username": "joaocasarin",
                        "content": "I understand that if the given array is [0,0,1,1,1,2,2,3,3,4], I should remove\n1x 0\n2x 1\n1x 2\n1x 3\n\nCorrect?\n\nIf so, the result of amount of removed duplicates is 5, which is the sum of amount of removed of each different number.\nHowever, the tests fail for this code in the LeetCode console:\n\n    function removeDuplicates(nums: number[]): number {\n        const mapping = new Map<number, number>();\n        let count = 0;\n\n        for (let i = 0; i < nums.length; i++) {\n            const num = nums[i];\n            mapping.set(num, (mapping.get(num) || 0) + 1);\n        }\n\n        for (let [k, v] of mapping) {\n            count += v - 1;\n        }\n\n        return count;\n    }\n\nIt does its job when running with Jest, it returns correctly the number 5.... What is wrong, did I misunderstand the problem?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length Also that is not a good solution. And use a for...of."
                    },
                    {
                        "username": "AlexanderBaggett",
                        "content": "in C# this should have been `return nums.Distinct().Count();`\\n\\nBut this obvious solution to remove duplicates from a sorted array and then return it\\'s count doesn\\'t work.\\nWHY? Because this problem is horribly worded. Even the outputs in the result don\\'t make sense. We return an integer, so why on earth are arrays in the output from test cases? Doesn\\'t make sense."
                    },
                    {
                        "username": "rohitpandey006",
                        "content": "Hi can we solve this problem using set in java??"
                    },
                    {
                        "username": "HolyArseny",
                        "content": "Dirty task\\'s description"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "thanks for leet, I solved how sort and replace duplicates with \"_\". \nah, the task wasn't that? no problem, No, I didn't waste any time. Deal with it, author of this sh_t. :*\nHahahaha"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "The nonduplicates have to be at the start so you can do that as long as they are at the end. Also you have to mutate it and return the length"
                    },
                    {
                        "username": "Jaarabits",
                        "content": "I hate this website ."
                    },
                    {
                        "username": "RudranshShrivastava",
                        "content": "For those who cant return k, and nums\\nYou just have to return k"
                    },
                    {
                        "username": "user1640rw",
                        "content": "Empty temp array with length of source array -> nums =  stream distinct toArray, and remember nums.length to result -> elements of nums to temp in loop -> nums = temp\\n\\nnums = [1,1,2] -> output: [1, 1]\\n\\nhow? In IDEA it works according to given conditions."
                    },
                    {
                        "username": "Hypgnotic",
                        "content": "This problem is very confusing and worded oddly. I thought I had to return an array with the duplicates removed at first. However that was wrong and gave out an error. Then I tried just outputting the given len(nums) of the new list without the duplicates still wrong. However what worked was that the original list had to be mutated and altered to remove it\\'s duplicates and then output the len(nums)."
                    },
                    {
                        "username": "abhinav-23",
                        "content": "Question Title: Remove Duplicates from Sorted Array\\nDoes not matches what the code should do, as no duplicates are removed. Duplicates are just replaced by non-duplicate numbers."
                    }
                ]
            },
            {
                "id": 1872711,
                "content": [
                    {
                        "username": "joaocasarin",
                        "content": "I understand that if the given array is [0,0,1,1,1,2,2,3,3,4], I should remove\n1x 0\n2x 1\n1x 2\n1x 3\n\nCorrect?\n\nIf so, the result of amount of removed duplicates is 5, which is the sum of amount of removed of each different number.\nHowever, the tests fail for this code in the LeetCode console:\n\n    function removeDuplicates(nums: number[]): number {\n        const mapping = new Map<number, number>();\n        let count = 0;\n\n        for (let i = 0; i < nums.length; i++) {\n            const num = nums[i];\n            mapping.set(num, (mapping.get(num) || 0) + 1);\n        }\n\n        for (let [k, v] of mapping) {\n            count += v - 1;\n        }\n\n        return count;\n    }\n\nIt does its job when running with Jest, it returns correctly the number 5.... What is wrong, did I misunderstand the problem?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length Also that is not a good solution. And use a for...of."
                    },
                    {
                        "username": "AlexanderBaggett",
                        "content": "in C# this should have been `return nums.Distinct().Count();`\\n\\nBut this obvious solution to remove duplicates from a sorted array and then return it\\'s count doesn\\'t work.\\nWHY? Because this problem is horribly worded. Even the outputs in the result don\\'t make sense. We return an integer, so why on earth are arrays in the output from test cases? Doesn\\'t make sense."
                    },
                    {
                        "username": "rohitpandey006",
                        "content": "Hi can we solve this problem using set in java??"
                    },
                    {
                        "username": "HolyArseny",
                        "content": "Dirty task\\'s description"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "thanks for leet, I solved how sort and replace duplicates with \"_\". \nah, the task wasn't that? no problem, No, I didn't waste any time. Deal with it, author of this sh_t. :*\nHahahaha"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "The nonduplicates have to be at the start so you can do that as long as they are at the end. Also you have to mutate it and return the length"
                    },
                    {
                        "username": "Jaarabits",
                        "content": "I hate this website ."
                    },
                    {
                        "username": "RudranshShrivastava",
                        "content": "For those who cant return k, and nums\\nYou just have to return k"
                    },
                    {
                        "username": "user1640rw",
                        "content": "Empty temp array with length of source array -> nums =  stream distinct toArray, and remember nums.length to result -> elements of nums to temp in loop -> nums = temp\\n\\nnums = [1,1,2] -> output: [1, 1]\\n\\nhow? In IDEA it works according to given conditions."
                    },
                    {
                        "username": "Hypgnotic",
                        "content": "This problem is very confusing and worded oddly. I thought I had to return an array with the duplicates removed at first. However that was wrong and gave out an error. Then I tried just outputting the given len(nums) of the new list without the duplicates still wrong. However what worked was that the original list had to be mutated and altered to remove it\\'s duplicates and then output the len(nums)."
                    },
                    {
                        "username": "abhinav-23",
                        "content": "Question Title: Remove Duplicates from Sorted Array\\nDoes not matches what the code should do, as no duplicates are removed. Duplicates are just replaced by non-duplicate numbers."
                    }
                ]
            },
            {
                "id": 1872433,
                "content": [
                    {
                        "username": "joaocasarin",
                        "content": "I understand that if the given array is [0,0,1,1,1,2,2,3,3,4], I should remove\n1x 0\n2x 1\n1x 2\n1x 3\n\nCorrect?\n\nIf so, the result of amount of removed duplicates is 5, which is the sum of amount of removed of each different number.\nHowever, the tests fail for this code in the LeetCode console:\n\n    function removeDuplicates(nums: number[]): number {\n        const mapping = new Map<number, number>();\n        let count = 0;\n\n        for (let i = 0; i < nums.length; i++) {\n            const num = nums[i];\n            mapping.set(num, (mapping.get(num) || 0) + 1);\n        }\n\n        for (let [k, v] of mapping) {\n            count += v - 1;\n        }\n\n        return count;\n    }\n\nIt does its job when running with Jest, it returns correctly the number 5.... What is wrong, did I misunderstand the problem?"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "You have to mutate it and return the length Also that is not a good solution. And use a for...of."
                    },
                    {
                        "username": "AlexanderBaggett",
                        "content": "in C# this should have been `return nums.Distinct().Count();`\\n\\nBut this obvious solution to remove duplicates from a sorted array and then return it\\'s count doesn\\'t work.\\nWHY? Because this problem is horribly worded. Even the outputs in the result don\\'t make sense. We return an integer, so why on earth are arrays in the output from test cases? Doesn\\'t make sense."
                    },
                    {
                        "username": "rohitpandey006",
                        "content": "Hi can we solve this problem using set in java??"
                    },
                    {
                        "username": "HolyArseny",
                        "content": "Dirty task\\'s description"
                    },
                    {
                        "username": "a_andreasian",
                        "content": "thanks for leet, I solved how sort and replace duplicates with \"_\". \nah, the task wasn't that? no problem, No, I didn't waste any time. Deal with it, author of this sh_t. :*\nHahahaha"
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "The nonduplicates have to be at the start so you can do that as long as they are at the end. Also you have to mutate it and return the length"
                    },
                    {
                        "username": "Jaarabits",
                        "content": "I hate this website ."
                    },
                    {
                        "username": "RudranshShrivastava",
                        "content": "For those who cant return k, and nums\\nYou just have to return k"
                    },
                    {
                        "username": "user1640rw",
                        "content": "Empty temp array with length of source array -> nums =  stream distinct toArray, and remember nums.length to result -> elements of nums to temp in loop -> nums = temp\\n\\nnums = [1,1,2] -> output: [1, 1]\\n\\nhow? In IDEA it works according to given conditions."
                    },
                    {
                        "username": "Hypgnotic",
                        "content": "This problem is very confusing and worded oddly. I thought I had to return an array with the duplicates removed at first. However that was wrong and gave out an error. Then I tried just outputting the given len(nums) of the new list without the duplicates still wrong. However what worked was that the original list had to be mutated and altered to remove it\\'s duplicates and then output the len(nums)."
                    },
                    {
                        "username": "abhinav-23",
                        "content": "Question Title: Remove Duplicates from Sorted Array\\nDoes not matches what the code should do, as no duplicates are removed. Duplicates are just replaced by non-duplicate numbers."
                    }
                ]
            },
            {
                "id": 1872241,
                "content": [
                    {
                        "username": "its-raj3",
                        "content": "It\\'s become a really easy type of question , once you have done it before(this type of)."
                    },
                    {
                        "username": "sciguy09",
                        "content": "**Update:** I found out the problem with my code, thanks to [Samwise on StackOverflow](https://stackoverflow.com/a/76075745/8097585). I did `nums = []` before appending and as I understand, it rebinded the local variable `nums` that no longer pointed to the original one. This is solved by doing `nums.clear()` and the program works on $$O(nlogn)$$ time complexity if everything else is the same.\n\nHere is another two liner solution:\n\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n---\n\nI'm not able to pass a lot of testcases. I ran the function as well as my implementation of the code that they say they will use to judge on my local machine and found out that the problem is that `nums` is not updated outside the function `removeDuplicates()` when it is is being called but it is updating within the function. Why is that? Aren't python lists called by assignment when passed in a function?\n\n```\ndef removeDuplicates(nums):\n    nums_ = set(nums)\n    nums = []\n    for i in nums_:\n        nums.append(i)\n    print(nums)\n    # not working even if I do nums = list(set(nums)) instead of all lines above\n    return len(nums)\n\nnums = [1,1,2]\nexpectedNums = [1,2]\n\nk = removeDuplicates(nums)\nif k != len(expectedNums):\n    print(False)\nfor i in range(k):\n    if nums[i] != expectedNums[i]:\n        print(False)\n        print(nums, expectedNums)\n        break\n```\n\n> **Output:**\n> [1, 2]\n> False\n> [1, 1, 2] [1, 2]\n\nEarlier I had used `nums = list(set(nums))` instead of emptying the list and appending all unique elements but even that wasn't working."
                    },
                    {
                        "username": "idklol8",
                        "content": "I\\'m not that familiar with Python, but they\\'re wanting you to modify the values in nums without creating a new array. Using set defeats the purpose of the assignment."
                    },
                    {
                        "username": "shiva-student",
                        "content": "Can you explain why one-liner doesn\\'t work? (using set function)"
                    },
                    {
                        "username": "sciguy09",
                        "content": "[@idklol8](/idklol8) you can do that with two lines:\n\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n[Courtesy: Samwise on Stackoverflow](https://stackoverflow.com/a/76075745/8097585)"
                    },
                    {
                        "username": "sciguy09",
                        "content": "My two liner worked:\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n[Courtesy: Samwise on Stackoverflow](https://stackoverflow.com/a/76075745/8097585)"
                    },
                    {
                        "username": "idklol8",
                        "content": "You need to remove the duplicates from the original array you\\'re given without creating a new one. "
                    },
                    {
                        "username": "Syed_Waseem",
                        "content": "In this question we have to modify the given array such that all unique elements should be at front.\\nJAVA solution :- \\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int k = nums.length;\\n        int i = 0, j = 1;\\n        while(j < nums.length) {\\n            if(nums[i] == nums[j]) {\\n                k--;\\n                j++;\\n            } else{\\n                nums[i+1] = nums[j];\\n                i++;\\n                ++j;\\n            }\\n        }\\n        return k;\\n    }\\n}"
                    },
                    {
                        "username": "WayneHe1221",
                        "content": "This problem seems really weird. The code asked us to return a Int value, but result output display the array given by param. \nIf you are finding the solution, please just try to change the value in array and make it non-duplicated.\nAnd the Int value you returned means the output will split the array from 0 until {your result}. "
                    },
                    {
                        "username": "Okpatu",
                        "content": "Examples are misleading "
                    },
                    {
                        "username": "joeantol",
                        "content": "Something is wrong. As a test for Case 1 I did:\\n\\n` def removeDuplicates(self, nums: List[int]) -> int:\\n\\n        nums = [1,2]\\n        return len(nums)`\\n\\nThe rig claims my output is: [1,1] and therefore incorrect.\\n\\nYet my answer IS correct for Case 1\\n\\nWhat am I missing?"
                    },
                    {
                        "username": "cvollrath97",
                        "content": "This question is simply not worth solving."
                    },
                    {
                        "username": "its-raj3",
                        "content": "it is."
                    },
                    {
                        "username": "antonMechEngineer",
                        "content": "Why if i am testing in my JDK everythink works correct, but litcode execute wrong? "
                    },
                    {
                        "username": "tokeeffe9",
                        "content": "I\\'ve seen solutions but I don\\'t really understand how we can change the array in our method without returning that array.\\nIf we don\\'t return the new  array without duplicates, nums is still the same in the main call"
                    }
                ]
            },
            {
                "id": 1870333,
                "content": [
                    {
                        "username": "its-raj3",
                        "content": "It\\'s become a really easy type of question , once you have done it before(this type of)."
                    },
                    {
                        "username": "sciguy09",
                        "content": "**Update:** I found out the problem with my code, thanks to [Samwise on StackOverflow](https://stackoverflow.com/a/76075745/8097585). I did `nums = []` before appending and as I understand, it rebinded the local variable `nums` that no longer pointed to the original one. This is solved by doing `nums.clear()` and the program works on $$O(nlogn)$$ time complexity if everything else is the same.\n\nHere is another two liner solution:\n\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n---\n\nI'm not able to pass a lot of testcases. I ran the function as well as my implementation of the code that they say they will use to judge on my local machine and found out that the problem is that `nums` is not updated outside the function `removeDuplicates()` when it is is being called but it is updating within the function. Why is that? Aren't python lists called by assignment when passed in a function?\n\n```\ndef removeDuplicates(nums):\n    nums_ = set(nums)\n    nums = []\n    for i in nums_:\n        nums.append(i)\n    print(nums)\n    # not working even if I do nums = list(set(nums)) instead of all lines above\n    return len(nums)\n\nnums = [1,1,2]\nexpectedNums = [1,2]\n\nk = removeDuplicates(nums)\nif k != len(expectedNums):\n    print(False)\nfor i in range(k):\n    if nums[i] != expectedNums[i]:\n        print(False)\n        print(nums, expectedNums)\n        break\n```\n\n> **Output:**\n> [1, 2]\n> False\n> [1, 1, 2] [1, 2]\n\nEarlier I had used `nums = list(set(nums))` instead of emptying the list and appending all unique elements but even that wasn't working."
                    },
                    {
                        "username": "idklol8",
                        "content": "I\\'m not that familiar with Python, but they\\'re wanting you to modify the values in nums without creating a new array. Using set defeats the purpose of the assignment."
                    },
                    {
                        "username": "shiva-student",
                        "content": "Can you explain why one-liner doesn\\'t work? (using set function)"
                    },
                    {
                        "username": "sciguy09",
                        "content": "[@idklol8](/idklol8) you can do that with two lines:\n\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n[Courtesy: Samwise on Stackoverflow](https://stackoverflow.com/a/76075745/8097585)"
                    },
                    {
                        "username": "sciguy09",
                        "content": "My two liner worked:\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n[Courtesy: Samwise on Stackoverflow](https://stackoverflow.com/a/76075745/8097585)"
                    },
                    {
                        "username": "idklol8",
                        "content": "You need to remove the duplicates from the original array you\\'re given without creating a new one. "
                    },
                    {
                        "username": "Syed_Waseem",
                        "content": "In this question we have to modify the given array such that all unique elements should be at front.\\nJAVA solution :- \\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int k = nums.length;\\n        int i = 0, j = 1;\\n        while(j < nums.length) {\\n            if(nums[i] == nums[j]) {\\n                k--;\\n                j++;\\n            } else{\\n                nums[i+1] = nums[j];\\n                i++;\\n                ++j;\\n            }\\n        }\\n        return k;\\n    }\\n}"
                    },
                    {
                        "username": "WayneHe1221",
                        "content": "This problem seems really weird. The code asked us to return a Int value, but result output display the array given by param. \nIf you are finding the solution, please just try to change the value in array and make it non-duplicated.\nAnd the Int value you returned means the output will split the array from 0 until {your result}. "
                    },
                    {
                        "username": "Okpatu",
                        "content": "Examples are misleading "
                    },
                    {
                        "username": "joeantol",
                        "content": "Something is wrong. As a test for Case 1 I did:\\n\\n` def removeDuplicates(self, nums: List[int]) -> int:\\n\\n        nums = [1,2]\\n        return len(nums)`\\n\\nThe rig claims my output is: [1,1] and therefore incorrect.\\n\\nYet my answer IS correct for Case 1\\n\\nWhat am I missing?"
                    },
                    {
                        "username": "cvollrath97",
                        "content": "This question is simply not worth solving."
                    },
                    {
                        "username": "its-raj3",
                        "content": "it is."
                    },
                    {
                        "username": "antonMechEngineer",
                        "content": "Why if i am testing in my JDK everythink works correct, but litcode execute wrong? "
                    },
                    {
                        "username": "tokeeffe9",
                        "content": "I\\'ve seen solutions but I don\\'t really understand how we can change the array in our method without returning that array.\\nIf we don\\'t return the new  array without duplicates, nums is still the same in the main call"
                    }
                ]
            },
            {
                "id": 1870160,
                "content": [
                    {
                        "username": "its-raj3",
                        "content": "It\\'s become a really easy type of question , once you have done it before(this type of)."
                    },
                    {
                        "username": "sciguy09",
                        "content": "**Update:** I found out the problem with my code, thanks to [Samwise on StackOverflow](https://stackoverflow.com/a/76075745/8097585). I did `nums = []` before appending and as I understand, it rebinded the local variable `nums` that no longer pointed to the original one. This is solved by doing `nums.clear()` and the program works on $$O(nlogn)$$ time complexity if everything else is the same.\n\nHere is another two liner solution:\n\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n---\n\nI'm not able to pass a lot of testcases. I ran the function as well as my implementation of the code that they say they will use to judge on my local machine and found out that the problem is that `nums` is not updated outside the function `removeDuplicates()` when it is is being called but it is updating within the function. Why is that? Aren't python lists called by assignment when passed in a function?\n\n```\ndef removeDuplicates(nums):\n    nums_ = set(nums)\n    nums = []\n    for i in nums_:\n        nums.append(i)\n    print(nums)\n    # not working even if I do nums = list(set(nums)) instead of all lines above\n    return len(nums)\n\nnums = [1,1,2]\nexpectedNums = [1,2]\n\nk = removeDuplicates(nums)\nif k != len(expectedNums):\n    print(False)\nfor i in range(k):\n    if nums[i] != expectedNums[i]:\n        print(False)\n        print(nums, expectedNums)\n        break\n```\n\n> **Output:**\n> [1, 2]\n> False\n> [1, 1, 2] [1, 2]\n\nEarlier I had used `nums = list(set(nums))` instead of emptying the list and appending all unique elements but even that wasn't working."
                    },
                    {
                        "username": "idklol8",
                        "content": "I\\'m not that familiar with Python, but they\\'re wanting you to modify the values in nums without creating a new array. Using set defeats the purpose of the assignment."
                    },
                    {
                        "username": "shiva-student",
                        "content": "Can you explain why one-liner doesn\\'t work? (using set function)"
                    },
                    {
                        "username": "sciguy09",
                        "content": "[@idklol8](/idklol8) you can do that with two lines:\n\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n[Courtesy: Samwise on Stackoverflow](https://stackoverflow.com/a/76075745/8097585)"
                    },
                    {
                        "username": "sciguy09",
                        "content": "My two liner worked:\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n[Courtesy: Samwise on Stackoverflow](https://stackoverflow.com/a/76075745/8097585)"
                    },
                    {
                        "username": "idklol8",
                        "content": "You need to remove the duplicates from the original array you\\'re given without creating a new one. "
                    },
                    {
                        "username": "Syed_Waseem",
                        "content": "In this question we have to modify the given array such that all unique elements should be at front.\\nJAVA solution :- \\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int k = nums.length;\\n        int i = 0, j = 1;\\n        while(j < nums.length) {\\n            if(nums[i] == nums[j]) {\\n                k--;\\n                j++;\\n            } else{\\n                nums[i+1] = nums[j];\\n                i++;\\n                ++j;\\n            }\\n        }\\n        return k;\\n    }\\n}"
                    },
                    {
                        "username": "WayneHe1221",
                        "content": "This problem seems really weird. The code asked us to return a Int value, but result output display the array given by param. \nIf you are finding the solution, please just try to change the value in array and make it non-duplicated.\nAnd the Int value you returned means the output will split the array from 0 until {your result}. "
                    },
                    {
                        "username": "Okpatu",
                        "content": "Examples are misleading "
                    },
                    {
                        "username": "joeantol",
                        "content": "Something is wrong. As a test for Case 1 I did:\\n\\n` def removeDuplicates(self, nums: List[int]) -> int:\\n\\n        nums = [1,2]\\n        return len(nums)`\\n\\nThe rig claims my output is: [1,1] and therefore incorrect.\\n\\nYet my answer IS correct for Case 1\\n\\nWhat am I missing?"
                    },
                    {
                        "username": "cvollrath97",
                        "content": "This question is simply not worth solving."
                    },
                    {
                        "username": "its-raj3",
                        "content": "it is."
                    },
                    {
                        "username": "antonMechEngineer",
                        "content": "Why if i am testing in my JDK everythink works correct, but litcode execute wrong? "
                    },
                    {
                        "username": "tokeeffe9",
                        "content": "I\\'ve seen solutions but I don\\'t really understand how we can change the array in our method without returning that array.\\nIf we don\\'t return the new  array without duplicates, nums is still the same in the main call"
                    }
                ]
            },
            {
                "id": 1869490,
                "content": [
                    {
                        "username": "its-raj3",
                        "content": "It\\'s become a really easy type of question , once you have done it before(this type of)."
                    },
                    {
                        "username": "sciguy09",
                        "content": "**Update:** I found out the problem with my code, thanks to [Samwise on StackOverflow](https://stackoverflow.com/a/76075745/8097585). I did `nums = []` before appending and as I understand, it rebinded the local variable `nums` that no longer pointed to the original one. This is solved by doing `nums.clear()` and the program works on $$O(nlogn)$$ time complexity if everything else is the same.\n\nHere is another two liner solution:\n\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n---\n\nI'm not able to pass a lot of testcases. I ran the function as well as my implementation of the code that they say they will use to judge on my local machine and found out that the problem is that `nums` is not updated outside the function `removeDuplicates()` when it is is being called but it is updating within the function. Why is that? Aren't python lists called by assignment when passed in a function?\n\n```\ndef removeDuplicates(nums):\n    nums_ = set(nums)\n    nums = []\n    for i in nums_:\n        nums.append(i)\n    print(nums)\n    # not working even if I do nums = list(set(nums)) instead of all lines above\n    return len(nums)\n\nnums = [1,1,2]\nexpectedNums = [1,2]\n\nk = removeDuplicates(nums)\nif k != len(expectedNums):\n    print(False)\nfor i in range(k):\n    if nums[i] != expectedNums[i]:\n        print(False)\n        print(nums, expectedNums)\n        break\n```\n\n> **Output:**\n> [1, 2]\n> False\n> [1, 1, 2] [1, 2]\n\nEarlier I had used `nums = list(set(nums))` instead of emptying the list and appending all unique elements but even that wasn't working."
                    },
                    {
                        "username": "idklol8",
                        "content": "I\\'m not that familiar with Python, but they\\'re wanting you to modify the values in nums without creating a new array. Using set defeats the purpose of the assignment."
                    },
                    {
                        "username": "shiva-student",
                        "content": "Can you explain why one-liner doesn\\'t work? (using set function)"
                    },
                    {
                        "username": "sciguy09",
                        "content": "[@idklol8](/idklol8) you can do that with two lines:\n\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n[Courtesy: Samwise on Stackoverflow](https://stackoverflow.com/a/76075745/8097585)"
                    },
                    {
                        "username": "sciguy09",
                        "content": "My two liner worked:\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n[Courtesy: Samwise on Stackoverflow](https://stackoverflow.com/a/76075745/8097585)"
                    },
                    {
                        "username": "idklol8",
                        "content": "You need to remove the duplicates from the original array you\\'re given without creating a new one. "
                    },
                    {
                        "username": "Syed_Waseem",
                        "content": "In this question we have to modify the given array such that all unique elements should be at front.\\nJAVA solution :- \\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int k = nums.length;\\n        int i = 0, j = 1;\\n        while(j < nums.length) {\\n            if(nums[i] == nums[j]) {\\n                k--;\\n                j++;\\n            } else{\\n                nums[i+1] = nums[j];\\n                i++;\\n                ++j;\\n            }\\n        }\\n        return k;\\n    }\\n}"
                    },
                    {
                        "username": "WayneHe1221",
                        "content": "This problem seems really weird. The code asked us to return a Int value, but result output display the array given by param. \nIf you are finding the solution, please just try to change the value in array and make it non-duplicated.\nAnd the Int value you returned means the output will split the array from 0 until {your result}. "
                    },
                    {
                        "username": "Okpatu",
                        "content": "Examples are misleading "
                    },
                    {
                        "username": "joeantol",
                        "content": "Something is wrong. As a test for Case 1 I did:\\n\\n` def removeDuplicates(self, nums: List[int]) -> int:\\n\\n        nums = [1,2]\\n        return len(nums)`\\n\\nThe rig claims my output is: [1,1] and therefore incorrect.\\n\\nYet my answer IS correct for Case 1\\n\\nWhat am I missing?"
                    },
                    {
                        "username": "cvollrath97",
                        "content": "This question is simply not worth solving."
                    },
                    {
                        "username": "its-raj3",
                        "content": "it is."
                    },
                    {
                        "username": "antonMechEngineer",
                        "content": "Why if i am testing in my JDK everythink works correct, but litcode execute wrong? "
                    },
                    {
                        "username": "tokeeffe9",
                        "content": "I\\'ve seen solutions but I don\\'t really understand how we can change the array in our method without returning that array.\\nIf we don\\'t return the new  array without duplicates, nums is still the same in the main call"
                    }
                ]
            },
            {
                "id": 1869098,
                "content": [
                    {
                        "username": "its-raj3",
                        "content": "It\\'s become a really easy type of question , once you have done it before(this type of)."
                    },
                    {
                        "username": "sciguy09",
                        "content": "**Update:** I found out the problem with my code, thanks to [Samwise on StackOverflow](https://stackoverflow.com/a/76075745/8097585). I did `nums = []` before appending and as I understand, it rebinded the local variable `nums` that no longer pointed to the original one. This is solved by doing `nums.clear()` and the program works on $$O(nlogn)$$ time complexity if everything else is the same.\n\nHere is another two liner solution:\n\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n---\n\nI'm not able to pass a lot of testcases. I ran the function as well as my implementation of the code that they say they will use to judge on my local machine and found out that the problem is that `nums` is not updated outside the function `removeDuplicates()` when it is is being called but it is updating within the function. Why is that? Aren't python lists called by assignment when passed in a function?\n\n```\ndef removeDuplicates(nums):\n    nums_ = set(nums)\n    nums = []\n    for i in nums_:\n        nums.append(i)\n    print(nums)\n    # not working even if I do nums = list(set(nums)) instead of all lines above\n    return len(nums)\n\nnums = [1,1,2]\nexpectedNums = [1,2]\n\nk = removeDuplicates(nums)\nif k != len(expectedNums):\n    print(False)\nfor i in range(k):\n    if nums[i] != expectedNums[i]:\n        print(False)\n        print(nums, expectedNums)\n        break\n```\n\n> **Output:**\n> [1, 2]\n> False\n> [1, 1, 2] [1, 2]\n\nEarlier I had used `nums = list(set(nums))` instead of emptying the list and appending all unique elements but even that wasn't working."
                    },
                    {
                        "username": "idklol8",
                        "content": "I\\'m not that familiar with Python, but they\\'re wanting you to modify the values in nums without creating a new array. Using set defeats the purpose of the assignment."
                    },
                    {
                        "username": "shiva-student",
                        "content": "Can you explain why one-liner doesn\\'t work? (using set function)"
                    },
                    {
                        "username": "sciguy09",
                        "content": "[@idklol8](/idklol8) you can do that with two lines:\n\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n[Courtesy: Samwise on Stackoverflow](https://stackoverflow.com/a/76075745/8097585)"
                    },
                    {
                        "username": "sciguy09",
                        "content": "My two liner worked:\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n[Courtesy: Samwise on Stackoverflow](https://stackoverflow.com/a/76075745/8097585)"
                    },
                    {
                        "username": "idklol8",
                        "content": "You need to remove the duplicates from the original array you\\'re given without creating a new one. "
                    },
                    {
                        "username": "Syed_Waseem",
                        "content": "In this question we have to modify the given array such that all unique elements should be at front.\\nJAVA solution :- \\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int k = nums.length;\\n        int i = 0, j = 1;\\n        while(j < nums.length) {\\n            if(nums[i] == nums[j]) {\\n                k--;\\n                j++;\\n            } else{\\n                nums[i+1] = nums[j];\\n                i++;\\n                ++j;\\n            }\\n        }\\n        return k;\\n    }\\n}"
                    },
                    {
                        "username": "WayneHe1221",
                        "content": "This problem seems really weird. The code asked us to return a Int value, but result output display the array given by param. \nIf you are finding the solution, please just try to change the value in array and make it non-duplicated.\nAnd the Int value you returned means the output will split the array from 0 until {your result}. "
                    },
                    {
                        "username": "Okpatu",
                        "content": "Examples are misleading "
                    },
                    {
                        "username": "joeantol",
                        "content": "Something is wrong. As a test for Case 1 I did:\\n\\n` def removeDuplicates(self, nums: List[int]) -> int:\\n\\n        nums = [1,2]\\n        return len(nums)`\\n\\nThe rig claims my output is: [1,1] and therefore incorrect.\\n\\nYet my answer IS correct for Case 1\\n\\nWhat am I missing?"
                    },
                    {
                        "username": "cvollrath97",
                        "content": "This question is simply not worth solving."
                    },
                    {
                        "username": "its-raj3",
                        "content": "it is."
                    },
                    {
                        "username": "antonMechEngineer",
                        "content": "Why if i am testing in my JDK everythink works correct, but litcode execute wrong? "
                    },
                    {
                        "username": "tokeeffe9",
                        "content": "I\\'ve seen solutions but I don\\'t really understand how we can change the array in our method without returning that array.\\nIf we don\\'t return the new  array without duplicates, nums is still the same in the main call"
                    }
                ]
            },
            {
                "id": 1868646,
                "content": [
                    {
                        "username": "its-raj3",
                        "content": "It\\'s become a really easy type of question , once you have done it before(this type of)."
                    },
                    {
                        "username": "sciguy09",
                        "content": "**Update:** I found out the problem with my code, thanks to [Samwise on StackOverflow](https://stackoverflow.com/a/76075745/8097585). I did `nums = []` before appending and as I understand, it rebinded the local variable `nums` that no longer pointed to the original one. This is solved by doing `nums.clear()` and the program works on $$O(nlogn)$$ time complexity if everything else is the same.\n\nHere is another two liner solution:\n\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n---\n\nI'm not able to pass a lot of testcases. I ran the function as well as my implementation of the code that they say they will use to judge on my local machine and found out that the problem is that `nums` is not updated outside the function `removeDuplicates()` when it is is being called but it is updating within the function. Why is that? Aren't python lists called by assignment when passed in a function?\n\n```\ndef removeDuplicates(nums):\n    nums_ = set(nums)\n    nums = []\n    for i in nums_:\n        nums.append(i)\n    print(nums)\n    # not working even if I do nums = list(set(nums)) instead of all lines above\n    return len(nums)\n\nnums = [1,1,2]\nexpectedNums = [1,2]\n\nk = removeDuplicates(nums)\nif k != len(expectedNums):\n    print(False)\nfor i in range(k):\n    if nums[i] != expectedNums[i]:\n        print(False)\n        print(nums, expectedNums)\n        break\n```\n\n> **Output:**\n> [1, 2]\n> False\n> [1, 1, 2] [1, 2]\n\nEarlier I had used `nums = list(set(nums))` instead of emptying the list and appending all unique elements but even that wasn't working."
                    },
                    {
                        "username": "idklol8",
                        "content": "I\\'m not that familiar with Python, but they\\'re wanting you to modify the values in nums without creating a new array. Using set defeats the purpose of the assignment."
                    },
                    {
                        "username": "shiva-student",
                        "content": "Can you explain why one-liner doesn\\'t work? (using set function)"
                    },
                    {
                        "username": "sciguy09",
                        "content": "[@idklol8](/idklol8) you can do that with two lines:\n\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n[Courtesy: Samwise on Stackoverflow](https://stackoverflow.com/a/76075745/8097585)"
                    },
                    {
                        "username": "sciguy09",
                        "content": "My two liner worked:\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n[Courtesy: Samwise on Stackoverflow](https://stackoverflow.com/a/76075745/8097585)"
                    },
                    {
                        "username": "idklol8",
                        "content": "You need to remove the duplicates from the original array you\\'re given without creating a new one. "
                    },
                    {
                        "username": "Syed_Waseem",
                        "content": "In this question we have to modify the given array such that all unique elements should be at front.\\nJAVA solution :- \\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int k = nums.length;\\n        int i = 0, j = 1;\\n        while(j < nums.length) {\\n            if(nums[i] == nums[j]) {\\n                k--;\\n                j++;\\n            } else{\\n                nums[i+1] = nums[j];\\n                i++;\\n                ++j;\\n            }\\n        }\\n        return k;\\n    }\\n}"
                    },
                    {
                        "username": "WayneHe1221",
                        "content": "This problem seems really weird. The code asked us to return a Int value, but result output display the array given by param. \nIf you are finding the solution, please just try to change the value in array and make it non-duplicated.\nAnd the Int value you returned means the output will split the array from 0 until {your result}. "
                    },
                    {
                        "username": "Okpatu",
                        "content": "Examples are misleading "
                    },
                    {
                        "username": "joeantol",
                        "content": "Something is wrong. As a test for Case 1 I did:\\n\\n` def removeDuplicates(self, nums: List[int]) -> int:\\n\\n        nums = [1,2]\\n        return len(nums)`\\n\\nThe rig claims my output is: [1,1] and therefore incorrect.\\n\\nYet my answer IS correct for Case 1\\n\\nWhat am I missing?"
                    },
                    {
                        "username": "cvollrath97",
                        "content": "This question is simply not worth solving."
                    },
                    {
                        "username": "its-raj3",
                        "content": "it is."
                    },
                    {
                        "username": "antonMechEngineer",
                        "content": "Why if i am testing in my JDK everythink works correct, but litcode execute wrong? "
                    },
                    {
                        "username": "tokeeffe9",
                        "content": "I\\'ve seen solutions but I don\\'t really understand how we can change the array in our method without returning that array.\\nIf we don\\'t return the new  array without duplicates, nums is still the same in the main call"
                    }
                ]
            },
            {
                "id": 1867076,
                "content": [
                    {
                        "username": "its-raj3",
                        "content": "It\\'s become a really easy type of question , once you have done it before(this type of)."
                    },
                    {
                        "username": "sciguy09",
                        "content": "**Update:** I found out the problem with my code, thanks to [Samwise on StackOverflow](https://stackoverflow.com/a/76075745/8097585). I did `nums = []` before appending and as I understand, it rebinded the local variable `nums` that no longer pointed to the original one. This is solved by doing `nums.clear()` and the program works on $$O(nlogn)$$ time complexity if everything else is the same.\n\nHere is another two liner solution:\n\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n---\n\nI'm not able to pass a lot of testcases. I ran the function as well as my implementation of the code that they say they will use to judge on my local machine and found out that the problem is that `nums` is not updated outside the function `removeDuplicates()` when it is is being called but it is updating within the function. Why is that? Aren't python lists called by assignment when passed in a function?\n\n```\ndef removeDuplicates(nums):\n    nums_ = set(nums)\n    nums = []\n    for i in nums_:\n        nums.append(i)\n    print(nums)\n    # not working even if I do nums = list(set(nums)) instead of all lines above\n    return len(nums)\n\nnums = [1,1,2]\nexpectedNums = [1,2]\n\nk = removeDuplicates(nums)\nif k != len(expectedNums):\n    print(False)\nfor i in range(k):\n    if nums[i] != expectedNums[i]:\n        print(False)\n        print(nums, expectedNums)\n        break\n```\n\n> **Output:**\n> [1, 2]\n> False\n> [1, 1, 2] [1, 2]\n\nEarlier I had used `nums = list(set(nums))` instead of emptying the list and appending all unique elements but even that wasn't working."
                    },
                    {
                        "username": "idklol8",
                        "content": "I\\'m not that familiar with Python, but they\\'re wanting you to modify the values in nums without creating a new array. Using set defeats the purpose of the assignment."
                    },
                    {
                        "username": "shiva-student",
                        "content": "Can you explain why one-liner doesn\\'t work? (using set function)"
                    },
                    {
                        "username": "sciguy09",
                        "content": "[@idklol8](/idklol8) you can do that with two lines:\n\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n[Courtesy: Samwise on Stackoverflow](https://stackoverflow.com/a/76075745/8097585)"
                    },
                    {
                        "username": "sciguy09",
                        "content": "My two liner worked:\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n[Courtesy: Samwise on Stackoverflow](https://stackoverflow.com/a/76075745/8097585)"
                    },
                    {
                        "username": "idklol8",
                        "content": "You need to remove the duplicates from the original array you\\'re given without creating a new one. "
                    },
                    {
                        "username": "Syed_Waseem",
                        "content": "In this question we have to modify the given array such that all unique elements should be at front.\\nJAVA solution :- \\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int k = nums.length;\\n        int i = 0, j = 1;\\n        while(j < nums.length) {\\n            if(nums[i] == nums[j]) {\\n                k--;\\n                j++;\\n            } else{\\n                nums[i+1] = nums[j];\\n                i++;\\n                ++j;\\n            }\\n        }\\n        return k;\\n    }\\n}"
                    },
                    {
                        "username": "WayneHe1221",
                        "content": "This problem seems really weird. The code asked us to return a Int value, but result output display the array given by param. \nIf you are finding the solution, please just try to change the value in array and make it non-duplicated.\nAnd the Int value you returned means the output will split the array from 0 until {your result}. "
                    },
                    {
                        "username": "Okpatu",
                        "content": "Examples are misleading "
                    },
                    {
                        "username": "joeantol",
                        "content": "Something is wrong. As a test for Case 1 I did:\\n\\n` def removeDuplicates(self, nums: List[int]) -> int:\\n\\n        nums = [1,2]\\n        return len(nums)`\\n\\nThe rig claims my output is: [1,1] and therefore incorrect.\\n\\nYet my answer IS correct for Case 1\\n\\nWhat am I missing?"
                    },
                    {
                        "username": "cvollrath97",
                        "content": "This question is simply not worth solving."
                    },
                    {
                        "username": "its-raj3",
                        "content": "it is."
                    },
                    {
                        "username": "antonMechEngineer",
                        "content": "Why if i am testing in my JDK everythink works correct, but litcode execute wrong? "
                    },
                    {
                        "username": "tokeeffe9",
                        "content": "I\\'ve seen solutions but I don\\'t really understand how we can change the array in our method without returning that array.\\nIf we don\\'t return the new  array without duplicates, nums is still the same in the main call"
                    }
                ]
            },
            {
                "id": 1866919,
                "content": [
                    {
                        "username": "its-raj3",
                        "content": "It\\'s become a really easy type of question , once you have done it before(this type of)."
                    },
                    {
                        "username": "sciguy09",
                        "content": "**Update:** I found out the problem with my code, thanks to [Samwise on StackOverflow](https://stackoverflow.com/a/76075745/8097585). I did `nums = []` before appending and as I understand, it rebinded the local variable `nums` that no longer pointed to the original one. This is solved by doing `nums.clear()` and the program works on $$O(nlogn)$$ time complexity if everything else is the same.\n\nHere is another two liner solution:\n\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n---\n\nI'm not able to pass a lot of testcases. I ran the function as well as my implementation of the code that they say they will use to judge on my local machine and found out that the problem is that `nums` is not updated outside the function `removeDuplicates()` when it is is being called but it is updating within the function. Why is that? Aren't python lists called by assignment when passed in a function?\n\n```\ndef removeDuplicates(nums):\n    nums_ = set(nums)\n    nums = []\n    for i in nums_:\n        nums.append(i)\n    print(nums)\n    # not working even if I do nums = list(set(nums)) instead of all lines above\n    return len(nums)\n\nnums = [1,1,2]\nexpectedNums = [1,2]\n\nk = removeDuplicates(nums)\nif k != len(expectedNums):\n    print(False)\nfor i in range(k):\n    if nums[i] != expectedNums[i]:\n        print(False)\n        print(nums, expectedNums)\n        break\n```\n\n> **Output:**\n> [1, 2]\n> False\n> [1, 1, 2] [1, 2]\n\nEarlier I had used `nums = list(set(nums))` instead of emptying the list and appending all unique elements but even that wasn't working."
                    },
                    {
                        "username": "idklol8",
                        "content": "I\\'m not that familiar with Python, but they\\'re wanting you to modify the values in nums without creating a new array. Using set defeats the purpose of the assignment."
                    },
                    {
                        "username": "shiva-student",
                        "content": "Can you explain why one-liner doesn\\'t work? (using set function)"
                    },
                    {
                        "username": "sciguy09",
                        "content": "[@idklol8](/idklol8) you can do that with two lines:\n\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n[Courtesy: Samwise on Stackoverflow](https://stackoverflow.com/a/76075745/8097585)"
                    },
                    {
                        "username": "sciguy09",
                        "content": "My two liner worked:\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n[Courtesy: Samwise on Stackoverflow](https://stackoverflow.com/a/76075745/8097585)"
                    },
                    {
                        "username": "idklol8",
                        "content": "You need to remove the duplicates from the original array you\\'re given without creating a new one. "
                    },
                    {
                        "username": "Syed_Waseem",
                        "content": "In this question we have to modify the given array such that all unique elements should be at front.\\nJAVA solution :- \\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int k = nums.length;\\n        int i = 0, j = 1;\\n        while(j < nums.length) {\\n            if(nums[i] == nums[j]) {\\n                k--;\\n                j++;\\n            } else{\\n                nums[i+1] = nums[j];\\n                i++;\\n                ++j;\\n            }\\n        }\\n        return k;\\n    }\\n}"
                    },
                    {
                        "username": "WayneHe1221",
                        "content": "This problem seems really weird. The code asked us to return a Int value, but result output display the array given by param. \nIf you are finding the solution, please just try to change the value in array and make it non-duplicated.\nAnd the Int value you returned means the output will split the array from 0 until {your result}. "
                    },
                    {
                        "username": "Okpatu",
                        "content": "Examples are misleading "
                    },
                    {
                        "username": "joeantol",
                        "content": "Something is wrong. As a test for Case 1 I did:\\n\\n` def removeDuplicates(self, nums: List[int]) -> int:\\n\\n        nums = [1,2]\\n        return len(nums)`\\n\\nThe rig claims my output is: [1,1] and therefore incorrect.\\n\\nYet my answer IS correct for Case 1\\n\\nWhat am I missing?"
                    },
                    {
                        "username": "cvollrath97",
                        "content": "This question is simply not worth solving."
                    },
                    {
                        "username": "its-raj3",
                        "content": "it is."
                    },
                    {
                        "username": "antonMechEngineer",
                        "content": "Why if i am testing in my JDK everythink works correct, but litcode execute wrong? "
                    },
                    {
                        "username": "tokeeffe9",
                        "content": "I\\'ve seen solutions but I don\\'t really understand how we can change the array in our method without returning that array.\\nIf we don\\'t return the new  array without duplicates, nums is still the same in the main call"
                    }
                ]
            },
            {
                "id": 1866822,
                "content": [
                    {
                        "username": "its-raj3",
                        "content": "It\\'s become a really easy type of question , once you have done it before(this type of)."
                    },
                    {
                        "username": "sciguy09",
                        "content": "**Update:** I found out the problem with my code, thanks to [Samwise on StackOverflow](https://stackoverflow.com/a/76075745/8097585). I did `nums = []` before appending and as I understand, it rebinded the local variable `nums` that no longer pointed to the original one. This is solved by doing `nums.clear()` and the program works on $$O(nlogn)$$ time complexity if everything else is the same.\n\nHere is another two liner solution:\n\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n---\n\nI'm not able to pass a lot of testcases. I ran the function as well as my implementation of the code that they say they will use to judge on my local machine and found out that the problem is that `nums` is not updated outside the function `removeDuplicates()` when it is is being called but it is updating within the function. Why is that? Aren't python lists called by assignment when passed in a function?\n\n```\ndef removeDuplicates(nums):\n    nums_ = set(nums)\n    nums = []\n    for i in nums_:\n        nums.append(i)\n    print(nums)\n    # not working even if I do nums = list(set(nums)) instead of all lines above\n    return len(nums)\n\nnums = [1,1,2]\nexpectedNums = [1,2]\n\nk = removeDuplicates(nums)\nif k != len(expectedNums):\n    print(False)\nfor i in range(k):\n    if nums[i] != expectedNums[i]:\n        print(False)\n        print(nums, expectedNums)\n        break\n```\n\n> **Output:**\n> [1, 2]\n> False\n> [1, 1, 2] [1, 2]\n\nEarlier I had used `nums = list(set(nums))` instead of emptying the list and appending all unique elements but even that wasn't working."
                    },
                    {
                        "username": "idklol8",
                        "content": "I\\'m not that familiar with Python, but they\\'re wanting you to modify the values in nums without creating a new array. Using set defeats the purpose of the assignment."
                    },
                    {
                        "username": "shiva-student",
                        "content": "Can you explain why one-liner doesn\\'t work? (using set function)"
                    },
                    {
                        "username": "sciguy09",
                        "content": "[@idklol8](/idklol8) you can do that with two lines:\n\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n[Courtesy: Samwise on Stackoverflow](https://stackoverflow.com/a/76075745/8097585)"
                    },
                    {
                        "username": "sciguy09",
                        "content": "My two liner worked:\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n[Courtesy: Samwise on Stackoverflow](https://stackoverflow.com/a/76075745/8097585)"
                    },
                    {
                        "username": "idklol8",
                        "content": "You need to remove the duplicates from the original array you\\'re given without creating a new one. "
                    },
                    {
                        "username": "Syed_Waseem",
                        "content": "In this question we have to modify the given array such that all unique elements should be at front.\\nJAVA solution :- \\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int k = nums.length;\\n        int i = 0, j = 1;\\n        while(j < nums.length) {\\n            if(nums[i] == nums[j]) {\\n                k--;\\n                j++;\\n            } else{\\n                nums[i+1] = nums[j];\\n                i++;\\n                ++j;\\n            }\\n        }\\n        return k;\\n    }\\n}"
                    },
                    {
                        "username": "WayneHe1221",
                        "content": "This problem seems really weird. The code asked us to return a Int value, but result output display the array given by param. \nIf you are finding the solution, please just try to change the value in array and make it non-duplicated.\nAnd the Int value you returned means the output will split the array from 0 until {your result}. "
                    },
                    {
                        "username": "Okpatu",
                        "content": "Examples are misleading "
                    },
                    {
                        "username": "joeantol",
                        "content": "Something is wrong. As a test for Case 1 I did:\\n\\n` def removeDuplicates(self, nums: List[int]) -> int:\\n\\n        nums = [1,2]\\n        return len(nums)`\\n\\nThe rig claims my output is: [1,1] and therefore incorrect.\\n\\nYet my answer IS correct for Case 1\\n\\nWhat am I missing?"
                    },
                    {
                        "username": "cvollrath97",
                        "content": "This question is simply not worth solving."
                    },
                    {
                        "username": "its-raj3",
                        "content": "it is."
                    },
                    {
                        "username": "antonMechEngineer",
                        "content": "Why if i am testing in my JDK everythink works correct, but litcode execute wrong? "
                    },
                    {
                        "username": "tokeeffe9",
                        "content": "I\\'ve seen solutions but I don\\'t really understand how we can change the array in our method without returning that array.\\nIf we don\\'t return the new  array without duplicates, nums is still the same in the main call"
                    }
                ]
            },
            {
                "id": 1863347,
                "content": [
                    {
                        "username": "its-raj3",
                        "content": "It\\'s become a really easy type of question , once you have done it before(this type of)."
                    },
                    {
                        "username": "sciguy09",
                        "content": "**Update:** I found out the problem with my code, thanks to [Samwise on StackOverflow](https://stackoverflow.com/a/76075745/8097585). I did `nums = []` before appending and as I understand, it rebinded the local variable `nums` that no longer pointed to the original one. This is solved by doing `nums.clear()` and the program works on $$O(nlogn)$$ time complexity if everything else is the same.\n\nHere is another two liner solution:\n\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n---\n\nI'm not able to pass a lot of testcases. I ran the function as well as my implementation of the code that they say they will use to judge on my local machine and found out that the problem is that `nums` is not updated outside the function `removeDuplicates()` when it is is being called but it is updating within the function. Why is that? Aren't python lists called by assignment when passed in a function?\n\n```\ndef removeDuplicates(nums):\n    nums_ = set(nums)\n    nums = []\n    for i in nums_:\n        nums.append(i)\n    print(nums)\n    # not working even if I do nums = list(set(nums)) instead of all lines above\n    return len(nums)\n\nnums = [1,1,2]\nexpectedNums = [1,2]\n\nk = removeDuplicates(nums)\nif k != len(expectedNums):\n    print(False)\nfor i in range(k):\n    if nums[i] != expectedNums[i]:\n        print(False)\n        print(nums, expectedNums)\n        break\n```\n\n> **Output:**\n> [1, 2]\n> False\n> [1, 1, 2] [1, 2]\n\nEarlier I had used `nums = list(set(nums))` instead of emptying the list and appending all unique elements but even that wasn't working."
                    },
                    {
                        "username": "idklol8",
                        "content": "I\\'m not that familiar with Python, but they\\'re wanting you to modify the values in nums without creating a new array. Using set defeats the purpose of the assignment."
                    },
                    {
                        "username": "shiva-student",
                        "content": "Can you explain why one-liner doesn\\'t work? (using set function)"
                    },
                    {
                        "username": "sciguy09",
                        "content": "[@idklol8](/idklol8) you can do that with two lines:\n\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n[Courtesy: Samwise on Stackoverflow](https://stackoverflow.com/a/76075745/8097585)"
                    },
                    {
                        "username": "sciguy09",
                        "content": "My two liner worked:\n```\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        nums[:] = sorted(set(nums))\n        return len(nums)\n```\n[Link to submission](https://leetcode.com/problems/remove-duplicates-from-sorted-array/submissions/937602429/)\n\n[Courtesy: Samwise on Stackoverflow](https://stackoverflow.com/a/76075745/8097585)"
                    },
                    {
                        "username": "idklol8",
                        "content": "You need to remove the duplicates from the original array you\\'re given without creating a new one. "
                    },
                    {
                        "username": "Syed_Waseem",
                        "content": "In this question we have to modify the given array such that all unique elements should be at front.\\nJAVA solution :- \\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int k = nums.length;\\n        int i = 0, j = 1;\\n        while(j < nums.length) {\\n            if(nums[i] == nums[j]) {\\n                k--;\\n                j++;\\n            } else{\\n                nums[i+1] = nums[j];\\n                i++;\\n                ++j;\\n            }\\n        }\\n        return k;\\n    }\\n}"
                    },
                    {
                        "username": "WayneHe1221",
                        "content": "This problem seems really weird. The code asked us to return a Int value, but result output display the array given by param. \nIf you are finding the solution, please just try to change the value in array and make it non-duplicated.\nAnd the Int value you returned means the output will split the array from 0 until {your result}. "
                    },
                    {
                        "username": "Okpatu",
                        "content": "Examples are misleading "
                    },
                    {
                        "username": "joeantol",
                        "content": "Something is wrong. As a test for Case 1 I did:\\n\\n` def removeDuplicates(self, nums: List[int]) -> int:\\n\\n        nums = [1,2]\\n        return len(nums)`\\n\\nThe rig claims my output is: [1,1] and therefore incorrect.\\n\\nYet my answer IS correct for Case 1\\n\\nWhat am I missing?"
                    },
                    {
                        "username": "cvollrath97",
                        "content": "This question is simply not worth solving."
                    },
                    {
                        "username": "its-raj3",
                        "content": "it is."
                    },
                    {
                        "username": "antonMechEngineer",
                        "content": "Why if i am testing in my JDK everythink works correct, but litcode execute wrong? "
                    },
                    {
                        "username": "tokeeffe9",
                        "content": "I\\'ve seen solutions but I don\\'t really understand how we can change the array in our method without returning that array.\\nIf we don\\'t return the new  array without duplicates, nums is still the same in the main call"
                    }
                ]
            },
            {
                "id": 1861769,
                "content": [
                    {
                        "username": "charlescolfer",
                        "content": "Everyone says to just read the directions and return K but the results shows the Expected Answer for Case 1 as [1,2] & Case 2 as [0,1,2,3,4] - This is incorrect, or the directions are incorrect. I\\'ve returned both K as an integer representing the number of unique elements, and the array and got both wrong. "
                    },
                    {
                        "username": "idklol8",
                        "content": "you return K, but you also have to remove the duplicate elements from nums.\\n\\nthe return value, K, tells the grader to check the first K elements in nums. "
                    },
                    {
                        "username": "sbjunaid14",
                        "content": "IS this related to set???"
                    },
                    {
                        "username": "shubhi4",
                        "content": "No, just need to alter the array"
                    },
                    {
                        "username": "mcorne_76",
                        "content": "This question is fucking stupid"
                    },
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        j = 1\\n        for i in range(len(nums) - 1):\\n            if nums[i] != nums[i + 1]:\\n                nums[j] = nums[i + 1]\\n                j += 1\\n        return j\\n```\\nThis way worked\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "AJAYPATIDAR2022",
                        "content": "I am not sure why it is stated in question that the remaining numbers are not important. and in the solution they are slicing away the array marking my result as wrong answer. either remove that slicing part or allow our answers to be true where we keep only unique element and leave the other numbers behind"
                    },
                    {
                        "username": "PavelKovtun",
                        "content": "Hint:\nYou should modify the array passed to you (no need to create a new one)!"
                    },
                    {
                        "username": "eugene_stukalov",
                        "content": "Somehow I had more trouble with this \"easy\" problem than with some \"hard\" problems (when intentionally not using a Java data type trick)."
                    },
                    {
                        "username": "Azkul",
                        "content": "This question was honestly really bad, without the comments to explain how the behind the scenes works there\\'s no way I could solve it even though I solved the actual problem in my IDE. Just remember that you don\\'t need to remove any number in nums, just have the unique numbers sorted at the begining of the list."
                    },
                    {
                        "username": "ahumada1790",
                        "content": "Just in case somebody is doing this in Typescript and for some reason getting a error despite working, trying changing to javascript. I think the typescript compiler may be glitchy."
                    },
                    {
                        "username": "TYork",
                        "content": "class Solution {\\n\\n\\tpublic int removeDuplicates(int[] nums) {\\n\\n\\n\\t\\tArrayList<Integer> foo = new ArrayList<Integer>();\\n\\t\\t\\n\\t\\tfor (int i = 0; i <nums.length;i++) {\\n\\t\\t\\tif(foo.contains(nums[i])){\\n\\t\\t\\t\\tcontinue;\\n\\n\\t\\t\\t}\\n\\t\\t\\telse{\\n\\t\\t\\t\\tfoo.add(nums[i]);\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t}\\n\\t\\tSystem.out.println(foo.toString());\\n\\n\\t\\treturn foo.size();\\n\\t}\\n}\\n\\t\\t\\n\\n\\nhow in Earth is this wrong? Just another Leetcode jokes."
                    }
                ]
            },
            {
                "id": 1859543,
                "content": [
                    {
                        "username": "charlescolfer",
                        "content": "Everyone says to just read the directions and return K but the results shows the Expected Answer for Case 1 as [1,2] & Case 2 as [0,1,2,3,4] - This is incorrect, or the directions are incorrect. I\\'ve returned both K as an integer representing the number of unique elements, and the array and got both wrong. "
                    },
                    {
                        "username": "idklol8",
                        "content": "you return K, but you also have to remove the duplicate elements from nums.\\n\\nthe return value, K, tells the grader to check the first K elements in nums. "
                    },
                    {
                        "username": "sbjunaid14",
                        "content": "IS this related to set???"
                    },
                    {
                        "username": "shubhi4",
                        "content": "No, just need to alter the array"
                    },
                    {
                        "username": "mcorne_76",
                        "content": "This question is fucking stupid"
                    },
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        j = 1\\n        for i in range(len(nums) - 1):\\n            if nums[i] != nums[i + 1]:\\n                nums[j] = nums[i + 1]\\n                j += 1\\n        return j\\n```\\nThis way worked\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "AJAYPATIDAR2022",
                        "content": "I am not sure why it is stated in question that the remaining numbers are not important. and in the solution they are slicing away the array marking my result as wrong answer. either remove that slicing part or allow our answers to be true where we keep only unique element and leave the other numbers behind"
                    },
                    {
                        "username": "PavelKovtun",
                        "content": "Hint:\nYou should modify the array passed to you (no need to create a new one)!"
                    },
                    {
                        "username": "eugene_stukalov",
                        "content": "Somehow I had more trouble with this \"easy\" problem than with some \"hard\" problems (when intentionally not using a Java data type trick)."
                    },
                    {
                        "username": "Azkul",
                        "content": "This question was honestly really bad, without the comments to explain how the behind the scenes works there\\'s no way I could solve it even though I solved the actual problem in my IDE. Just remember that you don\\'t need to remove any number in nums, just have the unique numbers sorted at the begining of the list."
                    },
                    {
                        "username": "ahumada1790",
                        "content": "Just in case somebody is doing this in Typescript and for some reason getting a error despite working, trying changing to javascript. I think the typescript compiler may be glitchy."
                    },
                    {
                        "username": "TYork",
                        "content": "class Solution {\\n\\n\\tpublic int removeDuplicates(int[] nums) {\\n\\n\\n\\t\\tArrayList<Integer> foo = new ArrayList<Integer>();\\n\\t\\t\\n\\t\\tfor (int i = 0; i <nums.length;i++) {\\n\\t\\t\\tif(foo.contains(nums[i])){\\n\\t\\t\\t\\tcontinue;\\n\\n\\t\\t\\t}\\n\\t\\t\\telse{\\n\\t\\t\\t\\tfoo.add(nums[i]);\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t}\\n\\t\\tSystem.out.println(foo.toString());\\n\\n\\t\\treturn foo.size();\\n\\t}\\n}\\n\\t\\t\\n\\n\\nhow in Earth is this wrong? Just another Leetcode jokes."
                    }
                ]
            },
            {
                "id": 1859132,
                "content": [
                    {
                        "username": "charlescolfer",
                        "content": "Everyone says to just read the directions and return K but the results shows the Expected Answer for Case 1 as [1,2] & Case 2 as [0,1,2,3,4] - This is incorrect, or the directions are incorrect. I\\'ve returned both K as an integer representing the number of unique elements, and the array and got both wrong. "
                    },
                    {
                        "username": "idklol8",
                        "content": "you return K, but you also have to remove the duplicate elements from nums.\\n\\nthe return value, K, tells the grader to check the first K elements in nums. "
                    },
                    {
                        "username": "sbjunaid14",
                        "content": "IS this related to set???"
                    },
                    {
                        "username": "shubhi4",
                        "content": "No, just need to alter the array"
                    },
                    {
                        "username": "mcorne_76",
                        "content": "This question is fucking stupid"
                    },
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        j = 1\\n        for i in range(len(nums) - 1):\\n            if nums[i] != nums[i + 1]:\\n                nums[j] = nums[i + 1]\\n                j += 1\\n        return j\\n```\\nThis way worked\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "AJAYPATIDAR2022",
                        "content": "I am not sure why it is stated in question that the remaining numbers are not important. and in the solution they are slicing away the array marking my result as wrong answer. either remove that slicing part or allow our answers to be true where we keep only unique element and leave the other numbers behind"
                    },
                    {
                        "username": "PavelKovtun",
                        "content": "Hint:\nYou should modify the array passed to you (no need to create a new one)!"
                    },
                    {
                        "username": "eugene_stukalov",
                        "content": "Somehow I had more trouble with this \"easy\" problem than with some \"hard\" problems (when intentionally not using a Java data type trick)."
                    },
                    {
                        "username": "Azkul",
                        "content": "This question was honestly really bad, without the comments to explain how the behind the scenes works there\\'s no way I could solve it even though I solved the actual problem in my IDE. Just remember that you don\\'t need to remove any number in nums, just have the unique numbers sorted at the begining of the list."
                    },
                    {
                        "username": "ahumada1790",
                        "content": "Just in case somebody is doing this in Typescript and for some reason getting a error despite working, trying changing to javascript. I think the typescript compiler may be glitchy."
                    },
                    {
                        "username": "TYork",
                        "content": "class Solution {\\n\\n\\tpublic int removeDuplicates(int[] nums) {\\n\\n\\n\\t\\tArrayList<Integer> foo = new ArrayList<Integer>();\\n\\t\\t\\n\\t\\tfor (int i = 0; i <nums.length;i++) {\\n\\t\\t\\tif(foo.contains(nums[i])){\\n\\t\\t\\t\\tcontinue;\\n\\n\\t\\t\\t}\\n\\t\\t\\telse{\\n\\t\\t\\t\\tfoo.add(nums[i]);\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t}\\n\\t\\tSystem.out.println(foo.toString());\\n\\n\\t\\treturn foo.size();\\n\\t}\\n}\\n\\t\\t\\n\\n\\nhow in Earth is this wrong? Just another Leetcode jokes."
                    }
                ]
            },
            {
                "id": 1857635,
                "content": [
                    {
                        "username": "charlescolfer",
                        "content": "Everyone says to just read the directions and return K but the results shows the Expected Answer for Case 1 as [1,2] & Case 2 as [0,1,2,3,4] - This is incorrect, or the directions are incorrect. I\\'ve returned both K as an integer representing the number of unique elements, and the array and got both wrong. "
                    },
                    {
                        "username": "idklol8",
                        "content": "you return K, but you also have to remove the duplicate elements from nums.\\n\\nthe return value, K, tells the grader to check the first K elements in nums. "
                    },
                    {
                        "username": "sbjunaid14",
                        "content": "IS this related to set???"
                    },
                    {
                        "username": "shubhi4",
                        "content": "No, just need to alter the array"
                    },
                    {
                        "username": "mcorne_76",
                        "content": "This question is fucking stupid"
                    },
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        j = 1\\n        for i in range(len(nums) - 1):\\n            if nums[i] != nums[i + 1]:\\n                nums[j] = nums[i + 1]\\n                j += 1\\n        return j\\n```\\nThis way worked\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "AJAYPATIDAR2022",
                        "content": "I am not sure why it is stated in question that the remaining numbers are not important. and in the solution they are slicing away the array marking my result as wrong answer. either remove that slicing part or allow our answers to be true where we keep only unique element and leave the other numbers behind"
                    },
                    {
                        "username": "PavelKovtun",
                        "content": "Hint:\nYou should modify the array passed to you (no need to create a new one)!"
                    },
                    {
                        "username": "eugene_stukalov",
                        "content": "Somehow I had more trouble with this \"easy\" problem than with some \"hard\" problems (when intentionally not using a Java data type trick)."
                    },
                    {
                        "username": "Azkul",
                        "content": "This question was honestly really bad, without the comments to explain how the behind the scenes works there\\'s no way I could solve it even though I solved the actual problem in my IDE. Just remember that you don\\'t need to remove any number in nums, just have the unique numbers sorted at the begining of the list."
                    },
                    {
                        "username": "ahumada1790",
                        "content": "Just in case somebody is doing this in Typescript and for some reason getting a error despite working, trying changing to javascript. I think the typescript compiler may be glitchy."
                    },
                    {
                        "username": "TYork",
                        "content": "class Solution {\\n\\n\\tpublic int removeDuplicates(int[] nums) {\\n\\n\\n\\t\\tArrayList<Integer> foo = new ArrayList<Integer>();\\n\\t\\t\\n\\t\\tfor (int i = 0; i <nums.length;i++) {\\n\\t\\t\\tif(foo.contains(nums[i])){\\n\\t\\t\\t\\tcontinue;\\n\\n\\t\\t\\t}\\n\\t\\t\\telse{\\n\\t\\t\\t\\tfoo.add(nums[i]);\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t}\\n\\t\\tSystem.out.println(foo.toString());\\n\\n\\t\\treturn foo.size();\\n\\t}\\n}\\n\\t\\t\\n\\n\\nhow in Earth is this wrong? Just another Leetcode jokes."
                    }
                ]
            },
            {
                "id": 1856041,
                "content": [
                    {
                        "username": "charlescolfer",
                        "content": "Everyone says to just read the directions and return K but the results shows the Expected Answer for Case 1 as [1,2] & Case 2 as [0,1,2,3,4] - This is incorrect, or the directions are incorrect. I\\'ve returned both K as an integer representing the number of unique elements, and the array and got both wrong. "
                    },
                    {
                        "username": "idklol8",
                        "content": "you return K, but you also have to remove the duplicate elements from nums.\\n\\nthe return value, K, tells the grader to check the first K elements in nums. "
                    },
                    {
                        "username": "sbjunaid14",
                        "content": "IS this related to set???"
                    },
                    {
                        "username": "shubhi4",
                        "content": "No, just need to alter the array"
                    },
                    {
                        "username": "mcorne_76",
                        "content": "This question is fucking stupid"
                    },
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        j = 1\\n        for i in range(len(nums) - 1):\\n            if nums[i] != nums[i + 1]:\\n                nums[j] = nums[i + 1]\\n                j += 1\\n        return j\\n```\\nThis way worked\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "AJAYPATIDAR2022",
                        "content": "I am not sure why it is stated in question that the remaining numbers are not important. and in the solution they are slicing away the array marking my result as wrong answer. either remove that slicing part or allow our answers to be true where we keep only unique element and leave the other numbers behind"
                    },
                    {
                        "username": "PavelKovtun",
                        "content": "Hint:\nYou should modify the array passed to you (no need to create a new one)!"
                    },
                    {
                        "username": "eugene_stukalov",
                        "content": "Somehow I had more trouble with this \"easy\" problem than with some \"hard\" problems (when intentionally not using a Java data type trick)."
                    },
                    {
                        "username": "Azkul",
                        "content": "This question was honestly really bad, without the comments to explain how the behind the scenes works there\\'s no way I could solve it even though I solved the actual problem in my IDE. Just remember that you don\\'t need to remove any number in nums, just have the unique numbers sorted at the begining of the list."
                    },
                    {
                        "username": "ahumada1790",
                        "content": "Just in case somebody is doing this in Typescript and for some reason getting a error despite working, trying changing to javascript. I think the typescript compiler may be glitchy."
                    },
                    {
                        "username": "TYork",
                        "content": "class Solution {\\n\\n\\tpublic int removeDuplicates(int[] nums) {\\n\\n\\n\\t\\tArrayList<Integer> foo = new ArrayList<Integer>();\\n\\t\\t\\n\\t\\tfor (int i = 0; i <nums.length;i++) {\\n\\t\\t\\tif(foo.contains(nums[i])){\\n\\t\\t\\t\\tcontinue;\\n\\n\\t\\t\\t}\\n\\t\\t\\telse{\\n\\t\\t\\t\\tfoo.add(nums[i]);\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t}\\n\\t\\tSystem.out.println(foo.toString());\\n\\n\\t\\treturn foo.size();\\n\\t}\\n}\\n\\t\\t\\n\\n\\nhow in Earth is this wrong? Just another Leetcode jokes."
                    }
                ]
            },
            {
                "id": 1855463,
                "content": [
                    {
                        "username": "charlescolfer",
                        "content": "Everyone says to just read the directions and return K but the results shows the Expected Answer for Case 1 as [1,2] & Case 2 as [0,1,2,3,4] - This is incorrect, or the directions are incorrect. I\\'ve returned both K as an integer representing the number of unique elements, and the array and got both wrong. "
                    },
                    {
                        "username": "idklol8",
                        "content": "you return K, but you also have to remove the duplicate elements from nums.\\n\\nthe return value, K, tells the grader to check the first K elements in nums. "
                    },
                    {
                        "username": "sbjunaid14",
                        "content": "IS this related to set???"
                    },
                    {
                        "username": "shubhi4",
                        "content": "No, just need to alter the array"
                    },
                    {
                        "username": "mcorne_76",
                        "content": "This question is fucking stupid"
                    },
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        j = 1\\n        for i in range(len(nums) - 1):\\n            if nums[i] != nums[i + 1]:\\n                nums[j] = nums[i + 1]\\n                j += 1\\n        return j\\n```\\nThis way worked\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "AJAYPATIDAR2022",
                        "content": "I am not sure why it is stated in question that the remaining numbers are not important. and in the solution they are slicing away the array marking my result as wrong answer. either remove that slicing part or allow our answers to be true where we keep only unique element and leave the other numbers behind"
                    },
                    {
                        "username": "PavelKovtun",
                        "content": "Hint:\nYou should modify the array passed to you (no need to create a new one)!"
                    },
                    {
                        "username": "eugene_stukalov",
                        "content": "Somehow I had more trouble with this \"easy\" problem than with some \"hard\" problems (when intentionally not using a Java data type trick)."
                    },
                    {
                        "username": "Azkul",
                        "content": "This question was honestly really bad, without the comments to explain how the behind the scenes works there\\'s no way I could solve it even though I solved the actual problem in my IDE. Just remember that you don\\'t need to remove any number in nums, just have the unique numbers sorted at the begining of the list."
                    },
                    {
                        "username": "ahumada1790",
                        "content": "Just in case somebody is doing this in Typescript and for some reason getting a error despite working, trying changing to javascript. I think the typescript compiler may be glitchy."
                    },
                    {
                        "username": "TYork",
                        "content": "class Solution {\\n\\n\\tpublic int removeDuplicates(int[] nums) {\\n\\n\\n\\t\\tArrayList<Integer> foo = new ArrayList<Integer>();\\n\\t\\t\\n\\t\\tfor (int i = 0; i <nums.length;i++) {\\n\\t\\t\\tif(foo.contains(nums[i])){\\n\\t\\t\\t\\tcontinue;\\n\\n\\t\\t\\t}\\n\\t\\t\\telse{\\n\\t\\t\\t\\tfoo.add(nums[i]);\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t}\\n\\t\\tSystem.out.println(foo.toString());\\n\\n\\t\\treturn foo.size();\\n\\t}\\n}\\n\\t\\t\\n\\n\\nhow in Earth is this wrong? Just another Leetcode jokes."
                    }
                ]
            },
            {
                "id": 1854090,
                "content": [
                    {
                        "username": "charlescolfer",
                        "content": "Everyone says to just read the directions and return K but the results shows the Expected Answer for Case 1 as [1,2] & Case 2 as [0,1,2,3,4] - This is incorrect, or the directions are incorrect. I\\'ve returned both K as an integer representing the number of unique elements, and the array and got both wrong. "
                    },
                    {
                        "username": "idklol8",
                        "content": "you return K, but you also have to remove the duplicate elements from nums.\\n\\nthe return value, K, tells the grader to check the first K elements in nums. "
                    },
                    {
                        "username": "sbjunaid14",
                        "content": "IS this related to set???"
                    },
                    {
                        "username": "shubhi4",
                        "content": "No, just need to alter the array"
                    },
                    {
                        "username": "mcorne_76",
                        "content": "This question is fucking stupid"
                    },
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        j = 1\\n        for i in range(len(nums) - 1):\\n            if nums[i] != nums[i + 1]:\\n                nums[j] = nums[i + 1]\\n                j += 1\\n        return j\\n```\\nThis way worked\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "AJAYPATIDAR2022",
                        "content": "I am not sure why it is stated in question that the remaining numbers are not important. and in the solution they are slicing away the array marking my result as wrong answer. either remove that slicing part or allow our answers to be true where we keep only unique element and leave the other numbers behind"
                    },
                    {
                        "username": "PavelKovtun",
                        "content": "Hint:\nYou should modify the array passed to you (no need to create a new one)!"
                    },
                    {
                        "username": "eugene_stukalov",
                        "content": "Somehow I had more trouble with this \"easy\" problem than with some \"hard\" problems (when intentionally not using a Java data type trick)."
                    },
                    {
                        "username": "Azkul",
                        "content": "This question was honestly really bad, without the comments to explain how the behind the scenes works there\\'s no way I could solve it even though I solved the actual problem in my IDE. Just remember that you don\\'t need to remove any number in nums, just have the unique numbers sorted at the begining of the list."
                    },
                    {
                        "username": "ahumada1790",
                        "content": "Just in case somebody is doing this in Typescript and for some reason getting a error despite working, trying changing to javascript. I think the typescript compiler may be glitchy."
                    },
                    {
                        "username": "TYork",
                        "content": "class Solution {\\n\\n\\tpublic int removeDuplicates(int[] nums) {\\n\\n\\n\\t\\tArrayList<Integer> foo = new ArrayList<Integer>();\\n\\t\\t\\n\\t\\tfor (int i = 0; i <nums.length;i++) {\\n\\t\\t\\tif(foo.contains(nums[i])){\\n\\t\\t\\t\\tcontinue;\\n\\n\\t\\t\\t}\\n\\t\\t\\telse{\\n\\t\\t\\t\\tfoo.add(nums[i]);\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t}\\n\\t\\tSystem.out.println(foo.toString());\\n\\n\\t\\treturn foo.size();\\n\\t}\\n}\\n\\t\\t\\n\\n\\nhow in Earth is this wrong? Just another Leetcode jokes."
                    }
                ]
            },
            {
                "id": 1853943,
                "content": [
                    {
                        "username": "charlescolfer",
                        "content": "Everyone says to just read the directions and return K but the results shows the Expected Answer for Case 1 as [1,2] & Case 2 as [0,1,2,3,4] - This is incorrect, or the directions are incorrect. I\\'ve returned both K as an integer representing the number of unique elements, and the array and got both wrong. "
                    },
                    {
                        "username": "idklol8",
                        "content": "you return K, but you also have to remove the duplicate elements from nums.\\n\\nthe return value, K, tells the grader to check the first K elements in nums. "
                    },
                    {
                        "username": "sbjunaid14",
                        "content": "IS this related to set???"
                    },
                    {
                        "username": "shubhi4",
                        "content": "No, just need to alter the array"
                    },
                    {
                        "username": "mcorne_76",
                        "content": "This question is fucking stupid"
                    },
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        j = 1\\n        for i in range(len(nums) - 1):\\n            if nums[i] != nums[i + 1]:\\n                nums[j] = nums[i + 1]\\n                j += 1\\n        return j\\n```\\nThis way worked\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "AJAYPATIDAR2022",
                        "content": "I am not sure why it is stated in question that the remaining numbers are not important. and in the solution they are slicing away the array marking my result as wrong answer. either remove that slicing part or allow our answers to be true where we keep only unique element and leave the other numbers behind"
                    },
                    {
                        "username": "PavelKovtun",
                        "content": "Hint:\nYou should modify the array passed to you (no need to create a new one)!"
                    },
                    {
                        "username": "eugene_stukalov",
                        "content": "Somehow I had more trouble with this \"easy\" problem than with some \"hard\" problems (when intentionally not using a Java data type trick)."
                    },
                    {
                        "username": "Azkul",
                        "content": "This question was honestly really bad, without the comments to explain how the behind the scenes works there\\'s no way I could solve it even though I solved the actual problem in my IDE. Just remember that you don\\'t need to remove any number in nums, just have the unique numbers sorted at the begining of the list."
                    },
                    {
                        "username": "ahumada1790",
                        "content": "Just in case somebody is doing this in Typescript and for some reason getting a error despite working, trying changing to javascript. I think the typescript compiler may be glitchy."
                    },
                    {
                        "username": "TYork",
                        "content": "class Solution {\\n\\n\\tpublic int removeDuplicates(int[] nums) {\\n\\n\\n\\t\\tArrayList<Integer> foo = new ArrayList<Integer>();\\n\\t\\t\\n\\t\\tfor (int i = 0; i <nums.length;i++) {\\n\\t\\t\\tif(foo.contains(nums[i])){\\n\\t\\t\\t\\tcontinue;\\n\\n\\t\\t\\t}\\n\\t\\t\\telse{\\n\\t\\t\\t\\tfoo.add(nums[i]);\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t}\\n\\t\\tSystem.out.println(foo.toString());\\n\\n\\t\\treturn foo.size();\\n\\t}\\n}\\n\\t\\t\\n\\n\\nhow in Earth is this wrong? Just another Leetcode jokes."
                    }
                ]
            },
            {
                "id": 1852116,
                "content": [
                    {
                        "username": "charlescolfer",
                        "content": "Everyone says to just read the directions and return K but the results shows the Expected Answer for Case 1 as [1,2] & Case 2 as [0,1,2,3,4] - This is incorrect, or the directions are incorrect. I\\'ve returned both K as an integer representing the number of unique elements, and the array and got both wrong. "
                    },
                    {
                        "username": "idklol8",
                        "content": "you return K, but you also have to remove the duplicate elements from nums.\\n\\nthe return value, K, tells the grader to check the first K elements in nums. "
                    },
                    {
                        "username": "sbjunaid14",
                        "content": "IS this related to set???"
                    },
                    {
                        "username": "shubhi4",
                        "content": "No, just need to alter the array"
                    },
                    {
                        "username": "mcorne_76",
                        "content": "This question is fucking stupid"
                    },
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        j = 1\\n        for i in range(len(nums) - 1):\\n            if nums[i] != nums[i + 1]:\\n                nums[j] = nums[i + 1]\\n                j += 1\\n        return j\\n```\\nThis way worked\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "AJAYPATIDAR2022",
                        "content": "I am not sure why it is stated in question that the remaining numbers are not important. and in the solution they are slicing away the array marking my result as wrong answer. either remove that slicing part or allow our answers to be true where we keep only unique element and leave the other numbers behind"
                    },
                    {
                        "username": "PavelKovtun",
                        "content": "Hint:\nYou should modify the array passed to you (no need to create a new one)!"
                    },
                    {
                        "username": "eugene_stukalov",
                        "content": "Somehow I had more trouble with this \"easy\" problem than with some \"hard\" problems (when intentionally not using a Java data type trick)."
                    },
                    {
                        "username": "Azkul",
                        "content": "This question was honestly really bad, without the comments to explain how the behind the scenes works there\\'s no way I could solve it even though I solved the actual problem in my IDE. Just remember that you don\\'t need to remove any number in nums, just have the unique numbers sorted at the begining of the list."
                    },
                    {
                        "username": "ahumada1790",
                        "content": "Just in case somebody is doing this in Typescript and for some reason getting a error despite working, trying changing to javascript. I think the typescript compiler may be glitchy."
                    },
                    {
                        "username": "TYork",
                        "content": "class Solution {\\n\\n\\tpublic int removeDuplicates(int[] nums) {\\n\\n\\n\\t\\tArrayList<Integer> foo = new ArrayList<Integer>();\\n\\t\\t\\n\\t\\tfor (int i = 0; i <nums.length;i++) {\\n\\t\\t\\tif(foo.contains(nums[i])){\\n\\t\\t\\t\\tcontinue;\\n\\n\\t\\t\\t}\\n\\t\\t\\telse{\\n\\t\\t\\t\\tfoo.add(nums[i]);\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t}\\n\\t\\tSystem.out.println(foo.toString());\\n\\n\\t\\treturn foo.size();\\n\\t}\\n}\\n\\t\\t\\n\\n\\nhow in Earth is this wrong? Just another Leetcode jokes."
                    }
                ]
            },
            {
                "id": 1850633,
                "content": [
                    {
                        "username": "charlescolfer",
                        "content": "Everyone says to just read the directions and return K but the results shows the Expected Answer for Case 1 as [1,2] & Case 2 as [0,1,2,3,4] - This is incorrect, or the directions are incorrect. I\\'ve returned both K as an integer representing the number of unique elements, and the array and got both wrong. "
                    },
                    {
                        "username": "idklol8",
                        "content": "you return K, but you also have to remove the duplicate elements from nums.\\n\\nthe return value, K, tells the grader to check the first K elements in nums. "
                    },
                    {
                        "username": "sbjunaid14",
                        "content": "IS this related to set???"
                    },
                    {
                        "username": "shubhi4",
                        "content": "No, just need to alter the array"
                    },
                    {
                        "username": "mcorne_76",
                        "content": "This question is fucking stupid"
                    },
                    {
                        "username": "DEVELOPER_777M",
                        "content": "```\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        j = 1\\n        for i in range(len(nums) - 1):\\n            if nums[i] != nums[i + 1]:\\n                nums[j] = nums[i + 1]\\n                j += 1\\n        return j\\n```\\nThis way worked\\uD83D\\uDE09\\u2757\\uFE0F"
                    },
                    {
                        "username": "AJAYPATIDAR2022",
                        "content": "I am not sure why it is stated in question that the remaining numbers are not important. and in the solution they are slicing away the array marking my result as wrong answer. either remove that slicing part or allow our answers to be true where we keep only unique element and leave the other numbers behind"
                    },
                    {
                        "username": "PavelKovtun",
                        "content": "Hint:\nYou should modify the array passed to you (no need to create a new one)!"
                    },
                    {
                        "username": "eugene_stukalov",
                        "content": "Somehow I had more trouble with this \"easy\" problem than with some \"hard\" problems (when intentionally not using a Java data type trick)."
                    },
                    {
                        "username": "Azkul",
                        "content": "This question was honestly really bad, without the comments to explain how the behind the scenes works there\\'s no way I could solve it even though I solved the actual problem in my IDE. Just remember that you don\\'t need to remove any number in nums, just have the unique numbers sorted at the begining of the list."
                    },
                    {
                        "username": "ahumada1790",
                        "content": "Just in case somebody is doing this in Typescript and for some reason getting a error despite working, trying changing to javascript. I think the typescript compiler may be glitchy."
                    },
                    {
                        "username": "TYork",
                        "content": "class Solution {\\n\\n\\tpublic int removeDuplicates(int[] nums) {\\n\\n\\n\\t\\tArrayList<Integer> foo = new ArrayList<Integer>();\\n\\t\\t\\n\\t\\tfor (int i = 0; i <nums.length;i++) {\\n\\t\\t\\tif(foo.contains(nums[i])){\\n\\t\\t\\t\\tcontinue;\\n\\n\\t\\t\\t}\\n\\t\\t\\telse{\\n\\t\\t\\t\\tfoo.add(nums[i]);\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t}\\n\\t\\tSystem.out.println(foo.toString());\\n\\n\\t\\treturn foo.size();\\n\\t}\\n}\\n\\t\\t\\n\\n\\nhow in Earth is this wrong? Just another Leetcode jokes."
                    }
                ]
            },
            {
                "id": 1848821,
                "content": [
                    {
                        "username": "Hussain_14",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& a) {\\n         \\n         \\n         int n=a.size();\\n         if(n==1)\\n         return 1;\\n\\n         if(n==2)\\n         {\\n             if(a[0]==a[1])\\n             return 1;\\n             else return 2;\\n         }\\nint j=1;\\n         \\n        for(int i=0;i<n;)\\n        {\\n            int curr=a[i];\\n            while(a[i]==curr and i<n)\\n            i++;\\n            \\n             if(i==n)\\n            return j;\\n            else\\n            if(i<n)\\n            a[j]=a[i],j++;\\n            \\n           \\n        }\\n        return j-1;\\n    }\\n};\\n\\n\\nwhats the error here?"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "I have solved the problem in my default text editor when I redo the same in leetcode I keep getting empty output. But the solution worked in my code editor. Somebody please explain to me why this keeps happening."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Whoever came up with this problem is an idiot, it says return k as an array but it's an int, but then it loops through it again? Fuck you"
                    },
                    {
                        "username": "nitsjain",
                        "content": "public int removeDuplicates(int[] nums) {\\n        int count =0;\\n        HashSet<Integer> hs = new HashSet<Integer>();\\n        for(int i = 0; i < nums.length; i++){\\n   hs.add(nums[i]);\\n}\\nreturn hs.size();\\n    }\\nThis piece of code is working fine on IDE but test cases are failing on leetcode."
                    },
                    {
                        "username": "Akshat4433",
                        "content": " `var removeDuplicates = function(nums) {\\n    \\n     let i = 0; j = 1;\\n\\n     while (j <= nums.length - 1) {\\n         if (nums[i] == nums[j]) {\\n             j++;\\n         }\\n         else {\\n             nums[i + 1] = nums[j];\\n             i++;\\n             j++;\\n         }\\n     }\\n     \\n};` \\n\\nThe prompt clearly states, there could be anything beyond k, but then why my solution is failing,\\nSome cases \\n\\n[1,1,2] -> [1,2,1]  , its say wrong answer , correct is [1,2] "
                    },
                    {
                        "username": "varshini-S",
                        "content": "why no one is using return len(set(nums)), why cant we use that- i\\'m a complete begineer, correct me If im wrong\\n"
                    },
                    {
                        "username": "nullablepriest",
                        "content": "- \"More formally, if there are k elements after removing the duplicates, then the first k elements of nums should hold the final result. It does not matter what you leave beyond the first k elements.\"\n\nOkay. My case:\nInput: [1,1,2,2,2,2]\nOutput: [1,2,0,0]\nExcpected: [1,2]\nWhy it doesnt work? It doesnt matter what values ​​I put after result - it doesn't work.\n\nBut in the \"case 2\" its work and i have no idea why:\nInput: [0,0,1,1,1,2,2,3,3,4]\nOutput: [0,1,2,3,4]\nExcpected: [0,1,2,3,4]\n\n(I use C#)\n\nUPDATE: Okay. The problem was that I was returning the number of duplicates."
                    },
                    {
                        "username": "clickclickcode",
                        "content": "So, this is an \"easy\" problem? The hard part is really deciphering the task. It says to \"return\" the result, which does absolutely nothing. What they really seem to mean is that they want it logged to the console. For JS - console.log(*insert result here*) or else you seem to have your output be an empty array no matter what you do.\\n\\nI am new to this platform, so I am curious to know if all the task descriptions here are equally misleading or if it is me who lacks experience in reading and solving problems? I mean, honestly, I do lack experience, hence, I\\'m here, but yes, I hope you get where I am going."
                    },
                    {
                        "username": "yewin",
                        "content": "question is not clear, what do they want integer or sorted number array? \\uD83D\\uDE07"
                    },
                    {
                        "username": "criomby",
                        "content": "*There are two options*\n1. **According to the examples given:**\nSort unique values at the front of the array and return the number of unique values in the array (length of unique subsequence)\n2. **My preferred way:**\nRemove duplicates from the array and return the length of the array after removal.\nSince it does not matter if you remove duplicates or just push them to the end of the array, this is way cleaner imo and easier to understand.\n\nThis saved me a lot of time and headache so I hope this helps you understand better what the idea here is."
                    }
                ]
            },
            {
                "id": 1842279,
                "content": [
                    {
                        "username": "Hussain_14",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& a) {\\n         \\n         \\n         int n=a.size();\\n         if(n==1)\\n         return 1;\\n\\n         if(n==2)\\n         {\\n             if(a[0]==a[1])\\n             return 1;\\n             else return 2;\\n         }\\nint j=1;\\n         \\n        for(int i=0;i<n;)\\n        {\\n            int curr=a[i];\\n            while(a[i]==curr and i<n)\\n            i++;\\n            \\n             if(i==n)\\n            return j;\\n            else\\n            if(i<n)\\n            a[j]=a[i],j++;\\n            \\n           \\n        }\\n        return j-1;\\n    }\\n};\\n\\n\\nwhats the error here?"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "I have solved the problem in my default text editor when I redo the same in leetcode I keep getting empty output. But the solution worked in my code editor. Somebody please explain to me why this keeps happening."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Whoever came up with this problem is an idiot, it says return k as an array but it's an int, but then it loops through it again? Fuck you"
                    },
                    {
                        "username": "nitsjain",
                        "content": "public int removeDuplicates(int[] nums) {\\n        int count =0;\\n        HashSet<Integer> hs = new HashSet<Integer>();\\n        for(int i = 0; i < nums.length; i++){\\n   hs.add(nums[i]);\\n}\\nreturn hs.size();\\n    }\\nThis piece of code is working fine on IDE but test cases are failing on leetcode."
                    },
                    {
                        "username": "Akshat4433",
                        "content": " `var removeDuplicates = function(nums) {\\n    \\n     let i = 0; j = 1;\\n\\n     while (j <= nums.length - 1) {\\n         if (nums[i] == nums[j]) {\\n             j++;\\n         }\\n         else {\\n             nums[i + 1] = nums[j];\\n             i++;\\n             j++;\\n         }\\n     }\\n     \\n};` \\n\\nThe prompt clearly states, there could be anything beyond k, but then why my solution is failing,\\nSome cases \\n\\n[1,1,2] -> [1,2,1]  , its say wrong answer , correct is [1,2] "
                    },
                    {
                        "username": "varshini-S",
                        "content": "why no one is using return len(set(nums)), why cant we use that- i\\'m a complete begineer, correct me If im wrong\\n"
                    },
                    {
                        "username": "nullablepriest",
                        "content": "- \"More formally, if there are k elements after removing the duplicates, then the first k elements of nums should hold the final result. It does not matter what you leave beyond the first k elements.\"\n\nOkay. My case:\nInput: [1,1,2,2,2,2]\nOutput: [1,2,0,0]\nExcpected: [1,2]\nWhy it doesnt work? It doesnt matter what values ​​I put after result - it doesn't work.\n\nBut in the \"case 2\" its work and i have no idea why:\nInput: [0,0,1,1,1,2,2,3,3,4]\nOutput: [0,1,2,3,4]\nExcpected: [0,1,2,3,4]\n\n(I use C#)\n\nUPDATE: Okay. The problem was that I was returning the number of duplicates."
                    },
                    {
                        "username": "clickclickcode",
                        "content": "So, this is an \"easy\" problem? The hard part is really deciphering the task. It says to \"return\" the result, which does absolutely nothing. What they really seem to mean is that they want it logged to the console. For JS - console.log(*insert result here*) or else you seem to have your output be an empty array no matter what you do.\\n\\nI am new to this platform, so I am curious to know if all the task descriptions here are equally misleading or if it is me who lacks experience in reading and solving problems? I mean, honestly, I do lack experience, hence, I\\'m here, but yes, I hope you get where I am going."
                    },
                    {
                        "username": "yewin",
                        "content": "question is not clear, what do they want integer or sorted number array? \\uD83D\\uDE07"
                    },
                    {
                        "username": "criomby",
                        "content": "*There are two options*\n1. **According to the examples given:**\nSort unique values at the front of the array and return the number of unique values in the array (length of unique subsequence)\n2. **My preferred way:**\nRemove duplicates from the array and return the length of the array after removal.\nSince it does not matter if you remove duplicates or just push them to the end of the array, this is way cleaner imo and easier to understand.\n\nThis saved me a lot of time and headache so I hope this helps you understand better what the idea here is."
                    }
                ]
            },
            {
                "id": 1841345,
                "content": [
                    {
                        "username": "Hussain_14",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& a) {\\n         \\n         \\n         int n=a.size();\\n         if(n==1)\\n         return 1;\\n\\n         if(n==2)\\n         {\\n             if(a[0]==a[1])\\n             return 1;\\n             else return 2;\\n         }\\nint j=1;\\n         \\n        for(int i=0;i<n;)\\n        {\\n            int curr=a[i];\\n            while(a[i]==curr and i<n)\\n            i++;\\n            \\n             if(i==n)\\n            return j;\\n            else\\n            if(i<n)\\n            a[j]=a[i],j++;\\n            \\n           \\n        }\\n        return j-1;\\n    }\\n};\\n\\n\\nwhats the error here?"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "I have solved the problem in my default text editor when I redo the same in leetcode I keep getting empty output. But the solution worked in my code editor. Somebody please explain to me why this keeps happening."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Whoever came up with this problem is an idiot, it says return k as an array but it's an int, but then it loops through it again? Fuck you"
                    },
                    {
                        "username": "nitsjain",
                        "content": "public int removeDuplicates(int[] nums) {\\n        int count =0;\\n        HashSet<Integer> hs = new HashSet<Integer>();\\n        for(int i = 0; i < nums.length; i++){\\n   hs.add(nums[i]);\\n}\\nreturn hs.size();\\n    }\\nThis piece of code is working fine on IDE but test cases are failing on leetcode."
                    },
                    {
                        "username": "Akshat4433",
                        "content": " `var removeDuplicates = function(nums) {\\n    \\n     let i = 0; j = 1;\\n\\n     while (j <= nums.length - 1) {\\n         if (nums[i] == nums[j]) {\\n             j++;\\n         }\\n         else {\\n             nums[i + 1] = nums[j];\\n             i++;\\n             j++;\\n         }\\n     }\\n     \\n};` \\n\\nThe prompt clearly states, there could be anything beyond k, but then why my solution is failing,\\nSome cases \\n\\n[1,1,2] -> [1,2,1]  , its say wrong answer , correct is [1,2] "
                    },
                    {
                        "username": "varshini-S",
                        "content": "why no one is using return len(set(nums)), why cant we use that- i\\'m a complete begineer, correct me If im wrong\\n"
                    },
                    {
                        "username": "nullablepriest",
                        "content": "- \"More formally, if there are k elements after removing the duplicates, then the first k elements of nums should hold the final result. It does not matter what you leave beyond the first k elements.\"\n\nOkay. My case:\nInput: [1,1,2,2,2,2]\nOutput: [1,2,0,0]\nExcpected: [1,2]\nWhy it doesnt work? It doesnt matter what values ​​I put after result - it doesn't work.\n\nBut in the \"case 2\" its work and i have no idea why:\nInput: [0,0,1,1,1,2,2,3,3,4]\nOutput: [0,1,2,3,4]\nExcpected: [0,1,2,3,4]\n\n(I use C#)\n\nUPDATE: Okay. The problem was that I was returning the number of duplicates."
                    },
                    {
                        "username": "clickclickcode",
                        "content": "So, this is an \"easy\" problem? The hard part is really deciphering the task. It says to \"return\" the result, which does absolutely nothing. What they really seem to mean is that they want it logged to the console. For JS - console.log(*insert result here*) or else you seem to have your output be an empty array no matter what you do.\\n\\nI am new to this platform, so I am curious to know if all the task descriptions here are equally misleading or if it is me who lacks experience in reading and solving problems? I mean, honestly, I do lack experience, hence, I\\'m here, but yes, I hope you get where I am going."
                    },
                    {
                        "username": "yewin",
                        "content": "question is not clear, what do they want integer or sorted number array? \\uD83D\\uDE07"
                    },
                    {
                        "username": "criomby",
                        "content": "*There are two options*\n1. **According to the examples given:**\nSort unique values at the front of the array and return the number of unique values in the array (length of unique subsequence)\n2. **My preferred way:**\nRemove duplicates from the array and return the length of the array after removal.\nSince it does not matter if you remove duplicates or just push them to the end of the array, this is way cleaner imo and easier to understand.\n\nThis saved me a lot of time and headache so I hope this helps you understand better what the idea here is."
                    }
                ]
            },
            {
                "id": 1837156,
                "content": [
                    {
                        "username": "Hussain_14",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& a) {\\n         \\n         \\n         int n=a.size();\\n         if(n==1)\\n         return 1;\\n\\n         if(n==2)\\n         {\\n             if(a[0]==a[1])\\n             return 1;\\n             else return 2;\\n         }\\nint j=1;\\n         \\n        for(int i=0;i<n;)\\n        {\\n            int curr=a[i];\\n            while(a[i]==curr and i<n)\\n            i++;\\n            \\n             if(i==n)\\n            return j;\\n            else\\n            if(i<n)\\n            a[j]=a[i],j++;\\n            \\n           \\n        }\\n        return j-1;\\n    }\\n};\\n\\n\\nwhats the error here?"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "I have solved the problem in my default text editor when I redo the same in leetcode I keep getting empty output. But the solution worked in my code editor. Somebody please explain to me why this keeps happening."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Whoever came up with this problem is an idiot, it says return k as an array but it's an int, but then it loops through it again? Fuck you"
                    },
                    {
                        "username": "nitsjain",
                        "content": "public int removeDuplicates(int[] nums) {\\n        int count =0;\\n        HashSet<Integer> hs = new HashSet<Integer>();\\n        for(int i = 0; i < nums.length; i++){\\n   hs.add(nums[i]);\\n}\\nreturn hs.size();\\n    }\\nThis piece of code is working fine on IDE but test cases are failing on leetcode."
                    },
                    {
                        "username": "Akshat4433",
                        "content": " `var removeDuplicates = function(nums) {\\n    \\n     let i = 0; j = 1;\\n\\n     while (j <= nums.length - 1) {\\n         if (nums[i] == nums[j]) {\\n             j++;\\n         }\\n         else {\\n             nums[i + 1] = nums[j];\\n             i++;\\n             j++;\\n         }\\n     }\\n     \\n};` \\n\\nThe prompt clearly states, there could be anything beyond k, but then why my solution is failing,\\nSome cases \\n\\n[1,1,2] -> [1,2,1]  , its say wrong answer , correct is [1,2] "
                    },
                    {
                        "username": "varshini-S",
                        "content": "why no one is using return len(set(nums)), why cant we use that- i\\'m a complete begineer, correct me If im wrong\\n"
                    },
                    {
                        "username": "nullablepriest",
                        "content": "- \"More formally, if there are k elements after removing the duplicates, then the first k elements of nums should hold the final result. It does not matter what you leave beyond the first k elements.\"\n\nOkay. My case:\nInput: [1,1,2,2,2,2]\nOutput: [1,2,0,0]\nExcpected: [1,2]\nWhy it doesnt work? It doesnt matter what values ​​I put after result - it doesn't work.\n\nBut in the \"case 2\" its work and i have no idea why:\nInput: [0,0,1,1,1,2,2,3,3,4]\nOutput: [0,1,2,3,4]\nExcpected: [0,1,2,3,4]\n\n(I use C#)\n\nUPDATE: Okay. The problem was that I was returning the number of duplicates."
                    },
                    {
                        "username": "clickclickcode",
                        "content": "So, this is an \"easy\" problem? The hard part is really deciphering the task. It says to \"return\" the result, which does absolutely nothing. What they really seem to mean is that they want it logged to the console. For JS - console.log(*insert result here*) or else you seem to have your output be an empty array no matter what you do.\\n\\nI am new to this platform, so I am curious to know if all the task descriptions here are equally misleading or if it is me who lacks experience in reading and solving problems? I mean, honestly, I do lack experience, hence, I\\'m here, but yes, I hope you get where I am going."
                    },
                    {
                        "username": "yewin",
                        "content": "question is not clear, what do they want integer or sorted number array? \\uD83D\\uDE07"
                    },
                    {
                        "username": "criomby",
                        "content": "*There are two options*\n1. **According to the examples given:**\nSort unique values at the front of the array and return the number of unique values in the array (length of unique subsequence)\n2. **My preferred way:**\nRemove duplicates from the array and return the length of the array after removal.\nSince it does not matter if you remove duplicates or just push them to the end of the array, this is way cleaner imo and easier to understand.\n\nThis saved me a lot of time and headache so I hope this helps you understand better what the idea here is."
                    }
                ]
            },
            {
                "id": 1830118,
                "content": [
                    {
                        "username": "Hussain_14",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& a) {\\n         \\n         \\n         int n=a.size();\\n         if(n==1)\\n         return 1;\\n\\n         if(n==2)\\n         {\\n             if(a[0]==a[1])\\n             return 1;\\n             else return 2;\\n         }\\nint j=1;\\n         \\n        for(int i=0;i<n;)\\n        {\\n            int curr=a[i];\\n            while(a[i]==curr and i<n)\\n            i++;\\n            \\n             if(i==n)\\n            return j;\\n            else\\n            if(i<n)\\n            a[j]=a[i],j++;\\n            \\n           \\n        }\\n        return j-1;\\n    }\\n};\\n\\n\\nwhats the error here?"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "I have solved the problem in my default text editor when I redo the same in leetcode I keep getting empty output. But the solution worked in my code editor. Somebody please explain to me why this keeps happening."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Whoever came up with this problem is an idiot, it says return k as an array but it's an int, but then it loops through it again? Fuck you"
                    },
                    {
                        "username": "nitsjain",
                        "content": "public int removeDuplicates(int[] nums) {\\n        int count =0;\\n        HashSet<Integer> hs = new HashSet<Integer>();\\n        for(int i = 0; i < nums.length; i++){\\n   hs.add(nums[i]);\\n}\\nreturn hs.size();\\n    }\\nThis piece of code is working fine on IDE but test cases are failing on leetcode."
                    },
                    {
                        "username": "Akshat4433",
                        "content": " `var removeDuplicates = function(nums) {\\n    \\n     let i = 0; j = 1;\\n\\n     while (j <= nums.length - 1) {\\n         if (nums[i] == nums[j]) {\\n             j++;\\n         }\\n         else {\\n             nums[i + 1] = nums[j];\\n             i++;\\n             j++;\\n         }\\n     }\\n     \\n};` \\n\\nThe prompt clearly states, there could be anything beyond k, but then why my solution is failing,\\nSome cases \\n\\n[1,1,2] -> [1,2,1]  , its say wrong answer , correct is [1,2] "
                    },
                    {
                        "username": "varshini-S",
                        "content": "why no one is using return len(set(nums)), why cant we use that- i\\'m a complete begineer, correct me If im wrong\\n"
                    },
                    {
                        "username": "nullablepriest",
                        "content": "- \"More formally, if there are k elements after removing the duplicates, then the first k elements of nums should hold the final result. It does not matter what you leave beyond the first k elements.\"\n\nOkay. My case:\nInput: [1,1,2,2,2,2]\nOutput: [1,2,0,0]\nExcpected: [1,2]\nWhy it doesnt work? It doesnt matter what values ​​I put after result - it doesn't work.\n\nBut in the \"case 2\" its work and i have no idea why:\nInput: [0,0,1,1,1,2,2,3,3,4]\nOutput: [0,1,2,3,4]\nExcpected: [0,1,2,3,4]\n\n(I use C#)\n\nUPDATE: Okay. The problem was that I was returning the number of duplicates."
                    },
                    {
                        "username": "clickclickcode",
                        "content": "So, this is an \"easy\" problem? The hard part is really deciphering the task. It says to \"return\" the result, which does absolutely nothing. What they really seem to mean is that they want it logged to the console. For JS - console.log(*insert result here*) or else you seem to have your output be an empty array no matter what you do.\\n\\nI am new to this platform, so I am curious to know if all the task descriptions here are equally misleading or if it is me who lacks experience in reading and solving problems? I mean, honestly, I do lack experience, hence, I\\'m here, but yes, I hope you get where I am going."
                    },
                    {
                        "username": "yewin",
                        "content": "question is not clear, what do they want integer or sorted number array? \\uD83D\\uDE07"
                    },
                    {
                        "username": "criomby",
                        "content": "*There are two options*\n1. **According to the examples given:**\nSort unique values at the front of the array and return the number of unique values in the array (length of unique subsequence)\n2. **My preferred way:**\nRemove duplicates from the array and return the length of the array after removal.\nSince it does not matter if you remove duplicates or just push them to the end of the array, this is way cleaner imo and easier to understand.\n\nThis saved me a lot of time and headache so I hope this helps you understand better what the idea here is."
                    }
                ]
            },
            {
                "id": 1828220,
                "content": [
                    {
                        "username": "Hussain_14",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& a) {\\n         \\n         \\n         int n=a.size();\\n         if(n==1)\\n         return 1;\\n\\n         if(n==2)\\n         {\\n             if(a[0]==a[1])\\n             return 1;\\n             else return 2;\\n         }\\nint j=1;\\n         \\n        for(int i=0;i<n;)\\n        {\\n            int curr=a[i];\\n            while(a[i]==curr and i<n)\\n            i++;\\n            \\n             if(i==n)\\n            return j;\\n            else\\n            if(i<n)\\n            a[j]=a[i],j++;\\n            \\n           \\n        }\\n        return j-1;\\n    }\\n};\\n\\n\\nwhats the error here?"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "I have solved the problem in my default text editor when I redo the same in leetcode I keep getting empty output. But the solution worked in my code editor. Somebody please explain to me why this keeps happening."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Whoever came up with this problem is an idiot, it says return k as an array but it's an int, but then it loops through it again? Fuck you"
                    },
                    {
                        "username": "nitsjain",
                        "content": "public int removeDuplicates(int[] nums) {\\n        int count =0;\\n        HashSet<Integer> hs = new HashSet<Integer>();\\n        for(int i = 0; i < nums.length; i++){\\n   hs.add(nums[i]);\\n}\\nreturn hs.size();\\n    }\\nThis piece of code is working fine on IDE but test cases are failing on leetcode."
                    },
                    {
                        "username": "Akshat4433",
                        "content": " `var removeDuplicates = function(nums) {\\n    \\n     let i = 0; j = 1;\\n\\n     while (j <= nums.length - 1) {\\n         if (nums[i] == nums[j]) {\\n             j++;\\n         }\\n         else {\\n             nums[i + 1] = nums[j];\\n             i++;\\n             j++;\\n         }\\n     }\\n     \\n};` \\n\\nThe prompt clearly states, there could be anything beyond k, but then why my solution is failing,\\nSome cases \\n\\n[1,1,2] -> [1,2,1]  , its say wrong answer , correct is [1,2] "
                    },
                    {
                        "username": "varshini-S",
                        "content": "why no one is using return len(set(nums)), why cant we use that- i\\'m a complete begineer, correct me If im wrong\\n"
                    },
                    {
                        "username": "nullablepriest",
                        "content": "- \"More formally, if there are k elements after removing the duplicates, then the first k elements of nums should hold the final result. It does not matter what you leave beyond the first k elements.\"\n\nOkay. My case:\nInput: [1,1,2,2,2,2]\nOutput: [1,2,0,0]\nExcpected: [1,2]\nWhy it doesnt work? It doesnt matter what values ​​I put after result - it doesn't work.\n\nBut in the \"case 2\" its work and i have no idea why:\nInput: [0,0,1,1,1,2,2,3,3,4]\nOutput: [0,1,2,3,4]\nExcpected: [0,1,2,3,4]\n\n(I use C#)\n\nUPDATE: Okay. The problem was that I was returning the number of duplicates."
                    },
                    {
                        "username": "clickclickcode",
                        "content": "So, this is an \"easy\" problem? The hard part is really deciphering the task. It says to \"return\" the result, which does absolutely nothing. What they really seem to mean is that they want it logged to the console. For JS - console.log(*insert result here*) or else you seem to have your output be an empty array no matter what you do.\\n\\nI am new to this platform, so I am curious to know if all the task descriptions here are equally misleading or if it is me who lacks experience in reading and solving problems? I mean, honestly, I do lack experience, hence, I\\'m here, but yes, I hope you get where I am going."
                    },
                    {
                        "username": "yewin",
                        "content": "question is not clear, what do they want integer or sorted number array? \\uD83D\\uDE07"
                    },
                    {
                        "username": "criomby",
                        "content": "*There are two options*\n1. **According to the examples given:**\nSort unique values at the front of the array and return the number of unique values in the array (length of unique subsequence)\n2. **My preferred way:**\nRemove duplicates from the array and return the length of the array after removal.\nSince it does not matter if you remove duplicates or just push them to the end of the array, this is way cleaner imo and easier to understand.\n\nThis saved me a lot of time and headache so I hope this helps you understand better what the idea here is."
                    }
                ]
            },
            {
                "id": 1827361,
                "content": [
                    {
                        "username": "Hussain_14",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& a) {\\n         \\n         \\n         int n=a.size();\\n         if(n==1)\\n         return 1;\\n\\n         if(n==2)\\n         {\\n             if(a[0]==a[1])\\n             return 1;\\n             else return 2;\\n         }\\nint j=1;\\n         \\n        for(int i=0;i<n;)\\n        {\\n            int curr=a[i];\\n            while(a[i]==curr and i<n)\\n            i++;\\n            \\n             if(i==n)\\n            return j;\\n            else\\n            if(i<n)\\n            a[j]=a[i],j++;\\n            \\n           \\n        }\\n        return j-1;\\n    }\\n};\\n\\n\\nwhats the error here?"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "I have solved the problem in my default text editor when I redo the same in leetcode I keep getting empty output. But the solution worked in my code editor. Somebody please explain to me why this keeps happening."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Whoever came up with this problem is an idiot, it says return k as an array but it's an int, but then it loops through it again? Fuck you"
                    },
                    {
                        "username": "nitsjain",
                        "content": "public int removeDuplicates(int[] nums) {\\n        int count =0;\\n        HashSet<Integer> hs = new HashSet<Integer>();\\n        for(int i = 0; i < nums.length; i++){\\n   hs.add(nums[i]);\\n}\\nreturn hs.size();\\n    }\\nThis piece of code is working fine on IDE but test cases are failing on leetcode."
                    },
                    {
                        "username": "Akshat4433",
                        "content": " `var removeDuplicates = function(nums) {\\n    \\n     let i = 0; j = 1;\\n\\n     while (j <= nums.length - 1) {\\n         if (nums[i] == nums[j]) {\\n             j++;\\n         }\\n         else {\\n             nums[i + 1] = nums[j];\\n             i++;\\n             j++;\\n         }\\n     }\\n     \\n};` \\n\\nThe prompt clearly states, there could be anything beyond k, but then why my solution is failing,\\nSome cases \\n\\n[1,1,2] -> [1,2,1]  , its say wrong answer , correct is [1,2] "
                    },
                    {
                        "username": "varshini-S",
                        "content": "why no one is using return len(set(nums)), why cant we use that- i\\'m a complete begineer, correct me If im wrong\\n"
                    },
                    {
                        "username": "nullablepriest",
                        "content": "- \"More formally, if there are k elements after removing the duplicates, then the first k elements of nums should hold the final result. It does not matter what you leave beyond the first k elements.\"\n\nOkay. My case:\nInput: [1,1,2,2,2,2]\nOutput: [1,2,0,0]\nExcpected: [1,2]\nWhy it doesnt work? It doesnt matter what values ​​I put after result - it doesn't work.\n\nBut in the \"case 2\" its work and i have no idea why:\nInput: [0,0,1,1,1,2,2,3,3,4]\nOutput: [0,1,2,3,4]\nExcpected: [0,1,2,3,4]\n\n(I use C#)\n\nUPDATE: Okay. The problem was that I was returning the number of duplicates."
                    },
                    {
                        "username": "clickclickcode",
                        "content": "So, this is an \"easy\" problem? The hard part is really deciphering the task. It says to \"return\" the result, which does absolutely nothing. What they really seem to mean is that they want it logged to the console. For JS - console.log(*insert result here*) or else you seem to have your output be an empty array no matter what you do.\\n\\nI am new to this platform, so I am curious to know if all the task descriptions here are equally misleading or if it is me who lacks experience in reading and solving problems? I mean, honestly, I do lack experience, hence, I\\'m here, but yes, I hope you get where I am going."
                    },
                    {
                        "username": "yewin",
                        "content": "question is not clear, what do they want integer or sorted number array? \\uD83D\\uDE07"
                    },
                    {
                        "username": "criomby",
                        "content": "*There are two options*\n1. **According to the examples given:**\nSort unique values at the front of the array and return the number of unique values in the array (length of unique subsequence)\n2. **My preferred way:**\nRemove duplicates from the array and return the length of the array after removal.\nSince it does not matter if you remove duplicates or just push them to the end of the array, this is way cleaner imo and easier to understand.\n\nThis saved me a lot of time and headache so I hope this helps you understand better what the idea here is."
                    }
                ]
            },
            {
                "id": 1827193,
                "content": [
                    {
                        "username": "Hussain_14",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& a) {\\n         \\n         \\n         int n=a.size();\\n         if(n==1)\\n         return 1;\\n\\n         if(n==2)\\n         {\\n             if(a[0]==a[1])\\n             return 1;\\n             else return 2;\\n         }\\nint j=1;\\n         \\n        for(int i=0;i<n;)\\n        {\\n            int curr=a[i];\\n            while(a[i]==curr and i<n)\\n            i++;\\n            \\n             if(i==n)\\n            return j;\\n            else\\n            if(i<n)\\n            a[j]=a[i],j++;\\n            \\n           \\n        }\\n        return j-1;\\n    }\\n};\\n\\n\\nwhats the error here?"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "I have solved the problem in my default text editor when I redo the same in leetcode I keep getting empty output. But the solution worked in my code editor. Somebody please explain to me why this keeps happening."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Whoever came up with this problem is an idiot, it says return k as an array but it's an int, but then it loops through it again? Fuck you"
                    },
                    {
                        "username": "nitsjain",
                        "content": "public int removeDuplicates(int[] nums) {\\n        int count =0;\\n        HashSet<Integer> hs = new HashSet<Integer>();\\n        for(int i = 0; i < nums.length; i++){\\n   hs.add(nums[i]);\\n}\\nreturn hs.size();\\n    }\\nThis piece of code is working fine on IDE but test cases are failing on leetcode."
                    },
                    {
                        "username": "Akshat4433",
                        "content": " `var removeDuplicates = function(nums) {\\n    \\n     let i = 0; j = 1;\\n\\n     while (j <= nums.length - 1) {\\n         if (nums[i] == nums[j]) {\\n             j++;\\n         }\\n         else {\\n             nums[i + 1] = nums[j];\\n             i++;\\n             j++;\\n         }\\n     }\\n     \\n};` \\n\\nThe prompt clearly states, there could be anything beyond k, but then why my solution is failing,\\nSome cases \\n\\n[1,1,2] -> [1,2,1]  , its say wrong answer , correct is [1,2] "
                    },
                    {
                        "username": "varshini-S",
                        "content": "why no one is using return len(set(nums)), why cant we use that- i\\'m a complete begineer, correct me If im wrong\\n"
                    },
                    {
                        "username": "nullablepriest",
                        "content": "- \"More formally, if there are k elements after removing the duplicates, then the first k elements of nums should hold the final result. It does not matter what you leave beyond the first k elements.\"\n\nOkay. My case:\nInput: [1,1,2,2,2,2]\nOutput: [1,2,0,0]\nExcpected: [1,2]\nWhy it doesnt work? It doesnt matter what values ​​I put after result - it doesn't work.\n\nBut in the \"case 2\" its work and i have no idea why:\nInput: [0,0,1,1,1,2,2,3,3,4]\nOutput: [0,1,2,3,4]\nExcpected: [0,1,2,3,4]\n\n(I use C#)\n\nUPDATE: Okay. The problem was that I was returning the number of duplicates."
                    },
                    {
                        "username": "clickclickcode",
                        "content": "So, this is an \"easy\" problem? The hard part is really deciphering the task. It says to \"return\" the result, which does absolutely nothing. What they really seem to mean is that they want it logged to the console. For JS - console.log(*insert result here*) or else you seem to have your output be an empty array no matter what you do.\\n\\nI am new to this platform, so I am curious to know if all the task descriptions here are equally misleading or if it is me who lacks experience in reading and solving problems? I mean, honestly, I do lack experience, hence, I\\'m here, but yes, I hope you get where I am going."
                    },
                    {
                        "username": "yewin",
                        "content": "question is not clear, what do they want integer or sorted number array? \\uD83D\\uDE07"
                    },
                    {
                        "username": "criomby",
                        "content": "*There are two options*\n1. **According to the examples given:**\nSort unique values at the front of the array and return the number of unique values in the array (length of unique subsequence)\n2. **My preferred way:**\nRemove duplicates from the array and return the length of the array after removal.\nSince it does not matter if you remove duplicates or just push them to the end of the array, this is way cleaner imo and easier to understand.\n\nThis saved me a lot of time and headache so I hope this helps you understand better what the idea here is."
                    }
                ]
            },
            {
                "id": 1826933,
                "content": [
                    {
                        "username": "Hussain_14",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& a) {\\n         \\n         \\n         int n=a.size();\\n         if(n==1)\\n         return 1;\\n\\n         if(n==2)\\n         {\\n             if(a[0]==a[1])\\n             return 1;\\n             else return 2;\\n         }\\nint j=1;\\n         \\n        for(int i=0;i<n;)\\n        {\\n            int curr=a[i];\\n            while(a[i]==curr and i<n)\\n            i++;\\n            \\n             if(i==n)\\n            return j;\\n            else\\n            if(i<n)\\n            a[j]=a[i],j++;\\n            \\n           \\n        }\\n        return j-1;\\n    }\\n};\\n\\n\\nwhats the error here?"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "I have solved the problem in my default text editor when I redo the same in leetcode I keep getting empty output. But the solution worked in my code editor. Somebody please explain to me why this keeps happening."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Whoever came up with this problem is an idiot, it says return k as an array but it's an int, but then it loops through it again? Fuck you"
                    },
                    {
                        "username": "nitsjain",
                        "content": "public int removeDuplicates(int[] nums) {\\n        int count =0;\\n        HashSet<Integer> hs = new HashSet<Integer>();\\n        for(int i = 0; i < nums.length; i++){\\n   hs.add(nums[i]);\\n}\\nreturn hs.size();\\n    }\\nThis piece of code is working fine on IDE but test cases are failing on leetcode."
                    },
                    {
                        "username": "Akshat4433",
                        "content": " `var removeDuplicates = function(nums) {\\n    \\n     let i = 0; j = 1;\\n\\n     while (j <= nums.length - 1) {\\n         if (nums[i] == nums[j]) {\\n             j++;\\n         }\\n         else {\\n             nums[i + 1] = nums[j];\\n             i++;\\n             j++;\\n         }\\n     }\\n     \\n};` \\n\\nThe prompt clearly states, there could be anything beyond k, but then why my solution is failing,\\nSome cases \\n\\n[1,1,2] -> [1,2,1]  , its say wrong answer , correct is [1,2] "
                    },
                    {
                        "username": "varshini-S",
                        "content": "why no one is using return len(set(nums)), why cant we use that- i\\'m a complete begineer, correct me If im wrong\\n"
                    },
                    {
                        "username": "nullablepriest",
                        "content": "- \"More formally, if there are k elements after removing the duplicates, then the first k elements of nums should hold the final result. It does not matter what you leave beyond the first k elements.\"\n\nOkay. My case:\nInput: [1,1,2,2,2,2]\nOutput: [1,2,0,0]\nExcpected: [1,2]\nWhy it doesnt work? It doesnt matter what values ​​I put after result - it doesn't work.\n\nBut in the \"case 2\" its work and i have no idea why:\nInput: [0,0,1,1,1,2,2,3,3,4]\nOutput: [0,1,2,3,4]\nExcpected: [0,1,2,3,4]\n\n(I use C#)\n\nUPDATE: Okay. The problem was that I was returning the number of duplicates."
                    },
                    {
                        "username": "clickclickcode",
                        "content": "So, this is an \"easy\" problem? The hard part is really deciphering the task. It says to \"return\" the result, which does absolutely nothing. What they really seem to mean is that they want it logged to the console. For JS - console.log(*insert result here*) or else you seem to have your output be an empty array no matter what you do.\\n\\nI am new to this platform, so I am curious to know if all the task descriptions here are equally misleading or if it is me who lacks experience in reading and solving problems? I mean, honestly, I do lack experience, hence, I\\'m here, but yes, I hope you get where I am going."
                    },
                    {
                        "username": "yewin",
                        "content": "question is not clear, what do they want integer or sorted number array? \\uD83D\\uDE07"
                    },
                    {
                        "username": "criomby",
                        "content": "*There are two options*\n1. **According to the examples given:**\nSort unique values at the front of the array and return the number of unique values in the array (length of unique subsequence)\n2. **My preferred way:**\nRemove duplicates from the array and return the length of the array after removal.\nSince it does not matter if you remove duplicates or just push them to the end of the array, this is way cleaner imo and easier to understand.\n\nThis saved me a lot of time and headache so I hope this helps you understand better what the idea here is."
                    }
                ]
            },
            {
                "id": 1816142,
                "content": [
                    {
                        "username": "Hussain_14",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& a) {\\n         \\n         \\n         int n=a.size();\\n         if(n==1)\\n         return 1;\\n\\n         if(n==2)\\n         {\\n             if(a[0]==a[1])\\n             return 1;\\n             else return 2;\\n         }\\nint j=1;\\n         \\n        for(int i=0;i<n;)\\n        {\\n            int curr=a[i];\\n            while(a[i]==curr and i<n)\\n            i++;\\n            \\n             if(i==n)\\n            return j;\\n            else\\n            if(i<n)\\n            a[j]=a[i],j++;\\n            \\n           \\n        }\\n        return j-1;\\n    }\\n};\\n\\n\\nwhats the error here?"
                    },
                    {
                        "username": "foday_conteh",
                        "content": "I have solved the problem in my default text editor when I redo the same in leetcode I keep getting empty output. But the solution worked in my code editor. Somebody please explain to me why this keeps happening."
                    },
                    {
                        "username": "svenyboyyt",
                        "content": "Whoever came up with this problem is an idiot, it says return k as an array but it's an int, but then it loops through it again? Fuck you"
                    },
                    {
                        "username": "nitsjain",
                        "content": "public int removeDuplicates(int[] nums) {\\n        int count =0;\\n        HashSet<Integer> hs = new HashSet<Integer>();\\n        for(int i = 0; i < nums.length; i++){\\n   hs.add(nums[i]);\\n}\\nreturn hs.size();\\n    }\\nThis piece of code is working fine on IDE but test cases are failing on leetcode."
                    },
                    {
                        "username": "Akshat4433",
                        "content": " `var removeDuplicates = function(nums) {\\n    \\n     let i = 0; j = 1;\\n\\n     while (j <= nums.length - 1) {\\n         if (nums[i] == nums[j]) {\\n             j++;\\n         }\\n         else {\\n             nums[i + 1] = nums[j];\\n             i++;\\n             j++;\\n         }\\n     }\\n     \\n};` \\n\\nThe prompt clearly states, there could be anything beyond k, but then why my solution is failing,\\nSome cases \\n\\n[1,1,2] -> [1,2,1]  , its say wrong answer , correct is [1,2] "
                    },
                    {
                        "username": "varshini-S",
                        "content": "why no one is using return len(set(nums)), why cant we use that- i\\'m a complete begineer, correct me If im wrong\\n"
                    },
                    {
                        "username": "nullablepriest",
                        "content": "- \"More formally, if there are k elements after removing the duplicates, then the first k elements of nums should hold the final result. It does not matter what you leave beyond the first k elements.\"\n\nOkay. My case:\nInput: [1,1,2,2,2,2]\nOutput: [1,2,0,0]\nExcpected: [1,2]\nWhy it doesnt work? It doesnt matter what values ​​I put after result - it doesn't work.\n\nBut in the \"case 2\" its work and i have no idea why:\nInput: [0,0,1,1,1,2,2,3,3,4]\nOutput: [0,1,2,3,4]\nExcpected: [0,1,2,3,4]\n\n(I use C#)\n\nUPDATE: Okay. The problem was that I was returning the number of duplicates."
                    },
                    {
                        "username": "clickclickcode",
                        "content": "So, this is an \"easy\" problem? The hard part is really deciphering the task. It says to \"return\" the result, which does absolutely nothing. What they really seem to mean is that they want it logged to the console. For JS - console.log(*insert result here*) or else you seem to have your output be an empty array no matter what you do.\\n\\nI am new to this platform, so I am curious to know if all the task descriptions here are equally misleading or if it is me who lacks experience in reading and solving problems? I mean, honestly, I do lack experience, hence, I\\'m here, but yes, I hope you get where I am going."
                    },
                    {
                        "username": "yewin",
                        "content": "question is not clear, what do they want integer or sorted number array? \\uD83D\\uDE07"
                    },
                    {
                        "username": "criomby",
                        "content": "*There are two options*\n1. **According to the examples given:**\nSort unique values at the front of the array and return the number of unique values in the array (length of unique subsequence)\n2. **My preferred way:**\nRemove duplicates from the array and return the length of the array after removal.\nSince it does not matter if you remove duplicates or just push them to the end of the array, this is way cleaner imo and easier to understand.\n\nThis saved me a lot of time and headache so I hope this helps you understand better what the idea here is."
                    }
                ]
            },
            {
                "id": 1811902,
                "content": [
                    {
                        "username": "arjun259194",
                        "content": "so how should i return both array and k when the function only returns number (Typescript)"
                    },
                    {
                        "username": "idklol8",
                        "content": "You don\\'t need to return the array. You just need to remove the duplicates from the array without creating a new one and return the number of unique elements. The test cases will check the first k items in the array after your function runs."
                    },
                    {
                        "username": "Anshulsoni34",
                        "content": "C++ best approach\\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size() == 0){\\n            return 0;\\n        }\\n        int i = 0;\\n        for(int j = 1; j<nums.size(); j++){\\n            if(nums[i] != nums[j]){\\n                i++;\\n                nums[i] = nums[j];\\n            }\\n        }\\n        return i+1;\\n    }\\n};"
                    },
                    {
                        "username": "Udosinachi",
                        "content": "JavaScript has inbuilt functions to solve things like this, which is actually very good."
                    },
                    {
                        "username": "sandagolcea",
                        "content": "find it funny that returning the `length` is not accepted, and you have to return the array `response.length` ..\\nAt this point, just make me return the complete or sliced array?"
                    },
                    {
                        "username": "PBK320",
                        "content": "Python question...\\n\\nIt seems that the problem wants two items returned. The first is the length of the unique list and the second is the unique list itself. When you return multiple items in one return statement Python turns the items into a tuple. The problem doesn\\'t want a tuple returned. In python it\\'s easy to turn the tuple into the correct answer:\\n\\nlength, answer = removeDuplicates(nums)\\nprint(f\\'Length = {length}, Output = {answer}\\\\n\\')\\n\\nDoes anyone have an idea as to how to return two items as an integer and a list?\\n\\nThanks in advance...\\n"
                    },
                    {
                        "username": "idklol8",
                        "content": "They only want the length returned. They\\'re looking at the array theyve given you to make sure that you\\'re removing the duplicates in place without creating a new array."
                    },
                    {
                        "username": "iKittyCode",
                        "content": "Make sure to return the length this took me hours to figure out"
                    },
                    {
                        "username": "secretshine1",
                        "content": "var removeDuplicates = function (nums) {\\n    let arr = [];\\n    for (let i = 0; i < nums.length; i++) {\\n        let element = nums[i]\\n        if (arr.indexOf(element) === -1) {\\n            arr.push(element);\\n        }\\n    }\\n    return arr;\\n};\\n\\n\\nWhy its not working ?"
                    },
                    {
                        "username": "idklol8",
                        "content": "They want you to remove the duplicates from the original array (nums) without creating a new one. "
                    },
                    {
                        "username": "sainisaurav111",
                        "content": "class Solution {\\n    public int removeDuplicates(int[] nums) {\\n        if(nums.length == 0){\\n            return 0;\\n        }\\n        int i =0 ; \\n        for(int j=1; j<nums.length ; j++){\\n            if(nums[i] !=nums[j]){\\n                i++;\\n\\n            \\n                nums[i] = nums[j];\\n            }\\n        \\n        }\\n        return (i+1);\\n        \\n    }\\n}\\nThis is the easy method to solve the question ."
                    },
                    {
                        "username": "Pushpajekumar",
                        "content": "/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar removeDuplicates = function(nums) {\\nconst nums1 = new Set(nums);\\nconst newArray = Array.from(nums1)\\nconst sortedArray = newArray.sort()\\nconst sortedArrayLength = sortedArray.length\\n  return sortedArrayLength\\n};\\n\\nconst  nums = [0,0,1,1,1,2,2,3,3,4]\\n\\nremoveDuplicates(nums)\\n\\n\\nThis Code is working perfectly in my meachine but not here it returns blank array it is not seting the value of nums1"
                    },
                    {
                        "username": "hongying1525",
                        "content": "I don\\'t quite understand, why I cannot just simply use:\\n`list(dict.fromkeys(nums))`"
                    }
                ]
            },
            {
                "id": 1810837,
                "content": [
                    {
                        "username": "arjun259194",
                        "content": "so how should i return both array and k when the function only returns number (Typescript)"
                    },
                    {
                        "username": "idklol8",
                        "content": "You don\\'t need to return the array. You just need to remove the duplicates from the array without creating a new one and return the number of unique elements. The test cases will check the first k items in the array after your function runs."
                    },
                    {
                        "username": "Anshulsoni34",
                        "content": "C++ best approach\\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size() == 0){\\n            return 0;\\n        }\\n        int i = 0;\\n        for(int j = 1; j<nums.size(); j++){\\n            if(nums[i] != nums[j]){\\n                i++;\\n                nums[i] = nums[j];\\n            }\\n        }\\n        return i+1;\\n    }\\n};"
                    },
                    {
                        "username": "Udosinachi",
                        "content": "JavaScript has inbuilt functions to solve things like this, which is actually very good."
                    },
                    {
                        "username": "sandagolcea",
                        "content": "find it funny that returning the `length` is not accepted, and you have to return the array `response.length` ..\\nAt this point, just make me return the complete or sliced array?"
                    },
                    {
                        "username": "PBK320",
                        "content": "Python question...\\n\\nIt seems that the problem wants two items returned. The first is the length of the unique list and the second is the unique list itself. When you return multiple items in one return statement Python turns the items into a tuple. The problem doesn\\'t want a tuple returned. In python it\\'s easy to turn the tuple into the correct answer:\\n\\nlength, answer = removeDuplicates(nums)\\nprint(f\\'Length = {length}, Output = {answer}\\\\n\\')\\n\\nDoes anyone have an idea as to how to return two items as an integer and a list?\\n\\nThanks in advance...\\n"
                    },
                    {
                        "username": "idklol8",
                        "content": "They only want the length returned. They\\'re looking at the array theyve given you to make sure that you\\'re removing the duplicates in place without creating a new array."
                    },
                    {
                        "username": "iKittyCode",
                        "content": "Make sure to return the length this took me hours to figure out"
                    },
                    {
                        "username": "secretshine1",
                        "content": "var removeDuplicates = function (nums) {\\n    let arr = [];\\n    for (let i = 0; i < nums.length; i++) {\\n        let element = nums[i]\\n        if (arr.indexOf(element) === -1) {\\n            arr.push(element);\\n        }\\n    }\\n    return arr;\\n};\\n\\n\\nWhy its not working ?"
                    },
                    {
                        "username": "idklol8",
                        "content": "They want you to remove the duplicates from the original array (nums) without creating a new one. "
                    },
                    {
                        "username": "sainisaurav111",
                        "content": "class Solution {\\n    public int removeDuplicates(int[] nums) {\\n        if(nums.length == 0){\\n            return 0;\\n        }\\n        int i =0 ; \\n        for(int j=1; j<nums.length ; j++){\\n            if(nums[i] !=nums[j]){\\n                i++;\\n\\n            \\n                nums[i] = nums[j];\\n            }\\n        \\n        }\\n        return (i+1);\\n        \\n    }\\n}\\nThis is the easy method to solve the question ."
                    },
                    {
                        "username": "Pushpajekumar",
                        "content": "/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar removeDuplicates = function(nums) {\\nconst nums1 = new Set(nums);\\nconst newArray = Array.from(nums1)\\nconst sortedArray = newArray.sort()\\nconst sortedArrayLength = sortedArray.length\\n  return sortedArrayLength\\n};\\n\\nconst  nums = [0,0,1,1,1,2,2,3,3,4]\\n\\nremoveDuplicates(nums)\\n\\n\\nThis Code is working perfectly in my meachine but not here it returns blank array it is not seting the value of nums1"
                    },
                    {
                        "username": "hongying1525",
                        "content": "I don\\'t quite understand, why I cannot just simply use:\\n`list(dict.fromkeys(nums))`"
                    }
                ]
            },
            {
                "id": 1810460,
                "content": [
                    {
                        "username": "arjun259194",
                        "content": "so how should i return both array and k when the function only returns number (Typescript)"
                    },
                    {
                        "username": "idklol8",
                        "content": "You don\\'t need to return the array. You just need to remove the duplicates from the array without creating a new one and return the number of unique elements. The test cases will check the first k items in the array after your function runs."
                    },
                    {
                        "username": "Anshulsoni34",
                        "content": "C++ best approach\\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size() == 0){\\n            return 0;\\n        }\\n        int i = 0;\\n        for(int j = 1; j<nums.size(); j++){\\n            if(nums[i] != nums[j]){\\n                i++;\\n                nums[i] = nums[j];\\n            }\\n        }\\n        return i+1;\\n    }\\n};"
                    },
                    {
                        "username": "Udosinachi",
                        "content": "JavaScript has inbuilt functions to solve things like this, which is actually very good."
                    },
                    {
                        "username": "sandagolcea",
                        "content": "find it funny that returning the `length` is not accepted, and you have to return the array `response.length` ..\\nAt this point, just make me return the complete or sliced array?"
                    },
                    {
                        "username": "PBK320",
                        "content": "Python question...\\n\\nIt seems that the problem wants two items returned. The first is the length of the unique list and the second is the unique list itself. When you return multiple items in one return statement Python turns the items into a tuple. The problem doesn\\'t want a tuple returned. In python it\\'s easy to turn the tuple into the correct answer:\\n\\nlength, answer = removeDuplicates(nums)\\nprint(f\\'Length = {length}, Output = {answer}\\\\n\\')\\n\\nDoes anyone have an idea as to how to return two items as an integer and a list?\\n\\nThanks in advance...\\n"
                    },
                    {
                        "username": "idklol8",
                        "content": "They only want the length returned. They\\'re looking at the array theyve given you to make sure that you\\'re removing the duplicates in place without creating a new array."
                    },
                    {
                        "username": "iKittyCode",
                        "content": "Make sure to return the length this took me hours to figure out"
                    },
                    {
                        "username": "secretshine1",
                        "content": "var removeDuplicates = function (nums) {\\n    let arr = [];\\n    for (let i = 0; i < nums.length; i++) {\\n        let element = nums[i]\\n        if (arr.indexOf(element) === -1) {\\n            arr.push(element);\\n        }\\n    }\\n    return arr;\\n};\\n\\n\\nWhy its not working ?"
                    },
                    {
                        "username": "idklol8",
                        "content": "They want you to remove the duplicates from the original array (nums) without creating a new one. "
                    },
                    {
                        "username": "sainisaurav111",
                        "content": "class Solution {\\n    public int removeDuplicates(int[] nums) {\\n        if(nums.length == 0){\\n            return 0;\\n        }\\n        int i =0 ; \\n        for(int j=1; j<nums.length ; j++){\\n            if(nums[i] !=nums[j]){\\n                i++;\\n\\n            \\n                nums[i] = nums[j];\\n            }\\n        \\n        }\\n        return (i+1);\\n        \\n    }\\n}\\nThis is the easy method to solve the question ."
                    },
                    {
                        "username": "Pushpajekumar",
                        "content": "/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar removeDuplicates = function(nums) {\\nconst nums1 = new Set(nums);\\nconst newArray = Array.from(nums1)\\nconst sortedArray = newArray.sort()\\nconst sortedArrayLength = sortedArray.length\\n  return sortedArrayLength\\n};\\n\\nconst  nums = [0,0,1,1,1,2,2,3,3,4]\\n\\nremoveDuplicates(nums)\\n\\n\\nThis Code is working perfectly in my meachine but not here it returns blank array it is not seting the value of nums1"
                    },
                    {
                        "username": "hongying1525",
                        "content": "I don\\'t quite understand, why I cannot just simply use:\\n`list(dict.fromkeys(nums))`"
                    }
                ]
            },
            {
                "id": 1809799,
                "content": [
                    {
                        "username": "arjun259194",
                        "content": "so how should i return both array and k when the function only returns number (Typescript)"
                    },
                    {
                        "username": "idklol8",
                        "content": "You don\\'t need to return the array. You just need to remove the duplicates from the array without creating a new one and return the number of unique elements. The test cases will check the first k items in the array after your function runs."
                    },
                    {
                        "username": "Anshulsoni34",
                        "content": "C++ best approach\\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size() == 0){\\n            return 0;\\n        }\\n        int i = 0;\\n        for(int j = 1; j<nums.size(); j++){\\n            if(nums[i] != nums[j]){\\n                i++;\\n                nums[i] = nums[j];\\n            }\\n        }\\n        return i+1;\\n    }\\n};"
                    },
                    {
                        "username": "Udosinachi",
                        "content": "JavaScript has inbuilt functions to solve things like this, which is actually very good."
                    },
                    {
                        "username": "sandagolcea",
                        "content": "find it funny that returning the `length` is not accepted, and you have to return the array `response.length` ..\\nAt this point, just make me return the complete or sliced array?"
                    },
                    {
                        "username": "PBK320",
                        "content": "Python question...\\n\\nIt seems that the problem wants two items returned. The first is the length of the unique list and the second is the unique list itself. When you return multiple items in one return statement Python turns the items into a tuple. The problem doesn\\'t want a tuple returned. In python it\\'s easy to turn the tuple into the correct answer:\\n\\nlength, answer = removeDuplicates(nums)\\nprint(f\\'Length = {length}, Output = {answer}\\\\n\\')\\n\\nDoes anyone have an idea as to how to return two items as an integer and a list?\\n\\nThanks in advance...\\n"
                    },
                    {
                        "username": "idklol8",
                        "content": "They only want the length returned. They\\'re looking at the array theyve given you to make sure that you\\'re removing the duplicates in place without creating a new array."
                    },
                    {
                        "username": "iKittyCode",
                        "content": "Make sure to return the length this took me hours to figure out"
                    },
                    {
                        "username": "secretshine1",
                        "content": "var removeDuplicates = function (nums) {\\n    let arr = [];\\n    for (let i = 0; i < nums.length; i++) {\\n        let element = nums[i]\\n        if (arr.indexOf(element) === -1) {\\n            arr.push(element);\\n        }\\n    }\\n    return arr;\\n};\\n\\n\\nWhy its not working ?"
                    },
                    {
                        "username": "idklol8",
                        "content": "They want you to remove the duplicates from the original array (nums) without creating a new one. "
                    },
                    {
                        "username": "sainisaurav111",
                        "content": "class Solution {\\n    public int removeDuplicates(int[] nums) {\\n        if(nums.length == 0){\\n            return 0;\\n        }\\n        int i =0 ; \\n        for(int j=1; j<nums.length ; j++){\\n            if(nums[i] !=nums[j]){\\n                i++;\\n\\n            \\n                nums[i] = nums[j];\\n            }\\n        \\n        }\\n        return (i+1);\\n        \\n    }\\n}\\nThis is the easy method to solve the question ."
                    },
                    {
                        "username": "Pushpajekumar",
                        "content": "/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar removeDuplicates = function(nums) {\\nconst nums1 = new Set(nums);\\nconst newArray = Array.from(nums1)\\nconst sortedArray = newArray.sort()\\nconst sortedArrayLength = sortedArray.length\\n  return sortedArrayLength\\n};\\n\\nconst  nums = [0,0,1,1,1,2,2,3,3,4]\\n\\nremoveDuplicates(nums)\\n\\n\\nThis Code is working perfectly in my meachine but not here it returns blank array it is not seting the value of nums1"
                    },
                    {
                        "username": "hongying1525",
                        "content": "I don\\'t quite understand, why I cannot just simply use:\\n`list(dict.fromkeys(nums))`"
                    }
                ]
            },
            {
                "id": 1807587,
                "content": [
                    {
                        "username": "arjun259194",
                        "content": "so how should i return both array and k when the function only returns number (Typescript)"
                    },
                    {
                        "username": "idklol8",
                        "content": "You don\\'t need to return the array. You just need to remove the duplicates from the array without creating a new one and return the number of unique elements. The test cases will check the first k items in the array after your function runs."
                    },
                    {
                        "username": "Anshulsoni34",
                        "content": "C++ best approach\\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size() == 0){\\n            return 0;\\n        }\\n        int i = 0;\\n        for(int j = 1; j<nums.size(); j++){\\n            if(nums[i] != nums[j]){\\n                i++;\\n                nums[i] = nums[j];\\n            }\\n        }\\n        return i+1;\\n    }\\n};"
                    },
                    {
                        "username": "Udosinachi",
                        "content": "JavaScript has inbuilt functions to solve things like this, which is actually very good."
                    },
                    {
                        "username": "sandagolcea",
                        "content": "find it funny that returning the `length` is not accepted, and you have to return the array `response.length` ..\\nAt this point, just make me return the complete or sliced array?"
                    },
                    {
                        "username": "PBK320",
                        "content": "Python question...\\n\\nIt seems that the problem wants two items returned. The first is the length of the unique list and the second is the unique list itself. When you return multiple items in one return statement Python turns the items into a tuple. The problem doesn\\'t want a tuple returned. In python it\\'s easy to turn the tuple into the correct answer:\\n\\nlength, answer = removeDuplicates(nums)\\nprint(f\\'Length = {length}, Output = {answer}\\\\n\\')\\n\\nDoes anyone have an idea as to how to return two items as an integer and a list?\\n\\nThanks in advance...\\n"
                    },
                    {
                        "username": "idklol8",
                        "content": "They only want the length returned. They\\'re looking at the array theyve given you to make sure that you\\'re removing the duplicates in place without creating a new array."
                    },
                    {
                        "username": "iKittyCode",
                        "content": "Make sure to return the length this took me hours to figure out"
                    },
                    {
                        "username": "secretshine1",
                        "content": "var removeDuplicates = function (nums) {\\n    let arr = [];\\n    for (let i = 0; i < nums.length; i++) {\\n        let element = nums[i]\\n        if (arr.indexOf(element) === -1) {\\n            arr.push(element);\\n        }\\n    }\\n    return arr;\\n};\\n\\n\\nWhy its not working ?"
                    },
                    {
                        "username": "idklol8",
                        "content": "They want you to remove the duplicates from the original array (nums) without creating a new one. "
                    },
                    {
                        "username": "sainisaurav111",
                        "content": "class Solution {\\n    public int removeDuplicates(int[] nums) {\\n        if(nums.length == 0){\\n            return 0;\\n        }\\n        int i =0 ; \\n        for(int j=1; j<nums.length ; j++){\\n            if(nums[i] !=nums[j]){\\n                i++;\\n\\n            \\n                nums[i] = nums[j];\\n            }\\n        \\n        }\\n        return (i+1);\\n        \\n    }\\n}\\nThis is the easy method to solve the question ."
                    },
                    {
                        "username": "Pushpajekumar",
                        "content": "/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar removeDuplicates = function(nums) {\\nconst nums1 = new Set(nums);\\nconst newArray = Array.from(nums1)\\nconst sortedArray = newArray.sort()\\nconst sortedArrayLength = sortedArray.length\\n  return sortedArrayLength\\n};\\n\\nconst  nums = [0,0,1,1,1,2,2,3,3,4]\\n\\nremoveDuplicates(nums)\\n\\n\\nThis Code is working perfectly in my meachine but not here it returns blank array it is not seting the value of nums1"
                    },
                    {
                        "username": "hongying1525",
                        "content": "I don\\'t quite understand, why I cannot just simply use:\\n`list(dict.fromkeys(nums))`"
                    }
                ]
            },
            {
                "id": 1807529,
                "content": [
                    {
                        "username": "arjun259194",
                        "content": "so how should i return both array and k when the function only returns number (Typescript)"
                    },
                    {
                        "username": "idklol8",
                        "content": "You don\\'t need to return the array. You just need to remove the duplicates from the array without creating a new one and return the number of unique elements. The test cases will check the first k items in the array after your function runs."
                    },
                    {
                        "username": "Anshulsoni34",
                        "content": "C++ best approach\\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size() == 0){\\n            return 0;\\n        }\\n        int i = 0;\\n        for(int j = 1; j<nums.size(); j++){\\n            if(nums[i] != nums[j]){\\n                i++;\\n                nums[i] = nums[j];\\n            }\\n        }\\n        return i+1;\\n    }\\n};"
                    },
                    {
                        "username": "Udosinachi",
                        "content": "JavaScript has inbuilt functions to solve things like this, which is actually very good."
                    },
                    {
                        "username": "sandagolcea",
                        "content": "find it funny that returning the `length` is not accepted, and you have to return the array `response.length` ..\\nAt this point, just make me return the complete or sliced array?"
                    },
                    {
                        "username": "PBK320",
                        "content": "Python question...\\n\\nIt seems that the problem wants two items returned. The first is the length of the unique list and the second is the unique list itself. When you return multiple items in one return statement Python turns the items into a tuple. The problem doesn\\'t want a tuple returned. In python it\\'s easy to turn the tuple into the correct answer:\\n\\nlength, answer = removeDuplicates(nums)\\nprint(f\\'Length = {length}, Output = {answer}\\\\n\\')\\n\\nDoes anyone have an idea as to how to return two items as an integer and a list?\\n\\nThanks in advance...\\n"
                    },
                    {
                        "username": "idklol8",
                        "content": "They only want the length returned. They\\'re looking at the array theyve given you to make sure that you\\'re removing the duplicates in place without creating a new array."
                    },
                    {
                        "username": "iKittyCode",
                        "content": "Make sure to return the length this took me hours to figure out"
                    },
                    {
                        "username": "secretshine1",
                        "content": "var removeDuplicates = function (nums) {\\n    let arr = [];\\n    for (let i = 0; i < nums.length; i++) {\\n        let element = nums[i]\\n        if (arr.indexOf(element) === -1) {\\n            arr.push(element);\\n        }\\n    }\\n    return arr;\\n};\\n\\n\\nWhy its not working ?"
                    },
                    {
                        "username": "idklol8",
                        "content": "They want you to remove the duplicates from the original array (nums) without creating a new one. "
                    },
                    {
                        "username": "sainisaurav111",
                        "content": "class Solution {\\n    public int removeDuplicates(int[] nums) {\\n        if(nums.length == 0){\\n            return 0;\\n        }\\n        int i =0 ; \\n        for(int j=1; j<nums.length ; j++){\\n            if(nums[i] !=nums[j]){\\n                i++;\\n\\n            \\n                nums[i] = nums[j];\\n            }\\n        \\n        }\\n        return (i+1);\\n        \\n    }\\n}\\nThis is the easy method to solve the question ."
                    },
                    {
                        "username": "Pushpajekumar",
                        "content": "/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar removeDuplicates = function(nums) {\\nconst nums1 = new Set(nums);\\nconst newArray = Array.from(nums1)\\nconst sortedArray = newArray.sort()\\nconst sortedArrayLength = sortedArray.length\\n  return sortedArrayLength\\n};\\n\\nconst  nums = [0,0,1,1,1,2,2,3,3,4]\\n\\nremoveDuplicates(nums)\\n\\n\\nThis Code is working perfectly in my meachine but not here it returns blank array it is not seting the value of nums1"
                    },
                    {
                        "username": "hongying1525",
                        "content": "I don\\'t quite understand, why I cannot just simply use:\\n`list(dict.fromkeys(nums))`"
                    }
                ]
            },
            {
                "id": 1805520,
                "content": [
                    {
                        "username": "arjun259194",
                        "content": "so how should i return both array and k when the function only returns number (Typescript)"
                    },
                    {
                        "username": "idklol8",
                        "content": "You don\\'t need to return the array. You just need to remove the duplicates from the array without creating a new one and return the number of unique elements. The test cases will check the first k items in the array after your function runs."
                    },
                    {
                        "username": "Anshulsoni34",
                        "content": "C++ best approach\\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size() == 0){\\n            return 0;\\n        }\\n        int i = 0;\\n        for(int j = 1; j<nums.size(); j++){\\n            if(nums[i] != nums[j]){\\n                i++;\\n                nums[i] = nums[j];\\n            }\\n        }\\n        return i+1;\\n    }\\n};"
                    },
                    {
                        "username": "Udosinachi",
                        "content": "JavaScript has inbuilt functions to solve things like this, which is actually very good."
                    },
                    {
                        "username": "sandagolcea",
                        "content": "find it funny that returning the `length` is not accepted, and you have to return the array `response.length` ..\\nAt this point, just make me return the complete or sliced array?"
                    },
                    {
                        "username": "PBK320",
                        "content": "Python question...\\n\\nIt seems that the problem wants two items returned. The first is the length of the unique list and the second is the unique list itself. When you return multiple items in one return statement Python turns the items into a tuple. The problem doesn\\'t want a tuple returned. In python it\\'s easy to turn the tuple into the correct answer:\\n\\nlength, answer = removeDuplicates(nums)\\nprint(f\\'Length = {length}, Output = {answer}\\\\n\\')\\n\\nDoes anyone have an idea as to how to return two items as an integer and a list?\\n\\nThanks in advance...\\n"
                    },
                    {
                        "username": "idklol8",
                        "content": "They only want the length returned. They\\'re looking at the array theyve given you to make sure that you\\'re removing the duplicates in place without creating a new array."
                    },
                    {
                        "username": "iKittyCode",
                        "content": "Make sure to return the length this took me hours to figure out"
                    },
                    {
                        "username": "secretshine1",
                        "content": "var removeDuplicates = function (nums) {\\n    let arr = [];\\n    for (let i = 0; i < nums.length; i++) {\\n        let element = nums[i]\\n        if (arr.indexOf(element) === -1) {\\n            arr.push(element);\\n        }\\n    }\\n    return arr;\\n};\\n\\n\\nWhy its not working ?"
                    },
                    {
                        "username": "idklol8",
                        "content": "They want you to remove the duplicates from the original array (nums) without creating a new one. "
                    },
                    {
                        "username": "sainisaurav111",
                        "content": "class Solution {\\n    public int removeDuplicates(int[] nums) {\\n        if(nums.length == 0){\\n            return 0;\\n        }\\n        int i =0 ; \\n        for(int j=1; j<nums.length ; j++){\\n            if(nums[i] !=nums[j]){\\n                i++;\\n\\n            \\n                nums[i] = nums[j];\\n            }\\n        \\n        }\\n        return (i+1);\\n        \\n    }\\n}\\nThis is the easy method to solve the question ."
                    },
                    {
                        "username": "Pushpajekumar",
                        "content": "/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar removeDuplicates = function(nums) {\\nconst nums1 = new Set(nums);\\nconst newArray = Array.from(nums1)\\nconst sortedArray = newArray.sort()\\nconst sortedArrayLength = sortedArray.length\\n  return sortedArrayLength\\n};\\n\\nconst  nums = [0,0,1,1,1,2,2,3,3,4]\\n\\nremoveDuplicates(nums)\\n\\n\\nThis Code is working perfectly in my meachine but not here it returns blank array it is not seting the value of nums1"
                    },
                    {
                        "username": "hongying1525",
                        "content": "I don\\'t quite understand, why I cannot just simply use:\\n`list(dict.fromkeys(nums))`"
                    }
                ]
            },
            {
                "id": 1804498,
                "content": [
                    {
                        "username": "arjun259194",
                        "content": "so how should i return both array and k when the function only returns number (Typescript)"
                    },
                    {
                        "username": "idklol8",
                        "content": "You don\\'t need to return the array. You just need to remove the duplicates from the array without creating a new one and return the number of unique elements. The test cases will check the first k items in the array after your function runs."
                    },
                    {
                        "username": "Anshulsoni34",
                        "content": "C++ best approach\\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size() == 0){\\n            return 0;\\n        }\\n        int i = 0;\\n        for(int j = 1; j<nums.size(); j++){\\n            if(nums[i] != nums[j]){\\n                i++;\\n                nums[i] = nums[j];\\n            }\\n        }\\n        return i+1;\\n    }\\n};"
                    },
                    {
                        "username": "Udosinachi",
                        "content": "JavaScript has inbuilt functions to solve things like this, which is actually very good."
                    },
                    {
                        "username": "sandagolcea",
                        "content": "find it funny that returning the `length` is not accepted, and you have to return the array `response.length` ..\\nAt this point, just make me return the complete or sliced array?"
                    },
                    {
                        "username": "PBK320",
                        "content": "Python question...\\n\\nIt seems that the problem wants two items returned. The first is the length of the unique list and the second is the unique list itself. When you return multiple items in one return statement Python turns the items into a tuple. The problem doesn\\'t want a tuple returned. In python it\\'s easy to turn the tuple into the correct answer:\\n\\nlength, answer = removeDuplicates(nums)\\nprint(f\\'Length = {length}, Output = {answer}\\\\n\\')\\n\\nDoes anyone have an idea as to how to return two items as an integer and a list?\\n\\nThanks in advance...\\n"
                    },
                    {
                        "username": "idklol8",
                        "content": "They only want the length returned. They\\'re looking at the array theyve given you to make sure that you\\'re removing the duplicates in place without creating a new array."
                    },
                    {
                        "username": "iKittyCode",
                        "content": "Make sure to return the length this took me hours to figure out"
                    },
                    {
                        "username": "secretshine1",
                        "content": "var removeDuplicates = function (nums) {\\n    let arr = [];\\n    for (let i = 0; i < nums.length; i++) {\\n        let element = nums[i]\\n        if (arr.indexOf(element) === -1) {\\n            arr.push(element);\\n        }\\n    }\\n    return arr;\\n};\\n\\n\\nWhy its not working ?"
                    },
                    {
                        "username": "idklol8",
                        "content": "They want you to remove the duplicates from the original array (nums) without creating a new one. "
                    },
                    {
                        "username": "sainisaurav111",
                        "content": "class Solution {\\n    public int removeDuplicates(int[] nums) {\\n        if(nums.length == 0){\\n            return 0;\\n        }\\n        int i =0 ; \\n        for(int j=1; j<nums.length ; j++){\\n            if(nums[i] !=nums[j]){\\n                i++;\\n\\n            \\n                nums[i] = nums[j];\\n            }\\n        \\n        }\\n        return (i+1);\\n        \\n    }\\n}\\nThis is the easy method to solve the question ."
                    },
                    {
                        "username": "Pushpajekumar",
                        "content": "/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar removeDuplicates = function(nums) {\\nconst nums1 = new Set(nums);\\nconst newArray = Array.from(nums1)\\nconst sortedArray = newArray.sort()\\nconst sortedArrayLength = sortedArray.length\\n  return sortedArrayLength\\n};\\n\\nconst  nums = [0,0,1,1,1,2,2,3,3,4]\\n\\nremoveDuplicates(nums)\\n\\n\\nThis Code is working perfectly in my meachine but not here it returns blank array it is not seting the value of nums1"
                    },
                    {
                        "username": "hongying1525",
                        "content": "I don\\'t quite understand, why I cannot just simply use:\\n`list(dict.fromkeys(nums))`"
                    }
                ]
            },
            {
                "id": 1802656,
                "content": [
                    {
                        "username": "arjun259194",
                        "content": "so how should i return both array and k when the function only returns number (Typescript)"
                    },
                    {
                        "username": "idklol8",
                        "content": "You don\\'t need to return the array. You just need to remove the duplicates from the array without creating a new one and return the number of unique elements. The test cases will check the first k items in the array after your function runs."
                    },
                    {
                        "username": "Anshulsoni34",
                        "content": "C++ best approach\\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size() == 0){\\n            return 0;\\n        }\\n        int i = 0;\\n        for(int j = 1; j<nums.size(); j++){\\n            if(nums[i] != nums[j]){\\n                i++;\\n                nums[i] = nums[j];\\n            }\\n        }\\n        return i+1;\\n    }\\n};"
                    },
                    {
                        "username": "Udosinachi",
                        "content": "JavaScript has inbuilt functions to solve things like this, which is actually very good."
                    },
                    {
                        "username": "sandagolcea",
                        "content": "find it funny that returning the `length` is not accepted, and you have to return the array `response.length` ..\\nAt this point, just make me return the complete or sliced array?"
                    },
                    {
                        "username": "PBK320",
                        "content": "Python question...\\n\\nIt seems that the problem wants two items returned. The first is the length of the unique list and the second is the unique list itself. When you return multiple items in one return statement Python turns the items into a tuple. The problem doesn\\'t want a tuple returned. In python it\\'s easy to turn the tuple into the correct answer:\\n\\nlength, answer = removeDuplicates(nums)\\nprint(f\\'Length = {length}, Output = {answer}\\\\n\\')\\n\\nDoes anyone have an idea as to how to return two items as an integer and a list?\\n\\nThanks in advance...\\n"
                    },
                    {
                        "username": "idklol8",
                        "content": "They only want the length returned. They\\'re looking at the array theyve given you to make sure that you\\'re removing the duplicates in place without creating a new array."
                    },
                    {
                        "username": "iKittyCode",
                        "content": "Make sure to return the length this took me hours to figure out"
                    },
                    {
                        "username": "secretshine1",
                        "content": "var removeDuplicates = function (nums) {\\n    let arr = [];\\n    for (let i = 0; i < nums.length; i++) {\\n        let element = nums[i]\\n        if (arr.indexOf(element) === -1) {\\n            arr.push(element);\\n        }\\n    }\\n    return arr;\\n};\\n\\n\\nWhy its not working ?"
                    },
                    {
                        "username": "idklol8",
                        "content": "They want you to remove the duplicates from the original array (nums) without creating a new one. "
                    },
                    {
                        "username": "sainisaurav111",
                        "content": "class Solution {\\n    public int removeDuplicates(int[] nums) {\\n        if(nums.length == 0){\\n            return 0;\\n        }\\n        int i =0 ; \\n        for(int j=1; j<nums.length ; j++){\\n            if(nums[i] !=nums[j]){\\n                i++;\\n\\n            \\n                nums[i] = nums[j];\\n            }\\n        \\n        }\\n        return (i+1);\\n        \\n    }\\n}\\nThis is the easy method to solve the question ."
                    },
                    {
                        "username": "Pushpajekumar",
                        "content": "/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar removeDuplicates = function(nums) {\\nconst nums1 = new Set(nums);\\nconst newArray = Array.from(nums1)\\nconst sortedArray = newArray.sort()\\nconst sortedArrayLength = sortedArray.length\\n  return sortedArrayLength\\n};\\n\\nconst  nums = [0,0,1,1,1,2,2,3,3,4]\\n\\nremoveDuplicates(nums)\\n\\n\\nThis Code is working perfectly in my meachine but not here it returns blank array it is not seting the value of nums1"
                    },
                    {
                        "username": "hongying1525",
                        "content": "I don\\'t quite understand, why I cannot just simply use:\\n`list(dict.fromkeys(nums))`"
                    }
                ]
            },
            {
                "id": 1798778,
                "content": [
                    {
                        "username": "arjun259194",
                        "content": "so how should i return both array and k when the function only returns number (Typescript)"
                    },
                    {
                        "username": "idklol8",
                        "content": "You don\\'t need to return the array. You just need to remove the duplicates from the array without creating a new one and return the number of unique elements. The test cases will check the first k items in the array after your function runs."
                    },
                    {
                        "username": "Anshulsoni34",
                        "content": "C++ best approach\\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size() == 0){\\n            return 0;\\n        }\\n        int i = 0;\\n        for(int j = 1; j<nums.size(); j++){\\n            if(nums[i] != nums[j]){\\n                i++;\\n                nums[i] = nums[j];\\n            }\\n        }\\n        return i+1;\\n    }\\n};"
                    },
                    {
                        "username": "Udosinachi",
                        "content": "JavaScript has inbuilt functions to solve things like this, which is actually very good."
                    },
                    {
                        "username": "sandagolcea",
                        "content": "find it funny that returning the `length` is not accepted, and you have to return the array `response.length` ..\\nAt this point, just make me return the complete or sliced array?"
                    },
                    {
                        "username": "PBK320",
                        "content": "Python question...\\n\\nIt seems that the problem wants two items returned. The first is the length of the unique list and the second is the unique list itself. When you return multiple items in one return statement Python turns the items into a tuple. The problem doesn\\'t want a tuple returned. In python it\\'s easy to turn the tuple into the correct answer:\\n\\nlength, answer = removeDuplicates(nums)\\nprint(f\\'Length = {length}, Output = {answer}\\\\n\\')\\n\\nDoes anyone have an idea as to how to return two items as an integer and a list?\\n\\nThanks in advance...\\n"
                    },
                    {
                        "username": "idklol8",
                        "content": "They only want the length returned. They\\'re looking at the array theyve given you to make sure that you\\'re removing the duplicates in place without creating a new array."
                    },
                    {
                        "username": "iKittyCode",
                        "content": "Make sure to return the length this took me hours to figure out"
                    },
                    {
                        "username": "secretshine1",
                        "content": "var removeDuplicates = function (nums) {\\n    let arr = [];\\n    for (let i = 0; i < nums.length; i++) {\\n        let element = nums[i]\\n        if (arr.indexOf(element) === -1) {\\n            arr.push(element);\\n        }\\n    }\\n    return arr;\\n};\\n\\n\\nWhy its not working ?"
                    },
                    {
                        "username": "idklol8",
                        "content": "They want you to remove the duplicates from the original array (nums) without creating a new one. "
                    },
                    {
                        "username": "sainisaurav111",
                        "content": "class Solution {\\n    public int removeDuplicates(int[] nums) {\\n        if(nums.length == 0){\\n            return 0;\\n        }\\n        int i =0 ; \\n        for(int j=1; j<nums.length ; j++){\\n            if(nums[i] !=nums[j]){\\n                i++;\\n\\n            \\n                nums[i] = nums[j];\\n            }\\n        \\n        }\\n        return (i+1);\\n        \\n    }\\n}\\nThis is the easy method to solve the question ."
                    },
                    {
                        "username": "Pushpajekumar",
                        "content": "/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar removeDuplicates = function(nums) {\\nconst nums1 = new Set(nums);\\nconst newArray = Array.from(nums1)\\nconst sortedArray = newArray.sort()\\nconst sortedArrayLength = sortedArray.length\\n  return sortedArrayLength\\n};\\n\\nconst  nums = [0,0,1,1,1,2,2,3,3,4]\\n\\nremoveDuplicates(nums)\\n\\n\\nThis Code is working perfectly in my meachine but not here it returns blank array it is not seting the value of nums1"
                    },
                    {
                        "username": "hongying1525",
                        "content": "I don\\'t quite understand, why I cannot just simply use:\\n`list(dict.fromkeys(nums))`"
                    }
                ]
            },
            {
                "id": 1797852,
                "content": [
                    {
                        "username": "Keiku",
                        "content": "Any idea why this code doesn\\'t work? It seems that only 49/361 test cases pass.\\n\\n```python\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums_nodups = []\\n        for n in nums:\\n            # print(\\'n:\\', n)\\n            if n not in nums_nodups:\\n                nums_nodups.append(n)\\n                # print(\\'nums_nodups:\\', nums_nodups)\\n\\n        print(nums_nodups)\\n        return len(nums_nodups)\\n```"
                    },
                    {
                        "username": "Keiku",
                        "content": "[@idklol8](/idklol8) \\n\\nThank you for your reply. I overlooked the condition in the problem statement below.\\n\\n>  Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory."
                    },
                    {
                        "username": "idklol8",
                        "content": "You have to remove the duplicates from the original array you\\'re given without creating a new one."
                    },
                    {
                        "username": "neyguu",
                        "content": "How come im getting errors that result weird numbers/letters coming out: \"[I@27fa135a\" "
                    },
                    {
                        "username": "zetlian",
                        "content": "Honestly this one is filled with problems. I\\'m here beating myself over this and struggling just to notice the problem isn\\'t even me."
                    },
                    {
                        "username": "sk38252",
                        "content": "this can be also solve by hashset\\n"
                    },
                    {
                        "username": "justsolveitlmao",
                        "content": "You need to modify ref value of `nums`, can\\'t reassign"
                    },
                    {
                        "username": "avinashchawla67001",
                        "content": "It is working absolutely fine in Eclipse but leetcode is giving the wrong output while running the code.\\nAny Solution ! \\n\\npublic static int remove(int[] nums) {\\n\\t\\t// TODO Auto-generated method stub\\n\\t\\tArrays.sort(nums);\\n\\t    int exnums[] = new int[nums.length];\\n\\t\\tArrayList<Integer> exnums = new ArrayList<>();\\n\\t\\texnums.add(nums[0]);\\n\\t\\tfor (int i = 1; i < nums.length; i++) {\\n\\t\\t\\tif(nums[i] == nums[i-1]) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\t\\t\\texnums.add(nums[i]);\\n\\t\\t}\\n\\t\\tint k =  exnums.size();\\n\\t\\tint expnums[] = new int[k];\\n\\t\\tfor (int i = 0; i < k; i++) {\\n\\t\\t\\texpnums[i] = exnums.get(i) ;\\n\\t\\t}\\n\\t\\treturn expnums.length;\\n\\t}\\n"
                    },
                    {
                        "username": "agupta354",
                        "content": " `class Solution {\\n    public int removeDuplicates(int[] nums) {\\n     \\n     int t=0;\\n\\n     for(int i=1;i<nums.length;i++){\\n         if(nums[t] != nums[i]){\\n             nums[t+1]=nums[i];\\n             t++;\\n         }\\n     }\\n\\n     //since t start from 0 \\n     return t+1;\\n\\n\\n    }\\n}`"
                    },
                    {
                        "username": "Siddhantkeshariii",
                        "content": "If we have to return the size of nums then why the test case of the question shows the array?"
                    },
                    {
                        "username": "byeongjae-kang",
                        "content": "yeah seems confusing. it looks like the array in the test cases is `nums` parameter, and I noticed we need to return the length of the array and mutate the `nums` parameter."
                    },
                    {
                        "username": "Evil_123",
                        "content": "////EASY C++ SOLUTION\\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n       int n=nums.size(),val=1,k=1;\\n       for(int i=0;i<n-1;i++){\\n         if(nums[i+1]>nums[i]){\\n             k++;\\n             nums[val]=nums[i+1];\\n             val++;\\n         }\\n       }\\n       return k;\\n    }\\n};"
                    },
                    {
                        "username": "byeongjae-kang",
                        "content": "```\\nfunction removeDuplicates(nums: number[]): number {\\n    return [...new Set(nums)].length\\n};\\n```\\n\\n`const k = removeDuplicates([...])`\\n\\nMy solution above should be able to return the right value of `k`, do I need to mutate `nums` in order to get pass this task?"
                    }
                ]
            },
            {
                "id": 1791176,
                "content": [
                    {
                        "username": "Keiku",
                        "content": "Any idea why this code doesn\\'t work? It seems that only 49/361 test cases pass.\\n\\n```python\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums_nodups = []\\n        for n in nums:\\n            # print(\\'n:\\', n)\\n            if n not in nums_nodups:\\n                nums_nodups.append(n)\\n                # print(\\'nums_nodups:\\', nums_nodups)\\n\\n        print(nums_nodups)\\n        return len(nums_nodups)\\n```"
                    },
                    {
                        "username": "Keiku",
                        "content": "[@idklol8](/idklol8) \\n\\nThank you for your reply. I overlooked the condition in the problem statement below.\\n\\n>  Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory."
                    },
                    {
                        "username": "idklol8",
                        "content": "You have to remove the duplicates from the original array you\\'re given without creating a new one."
                    },
                    {
                        "username": "neyguu",
                        "content": "How come im getting errors that result weird numbers/letters coming out: \"[I@27fa135a\" "
                    },
                    {
                        "username": "zetlian",
                        "content": "Honestly this one is filled with problems. I\\'m here beating myself over this and struggling just to notice the problem isn\\'t even me."
                    },
                    {
                        "username": "sk38252",
                        "content": "this can be also solve by hashset\\n"
                    },
                    {
                        "username": "justsolveitlmao",
                        "content": "You need to modify ref value of `nums`, can\\'t reassign"
                    },
                    {
                        "username": "avinashchawla67001",
                        "content": "It is working absolutely fine in Eclipse but leetcode is giving the wrong output while running the code.\\nAny Solution ! \\n\\npublic static int remove(int[] nums) {\\n\\t\\t// TODO Auto-generated method stub\\n\\t\\tArrays.sort(nums);\\n\\t    int exnums[] = new int[nums.length];\\n\\t\\tArrayList<Integer> exnums = new ArrayList<>();\\n\\t\\texnums.add(nums[0]);\\n\\t\\tfor (int i = 1; i < nums.length; i++) {\\n\\t\\t\\tif(nums[i] == nums[i-1]) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\t\\t\\texnums.add(nums[i]);\\n\\t\\t}\\n\\t\\tint k =  exnums.size();\\n\\t\\tint expnums[] = new int[k];\\n\\t\\tfor (int i = 0; i < k; i++) {\\n\\t\\t\\texpnums[i] = exnums.get(i) ;\\n\\t\\t}\\n\\t\\treturn expnums.length;\\n\\t}\\n"
                    },
                    {
                        "username": "agupta354",
                        "content": " `class Solution {\\n    public int removeDuplicates(int[] nums) {\\n     \\n     int t=0;\\n\\n     for(int i=1;i<nums.length;i++){\\n         if(nums[t] != nums[i]){\\n             nums[t+1]=nums[i];\\n             t++;\\n         }\\n     }\\n\\n     //since t start from 0 \\n     return t+1;\\n\\n\\n    }\\n}`"
                    },
                    {
                        "username": "Siddhantkeshariii",
                        "content": "If we have to return the size of nums then why the test case of the question shows the array?"
                    },
                    {
                        "username": "byeongjae-kang",
                        "content": "yeah seems confusing. it looks like the array in the test cases is `nums` parameter, and I noticed we need to return the length of the array and mutate the `nums` parameter."
                    },
                    {
                        "username": "Evil_123",
                        "content": "////EASY C++ SOLUTION\\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n       int n=nums.size(),val=1,k=1;\\n       for(int i=0;i<n-1;i++){\\n         if(nums[i+1]>nums[i]){\\n             k++;\\n             nums[val]=nums[i+1];\\n             val++;\\n         }\\n       }\\n       return k;\\n    }\\n};"
                    },
                    {
                        "username": "byeongjae-kang",
                        "content": "```\\nfunction removeDuplicates(nums: number[]): number {\\n    return [...new Set(nums)].length\\n};\\n```\\n\\n`const k = removeDuplicates([...])`\\n\\nMy solution above should be able to return the right value of `k`, do I need to mutate `nums` in order to get pass this task?"
                    }
                ]
            },
            {
                "id": 1790068,
                "content": [
                    {
                        "username": "Keiku",
                        "content": "Any idea why this code doesn\\'t work? It seems that only 49/361 test cases pass.\\n\\n```python\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums_nodups = []\\n        for n in nums:\\n            # print(\\'n:\\', n)\\n            if n not in nums_nodups:\\n                nums_nodups.append(n)\\n                # print(\\'nums_nodups:\\', nums_nodups)\\n\\n        print(nums_nodups)\\n        return len(nums_nodups)\\n```"
                    },
                    {
                        "username": "Keiku",
                        "content": "[@idklol8](/idklol8) \\n\\nThank you for your reply. I overlooked the condition in the problem statement below.\\n\\n>  Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory."
                    },
                    {
                        "username": "idklol8",
                        "content": "You have to remove the duplicates from the original array you\\'re given without creating a new one."
                    },
                    {
                        "username": "neyguu",
                        "content": "How come im getting errors that result weird numbers/letters coming out: \"[I@27fa135a\" "
                    },
                    {
                        "username": "zetlian",
                        "content": "Honestly this one is filled with problems. I\\'m here beating myself over this and struggling just to notice the problem isn\\'t even me."
                    },
                    {
                        "username": "sk38252",
                        "content": "this can be also solve by hashset\\n"
                    },
                    {
                        "username": "justsolveitlmao",
                        "content": "You need to modify ref value of `nums`, can\\'t reassign"
                    },
                    {
                        "username": "avinashchawla67001",
                        "content": "It is working absolutely fine in Eclipse but leetcode is giving the wrong output while running the code.\\nAny Solution ! \\n\\npublic static int remove(int[] nums) {\\n\\t\\t// TODO Auto-generated method stub\\n\\t\\tArrays.sort(nums);\\n\\t    int exnums[] = new int[nums.length];\\n\\t\\tArrayList<Integer> exnums = new ArrayList<>();\\n\\t\\texnums.add(nums[0]);\\n\\t\\tfor (int i = 1; i < nums.length; i++) {\\n\\t\\t\\tif(nums[i] == nums[i-1]) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\t\\t\\texnums.add(nums[i]);\\n\\t\\t}\\n\\t\\tint k =  exnums.size();\\n\\t\\tint expnums[] = new int[k];\\n\\t\\tfor (int i = 0; i < k; i++) {\\n\\t\\t\\texpnums[i] = exnums.get(i) ;\\n\\t\\t}\\n\\t\\treturn expnums.length;\\n\\t}\\n"
                    },
                    {
                        "username": "agupta354",
                        "content": " `class Solution {\\n    public int removeDuplicates(int[] nums) {\\n     \\n     int t=0;\\n\\n     for(int i=1;i<nums.length;i++){\\n         if(nums[t] != nums[i]){\\n             nums[t+1]=nums[i];\\n             t++;\\n         }\\n     }\\n\\n     //since t start from 0 \\n     return t+1;\\n\\n\\n    }\\n}`"
                    },
                    {
                        "username": "Siddhantkeshariii",
                        "content": "If we have to return the size of nums then why the test case of the question shows the array?"
                    },
                    {
                        "username": "byeongjae-kang",
                        "content": "yeah seems confusing. it looks like the array in the test cases is `nums` parameter, and I noticed we need to return the length of the array and mutate the `nums` parameter."
                    },
                    {
                        "username": "Evil_123",
                        "content": "////EASY C++ SOLUTION\\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n       int n=nums.size(),val=1,k=1;\\n       for(int i=0;i<n-1;i++){\\n         if(nums[i+1]>nums[i]){\\n             k++;\\n             nums[val]=nums[i+1];\\n             val++;\\n         }\\n       }\\n       return k;\\n    }\\n};"
                    },
                    {
                        "username": "byeongjae-kang",
                        "content": "```\\nfunction removeDuplicates(nums: number[]): number {\\n    return [...new Set(nums)].length\\n};\\n```\\n\\n`const k = removeDuplicates([...])`\\n\\nMy solution above should be able to return the right value of `k`, do I need to mutate `nums` in order to get pass this task?"
                    }
                ]
            },
            {
                "id": 1789532,
                "content": [
                    {
                        "username": "Keiku",
                        "content": "Any idea why this code doesn\\'t work? It seems that only 49/361 test cases pass.\\n\\n```python\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums_nodups = []\\n        for n in nums:\\n            # print(\\'n:\\', n)\\n            if n not in nums_nodups:\\n                nums_nodups.append(n)\\n                # print(\\'nums_nodups:\\', nums_nodups)\\n\\n        print(nums_nodups)\\n        return len(nums_nodups)\\n```"
                    },
                    {
                        "username": "Keiku",
                        "content": "[@idklol8](/idklol8) \\n\\nThank you for your reply. I overlooked the condition in the problem statement below.\\n\\n>  Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory."
                    },
                    {
                        "username": "idklol8",
                        "content": "You have to remove the duplicates from the original array you\\'re given without creating a new one."
                    },
                    {
                        "username": "neyguu",
                        "content": "How come im getting errors that result weird numbers/letters coming out: \"[I@27fa135a\" "
                    },
                    {
                        "username": "zetlian",
                        "content": "Honestly this one is filled with problems. I\\'m here beating myself over this and struggling just to notice the problem isn\\'t even me."
                    },
                    {
                        "username": "sk38252",
                        "content": "this can be also solve by hashset\\n"
                    },
                    {
                        "username": "justsolveitlmao",
                        "content": "You need to modify ref value of `nums`, can\\'t reassign"
                    },
                    {
                        "username": "avinashchawla67001",
                        "content": "It is working absolutely fine in Eclipse but leetcode is giving the wrong output while running the code.\\nAny Solution ! \\n\\npublic static int remove(int[] nums) {\\n\\t\\t// TODO Auto-generated method stub\\n\\t\\tArrays.sort(nums);\\n\\t    int exnums[] = new int[nums.length];\\n\\t\\tArrayList<Integer> exnums = new ArrayList<>();\\n\\t\\texnums.add(nums[0]);\\n\\t\\tfor (int i = 1; i < nums.length; i++) {\\n\\t\\t\\tif(nums[i] == nums[i-1]) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\t\\t\\texnums.add(nums[i]);\\n\\t\\t}\\n\\t\\tint k =  exnums.size();\\n\\t\\tint expnums[] = new int[k];\\n\\t\\tfor (int i = 0; i < k; i++) {\\n\\t\\t\\texpnums[i] = exnums.get(i) ;\\n\\t\\t}\\n\\t\\treturn expnums.length;\\n\\t}\\n"
                    },
                    {
                        "username": "agupta354",
                        "content": " `class Solution {\\n    public int removeDuplicates(int[] nums) {\\n     \\n     int t=0;\\n\\n     for(int i=1;i<nums.length;i++){\\n         if(nums[t] != nums[i]){\\n             nums[t+1]=nums[i];\\n             t++;\\n         }\\n     }\\n\\n     //since t start from 0 \\n     return t+1;\\n\\n\\n    }\\n}`"
                    },
                    {
                        "username": "Siddhantkeshariii",
                        "content": "If we have to return the size of nums then why the test case of the question shows the array?"
                    },
                    {
                        "username": "byeongjae-kang",
                        "content": "yeah seems confusing. it looks like the array in the test cases is `nums` parameter, and I noticed we need to return the length of the array and mutate the `nums` parameter."
                    },
                    {
                        "username": "Evil_123",
                        "content": "////EASY C++ SOLUTION\\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n       int n=nums.size(),val=1,k=1;\\n       for(int i=0;i<n-1;i++){\\n         if(nums[i+1]>nums[i]){\\n             k++;\\n             nums[val]=nums[i+1];\\n             val++;\\n         }\\n       }\\n       return k;\\n    }\\n};"
                    },
                    {
                        "username": "byeongjae-kang",
                        "content": "```\\nfunction removeDuplicates(nums: number[]): number {\\n    return [...new Set(nums)].length\\n};\\n```\\n\\n`const k = removeDuplicates([...])`\\n\\nMy solution above should be able to return the right value of `k`, do I need to mutate `nums` in order to get pass this task?"
                    }
                ]
            },
            {
                "id": 1788972,
                "content": [
                    {
                        "username": "Keiku",
                        "content": "Any idea why this code doesn\\'t work? It seems that only 49/361 test cases pass.\\n\\n```python\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums_nodups = []\\n        for n in nums:\\n            # print(\\'n:\\', n)\\n            if n not in nums_nodups:\\n                nums_nodups.append(n)\\n                # print(\\'nums_nodups:\\', nums_nodups)\\n\\n        print(nums_nodups)\\n        return len(nums_nodups)\\n```"
                    },
                    {
                        "username": "Keiku",
                        "content": "[@idklol8](/idklol8) \\n\\nThank you for your reply. I overlooked the condition in the problem statement below.\\n\\n>  Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory."
                    },
                    {
                        "username": "idklol8",
                        "content": "You have to remove the duplicates from the original array you\\'re given without creating a new one."
                    },
                    {
                        "username": "neyguu",
                        "content": "How come im getting errors that result weird numbers/letters coming out: \"[I@27fa135a\" "
                    },
                    {
                        "username": "zetlian",
                        "content": "Honestly this one is filled with problems. I\\'m here beating myself over this and struggling just to notice the problem isn\\'t even me."
                    },
                    {
                        "username": "sk38252",
                        "content": "this can be also solve by hashset\\n"
                    },
                    {
                        "username": "justsolveitlmao",
                        "content": "You need to modify ref value of `nums`, can\\'t reassign"
                    },
                    {
                        "username": "avinashchawla67001",
                        "content": "It is working absolutely fine in Eclipse but leetcode is giving the wrong output while running the code.\\nAny Solution ! \\n\\npublic static int remove(int[] nums) {\\n\\t\\t// TODO Auto-generated method stub\\n\\t\\tArrays.sort(nums);\\n\\t    int exnums[] = new int[nums.length];\\n\\t\\tArrayList<Integer> exnums = new ArrayList<>();\\n\\t\\texnums.add(nums[0]);\\n\\t\\tfor (int i = 1; i < nums.length; i++) {\\n\\t\\t\\tif(nums[i] == nums[i-1]) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\t\\t\\texnums.add(nums[i]);\\n\\t\\t}\\n\\t\\tint k =  exnums.size();\\n\\t\\tint expnums[] = new int[k];\\n\\t\\tfor (int i = 0; i < k; i++) {\\n\\t\\t\\texpnums[i] = exnums.get(i) ;\\n\\t\\t}\\n\\t\\treturn expnums.length;\\n\\t}\\n"
                    },
                    {
                        "username": "agupta354",
                        "content": " `class Solution {\\n    public int removeDuplicates(int[] nums) {\\n     \\n     int t=0;\\n\\n     for(int i=1;i<nums.length;i++){\\n         if(nums[t] != nums[i]){\\n             nums[t+1]=nums[i];\\n             t++;\\n         }\\n     }\\n\\n     //since t start from 0 \\n     return t+1;\\n\\n\\n    }\\n}`"
                    },
                    {
                        "username": "Siddhantkeshariii",
                        "content": "If we have to return the size of nums then why the test case of the question shows the array?"
                    },
                    {
                        "username": "byeongjae-kang",
                        "content": "yeah seems confusing. it looks like the array in the test cases is `nums` parameter, and I noticed we need to return the length of the array and mutate the `nums` parameter."
                    },
                    {
                        "username": "Evil_123",
                        "content": "////EASY C++ SOLUTION\\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n       int n=nums.size(),val=1,k=1;\\n       for(int i=0;i<n-1;i++){\\n         if(nums[i+1]>nums[i]){\\n             k++;\\n             nums[val]=nums[i+1];\\n             val++;\\n         }\\n       }\\n       return k;\\n    }\\n};"
                    },
                    {
                        "username": "byeongjae-kang",
                        "content": "```\\nfunction removeDuplicates(nums: number[]): number {\\n    return [...new Set(nums)].length\\n};\\n```\\n\\n`const k = removeDuplicates([...])`\\n\\nMy solution above should be able to return the right value of `k`, do I need to mutate `nums` in order to get pass this task?"
                    }
                ]
            },
            {
                "id": 1787081,
                "content": [
                    {
                        "username": "Keiku",
                        "content": "Any idea why this code doesn\\'t work? It seems that only 49/361 test cases pass.\\n\\n```python\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums_nodups = []\\n        for n in nums:\\n            # print(\\'n:\\', n)\\n            if n not in nums_nodups:\\n                nums_nodups.append(n)\\n                # print(\\'nums_nodups:\\', nums_nodups)\\n\\n        print(nums_nodups)\\n        return len(nums_nodups)\\n```"
                    },
                    {
                        "username": "Keiku",
                        "content": "[@idklol8](/idklol8) \\n\\nThank you for your reply. I overlooked the condition in the problem statement below.\\n\\n>  Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory."
                    },
                    {
                        "username": "idklol8",
                        "content": "You have to remove the duplicates from the original array you\\'re given without creating a new one."
                    },
                    {
                        "username": "neyguu",
                        "content": "How come im getting errors that result weird numbers/letters coming out: \"[I@27fa135a\" "
                    },
                    {
                        "username": "zetlian",
                        "content": "Honestly this one is filled with problems. I\\'m here beating myself over this and struggling just to notice the problem isn\\'t even me."
                    },
                    {
                        "username": "sk38252",
                        "content": "this can be also solve by hashset\\n"
                    },
                    {
                        "username": "justsolveitlmao",
                        "content": "You need to modify ref value of `nums`, can\\'t reassign"
                    },
                    {
                        "username": "avinashchawla67001",
                        "content": "It is working absolutely fine in Eclipse but leetcode is giving the wrong output while running the code.\\nAny Solution ! \\n\\npublic static int remove(int[] nums) {\\n\\t\\t// TODO Auto-generated method stub\\n\\t\\tArrays.sort(nums);\\n\\t    int exnums[] = new int[nums.length];\\n\\t\\tArrayList<Integer> exnums = new ArrayList<>();\\n\\t\\texnums.add(nums[0]);\\n\\t\\tfor (int i = 1; i < nums.length; i++) {\\n\\t\\t\\tif(nums[i] == nums[i-1]) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\t\\t\\texnums.add(nums[i]);\\n\\t\\t}\\n\\t\\tint k =  exnums.size();\\n\\t\\tint expnums[] = new int[k];\\n\\t\\tfor (int i = 0; i < k; i++) {\\n\\t\\t\\texpnums[i] = exnums.get(i) ;\\n\\t\\t}\\n\\t\\treturn expnums.length;\\n\\t}\\n"
                    },
                    {
                        "username": "agupta354",
                        "content": " `class Solution {\\n    public int removeDuplicates(int[] nums) {\\n     \\n     int t=0;\\n\\n     for(int i=1;i<nums.length;i++){\\n         if(nums[t] != nums[i]){\\n             nums[t+1]=nums[i];\\n             t++;\\n         }\\n     }\\n\\n     //since t start from 0 \\n     return t+1;\\n\\n\\n    }\\n}`"
                    },
                    {
                        "username": "Siddhantkeshariii",
                        "content": "If we have to return the size of nums then why the test case of the question shows the array?"
                    },
                    {
                        "username": "byeongjae-kang",
                        "content": "yeah seems confusing. it looks like the array in the test cases is `nums` parameter, and I noticed we need to return the length of the array and mutate the `nums` parameter."
                    },
                    {
                        "username": "Evil_123",
                        "content": "////EASY C++ SOLUTION\\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n       int n=nums.size(),val=1,k=1;\\n       for(int i=0;i<n-1;i++){\\n         if(nums[i+1]>nums[i]){\\n             k++;\\n             nums[val]=nums[i+1];\\n             val++;\\n         }\\n       }\\n       return k;\\n    }\\n};"
                    },
                    {
                        "username": "byeongjae-kang",
                        "content": "```\\nfunction removeDuplicates(nums: number[]): number {\\n    return [...new Set(nums)].length\\n};\\n```\\n\\n`const k = removeDuplicates([...])`\\n\\nMy solution above should be able to return the right value of `k`, do I need to mutate `nums` in order to get pass this task?"
                    }
                ]
            },
            {
                "id": 1786714,
                "content": [
                    {
                        "username": "Keiku",
                        "content": "Any idea why this code doesn\\'t work? It seems that only 49/361 test cases pass.\\n\\n```python\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums_nodups = []\\n        for n in nums:\\n            # print(\\'n:\\', n)\\n            if n not in nums_nodups:\\n                nums_nodups.append(n)\\n                # print(\\'nums_nodups:\\', nums_nodups)\\n\\n        print(nums_nodups)\\n        return len(nums_nodups)\\n```"
                    },
                    {
                        "username": "Keiku",
                        "content": "[@idklol8](/idklol8) \\n\\nThank you for your reply. I overlooked the condition in the problem statement below.\\n\\n>  Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory."
                    },
                    {
                        "username": "idklol8",
                        "content": "You have to remove the duplicates from the original array you\\'re given without creating a new one."
                    },
                    {
                        "username": "neyguu",
                        "content": "How come im getting errors that result weird numbers/letters coming out: \"[I@27fa135a\" "
                    },
                    {
                        "username": "zetlian",
                        "content": "Honestly this one is filled with problems. I\\'m here beating myself over this and struggling just to notice the problem isn\\'t even me."
                    },
                    {
                        "username": "sk38252",
                        "content": "this can be also solve by hashset\\n"
                    },
                    {
                        "username": "justsolveitlmao",
                        "content": "You need to modify ref value of `nums`, can\\'t reassign"
                    },
                    {
                        "username": "avinashchawla67001",
                        "content": "It is working absolutely fine in Eclipse but leetcode is giving the wrong output while running the code.\\nAny Solution ! \\n\\npublic static int remove(int[] nums) {\\n\\t\\t// TODO Auto-generated method stub\\n\\t\\tArrays.sort(nums);\\n\\t    int exnums[] = new int[nums.length];\\n\\t\\tArrayList<Integer> exnums = new ArrayList<>();\\n\\t\\texnums.add(nums[0]);\\n\\t\\tfor (int i = 1; i < nums.length; i++) {\\n\\t\\t\\tif(nums[i] == nums[i-1]) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\t\\t\\texnums.add(nums[i]);\\n\\t\\t}\\n\\t\\tint k =  exnums.size();\\n\\t\\tint expnums[] = new int[k];\\n\\t\\tfor (int i = 0; i < k; i++) {\\n\\t\\t\\texpnums[i] = exnums.get(i) ;\\n\\t\\t}\\n\\t\\treturn expnums.length;\\n\\t}\\n"
                    },
                    {
                        "username": "agupta354",
                        "content": " `class Solution {\\n    public int removeDuplicates(int[] nums) {\\n     \\n     int t=0;\\n\\n     for(int i=1;i<nums.length;i++){\\n         if(nums[t] != nums[i]){\\n             nums[t+1]=nums[i];\\n             t++;\\n         }\\n     }\\n\\n     //since t start from 0 \\n     return t+1;\\n\\n\\n    }\\n}`"
                    },
                    {
                        "username": "Siddhantkeshariii",
                        "content": "If we have to return the size of nums then why the test case of the question shows the array?"
                    },
                    {
                        "username": "byeongjae-kang",
                        "content": "yeah seems confusing. it looks like the array in the test cases is `nums` parameter, and I noticed we need to return the length of the array and mutate the `nums` parameter."
                    },
                    {
                        "username": "Evil_123",
                        "content": "////EASY C++ SOLUTION\\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n       int n=nums.size(),val=1,k=1;\\n       for(int i=0;i<n-1;i++){\\n         if(nums[i+1]>nums[i]){\\n             k++;\\n             nums[val]=nums[i+1];\\n             val++;\\n         }\\n       }\\n       return k;\\n    }\\n};"
                    },
                    {
                        "username": "byeongjae-kang",
                        "content": "```\\nfunction removeDuplicates(nums: number[]): number {\\n    return [...new Set(nums)].length\\n};\\n```\\n\\n`const k = removeDuplicates([...])`\\n\\nMy solution above should be able to return the right value of `k`, do I need to mutate `nums` in order to get pass this task?"
                    }
                ]
            },
            {
                "id": 1783541,
                "content": [
                    {
                        "username": "Keiku",
                        "content": "Any idea why this code doesn\\'t work? It seems that only 49/361 test cases pass.\\n\\n```python\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums_nodups = []\\n        for n in nums:\\n            # print(\\'n:\\', n)\\n            if n not in nums_nodups:\\n                nums_nodups.append(n)\\n                # print(\\'nums_nodups:\\', nums_nodups)\\n\\n        print(nums_nodups)\\n        return len(nums_nodups)\\n```"
                    },
                    {
                        "username": "Keiku",
                        "content": "[@idklol8](/idklol8) \\n\\nThank you for your reply. I overlooked the condition in the problem statement below.\\n\\n>  Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory."
                    },
                    {
                        "username": "idklol8",
                        "content": "You have to remove the duplicates from the original array you\\'re given without creating a new one."
                    },
                    {
                        "username": "neyguu",
                        "content": "How come im getting errors that result weird numbers/letters coming out: \"[I@27fa135a\" "
                    },
                    {
                        "username": "zetlian",
                        "content": "Honestly this one is filled with problems. I\\'m here beating myself over this and struggling just to notice the problem isn\\'t even me."
                    },
                    {
                        "username": "sk38252",
                        "content": "this can be also solve by hashset\\n"
                    },
                    {
                        "username": "justsolveitlmao",
                        "content": "You need to modify ref value of `nums`, can\\'t reassign"
                    },
                    {
                        "username": "avinashchawla67001",
                        "content": "It is working absolutely fine in Eclipse but leetcode is giving the wrong output while running the code.\\nAny Solution ! \\n\\npublic static int remove(int[] nums) {\\n\\t\\t// TODO Auto-generated method stub\\n\\t\\tArrays.sort(nums);\\n\\t    int exnums[] = new int[nums.length];\\n\\t\\tArrayList<Integer> exnums = new ArrayList<>();\\n\\t\\texnums.add(nums[0]);\\n\\t\\tfor (int i = 1; i < nums.length; i++) {\\n\\t\\t\\tif(nums[i] == nums[i-1]) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\t\\t\\texnums.add(nums[i]);\\n\\t\\t}\\n\\t\\tint k =  exnums.size();\\n\\t\\tint expnums[] = new int[k];\\n\\t\\tfor (int i = 0; i < k; i++) {\\n\\t\\t\\texpnums[i] = exnums.get(i) ;\\n\\t\\t}\\n\\t\\treturn expnums.length;\\n\\t}\\n"
                    },
                    {
                        "username": "agupta354",
                        "content": " `class Solution {\\n    public int removeDuplicates(int[] nums) {\\n     \\n     int t=0;\\n\\n     for(int i=1;i<nums.length;i++){\\n         if(nums[t] != nums[i]){\\n             nums[t+1]=nums[i];\\n             t++;\\n         }\\n     }\\n\\n     //since t start from 0 \\n     return t+1;\\n\\n\\n    }\\n}`"
                    },
                    {
                        "username": "Siddhantkeshariii",
                        "content": "If we have to return the size of nums then why the test case of the question shows the array?"
                    },
                    {
                        "username": "byeongjae-kang",
                        "content": "yeah seems confusing. it looks like the array in the test cases is `nums` parameter, and I noticed we need to return the length of the array and mutate the `nums` parameter."
                    },
                    {
                        "username": "Evil_123",
                        "content": "////EASY C++ SOLUTION\\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n       int n=nums.size(),val=1,k=1;\\n       for(int i=0;i<n-1;i++){\\n         if(nums[i+1]>nums[i]){\\n             k++;\\n             nums[val]=nums[i+1];\\n             val++;\\n         }\\n       }\\n       return k;\\n    }\\n};"
                    },
                    {
                        "username": "byeongjae-kang",
                        "content": "```\\nfunction removeDuplicates(nums: number[]): number {\\n    return [...new Set(nums)].length\\n};\\n```\\n\\n`const k = removeDuplicates([...])`\\n\\nMy solution above should be able to return the right value of `k`, do I need to mutate `nums` in order to get pass this task?"
                    }
                ]
            },
            {
                "id": 1783133,
                "content": [
                    {
                        "username": "Keiku",
                        "content": "Any idea why this code doesn\\'t work? It seems that only 49/361 test cases pass.\\n\\n```python\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums_nodups = []\\n        for n in nums:\\n            # print(\\'n:\\', n)\\n            if n not in nums_nodups:\\n                nums_nodups.append(n)\\n                # print(\\'nums_nodups:\\', nums_nodups)\\n\\n        print(nums_nodups)\\n        return len(nums_nodups)\\n```"
                    },
                    {
                        "username": "Keiku",
                        "content": "[@idklol8](/idklol8) \\n\\nThank you for your reply. I overlooked the condition in the problem statement below.\\n\\n>  Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory."
                    },
                    {
                        "username": "idklol8",
                        "content": "You have to remove the duplicates from the original array you\\'re given without creating a new one."
                    },
                    {
                        "username": "neyguu",
                        "content": "How come im getting errors that result weird numbers/letters coming out: \"[I@27fa135a\" "
                    },
                    {
                        "username": "zetlian",
                        "content": "Honestly this one is filled with problems. I\\'m here beating myself over this and struggling just to notice the problem isn\\'t even me."
                    },
                    {
                        "username": "sk38252",
                        "content": "this can be also solve by hashset\\n"
                    },
                    {
                        "username": "justsolveitlmao",
                        "content": "You need to modify ref value of `nums`, can\\'t reassign"
                    },
                    {
                        "username": "avinashchawla67001",
                        "content": "It is working absolutely fine in Eclipse but leetcode is giving the wrong output while running the code.\\nAny Solution ! \\n\\npublic static int remove(int[] nums) {\\n\\t\\t// TODO Auto-generated method stub\\n\\t\\tArrays.sort(nums);\\n\\t    int exnums[] = new int[nums.length];\\n\\t\\tArrayList<Integer> exnums = new ArrayList<>();\\n\\t\\texnums.add(nums[0]);\\n\\t\\tfor (int i = 1; i < nums.length; i++) {\\n\\t\\t\\tif(nums[i] == nums[i-1]) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\t\\t\\texnums.add(nums[i]);\\n\\t\\t}\\n\\t\\tint k =  exnums.size();\\n\\t\\tint expnums[] = new int[k];\\n\\t\\tfor (int i = 0; i < k; i++) {\\n\\t\\t\\texpnums[i] = exnums.get(i) ;\\n\\t\\t}\\n\\t\\treturn expnums.length;\\n\\t}\\n"
                    },
                    {
                        "username": "agupta354",
                        "content": " `class Solution {\\n    public int removeDuplicates(int[] nums) {\\n     \\n     int t=0;\\n\\n     for(int i=1;i<nums.length;i++){\\n         if(nums[t] != nums[i]){\\n             nums[t+1]=nums[i];\\n             t++;\\n         }\\n     }\\n\\n     //since t start from 0 \\n     return t+1;\\n\\n\\n    }\\n}`"
                    },
                    {
                        "username": "Siddhantkeshariii",
                        "content": "If we have to return the size of nums then why the test case of the question shows the array?"
                    },
                    {
                        "username": "byeongjae-kang",
                        "content": "yeah seems confusing. it looks like the array in the test cases is `nums` parameter, and I noticed we need to return the length of the array and mutate the `nums` parameter."
                    },
                    {
                        "username": "Evil_123",
                        "content": "////EASY C++ SOLUTION\\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n       int n=nums.size(),val=1,k=1;\\n       for(int i=0;i<n-1;i++){\\n         if(nums[i+1]>nums[i]){\\n             k++;\\n             nums[val]=nums[i+1];\\n             val++;\\n         }\\n       }\\n       return k;\\n    }\\n};"
                    },
                    {
                        "username": "byeongjae-kang",
                        "content": "```\\nfunction removeDuplicates(nums: number[]): number {\\n    return [...new Set(nums)].length\\n};\\n```\\n\\n`const k = removeDuplicates([...])`\\n\\nMy solution above should be able to return the right value of `k`, do I need to mutate `nums` in order to get pass this task?"
                    }
                ]
            },
            {
                "id": 1782435,
                "content": [
                    {
                        "username": "Keiku",
                        "content": "Any idea why this code doesn\\'t work? It seems that only 49/361 test cases pass.\\n\\n```python\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        nums_nodups = []\\n        for n in nums:\\n            # print(\\'n:\\', n)\\n            if n not in nums_nodups:\\n                nums_nodups.append(n)\\n                # print(\\'nums_nodups:\\', nums_nodups)\\n\\n        print(nums_nodups)\\n        return len(nums_nodups)\\n```"
                    },
                    {
                        "username": "Keiku",
                        "content": "[@idklol8](/idklol8) \\n\\nThank you for your reply. I overlooked the condition in the problem statement below.\\n\\n>  Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory."
                    },
                    {
                        "username": "idklol8",
                        "content": "You have to remove the duplicates from the original array you\\'re given without creating a new one."
                    },
                    {
                        "username": "neyguu",
                        "content": "How come im getting errors that result weird numbers/letters coming out: \"[I@27fa135a\" "
                    },
                    {
                        "username": "zetlian",
                        "content": "Honestly this one is filled with problems. I\\'m here beating myself over this and struggling just to notice the problem isn\\'t even me."
                    },
                    {
                        "username": "sk38252",
                        "content": "this can be also solve by hashset\\n"
                    },
                    {
                        "username": "justsolveitlmao",
                        "content": "You need to modify ref value of `nums`, can\\'t reassign"
                    },
                    {
                        "username": "avinashchawla67001",
                        "content": "It is working absolutely fine in Eclipse but leetcode is giving the wrong output while running the code.\\nAny Solution ! \\n\\npublic static int remove(int[] nums) {\\n\\t\\t// TODO Auto-generated method stub\\n\\t\\tArrays.sort(nums);\\n\\t    int exnums[] = new int[nums.length];\\n\\t\\tArrayList<Integer> exnums = new ArrayList<>();\\n\\t\\texnums.add(nums[0]);\\n\\t\\tfor (int i = 1; i < nums.length; i++) {\\n\\t\\t\\tif(nums[i] == nums[i-1]) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\t\\t\\texnums.add(nums[i]);\\n\\t\\t}\\n\\t\\tint k =  exnums.size();\\n\\t\\tint expnums[] = new int[k];\\n\\t\\tfor (int i = 0; i < k; i++) {\\n\\t\\t\\texpnums[i] = exnums.get(i) ;\\n\\t\\t}\\n\\t\\treturn expnums.length;\\n\\t}\\n"
                    },
                    {
                        "username": "agupta354",
                        "content": " `class Solution {\\n    public int removeDuplicates(int[] nums) {\\n     \\n     int t=0;\\n\\n     for(int i=1;i<nums.length;i++){\\n         if(nums[t] != nums[i]){\\n             nums[t+1]=nums[i];\\n             t++;\\n         }\\n     }\\n\\n     //since t start from 0 \\n     return t+1;\\n\\n\\n    }\\n}`"
                    },
                    {
                        "username": "Siddhantkeshariii",
                        "content": "If we have to return the size of nums then why the test case of the question shows the array?"
                    },
                    {
                        "username": "byeongjae-kang",
                        "content": "yeah seems confusing. it looks like the array in the test cases is `nums` parameter, and I noticed we need to return the length of the array and mutate the `nums` parameter."
                    },
                    {
                        "username": "Evil_123",
                        "content": "////EASY C++ SOLUTION\\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n       int n=nums.size(),val=1,k=1;\\n       for(int i=0;i<n-1;i++){\\n         if(nums[i+1]>nums[i]){\\n             k++;\\n             nums[val]=nums[i+1];\\n             val++;\\n         }\\n       }\\n       return k;\\n    }\\n};"
                    },
                    {
                        "username": "byeongjae-kang",
                        "content": "```\\nfunction removeDuplicates(nums: number[]): number {\\n    return [...new Set(nums)].length\\n};\\n```\\n\\n`const k = removeDuplicates([...])`\\n\\nMy solution above should be able to return the right value of `k`, do I need to mutate `nums` in order to get pass this task?"
                    }
                ]
            },
            {
                "id": 1781961,
                "content": [
                    {
                        "username": "HondaCivicTypeR",
                        "content": "    def removeDuplicates(self, nums: List[int]) -> int:\\n        first = 0\\n        \\n        for second in range(1, len(nums)):\\n            if nums[first] != nums[second]:\\n                first += 1\\n                nums[first] = nums[second]\\n\\n        return first + 1"
                    },
                    {
                        "username": "merin_roy",
                        "content": "Guys, we not only need to return the length of the resultant list, but also need to update the list in the required format. This problem can be considered as an example for \\'pass by reference\\'. "
                    },
                    {
                        "username": "fuad-hashimi",
                        "content": "hey guys. I wrote a code that ran  with the \"run\" button but as soon as I hit submit the compiler throws a heap-buffer-overflow error for some reason. I tried looking it up online and I found that these types of errors occur when we try to allocate some memory and then access it in a bad way, but I didn\\'t allocate anything in my code. Send help please"
                    },
                    {
                        "username": "SilverWings47",
                        "content": "Can i use language specific methods like JavaScript array methods ?"
                    },
                    {
                        "username": "Geany97",
                        "content": "Asking for an int, test cases verifying an array of integers. Just an array to a set, bad format of question."
                    },
                    {
                        "username": "panwarDeepanshu",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int i = 0;\\n        int j= 0;\\n        int cnt = 1;\\n        while(j<nums.size()-1){\\n            if(nums[j]==nums[j+1]){\\n                j++;\\n            }\\n            else{\\n                \\n                j++;\\n                i = j;\\n                nums[cnt]=nums[i];\\n                cnt++;\\n            }\\n        }\\n        return cnt;\\n    }\\n};"
                    },
                    {
                        "username": "pushkartiwari6",
                        "content": "good question"
                    },
                    {
                        "username": "SaurabhDhyani",
                        "content": "Why is this not a correct answer :\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        if nums:\\n            nums = list(set(nums))\\n            return(len(nums))\\nI tested it in vs code and its giving correct count and I also printed the array which is also removing the duplicates."
                    },
                    {
                        "username": "mfliltim",
                        "content": "Am I mistaken or are the expected outputs of the test cases different from the prompt?"
                    },
                    {
                        "username": "uniyalvipin",
                        "content": "`var removeDuplicates = function(nums) {\\n    for(let i = 1; i < nums.length; i++){\\n        if(nums[i] === nums[i-1]){\\n            nums.splice(i, 1)\\n            i--;\\n        }\\n    }\\n    return nums.length;\\n};`\\n\\nsimple js solution"
                    }
                ]
            },
            {
                "id": 1781175,
                "content": [
                    {
                        "username": "HondaCivicTypeR",
                        "content": "    def removeDuplicates(self, nums: List[int]) -> int:\\n        first = 0\\n        \\n        for second in range(1, len(nums)):\\n            if nums[first] != nums[second]:\\n                first += 1\\n                nums[first] = nums[second]\\n\\n        return first + 1"
                    },
                    {
                        "username": "merin_roy",
                        "content": "Guys, we not only need to return the length of the resultant list, but also need to update the list in the required format. This problem can be considered as an example for \\'pass by reference\\'. "
                    },
                    {
                        "username": "fuad-hashimi",
                        "content": "hey guys. I wrote a code that ran  with the \"run\" button but as soon as I hit submit the compiler throws a heap-buffer-overflow error for some reason. I tried looking it up online and I found that these types of errors occur when we try to allocate some memory and then access it in a bad way, but I didn\\'t allocate anything in my code. Send help please"
                    },
                    {
                        "username": "SilverWings47",
                        "content": "Can i use language specific methods like JavaScript array methods ?"
                    },
                    {
                        "username": "Geany97",
                        "content": "Asking for an int, test cases verifying an array of integers. Just an array to a set, bad format of question."
                    },
                    {
                        "username": "panwarDeepanshu",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int i = 0;\\n        int j= 0;\\n        int cnt = 1;\\n        while(j<nums.size()-1){\\n            if(nums[j]==nums[j+1]){\\n                j++;\\n            }\\n            else{\\n                \\n                j++;\\n                i = j;\\n                nums[cnt]=nums[i];\\n                cnt++;\\n            }\\n        }\\n        return cnt;\\n    }\\n};"
                    },
                    {
                        "username": "pushkartiwari6",
                        "content": "good question"
                    },
                    {
                        "username": "SaurabhDhyani",
                        "content": "Why is this not a correct answer :\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        if nums:\\n            nums = list(set(nums))\\n            return(len(nums))\\nI tested it in vs code and its giving correct count and I also printed the array which is also removing the duplicates."
                    },
                    {
                        "username": "mfliltim",
                        "content": "Am I mistaken or are the expected outputs of the test cases different from the prompt?"
                    },
                    {
                        "username": "uniyalvipin",
                        "content": "`var removeDuplicates = function(nums) {\\n    for(let i = 1; i < nums.length; i++){\\n        if(nums[i] === nums[i-1]){\\n            nums.splice(i, 1)\\n            i--;\\n        }\\n    }\\n    return nums.length;\\n};`\\n\\nsimple js solution"
                    }
                ]
            },
            {
                "id": 1779898,
                "content": [
                    {
                        "username": "HondaCivicTypeR",
                        "content": "    def removeDuplicates(self, nums: List[int]) -> int:\\n        first = 0\\n        \\n        for second in range(1, len(nums)):\\n            if nums[first] != nums[second]:\\n                first += 1\\n                nums[first] = nums[second]\\n\\n        return first + 1"
                    },
                    {
                        "username": "merin_roy",
                        "content": "Guys, we not only need to return the length of the resultant list, but also need to update the list in the required format. This problem can be considered as an example for \\'pass by reference\\'. "
                    },
                    {
                        "username": "fuad-hashimi",
                        "content": "hey guys. I wrote a code that ran  with the \"run\" button but as soon as I hit submit the compiler throws a heap-buffer-overflow error for some reason. I tried looking it up online and I found that these types of errors occur when we try to allocate some memory and then access it in a bad way, but I didn\\'t allocate anything in my code. Send help please"
                    },
                    {
                        "username": "SilverWings47",
                        "content": "Can i use language specific methods like JavaScript array methods ?"
                    },
                    {
                        "username": "Geany97",
                        "content": "Asking for an int, test cases verifying an array of integers. Just an array to a set, bad format of question."
                    },
                    {
                        "username": "panwarDeepanshu",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int i = 0;\\n        int j= 0;\\n        int cnt = 1;\\n        while(j<nums.size()-1){\\n            if(nums[j]==nums[j+1]){\\n                j++;\\n            }\\n            else{\\n                \\n                j++;\\n                i = j;\\n                nums[cnt]=nums[i];\\n                cnt++;\\n            }\\n        }\\n        return cnt;\\n    }\\n};"
                    },
                    {
                        "username": "pushkartiwari6",
                        "content": "good question"
                    },
                    {
                        "username": "SaurabhDhyani",
                        "content": "Why is this not a correct answer :\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        if nums:\\n            nums = list(set(nums))\\n            return(len(nums))\\nI tested it in vs code and its giving correct count and I also printed the array which is also removing the duplicates."
                    },
                    {
                        "username": "mfliltim",
                        "content": "Am I mistaken or are the expected outputs of the test cases different from the prompt?"
                    },
                    {
                        "username": "uniyalvipin",
                        "content": "`var removeDuplicates = function(nums) {\\n    for(let i = 1; i < nums.length; i++){\\n        if(nums[i] === nums[i-1]){\\n            nums.splice(i, 1)\\n            i--;\\n        }\\n    }\\n    return nums.length;\\n};`\\n\\nsimple js solution"
                    }
                ]
            },
            {
                "id": 1777818,
                "content": [
                    {
                        "username": "HondaCivicTypeR",
                        "content": "    def removeDuplicates(self, nums: List[int]) -> int:\\n        first = 0\\n        \\n        for second in range(1, len(nums)):\\n            if nums[first] != nums[second]:\\n                first += 1\\n                nums[first] = nums[second]\\n\\n        return first + 1"
                    },
                    {
                        "username": "merin_roy",
                        "content": "Guys, we not only need to return the length of the resultant list, but also need to update the list in the required format. This problem can be considered as an example for \\'pass by reference\\'. "
                    },
                    {
                        "username": "fuad-hashimi",
                        "content": "hey guys. I wrote a code that ran  with the \"run\" button but as soon as I hit submit the compiler throws a heap-buffer-overflow error for some reason. I tried looking it up online and I found that these types of errors occur when we try to allocate some memory and then access it in a bad way, but I didn\\'t allocate anything in my code. Send help please"
                    },
                    {
                        "username": "SilverWings47",
                        "content": "Can i use language specific methods like JavaScript array methods ?"
                    },
                    {
                        "username": "Geany97",
                        "content": "Asking for an int, test cases verifying an array of integers. Just an array to a set, bad format of question."
                    },
                    {
                        "username": "panwarDeepanshu",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int i = 0;\\n        int j= 0;\\n        int cnt = 1;\\n        while(j<nums.size()-1){\\n            if(nums[j]==nums[j+1]){\\n                j++;\\n            }\\n            else{\\n                \\n                j++;\\n                i = j;\\n                nums[cnt]=nums[i];\\n                cnt++;\\n            }\\n        }\\n        return cnt;\\n    }\\n};"
                    },
                    {
                        "username": "pushkartiwari6",
                        "content": "good question"
                    },
                    {
                        "username": "SaurabhDhyani",
                        "content": "Why is this not a correct answer :\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        if nums:\\n            nums = list(set(nums))\\n            return(len(nums))\\nI tested it in vs code and its giving correct count and I also printed the array which is also removing the duplicates."
                    },
                    {
                        "username": "mfliltim",
                        "content": "Am I mistaken or are the expected outputs of the test cases different from the prompt?"
                    },
                    {
                        "username": "uniyalvipin",
                        "content": "`var removeDuplicates = function(nums) {\\n    for(let i = 1; i < nums.length; i++){\\n        if(nums[i] === nums[i-1]){\\n            nums.splice(i, 1)\\n            i--;\\n        }\\n    }\\n    return nums.length;\\n};`\\n\\nsimple js solution"
                    }
                ]
            },
            {
                "id": 1776936,
                "content": [
                    {
                        "username": "HondaCivicTypeR",
                        "content": "    def removeDuplicates(self, nums: List[int]) -> int:\\n        first = 0\\n        \\n        for second in range(1, len(nums)):\\n            if nums[first] != nums[second]:\\n                first += 1\\n                nums[first] = nums[second]\\n\\n        return first + 1"
                    },
                    {
                        "username": "merin_roy",
                        "content": "Guys, we not only need to return the length of the resultant list, but also need to update the list in the required format. This problem can be considered as an example for \\'pass by reference\\'. "
                    },
                    {
                        "username": "fuad-hashimi",
                        "content": "hey guys. I wrote a code that ran  with the \"run\" button but as soon as I hit submit the compiler throws a heap-buffer-overflow error for some reason. I tried looking it up online and I found that these types of errors occur when we try to allocate some memory and then access it in a bad way, but I didn\\'t allocate anything in my code. Send help please"
                    },
                    {
                        "username": "SilverWings47",
                        "content": "Can i use language specific methods like JavaScript array methods ?"
                    },
                    {
                        "username": "Geany97",
                        "content": "Asking for an int, test cases verifying an array of integers. Just an array to a set, bad format of question."
                    },
                    {
                        "username": "panwarDeepanshu",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int i = 0;\\n        int j= 0;\\n        int cnt = 1;\\n        while(j<nums.size()-1){\\n            if(nums[j]==nums[j+1]){\\n                j++;\\n            }\\n            else{\\n                \\n                j++;\\n                i = j;\\n                nums[cnt]=nums[i];\\n                cnt++;\\n            }\\n        }\\n        return cnt;\\n    }\\n};"
                    },
                    {
                        "username": "pushkartiwari6",
                        "content": "good question"
                    },
                    {
                        "username": "SaurabhDhyani",
                        "content": "Why is this not a correct answer :\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        if nums:\\n            nums = list(set(nums))\\n            return(len(nums))\\nI tested it in vs code and its giving correct count and I also printed the array which is also removing the duplicates."
                    },
                    {
                        "username": "mfliltim",
                        "content": "Am I mistaken or are the expected outputs of the test cases different from the prompt?"
                    },
                    {
                        "username": "uniyalvipin",
                        "content": "`var removeDuplicates = function(nums) {\\n    for(let i = 1; i < nums.length; i++){\\n        if(nums[i] === nums[i-1]){\\n            nums.splice(i, 1)\\n            i--;\\n        }\\n    }\\n    return nums.length;\\n};`\\n\\nsimple js solution"
                    }
                ]
            },
            {
                "id": 1776558,
                "content": [
                    {
                        "username": "HondaCivicTypeR",
                        "content": "    def removeDuplicates(self, nums: List[int]) -> int:\\n        first = 0\\n        \\n        for second in range(1, len(nums)):\\n            if nums[first] != nums[second]:\\n                first += 1\\n                nums[first] = nums[second]\\n\\n        return first + 1"
                    },
                    {
                        "username": "merin_roy",
                        "content": "Guys, we not only need to return the length of the resultant list, but also need to update the list in the required format. This problem can be considered as an example for \\'pass by reference\\'. "
                    },
                    {
                        "username": "fuad-hashimi",
                        "content": "hey guys. I wrote a code that ran  with the \"run\" button but as soon as I hit submit the compiler throws a heap-buffer-overflow error for some reason. I tried looking it up online and I found that these types of errors occur when we try to allocate some memory and then access it in a bad way, but I didn\\'t allocate anything in my code. Send help please"
                    },
                    {
                        "username": "SilverWings47",
                        "content": "Can i use language specific methods like JavaScript array methods ?"
                    },
                    {
                        "username": "Geany97",
                        "content": "Asking for an int, test cases verifying an array of integers. Just an array to a set, bad format of question."
                    },
                    {
                        "username": "panwarDeepanshu",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int i = 0;\\n        int j= 0;\\n        int cnt = 1;\\n        while(j<nums.size()-1){\\n            if(nums[j]==nums[j+1]){\\n                j++;\\n            }\\n            else{\\n                \\n                j++;\\n                i = j;\\n                nums[cnt]=nums[i];\\n                cnt++;\\n            }\\n        }\\n        return cnt;\\n    }\\n};"
                    },
                    {
                        "username": "pushkartiwari6",
                        "content": "good question"
                    },
                    {
                        "username": "SaurabhDhyani",
                        "content": "Why is this not a correct answer :\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        if nums:\\n            nums = list(set(nums))\\n            return(len(nums))\\nI tested it in vs code and its giving correct count and I also printed the array which is also removing the duplicates."
                    },
                    {
                        "username": "mfliltim",
                        "content": "Am I mistaken or are the expected outputs of the test cases different from the prompt?"
                    },
                    {
                        "username": "uniyalvipin",
                        "content": "`var removeDuplicates = function(nums) {\\n    for(let i = 1; i < nums.length; i++){\\n        if(nums[i] === nums[i-1]){\\n            nums.splice(i, 1)\\n            i--;\\n        }\\n    }\\n    return nums.length;\\n};`\\n\\nsimple js solution"
                    }
                ]
            },
            {
                "id": 1774538,
                "content": [
                    {
                        "username": "HondaCivicTypeR",
                        "content": "    def removeDuplicates(self, nums: List[int]) -> int:\\n        first = 0\\n        \\n        for second in range(1, len(nums)):\\n            if nums[first] != nums[second]:\\n                first += 1\\n                nums[first] = nums[second]\\n\\n        return first + 1"
                    },
                    {
                        "username": "merin_roy",
                        "content": "Guys, we not only need to return the length of the resultant list, but also need to update the list in the required format. This problem can be considered as an example for \\'pass by reference\\'. "
                    },
                    {
                        "username": "fuad-hashimi",
                        "content": "hey guys. I wrote a code that ran  with the \"run\" button but as soon as I hit submit the compiler throws a heap-buffer-overflow error for some reason. I tried looking it up online and I found that these types of errors occur when we try to allocate some memory and then access it in a bad way, but I didn\\'t allocate anything in my code. Send help please"
                    },
                    {
                        "username": "SilverWings47",
                        "content": "Can i use language specific methods like JavaScript array methods ?"
                    },
                    {
                        "username": "Geany97",
                        "content": "Asking for an int, test cases verifying an array of integers. Just an array to a set, bad format of question."
                    },
                    {
                        "username": "panwarDeepanshu",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int i = 0;\\n        int j= 0;\\n        int cnt = 1;\\n        while(j<nums.size()-1){\\n            if(nums[j]==nums[j+1]){\\n                j++;\\n            }\\n            else{\\n                \\n                j++;\\n                i = j;\\n                nums[cnt]=nums[i];\\n                cnt++;\\n            }\\n        }\\n        return cnt;\\n    }\\n};"
                    },
                    {
                        "username": "pushkartiwari6",
                        "content": "good question"
                    },
                    {
                        "username": "SaurabhDhyani",
                        "content": "Why is this not a correct answer :\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        if nums:\\n            nums = list(set(nums))\\n            return(len(nums))\\nI tested it in vs code and its giving correct count and I also printed the array which is also removing the duplicates."
                    },
                    {
                        "username": "mfliltim",
                        "content": "Am I mistaken or are the expected outputs of the test cases different from the prompt?"
                    },
                    {
                        "username": "uniyalvipin",
                        "content": "`var removeDuplicates = function(nums) {\\n    for(let i = 1; i < nums.length; i++){\\n        if(nums[i] === nums[i-1]){\\n            nums.splice(i, 1)\\n            i--;\\n        }\\n    }\\n    return nums.length;\\n};`\\n\\nsimple js solution"
                    }
                ]
            },
            {
                "id": 1772364,
                "content": [
                    {
                        "username": "HondaCivicTypeR",
                        "content": "    def removeDuplicates(self, nums: List[int]) -> int:\\n        first = 0\\n        \\n        for second in range(1, len(nums)):\\n            if nums[first] != nums[second]:\\n                first += 1\\n                nums[first] = nums[second]\\n\\n        return first + 1"
                    },
                    {
                        "username": "merin_roy",
                        "content": "Guys, we not only need to return the length of the resultant list, but also need to update the list in the required format. This problem can be considered as an example for \\'pass by reference\\'. "
                    },
                    {
                        "username": "fuad-hashimi",
                        "content": "hey guys. I wrote a code that ran  with the \"run\" button but as soon as I hit submit the compiler throws a heap-buffer-overflow error for some reason. I tried looking it up online and I found that these types of errors occur when we try to allocate some memory and then access it in a bad way, but I didn\\'t allocate anything in my code. Send help please"
                    },
                    {
                        "username": "SilverWings47",
                        "content": "Can i use language specific methods like JavaScript array methods ?"
                    },
                    {
                        "username": "Geany97",
                        "content": "Asking for an int, test cases verifying an array of integers. Just an array to a set, bad format of question."
                    },
                    {
                        "username": "panwarDeepanshu",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int i = 0;\\n        int j= 0;\\n        int cnt = 1;\\n        while(j<nums.size()-1){\\n            if(nums[j]==nums[j+1]){\\n                j++;\\n            }\\n            else{\\n                \\n                j++;\\n                i = j;\\n                nums[cnt]=nums[i];\\n                cnt++;\\n            }\\n        }\\n        return cnt;\\n    }\\n};"
                    },
                    {
                        "username": "pushkartiwari6",
                        "content": "good question"
                    },
                    {
                        "username": "SaurabhDhyani",
                        "content": "Why is this not a correct answer :\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        if nums:\\n            nums = list(set(nums))\\n            return(len(nums))\\nI tested it in vs code and its giving correct count and I also printed the array which is also removing the duplicates."
                    },
                    {
                        "username": "mfliltim",
                        "content": "Am I mistaken or are the expected outputs of the test cases different from the prompt?"
                    },
                    {
                        "username": "uniyalvipin",
                        "content": "`var removeDuplicates = function(nums) {\\n    for(let i = 1; i < nums.length; i++){\\n        if(nums[i] === nums[i-1]){\\n            nums.splice(i, 1)\\n            i--;\\n        }\\n    }\\n    return nums.length;\\n};`\\n\\nsimple js solution"
                    }
                ]
            },
            {
                "id": 1765315,
                "content": [
                    {
                        "username": "HondaCivicTypeR",
                        "content": "    def removeDuplicates(self, nums: List[int]) -> int:\\n        first = 0\\n        \\n        for second in range(1, len(nums)):\\n            if nums[first] != nums[second]:\\n                first += 1\\n                nums[first] = nums[second]\\n\\n        return first + 1"
                    },
                    {
                        "username": "merin_roy",
                        "content": "Guys, we not only need to return the length of the resultant list, but also need to update the list in the required format. This problem can be considered as an example for \\'pass by reference\\'. "
                    },
                    {
                        "username": "fuad-hashimi",
                        "content": "hey guys. I wrote a code that ran  with the \"run\" button but as soon as I hit submit the compiler throws a heap-buffer-overflow error for some reason. I tried looking it up online and I found that these types of errors occur when we try to allocate some memory and then access it in a bad way, but I didn\\'t allocate anything in my code. Send help please"
                    },
                    {
                        "username": "SilverWings47",
                        "content": "Can i use language specific methods like JavaScript array methods ?"
                    },
                    {
                        "username": "Geany97",
                        "content": "Asking for an int, test cases verifying an array of integers. Just an array to a set, bad format of question."
                    },
                    {
                        "username": "panwarDeepanshu",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int i = 0;\\n        int j= 0;\\n        int cnt = 1;\\n        while(j<nums.size()-1){\\n            if(nums[j]==nums[j+1]){\\n                j++;\\n            }\\n            else{\\n                \\n                j++;\\n                i = j;\\n                nums[cnt]=nums[i];\\n                cnt++;\\n            }\\n        }\\n        return cnt;\\n    }\\n};"
                    },
                    {
                        "username": "pushkartiwari6",
                        "content": "good question"
                    },
                    {
                        "username": "SaurabhDhyani",
                        "content": "Why is this not a correct answer :\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        if nums:\\n            nums = list(set(nums))\\n            return(len(nums))\\nI tested it in vs code and its giving correct count and I also printed the array which is also removing the duplicates."
                    },
                    {
                        "username": "mfliltim",
                        "content": "Am I mistaken or are the expected outputs of the test cases different from the prompt?"
                    },
                    {
                        "username": "uniyalvipin",
                        "content": "`var removeDuplicates = function(nums) {\\n    for(let i = 1; i < nums.length; i++){\\n        if(nums[i] === nums[i-1]){\\n            nums.splice(i, 1)\\n            i--;\\n        }\\n    }\\n    return nums.length;\\n};`\\n\\nsimple js solution"
                    }
                ]
            },
            {
                "id": 1765300,
                "content": [
                    {
                        "username": "HondaCivicTypeR",
                        "content": "    def removeDuplicates(self, nums: List[int]) -> int:\\n        first = 0\\n        \\n        for second in range(1, len(nums)):\\n            if nums[first] != nums[second]:\\n                first += 1\\n                nums[first] = nums[second]\\n\\n        return first + 1"
                    },
                    {
                        "username": "merin_roy",
                        "content": "Guys, we not only need to return the length of the resultant list, but also need to update the list in the required format. This problem can be considered as an example for \\'pass by reference\\'. "
                    },
                    {
                        "username": "fuad-hashimi",
                        "content": "hey guys. I wrote a code that ran  with the \"run\" button but as soon as I hit submit the compiler throws a heap-buffer-overflow error for some reason. I tried looking it up online and I found that these types of errors occur when we try to allocate some memory and then access it in a bad way, but I didn\\'t allocate anything in my code. Send help please"
                    },
                    {
                        "username": "SilverWings47",
                        "content": "Can i use language specific methods like JavaScript array methods ?"
                    },
                    {
                        "username": "Geany97",
                        "content": "Asking for an int, test cases verifying an array of integers. Just an array to a set, bad format of question."
                    },
                    {
                        "username": "panwarDeepanshu",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        int i = 0;\\n        int j= 0;\\n        int cnt = 1;\\n        while(j<nums.size()-1){\\n            if(nums[j]==nums[j+1]){\\n                j++;\\n            }\\n            else{\\n                \\n                j++;\\n                i = j;\\n                nums[cnt]=nums[i];\\n                cnt++;\\n            }\\n        }\\n        return cnt;\\n    }\\n};"
                    },
                    {
                        "username": "pushkartiwari6",
                        "content": "good question"
                    },
                    {
                        "username": "SaurabhDhyani",
                        "content": "Why is this not a correct answer :\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        if nums:\\n            nums = list(set(nums))\\n            return(len(nums))\\nI tested it in vs code and its giving correct count and I also printed the array which is also removing the duplicates."
                    },
                    {
                        "username": "mfliltim",
                        "content": "Am I mistaken or are the expected outputs of the test cases different from the prompt?"
                    },
                    {
                        "username": "uniyalvipin",
                        "content": "`var removeDuplicates = function(nums) {\\n    for(let i = 1; i < nums.length; i++){\\n        if(nums[i] === nums[i-1]){\\n            nums.splice(i, 1)\\n            i--;\\n        }\\n    }\\n    return nums.length;\\n};`\\n\\nsimple js solution"
                    }
                ]
            },
            {
                "id": 1762825,
                "content": [
                    {
                        "username": "joeyliu7975",
                        "content": "The description and functions itself is contrast, asking to return `Int` but we are expected to remove array? It\\'s misleading."
                    },
                    {
                        "username": "DenisUstinov",
                        "content": "Почему не работает?\n\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        start_len = len(nums)\n        nums = list(set(nums))\n        return start_len - len(nums)"
                    },
                    {
                        "username": "DenisUstinov",
                        "content": "Где в реальной разработке на Python это используется?"
                    },
                    {
                        "username": "Jeetaksh",
                        "content": "This is the first question I have seen which has more number of dislikes as compared to likes."
                    },
                    {
                        "username": "ayushyush100",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        newList = []\\n        elist = []\\n        r = 0\\n        for i in nums:\\n            if i not in newList:\\n                newList.append(i)\\n                r += 1\\n        \\n        for a in range(r):\\n            elist.append(a)\\n        \\n        k = r\\n        nums = newList\\n        \\n        return k\\n\\n       \\nWhat is wrong with this code?"
                    },
                    {
                        "username": "nikitapandeyy",
                        "content": "1. initialize index=1 ;try to run loop from 0 to nums.length-1\\n2. then compare nums[i]>nums[i+1]\\n3. then nums[index]=nums[i+1]\\n4. and increase index by 1\\n5.return index"
                    },
                    {
                        "username": "altr3s",
                        "content": " class Solution:\\n    def removeDuplicates(nums: list[int]) -> int:\\n        answer = sorted(list(set(nums)))\\n        return len(answer)\\n\\nfor testing in vscode is correct output, but in leetcode..."
                    },
                    {
                        "username": "Priyamd",
                        "content": "how to swap??\\n"
                    },
                    {
                        "username": "ravitejalvr1",
                        "content": "Why cant we convert nums into set and convert set back to list\\n\\nnums=list(set(nums))\\nreturn len(nums)"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    }
                ]
            },
            {
                "id": 1762598,
                "content": [
                    {
                        "username": "joeyliu7975",
                        "content": "The description and functions itself is contrast, asking to return `Int` but we are expected to remove array? It\\'s misleading."
                    },
                    {
                        "username": "DenisUstinov",
                        "content": "Почему не работает?\n\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        start_len = len(nums)\n        nums = list(set(nums))\n        return start_len - len(nums)"
                    },
                    {
                        "username": "DenisUstinov",
                        "content": "Где в реальной разработке на Python это используется?"
                    },
                    {
                        "username": "Jeetaksh",
                        "content": "This is the first question I have seen which has more number of dislikes as compared to likes."
                    },
                    {
                        "username": "ayushyush100",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        newList = []\\n        elist = []\\n        r = 0\\n        for i in nums:\\n            if i not in newList:\\n                newList.append(i)\\n                r += 1\\n        \\n        for a in range(r):\\n            elist.append(a)\\n        \\n        k = r\\n        nums = newList\\n        \\n        return k\\n\\n       \\nWhat is wrong with this code?"
                    },
                    {
                        "username": "nikitapandeyy",
                        "content": "1. initialize index=1 ;try to run loop from 0 to nums.length-1\\n2. then compare nums[i]>nums[i+1]\\n3. then nums[index]=nums[i+1]\\n4. and increase index by 1\\n5.return index"
                    },
                    {
                        "username": "altr3s",
                        "content": " class Solution:\\n    def removeDuplicates(nums: list[int]) -> int:\\n        answer = sorted(list(set(nums)))\\n        return len(answer)\\n\\nfor testing in vscode is correct output, but in leetcode..."
                    },
                    {
                        "username": "Priyamd",
                        "content": "how to swap??\\n"
                    },
                    {
                        "username": "ravitejalvr1",
                        "content": "Why cant we convert nums into set and convert set back to list\\n\\nnums=list(set(nums))\\nreturn len(nums)"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    }
                ]
            },
            {
                "id": 1762590,
                "content": [
                    {
                        "username": "joeyliu7975",
                        "content": "The description and functions itself is contrast, asking to return `Int` but we are expected to remove array? It\\'s misleading."
                    },
                    {
                        "username": "DenisUstinov",
                        "content": "Почему не работает?\n\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        start_len = len(nums)\n        nums = list(set(nums))\n        return start_len - len(nums)"
                    },
                    {
                        "username": "DenisUstinov",
                        "content": "Где в реальной разработке на Python это используется?"
                    },
                    {
                        "username": "Jeetaksh",
                        "content": "This is the first question I have seen which has more number of dislikes as compared to likes."
                    },
                    {
                        "username": "ayushyush100",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        newList = []\\n        elist = []\\n        r = 0\\n        for i in nums:\\n            if i not in newList:\\n                newList.append(i)\\n                r += 1\\n        \\n        for a in range(r):\\n            elist.append(a)\\n        \\n        k = r\\n        nums = newList\\n        \\n        return k\\n\\n       \\nWhat is wrong with this code?"
                    },
                    {
                        "username": "nikitapandeyy",
                        "content": "1. initialize index=1 ;try to run loop from 0 to nums.length-1\\n2. then compare nums[i]>nums[i+1]\\n3. then nums[index]=nums[i+1]\\n4. and increase index by 1\\n5.return index"
                    },
                    {
                        "username": "altr3s",
                        "content": " class Solution:\\n    def removeDuplicates(nums: list[int]) -> int:\\n        answer = sorted(list(set(nums)))\\n        return len(answer)\\n\\nfor testing in vscode is correct output, but in leetcode..."
                    },
                    {
                        "username": "Priyamd",
                        "content": "how to swap??\\n"
                    },
                    {
                        "username": "ravitejalvr1",
                        "content": "Why cant we convert nums into set and convert set back to list\\n\\nnums=list(set(nums))\\nreturn len(nums)"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    }
                ]
            },
            {
                "id": 1761896,
                "content": [
                    {
                        "username": "joeyliu7975",
                        "content": "The description and functions itself is contrast, asking to return `Int` but we are expected to remove array? It\\'s misleading."
                    },
                    {
                        "username": "DenisUstinov",
                        "content": "Почему не работает?\n\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        start_len = len(nums)\n        nums = list(set(nums))\n        return start_len - len(nums)"
                    },
                    {
                        "username": "DenisUstinov",
                        "content": "Где в реальной разработке на Python это используется?"
                    },
                    {
                        "username": "Jeetaksh",
                        "content": "This is the first question I have seen which has more number of dislikes as compared to likes."
                    },
                    {
                        "username": "ayushyush100",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        newList = []\\n        elist = []\\n        r = 0\\n        for i in nums:\\n            if i not in newList:\\n                newList.append(i)\\n                r += 1\\n        \\n        for a in range(r):\\n            elist.append(a)\\n        \\n        k = r\\n        nums = newList\\n        \\n        return k\\n\\n       \\nWhat is wrong with this code?"
                    },
                    {
                        "username": "nikitapandeyy",
                        "content": "1. initialize index=1 ;try to run loop from 0 to nums.length-1\\n2. then compare nums[i]>nums[i+1]\\n3. then nums[index]=nums[i+1]\\n4. and increase index by 1\\n5.return index"
                    },
                    {
                        "username": "altr3s",
                        "content": " class Solution:\\n    def removeDuplicates(nums: list[int]) -> int:\\n        answer = sorted(list(set(nums)))\\n        return len(answer)\\n\\nfor testing in vscode is correct output, but in leetcode..."
                    },
                    {
                        "username": "Priyamd",
                        "content": "how to swap??\\n"
                    },
                    {
                        "username": "ravitejalvr1",
                        "content": "Why cant we convert nums into set and convert set back to list\\n\\nnums=list(set(nums))\\nreturn len(nums)"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    }
                ]
            },
            {
                "id": 1761818,
                "content": [
                    {
                        "username": "joeyliu7975",
                        "content": "The description and functions itself is contrast, asking to return `Int` but we are expected to remove array? It\\'s misleading."
                    },
                    {
                        "username": "DenisUstinov",
                        "content": "Почему не работает?\n\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        start_len = len(nums)\n        nums = list(set(nums))\n        return start_len - len(nums)"
                    },
                    {
                        "username": "DenisUstinov",
                        "content": "Где в реальной разработке на Python это используется?"
                    },
                    {
                        "username": "Jeetaksh",
                        "content": "This is the first question I have seen which has more number of dislikes as compared to likes."
                    },
                    {
                        "username": "ayushyush100",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        newList = []\\n        elist = []\\n        r = 0\\n        for i in nums:\\n            if i not in newList:\\n                newList.append(i)\\n                r += 1\\n        \\n        for a in range(r):\\n            elist.append(a)\\n        \\n        k = r\\n        nums = newList\\n        \\n        return k\\n\\n       \\nWhat is wrong with this code?"
                    },
                    {
                        "username": "nikitapandeyy",
                        "content": "1. initialize index=1 ;try to run loop from 0 to nums.length-1\\n2. then compare nums[i]>nums[i+1]\\n3. then nums[index]=nums[i+1]\\n4. and increase index by 1\\n5.return index"
                    },
                    {
                        "username": "altr3s",
                        "content": " class Solution:\\n    def removeDuplicates(nums: list[int]) -> int:\\n        answer = sorted(list(set(nums)))\\n        return len(answer)\\n\\nfor testing in vscode is correct output, but in leetcode..."
                    },
                    {
                        "username": "Priyamd",
                        "content": "how to swap??\\n"
                    },
                    {
                        "username": "ravitejalvr1",
                        "content": "Why cant we convert nums into set and convert set back to list\\n\\nnums=list(set(nums))\\nreturn len(nums)"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    }
                ]
            },
            {
                "id": 1759251,
                "content": [
                    {
                        "username": "joeyliu7975",
                        "content": "The description and functions itself is contrast, asking to return `Int` but we are expected to remove array? It\\'s misleading."
                    },
                    {
                        "username": "DenisUstinov",
                        "content": "Почему не работает?\n\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        start_len = len(nums)\n        nums = list(set(nums))\n        return start_len - len(nums)"
                    },
                    {
                        "username": "DenisUstinov",
                        "content": "Где в реальной разработке на Python это используется?"
                    },
                    {
                        "username": "Jeetaksh",
                        "content": "This is the first question I have seen which has more number of dislikes as compared to likes."
                    },
                    {
                        "username": "ayushyush100",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        newList = []\\n        elist = []\\n        r = 0\\n        for i in nums:\\n            if i not in newList:\\n                newList.append(i)\\n                r += 1\\n        \\n        for a in range(r):\\n            elist.append(a)\\n        \\n        k = r\\n        nums = newList\\n        \\n        return k\\n\\n       \\nWhat is wrong with this code?"
                    },
                    {
                        "username": "nikitapandeyy",
                        "content": "1. initialize index=1 ;try to run loop from 0 to nums.length-1\\n2. then compare nums[i]>nums[i+1]\\n3. then nums[index]=nums[i+1]\\n4. and increase index by 1\\n5.return index"
                    },
                    {
                        "username": "altr3s",
                        "content": " class Solution:\\n    def removeDuplicates(nums: list[int]) -> int:\\n        answer = sorted(list(set(nums)))\\n        return len(answer)\\n\\nfor testing in vscode is correct output, but in leetcode..."
                    },
                    {
                        "username": "Priyamd",
                        "content": "how to swap??\\n"
                    },
                    {
                        "username": "ravitejalvr1",
                        "content": "Why cant we convert nums into set and convert set back to list\\n\\nnums=list(set(nums))\\nreturn len(nums)"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    }
                ]
            },
            {
                "id": 1759077,
                "content": [
                    {
                        "username": "joeyliu7975",
                        "content": "The description and functions itself is contrast, asking to return `Int` but we are expected to remove array? It\\'s misleading."
                    },
                    {
                        "username": "DenisUstinov",
                        "content": "Почему не работает?\n\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        start_len = len(nums)\n        nums = list(set(nums))\n        return start_len - len(nums)"
                    },
                    {
                        "username": "DenisUstinov",
                        "content": "Где в реальной разработке на Python это используется?"
                    },
                    {
                        "username": "Jeetaksh",
                        "content": "This is the first question I have seen which has more number of dislikes as compared to likes."
                    },
                    {
                        "username": "ayushyush100",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        newList = []\\n        elist = []\\n        r = 0\\n        for i in nums:\\n            if i not in newList:\\n                newList.append(i)\\n                r += 1\\n        \\n        for a in range(r):\\n            elist.append(a)\\n        \\n        k = r\\n        nums = newList\\n        \\n        return k\\n\\n       \\nWhat is wrong with this code?"
                    },
                    {
                        "username": "nikitapandeyy",
                        "content": "1. initialize index=1 ;try to run loop from 0 to nums.length-1\\n2. then compare nums[i]>nums[i+1]\\n3. then nums[index]=nums[i+1]\\n4. and increase index by 1\\n5.return index"
                    },
                    {
                        "username": "altr3s",
                        "content": " class Solution:\\n    def removeDuplicates(nums: list[int]) -> int:\\n        answer = sorted(list(set(nums)))\\n        return len(answer)\\n\\nfor testing in vscode is correct output, but in leetcode..."
                    },
                    {
                        "username": "Priyamd",
                        "content": "how to swap??\\n"
                    },
                    {
                        "username": "ravitejalvr1",
                        "content": "Why cant we convert nums into set and convert set back to list\\n\\nnums=list(set(nums))\\nreturn len(nums)"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    }
                ]
            },
            {
                "id": 1754021,
                "content": [
                    {
                        "username": "joeyliu7975",
                        "content": "The description and functions itself is contrast, asking to return `Int` but we are expected to remove array? It\\'s misleading."
                    },
                    {
                        "username": "DenisUstinov",
                        "content": "Почему не работает?\n\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        start_len = len(nums)\n        nums = list(set(nums))\n        return start_len - len(nums)"
                    },
                    {
                        "username": "DenisUstinov",
                        "content": "Где в реальной разработке на Python это используется?"
                    },
                    {
                        "username": "Jeetaksh",
                        "content": "This is the first question I have seen which has more number of dislikes as compared to likes."
                    },
                    {
                        "username": "ayushyush100",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        newList = []\\n        elist = []\\n        r = 0\\n        for i in nums:\\n            if i not in newList:\\n                newList.append(i)\\n                r += 1\\n        \\n        for a in range(r):\\n            elist.append(a)\\n        \\n        k = r\\n        nums = newList\\n        \\n        return k\\n\\n       \\nWhat is wrong with this code?"
                    },
                    {
                        "username": "nikitapandeyy",
                        "content": "1. initialize index=1 ;try to run loop from 0 to nums.length-1\\n2. then compare nums[i]>nums[i+1]\\n3. then nums[index]=nums[i+1]\\n4. and increase index by 1\\n5.return index"
                    },
                    {
                        "username": "altr3s",
                        "content": " class Solution:\\n    def removeDuplicates(nums: list[int]) -> int:\\n        answer = sorted(list(set(nums)))\\n        return len(answer)\\n\\nfor testing in vscode is correct output, but in leetcode..."
                    },
                    {
                        "username": "Priyamd",
                        "content": "how to swap??\\n"
                    },
                    {
                        "username": "ravitejalvr1",
                        "content": "Why cant we convert nums into set and convert set back to list\\n\\nnums=list(set(nums))\\nreturn len(nums)"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    }
                ]
            },
            {
                "id": 1752867,
                "content": [
                    {
                        "username": "joeyliu7975",
                        "content": "The description and functions itself is contrast, asking to return `Int` but we are expected to remove array? It\\'s misleading."
                    },
                    {
                        "username": "DenisUstinov",
                        "content": "Почему не работает?\n\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        start_len = len(nums)\n        nums = list(set(nums))\n        return start_len - len(nums)"
                    },
                    {
                        "username": "DenisUstinov",
                        "content": "Где в реальной разработке на Python это используется?"
                    },
                    {
                        "username": "Jeetaksh",
                        "content": "This is the first question I have seen which has more number of dislikes as compared to likes."
                    },
                    {
                        "username": "ayushyush100",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        newList = []\\n        elist = []\\n        r = 0\\n        for i in nums:\\n            if i not in newList:\\n                newList.append(i)\\n                r += 1\\n        \\n        for a in range(r):\\n            elist.append(a)\\n        \\n        k = r\\n        nums = newList\\n        \\n        return k\\n\\n       \\nWhat is wrong with this code?"
                    },
                    {
                        "username": "nikitapandeyy",
                        "content": "1. initialize index=1 ;try to run loop from 0 to nums.length-1\\n2. then compare nums[i]>nums[i+1]\\n3. then nums[index]=nums[i+1]\\n4. and increase index by 1\\n5.return index"
                    },
                    {
                        "username": "altr3s",
                        "content": " class Solution:\\n    def removeDuplicates(nums: list[int]) -> int:\\n        answer = sorted(list(set(nums)))\\n        return len(answer)\\n\\nfor testing in vscode is correct output, but in leetcode..."
                    },
                    {
                        "username": "Priyamd",
                        "content": "how to swap??\\n"
                    },
                    {
                        "username": "ravitejalvr1",
                        "content": "Why cant we convert nums into set and convert set back to list\\n\\nnums=list(set(nums))\\nreturn len(nums)"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    }
                ]
            },
            {
                "id": 1752591,
                "content": [
                    {
                        "username": "joeyliu7975",
                        "content": "The description and functions itself is contrast, asking to return `Int` but we are expected to remove array? It\\'s misleading."
                    },
                    {
                        "username": "DenisUstinov",
                        "content": "Почему не работает?\n\nclass Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        start_len = len(nums)\n        nums = list(set(nums))\n        return start_len - len(nums)"
                    },
                    {
                        "username": "DenisUstinov",
                        "content": "Где в реальной разработке на Python это используется?"
                    },
                    {
                        "username": "Jeetaksh",
                        "content": "This is the first question I have seen which has more number of dislikes as compared to likes."
                    },
                    {
                        "username": "ayushyush100",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        newList = []\\n        elist = []\\n        r = 0\\n        for i in nums:\\n            if i not in newList:\\n                newList.append(i)\\n                r += 1\\n        \\n        for a in range(r):\\n            elist.append(a)\\n        \\n        k = r\\n        nums = newList\\n        \\n        return k\\n\\n       \\nWhat is wrong with this code?"
                    },
                    {
                        "username": "nikitapandeyy",
                        "content": "1. initialize index=1 ;try to run loop from 0 to nums.length-1\\n2. then compare nums[i]>nums[i+1]\\n3. then nums[index]=nums[i+1]\\n4. and increase index by 1\\n5.return index"
                    },
                    {
                        "username": "altr3s",
                        "content": " class Solution:\\n    def removeDuplicates(nums: list[int]) -> int:\\n        answer = sorted(list(set(nums)))\\n        return len(answer)\\n\\nfor testing in vscode is correct output, but in leetcode..."
                    },
                    {
                        "username": "Priyamd",
                        "content": "how to swap??\\n"
                    },
                    {
                        "username": "ravitejalvr1",
                        "content": "Why cant we convert nums into set and convert set back to list\\n\\nnums=list(set(nums))\\nreturn len(nums)"
                    },
                    {
                        "username": "mohamed_waseela",
                        "content": "https://youtu.be/-Qpk2XJ5XJQ"
                    }
                ]
            },
            {
                "id": 1752413,
                "content": [
                    {
                        "username": "lazy_n",
                        "content": "why can\\'t we use js sets for this problem \\n"
                    },
                    {
                        "username": "chrisramo1",
                        "content": "I thought this would work?  Python ->\\n\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        a = set()\\n        for x in nums:\\n            a.add(int(x))\\n        return list(a)"
                    },
                    {
                        "username": "YogiKnight",
                        "content": "I have the correct result, stored into the nums array, but when I send the len(nums) it says that numbers I sent are incorrect. Anyone know why this might be the case? Typed below is my code, I know that it is inefficient. When running it with those print statements it shows the correct results. (It would not let me post this in the solution section so I am sorry about that. )\\n\\ndef removeDuplicates(self, nums: List[int]) -> int:\\n        for index in range(len(nums)):\\n            if (index < len(nums)):\\n                temp = nums[index]\\n                print(\\'-------\\')\\n                print(\\'Before:\\',nums)\\n                nums = list(filter(lambda char: char != temp, nums))\\n                nums.insert(index, temp)\\n                print(\\'After:\\',nums)\\n        print(\\'-------\\')\\n        print(\\'Result:\\',nums)\\n        return len(nums)"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You need to mutate the original array, test cases are using it to check your code. As far as I can see you are reassigning the nums so you are losing the reference, I think this is what causes the problem."
                    },
                    {
                        "username": "bowenclssp",
                        "content": "Hey, does anyone know why the outcome on my vscode differs from the one I receive in the code editor on Leetcode? For instance, on the test case  `nums = [1,1,2]`, my output on vscode is nums[1,2], but on leetcode it returns [1]. Does anyone know why this happen and how I could resolve this? \nMy code is as follows\n ```\nnums = [1,1,1,1,1,1,2]\nnum = nums.copy()\n\ncurrent = num[0]\n\nfor numId in range(1, len(num)):\n    if num[numId] != current:\n        for _ in range(num.count(current) - 1):\n            nums.remove(current)\n        current = num[numId]\n\nreturn len(num) - len(nums)\n```"
                    },
                    {
                        "username": "Deepak_8811",
                        "content": "    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size()==0){\\n            return 0;\\n        }\\n        int i=0;\\n        for(int j=0;j<nums.size();j++){\\n            // if(nums[i]==nums[j]){\\n            //     j++;\\n            // }\\n         if(nums[i]!=nums[j]){\\n                i++;\\n                nums[i]=nums[j];\\n            }\\n        }\\n        return (i+1);\\n    }"
                    },
                    {
                        "username": "vhimans7",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        nums=list(set(nums))\\n        print(nums[0:])\\n\\n???????????????????????"
                    },
                    {
                        "username": "Rthandi",
                        "content": "Is there anyway you could solve this with a HashMap?"
                    },
                    {
                        "username": "SamuelHanneson",
                        "content": "This was the solution I came up with myself, However it passed every test case but the last one (The super long one that goes from -100 to 100 (not pasting here because its too damn long) and this script timed out, is there a way I could make this fast enough so that it wouldn\\'t time out? I\\'ve found another solution but I like this one and I want to know if its salvageable or if it just wont work for exceedingly long lists\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        for num in nums:\\n            if nums.count(num) is 1:\\n                pass\\n            if nums.count(num) > 1:\\n                while nums.count(num) > 1:\\n                    nums.remove(num)\\n\\n\\n        "
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || 100% runtime || 100% space || Easy to understand.\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2986997/simple-java-100-runtime-100-space-easy-to-understand/"
                    },
                    {
                        "username": "Elias-Kibret",
                        "content": " `your inline code...your inline code...`\\nconst nums=[0,0,1,1,1,2,2,3,3,4]\\nvar removeDuplicates = function(nums) {\\n    return [...new Set(nums)]\\n};\\nconsole.log(removeDuplicates(nums))\\n\\n// [0, 1, 2, 3, 4]\\n\\n// But it doesn\\'t work"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array, it checks the input not what you return."
                    }
                ]
            },
            {
                "id": 1751762,
                "content": [
                    {
                        "username": "lazy_n",
                        "content": "why can\\'t we use js sets for this problem \\n"
                    },
                    {
                        "username": "chrisramo1",
                        "content": "I thought this would work?  Python ->\\n\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        a = set()\\n        for x in nums:\\n            a.add(int(x))\\n        return list(a)"
                    },
                    {
                        "username": "YogiKnight",
                        "content": "I have the correct result, stored into the nums array, but when I send the len(nums) it says that numbers I sent are incorrect. Anyone know why this might be the case? Typed below is my code, I know that it is inefficient. When running it with those print statements it shows the correct results. (It would not let me post this in the solution section so I am sorry about that. )\\n\\ndef removeDuplicates(self, nums: List[int]) -> int:\\n        for index in range(len(nums)):\\n            if (index < len(nums)):\\n                temp = nums[index]\\n                print(\\'-------\\')\\n                print(\\'Before:\\',nums)\\n                nums = list(filter(lambda char: char != temp, nums))\\n                nums.insert(index, temp)\\n                print(\\'After:\\',nums)\\n        print(\\'-------\\')\\n        print(\\'Result:\\',nums)\\n        return len(nums)"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You need to mutate the original array, test cases are using it to check your code. As far as I can see you are reassigning the nums so you are losing the reference, I think this is what causes the problem."
                    },
                    {
                        "username": "bowenclssp",
                        "content": "Hey, does anyone know why the outcome on my vscode differs from the one I receive in the code editor on Leetcode? For instance, on the test case  `nums = [1,1,2]`, my output on vscode is nums[1,2], but on leetcode it returns [1]. Does anyone know why this happen and how I could resolve this? \nMy code is as follows\n ```\nnums = [1,1,1,1,1,1,2]\nnum = nums.copy()\n\ncurrent = num[0]\n\nfor numId in range(1, len(num)):\n    if num[numId] != current:\n        for _ in range(num.count(current) - 1):\n            nums.remove(current)\n        current = num[numId]\n\nreturn len(num) - len(nums)\n```"
                    },
                    {
                        "username": "Deepak_8811",
                        "content": "    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size()==0){\\n            return 0;\\n        }\\n        int i=0;\\n        for(int j=0;j<nums.size();j++){\\n            // if(nums[i]==nums[j]){\\n            //     j++;\\n            // }\\n         if(nums[i]!=nums[j]){\\n                i++;\\n                nums[i]=nums[j];\\n            }\\n        }\\n        return (i+1);\\n    }"
                    },
                    {
                        "username": "vhimans7",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        nums=list(set(nums))\\n        print(nums[0:])\\n\\n???????????????????????"
                    },
                    {
                        "username": "Rthandi",
                        "content": "Is there anyway you could solve this with a HashMap?"
                    },
                    {
                        "username": "SamuelHanneson",
                        "content": "This was the solution I came up with myself, However it passed every test case but the last one (The super long one that goes from -100 to 100 (not pasting here because its too damn long) and this script timed out, is there a way I could make this fast enough so that it wouldn\\'t time out? I\\'ve found another solution but I like this one and I want to know if its salvageable or if it just wont work for exceedingly long lists\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        for num in nums:\\n            if nums.count(num) is 1:\\n                pass\\n            if nums.count(num) > 1:\\n                while nums.count(num) > 1:\\n                    nums.remove(num)\\n\\n\\n        "
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || 100% runtime || 100% space || Easy to understand.\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2986997/simple-java-100-runtime-100-space-easy-to-understand/"
                    },
                    {
                        "username": "Elias-Kibret",
                        "content": " `your inline code...your inline code...`\\nconst nums=[0,0,1,1,1,2,2,3,3,4]\\nvar removeDuplicates = function(nums) {\\n    return [...new Set(nums)]\\n};\\nconsole.log(removeDuplicates(nums))\\n\\n// [0, 1, 2, 3, 4]\\n\\n// But it doesn\\'t work"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array, it checks the input not what you return."
                    }
                ]
            },
            {
                "id": 1750481,
                "content": [
                    {
                        "username": "lazy_n",
                        "content": "why can\\'t we use js sets for this problem \\n"
                    },
                    {
                        "username": "chrisramo1",
                        "content": "I thought this would work?  Python ->\\n\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        a = set()\\n        for x in nums:\\n            a.add(int(x))\\n        return list(a)"
                    },
                    {
                        "username": "YogiKnight",
                        "content": "I have the correct result, stored into the nums array, but when I send the len(nums) it says that numbers I sent are incorrect. Anyone know why this might be the case? Typed below is my code, I know that it is inefficient. When running it with those print statements it shows the correct results. (It would not let me post this in the solution section so I am sorry about that. )\\n\\ndef removeDuplicates(self, nums: List[int]) -> int:\\n        for index in range(len(nums)):\\n            if (index < len(nums)):\\n                temp = nums[index]\\n                print(\\'-------\\')\\n                print(\\'Before:\\',nums)\\n                nums = list(filter(lambda char: char != temp, nums))\\n                nums.insert(index, temp)\\n                print(\\'After:\\',nums)\\n        print(\\'-------\\')\\n        print(\\'Result:\\',nums)\\n        return len(nums)"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You need to mutate the original array, test cases are using it to check your code. As far as I can see you are reassigning the nums so you are losing the reference, I think this is what causes the problem."
                    },
                    {
                        "username": "bowenclssp",
                        "content": "Hey, does anyone know why the outcome on my vscode differs from the one I receive in the code editor on Leetcode? For instance, on the test case  `nums = [1,1,2]`, my output on vscode is nums[1,2], but on leetcode it returns [1]. Does anyone know why this happen and how I could resolve this? \nMy code is as follows\n ```\nnums = [1,1,1,1,1,1,2]\nnum = nums.copy()\n\ncurrent = num[0]\n\nfor numId in range(1, len(num)):\n    if num[numId] != current:\n        for _ in range(num.count(current) - 1):\n            nums.remove(current)\n        current = num[numId]\n\nreturn len(num) - len(nums)\n```"
                    },
                    {
                        "username": "Deepak_8811",
                        "content": "    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size()==0){\\n            return 0;\\n        }\\n        int i=0;\\n        for(int j=0;j<nums.size();j++){\\n            // if(nums[i]==nums[j]){\\n            //     j++;\\n            // }\\n         if(nums[i]!=nums[j]){\\n                i++;\\n                nums[i]=nums[j];\\n            }\\n        }\\n        return (i+1);\\n    }"
                    },
                    {
                        "username": "vhimans7",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        nums=list(set(nums))\\n        print(nums[0:])\\n\\n???????????????????????"
                    },
                    {
                        "username": "Rthandi",
                        "content": "Is there anyway you could solve this with a HashMap?"
                    },
                    {
                        "username": "SamuelHanneson",
                        "content": "This was the solution I came up with myself, However it passed every test case but the last one (The super long one that goes from -100 to 100 (not pasting here because its too damn long) and this script timed out, is there a way I could make this fast enough so that it wouldn\\'t time out? I\\'ve found another solution but I like this one and I want to know if its salvageable or if it just wont work for exceedingly long lists\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        for num in nums:\\n            if nums.count(num) is 1:\\n                pass\\n            if nums.count(num) > 1:\\n                while nums.count(num) > 1:\\n                    nums.remove(num)\\n\\n\\n        "
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || 100% runtime || 100% space || Easy to understand.\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2986997/simple-java-100-runtime-100-space-easy-to-understand/"
                    },
                    {
                        "username": "Elias-Kibret",
                        "content": " `your inline code...your inline code...`\\nconst nums=[0,0,1,1,1,2,2,3,3,4]\\nvar removeDuplicates = function(nums) {\\n    return [...new Set(nums)]\\n};\\nconsole.log(removeDuplicates(nums))\\n\\n// [0, 1, 2, 3, 4]\\n\\n// But it doesn\\'t work"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array, it checks the input not what you return."
                    }
                ]
            },
            {
                "id": 1750327,
                "content": [
                    {
                        "username": "lazy_n",
                        "content": "why can\\'t we use js sets for this problem \\n"
                    },
                    {
                        "username": "chrisramo1",
                        "content": "I thought this would work?  Python ->\\n\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        a = set()\\n        for x in nums:\\n            a.add(int(x))\\n        return list(a)"
                    },
                    {
                        "username": "YogiKnight",
                        "content": "I have the correct result, stored into the nums array, but when I send the len(nums) it says that numbers I sent are incorrect. Anyone know why this might be the case? Typed below is my code, I know that it is inefficient. When running it with those print statements it shows the correct results. (It would not let me post this in the solution section so I am sorry about that. )\\n\\ndef removeDuplicates(self, nums: List[int]) -> int:\\n        for index in range(len(nums)):\\n            if (index < len(nums)):\\n                temp = nums[index]\\n                print(\\'-------\\')\\n                print(\\'Before:\\',nums)\\n                nums = list(filter(lambda char: char != temp, nums))\\n                nums.insert(index, temp)\\n                print(\\'After:\\',nums)\\n        print(\\'-------\\')\\n        print(\\'Result:\\',nums)\\n        return len(nums)"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You need to mutate the original array, test cases are using it to check your code. As far as I can see you are reassigning the nums so you are losing the reference, I think this is what causes the problem."
                    },
                    {
                        "username": "bowenclssp",
                        "content": "Hey, does anyone know why the outcome on my vscode differs from the one I receive in the code editor on Leetcode? For instance, on the test case  `nums = [1,1,2]`, my output on vscode is nums[1,2], but on leetcode it returns [1]. Does anyone know why this happen and how I could resolve this? \nMy code is as follows\n ```\nnums = [1,1,1,1,1,1,2]\nnum = nums.copy()\n\ncurrent = num[0]\n\nfor numId in range(1, len(num)):\n    if num[numId] != current:\n        for _ in range(num.count(current) - 1):\n            nums.remove(current)\n        current = num[numId]\n\nreturn len(num) - len(nums)\n```"
                    },
                    {
                        "username": "Deepak_8811",
                        "content": "    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size()==0){\\n            return 0;\\n        }\\n        int i=0;\\n        for(int j=0;j<nums.size();j++){\\n            // if(nums[i]==nums[j]){\\n            //     j++;\\n            // }\\n         if(nums[i]!=nums[j]){\\n                i++;\\n                nums[i]=nums[j];\\n            }\\n        }\\n        return (i+1);\\n    }"
                    },
                    {
                        "username": "vhimans7",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        nums=list(set(nums))\\n        print(nums[0:])\\n\\n???????????????????????"
                    },
                    {
                        "username": "Rthandi",
                        "content": "Is there anyway you could solve this with a HashMap?"
                    },
                    {
                        "username": "SamuelHanneson",
                        "content": "This was the solution I came up with myself, However it passed every test case but the last one (The super long one that goes from -100 to 100 (not pasting here because its too damn long) and this script timed out, is there a way I could make this fast enough so that it wouldn\\'t time out? I\\'ve found another solution but I like this one and I want to know if its salvageable or if it just wont work for exceedingly long lists\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        for num in nums:\\n            if nums.count(num) is 1:\\n                pass\\n            if nums.count(num) > 1:\\n                while nums.count(num) > 1:\\n                    nums.remove(num)\\n\\n\\n        "
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || 100% runtime || 100% space || Easy to understand.\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2986997/simple-java-100-runtime-100-space-easy-to-understand/"
                    },
                    {
                        "username": "Elias-Kibret",
                        "content": " `your inline code...your inline code...`\\nconst nums=[0,0,1,1,1,2,2,3,3,4]\\nvar removeDuplicates = function(nums) {\\n    return [...new Set(nums)]\\n};\\nconsole.log(removeDuplicates(nums))\\n\\n// [0, 1, 2, 3, 4]\\n\\n// But it doesn\\'t work"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array, it checks the input not what you return."
                    }
                ]
            },
            {
                "id": 1749524,
                "content": [
                    {
                        "username": "lazy_n",
                        "content": "why can\\'t we use js sets for this problem \\n"
                    },
                    {
                        "username": "chrisramo1",
                        "content": "I thought this would work?  Python ->\\n\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        a = set()\\n        for x in nums:\\n            a.add(int(x))\\n        return list(a)"
                    },
                    {
                        "username": "YogiKnight",
                        "content": "I have the correct result, stored into the nums array, but when I send the len(nums) it says that numbers I sent are incorrect. Anyone know why this might be the case? Typed below is my code, I know that it is inefficient. When running it with those print statements it shows the correct results. (It would not let me post this in the solution section so I am sorry about that. )\\n\\ndef removeDuplicates(self, nums: List[int]) -> int:\\n        for index in range(len(nums)):\\n            if (index < len(nums)):\\n                temp = nums[index]\\n                print(\\'-------\\')\\n                print(\\'Before:\\',nums)\\n                nums = list(filter(lambda char: char != temp, nums))\\n                nums.insert(index, temp)\\n                print(\\'After:\\',nums)\\n        print(\\'-------\\')\\n        print(\\'Result:\\',nums)\\n        return len(nums)"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You need to mutate the original array, test cases are using it to check your code. As far as I can see you are reassigning the nums so you are losing the reference, I think this is what causes the problem."
                    },
                    {
                        "username": "bowenclssp",
                        "content": "Hey, does anyone know why the outcome on my vscode differs from the one I receive in the code editor on Leetcode? For instance, on the test case  `nums = [1,1,2]`, my output on vscode is nums[1,2], but on leetcode it returns [1]. Does anyone know why this happen and how I could resolve this? \nMy code is as follows\n ```\nnums = [1,1,1,1,1,1,2]\nnum = nums.copy()\n\ncurrent = num[0]\n\nfor numId in range(1, len(num)):\n    if num[numId] != current:\n        for _ in range(num.count(current) - 1):\n            nums.remove(current)\n        current = num[numId]\n\nreturn len(num) - len(nums)\n```"
                    },
                    {
                        "username": "Deepak_8811",
                        "content": "    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size()==0){\\n            return 0;\\n        }\\n        int i=0;\\n        for(int j=0;j<nums.size();j++){\\n            // if(nums[i]==nums[j]){\\n            //     j++;\\n            // }\\n         if(nums[i]!=nums[j]){\\n                i++;\\n                nums[i]=nums[j];\\n            }\\n        }\\n        return (i+1);\\n    }"
                    },
                    {
                        "username": "vhimans7",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        nums=list(set(nums))\\n        print(nums[0:])\\n\\n???????????????????????"
                    },
                    {
                        "username": "Rthandi",
                        "content": "Is there anyway you could solve this with a HashMap?"
                    },
                    {
                        "username": "SamuelHanneson",
                        "content": "This was the solution I came up with myself, However it passed every test case but the last one (The super long one that goes from -100 to 100 (not pasting here because its too damn long) and this script timed out, is there a way I could make this fast enough so that it wouldn\\'t time out? I\\'ve found another solution but I like this one and I want to know if its salvageable or if it just wont work for exceedingly long lists\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        for num in nums:\\n            if nums.count(num) is 1:\\n                pass\\n            if nums.count(num) > 1:\\n                while nums.count(num) > 1:\\n                    nums.remove(num)\\n\\n\\n        "
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || 100% runtime || 100% space || Easy to understand.\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2986997/simple-java-100-runtime-100-space-easy-to-understand/"
                    },
                    {
                        "username": "Elias-Kibret",
                        "content": " `your inline code...your inline code...`\\nconst nums=[0,0,1,1,1,2,2,3,3,4]\\nvar removeDuplicates = function(nums) {\\n    return [...new Set(nums)]\\n};\\nconsole.log(removeDuplicates(nums))\\n\\n// [0, 1, 2, 3, 4]\\n\\n// But it doesn\\'t work"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array, it checks the input not what you return."
                    }
                ]
            },
            {
                "id": 1746279,
                "content": [
                    {
                        "username": "lazy_n",
                        "content": "why can\\'t we use js sets for this problem \\n"
                    },
                    {
                        "username": "chrisramo1",
                        "content": "I thought this would work?  Python ->\\n\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        a = set()\\n        for x in nums:\\n            a.add(int(x))\\n        return list(a)"
                    },
                    {
                        "username": "YogiKnight",
                        "content": "I have the correct result, stored into the nums array, but when I send the len(nums) it says that numbers I sent are incorrect. Anyone know why this might be the case? Typed below is my code, I know that it is inefficient. When running it with those print statements it shows the correct results. (It would not let me post this in the solution section so I am sorry about that. )\\n\\ndef removeDuplicates(self, nums: List[int]) -> int:\\n        for index in range(len(nums)):\\n            if (index < len(nums)):\\n                temp = nums[index]\\n                print(\\'-------\\')\\n                print(\\'Before:\\',nums)\\n                nums = list(filter(lambda char: char != temp, nums))\\n                nums.insert(index, temp)\\n                print(\\'After:\\',nums)\\n        print(\\'-------\\')\\n        print(\\'Result:\\',nums)\\n        return len(nums)"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You need to mutate the original array, test cases are using it to check your code. As far as I can see you are reassigning the nums so you are losing the reference, I think this is what causes the problem."
                    },
                    {
                        "username": "bowenclssp",
                        "content": "Hey, does anyone know why the outcome on my vscode differs from the one I receive in the code editor on Leetcode? For instance, on the test case  `nums = [1,1,2]`, my output on vscode is nums[1,2], but on leetcode it returns [1]. Does anyone know why this happen and how I could resolve this? \nMy code is as follows\n ```\nnums = [1,1,1,1,1,1,2]\nnum = nums.copy()\n\ncurrent = num[0]\n\nfor numId in range(1, len(num)):\n    if num[numId] != current:\n        for _ in range(num.count(current) - 1):\n            nums.remove(current)\n        current = num[numId]\n\nreturn len(num) - len(nums)\n```"
                    },
                    {
                        "username": "Deepak_8811",
                        "content": "    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size()==0){\\n            return 0;\\n        }\\n        int i=0;\\n        for(int j=0;j<nums.size();j++){\\n            // if(nums[i]==nums[j]){\\n            //     j++;\\n            // }\\n         if(nums[i]!=nums[j]){\\n                i++;\\n                nums[i]=nums[j];\\n            }\\n        }\\n        return (i+1);\\n    }"
                    },
                    {
                        "username": "vhimans7",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        nums=list(set(nums))\\n        print(nums[0:])\\n\\n???????????????????????"
                    },
                    {
                        "username": "Rthandi",
                        "content": "Is there anyway you could solve this with a HashMap?"
                    },
                    {
                        "username": "SamuelHanneson",
                        "content": "This was the solution I came up with myself, However it passed every test case but the last one (The super long one that goes from -100 to 100 (not pasting here because its too damn long) and this script timed out, is there a way I could make this fast enough so that it wouldn\\'t time out? I\\'ve found another solution but I like this one and I want to know if its salvageable or if it just wont work for exceedingly long lists\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        for num in nums:\\n            if nums.count(num) is 1:\\n                pass\\n            if nums.count(num) > 1:\\n                while nums.count(num) > 1:\\n                    nums.remove(num)\\n\\n\\n        "
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || 100% runtime || 100% space || Easy to understand.\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2986997/simple-java-100-runtime-100-space-easy-to-understand/"
                    },
                    {
                        "username": "Elias-Kibret",
                        "content": " `your inline code...your inline code...`\\nconst nums=[0,0,1,1,1,2,2,3,3,4]\\nvar removeDuplicates = function(nums) {\\n    return [...new Set(nums)]\\n};\\nconsole.log(removeDuplicates(nums))\\n\\n// [0, 1, 2, 3, 4]\\n\\n// But it doesn\\'t work"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array, it checks the input not what you return."
                    }
                ]
            },
            {
                "id": 1745737,
                "content": [
                    {
                        "username": "lazy_n",
                        "content": "why can\\'t we use js sets for this problem \\n"
                    },
                    {
                        "username": "chrisramo1",
                        "content": "I thought this would work?  Python ->\\n\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        a = set()\\n        for x in nums:\\n            a.add(int(x))\\n        return list(a)"
                    },
                    {
                        "username": "YogiKnight",
                        "content": "I have the correct result, stored into the nums array, but when I send the len(nums) it says that numbers I sent are incorrect. Anyone know why this might be the case? Typed below is my code, I know that it is inefficient. When running it with those print statements it shows the correct results. (It would not let me post this in the solution section so I am sorry about that. )\\n\\ndef removeDuplicates(self, nums: List[int]) -> int:\\n        for index in range(len(nums)):\\n            if (index < len(nums)):\\n                temp = nums[index]\\n                print(\\'-------\\')\\n                print(\\'Before:\\',nums)\\n                nums = list(filter(lambda char: char != temp, nums))\\n                nums.insert(index, temp)\\n                print(\\'After:\\',nums)\\n        print(\\'-------\\')\\n        print(\\'Result:\\',nums)\\n        return len(nums)"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You need to mutate the original array, test cases are using it to check your code. As far as I can see you are reassigning the nums so you are losing the reference, I think this is what causes the problem."
                    },
                    {
                        "username": "bowenclssp",
                        "content": "Hey, does anyone know why the outcome on my vscode differs from the one I receive in the code editor on Leetcode? For instance, on the test case  `nums = [1,1,2]`, my output on vscode is nums[1,2], but on leetcode it returns [1]. Does anyone know why this happen and how I could resolve this? \nMy code is as follows\n ```\nnums = [1,1,1,1,1,1,2]\nnum = nums.copy()\n\ncurrent = num[0]\n\nfor numId in range(1, len(num)):\n    if num[numId] != current:\n        for _ in range(num.count(current) - 1):\n            nums.remove(current)\n        current = num[numId]\n\nreturn len(num) - len(nums)\n```"
                    },
                    {
                        "username": "Deepak_8811",
                        "content": "    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size()==0){\\n            return 0;\\n        }\\n        int i=0;\\n        for(int j=0;j<nums.size();j++){\\n            // if(nums[i]==nums[j]){\\n            //     j++;\\n            // }\\n         if(nums[i]!=nums[j]){\\n                i++;\\n                nums[i]=nums[j];\\n            }\\n        }\\n        return (i+1);\\n    }"
                    },
                    {
                        "username": "vhimans7",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        nums=list(set(nums))\\n        print(nums[0:])\\n\\n???????????????????????"
                    },
                    {
                        "username": "Rthandi",
                        "content": "Is there anyway you could solve this with a HashMap?"
                    },
                    {
                        "username": "SamuelHanneson",
                        "content": "This was the solution I came up with myself, However it passed every test case but the last one (The super long one that goes from -100 to 100 (not pasting here because its too damn long) and this script timed out, is there a way I could make this fast enough so that it wouldn\\'t time out? I\\'ve found another solution but I like this one and I want to know if its salvageable or if it just wont work for exceedingly long lists\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        for num in nums:\\n            if nums.count(num) is 1:\\n                pass\\n            if nums.count(num) > 1:\\n                while nums.count(num) > 1:\\n                    nums.remove(num)\\n\\n\\n        "
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || 100% runtime || 100% space || Easy to understand.\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2986997/simple-java-100-runtime-100-space-easy-to-understand/"
                    },
                    {
                        "username": "Elias-Kibret",
                        "content": " `your inline code...your inline code...`\\nconst nums=[0,0,1,1,1,2,2,3,3,4]\\nvar removeDuplicates = function(nums) {\\n    return [...new Set(nums)]\\n};\\nconsole.log(removeDuplicates(nums))\\n\\n// [0, 1, 2, 3, 4]\\n\\n// But it doesn\\'t work"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array, it checks the input not what you return."
                    }
                ]
            },
            {
                "id": 1744071,
                "content": [
                    {
                        "username": "lazy_n",
                        "content": "why can\\'t we use js sets for this problem \\n"
                    },
                    {
                        "username": "chrisramo1",
                        "content": "I thought this would work?  Python ->\\n\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        a = set()\\n        for x in nums:\\n            a.add(int(x))\\n        return list(a)"
                    },
                    {
                        "username": "YogiKnight",
                        "content": "I have the correct result, stored into the nums array, but when I send the len(nums) it says that numbers I sent are incorrect. Anyone know why this might be the case? Typed below is my code, I know that it is inefficient. When running it with those print statements it shows the correct results. (It would not let me post this in the solution section so I am sorry about that. )\\n\\ndef removeDuplicates(self, nums: List[int]) -> int:\\n        for index in range(len(nums)):\\n            if (index < len(nums)):\\n                temp = nums[index]\\n                print(\\'-------\\')\\n                print(\\'Before:\\',nums)\\n                nums = list(filter(lambda char: char != temp, nums))\\n                nums.insert(index, temp)\\n                print(\\'After:\\',nums)\\n        print(\\'-------\\')\\n        print(\\'Result:\\',nums)\\n        return len(nums)"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You need to mutate the original array, test cases are using it to check your code. As far as I can see you are reassigning the nums so you are losing the reference, I think this is what causes the problem."
                    },
                    {
                        "username": "bowenclssp",
                        "content": "Hey, does anyone know why the outcome on my vscode differs from the one I receive in the code editor on Leetcode? For instance, on the test case  `nums = [1,1,2]`, my output on vscode is nums[1,2], but on leetcode it returns [1]. Does anyone know why this happen and how I could resolve this? \nMy code is as follows\n ```\nnums = [1,1,1,1,1,1,2]\nnum = nums.copy()\n\ncurrent = num[0]\n\nfor numId in range(1, len(num)):\n    if num[numId] != current:\n        for _ in range(num.count(current) - 1):\n            nums.remove(current)\n        current = num[numId]\n\nreturn len(num) - len(nums)\n```"
                    },
                    {
                        "username": "Deepak_8811",
                        "content": "    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size()==0){\\n            return 0;\\n        }\\n        int i=0;\\n        for(int j=0;j<nums.size();j++){\\n            // if(nums[i]==nums[j]){\\n            //     j++;\\n            // }\\n         if(nums[i]!=nums[j]){\\n                i++;\\n                nums[i]=nums[j];\\n            }\\n        }\\n        return (i+1);\\n    }"
                    },
                    {
                        "username": "vhimans7",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        nums=list(set(nums))\\n        print(nums[0:])\\n\\n???????????????????????"
                    },
                    {
                        "username": "Rthandi",
                        "content": "Is there anyway you could solve this with a HashMap?"
                    },
                    {
                        "username": "SamuelHanneson",
                        "content": "This was the solution I came up with myself, However it passed every test case but the last one (The super long one that goes from -100 to 100 (not pasting here because its too damn long) and this script timed out, is there a way I could make this fast enough so that it wouldn\\'t time out? I\\'ve found another solution but I like this one and I want to know if its salvageable or if it just wont work for exceedingly long lists\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        for num in nums:\\n            if nums.count(num) is 1:\\n                pass\\n            if nums.count(num) > 1:\\n                while nums.count(num) > 1:\\n                    nums.remove(num)\\n\\n\\n        "
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || 100% runtime || 100% space || Easy to understand.\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2986997/simple-java-100-runtime-100-space-easy-to-understand/"
                    },
                    {
                        "username": "Elias-Kibret",
                        "content": " `your inline code...your inline code...`\\nconst nums=[0,0,1,1,1,2,2,3,3,4]\\nvar removeDuplicates = function(nums) {\\n    return [...new Set(nums)]\\n};\\nconsole.log(removeDuplicates(nums))\\n\\n// [0, 1, 2, 3, 4]\\n\\n// But it doesn\\'t work"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array, it checks the input not what you return."
                    }
                ]
            },
            {
                "id": 1738394,
                "content": [
                    {
                        "username": "lazy_n",
                        "content": "why can\\'t we use js sets for this problem \\n"
                    },
                    {
                        "username": "chrisramo1",
                        "content": "I thought this would work?  Python ->\\n\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        a = set()\\n        for x in nums:\\n            a.add(int(x))\\n        return list(a)"
                    },
                    {
                        "username": "YogiKnight",
                        "content": "I have the correct result, stored into the nums array, but when I send the len(nums) it says that numbers I sent are incorrect. Anyone know why this might be the case? Typed below is my code, I know that it is inefficient. When running it with those print statements it shows the correct results. (It would not let me post this in the solution section so I am sorry about that. )\\n\\ndef removeDuplicates(self, nums: List[int]) -> int:\\n        for index in range(len(nums)):\\n            if (index < len(nums)):\\n                temp = nums[index]\\n                print(\\'-------\\')\\n                print(\\'Before:\\',nums)\\n                nums = list(filter(lambda char: char != temp, nums))\\n                nums.insert(index, temp)\\n                print(\\'After:\\',nums)\\n        print(\\'-------\\')\\n        print(\\'Result:\\',nums)\\n        return len(nums)"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You need to mutate the original array, test cases are using it to check your code. As far as I can see you are reassigning the nums so you are losing the reference, I think this is what causes the problem."
                    },
                    {
                        "username": "bowenclssp",
                        "content": "Hey, does anyone know why the outcome on my vscode differs from the one I receive in the code editor on Leetcode? For instance, on the test case  `nums = [1,1,2]`, my output on vscode is nums[1,2], but on leetcode it returns [1]. Does anyone know why this happen and how I could resolve this? \nMy code is as follows\n ```\nnums = [1,1,1,1,1,1,2]\nnum = nums.copy()\n\ncurrent = num[0]\n\nfor numId in range(1, len(num)):\n    if num[numId] != current:\n        for _ in range(num.count(current) - 1):\n            nums.remove(current)\n        current = num[numId]\n\nreturn len(num) - len(nums)\n```"
                    },
                    {
                        "username": "Deepak_8811",
                        "content": "    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size()==0){\\n            return 0;\\n        }\\n        int i=0;\\n        for(int j=0;j<nums.size();j++){\\n            // if(nums[i]==nums[j]){\\n            //     j++;\\n            // }\\n         if(nums[i]!=nums[j]){\\n                i++;\\n                nums[i]=nums[j];\\n            }\\n        }\\n        return (i+1);\\n    }"
                    },
                    {
                        "username": "vhimans7",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        nums=list(set(nums))\\n        print(nums[0:])\\n\\n???????????????????????"
                    },
                    {
                        "username": "Rthandi",
                        "content": "Is there anyway you could solve this with a HashMap?"
                    },
                    {
                        "username": "SamuelHanneson",
                        "content": "This was the solution I came up with myself, However it passed every test case but the last one (The super long one that goes from -100 to 100 (not pasting here because its too damn long) and this script timed out, is there a way I could make this fast enough so that it wouldn\\'t time out? I\\'ve found another solution but I like this one and I want to know if its salvageable or if it just wont work for exceedingly long lists\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        for num in nums:\\n            if nums.count(num) is 1:\\n                pass\\n            if nums.count(num) > 1:\\n                while nums.count(num) > 1:\\n                    nums.remove(num)\\n\\n\\n        "
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || 100% runtime || 100% space || Easy to understand.\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2986997/simple-java-100-runtime-100-space-easy-to-understand/"
                    },
                    {
                        "username": "Elias-Kibret",
                        "content": " `your inline code...your inline code...`\\nconst nums=[0,0,1,1,1,2,2,3,3,4]\\nvar removeDuplicates = function(nums) {\\n    return [...new Set(nums)]\\n};\\nconsole.log(removeDuplicates(nums))\\n\\n// [0, 1, 2, 3, 4]\\n\\n// But it doesn\\'t work"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array, it checks the input not what you return."
                    }
                ]
            },
            {
                "id": 1737089,
                "content": [
                    {
                        "username": "lazy_n",
                        "content": "why can\\'t we use js sets for this problem \\n"
                    },
                    {
                        "username": "chrisramo1",
                        "content": "I thought this would work?  Python ->\\n\\nclass Solution(object):\\n    def removeDuplicates(self, nums):\\n        a = set()\\n        for x in nums:\\n            a.add(int(x))\\n        return list(a)"
                    },
                    {
                        "username": "YogiKnight",
                        "content": "I have the correct result, stored into the nums array, but when I send the len(nums) it says that numbers I sent are incorrect. Anyone know why this might be the case? Typed below is my code, I know that it is inefficient. When running it with those print statements it shows the correct results. (It would not let me post this in the solution section so I am sorry about that. )\\n\\ndef removeDuplicates(self, nums: List[int]) -> int:\\n        for index in range(len(nums)):\\n            if (index < len(nums)):\\n                temp = nums[index]\\n                print(\\'-------\\')\\n                print(\\'Before:\\',nums)\\n                nums = list(filter(lambda char: char != temp, nums))\\n                nums.insert(index, temp)\\n                print(\\'After:\\',nums)\\n        print(\\'-------\\')\\n        print(\\'Result:\\',nums)\\n        return len(nums)"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You need to mutate the original array, test cases are using it to check your code. As far as I can see you are reassigning the nums so you are losing the reference, I think this is what causes the problem."
                    },
                    {
                        "username": "bowenclssp",
                        "content": "Hey, does anyone know why the outcome on my vscode differs from the one I receive in the code editor on Leetcode? For instance, on the test case  `nums = [1,1,2]`, my output on vscode is nums[1,2], but on leetcode it returns [1]. Does anyone know why this happen and how I could resolve this? \nMy code is as follows\n ```\nnums = [1,1,1,1,1,1,2]\nnum = nums.copy()\n\ncurrent = num[0]\n\nfor numId in range(1, len(num)):\n    if num[numId] != current:\n        for _ in range(num.count(current) - 1):\n            nums.remove(current)\n        current = num[numId]\n\nreturn len(num) - len(nums)\n```"
                    },
                    {
                        "username": "Deepak_8811",
                        "content": "    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size()==0){\\n            return 0;\\n        }\\n        int i=0;\\n        for(int j=0;j<nums.size();j++){\\n            // if(nums[i]==nums[j]){\\n            //     j++;\\n            // }\\n         if(nums[i]!=nums[j]){\\n                i++;\\n                nums[i]=nums[j];\\n            }\\n        }\\n        return (i+1);\\n    }"
                    },
                    {
                        "username": "vhimans7",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        nums=list(set(nums))\\n        print(nums[0:])\\n\\n???????????????????????"
                    },
                    {
                        "username": "Rthandi",
                        "content": "Is there anyway you could solve this with a HashMap?"
                    },
                    {
                        "username": "SamuelHanneson",
                        "content": "This was the solution I came up with myself, However it passed every test case but the last one (The super long one that goes from -100 to 100 (not pasting here because its too damn long) and this script timed out, is there a way I could make this fast enough so that it wouldn\\'t time out? I\\'ve found another solution but I like this one and I want to know if its salvageable or if it just wont work for exceedingly long lists\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        for num in nums:\\n            if nums.count(num) is 1:\\n                pass\\n            if nums.count(num) > 1:\\n                while nums.count(num) > 1:\\n                    nums.remove(num)\\n\\n\\n        "
                    },
                    {
                        "username": "Pratik-Shrivastava",
                        "content": "\\u2705Simple || Java || 100% runtime || 100% space || Easy to understand.\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2986997/simple-java-100-runtime-100-space-easy-to-understand/"
                    },
                    {
                        "username": "Elias-Kibret",
                        "content": " `your inline code...your inline code...`\\nconst nums=[0,0,1,1,1,2,2,3,3,4]\\nvar removeDuplicates = function(nums) {\\n    return [...new Set(nums)]\\n};\\nconsole.log(removeDuplicates(nums))\\n\\n// [0, 1, 2, 3, 4]\\n\\n// But it doesn\\'t work"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array, it checks the input not what you return."
                    }
                ]
            },
            {
                "id": 1736847,
                "content": [
                    {
                        "username": "Vidit_lakhera",
                        "content": "var removeDuplicates = function(nums) {\\n    let result = [];\\n    for(let i=0;i<nums.length;i++){\\n        if(nums[i] != nums[i+1]){\\n              result.push(nums[i])\\n        }\\n    }\\n    return result\\n};\\nlet array = [1,1,2]\\nremoveDuplicates(array)  // working on terminal but shows error here pls help to find error"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array, it checks the input not what you return."
                    },
                    {
                        "username": "tneske93",
                        "content": "lmao if this is easdy, im gonna quit my computer science studies."
                    },
                    {
                        "username": "harshtyagi0",
                        "content": "Can anyone tell what is wrong in this code.\\nimport java.util.Set;\\nimport java.util.TreeSet;\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        Set<Integer> set = new TreeSet<>();\\n\\t\\tfor(int i =0; i<nums.length; i++) {\\n\\t\\t\\tset.add(nums[i]);\\n\\t\\t}\\n\\t\\treturn set.size();\\n        \\n    }\\n}"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "This code does not mutate the original array. The idea of this task is mutate the original array in the way that it does not have duplicates on the first K positions, and this K is the number that you have to return."
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "The C# problem is asking for me to return an integer. Then it is rejecting this asking for an integer array. I\\'m pretty confident this question has an issue..."
                    },
                    {
                        "username": "charant587",
                        "content": "in this solution i can only remove 2 duplicate items not more than that can anyone tell me solution\\n\\ndef removeDuplicates(self, nums):\\n        k=0\\n        if nums is None:\\n            return k\\n        for i in range (0 , len(nums)-1):\\n            \\n            for s in range (i+1,len(nums)-1):\\n               if nums[i]== nums[s]:\\n                   nums.remove(nums[i])\\n            k=k+1\\n        return k\\n"
                    },
                    {
                        "username": "rajeevkumarsingh5252",
                        "content": "`int removeDuplicates(vector<int>& nums) {`\\n        `map<int,int>mpp;`\\n    `for(int i=0;i<nums.size();i++){`\\n       ` mpp[nums[i]]++;`\\n    `}`\\n    `nums.clear();`\\n   `for(auto it:mpp){`\\n    `//cout<<it.first<<\"           \"<<it.second<<endl;`\\n    `nums.push_back(it.first);`\\n   `} `\\n    `    return nums.size();`\\n    `}`"
                    },
                    {
                        "username": "pratik063",
                        "content": "Haven't gotten into complexities yet but here's the code i wrote in python\n\nnums=sorted(list(set(nums))) \nreturn len(nums) \n\nim getting the output as [1,1] in the first testcase and [0,0,1,1,1] in the second one(obv wrong) \n\nim supposed to get the output as the length of the new array instead im getting these wrong outputs,even though there isnt supposed to be any problem even in the new array itself(verified it in an online compiler) \n\nwhat am i doing wrong?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You have to mutate the original array that was provided. The idea of this task is not only to return the correct number but also correctly change the input array."
                    },
                    {
                        "username": "paramagnetic3004",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        res=list(dict.fromkeys(nums))\\n        return len(res)\\n\\nwhats wrong in this solution"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Wajih_Ul_Hasan_0104",
                        "content": "My code works perfectly in my editor but unable to pass your test case:\\nHere is my code if found any errors correct it otherwise \"Leetcode\" should update their testcase.\\n\\n def removeDuplicates(self, nums):\\n        Unique = set()\\n        Len = len(nums)\\n        \\n        for duplicate in range(Len):\\n            Unique.add(nums[duplicate])\\n            \\n        Unq = list(Unique)\\n        return len(Unq)"
                    },
                    {
                        "username": "Wajih_Ul_Hasan_0104",
                        "content": "[@KovDimaY](/KovDimaY) Got! the point Thanks:)"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Demaineen",
                        "content": "I got an error in the js/ts checker when I returned [1, 2, 2] from the [1, 1, 2] array. But the answer seems correct. What to do?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You do not have to return array, your return has to be a number, but when executing your code you have to modify the array that was provided as the input. I hope that helps \\uD83D\\uDE0A"
                    }
                ]
            },
            {
                "id": 1735389,
                "content": [
                    {
                        "username": "Vidit_lakhera",
                        "content": "var removeDuplicates = function(nums) {\\n    let result = [];\\n    for(let i=0;i<nums.length;i++){\\n        if(nums[i] != nums[i+1]){\\n              result.push(nums[i])\\n        }\\n    }\\n    return result\\n};\\nlet array = [1,1,2]\\nremoveDuplicates(array)  // working on terminal but shows error here pls help to find error"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array, it checks the input not what you return."
                    },
                    {
                        "username": "tneske93",
                        "content": "lmao if this is easdy, im gonna quit my computer science studies."
                    },
                    {
                        "username": "harshtyagi0",
                        "content": "Can anyone tell what is wrong in this code.\\nimport java.util.Set;\\nimport java.util.TreeSet;\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        Set<Integer> set = new TreeSet<>();\\n\\t\\tfor(int i =0; i<nums.length; i++) {\\n\\t\\t\\tset.add(nums[i]);\\n\\t\\t}\\n\\t\\treturn set.size();\\n        \\n    }\\n}"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "This code does not mutate the original array. The idea of this task is mutate the original array in the way that it does not have duplicates on the first K positions, and this K is the number that you have to return."
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "The C# problem is asking for me to return an integer. Then it is rejecting this asking for an integer array. I\\'m pretty confident this question has an issue..."
                    },
                    {
                        "username": "charant587",
                        "content": "in this solution i can only remove 2 duplicate items not more than that can anyone tell me solution\\n\\ndef removeDuplicates(self, nums):\\n        k=0\\n        if nums is None:\\n            return k\\n        for i in range (0 , len(nums)-1):\\n            \\n            for s in range (i+1,len(nums)-1):\\n               if nums[i]== nums[s]:\\n                   nums.remove(nums[i])\\n            k=k+1\\n        return k\\n"
                    },
                    {
                        "username": "rajeevkumarsingh5252",
                        "content": "`int removeDuplicates(vector<int>& nums) {`\\n        `map<int,int>mpp;`\\n    `for(int i=0;i<nums.size();i++){`\\n       ` mpp[nums[i]]++;`\\n    `}`\\n    `nums.clear();`\\n   `for(auto it:mpp){`\\n    `//cout<<it.first<<\"           \"<<it.second<<endl;`\\n    `nums.push_back(it.first);`\\n   `} `\\n    `    return nums.size();`\\n    `}`"
                    },
                    {
                        "username": "pratik063",
                        "content": "Haven't gotten into complexities yet but here's the code i wrote in python\n\nnums=sorted(list(set(nums))) \nreturn len(nums) \n\nim getting the output as [1,1] in the first testcase and [0,0,1,1,1] in the second one(obv wrong) \n\nim supposed to get the output as the length of the new array instead im getting these wrong outputs,even though there isnt supposed to be any problem even in the new array itself(verified it in an online compiler) \n\nwhat am i doing wrong?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You have to mutate the original array that was provided. The idea of this task is not only to return the correct number but also correctly change the input array."
                    },
                    {
                        "username": "paramagnetic3004",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        res=list(dict.fromkeys(nums))\\n        return len(res)\\n\\nwhats wrong in this solution"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Wajih_Ul_Hasan_0104",
                        "content": "My code works perfectly in my editor but unable to pass your test case:\\nHere is my code if found any errors correct it otherwise \"Leetcode\" should update their testcase.\\n\\n def removeDuplicates(self, nums):\\n        Unique = set()\\n        Len = len(nums)\\n        \\n        for duplicate in range(Len):\\n            Unique.add(nums[duplicate])\\n            \\n        Unq = list(Unique)\\n        return len(Unq)"
                    },
                    {
                        "username": "Wajih_Ul_Hasan_0104",
                        "content": "[@KovDimaY](/KovDimaY) Got! the point Thanks:)"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Demaineen",
                        "content": "I got an error in the js/ts checker when I returned [1, 2, 2] from the [1, 1, 2] array. But the answer seems correct. What to do?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You do not have to return array, your return has to be a number, but when executing your code you have to modify the array that was provided as the input. I hope that helps \\uD83D\\uDE0A"
                    }
                ]
            },
            {
                "id": 1734467,
                "content": [
                    {
                        "username": "Vidit_lakhera",
                        "content": "var removeDuplicates = function(nums) {\\n    let result = [];\\n    for(let i=0;i<nums.length;i++){\\n        if(nums[i] != nums[i+1]){\\n              result.push(nums[i])\\n        }\\n    }\\n    return result\\n};\\nlet array = [1,1,2]\\nremoveDuplicates(array)  // working on terminal but shows error here pls help to find error"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array, it checks the input not what you return."
                    },
                    {
                        "username": "tneske93",
                        "content": "lmao if this is easdy, im gonna quit my computer science studies."
                    },
                    {
                        "username": "harshtyagi0",
                        "content": "Can anyone tell what is wrong in this code.\\nimport java.util.Set;\\nimport java.util.TreeSet;\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        Set<Integer> set = new TreeSet<>();\\n\\t\\tfor(int i =0; i<nums.length; i++) {\\n\\t\\t\\tset.add(nums[i]);\\n\\t\\t}\\n\\t\\treturn set.size();\\n        \\n    }\\n}"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "This code does not mutate the original array. The idea of this task is mutate the original array in the way that it does not have duplicates on the first K positions, and this K is the number that you have to return."
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "The C# problem is asking for me to return an integer. Then it is rejecting this asking for an integer array. I\\'m pretty confident this question has an issue..."
                    },
                    {
                        "username": "charant587",
                        "content": "in this solution i can only remove 2 duplicate items not more than that can anyone tell me solution\\n\\ndef removeDuplicates(self, nums):\\n        k=0\\n        if nums is None:\\n            return k\\n        for i in range (0 , len(nums)-1):\\n            \\n            for s in range (i+1,len(nums)-1):\\n               if nums[i]== nums[s]:\\n                   nums.remove(nums[i])\\n            k=k+1\\n        return k\\n"
                    },
                    {
                        "username": "rajeevkumarsingh5252",
                        "content": "`int removeDuplicates(vector<int>& nums) {`\\n        `map<int,int>mpp;`\\n    `for(int i=0;i<nums.size();i++){`\\n       ` mpp[nums[i]]++;`\\n    `}`\\n    `nums.clear();`\\n   `for(auto it:mpp){`\\n    `//cout<<it.first<<\"           \"<<it.second<<endl;`\\n    `nums.push_back(it.first);`\\n   `} `\\n    `    return nums.size();`\\n    `}`"
                    },
                    {
                        "username": "pratik063",
                        "content": "Haven't gotten into complexities yet but here's the code i wrote in python\n\nnums=sorted(list(set(nums))) \nreturn len(nums) \n\nim getting the output as [1,1] in the first testcase and [0,0,1,1,1] in the second one(obv wrong) \n\nim supposed to get the output as the length of the new array instead im getting these wrong outputs,even though there isnt supposed to be any problem even in the new array itself(verified it in an online compiler) \n\nwhat am i doing wrong?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You have to mutate the original array that was provided. The idea of this task is not only to return the correct number but also correctly change the input array."
                    },
                    {
                        "username": "paramagnetic3004",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        res=list(dict.fromkeys(nums))\\n        return len(res)\\n\\nwhats wrong in this solution"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Wajih_Ul_Hasan_0104",
                        "content": "My code works perfectly in my editor but unable to pass your test case:\\nHere is my code if found any errors correct it otherwise \"Leetcode\" should update their testcase.\\n\\n def removeDuplicates(self, nums):\\n        Unique = set()\\n        Len = len(nums)\\n        \\n        for duplicate in range(Len):\\n            Unique.add(nums[duplicate])\\n            \\n        Unq = list(Unique)\\n        return len(Unq)"
                    },
                    {
                        "username": "Wajih_Ul_Hasan_0104",
                        "content": "[@KovDimaY](/KovDimaY) Got! the point Thanks:)"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Demaineen",
                        "content": "I got an error in the js/ts checker when I returned [1, 2, 2] from the [1, 1, 2] array. But the answer seems correct. What to do?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You do not have to return array, your return has to be a number, but when executing your code you have to modify the array that was provided as the input. I hope that helps \\uD83D\\uDE0A"
                    }
                ]
            },
            {
                "id": 1734294,
                "content": [
                    {
                        "username": "Vidit_lakhera",
                        "content": "var removeDuplicates = function(nums) {\\n    let result = [];\\n    for(let i=0;i<nums.length;i++){\\n        if(nums[i] != nums[i+1]){\\n              result.push(nums[i])\\n        }\\n    }\\n    return result\\n};\\nlet array = [1,1,2]\\nremoveDuplicates(array)  // working on terminal but shows error here pls help to find error"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array, it checks the input not what you return."
                    },
                    {
                        "username": "tneske93",
                        "content": "lmao if this is easdy, im gonna quit my computer science studies."
                    },
                    {
                        "username": "harshtyagi0",
                        "content": "Can anyone tell what is wrong in this code.\\nimport java.util.Set;\\nimport java.util.TreeSet;\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        Set<Integer> set = new TreeSet<>();\\n\\t\\tfor(int i =0; i<nums.length; i++) {\\n\\t\\t\\tset.add(nums[i]);\\n\\t\\t}\\n\\t\\treturn set.size();\\n        \\n    }\\n}"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "This code does not mutate the original array. The idea of this task is mutate the original array in the way that it does not have duplicates on the first K positions, and this K is the number that you have to return."
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "The C# problem is asking for me to return an integer. Then it is rejecting this asking for an integer array. I\\'m pretty confident this question has an issue..."
                    },
                    {
                        "username": "charant587",
                        "content": "in this solution i can only remove 2 duplicate items not more than that can anyone tell me solution\\n\\ndef removeDuplicates(self, nums):\\n        k=0\\n        if nums is None:\\n            return k\\n        for i in range (0 , len(nums)-1):\\n            \\n            for s in range (i+1,len(nums)-1):\\n               if nums[i]== nums[s]:\\n                   nums.remove(nums[i])\\n            k=k+1\\n        return k\\n"
                    },
                    {
                        "username": "rajeevkumarsingh5252",
                        "content": "`int removeDuplicates(vector<int>& nums) {`\\n        `map<int,int>mpp;`\\n    `for(int i=0;i<nums.size();i++){`\\n       ` mpp[nums[i]]++;`\\n    `}`\\n    `nums.clear();`\\n   `for(auto it:mpp){`\\n    `//cout<<it.first<<\"           \"<<it.second<<endl;`\\n    `nums.push_back(it.first);`\\n   `} `\\n    `    return nums.size();`\\n    `}`"
                    },
                    {
                        "username": "pratik063",
                        "content": "Haven't gotten into complexities yet but here's the code i wrote in python\n\nnums=sorted(list(set(nums))) \nreturn len(nums) \n\nim getting the output as [1,1] in the first testcase and [0,0,1,1,1] in the second one(obv wrong) \n\nim supposed to get the output as the length of the new array instead im getting these wrong outputs,even though there isnt supposed to be any problem even in the new array itself(verified it in an online compiler) \n\nwhat am i doing wrong?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You have to mutate the original array that was provided. The idea of this task is not only to return the correct number but also correctly change the input array."
                    },
                    {
                        "username": "paramagnetic3004",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        res=list(dict.fromkeys(nums))\\n        return len(res)\\n\\nwhats wrong in this solution"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Wajih_Ul_Hasan_0104",
                        "content": "My code works perfectly in my editor but unable to pass your test case:\\nHere is my code if found any errors correct it otherwise \"Leetcode\" should update their testcase.\\n\\n def removeDuplicates(self, nums):\\n        Unique = set()\\n        Len = len(nums)\\n        \\n        for duplicate in range(Len):\\n            Unique.add(nums[duplicate])\\n            \\n        Unq = list(Unique)\\n        return len(Unq)"
                    },
                    {
                        "username": "Wajih_Ul_Hasan_0104",
                        "content": "[@KovDimaY](/KovDimaY) Got! the point Thanks:)"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Demaineen",
                        "content": "I got an error in the js/ts checker when I returned [1, 2, 2] from the [1, 1, 2] array. But the answer seems correct. What to do?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You do not have to return array, your return has to be a number, but when executing your code you have to modify the array that was provided as the input. I hope that helps \\uD83D\\uDE0A"
                    }
                ]
            },
            {
                "id": 1734275,
                "content": [
                    {
                        "username": "Vidit_lakhera",
                        "content": "var removeDuplicates = function(nums) {\\n    let result = [];\\n    for(let i=0;i<nums.length;i++){\\n        if(nums[i] != nums[i+1]){\\n              result.push(nums[i])\\n        }\\n    }\\n    return result\\n};\\nlet array = [1,1,2]\\nremoveDuplicates(array)  // working on terminal but shows error here pls help to find error"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array, it checks the input not what you return."
                    },
                    {
                        "username": "tneske93",
                        "content": "lmao if this is easdy, im gonna quit my computer science studies."
                    },
                    {
                        "username": "harshtyagi0",
                        "content": "Can anyone tell what is wrong in this code.\\nimport java.util.Set;\\nimport java.util.TreeSet;\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        Set<Integer> set = new TreeSet<>();\\n\\t\\tfor(int i =0; i<nums.length; i++) {\\n\\t\\t\\tset.add(nums[i]);\\n\\t\\t}\\n\\t\\treturn set.size();\\n        \\n    }\\n}"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "This code does not mutate the original array. The idea of this task is mutate the original array in the way that it does not have duplicates on the first K positions, and this K is the number that you have to return."
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "The C# problem is asking for me to return an integer. Then it is rejecting this asking for an integer array. I\\'m pretty confident this question has an issue..."
                    },
                    {
                        "username": "charant587",
                        "content": "in this solution i can only remove 2 duplicate items not more than that can anyone tell me solution\\n\\ndef removeDuplicates(self, nums):\\n        k=0\\n        if nums is None:\\n            return k\\n        for i in range (0 , len(nums)-1):\\n            \\n            for s in range (i+1,len(nums)-1):\\n               if nums[i]== nums[s]:\\n                   nums.remove(nums[i])\\n            k=k+1\\n        return k\\n"
                    },
                    {
                        "username": "rajeevkumarsingh5252",
                        "content": "`int removeDuplicates(vector<int>& nums) {`\\n        `map<int,int>mpp;`\\n    `for(int i=0;i<nums.size();i++){`\\n       ` mpp[nums[i]]++;`\\n    `}`\\n    `nums.clear();`\\n   `for(auto it:mpp){`\\n    `//cout<<it.first<<\"           \"<<it.second<<endl;`\\n    `nums.push_back(it.first);`\\n   `} `\\n    `    return nums.size();`\\n    `}`"
                    },
                    {
                        "username": "pratik063",
                        "content": "Haven't gotten into complexities yet but here's the code i wrote in python\n\nnums=sorted(list(set(nums))) \nreturn len(nums) \n\nim getting the output as [1,1] in the first testcase and [0,0,1,1,1] in the second one(obv wrong) \n\nim supposed to get the output as the length of the new array instead im getting these wrong outputs,even though there isnt supposed to be any problem even in the new array itself(verified it in an online compiler) \n\nwhat am i doing wrong?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You have to mutate the original array that was provided. The idea of this task is not only to return the correct number but also correctly change the input array."
                    },
                    {
                        "username": "paramagnetic3004",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        res=list(dict.fromkeys(nums))\\n        return len(res)\\n\\nwhats wrong in this solution"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Wajih_Ul_Hasan_0104",
                        "content": "My code works perfectly in my editor but unable to pass your test case:\\nHere is my code if found any errors correct it otherwise \"Leetcode\" should update their testcase.\\n\\n def removeDuplicates(self, nums):\\n        Unique = set()\\n        Len = len(nums)\\n        \\n        for duplicate in range(Len):\\n            Unique.add(nums[duplicate])\\n            \\n        Unq = list(Unique)\\n        return len(Unq)"
                    },
                    {
                        "username": "Wajih_Ul_Hasan_0104",
                        "content": "[@KovDimaY](/KovDimaY) Got! the point Thanks:)"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Demaineen",
                        "content": "I got an error in the js/ts checker when I returned [1, 2, 2] from the [1, 1, 2] array. But the answer seems correct. What to do?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You do not have to return array, your return has to be a number, but when executing your code you have to modify the array that was provided as the input. I hope that helps \\uD83D\\uDE0A"
                    }
                ]
            },
            {
                "id": 1732628,
                "content": [
                    {
                        "username": "Vidit_lakhera",
                        "content": "var removeDuplicates = function(nums) {\\n    let result = [];\\n    for(let i=0;i<nums.length;i++){\\n        if(nums[i] != nums[i+1]){\\n              result.push(nums[i])\\n        }\\n    }\\n    return result\\n};\\nlet array = [1,1,2]\\nremoveDuplicates(array)  // working on terminal but shows error here pls help to find error"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array, it checks the input not what you return."
                    },
                    {
                        "username": "tneske93",
                        "content": "lmao if this is easdy, im gonna quit my computer science studies."
                    },
                    {
                        "username": "harshtyagi0",
                        "content": "Can anyone tell what is wrong in this code.\\nimport java.util.Set;\\nimport java.util.TreeSet;\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        Set<Integer> set = new TreeSet<>();\\n\\t\\tfor(int i =0; i<nums.length; i++) {\\n\\t\\t\\tset.add(nums[i]);\\n\\t\\t}\\n\\t\\treturn set.size();\\n        \\n    }\\n}"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "This code does not mutate the original array. The idea of this task is mutate the original array in the way that it does not have duplicates on the first K positions, and this K is the number that you have to return."
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "The C# problem is asking for me to return an integer. Then it is rejecting this asking for an integer array. I\\'m pretty confident this question has an issue..."
                    },
                    {
                        "username": "charant587",
                        "content": "in this solution i can only remove 2 duplicate items not more than that can anyone tell me solution\\n\\ndef removeDuplicates(self, nums):\\n        k=0\\n        if nums is None:\\n            return k\\n        for i in range (0 , len(nums)-1):\\n            \\n            for s in range (i+1,len(nums)-1):\\n               if nums[i]== nums[s]:\\n                   nums.remove(nums[i])\\n            k=k+1\\n        return k\\n"
                    },
                    {
                        "username": "rajeevkumarsingh5252",
                        "content": "`int removeDuplicates(vector<int>& nums) {`\\n        `map<int,int>mpp;`\\n    `for(int i=0;i<nums.size();i++){`\\n       ` mpp[nums[i]]++;`\\n    `}`\\n    `nums.clear();`\\n   `for(auto it:mpp){`\\n    `//cout<<it.first<<\"           \"<<it.second<<endl;`\\n    `nums.push_back(it.first);`\\n   `} `\\n    `    return nums.size();`\\n    `}`"
                    },
                    {
                        "username": "pratik063",
                        "content": "Haven't gotten into complexities yet but here's the code i wrote in python\n\nnums=sorted(list(set(nums))) \nreturn len(nums) \n\nim getting the output as [1,1] in the first testcase and [0,0,1,1,1] in the second one(obv wrong) \n\nim supposed to get the output as the length of the new array instead im getting these wrong outputs,even though there isnt supposed to be any problem even in the new array itself(verified it in an online compiler) \n\nwhat am i doing wrong?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You have to mutate the original array that was provided. The idea of this task is not only to return the correct number but also correctly change the input array."
                    },
                    {
                        "username": "paramagnetic3004",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        res=list(dict.fromkeys(nums))\\n        return len(res)\\n\\nwhats wrong in this solution"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Wajih_Ul_Hasan_0104",
                        "content": "My code works perfectly in my editor but unable to pass your test case:\\nHere is my code if found any errors correct it otherwise \"Leetcode\" should update their testcase.\\n\\n def removeDuplicates(self, nums):\\n        Unique = set()\\n        Len = len(nums)\\n        \\n        for duplicate in range(Len):\\n            Unique.add(nums[duplicate])\\n            \\n        Unq = list(Unique)\\n        return len(Unq)"
                    },
                    {
                        "username": "Wajih_Ul_Hasan_0104",
                        "content": "[@KovDimaY](/KovDimaY) Got! the point Thanks:)"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Demaineen",
                        "content": "I got an error in the js/ts checker when I returned [1, 2, 2] from the [1, 1, 2] array. But the answer seems correct. What to do?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You do not have to return array, your return has to be a number, but when executing your code you have to modify the array that was provided as the input. I hope that helps \\uD83D\\uDE0A"
                    }
                ]
            },
            {
                "id": 1732578,
                "content": [
                    {
                        "username": "Vidit_lakhera",
                        "content": "var removeDuplicates = function(nums) {\\n    let result = [];\\n    for(let i=0;i<nums.length;i++){\\n        if(nums[i] != nums[i+1]){\\n              result.push(nums[i])\\n        }\\n    }\\n    return result\\n};\\nlet array = [1,1,2]\\nremoveDuplicates(array)  // working on terminal but shows error here pls help to find error"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array, it checks the input not what you return."
                    },
                    {
                        "username": "tneske93",
                        "content": "lmao if this is easdy, im gonna quit my computer science studies."
                    },
                    {
                        "username": "harshtyagi0",
                        "content": "Can anyone tell what is wrong in this code.\\nimport java.util.Set;\\nimport java.util.TreeSet;\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        Set<Integer> set = new TreeSet<>();\\n\\t\\tfor(int i =0; i<nums.length; i++) {\\n\\t\\t\\tset.add(nums[i]);\\n\\t\\t}\\n\\t\\treturn set.size();\\n        \\n    }\\n}"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "This code does not mutate the original array. The idea of this task is mutate the original array in the way that it does not have duplicates on the first K positions, and this K is the number that you have to return."
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "The C# problem is asking for me to return an integer. Then it is rejecting this asking for an integer array. I\\'m pretty confident this question has an issue..."
                    },
                    {
                        "username": "charant587",
                        "content": "in this solution i can only remove 2 duplicate items not more than that can anyone tell me solution\\n\\ndef removeDuplicates(self, nums):\\n        k=0\\n        if nums is None:\\n            return k\\n        for i in range (0 , len(nums)-1):\\n            \\n            for s in range (i+1,len(nums)-1):\\n               if nums[i]== nums[s]:\\n                   nums.remove(nums[i])\\n            k=k+1\\n        return k\\n"
                    },
                    {
                        "username": "rajeevkumarsingh5252",
                        "content": "`int removeDuplicates(vector<int>& nums) {`\\n        `map<int,int>mpp;`\\n    `for(int i=0;i<nums.size();i++){`\\n       ` mpp[nums[i]]++;`\\n    `}`\\n    `nums.clear();`\\n   `for(auto it:mpp){`\\n    `//cout<<it.first<<\"           \"<<it.second<<endl;`\\n    `nums.push_back(it.first);`\\n   `} `\\n    `    return nums.size();`\\n    `}`"
                    },
                    {
                        "username": "pratik063",
                        "content": "Haven't gotten into complexities yet but here's the code i wrote in python\n\nnums=sorted(list(set(nums))) \nreturn len(nums) \n\nim getting the output as [1,1] in the first testcase and [0,0,1,1,1] in the second one(obv wrong) \n\nim supposed to get the output as the length of the new array instead im getting these wrong outputs,even though there isnt supposed to be any problem even in the new array itself(verified it in an online compiler) \n\nwhat am i doing wrong?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You have to mutate the original array that was provided. The idea of this task is not only to return the correct number but also correctly change the input array."
                    },
                    {
                        "username": "paramagnetic3004",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        res=list(dict.fromkeys(nums))\\n        return len(res)\\n\\nwhats wrong in this solution"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Wajih_Ul_Hasan_0104",
                        "content": "My code works perfectly in my editor but unable to pass your test case:\\nHere is my code if found any errors correct it otherwise \"Leetcode\" should update their testcase.\\n\\n def removeDuplicates(self, nums):\\n        Unique = set()\\n        Len = len(nums)\\n        \\n        for duplicate in range(Len):\\n            Unique.add(nums[duplicate])\\n            \\n        Unq = list(Unique)\\n        return len(Unq)"
                    },
                    {
                        "username": "Wajih_Ul_Hasan_0104",
                        "content": "[@KovDimaY](/KovDimaY) Got! the point Thanks:)"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Demaineen",
                        "content": "I got an error in the js/ts checker when I returned [1, 2, 2] from the [1, 1, 2] array. But the answer seems correct. What to do?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You do not have to return array, your return has to be a number, but when executing your code you have to modify the array that was provided as the input. I hope that helps \\uD83D\\uDE0A"
                    }
                ]
            },
            {
                "id": 1732075,
                "content": [
                    {
                        "username": "Vidit_lakhera",
                        "content": "var removeDuplicates = function(nums) {\\n    let result = [];\\n    for(let i=0;i<nums.length;i++){\\n        if(nums[i] != nums[i+1]){\\n              result.push(nums[i])\\n        }\\n    }\\n    return result\\n};\\nlet array = [1,1,2]\\nremoveDuplicates(array)  // working on terminal but shows error here pls help to find error"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array, it checks the input not what you return."
                    },
                    {
                        "username": "tneske93",
                        "content": "lmao if this is easdy, im gonna quit my computer science studies."
                    },
                    {
                        "username": "harshtyagi0",
                        "content": "Can anyone tell what is wrong in this code.\\nimport java.util.Set;\\nimport java.util.TreeSet;\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        Set<Integer> set = new TreeSet<>();\\n\\t\\tfor(int i =0; i<nums.length; i++) {\\n\\t\\t\\tset.add(nums[i]);\\n\\t\\t}\\n\\t\\treturn set.size();\\n        \\n    }\\n}"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "This code does not mutate the original array. The idea of this task is mutate the original array in the way that it does not have duplicates on the first K positions, and this K is the number that you have to return."
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "The C# problem is asking for me to return an integer. Then it is rejecting this asking for an integer array. I\\'m pretty confident this question has an issue..."
                    },
                    {
                        "username": "charant587",
                        "content": "in this solution i can only remove 2 duplicate items not more than that can anyone tell me solution\\n\\ndef removeDuplicates(self, nums):\\n        k=0\\n        if nums is None:\\n            return k\\n        for i in range (0 , len(nums)-1):\\n            \\n            for s in range (i+1,len(nums)-1):\\n               if nums[i]== nums[s]:\\n                   nums.remove(nums[i])\\n            k=k+1\\n        return k\\n"
                    },
                    {
                        "username": "rajeevkumarsingh5252",
                        "content": "`int removeDuplicates(vector<int>& nums) {`\\n        `map<int,int>mpp;`\\n    `for(int i=0;i<nums.size();i++){`\\n       ` mpp[nums[i]]++;`\\n    `}`\\n    `nums.clear();`\\n   `for(auto it:mpp){`\\n    `//cout<<it.first<<\"           \"<<it.second<<endl;`\\n    `nums.push_back(it.first);`\\n   `} `\\n    `    return nums.size();`\\n    `}`"
                    },
                    {
                        "username": "pratik063",
                        "content": "Haven't gotten into complexities yet but here's the code i wrote in python\n\nnums=sorted(list(set(nums))) \nreturn len(nums) \n\nim getting the output as [1,1] in the first testcase and [0,0,1,1,1] in the second one(obv wrong) \n\nim supposed to get the output as the length of the new array instead im getting these wrong outputs,even though there isnt supposed to be any problem even in the new array itself(verified it in an online compiler) \n\nwhat am i doing wrong?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You have to mutate the original array that was provided. The idea of this task is not only to return the correct number but also correctly change the input array."
                    },
                    {
                        "username": "paramagnetic3004",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        res=list(dict.fromkeys(nums))\\n        return len(res)\\n\\nwhats wrong in this solution"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Wajih_Ul_Hasan_0104",
                        "content": "My code works perfectly in my editor but unable to pass your test case:\\nHere is my code if found any errors correct it otherwise \"Leetcode\" should update their testcase.\\n\\n def removeDuplicates(self, nums):\\n        Unique = set()\\n        Len = len(nums)\\n        \\n        for duplicate in range(Len):\\n            Unique.add(nums[duplicate])\\n            \\n        Unq = list(Unique)\\n        return len(Unq)"
                    },
                    {
                        "username": "Wajih_Ul_Hasan_0104",
                        "content": "[@KovDimaY](/KovDimaY) Got! the point Thanks:)"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Demaineen",
                        "content": "I got an error in the js/ts checker when I returned [1, 2, 2] from the [1, 1, 2] array. But the answer seems correct. What to do?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You do not have to return array, your return has to be a number, but when executing your code you have to modify the array that was provided as the input. I hope that helps \\uD83D\\uDE0A"
                    }
                ]
            },
            {
                "id": 1732035,
                "content": [
                    {
                        "username": "Vidit_lakhera",
                        "content": "var removeDuplicates = function(nums) {\\n    let result = [];\\n    for(let i=0;i<nums.length;i++){\\n        if(nums[i] != nums[i+1]){\\n              result.push(nums[i])\\n        }\\n    }\\n    return result\\n};\\nlet array = [1,1,2]\\nremoveDuplicates(array)  // working on terminal but shows error here pls help to find error"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array, it checks the input not what you return."
                    },
                    {
                        "username": "tneske93",
                        "content": "lmao if this is easdy, im gonna quit my computer science studies."
                    },
                    {
                        "username": "harshtyagi0",
                        "content": "Can anyone tell what is wrong in this code.\\nimport java.util.Set;\\nimport java.util.TreeSet;\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        Set<Integer> set = new TreeSet<>();\\n\\t\\tfor(int i =0; i<nums.length; i++) {\\n\\t\\t\\tset.add(nums[i]);\\n\\t\\t}\\n\\t\\treturn set.size();\\n        \\n    }\\n}"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "This code does not mutate the original array. The idea of this task is mutate the original array in the way that it does not have duplicates on the first K positions, and this K is the number that you have to return."
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "The C# problem is asking for me to return an integer. Then it is rejecting this asking for an integer array. I\\'m pretty confident this question has an issue..."
                    },
                    {
                        "username": "charant587",
                        "content": "in this solution i can only remove 2 duplicate items not more than that can anyone tell me solution\\n\\ndef removeDuplicates(self, nums):\\n        k=0\\n        if nums is None:\\n            return k\\n        for i in range (0 , len(nums)-1):\\n            \\n            for s in range (i+1,len(nums)-1):\\n               if nums[i]== nums[s]:\\n                   nums.remove(nums[i])\\n            k=k+1\\n        return k\\n"
                    },
                    {
                        "username": "rajeevkumarsingh5252",
                        "content": "`int removeDuplicates(vector<int>& nums) {`\\n        `map<int,int>mpp;`\\n    `for(int i=0;i<nums.size();i++){`\\n       ` mpp[nums[i]]++;`\\n    `}`\\n    `nums.clear();`\\n   `for(auto it:mpp){`\\n    `//cout<<it.first<<\"           \"<<it.second<<endl;`\\n    `nums.push_back(it.first);`\\n   `} `\\n    `    return nums.size();`\\n    `}`"
                    },
                    {
                        "username": "pratik063",
                        "content": "Haven't gotten into complexities yet but here's the code i wrote in python\n\nnums=sorted(list(set(nums))) \nreturn len(nums) \n\nim getting the output as [1,1] in the first testcase and [0,0,1,1,1] in the second one(obv wrong) \n\nim supposed to get the output as the length of the new array instead im getting these wrong outputs,even though there isnt supposed to be any problem even in the new array itself(verified it in an online compiler) \n\nwhat am i doing wrong?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You have to mutate the original array that was provided. The idea of this task is not only to return the correct number but also correctly change the input array."
                    },
                    {
                        "username": "paramagnetic3004",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        res=list(dict.fromkeys(nums))\\n        return len(res)\\n\\nwhats wrong in this solution"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Wajih_Ul_Hasan_0104",
                        "content": "My code works perfectly in my editor but unable to pass your test case:\\nHere is my code if found any errors correct it otherwise \"Leetcode\" should update their testcase.\\n\\n def removeDuplicates(self, nums):\\n        Unique = set()\\n        Len = len(nums)\\n        \\n        for duplicate in range(Len):\\n            Unique.add(nums[duplicate])\\n            \\n        Unq = list(Unique)\\n        return len(Unq)"
                    },
                    {
                        "username": "Wajih_Ul_Hasan_0104",
                        "content": "[@KovDimaY](/KovDimaY) Got! the point Thanks:)"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Demaineen",
                        "content": "I got an error in the js/ts checker when I returned [1, 2, 2] from the [1, 1, 2] array. But the answer seems correct. What to do?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You do not have to return array, your return has to be a number, but when executing your code you have to modify the array that was provided as the input. I hope that helps \\uD83D\\uDE0A"
                    }
                ]
            },
            {
                "id": 1731959,
                "content": [
                    {
                        "username": "Vidit_lakhera",
                        "content": "var removeDuplicates = function(nums) {\\n    let result = [];\\n    for(let i=0;i<nums.length;i++){\\n        if(nums[i] != nums[i+1]){\\n              result.push(nums[i])\\n        }\\n    }\\n    return result\\n};\\nlet array = [1,1,2]\\nremoveDuplicates(array)  // working on terminal but shows error here pls help to find error"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Because you need to mutate the original array, it checks the input not what you return."
                    },
                    {
                        "username": "tneske93",
                        "content": "lmao if this is easdy, im gonna quit my computer science studies."
                    },
                    {
                        "username": "harshtyagi0",
                        "content": "Can anyone tell what is wrong in this code.\\nimport java.util.Set;\\nimport java.util.TreeSet;\\n\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        Set<Integer> set = new TreeSet<>();\\n\\t\\tfor(int i =0; i<nums.length; i++) {\\n\\t\\t\\tset.add(nums[i]);\\n\\t\\t}\\n\\t\\treturn set.size();\\n        \\n    }\\n}"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "This code does not mutate the original array. The idea of this task is mutate the original array in the way that it does not have duplicates on the first K positions, and this K is the number that you have to return."
                    },
                    {
                        "username": "brainlessduncan",
                        "content": "The C# problem is asking for me to return an integer. Then it is rejecting this asking for an integer array. I\\'m pretty confident this question has an issue..."
                    },
                    {
                        "username": "charant587",
                        "content": "in this solution i can only remove 2 duplicate items not more than that can anyone tell me solution\\n\\ndef removeDuplicates(self, nums):\\n        k=0\\n        if nums is None:\\n            return k\\n        for i in range (0 , len(nums)-1):\\n            \\n            for s in range (i+1,len(nums)-1):\\n               if nums[i]== nums[s]:\\n                   nums.remove(nums[i])\\n            k=k+1\\n        return k\\n"
                    },
                    {
                        "username": "rajeevkumarsingh5252",
                        "content": "`int removeDuplicates(vector<int>& nums) {`\\n        `map<int,int>mpp;`\\n    `for(int i=0;i<nums.size();i++){`\\n       ` mpp[nums[i]]++;`\\n    `}`\\n    `nums.clear();`\\n   `for(auto it:mpp){`\\n    `//cout<<it.first<<\"           \"<<it.second<<endl;`\\n    `nums.push_back(it.first);`\\n   `} `\\n    `    return nums.size();`\\n    `}`"
                    },
                    {
                        "username": "pratik063",
                        "content": "Haven't gotten into complexities yet but here's the code i wrote in python\n\nnums=sorted(list(set(nums))) \nreturn len(nums) \n\nim getting the output as [1,1] in the first testcase and [0,0,1,1,1] in the second one(obv wrong) \n\nim supposed to get the output as the length of the new array instead im getting these wrong outputs,even though there isnt supposed to be any problem even in the new array itself(verified it in an online compiler) \n\nwhat am i doing wrong?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You have to mutate the original array that was provided. The idea of this task is not only to return the correct number but also correctly change the input array."
                    },
                    {
                        "username": "paramagnetic3004",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        res=list(dict.fromkeys(nums))\\n        return len(res)\\n\\nwhats wrong in this solution"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Wajih_Ul_Hasan_0104",
                        "content": "My code works perfectly in my editor but unable to pass your test case:\\nHere is my code if found any errors correct it otherwise \"Leetcode\" should update their testcase.\\n\\n def removeDuplicates(self, nums):\\n        Unique = set()\\n        Len = len(nums)\\n        \\n        for duplicate in range(Len):\\n            Unique.add(nums[duplicate])\\n            \\n        Unq = list(Unique)\\n        return len(Unq)"
                    },
                    {
                        "username": "Wajih_Ul_Hasan_0104",
                        "content": "[@KovDimaY](/KovDimaY) Got! the point Thanks:)"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Demaineen",
                        "content": "I got an error in the js/ts checker when I returned [1, 2, 2] from the [1, 1, 2] array. But the answer seems correct. What to do?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "You do not have to return array, your return has to be a number, but when executing your code you have to modify the array that was provided as the input. I hope that helps \\uD83D\\uDE0A"
                    }
                ]
            },
            {
                "id": 1731933,
                "content": [
                    {
                        "username": "BhushanBK",
                        "content": "JAVA\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int n=0;\\n        for(int i=0;i<nums.length-1;i++){\\n            if(nums[i]!=nums[i+1])\\n                nums[n++]=nums[i];\\n        }\\n        nums[n++]=nums[nums.length-1];\\n        return n;\\n    }\\n}"
                    },
                    {
                        "username": "trantatxep",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        abc = list(set(nums))\\n        return len(abc)\\n\\nAnyone know why my solution is wrong ? "
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Thedineshk24",
                        "content": "this code is return right array when i use k, but when i use k.length it also gives 2, which is accepted, but leetcode gives [1.1]\\n\\n `var removeDuplicates = function (nums) {\\n  let prev = [];\\n  const k = [];\\n  for (let i = 0; i < nums.length; i++) {\\n    if (nums[i] !== prev) {\\n      k.push(nums[i]);\\n      prev = nums[i];\\n    }\\n  }\\n  return k.length;\\n};`"
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Pythonistas, use set!"
                    },
                    {
                        "username": "prabhanjanmishra60077",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        \\n     for(auto i=nums.begin()+1;i!=nums.end();i++)\\n     {\\n         if(*i==*(i-1))\\n          {\\n              nums.erase(i);\\n              i=i-1;\\n          }\\n     }\\n     return nums.size();\\n    }\\n    \\n};"
                    },
                    {
                        "username": "suvoooo",
                        "content": "Upvote if you think this type of ridiculous, pathetic description of a problem should be considered as a complete joke! Wasted 40 minutes and then had to see the solution to figure out what they actually want behind the scene to happen and not the real answer!!!! "
                    },
                    {
                        "username": "tejasparmar1211999",
                        "content": "var removeDuplicates = function(nums) {\\n    let res=new Set(nums);\\n    let res1=[...res];\\n    return res1;\\n};\\nwhy this solution is not working?\\nit is working in VSCode."
                    },
                    {
                        "username": "user0130y",
                        "content": "I\\'ve noticed all of the solutions are basically returning the number of different elements.  Doesn\\'t the question ask to also return an array with underscores for redundant values as well?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "I think the main idea of this problem is to mutate correctly the initial array that was provided in the way that all the first elements are not repeated. The number that we return is kinda redundant I think, it is just not needed. But well, it is the way how the author decided to create this problem \\uD83E\\uDD37\\u200D\\u2642\\uFE0F"
                    },
                    {
                        "username": "biltuandal",
                        "content": " Python code. \\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        a = []\\n        l = len(nums)\\n        i = 0\\n        while i<l:\\n            if nums[i] not in a:\\n                a.append(nums[i])\\n                i+=1\\n            else:\\n                nums.pop(i)\\n                l-=1\\n        print(nums)"
                    },
                    {
                        "username": "ankit_996",
                        "content": " int n= nums.length;\\n            int [] nums2 = new int[n];\\n            int j=0;\\n            for (int i=0; i<n; i++){\\n                if (nums[i]!=nums[i+1]){\\n                    nums2[j++]=nums[i];\\n                }\\n            }\\n            nums2[j++]=nums[n-1];\\n//            changing original array\\n            for (int i=0; i<j; i++){\\n                nums[i]=nums2[i];\\n            }\\n            return j;\\n        }\\n    }"
                    }
                ]
            },
            {
                "id": 1731010,
                "content": [
                    {
                        "username": "BhushanBK",
                        "content": "JAVA\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int n=0;\\n        for(int i=0;i<nums.length-1;i++){\\n            if(nums[i]!=nums[i+1])\\n                nums[n++]=nums[i];\\n        }\\n        nums[n++]=nums[nums.length-1];\\n        return n;\\n    }\\n}"
                    },
                    {
                        "username": "trantatxep",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        abc = list(set(nums))\\n        return len(abc)\\n\\nAnyone know why my solution is wrong ? "
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Thedineshk24",
                        "content": "this code is return right array when i use k, but when i use k.length it also gives 2, which is accepted, but leetcode gives [1.1]\\n\\n `var removeDuplicates = function (nums) {\\n  let prev = [];\\n  const k = [];\\n  for (let i = 0; i < nums.length; i++) {\\n    if (nums[i] !== prev) {\\n      k.push(nums[i]);\\n      prev = nums[i];\\n    }\\n  }\\n  return k.length;\\n};`"
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Pythonistas, use set!"
                    },
                    {
                        "username": "prabhanjanmishra60077",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        \\n     for(auto i=nums.begin()+1;i!=nums.end();i++)\\n     {\\n         if(*i==*(i-1))\\n          {\\n              nums.erase(i);\\n              i=i-1;\\n          }\\n     }\\n     return nums.size();\\n    }\\n    \\n};"
                    },
                    {
                        "username": "suvoooo",
                        "content": "Upvote if you think this type of ridiculous, pathetic description of a problem should be considered as a complete joke! Wasted 40 minutes and then had to see the solution to figure out what they actually want behind the scene to happen and not the real answer!!!! "
                    },
                    {
                        "username": "tejasparmar1211999",
                        "content": "var removeDuplicates = function(nums) {\\n    let res=new Set(nums);\\n    let res1=[...res];\\n    return res1;\\n};\\nwhy this solution is not working?\\nit is working in VSCode."
                    },
                    {
                        "username": "user0130y",
                        "content": "I\\'ve noticed all of the solutions are basically returning the number of different elements.  Doesn\\'t the question ask to also return an array with underscores for redundant values as well?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "I think the main idea of this problem is to mutate correctly the initial array that was provided in the way that all the first elements are not repeated. The number that we return is kinda redundant I think, it is just not needed. But well, it is the way how the author decided to create this problem \\uD83E\\uDD37\\u200D\\u2642\\uFE0F"
                    },
                    {
                        "username": "biltuandal",
                        "content": " Python code. \\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        a = []\\n        l = len(nums)\\n        i = 0\\n        while i<l:\\n            if nums[i] not in a:\\n                a.append(nums[i])\\n                i+=1\\n            else:\\n                nums.pop(i)\\n                l-=1\\n        print(nums)"
                    },
                    {
                        "username": "ankit_996",
                        "content": " int n= nums.length;\\n            int [] nums2 = new int[n];\\n            int j=0;\\n            for (int i=0; i<n; i++){\\n                if (nums[i]!=nums[i+1]){\\n                    nums2[j++]=nums[i];\\n                }\\n            }\\n            nums2[j++]=nums[n-1];\\n//            changing original array\\n            for (int i=0; i<j; i++){\\n                nums[i]=nums2[i];\\n            }\\n            return j;\\n        }\\n    }"
                    }
                ]
            },
            {
                "id": 1730126,
                "content": [
                    {
                        "username": "BhushanBK",
                        "content": "JAVA\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int n=0;\\n        for(int i=0;i<nums.length-1;i++){\\n            if(nums[i]!=nums[i+1])\\n                nums[n++]=nums[i];\\n        }\\n        nums[n++]=nums[nums.length-1];\\n        return n;\\n    }\\n}"
                    },
                    {
                        "username": "trantatxep",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        abc = list(set(nums))\\n        return len(abc)\\n\\nAnyone know why my solution is wrong ? "
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Thedineshk24",
                        "content": "this code is return right array when i use k, but when i use k.length it also gives 2, which is accepted, but leetcode gives [1.1]\\n\\n `var removeDuplicates = function (nums) {\\n  let prev = [];\\n  const k = [];\\n  for (let i = 0; i < nums.length; i++) {\\n    if (nums[i] !== prev) {\\n      k.push(nums[i]);\\n      prev = nums[i];\\n    }\\n  }\\n  return k.length;\\n};`"
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Pythonistas, use set!"
                    },
                    {
                        "username": "prabhanjanmishra60077",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        \\n     for(auto i=nums.begin()+1;i!=nums.end();i++)\\n     {\\n         if(*i==*(i-1))\\n          {\\n              nums.erase(i);\\n              i=i-1;\\n          }\\n     }\\n     return nums.size();\\n    }\\n    \\n};"
                    },
                    {
                        "username": "suvoooo",
                        "content": "Upvote if you think this type of ridiculous, pathetic description of a problem should be considered as a complete joke! Wasted 40 minutes and then had to see the solution to figure out what they actually want behind the scene to happen and not the real answer!!!! "
                    },
                    {
                        "username": "tejasparmar1211999",
                        "content": "var removeDuplicates = function(nums) {\\n    let res=new Set(nums);\\n    let res1=[...res];\\n    return res1;\\n};\\nwhy this solution is not working?\\nit is working in VSCode."
                    },
                    {
                        "username": "user0130y",
                        "content": "I\\'ve noticed all of the solutions are basically returning the number of different elements.  Doesn\\'t the question ask to also return an array with underscores for redundant values as well?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "I think the main idea of this problem is to mutate correctly the initial array that was provided in the way that all the first elements are not repeated. The number that we return is kinda redundant I think, it is just not needed. But well, it is the way how the author decided to create this problem \\uD83E\\uDD37\\u200D\\u2642\\uFE0F"
                    },
                    {
                        "username": "biltuandal",
                        "content": " Python code. \\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        a = []\\n        l = len(nums)\\n        i = 0\\n        while i<l:\\n            if nums[i] not in a:\\n                a.append(nums[i])\\n                i+=1\\n            else:\\n                nums.pop(i)\\n                l-=1\\n        print(nums)"
                    },
                    {
                        "username": "ankit_996",
                        "content": " int n= nums.length;\\n            int [] nums2 = new int[n];\\n            int j=0;\\n            for (int i=0; i<n; i++){\\n                if (nums[i]!=nums[i+1]){\\n                    nums2[j++]=nums[i];\\n                }\\n            }\\n            nums2[j++]=nums[n-1];\\n//            changing original array\\n            for (int i=0; i<j; i++){\\n                nums[i]=nums2[i];\\n            }\\n            return j;\\n        }\\n    }"
                    }
                ]
            },
            {
                "id": 1730024,
                "content": [
                    {
                        "username": "BhushanBK",
                        "content": "JAVA\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int n=0;\\n        for(int i=0;i<nums.length-1;i++){\\n            if(nums[i]!=nums[i+1])\\n                nums[n++]=nums[i];\\n        }\\n        nums[n++]=nums[nums.length-1];\\n        return n;\\n    }\\n}"
                    },
                    {
                        "username": "trantatxep",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        abc = list(set(nums))\\n        return len(abc)\\n\\nAnyone know why my solution is wrong ? "
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Thedineshk24",
                        "content": "this code is return right array when i use k, but when i use k.length it also gives 2, which is accepted, but leetcode gives [1.1]\\n\\n `var removeDuplicates = function (nums) {\\n  let prev = [];\\n  const k = [];\\n  for (let i = 0; i < nums.length; i++) {\\n    if (nums[i] !== prev) {\\n      k.push(nums[i]);\\n      prev = nums[i];\\n    }\\n  }\\n  return k.length;\\n};`"
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Pythonistas, use set!"
                    },
                    {
                        "username": "prabhanjanmishra60077",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        \\n     for(auto i=nums.begin()+1;i!=nums.end();i++)\\n     {\\n         if(*i==*(i-1))\\n          {\\n              nums.erase(i);\\n              i=i-1;\\n          }\\n     }\\n     return nums.size();\\n    }\\n    \\n};"
                    },
                    {
                        "username": "suvoooo",
                        "content": "Upvote if you think this type of ridiculous, pathetic description of a problem should be considered as a complete joke! Wasted 40 minutes and then had to see the solution to figure out what they actually want behind the scene to happen and not the real answer!!!! "
                    },
                    {
                        "username": "tejasparmar1211999",
                        "content": "var removeDuplicates = function(nums) {\\n    let res=new Set(nums);\\n    let res1=[...res];\\n    return res1;\\n};\\nwhy this solution is not working?\\nit is working in VSCode."
                    },
                    {
                        "username": "user0130y",
                        "content": "I\\'ve noticed all of the solutions are basically returning the number of different elements.  Doesn\\'t the question ask to also return an array with underscores for redundant values as well?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "I think the main idea of this problem is to mutate correctly the initial array that was provided in the way that all the first elements are not repeated. The number that we return is kinda redundant I think, it is just not needed. But well, it is the way how the author decided to create this problem \\uD83E\\uDD37\\u200D\\u2642\\uFE0F"
                    },
                    {
                        "username": "biltuandal",
                        "content": " Python code. \\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        a = []\\n        l = len(nums)\\n        i = 0\\n        while i<l:\\n            if nums[i] not in a:\\n                a.append(nums[i])\\n                i+=1\\n            else:\\n                nums.pop(i)\\n                l-=1\\n        print(nums)"
                    },
                    {
                        "username": "ankit_996",
                        "content": " int n= nums.length;\\n            int [] nums2 = new int[n];\\n            int j=0;\\n            for (int i=0; i<n; i++){\\n                if (nums[i]!=nums[i+1]){\\n                    nums2[j++]=nums[i];\\n                }\\n            }\\n            nums2[j++]=nums[n-1];\\n//            changing original array\\n            for (int i=0; i<j; i++){\\n                nums[i]=nums2[i];\\n            }\\n            return j;\\n        }\\n    }"
                    }
                ]
            },
            {
                "id": 1729264,
                "content": [
                    {
                        "username": "BhushanBK",
                        "content": "JAVA\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int n=0;\\n        for(int i=0;i<nums.length-1;i++){\\n            if(nums[i]!=nums[i+1])\\n                nums[n++]=nums[i];\\n        }\\n        nums[n++]=nums[nums.length-1];\\n        return n;\\n    }\\n}"
                    },
                    {
                        "username": "trantatxep",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        abc = list(set(nums))\\n        return len(abc)\\n\\nAnyone know why my solution is wrong ? "
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Thedineshk24",
                        "content": "this code is return right array when i use k, but when i use k.length it also gives 2, which is accepted, but leetcode gives [1.1]\\n\\n `var removeDuplicates = function (nums) {\\n  let prev = [];\\n  const k = [];\\n  for (let i = 0; i < nums.length; i++) {\\n    if (nums[i] !== prev) {\\n      k.push(nums[i]);\\n      prev = nums[i];\\n    }\\n  }\\n  return k.length;\\n};`"
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Pythonistas, use set!"
                    },
                    {
                        "username": "prabhanjanmishra60077",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        \\n     for(auto i=nums.begin()+1;i!=nums.end();i++)\\n     {\\n         if(*i==*(i-1))\\n          {\\n              nums.erase(i);\\n              i=i-1;\\n          }\\n     }\\n     return nums.size();\\n    }\\n    \\n};"
                    },
                    {
                        "username": "suvoooo",
                        "content": "Upvote if you think this type of ridiculous, pathetic description of a problem should be considered as a complete joke! Wasted 40 minutes and then had to see the solution to figure out what they actually want behind the scene to happen and not the real answer!!!! "
                    },
                    {
                        "username": "tejasparmar1211999",
                        "content": "var removeDuplicates = function(nums) {\\n    let res=new Set(nums);\\n    let res1=[...res];\\n    return res1;\\n};\\nwhy this solution is not working?\\nit is working in VSCode."
                    },
                    {
                        "username": "user0130y",
                        "content": "I\\'ve noticed all of the solutions are basically returning the number of different elements.  Doesn\\'t the question ask to also return an array with underscores for redundant values as well?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "I think the main idea of this problem is to mutate correctly the initial array that was provided in the way that all the first elements are not repeated. The number that we return is kinda redundant I think, it is just not needed. But well, it is the way how the author decided to create this problem \\uD83E\\uDD37\\u200D\\u2642\\uFE0F"
                    },
                    {
                        "username": "biltuandal",
                        "content": " Python code. \\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        a = []\\n        l = len(nums)\\n        i = 0\\n        while i<l:\\n            if nums[i] not in a:\\n                a.append(nums[i])\\n                i+=1\\n            else:\\n                nums.pop(i)\\n                l-=1\\n        print(nums)"
                    },
                    {
                        "username": "ankit_996",
                        "content": " int n= nums.length;\\n            int [] nums2 = new int[n];\\n            int j=0;\\n            for (int i=0; i<n; i++){\\n                if (nums[i]!=nums[i+1]){\\n                    nums2[j++]=nums[i];\\n                }\\n            }\\n            nums2[j++]=nums[n-1];\\n//            changing original array\\n            for (int i=0; i<j; i++){\\n                nums[i]=nums2[i];\\n            }\\n            return j;\\n        }\\n    }"
                    }
                ]
            },
            {
                "id": 1728781,
                "content": [
                    {
                        "username": "BhushanBK",
                        "content": "JAVA\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int n=0;\\n        for(int i=0;i<nums.length-1;i++){\\n            if(nums[i]!=nums[i+1])\\n                nums[n++]=nums[i];\\n        }\\n        nums[n++]=nums[nums.length-1];\\n        return n;\\n    }\\n}"
                    },
                    {
                        "username": "trantatxep",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        abc = list(set(nums))\\n        return len(abc)\\n\\nAnyone know why my solution is wrong ? "
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Thedineshk24",
                        "content": "this code is return right array when i use k, but when i use k.length it also gives 2, which is accepted, but leetcode gives [1.1]\\n\\n `var removeDuplicates = function (nums) {\\n  let prev = [];\\n  const k = [];\\n  for (let i = 0; i < nums.length; i++) {\\n    if (nums[i] !== prev) {\\n      k.push(nums[i]);\\n      prev = nums[i];\\n    }\\n  }\\n  return k.length;\\n};`"
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Pythonistas, use set!"
                    },
                    {
                        "username": "prabhanjanmishra60077",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        \\n     for(auto i=nums.begin()+1;i!=nums.end();i++)\\n     {\\n         if(*i==*(i-1))\\n          {\\n              nums.erase(i);\\n              i=i-1;\\n          }\\n     }\\n     return nums.size();\\n    }\\n    \\n};"
                    },
                    {
                        "username": "suvoooo",
                        "content": "Upvote if you think this type of ridiculous, pathetic description of a problem should be considered as a complete joke! Wasted 40 minutes and then had to see the solution to figure out what they actually want behind the scene to happen and not the real answer!!!! "
                    },
                    {
                        "username": "tejasparmar1211999",
                        "content": "var removeDuplicates = function(nums) {\\n    let res=new Set(nums);\\n    let res1=[...res];\\n    return res1;\\n};\\nwhy this solution is not working?\\nit is working in VSCode."
                    },
                    {
                        "username": "user0130y",
                        "content": "I\\'ve noticed all of the solutions are basically returning the number of different elements.  Doesn\\'t the question ask to also return an array with underscores for redundant values as well?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "I think the main idea of this problem is to mutate correctly the initial array that was provided in the way that all the first elements are not repeated. The number that we return is kinda redundant I think, it is just not needed. But well, it is the way how the author decided to create this problem \\uD83E\\uDD37\\u200D\\u2642\\uFE0F"
                    },
                    {
                        "username": "biltuandal",
                        "content": " Python code. \\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        a = []\\n        l = len(nums)\\n        i = 0\\n        while i<l:\\n            if nums[i] not in a:\\n                a.append(nums[i])\\n                i+=1\\n            else:\\n                nums.pop(i)\\n                l-=1\\n        print(nums)"
                    },
                    {
                        "username": "ankit_996",
                        "content": " int n= nums.length;\\n            int [] nums2 = new int[n];\\n            int j=0;\\n            for (int i=0; i<n; i++){\\n                if (nums[i]!=nums[i+1]){\\n                    nums2[j++]=nums[i];\\n                }\\n            }\\n            nums2[j++]=nums[n-1];\\n//            changing original array\\n            for (int i=0; i<j; i++){\\n                nums[i]=nums2[i];\\n            }\\n            return j;\\n        }\\n    }"
                    }
                ]
            },
            {
                "id": 1726562,
                "content": [
                    {
                        "username": "BhushanBK",
                        "content": "JAVA\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int n=0;\\n        for(int i=0;i<nums.length-1;i++){\\n            if(nums[i]!=nums[i+1])\\n                nums[n++]=nums[i];\\n        }\\n        nums[n++]=nums[nums.length-1];\\n        return n;\\n    }\\n}"
                    },
                    {
                        "username": "trantatxep",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        abc = list(set(nums))\\n        return len(abc)\\n\\nAnyone know why my solution is wrong ? "
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Thedineshk24",
                        "content": "this code is return right array when i use k, but when i use k.length it also gives 2, which is accepted, but leetcode gives [1.1]\\n\\n `var removeDuplicates = function (nums) {\\n  let prev = [];\\n  const k = [];\\n  for (let i = 0; i < nums.length; i++) {\\n    if (nums[i] !== prev) {\\n      k.push(nums[i]);\\n      prev = nums[i];\\n    }\\n  }\\n  return k.length;\\n};`"
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Pythonistas, use set!"
                    },
                    {
                        "username": "prabhanjanmishra60077",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        \\n     for(auto i=nums.begin()+1;i!=nums.end();i++)\\n     {\\n         if(*i==*(i-1))\\n          {\\n              nums.erase(i);\\n              i=i-1;\\n          }\\n     }\\n     return nums.size();\\n    }\\n    \\n};"
                    },
                    {
                        "username": "suvoooo",
                        "content": "Upvote if you think this type of ridiculous, pathetic description of a problem should be considered as a complete joke! Wasted 40 minutes and then had to see the solution to figure out what they actually want behind the scene to happen and not the real answer!!!! "
                    },
                    {
                        "username": "tejasparmar1211999",
                        "content": "var removeDuplicates = function(nums) {\\n    let res=new Set(nums);\\n    let res1=[...res];\\n    return res1;\\n};\\nwhy this solution is not working?\\nit is working in VSCode."
                    },
                    {
                        "username": "user0130y",
                        "content": "I\\'ve noticed all of the solutions are basically returning the number of different elements.  Doesn\\'t the question ask to also return an array with underscores for redundant values as well?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "I think the main idea of this problem is to mutate correctly the initial array that was provided in the way that all the first elements are not repeated. The number that we return is kinda redundant I think, it is just not needed. But well, it is the way how the author decided to create this problem \\uD83E\\uDD37\\u200D\\u2642\\uFE0F"
                    },
                    {
                        "username": "biltuandal",
                        "content": " Python code. \\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        a = []\\n        l = len(nums)\\n        i = 0\\n        while i<l:\\n            if nums[i] not in a:\\n                a.append(nums[i])\\n                i+=1\\n            else:\\n                nums.pop(i)\\n                l-=1\\n        print(nums)"
                    },
                    {
                        "username": "ankit_996",
                        "content": " int n= nums.length;\\n            int [] nums2 = new int[n];\\n            int j=0;\\n            for (int i=0; i<n; i++){\\n                if (nums[i]!=nums[i+1]){\\n                    nums2[j++]=nums[i];\\n                }\\n            }\\n            nums2[j++]=nums[n-1];\\n//            changing original array\\n            for (int i=0; i<j; i++){\\n                nums[i]=nums2[i];\\n            }\\n            return j;\\n        }\\n    }"
                    }
                ]
            },
            {
                "id": 1726077,
                "content": [
                    {
                        "username": "BhushanBK",
                        "content": "JAVA\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int n=0;\\n        for(int i=0;i<nums.length-1;i++){\\n            if(nums[i]!=nums[i+1])\\n                nums[n++]=nums[i];\\n        }\\n        nums[n++]=nums[nums.length-1];\\n        return n;\\n    }\\n}"
                    },
                    {
                        "username": "trantatxep",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        abc = list(set(nums))\\n        return len(abc)\\n\\nAnyone know why my solution is wrong ? "
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Thedineshk24",
                        "content": "this code is return right array when i use k, but when i use k.length it also gives 2, which is accepted, but leetcode gives [1.1]\\n\\n `var removeDuplicates = function (nums) {\\n  let prev = [];\\n  const k = [];\\n  for (let i = 0; i < nums.length; i++) {\\n    if (nums[i] !== prev) {\\n      k.push(nums[i]);\\n      prev = nums[i];\\n    }\\n  }\\n  return k.length;\\n};`"
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Pythonistas, use set!"
                    },
                    {
                        "username": "prabhanjanmishra60077",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        \\n     for(auto i=nums.begin()+1;i!=nums.end();i++)\\n     {\\n         if(*i==*(i-1))\\n          {\\n              nums.erase(i);\\n              i=i-1;\\n          }\\n     }\\n     return nums.size();\\n    }\\n    \\n};"
                    },
                    {
                        "username": "suvoooo",
                        "content": "Upvote if you think this type of ridiculous, pathetic description of a problem should be considered as a complete joke! Wasted 40 minutes and then had to see the solution to figure out what they actually want behind the scene to happen and not the real answer!!!! "
                    },
                    {
                        "username": "tejasparmar1211999",
                        "content": "var removeDuplicates = function(nums) {\\n    let res=new Set(nums);\\n    let res1=[...res];\\n    return res1;\\n};\\nwhy this solution is not working?\\nit is working in VSCode."
                    },
                    {
                        "username": "user0130y",
                        "content": "I\\'ve noticed all of the solutions are basically returning the number of different elements.  Doesn\\'t the question ask to also return an array with underscores for redundant values as well?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "I think the main idea of this problem is to mutate correctly the initial array that was provided in the way that all the first elements are not repeated. The number that we return is kinda redundant I think, it is just not needed. But well, it is the way how the author decided to create this problem \\uD83E\\uDD37\\u200D\\u2642\\uFE0F"
                    },
                    {
                        "username": "biltuandal",
                        "content": " Python code. \\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        a = []\\n        l = len(nums)\\n        i = 0\\n        while i<l:\\n            if nums[i] not in a:\\n                a.append(nums[i])\\n                i+=1\\n            else:\\n                nums.pop(i)\\n                l-=1\\n        print(nums)"
                    },
                    {
                        "username": "ankit_996",
                        "content": " int n= nums.length;\\n            int [] nums2 = new int[n];\\n            int j=0;\\n            for (int i=0; i<n; i++){\\n                if (nums[i]!=nums[i+1]){\\n                    nums2[j++]=nums[i];\\n                }\\n            }\\n            nums2[j++]=nums[n-1];\\n//            changing original array\\n            for (int i=0; i<j; i++){\\n                nums[i]=nums2[i];\\n            }\\n            return j;\\n        }\\n    }"
                    }
                ]
            },
            {
                "id": 1726076,
                "content": [
                    {
                        "username": "BhushanBK",
                        "content": "JAVA\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int n=0;\\n        for(int i=0;i<nums.length-1;i++){\\n            if(nums[i]!=nums[i+1])\\n                nums[n++]=nums[i];\\n        }\\n        nums[n++]=nums[nums.length-1];\\n        return n;\\n    }\\n}"
                    },
                    {
                        "username": "trantatxep",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        abc = list(set(nums))\\n        return len(abc)\\n\\nAnyone know why my solution is wrong ? "
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Thedineshk24",
                        "content": "this code is return right array when i use k, but when i use k.length it also gives 2, which is accepted, but leetcode gives [1.1]\\n\\n `var removeDuplicates = function (nums) {\\n  let prev = [];\\n  const k = [];\\n  for (let i = 0; i < nums.length; i++) {\\n    if (nums[i] !== prev) {\\n      k.push(nums[i]);\\n      prev = nums[i];\\n    }\\n  }\\n  return k.length;\\n};`"
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Pythonistas, use set!"
                    },
                    {
                        "username": "prabhanjanmishra60077",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        \\n     for(auto i=nums.begin()+1;i!=nums.end();i++)\\n     {\\n         if(*i==*(i-1))\\n          {\\n              nums.erase(i);\\n              i=i-1;\\n          }\\n     }\\n     return nums.size();\\n    }\\n    \\n};"
                    },
                    {
                        "username": "suvoooo",
                        "content": "Upvote if you think this type of ridiculous, pathetic description of a problem should be considered as a complete joke! Wasted 40 minutes and then had to see the solution to figure out what they actually want behind the scene to happen and not the real answer!!!! "
                    },
                    {
                        "username": "tejasparmar1211999",
                        "content": "var removeDuplicates = function(nums) {\\n    let res=new Set(nums);\\n    let res1=[...res];\\n    return res1;\\n};\\nwhy this solution is not working?\\nit is working in VSCode."
                    },
                    {
                        "username": "user0130y",
                        "content": "I\\'ve noticed all of the solutions are basically returning the number of different elements.  Doesn\\'t the question ask to also return an array with underscores for redundant values as well?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "I think the main idea of this problem is to mutate correctly the initial array that was provided in the way that all the first elements are not repeated. The number that we return is kinda redundant I think, it is just not needed. But well, it is the way how the author decided to create this problem \\uD83E\\uDD37\\u200D\\u2642\\uFE0F"
                    },
                    {
                        "username": "biltuandal",
                        "content": " Python code. \\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        a = []\\n        l = len(nums)\\n        i = 0\\n        while i<l:\\n            if nums[i] not in a:\\n                a.append(nums[i])\\n                i+=1\\n            else:\\n                nums.pop(i)\\n                l-=1\\n        print(nums)"
                    },
                    {
                        "username": "ankit_996",
                        "content": " int n= nums.length;\\n            int [] nums2 = new int[n];\\n            int j=0;\\n            for (int i=0; i<n; i++){\\n                if (nums[i]!=nums[i+1]){\\n                    nums2[j++]=nums[i];\\n                }\\n            }\\n            nums2[j++]=nums[n-1];\\n//            changing original array\\n            for (int i=0; i<j; i++){\\n                nums[i]=nums2[i];\\n            }\\n            return j;\\n        }\\n    }"
                    }
                ]
            },
            {
                "id": 1724473,
                "content": [
                    {
                        "username": "BhushanBK",
                        "content": "JAVA\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int n=0;\\n        for(int i=0;i<nums.length-1;i++){\\n            if(nums[i]!=nums[i+1])\\n                nums[n++]=nums[i];\\n        }\\n        nums[n++]=nums[nums.length-1];\\n        return n;\\n    }\\n}"
                    },
                    {
                        "username": "trantatxep",
                        "content": "class Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        abc = list(set(nums))\\n        return len(abc)\\n\\nAnyone know why my solution is wrong ? "
                    },
                    {
                        "username": "KovDimaY",
                        "content": "Be sure you modify the original array. The tests are running against it. The idea is that you do not only return the correct number but also mutate the provided array so it does not have duplicates."
                    },
                    {
                        "username": "Thedineshk24",
                        "content": "this code is return right array when i use k, but when i use k.length it also gives 2, which is accepted, but leetcode gives [1.1]\\n\\n `var removeDuplicates = function (nums) {\\n  let prev = [];\\n  const k = [];\\n  for (let i = 0; i < nums.length; i++) {\\n    if (nums[i] !== prev) {\\n      k.push(nums[i]);\\n      prev = nums[i];\\n    }\\n  }\\n  return k.length;\\n};`"
                    },
                    {
                        "username": "Gaurav_DSA_MS",
                        "content": "Pythonistas, use set!"
                    },
                    {
                        "username": "prabhanjanmishra60077",
                        "content": "class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        \\n     for(auto i=nums.begin()+1;i!=nums.end();i++)\\n     {\\n         if(*i==*(i-1))\\n          {\\n              nums.erase(i);\\n              i=i-1;\\n          }\\n     }\\n     return nums.size();\\n    }\\n    \\n};"
                    },
                    {
                        "username": "suvoooo",
                        "content": "Upvote if you think this type of ridiculous, pathetic description of a problem should be considered as a complete joke! Wasted 40 minutes and then had to see the solution to figure out what they actually want behind the scene to happen and not the real answer!!!! "
                    },
                    {
                        "username": "tejasparmar1211999",
                        "content": "var removeDuplicates = function(nums) {\\n    let res=new Set(nums);\\n    let res1=[...res];\\n    return res1;\\n};\\nwhy this solution is not working?\\nit is working in VSCode."
                    },
                    {
                        "username": "user0130y",
                        "content": "I\\'ve noticed all of the solutions are basically returning the number of different elements.  Doesn\\'t the question ask to also return an array with underscores for redundant values as well?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "I think the main idea of this problem is to mutate correctly the initial array that was provided in the way that all the first elements are not repeated. The number that we return is kinda redundant I think, it is just not needed. But well, it is the way how the author decided to create this problem \\uD83E\\uDD37\\u200D\\u2642\\uFE0F"
                    },
                    {
                        "username": "biltuandal",
                        "content": " Python code. \\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        a = []\\n        l = len(nums)\\n        i = 0\\n        while i<l:\\n            if nums[i] not in a:\\n                a.append(nums[i])\\n                i+=1\\n            else:\\n                nums.pop(i)\\n                l-=1\\n        print(nums)"
                    },
                    {
                        "username": "ankit_996",
                        "content": " int n= nums.length;\\n            int [] nums2 = new int[n];\\n            int j=0;\\n            for (int i=0; i<n; i++){\\n                if (nums[i]!=nums[i+1]){\\n                    nums2[j++]=nums[i];\\n                }\\n            }\\n            nums2[j++]=nums[n-1];\\n//            changing original array\\n            for (int i=0; i<j; i++){\\n                nums[i]=nums2[i];\\n            }\\n            return j;\\n        }\\n    }"
                    }
                ]
            },
            {
                "id": 1723947,
                "content": [
                    {
                        "username": "akashanand282",
                        "content": "can someone tell me whats wrong with this.....for the testcase [1,1] its showing runtime error.\\n\\nint i = 0, j = 1;\\n       while (i < j && j < nums.size())\\n       {\\n           if (nums[i] == nums[j])\\n           {\\n               j++;\\n           }\\n           if (nums[i] != nums[j])\\n           {\\n               i++;\\n               nums[i] = nums[j];\\n               j++;\\n           }\\n       }\\n       return i+1; "
                    },
                    {
                        "username": "jyotipp98",
                        "content": "I have confusion what i need to return exactly unique array or number of elements in array?"
                    },
                    {
                        "username": "Brayheart",
                        "content": "dude what is happening, my return statements are all returning an empty array even when explicitly returning a string or something. I don\\'t understand how this function is operating, what am I missing here?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "I had the same problem at first and it was freaking me out \\uD83D\\uDE05\\n\\nThe thing is that we do not have to return the array, we have to return just a number of unique elements in the resulting array. But what is the most important is that we have also mutate the provided array in the way that all the repeated elements are removed, so all the first elements in the array are unique. Is a bit confusing the description of the problem, but after I figured it out it kinda makes sense. The most important in this task is to mutate correctly the original array. Good luck! \\uD83D\\uDE4C"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "https://github.com/AnkushRawat10601/Leetcode/blob/main/26_remove_the_duplicates.cpp\\nleave a STAR"
                    },
                    {
                        "username": "charanrai",
                        "content": "C++ clean solution. can be use same logic for many such questions\n\n `    int removeDuplicates(vector<int>& nums) {\n        int j = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            \n            if (nums[j] != nums[i]){\n                ++j;\n                swap(nums[j], nums[i]);\n            }\n        }\n        return j+1;\n    }`"
                    },
                    {
                        "username": "aakash_singh1708",
                        "content": "Simple Java Solution Runtime 3 ms\\n `your inline code...your inline code...`public int removeDuplicates(int[] nums) {\\n        LinkedHashSet<Integer> set=new LinkedHashSet<>();\\n        int k=0;\\n\\t\\tfor(int i=0;i<nums.length;i++) {\\n\\t\\t\\tset.add(nums[i]);\\n\\t\\t}\\n        Iterator<Integer> itr=set.iterator();\\n\\t\\twhile (itr.hasNext()) {\\n\\t\\t\\tnums[k++]=itr.next();\\n\\t\\t}\\n\\t\\treturn set.size();\\n    }"
                    },
                    {
                        "username": "ColeWheatley",
                        "content": "So I answered it as expected, read the comments, got real lazy and just wrote a for loop rewriting the \"nums\" input over with my output array, then I returned  just the output array\\'s length. Their problem goes back and checks the first \"returned\" entries into the overwritten nums array. GL"
                    },
                    {
                        "username": "shoaib599",
                        "content": "Here we dont have to sort the array we just need to return how many elements are unique in that array so what we\\'ll do here we will keep a pointer j=1 then we will itterate the whole array and we will increase the pointer as we will get any unique element there for eg increase the pointer when nums[i]!=nums[i+1] and at last return the pointer "
                    },
                    {
                        "username": "deepak130797",
                        "content": "very question this is you only have to do push all the elements in set and return the size of set "
                    },
                    {
                        "username": "shruti02",
                        "content": "My solution is taking 92ms.  \\n\\n result = 0\\n        for i in range(len(nums)):\\n            if nums[i] > nums[result]:\\n                result = result + 1\\n                nums[result] = nums[i]\\n        return result + 1"
                    }
                ]
            },
            {
                "id": 1723856,
                "content": [
                    {
                        "username": "akashanand282",
                        "content": "can someone tell me whats wrong with this.....for the testcase [1,1] its showing runtime error.\\n\\nint i = 0, j = 1;\\n       while (i < j && j < nums.size())\\n       {\\n           if (nums[i] == nums[j])\\n           {\\n               j++;\\n           }\\n           if (nums[i] != nums[j])\\n           {\\n               i++;\\n               nums[i] = nums[j];\\n               j++;\\n           }\\n       }\\n       return i+1; "
                    },
                    {
                        "username": "jyotipp98",
                        "content": "I have confusion what i need to return exactly unique array or number of elements in array?"
                    },
                    {
                        "username": "Brayheart",
                        "content": "dude what is happening, my return statements are all returning an empty array even when explicitly returning a string or something. I don\\'t understand how this function is operating, what am I missing here?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "I had the same problem at first and it was freaking me out \\uD83D\\uDE05\\n\\nThe thing is that we do not have to return the array, we have to return just a number of unique elements in the resulting array. But what is the most important is that we have also mutate the provided array in the way that all the repeated elements are removed, so all the first elements in the array are unique. Is a bit confusing the description of the problem, but after I figured it out it kinda makes sense. The most important in this task is to mutate correctly the original array. Good luck! \\uD83D\\uDE4C"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "https://github.com/AnkushRawat10601/Leetcode/blob/main/26_remove_the_duplicates.cpp\\nleave a STAR"
                    },
                    {
                        "username": "charanrai",
                        "content": "C++ clean solution. can be use same logic for many such questions\n\n `    int removeDuplicates(vector<int>& nums) {\n        int j = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            \n            if (nums[j] != nums[i]){\n                ++j;\n                swap(nums[j], nums[i]);\n            }\n        }\n        return j+1;\n    }`"
                    },
                    {
                        "username": "aakash_singh1708",
                        "content": "Simple Java Solution Runtime 3 ms\\n `your inline code...your inline code...`public int removeDuplicates(int[] nums) {\\n        LinkedHashSet<Integer> set=new LinkedHashSet<>();\\n        int k=0;\\n\\t\\tfor(int i=0;i<nums.length;i++) {\\n\\t\\t\\tset.add(nums[i]);\\n\\t\\t}\\n        Iterator<Integer> itr=set.iterator();\\n\\t\\twhile (itr.hasNext()) {\\n\\t\\t\\tnums[k++]=itr.next();\\n\\t\\t}\\n\\t\\treturn set.size();\\n    }"
                    },
                    {
                        "username": "ColeWheatley",
                        "content": "So I answered it as expected, read the comments, got real lazy and just wrote a for loop rewriting the \"nums\" input over with my output array, then I returned  just the output array\\'s length. Their problem goes back and checks the first \"returned\" entries into the overwritten nums array. GL"
                    },
                    {
                        "username": "shoaib599",
                        "content": "Here we dont have to sort the array we just need to return how many elements are unique in that array so what we\\'ll do here we will keep a pointer j=1 then we will itterate the whole array and we will increase the pointer as we will get any unique element there for eg increase the pointer when nums[i]!=nums[i+1] and at last return the pointer "
                    },
                    {
                        "username": "deepak130797",
                        "content": "very question this is you only have to do push all the elements in set and return the size of set "
                    },
                    {
                        "username": "shruti02",
                        "content": "My solution is taking 92ms.  \\n\\n result = 0\\n        for i in range(len(nums)):\\n            if nums[i] > nums[result]:\\n                result = result + 1\\n                nums[result] = nums[i]\\n        return result + 1"
                    }
                ]
            },
            {
                "id": 1723002,
                "content": [
                    {
                        "username": "akashanand282",
                        "content": "can someone tell me whats wrong with this.....for the testcase [1,1] its showing runtime error.\\n\\nint i = 0, j = 1;\\n       while (i < j && j < nums.size())\\n       {\\n           if (nums[i] == nums[j])\\n           {\\n               j++;\\n           }\\n           if (nums[i] != nums[j])\\n           {\\n               i++;\\n               nums[i] = nums[j];\\n               j++;\\n           }\\n       }\\n       return i+1; "
                    },
                    {
                        "username": "jyotipp98",
                        "content": "I have confusion what i need to return exactly unique array or number of elements in array?"
                    },
                    {
                        "username": "Brayheart",
                        "content": "dude what is happening, my return statements are all returning an empty array even when explicitly returning a string or something. I don\\'t understand how this function is operating, what am I missing here?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "I had the same problem at first and it was freaking me out \\uD83D\\uDE05\\n\\nThe thing is that we do not have to return the array, we have to return just a number of unique elements in the resulting array. But what is the most important is that we have also mutate the provided array in the way that all the repeated elements are removed, so all the first elements in the array are unique. Is a bit confusing the description of the problem, but after I figured it out it kinda makes sense. The most important in this task is to mutate correctly the original array. Good luck! \\uD83D\\uDE4C"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "https://github.com/AnkushRawat10601/Leetcode/blob/main/26_remove_the_duplicates.cpp\\nleave a STAR"
                    },
                    {
                        "username": "charanrai",
                        "content": "C++ clean solution. can be use same logic for many such questions\n\n `    int removeDuplicates(vector<int>& nums) {\n        int j = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            \n            if (nums[j] != nums[i]){\n                ++j;\n                swap(nums[j], nums[i]);\n            }\n        }\n        return j+1;\n    }`"
                    },
                    {
                        "username": "aakash_singh1708",
                        "content": "Simple Java Solution Runtime 3 ms\\n `your inline code...your inline code...`public int removeDuplicates(int[] nums) {\\n        LinkedHashSet<Integer> set=new LinkedHashSet<>();\\n        int k=0;\\n\\t\\tfor(int i=0;i<nums.length;i++) {\\n\\t\\t\\tset.add(nums[i]);\\n\\t\\t}\\n        Iterator<Integer> itr=set.iterator();\\n\\t\\twhile (itr.hasNext()) {\\n\\t\\t\\tnums[k++]=itr.next();\\n\\t\\t}\\n\\t\\treturn set.size();\\n    }"
                    },
                    {
                        "username": "ColeWheatley",
                        "content": "So I answered it as expected, read the comments, got real lazy and just wrote a for loop rewriting the \"nums\" input over with my output array, then I returned  just the output array\\'s length. Their problem goes back and checks the first \"returned\" entries into the overwritten nums array. GL"
                    },
                    {
                        "username": "shoaib599",
                        "content": "Here we dont have to sort the array we just need to return how many elements are unique in that array so what we\\'ll do here we will keep a pointer j=1 then we will itterate the whole array and we will increase the pointer as we will get any unique element there for eg increase the pointer when nums[i]!=nums[i+1] and at last return the pointer "
                    },
                    {
                        "username": "deepak130797",
                        "content": "very question this is you only have to do push all the elements in set and return the size of set "
                    },
                    {
                        "username": "shruti02",
                        "content": "My solution is taking 92ms.  \\n\\n result = 0\\n        for i in range(len(nums)):\\n            if nums[i] > nums[result]:\\n                result = result + 1\\n                nums[result] = nums[i]\\n        return result + 1"
                    }
                ]
            },
            {
                "id": 1722150,
                "content": [
                    {
                        "username": "akashanand282",
                        "content": "can someone tell me whats wrong with this.....for the testcase [1,1] its showing runtime error.\\n\\nint i = 0, j = 1;\\n       while (i < j && j < nums.size())\\n       {\\n           if (nums[i] == nums[j])\\n           {\\n               j++;\\n           }\\n           if (nums[i] != nums[j])\\n           {\\n               i++;\\n               nums[i] = nums[j];\\n               j++;\\n           }\\n       }\\n       return i+1; "
                    },
                    {
                        "username": "jyotipp98",
                        "content": "I have confusion what i need to return exactly unique array or number of elements in array?"
                    },
                    {
                        "username": "Brayheart",
                        "content": "dude what is happening, my return statements are all returning an empty array even when explicitly returning a string or something. I don\\'t understand how this function is operating, what am I missing here?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "I had the same problem at first and it was freaking me out \\uD83D\\uDE05\\n\\nThe thing is that we do not have to return the array, we have to return just a number of unique elements in the resulting array. But what is the most important is that we have also mutate the provided array in the way that all the repeated elements are removed, so all the first elements in the array are unique. Is a bit confusing the description of the problem, but after I figured it out it kinda makes sense. The most important in this task is to mutate correctly the original array. Good luck! \\uD83D\\uDE4C"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "https://github.com/AnkushRawat10601/Leetcode/blob/main/26_remove_the_duplicates.cpp\\nleave a STAR"
                    },
                    {
                        "username": "charanrai",
                        "content": "C++ clean solution. can be use same logic for many such questions\n\n `    int removeDuplicates(vector<int>& nums) {\n        int j = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            \n            if (nums[j] != nums[i]){\n                ++j;\n                swap(nums[j], nums[i]);\n            }\n        }\n        return j+1;\n    }`"
                    },
                    {
                        "username": "aakash_singh1708",
                        "content": "Simple Java Solution Runtime 3 ms\\n `your inline code...your inline code...`public int removeDuplicates(int[] nums) {\\n        LinkedHashSet<Integer> set=new LinkedHashSet<>();\\n        int k=0;\\n\\t\\tfor(int i=0;i<nums.length;i++) {\\n\\t\\t\\tset.add(nums[i]);\\n\\t\\t}\\n        Iterator<Integer> itr=set.iterator();\\n\\t\\twhile (itr.hasNext()) {\\n\\t\\t\\tnums[k++]=itr.next();\\n\\t\\t}\\n\\t\\treturn set.size();\\n    }"
                    },
                    {
                        "username": "ColeWheatley",
                        "content": "So I answered it as expected, read the comments, got real lazy and just wrote a for loop rewriting the \"nums\" input over with my output array, then I returned  just the output array\\'s length. Their problem goes back and checks the first \"returned\" entries into the overwritten nums array. GL"
                    },
                    {
                        "username": "shoaib599",
                        "content": "Here we dont have to sort the array we just need to return how many elements are unique in that array so what we\\'ll do here we will keep a pointer j=1 then we will itterate the whole array and we will increase the pointer as we will get any unique element there for eg increase the pointer when nums[i]!=nums[i+1] and at last return the pointer "
                    },
                    {
                        "username": "deepak130797",
                        "content": "very question this is you only have to do push all the elements in set and return the size of set "
                    },
                    {
                        "username": "shruti02",
                        "content": "My solution is taking 92ms.  \\n\\n result = 0\\n        for i in range(len(nums)):\\n            if nums[i] > nums[result]:\\n                result = result + 1\\n                nums[result] = nums[i]\\n        return result + 1"
                    }
                ]
            },
            {
                "id": 1721567,
                "content": [
                    {
                        "username": "akashanand282",
                        "content": "can someone tell me whats wrong with this.....for the testcase [1,1] its showing runtime error.\\n\\nint i = 0, j = 1;\\n       while (i < j && j < nums.size())\\n       {\\n           if (nums[i] == nums[j])\\n           {\\n               j++;\\n           }\\n           if (nums[i] != nums[j])\\n           {\\n               i++;\\n               nums[i] = nums[j];\\n               j++;\\n           }\\n       }\\n       return i+1; "
                    },
                    {
                        "username": "jyotipp98",
                        "content": "I have confusion what i need to return exactly unique array or number of elements in array?"
                    },
                    {
                        "username": "Brayheart",
                        "content": "dude what is happening, my return statements are all returning an empty array even when explicitly returning a string or something. I don\\'t understand how this function is operating, what am I missing here?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "I had the same problem at first and it was freaking me out \\uD83D\\uDE05\\n\\nThe thing is that we do not have to return the array, we have to return just a number of unique elements in the resulting array. But what is the most important is that we have also mutate the provided array in the way that all the repeated elements are removed, so all the first elements in the array are unique. Is a bit confusing the description of the problem, but after I figured it out it kinda makes sense. The most important in this task is to mutate correctly the original array. Good luck! \\uD83D\\uDE4C"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "https://github.com/AnkushRawat10601/Leetcode/blob/main/26_remove_the_duplicates.cpp\\nleave a STAR"
                    },
                    {
                        "username": "charanrai",
                        "content": "C++ clean solution. can be use same logic for many such questions\n\n `    int removeDuplicates(vector<int>& nums) {\n        int j = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            \n            if (nums[j] != nums[i]){\n                ++j;\n                swap(nums[j], nums[i]);\n            }\n        }\n        return j+1;\n    }`"
                    },
                    {
                        "username": "aakash_singh1708",
                        "content": "Simple Java Solution Runtime 3 ms\\n `your inline code...your inline code...`public int removeDuplicates(int[] nums) {\\n        LinkedHashSet<Integer> set=new LinkedHashSet<>();\\n        int k=0;\\n\\t\\tfor(int i=0;i<nums.length;i++) {\\n\\t\\t\\tset.add(nums[i]);\\n\\t\\t}\\n        Iterator<Integer> itr=set.iterator();\\n\\t\\twhile (itr.hasNext()) {\\n\\t\\t\\tnums[k++]=itr.next();\\n\\t\\t}\\n\\t\\treturn set.size();\\n    }"
                    },
                    {
                        "username": "ColeWheatley",
                        "content": "So I answered it as expected, read the comments, got real lazy and just wrote a for loop rewriting the \"nums\" input over with my output array, then I returned  just the output array\\'s length. Their problem goes back and checks the first \"returned\" entries into the overwritten nums array. GL"
                    },
                    {
                        "username": "shoaib599",
                        "content": "Here we dont have to sort the array we just need to return how many elements are unique in that array so what we\\'ll do here we will keep a pointer j=1 then we will itterate the whole array and we will increase the pointer as we will get any unique element there for eg increase the pointer when nums[i]!=nums[i+1] and at last return the pointer "
                    },
                    {
                        "username": "deepak130797",
                        "content": "very question this is you only have to do push all the elements in set and return the size of set "
                    },
                    {
                        "username": "shruti02",
                        "content": "My solution is taking 92ms.  \\n\\n result = 0\\n        for i in range(len(nums)):\\n            if nums[i] > nums[result]:\\n                result = result + 1\\n                nums[result] = nums[i]\\n        return result + 1"
                    }
                ]
            },
            {
                "id": 1719047,
                "content": [
                    {
                        "username": "akashanand282",
                        "content": "can someone tell me whats wrong with this.....for the testcase [1,1] its showing runtime error.\\n\\nint i = 0, j = 1;\\n       while (i < j && j < nums.size())\\n       {\\n           if (nums[i] == nums[j])\\n           {\\n               j++;\\n           }\\n           if (nums[i] != nums[j])\\n           {\\n               i++;\\n               nums[i] = nums[j];\\n               j++;\\n           }\\n       }\\n       return i+1; "
                    },
                    {
                        "username": "jyotipp98",
                        "content": "I have confusion what i need to return exactly unique array or number of elements in array?"
                    },
                    {
                        "username": "Brayheart",
                        "content": "dude what is happening, my return statements are all returning an empty array even when explicitly returning a string or something. I don\\'t understand how this function is operating, what am I missing here?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "I had the same problem at first and it was freaking me out \\uD83D\\uDE05\\n\\nThe thing is that we do not have to return the array, we have to return just a number of unique elements in the resulting array. But what is the most important is that we have also mutate the provided array in the way that all the repeated elements are removed, so all the first elements in the array are unique. Is a bit confusing the description of the problem, but after I figured it out it kinda makes sense. The most important in this task is to mutate correctly the original array. Good luck! \\uD83D\\uDE4C"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "https://github.com/AnkushRawat10601/Leetcode/blob/main/26_remove_the_duplicates.cpp\\nleave a STAR"
                    },
                    {
                        "username": "charanrai",
                        "content": "C++ clean solution. can be use same logic for many such questions\n\n `    int removeDuplicates(vector<int>& nums) {\n        int j = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            \n            if (nums[j] != nums[i]){\n                ++j;\n                swap(nums[j], nums[i]);\n            }\n        }\n        return j+1;\n    }`"
                    },
                    {
                        "username": "aakash_singh1708",
                        "content": "Simple Java Solution Runtime 3 ms\\n `your inline code...your inline code...`public int removeDuplicates(int[] nums) {\\n        LinkedHashSet<Integer> set=new LinkedHashSet<>();\\n        int k=0;\\n\\t\\tfor(int i=0;i<nums.length;i++) {\\n\\t\\t\\tset.add(nums[i]);\\n\\t\\t}\\n        Iterator<Integer> itr=set.iterator();\\n\\t\\twhile (itr.hasNext()) {\\n\\t\\t\\tnums[k++]=itr.next();\\n\\t\\t}\\n\\t\\treturn set.size();\\n    }"
                    },
                    {
                        "username": "ColeWheatley",
                        "content": "So I answered it as expected, read the comments, got real lazy and just wrote a for loop rewriting the \"nums\" input over with my output array, then I returned  just the output array\\'s length. Their problem goes back and checks the first \"returned\" entries into the overwritten nums array. GL"
                    },
                    {
                        "username": "shoaib599",
                        "content": "Here we dont have to sort the array we just need to return how many elements are unique in that array so what we\\'ll do here we will keep a pointer j=1 then we will itterate the whole array and we will increase the pointer as we will get any unique element there for eg increase the pointer when nums[i]!=nums[i+1] and at last return the pointer "
                    },
                    {
                        "username": "deepak130797",
                        "content": "very question this is you only have to do push all the elements in set and return the size of set "
                    },
                    {
                        "username": "shruti02",
                        "content": "My solution is taking 92ms.  \\n\\n result = 0\\n        for i in range(len(nums)):\\n            if nums[i] > nums[result]:\\n                result = result + 1\\n                nums[result] = nums[i]\\n        return result + 1"
                    }
                ]
            },
            {
                "id": 1716802,
                "content": [
                    {
                        "username": "akashanand282",
                        "content": "can someone tell me whats wrong with this.....for the testcase [1,1] its showing runtime error.\\n\\nint i = 0, j = 1;\\n       while (i < j && j < nums.size())\\n       {\\n           if (nums[i] == nums[j])\\n           {\\n               j++;\\n           }\\n           if (nums[i] != nums[j])\\n           {\\n               i++;\\n               nums[i] = nums[j];\\n               j++;\\n           }\\n       }\\n       return i+1; "
                    },
                    {
                        "username": "jyotipp98",
                        "content": "I have confusion what i need to return exactly unique array or number of elements in array?"
                    },
                    {
                        "username": "Brayheart",
                        "content": "dude what is happening, my return statements are all returning an empty array even when explicitly returning a string or something. I don\\'t understand how this function is operating, what am I missing here?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "I had the same problem at first and it was freaking me out \\uD83D\\uDE05\\n\\nThe thing is that we do not have to return the array, we have to return just a number of unique elements in the resulting array. But what is the most important is that we have also mutate the provided array in the way that all the repeated elements are removed, so all the first elements in the array are unique. Is a bit confusing the description of the problem, but after I figured it out it kinda makes sense. The most important in this task is to mutate correctly the original array. Good luck! \\uD83D\\uDE4C"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "https://github.com/AnkushRawat10601/Leetcode/blob/main/26_remove_the_duplicates.cpp\\nleave a STAR"
                    },
                    {
                        "username": "charanrai",
                        "content": "C++ clean solution. can be use same logic for many such questions\n\n `    int removeDuplicates(vector<int>& nums) {\n        int j = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            \n            if (nums[j] != nums[i]){\n                ++j;\n                swap(nums[j], nums[i]);\n            }\n        }\n        return j+1;\n    }`"
                    },
                    {
                        "username": "aakash_singh1708",
                        "content": "Simple Java Solution Runtime 3 ms\\n `your inline code...your inline code...`public int removeDuplicates(int[] nums) {\\n        LinkedHashSet<Integer> set=new LinkedHashSet<>();\\n        int k=0;\\n\\t\\tfor(int i=0;i<nums.length;i++) {\\n\\t\\t\\tset.add(nums[i]);\\n\\t\\t}\\n        Iterator<Integer> itr=set.iterator();\\n\\t\\twhile (itr.hasNext()) {\\n\\t\\t\\tnums[k++]=itr.next();\\n\\t\\t}\\n\\t\\treturn set.size();\\n    }"
                    },
                    {
                        "username": "ColeWheatley",
                        "content": "So I answered it as expected, read the comments, got real lazy and just wrote a for loop rewriting the \"nums\" input over with my output array, then I returned  just the output array\\'s length. Their problem goes back and checks the first \"returned\" entries into the overwritten nums array. GL"
                    },
                    {
                        "username": "shoaib599",
                        "content": "Here we dont have to sort the array we just need to return how many elements are unique in that array so what we\\'ll do here we will keep a pointer j=1 then we will itterate the whole array and we will increase the pointer as we will get any unique element there for eg increase the pointer when nums[i]!=nums[i+1] and at last return the pointer "
                    },
                    {
                        "username": "deepak130797",
                        "content": "very question this is you only have to do push all the elements in set and return the size of set "
                    },
                    {
                        "username": "shruti02",
                        "content": "My solution is taking 92ms.  \\n\\n result = 0\\n        for i in range(len(nums)):\\n            if nums[i] > nums[result]:\\n                result = result + 1\\n                nums[result] = nums[i]\\n        return result + 1"
                    }
                ]
            },
            {
                "id": 1715966,
                "content": [
                    {
                        "username": "akashanand282",
                        "content": "can someone tell me whats wrong with this.....for the testcase [1,1] its showing runtime error.\\n\\nint i = 0, j = 1;\\n       while (i < j && j < nums.size())\\n       {\\n           if (nums[i] == nums[j])\\n           {\\n               j++;\\n           }\\n           if (nums[i] != nums[j])\\n           {\\n               i++;\\n               nums[i] = nums[j];\\n               j++;\\n           }\\n       }\\n       return i+1; "
                    },
                    {
                        "username": "jyotipp98",
                        "content": "I have confusion what i need to return exactly unique array or number of elements in array?"
                    },
                    {
                        "username": "Brayheart",
                        "content": "dude what is happening, my return statements are all returning an empty array even when explicitly returning a string or something. I don\\'t understand how this function is operating, what am I missing here?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "I had the same problem at first and it was freaking me out \\uD83D\\uDE05\\n\\nThe thing is that we do not have to return the array, we have to return just a number of unique elements in the resulting array. But what is the most important is that we have also mutate the provided array in the way that all the repeated elements are removed, so all the first elements in the array are unique. Is a bit confusing the description of the problem, but after I figured it out it kinda makes sense. The most important in this task is to mutate correctly the original array. Good luck! \\uD83D\\uDE4C"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "https://github.com/AnkushRawat10601/Leetcode/blob/main/26_remove_the_duplicates.cpp\\nleave a STAR"
                    },
                    {
                        "username": "charanrai",
                        "content": "C++ clean solution. can be use same logic for many such questions\n\n `    int removeDuplicates(vector<int>& nums) {\n        int j = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            \n            if (nums[j] != nums[i]){\n                ++j;\n                swap(nums[j], nums[i]);\n            }\n        }\n        return j+1;\n    }`"
                    },
                    {
                        "username": "aakash_singh1708",
                        "content": "Simple Java Solution Runtime 3 ms\\n `your inline code...your inline code...`public int removeDuplicates(int[] nums) {\\n        LinkedHashSet<Integer> set=new LinkedHashSet<>();\\n        int k=0;\\n\\t\\tfor(int i=0;i<nums.length;i++) {\\n\\t\\t\\tset.add(nums[i]);\\n\\t\\t}\\n        Iterator<Integer> itr=set.iterator();\\n\\t\\twhile (itr.hasNext()) {\\n\\t\\t\\tnums[k++]=itr.next();\\n\\t\\t}\\n\\t\\treturn set.size();\\n    }"
                    },
                    {
                        "username": "ColeWheatley",
                        "content": "So I answered it as expected, read the comments, got real lazy and just wrote a for loop rewriting the \"nums\" input over with my output array, then I returned  just the output array\\'s length. Their problem goes back and checks the first \"returned\" entries into the overwritten nums array. GL"
                    },
                    {
                        "username": "shoaib599",
                        "content": "Here we dont have to sort the array we just need to return how many elements are unique in that array so what we\\'ll do here we will keep a pointer j=1 then we will itterate the whole array and we will increase the pointer as we will get any unique element there for eg increase the pointer when nums[i]!=nums[i+1] and at last return the pointer "
                    },
                    {
                        "username": "deepak130797",
                        "content": "very question this is you only have to do push all the elements in set and return the size of set "
                    },
                    {
                        "username": "shruti02",
                        "content": "My solution is taking 92ms.  \\n\\n result = 0\\n        for i in range(len(nums)):\\n            if nums[i] > nums[result]:\\n                result = result + 1\\n                nums[result] = nums[i]\\n        return result + 1"
                    }
                ]
            },
            {
                "id": 1715850,
                "content": [
                    {
                        "username": "akashanand282",
                        "content": "can someone tell me whats wrong with this.....for the testcase [1,1] its showing runtime error.\\n\\nint i = 0, j = 1;\\n       while (i < j && j < nums.size())\\n       {\\n           if (nums[i] == nums[j])\\n           {\\n               j++;\\n           }\\n           if (nums[i] != nums[j])\\n           {\\n               i++;\\n               nums[i] = nums[j];\\n               j++;\\n           }\\n       }\\n       return i+1; "
                    },
                    {
                        "username": "jyotipp98",
                        "content": "I have confusion what i need to return exactly unique array or number of elements in array?"
                    },
                    {
                        "username": "Brayheart",
                        "content": "dude what is happening, my return statements are all returning an empty array even when explicitly returning a string or something. I don\\'t understand how this function is operating, what am I missing here?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "I had the same problem at first and it was freaking me out \\uD83D\\uDE05\\n\\nThe thing is that we do not have to return the array, we have to return just a number of unique elements in the resulting array. But what is the most important is that we have also mutate the provided array in the way that all the repeated elements are removed, so all the first elements in the array are unique. Is a bit confusing the description of the problem, but after I figured it out it kinda makes sense. The most important in this task is to mutate correctly the original array. Good luck! \\uD83D\\uDE4C"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "https://github.com/AnkushRawat10601/Leetcode/blob/main/26_remove_the_duplicates.cpp\\nleave a STAR"
                    },
                    {
                        "username": "charanrai",
                        "content": "C++ clean solution. can be use same logic for many such questions\n\n `    int removeDuplicates(vector<int>& nums) {\n        int j = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            \n            if (nums[j] != nums[i]){\n                ++j;\n                swap(nums[j], nums[i]);\n            }\n        }\n        return j+1;\n    }`"
                    },
                    {
                        "username": "aakash_singh1708",
                        "content": "Simple Java Solution Runtime 3 ms\\n `your inline code...your inline code...`public int removeDuplicates(int[] nums) {\\n        LinkedHashSet<Integer> set=new LinkedHashSet<>();\\n        int k=0;\\n\\t\\tfor(int i=0;i<nums.length;i++) {\\n\\t\\t\\tset.add(nums[i]);\\n\\t\\t}\\n        Iterator<Integer> itr=set.iterator();\\n\\t\\twhile (itr.hasNext()) {\\n\\t\\t\\tnums[k++]=itr.next();\\n\\t\\t}\\n\\t\\treturn set.size();\\n    }"
                    },
                    {
                        "username": "ColeWheatley",
                        "content": "So I answered it as expected, read the comments, got real lazy and just wrote a for loop rewriting the \"nums\" input over with my output array, then I returned  just the output array\\'s length. Their problem goes back and checks the first \"returned\" entries into the overwritten nums array. GL"
                    },
                    {
                        "username": "shoaib599",
                        "content": "Here we dont have to sort the array we just need to return how many elements are unique in that array so what we\\'ll do here we will keep a pointer j=1 then we will itterate the whole array and we will increase the pointer as we will get any unique element there for eg increase the pointer when nums[i]!=nums[i+1] and at last return the pointer "
                    },
                    {
                        "username": "deepak130797",
                        "content": "very question this is you only have to do push all the elements in set and return the size of set "
                    },
                    {
                        "username": "shruti02",
                        "content": "My solution is taking 92ms.  \\n\\n result = 0\\n        for i in range(len(nums)):\\n            if nums[i] > nums[result]:\\n                result = result + 1\\n                nums[result] = nums[i]\\n        return result + 1"
                    }
                ]
            },
            {
                "id": 1711344,
                "content": [
                    {
                        "username": "akashanand282",
                        "content": "can someone tell me whats wrong with this.....for the testcase [1,1] its showing runtime error.\\n\\nint i = 0, j = 1;\\n       while (i < j && j < nums.size())\\n       {\\n           if (nums[i] == nums[j])\\n           {\\n               j++;\\n           }\\n           if (nums[i] != nums[j])\\n           {\\n               i++;\\n               nums[i] = nums[j];\\n               j++;\\n           }\\n       }\\n       return i+1; "
                    },
                    {
                        "username": "jyotipp98",
                        "content": "I have confusion what i need to return exactly unique array or number of elements in array?"
                    },
                    {
                        "username": "Brayheart",
                        "content": "dude what is happening, my return statements are all returning an empty array even when explicitly returning a string or something. I don\\'t understand how this function is operating, what am I missing here?"
                    },
                    {
                        "username": "KovDimaY",
                        "content": "I had the same problem at first and it was freaking me out \\uD83D\\uDE05\\n\\nThe thing is that we do not have to return the array, we have to return just a number of unique elements in the resulting array. But what is the most important is that we have also mutate the provided array in the way that all the repeated elements are removed, so all the first elements in the array are unique. Is a bit confusing the description of the problem, but after I figured it out it kinda makes sense. The most important in this task is to mutate correctly the original array. Good luck! \\uD83D\\uDE4C"
                    },
                    {
                        "username": "AnkushR10",
                        "content": "https://github.com/AnkushRawat10601/Leetcode/blob/main/26_remove_the_duplicates.cpp\\nleave a STAR"
                    },
                    {
                        "username": "charanrai",
                        "content": "C++ clean solution. can be use same logic for many such questions\n\n `    int removeDuplicates(vector<int>& nums) {\n        int j = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            \n            if (nums[j] != nums[i]){\n                ++j;\n                swap(nums[j], nums[i]);\n            }\n        }\n        return j+1;\n    }`"
                    },
                    {
                        "username": "aakash_singh1708",
                        "content": "Simple Java Solution Runtime 3 ms\\n `your inline code...your inline code...`public int removeDuplicates(int[] nums) {\\n        LinkedHashSet<Integer> set=new LinkedHashSet<>();\\n        int k=0;\\n\\t\\tfor(int i=0;i<nums.length;i++) {\\n\\t\\t\\tset.add(nums[i]);\\n\\t\\t}\\n        Iterator<Integer> itr=set.iterator();\\n\\t\\twhile (itr.hasNext()) {\\n\\t\\t\\tnums[k++]=itr.next();\\n\\t\\t}\\n\\t\\treturn set.size();\\n    }"
                    },
                    {
                        "username": "ColeWheatley",
                        "content": "So I answered it as expected, read the comments, got real lazy and just wrote a for loop rewriting the \"nums\" input over with my output array, then I returned  just the output array\\'s length. Their problem goes back and checks the first \"returned\" entries into the overwritten nums array. GL"
                    },
                    {
                        "username": "shoaib599",
                        "content": "Here we dont have to sort the array we just need to return how many elements are unique in that array so what we\\'ll do here we will keep a pointer j=1 then we will itterate the whole array and we will increase the pointer as we will get any unique element there for eg increase the pointer when nums[i]!=nums[i+1] and at last return the pointer "
                    },
                    {
                        "username": "deepak130797",
                        "content": "very question this is you only have to do push all the elements in set and return the size of set "
                    },
                    {
                        "username": "shruti02",
                        "content": "My solution is taking 92ms.  \\n\\n result = 0\\n        for i in range(len(nums)):\\n            if nums[i] > nums[result]:\\n                result = result + 1\\n                nums[result] = nums[i]\\n        return result + 1"
                    }
                ]
            },
            {
                "id": 1710016,
                "content": [
                    {
                        "username": "vivekchaudhary22",
                        "content": " `class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n     set<int> s(nums.begin(),nums.end());\\n     nums.assign(s.begin(),s.end());\\n     int k=s.size();\\n     return k;\\n    }\\n};`"
                    },
                    {
                        "username": "Pritesh_Bagaria",
                        "content": "nums = list(set(nums))\\nthis works fine in editor but here this solution is not getting accepted and shows different o/p. can somebody throw some light on this?"
                    },
                    {
                        "username": "Kamal_Moha",
                        "content": "My code executes and returns the correct answer, but Leetcode refuses for whatever reason & I\\'m just confused\\n ``def removeDuplicates(nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        lst = []\\n        i = 0\\n        while i < len(nums):\\n            if nums[i] not in nums[i+1:]:\\n                lst.append(nums[i])\\n            i += 1\\n        return lst``\\n\\nI get a TypeError and I don\\'t understand why.\\n\\n`TypeError: [1, 2] is not valid value for the expected return type integer[]\\n    raise TypeError(str(ret) + \" is not valid value for the expected return type integer[]\");\\nLine 40 in _driver (Solution.py)\\n    _driver()\\nLine 46 in <module> (Solution.py)`\\n\\nPlz help"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "reton2008",
                        "content": "The description is tricky, they said removing duplicates return the result as in case 1 but in second case they count the number of unique integers only. so ans hidden in case 2 all other informations are just done for creating confusion."
                    },
                    {
                        "username": "shabareesharyan",
                        "content": "\n\n\n    def removeDuplicates(self, nums: List[int]) -> int:\n\n        nums[:] = set(nums)\n\n        nums[:] = sorted(nums)\n\n        return len(nums)"
                    },
                    {
                        "username": "vishnusuresh1995",
                        "content": "Why is expected output [1] when input is [1,1]. Shouldn\\'t the output also be [1,1]. could someone please explain?"
                    },
                    {
                        "username": "izam-mohammed",
                        "content": "I am really confused about this question. What should I return in this. The new array or the length of it ?"
                    },
                    {
                        "username": "SaiSusshanth",
                        "content": "Try making changes to the given array, the judge in this situation checks the array as well as the answer so the values in the array also need to changed."
                    },
                    {
                        "username": "shindepranav820",
                        "content": "Please let me know what is going wrong with my solution.\\n \\nlet expectedNums = []\\n  for (let i = 0; i < nums.length; i++) {\\n      if (!expectedNums.includes(nums[i])) {\\n          expectedNums.push(nums[i])\\n      }\\n  }\\n return expectedNums.length"
                    },
                    {
                        "username": "ankurdahiya",
                        "content": "my code is working fine on my pc but getting runtime error on leetcode why?\\n\\nc++\\n\\nclass Solution {\\npublic:\\nint removeDuplicates(vector& nums) {\\nif(nums.size()==0){return 0;}\\nint tempnum,k = 0;\\nfor(int i = 0;i<nums.size();i++){\\nk++;\\ntempnum = nums[i];\\nlong long int j = i+1;\\nwhile(!(tempnum<nums[j]) && j<nums.size()){\\nj++;\\n}\\nif(j<nums.size()){\\nnums[i+1] = nums[j];\\n}\\nelse{\\nbreak;\\n}\\n}\\nreturn k;\\n}\\n};"
                    }
                ]
            },
            {
                "id": 1706757,
                "content": [
                    {
                        "username": "vivekchaudhary22",
                        "content": " `class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n     set<int> s(nums.begin(),nums.end());\\n     nums.assign(s.begin(),s.end());\\n     int k=s.size();\\n     return k;\\n    }\\n};`"
                    },
                    {
                        "username": "Pritesh_Bagaria",
                        "content": "nums = list(set(nums))\\nthis works fine in editor but here this solution is not getting accepted and shows different o/p. can somebody throw some light on this?"
                    },
                    {
                        "username": "Kamal_Moha",
                        "content": "My code executes and returns the correct answer, but Leetcode refuses for whatever reason & I\\'m just confused\\n ``def removeDuplicates(nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        lst = []\\n        i = 0\\n        while i < len(nums):\\n            if nums[i] not in nums[i+1:]:\\n                lst.append(nums[i])\\n            i += 1\\n        return lst``\\n\\nI get a TypeError and I don\\'t understand why.\\n\\n`TypeError: [1, 2] is not valid value for the expected return type integer[]\\n    raise TypeError(str(ret) + \" is not valid value for the expected return type integer[]\");\\nLine 40 in _driver (Solution.py)\\n    _driver()\\nLine 46 in <module> (Solution.py)`\\n\\nPlz help"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "reton2008",
                        "content": "The description is tricky, they said removing duplicates return the result as in case 1 but in second case they count the number of unique integers only. so ans hidden in case 2 all other informations are just done for creating confusion."
                    },
                    {
                        "username": "shabareesharyan",
                        "content": "\n\n\n    def removeDuplicates(self, nums: List[int]) -> int:\n\n        nums[:] = set(nums)\n\n        nums[:] = sorted(nums)\n\n        return len(nums)"
                    },
                    {
                        "username": "vishnusuresh1995",
                        "content": "Why is expected output [1] when input is [1,1]. Shouldn\\'t the output also be [1,1]. could someone please explain?"
                    },
                    {
                        "username": "izam-mohammed",
                        "content": "I am really confused about this question. What should I return in this. The new array or the length of it ?"
                    },
                    {
                        "username": "SaiSusshanth",
                        "content": "Try making changes to the given array, the judge in this situation checks the array as well as the answer so the values in the array also need to changed."
                    },
                    {
                        "username": "shindepranav820",
                        "content": "Please let me know what is going wrong with my solution.\\n \\nlet expectedNums = []\\n  for (let i = 0; i < nums.length; i++) {\\n      if (!expectedNums.includes(nums[i])) {\\n          expectedNums.push(nums[i])\\n      }\\n  }\\n return expectedNums.length"
                    },
                    {
                        "username": "ankurdahiya",
                        "content": "my code is working fine on my pc but getting runtime error on leetcode why?\\n\\nc++\\n\\nclass Solution {\\npublic:\\nint removeDuplicates(vector& nums) {\\nif(nums.size()==0){return 0;}\\nint tempnum,k = 0;\\nfor(int i = 0;i<nums.size();i++){\\nk++;\\ntempnum = nums[i];\\nlong long int j = i+1;\\nwhile(!(tempnum<nums[j]) && j<nums.size()){\\nj++;\\n}\\nif(j<nums.size()){\\nnums[i+1] = nums[j];\\n}\\nelse{\\nbreak;\\n}\\n}\\nreturn k;\\n}\\n};"
                    }
                ]
            },
            {
                "id": 1705214,
                "content": [
                    {
                        "username": "vivekchaudhary22",
                        "content": " `class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n     set<int> s(nums.begin(),nums.end());\\n     nums.assign(s.begin(),s.end());\\n     int k=s.size();\\n     return k;\\n    }\\n};`"
                    },
                    {
                        "username": "Pritesh_Bagaria",
                        "content": "nums = list(set(nums))\\nthis works fine in editor but here this solution is not getting accepted and shows different o/p. can somebody throw some light on this?"
                    },
                    {
                        "username": "Kamal_Moha",
                        "content": "My code executes and returns the correct answer, but Leetcode refuses for whatever reason & I\\'m just confused\\n ``def removeDuplicates(nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        lst = []\\n        i = 0\\n        while i < len(nums):\\n            if nums[i] not in nums[i+1:]:\\n                lst.append(nums[i])\\n            i += 1\\n        return lst``\\n\\nI get a TypeError and I don\\'t understand why.\\n\\n`TypeError: [1, 2] is not valid value for the expected return type integer[]\\n    raise TypeError(str(ret) + \" is not valid value for the expected return type integer[]\");\\nLine 40 in _driver (Solution.py)\\n    _driver()\\nLine 46 in <module> (Solution.py)`\\n\\nPlz help"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "reton2008",
                        "content": "The description is tricky, they said removing duplicates return the result as in case 1 but in second case they count the number of unique integers only. so ans hidden in case 2 all other informations are just done for creating confusion."
                    },
                    {
                        "username": "shabareesharyan",
                        "content": "\n\n\n    def removeDuplicates(self, nums: List[int]) -> int:\n\n        nums[:] = set(nums)\n\n        nums[:] = sorted(nums)\n\n        return len(nums)"
                    },
                    {
                        "username": "vishnusuresh1995",
                        "content": "Why is expected output [1] when input is [1,1]. Shouldn\\'t the output also be [1,1]. could someone please explain?"
                    },
                    {
                        "username": "izam-mohammed",
                        "content": "I am really confused about this question. What should I return in this. The new array or the length of it ?"
                    },
                    {
                        "username": "SaiSusshanth",
                        "content": "Try making changes to the given array, the judge in this situation checks the array as well as the answer so the values in the array also need to changed."
                    },
                    {
                        "username": "shindepranav820",
                        "content": "Please let me know what is going wrong with my solution.\\n \\nlet expectedNums = []\\n  for (let i = 0; i < nums.length; i++) {\\n      if (!expectedNums.includes(nums[i])) {\\n          expectedNums.push(nums[i])\\n      }\\n  }\\n return expectedNums.length"
                    },
                    {
                        "username": "ankurdahiya",
                        "content": "my code is working fine on my pc but getting runtime error on leetcode why?\\n\\nc++\\n\\nclass Solution {\\npublic:\\nint removeDuplicates(vector& nums) {\\nif(nums.size()==0){return 0;}\\nint tempnum,k = 0;\\nfor(int i = 0;i<nums.size();i++){\\nk++;\\ntempnum = nums[i];\\nlong long int j = i+1;\\nwhile(!(tempnum<nums[j]) && j<nums.size()){\\nj++;\\n}\\nif(j<nums.size()){\\nnums[i+1] = nums[j];\\n}\\nelse{\\nbreak;\\n}\\n}\\nreturn k;\\n}\\n};"
                    }
                ]
            },
            {
                "id": 1704631,
                "content": [
                    {
                        "username": "vivekchaudhary22",
                        "content": " `class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n     set<int> s(nums.begin(),nums.end());\\n     nums.assign(s.begin(),s.end());\\n     int k=s.size();\\n     return k;\\n    }\\n};`"
                    },
                    {
                        "username": "Pritesh_Bagaria",
                        "content": "nums = list(set(nums))\\nthis works fine in editor but here this solution is not getting accepted and shows different o/p. can somebody throw some light on this?"
                    },
                    {
                        "username": "Kamal_Moha",
                        "content": "My code executes and returns the correct answer, but Leetcode refuses for whatever reason & I\\'m just confused\\n ``def removeDuplicates(nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        lst = []\\n        i = 0\\n        while i < len(nums):\\n            if nums[i] not in nums[i+1:]:\\n                lst.append(nums[i])\\n            i += 1\\n        return lst``\\n\\nI get a TypeError and I don\\'t understand why.\\n\\n`TypeError: [1, 2] is not valid value for the expected return type integer[]\\n    raise TypeError(str(ret) + \" is not valid value for the expected return type integer[]\");\\nLine 40 in _driver (Solution.py)\\n    _driver()\\nLine 46 in <module> (Solution.py)`\\n\\nPlz help"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "reton2008",
                        "content": "The description is tricky, they said removing duplicates return the result as in case 1 but in second case they count the number of unique integers only. so ans hidden in case 2 all other informations are just done for creating confusion."
                    },
                    {
                        "username": "shabareesharyan",
                        "content": "\n\n\n    def removeDuplicates(self, nums: List[int]) -> int:\n\n        nums[:] = set(nums)\n\n        nums[:] = sorted(nums)\n\n        return len(nums)"
                    },
                    {
                        "username": "vishnusuresh1995",
                        "content": "Why is expected output [1] when input is [1,1]. Shouldn\\'t the output also be [1,1]. could someone please explain?"
                    },
                    {
                        "username": "izam-mohammed",
                        "content": "I am really confused about this question. What should I return in this. The new array or the length of it ?"
                    },
                    {
                        "username": "SaiSusshanth",
                        "content": "Try making changes to the given array, the judge in this situation checks the array as well as the answer so the values in the array also need to changed."
                    },
                    {
                        "username": "shindepranav820",
                        "content": "Please let me know what is going wrong with my solution.\\n \\nlet expectedNums = []\\n  for (let i = 0; i < nums.length; i++) {\\n      if (!expectedNums.includes(nums[i])) {\\n          expectedNums.push(nums[i])\\n      }\\n  }\\n return expectedNums.length"
                    },
                    {
                        "username": "ankurdahiya",
                        "content": "my code is working fine on my pc but getting runtime error on leetcode why?\\n\\nc++\\n\\nclass Solution {\\npublic:\\nint removeDuplicates(vector& nums) {\\nif(nums.size()==0){return 0;}\\nint tempnum,k = 0;\\nfor(int i = 0;i<nums.size();i++){\\nk++;\\ntempnum = nums[i];\\nlong long int j = i+1;\\nwhile(!(tempnum<nums[j]) && j<nums.size()){\\nj++;\\n}\\nif(j<nums.size()){\\nnums[i+1] = nums[j];\\n}\\nelse{\\nbreak;\\n}\\n}\\nreturn k;\\n}\\n};"
                    }
                ]
            },
            {
                "id": 1698207,
                "content": [
                    {
                        "username": "vivekchaudhary22",
                        "content": " `class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n     set<int> s(nums.begin(),nums.end());\\n     nums.assign(s.begin(),s.end());\\n     int k=s.size();\\n     return k;\\n    }\\n};`"
                    },
                    {
                        "username": "Pritesh_Bagaria",
                        "content": "nums = list(set(nums))\\nthis works fine in editor but here this solution is not getting accepted and shows different o/p. can somebody throw some light on this?"
                    },
                    {
                        "username": "Kamal_Moha",
                        "content": "My code executes and returns the correct answer, but Leetcode refuses for whatever reason & I\\'m just confused\\n ``def removeDuplicates(nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        lst = []\\n        i = 0\\n        while i < len(nums):\\n            if nums[i] not in nums[i+1:]:\\n                lst.append(nums[i])\\n            i += 1\\n        return lst``\\n\\nI get a TypeError and I don\\'t understand why.\\n\\n`TypeError: [1, 2] is not valid value for the expected return type integer[]\\n    raise TypeError(str(ret) + \" is not valid value for the expected return type integer[]\");\\nLine 40 in _driver (Solution.py)\\n    _driver()\\nLine 46 in <module> (Solution.py)`\\n\\nPlz help"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "reton2008",
                        "content": "The description is tricky, they said removing duplicates return the result as in case 1 but in second case they count the number of unique integers only. so ans hidden in case 2 all other informations are just done for creating confusion."
                    },
                    {
                        "username": "shabareesharyan",
                        "content": "\n\n\n    def removeDuplicates(self, nums: List[int]) -> int:\n\n        nums[:] = set(nums)\n\n        nums[:] = sorted(nums)\n\n        return len(nums)"
                    },
                    {
                        "username": "vishnusuresh1995",
                        "content": "Why is expected output [1] when input is [1,1]. Shouldn\\'t the output also be [1,1]. could someone please explain?"
                    },
                    {
                        "username": "izam-mohammed",
                        "content": "I am really confused about this question. What should I return in this. The new array or the length of it ?"
                    },
                    {
                        "username": "SaiSusshanth",
                        "content": "Try making changes to the given array, the judge in this situation checks the array as well as the answer so the values in the array also need to changed."
                    },
                    {
                        "username": "shindepranav820",
                        "content": "Please let me know what is going wrong with my solution.\\n \\nlet expectedNums = []\\n  for (let i = 0; i < nums.length; i++) {\\n      if (!expectedNums.includes(nums[i])) {\\n          expectedNums.push(nums[i])\\n      }\\n  }\\n return expectedNums.length"
                    },
                    {
                        "username": "ankurdahiya",
                        "content": "my code is working fine on my pc but getting runtime error on leetcode why?\\n\\nc++\\n\\nclass Solution {\\npublic:\\nint removeDuplicates(vector& nums) {\\nif(nums.size()==0){return 0;}\\nint tempnum,k = 0;\\nfor(int i = 0;i<nums.size();i++){\\nk++;\\ntempnum = nums[i];\\nlong long int j = i+1;\\nwhile(!(tempnum<nums[j]) && j<nums.size()){\\nj++;\\n}\\nif(j<nums.size()){\\nnums[i+1] = nums[j];\\n}\\nelse{\\nbreak;\\n}\\n}\\nreturn k;\\n}\\n};"
                    }
                ]
            },
            {
                "id": 1696994,
                "content": [
                    {
                        "username": "vivekchaudhary22",
                        "content": " `class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n     set<int> s(nums.begin(),nums.end());\\n     nums.assign(s.begin(),s.end());\\n     int k=s.size();\\n     return k;\\n    }\\n};`"
                    },
                    {
                        "username": "Pritesh_Bagaria",
                        "content": "nums = list(set(nums))\\nthis works fine in editor but here this solution is not getting accepted and shows different o/p. can somebody throw some light on this?"
                    },
                    {
                        "username": "Kamal_Moha",
                        "content": "My code executes and returns the correct answer, but Leetcode refuses for whatever reason & I\\'m just confused\\n ``def removeDuplicates(nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        lst = []\\n        i = 0\\n        while i < len(nums):\\n            if nums[i] not in nums[i+1:]:\\n                lst.append(nums[i])\\n            i += 1\\n        return lst``\\n\\nI get a TypeError and I don\\'t understand why.\\n\\n`TypeError: [1, 2] is not valid value for the expected return type integer[]\\n    raise TypeError(str(ret) + \" is not valid value for the expected return type integer[]\");\\nLine 40 in _driver (Solution.py)\\n    _driver()\\nLine 46 in <module> (Solution.py)`\\n\\nPlz help"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "reton2008",
                        "content": "The description is tricky, they said removing duplicates return the result as in case 1 but in second case they count the number of unique integers only. so ans hidden in case 2 all other informations are just done for creating confusion."
                    },
                    {
                        "username": "shabareesharyan",
                        "content": "\n\n\n    def removeDuplicates(self, nums: List[int]) -> int:\n\n        nums[:] = set(nums)\n\n        nums[:] = sorted(nums)\n\n        return len(nums)"
                    },
                    {
                        "username": "vishnusuresh1995",
                        "content": "Why is expected output [1] when input is [1,1]. Shouldn\\'t the output also be [1,1]. could someone please explain?"
                    },
                    {
                        "username": "izam-mohammed",
                        "content": "I am really confused about this question. What should I return in this. The new array or the length of it ?"
                    },
                    {
                        "username": "SaiSusshanth",
                        "content": "Try making changes to the given array, the judge in this situation checks the array as well as the answer so the values in the array also need to changed."
                    },
                    {
                        "username": "shindepranav820",
                        "content": "Please let me know what is going wrong with my solution.\\n \\nlet expectedNums = []\\n  for (let i = 0; i < nums.length; i++) {\\n      if (!expectedNums.includes(nums[i])) {\\n          expectedNums.push(nums[i])\\n      }\\n  }\\n return expectedNums.length"
                    },
                    {
                        "username": "ankurdahiya",
                        "content": "my code is working fine on my pc but getting runtime error on leetcode why?\\n\\nc++\\n\\nclass Solution {\\npublic:\\nint removeDuplicates(vector& nums) {\\nif(nums.size()==0){return 0;}\\nint tempnum,k = 0;\\nfor(int i = 0;i<nums.size();i++){\\nk++;\\ntempnum = nums[i];\\nlong long int j = i+1;\\nwhile(!(tempnum<nums[j]) && j<nums.size()){\\nj++;\\n}\\nif(j<nums.size()){\\nnums[i+1] = nums[j];\\n}\\nelse{\\nbreak;\\n}\\n}\\nreturn k;\\n}\\n};"
                    }
                ]
            },
            {
                "id": 1695658,
                "content": [
                    {
                        "username": "vivekchaudhary22",
                        "content": " `class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n     set<int> s(nums.begin(),nums.end());\\n     nums.assign(s.begin(),s.end());\\n     int k=s.size();\\n     return k;\\n    }\\n};`"
                    },
                    {
                        "username": "Pritesh_Bagaria",
                        "content": "nums = list(set(nums))\\nthis works fine in editor but here this solution is not getting accepted and shows different o/p. can somebody throw some light on this?"
                    },
                    {
                        "username": "Kamal_Moha",
                        "content": "My code executes and returns the correct answer, but Leetcode refuses for whatever reason & I\\'m just confused\\n ``def removeDuplicates(nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        lst = []\\n        i = 0\\n        while i < len(nums):\\n            if nums[i] not in nums[i+1:]:\\n                lst.append(nums[i])\\n            i += 1\\n        return lst``\\n\\nI get a TypeError and I don\\'t understand why.\\n\\n`TypeError: [1, 2] is not valid value for the expected return type integer[]\\n    raise TypeError(str(ret) + \" is not valid value for the expected return type integer[]\");\\nLine 40 in _driver (Solution.py)\\n    _driver()\\nLine 46 in <module> (Solution.py)`\\n\\nPlz help"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "reton2008",
                        "content": "The description is tricky, they said removing duplicates return the result as in case 1 but in second case they count the number of unique integers only. so ans hidden in case 2 all other informations are just done for creating confusion."
                    },
                    {
                        "username": "shabareesharyan",
                        "content": "\n\n\n    def removeDuplicates(self, nums: List[int]) -> int:\n\n        nums[:] = set(nums)\n\n        nums[:] = sorted(nums)\n\n        return len(nums)"
                    },
                    {
                        "username": "vishnusuresh1995",
                        "content": "Why is expected output [1] when input is [1,1]. Shouldn\\'t the output also be [1,1]. could someone please explain?"
                    },
                    {
                        "username": "izam-mohammed",
                        "content": "I am really confused about this question. What should I return in this. The new array or the length of it ?"
                    },
                    {
                        "username": "SaiSusshanth",
                        "content": "Try making changes to the given array, the judge in this situation checks the array as well as the answer so the values in the array also need to changed."
                    },
                    {
                        "username": "shindepranav820",
                        "content": "Please let me know what is going wrong with my solution.\\n \\nlet expectedNums = []\\n  for (let i = 0; i < nums.length; i++) {\\n      if (!expectedNums.includes(nums[i])) {\\n          expectedNums.push(nums[i])\\n      }\\n  }\\n return expectedNums.length"
                    },
                    {
                        "username": "ankurdahiya",
                        "content": "my code is working fine on my pc but getting runtime error on leetcode why?\\n\\nc++\\n\\nclass Solution {\\npublic:\\nint removeDuplicates(vector& nums) {\\nif(nums.size()==0){return 0;}\\nint tempnum,k = 0;\\nfor(int i = 0;i<nums.size();i++){\\nk++;\\ntempnum = nums[i];\\nlong long int j = i+1;\\nwhile(!(tempnum<nums[j]) && j<nums.size()){\\nj++;\\n}\\nif(j<nums.size()){\\nnums[i+1] = nums[j];\\n}\\nelse{\\nbreak;\\n}\\n}\\nreturn k;\\n}\\n};"
                    }
                ]
            },
            {
                "id": 1693520,
                "content": [
                    {
                        "username": "vivekchaudhary22",
                        "content": " `class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n     set<int> s(nums.begin(),nums.end());\\n     nums.assign(s.begin(),s.end());\\n     int k=s.size();\\n     return k;\\n    }\\n};`"
                    },
                    {
                        "username": "Pritesh_Bagaria",
                        "content": "nums = list(set(nums))\\nthis works fine in editor but here this solution is not getting accepted and shows different o/p. can somebody throw some light on this?"
                    },
                    {
                        "username": "Kamal_Moha",
                        "content": "My code executes and returns the correct answer, but Leetcode refuses for whatever reason & I\\'m just confused\\n ``def removeDuplicates(nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        lst = []\\n        i = 0\\n        while i < len(nums):\\n            if nums[i] not in nums[i+1:]:\\n                lst.append(nums[i])\\n            i += 1\\n        return lst``\\n\\nI get a TypeError and I don\\'t understand why.\\n\\n`TypeError: [1, 2] is not valid value for the expected return type integer[]\\n    raise TypeError(str(ret) + \" is not valid value for the expected return type integer[]\");\\nLine 40 in _driver (Solution.py)\\n    _driver()\\nLine 46 in <module> (Solution.py)`\\n\\nPlz help"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "reton2008",
                        "content": "The description is tricky, they said removing duplicates return the result as in case 1 but in second case they count the number of unique integers only. so ans hidden in case 2 all other informations are just done for creating confusion."
                    },
                    {
                        "username": "shabareesharyan",
                        "content": "\n\n\n    def removeDuplicates(self, nums: List[int]) -> int:\n\n        nums[:] = set(nums)\n\n        nums[:] = sorted(nums)\n\n        return len(nums)"
                    },
                    {
                        "username": "vishnusuresh1995",
                        "content": "Why is expected output [1] when input is [1,1]. Shouldn\\'t the output also be [1,1]. could someone please explain?"
                    },
                    {
                        "username": "izam-mohammed",
                        "content": "I am really confused about this question. What should I return in this. The new array or the length of it ?"
                    },
                    {
                        "username": "SaiSusshanth",
                        "content": "Try making changes to the given array, the judge in this situation checks the array as well as the answer so the values in the array also need to changed."
                    },
                    {
                        "username": "shindepranav820",
                        "content": "Please let me know what is going wrong with my solution.\\n \\nlet expectedNums = []\\n  for (let i = 0; i < nums.length; i++) {\\n      if (!expectedNums.includes(nums[i])) {\\n          expectedNums.push(nums[i])\\n      }\\n  }\\n return expectedNums.length"
                    },
                    {
                        "username": "ankurdahiya",
                        "content": "my code is working fine on my pc but getting runtime error on leetcode why?\\n\\nc++\\n\\nclass Solution {\\npublic:\\nint removeDuplicates(vector& nums) {\\nif(nums.size()==0){return 0;}\\nint tempnum,k = 0;\\nfor(int i = 0;i<nums.size();i++){\\nk++;\\ntempnum = nums[i];\\nlong long int j = i+1;\\nwhile(!(tempnum<nums[j]) && j<nums.size()){\\nj++;\\n}\\nif(j<nums.size()){\\nnums[i+1] = nums[j];\\n}\\nelse{\\nbreak;\\n}\\n}\\nreturn k;\\n}\\n};"
                    }
                ]
            },
            {
                "id": 1692065,
                "content": [
                    {
                        "username": "vivekchaudhary22",
                        "content": " `class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n     set<int> s(nums.begin(),nums.end());\\n     nums.assign(s.begin(),s.end());\\n     int k=s.size();\\n     return k;\\n    }\\n};`"
                    },
                    {
                        "username": "Pritesh_Bagaria",
                        "content": "nums = list(set(nums))\\nthis works fine in editor but here this solution is not getting accepted and shows different o/p. can somebody throw some light on this?"
                    },
                    {
                        "username": "Kamal_Moha",
                        "content": "My code executes and returns the correct answer, but Leetcode refuses for whatever reason & I\\'m just confused\\n ``def removeDuplicates(nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        lst = []\\n        i = 0\\n        while i < len(nums):\\n            if nums[i] not in nums[i+1:]:\\n                lst.append(nums[i])\\n            i += 1\\n        return lst``\\n\\nI get a TypeError and I don\\'t understand why.\\n\\n`TypeError: [1, 2] is not valid value for the expected return type integer[]\\n    raise TypeError(str(ret) + \" is not valid value for the expected return type integer[]\");\\nLine 40 in _driver (Solution.py)\\n    _driver()\\nLine 46 in <module> (Solution.py)`\\n\\nPlz help"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "reton2008",
                        "content": "The description is tricky, they said removing duplicates return the result as in case 1 but in second case they count the number of unique integers only. so ans hidden in case 2 all other informations are just done for creating confusion."
                    },
                    {
                        "username": "shabareesharyan",
                        "content": "\n\n\n    def removeDuplicates(self, nums: List[int]) -> int:\n\n        nums[:] = set(nums)\n\n        nums[:] = sorted(nums)\n\n        return len(nums)"
                    },
                    {
                        "username": "vishnusuresh1995",
                        "content": "Why is expected output [1] when input is [1,1]. Shouldn\\'t the output also be [1,1]. could someone please explain?"
                    },
                    {
                        "username": "izam-mohammed",
                        "content": "I am really confused about this question. What should I return in this. The new array or the length of it ?"
                    },
                    {
                        "username": "SaiSusshanth",
                        "content": "Try making changes to the given array, the judge in this situation checks the array as well as the answer so the values in the array also need to changed."
                    },
                    {
                        "username": "shindepranav820",
                        "content": "Please let me know what is going wrong with my solution.\\n \\nlet expectedNums = []\\n  for (let i = 0; i < nums.length; i++) {\\n      if (!expectedNums.includes(nums[i])) {\\n          expectedNums.push(nums[i])\\n      }\\n  }\\n return expectedNums.length"
                    },
                    {
                        "username": "ankurdahiya",
                        "content": "my code is working fine on my pc but getting runtime error on leetcode why?\\n\\nc++\\n\\nclass Solution {\\npublic:\\nint removeDuplicates(vector& nums) {\\nif(nums.size()==0){return 0;}\\nint tempnum,k = 0;\\nfor(int i = 0;i<nums.size();i++){\\nk++;\\ntempnum = nums[i];\\nlong long int j = i+1;\\nwhile(!(tempnum<nums[j]) && j<nums.size()){\\nj++;\\n}\\nif(j<nums.size()){\\nnums[i+1] = nums[j];\\n}\\nelse{\\nbreak;\\n}\\n}\\nreturn k;\\n}\\n};"
                    }
                ]
            },
            {
                "id": 1686197,
                "content": [
                    {
                        "username": "vivekchaudhary22",
                        "content": " `class Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n     set<int> s(nums.begin(),nums.end());\\n     nums.assign(s.begin(),s.end());\\n     int k=s.size();\\n     return k;\\n    }\\n};`"
                    },
                    {
                        "username": "Pritesh_Bagaria",
                        "content": "nums = list(set(nums))\\nthis works fine in editor but here this solution is not getting accepted and shows different o/p. can somebody throw some light on this?"
                    },
                    {
                        "username": "Kamal_Moha",
                        "content": "My code executes and returns the correct answer, but Leetcode refuses for whatever reason & I\\'m just confused\\n ``def removeDuplicates(nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        lst = []\\n        i = 0\\n        while i < len(nums):\\n            if nums[i] not in nums[i+1:]:\\n                lst.append(nums[i])\\n            i += 1\\n        return lst``\\n\\nI get a TypeError and I don\\'t understand why.\\n\\n`TypeError: [1, 2] is not valid value for the expected return type integer[]\\n    raise TypeError(str(ret) + \" is not valid value for the expected return type integer[]\");\\nLine 40 in _driver (Solution.py)\\n    _driver()\\nLine 46 in <module> (Solution.py)`\\n\\nPlz help"
                    },
                    {
                        "username": "AdityaBhate",
                        "content": "# Easiest \\uD83D\\uDE0E FAANG Method Ever !!! \\uD83D\\uDCA5\\n\\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/solutions/2874837/easiest-faang-method-ever/?orderBy=most_votes"
                    },
                    {
                        "username": "reton2008",
                        "content": "The description is tricky, they said removing duplicates return the result as in case 1 but in second case they count the number of unique integers only. so ans hidden in case 2 all other informations are just done for creating confusion."
                    },
                    {
                        "username": "shabareesharyan",
                        "content": "\n\n\n    def removeDuplicates(self, nums: List[int]) -> int:\n\n        nums[:] = set(nums)\n\n        nums[:] = sorted(nums)\n\n        return len(nums)"
                    },
                    {
                        "username": "vishnusuresh1995",
                        "content": "Why is expected output [1] when input is [1,1]. Shouldn\\'t the output also be [1,1]. could someone please explain?"
                    },
                    {
                        "username": "izam-mohammed",
                        "content": "I am really confused about this question. What should I return in this. The new array or the length of it ?"
                    },
                    {
                        "username": "SaiSusshanth",
                        "content": "Try making changes to the given array, the judge in this situation checks the array as well as the answer so the values in the array also need to changed."
                    },
                    {
                        "username": "shindepranav820",
                        "content": "Please let me know what is going wrong with my solution.\\n \\nlet expectedNums = []\\n  for (let i = 0; i < nums.length; i++) {\\n      if (!expectedNums.includes(nums[i])) {\\n          expectedNums.push(nums[i])\\n      }\\n  }\\n return expectedNums.length"
                    },
                    {
                        "username": "ankurdahiya",
                        "content": "my code is working fine on my pc but getting runtime error on leetcode why?\\n\\nc++\\n\\nclass Solution {\\npublic:\\nint removeDuplicates(vector& nums) {\\nif(nums.size()==0){return 0;}\\nint tempnum,k = 0;\\nfor(int i = 0;i<nums.size();i++){\\nk++;\\ntempnum = nums[i];\\nlong long int j = i+1;\\nwhile(!(tempnum<nums[j]) && j<nums.size()){\\nj++;\\n}\\nif(j<nums.size()){\\nnums[i+1] = nums[j];\\n}\\nelse{\\nbreak;\\n}\\n}\\nreturn k;\\n}\\n};"
                    }
                ]
            },
            {
                "id": 1684225,
                "content": [
                    {
                        "username": "WaterPotato",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        n=len(nums)\\n        nums=sorted(nums)\\n        j=1\\n        i=1\\n        while j<n:\\n            if nums[j]==nums[j-1]:\\n                j+=1\\n            else:\\n                nums[i]=nums[j]\\n                j+=1\\n                i+=1\\n        return i\\n\\nI run this python code in my VSC and it really works, but when I run it in leetcode, it cannot pass the checker. Could someone tell me the reason? Thank you!!!"
                    },
                    {
                        "username": "Harsha81",
                        "content": "var removeDuplicates = function(nums) {\\n    for(let i = 0; i < nums.length; i++){\\n        if(nums[i] === nums[i+1]){\\n            nums.splice(i,1)\\n            i--\\n        }\\n    }\\n   \\n}\\n\\nsmall doubt : \\ncan anyone tell me why it\\'s give me the answer but here I\\'m not even write return in the function if i don\\'t write return the in the function it should give me undefined but it\\'s giving the correct answer in leetcode...but in my VS code it\\'s giving undefined because the return in not there in function....please need explanation"
                    },
                    {
                        "username": "2100520139004",
                        "content": " @[leetcode](https://leetcode.com) `your inline code...your inline code...`"
                    },
                    {
                        "username": "Itachi_uchiya",
                        "content": "\\n \\n     class Solution {\\n       public int removeDuplicates(int[] nums) {\\n         int index = 1;\\n         for(int i=0; i< nums.length - 1 ; i++){\\n            if(nums[i] != nums[i+1]){\\n                nums[index++] = nums[i+1];\\n            }\\n        }\\n        return index;\\n    }\\n}\\n//this is the question asked in many companies like google, facebook  , walmart , microsoft "
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Insert all the elements in the ordered set, as it don`t take duplicates.\\nThen clear the array or make a new array and put all the set elements into the new array or the previous array(nums).\\nReturn the size of the nums/the newly created array."
                    },
                    {
                        "username": "user0218d",
                        "content": "wow how smart LOL\\nProblem clearly says not to use additional space"
                    },
                    {
                        "username": "jaggz01",
                        "content": "Please tell me this error corresponds to leetcode main() and not mine . Attempting to solve this\\n\\njava.lang.IllegalArgumentException: -1\\n  at line 568, java.base/java.util.stream.ReferencePipeline.limit\\n\\tat __Serializer__.serialize(Unknown Source)\\n\\tat __Serializer__.serialize(Unknown Source)\\n  at line 89, __Driver__.main"
                    },
                    {
                        "username": "rreocode",
                        "content": "```\\n        slow, fast = 0, 1\\n\\n        while fast < len(nums):\\n            if nums[fast] != nums[slow]:\\n                slow += 1\\n                nums[slow] = nums[fast]\\n            fast += 1\\n```\\nwhy is this not allowed"
                    },
                    {
                        "username": "sparklingness",
                        "content": "You were almost there!\\njust add \\'return slow+1\\' in the end of the method."
                    },
                    {
                        "username": "alistairstpierre",
                        "content": "This makes no sense... "
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": " <h1 style=\"color: red;\"> It\\'s not that difficult, go through the problem statement again </h1>"
                    },
                    {
                        "username": "rupamkarmakarcr7",
                        "content": "i guess the Examples of test cases are not explained correctly that's why we are facing problem while solving with python\nas the examples says its returning an int but in test cases its returning the new list (after removing the duplicate elements). "
                    }
                ]
            },
            {
                "id": 1681972,
                "content": [
                    {
                        "username": "WaterPotato",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        n=len(nums)\\n        nums=sorted(nums)\\n        j=1\\n        i=1\\n        while j<n:\\n            if nums[j]==nums[j-1]:\\n                j+=1\\n            else:\\n                nums[i]=nums[j]\\n                j+=1\\n                i+=1\\n        return i\\n\\nI run this python code in my VSC and it really works, but when I run it in leetcode, it cannot pass the checker. Could someone tell me the reason? Thank you!!!"
                    },
                    {
                        "username": "Harsha81",
                        "content": "var removeDuplicates = function(nums) {\\n    for(let i = 0; i < nums.length; i++){\\n        if(nums[i] === nums[i+1]){\\n            nums.splice(i,1)\\n            i--\\n        }\\n    }\\n   \\n}\\n\\nsmall doubt : \\ncan anyone tell me why it\\'s give me the answer but here I\\'m not even write return in the function if i don\\'t write return the in the function it should give me undefined but it\\'s giving the correct answer in leetcode...but in my VS code it\\'s giving undefined because the return in not there in function....please need explanation"
                    },
                    {
                        "username": "2100520139004",
                        "content": " @[leetcode](https://leetcode.com) `your inline code...your inline code...`"
                    },
                    {
                        "username": "Itachi_uchiya",
                        "content": "\\n \\n     class Solution {\\n       public int removeDuplicates(int[] nums) {\\n         int index = 1;\\n         for(int i=0; i< nums.length - 1 ; i++){\\n            if(nums[i] != nums[i+1]){\\n                nums[index++] = nums[i+1];\\n            }\\n        }\\n        return index;\\n    }\\n}\\n//this is the question asked in many companies like google, facebook  , walmart , microsoft "
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Insert all the elements in the ordered set, as it don`t take duplicates.\\nThen clear the array or make a new array and put all the set elements into the new array or the previous array(nums).\\nReturn the size of the nums/the newly created array."
                    },
                    {
                        "username": "user0218d",
                        "content": "wow how smart LOL\\nProblem clearly says not to use additional space"
                    },
                    {
                        "username": "jaggz01",
                        "content": "Please tell me this error corresponds to leetcode main() and not mine . Attempting to solve this\\n\\njava.lang.IllegalArgumentException: -1\\n  at line 568, java.base/java.util.stream.ReferencePipeline.limit\\n\\tat __Serializer__.serialize(Unknown Source)\\n\\tat __Serializer__.serialize(Unknown Source)\\n  at line 89, __Driver__.main"
                    },
                    {
                        "username": "rreocode",
                        "content": "```\\n        slow, fast = 0, 1\\n\\n        while fast < len(nums):\\n            if nums[fast] != nums[slow]:\\n                slow += 1\\n                nums[slow] = nums[fast]\\n            fast += 1\\n```\\nwhy is this not allowed"
                    },
                    {
                        "username": "sparklingness",
                        "content": "You were almost there!\\njust add \\'return slow+1\\' in the end of the method."
                    },
                    {
                        "username": "alistairstpierre",
                        "content": "This makes no sense... "
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": " <h1 style=\"color: red;\"> It\\'s not that difficult, go through the problem statement again </h1>"
                    },
                    {
                        "username": "rupamkarmakarcr7",
                        "content": "i guess the Examples of test cases are not explained correctly that's why we are facing problem while solving with python\nas the examples says its returning an int but in test cases its returning the new list (after removing the duplicate elements). "
                    }
                ]
            },
            {
                "id": 1680878,
                "content": [
                    {
                        "username": "WaterPotato",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        n=len(nums)\\n        nums=sorted(nums)\\n        j=1\\n        i=1\\n        while j<n:\\n            if nums[j]==nums[j-1]:\\n                j+=1\\n            else:\\n                nums[i]=nums[j]\\n                j+=1\\n                i+=1\\n        return i\\n\\nI run this python code in my VSC and it really works, but when I run it in leetcode, it cannot pass the checker. Could someone tell me the reason? Thank you!!!"
                    },
                    {
                        "username": "Harsha81",
                        "content": "var removeDuplicates = function(nums) {\\n    for(let i = 0; i < nums.length; i++){\\n        if(nums[i] === nums[i+1]){\\n            nums.splice(i,1)\\n            i--\\n        }\\n    }\\n   \\n}\\n\\nsmall doubt : \\ncan anyone tell me why it\\'s give me the answer but here I\\'m not even write return in the function if i don\\'t write return the in the function it should give me undefined but it\\'s giving the correct answer in leetcode...but in my VS code it\\'s giving undefined because the return in not there in function....please need explanation"
                    },
                    {
                        "username": "2100520139004",
                        "content": " @[leetcode](https://leetcode.com) `your inline code...your inline code...`"
                    },
                    {
                        "username": "Itachi_uchiya",
                        "content": "\\n \\n     class Solution {\\n       public int removeDuplicates(int[] nums) {\\n         int index = 1;\\n         for(int i=0; i< nums.length - 1 ; i++){\\n            if(nums[i] != nums[i+1]){\\n                nums[index++] = nums[i+1];\\n            }\\n        }\\n        return index;\\n    }\\n}\\n//this is the question asked in many companies like google, facebook  , walmart , microsoft "
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Insert all the elements in the ordered set, as it don`t take duplicates.\\nThen clear the array or make a new array and put all the set elements into the new array or the previous array(nums).\\nReturn the size of the nums/the newly created array."
                    },
                    {
                        "username": "user0218d",
                        "content": "wow how smart LOL\\nProblem clearly says not to use additional space"
                    },
                    {
                        "username": "jaggz01",
                        "content": "Please tell me this error corresponds to leetcode main() and not mine . Attempting to solve this\\n\\njava.lang.IllegalArgumentException: -1\\n  at line 568, java.base/java.util.stream.ReferencePipeline.limit\\n\\tat __Serializer__.serialize(Unknown Source)\\n\\tat __Serializer__.serialize(Unknown Source)\\n  at line 89, __Driver__.main"
                    },
                    {
                        "username": "rreocode",
                        "content": "```\\n        slow, fast = 0, 1\\n\\n        while fast < len(nums):\\n            if nums[fast] != nums[slow]:\\n                slow += 1\\n                nums[slow] = nums[fast]\\n            fast += 1\\n```\\nwhy is this not allowed"
                    },
                    {
                        "username": "sparklingness",
                        "content": "You were almost there!\\njust add \\'return slow+1\\' in the end of the method."
                    },
                    {
                        "username": "alistairstpierre",
                        "content": "This makes no sense... "
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": " <h1 style=\"color: red;\"> It\\'s not that difficult, go through the problem statement again </h1>"
                    },
                    {
                        "username": "rupamkarmakarcr7",
                        "content": "i guess the Examples of test cases are not explained correctly that's why we are facing problem while solving with python\nas the examples says its returning an int but in test cases its returning the new list (after removing the duplicate elements). "
                    }
                ]
            },
            {
                "id": 1679929,
                "content": [
                    {
                        "username": "WaterPotato",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        n=len(nums)\\n        nums=sorted(nums)\\n        j=1\\n        i=1\\n        while j<n:\\n            if nums[j]==nums[j-1]:\\n                j+=1\\n            else:\\n                nums[i]=nums[j]\\n                j+=1\\n                i+=1\\n        return i\\n\\nI run this python code in my VSC and it really works, but when I run it in leetcode, it cannot pass the checker. Could someone tell me the reason? Thank you!!!"
                    },
                    {
                        "username": "Harsha81",
                        "content": "var removeDuplicates = function(nums) {\\n    for(let i = 0; i < nums.length; i++){\\n        if(nums[i] === nums[i+1]){\\n            nums.splice(i,1)\\n            i--\\n        }\\n    }\\n   \\n}\\n\\nsmall doubt : \\ncan anyone tell me why it\\'s give me the answer but here I\\'m not even write return in the function if i don\\'t write return the in the function it should give me undefined but it\\'s giving the correct answer in leetcode...but in my VS code it\\'s giving undefined because the return in not there in function....please need explanation"
                    },
                    {
                        "username": "2100520139004",
                        "content": " @[leetcode](https://leetcode.com) `your inline code...your inline code...`"
                    },
                    {
                        "username": "Itachi_uchiya",
                        "content": "\\n \\n     class Solution {\\n       public int removeDuplicates(int[] nums) {\\n         int index = 1;\\n         for(int i=0; i< nums.length - 1 ; i++){\\n            if(nums[i] != nums[i+1]){\\n                nums[index++] = nums[i+1];\\n            }\\n        }\\n        return index;\\n    }\\n}\\n//this is the question asked in many companies like google, facebook  , walmart , microsoft "
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Insert all the elements in the ordered set, as it don`t take duplicates.\\nThen clear the array or make a new array and put all the set elements into the new array or the previous array(nums).\\nReturn the size of the nums/the newly created array."
                    },
                    {
                        "username": "user0218d",
                        "content": "wow how smart LOL\\nProblem clearly says not to use additional space"
                    },
                    {
                        "username": "jaggz01",
                        "content": "Please tell me this error corresponds to leetcode main() and not mine . Attempting to solve this\\n\\njava.lang.IllegalArgumentException: -1\\n  at line 568, java.base/java.util.stream.ReferencePipeline.limit\\n\\tat __Serializer__.serialize(Unknown Source)\\n\\tat __Serializer__.serialize(Unknown Source)\\n  at line 89, __Driver__.main"
                    },
                    {
                        "username": "rreocode",
                        "content": "```\\n        slow, fast = 0, 1\\n\\n        while fast < len(nums):\\n            if nums[fast] != nums[slow]:\\n                slow += 1\\n                nums[slow] = nums[fast]\\n            fast += 1\\n```\\nwhy is this not allowed"
                    },
                    {
                        "username": "sparklingness",
                        "content": "You were almost there!\\njust add \\'return slow+1\\' in the end of the method."
                    },
                    {
                        "username": "alistairstpierre",
                        "content": "This makes no sense... "
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": " <h1 style=\"color: red;\"> It\\'s not that difficult, go through the problem statement again </h1>"
                    },
                    {
                        "username": "rupamkarmakarcr7",
                        "content": "i guess the Examples of test cases are not explained correctly that's why we are facing problem while solving with python\nas the examples says its returning an int but in test cases its returning the new list (after removing the duplicate elements). "
                    }
                ]
            },
            {
                "id": 1679884,
                "content": [
                    {
                        "username": "WaterPotato",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        n=len(nums)\\n        nums=sorted(nums)\\n        j=1\\n        i=1\\n        while j<n:\\n            if nums[j]==nums[j-1]:\\n                j+=1\\n            else:\\n                nums[i]=nums[j]\\n                j+=1\\n                i+=1\\n        return i\\n\\nI run this python code in my VSC and it really works, but when I run it in leetcode, it cannot pass the checker. Could someone tell me the reason? Thank you!!!"
                    },
                    {
                        "username": "Harsha81",
                        "content": "var removeDuplicates = function(nums) {\\n    for(let i = 0; i < nums.length; i++){\\n        if(nums[i] === nums[i+1]){\\n            nums.splice(i,1)\\n            i--\\n        }\\n    }\\n   \\n}\\n\\nsmall doubt : \\ncan anyone tell me why it\\'s give me the answer but here I\\'m not even write return in the function if i don\\'t write return the in the function it should give me undefined but it\\'s giving the correct answer in leetcode...but in my VS code it\\'s giving undefined because the return in not there in function....please need explanation"
                    },
                    {
                        "username": "2100520139004",
                        "content": " @[leetcode](https://leetcode.com) `your inline code...your inline code...`"
                    },
                    {
                        "username": "Itachi_uchiya",
                        "content": "\\n \\n     class Solution {\\n       public int removeDuplicates(int[] nums) {\\n         int index = 1;\\n         for(int i=0; i< nums.length - 1 ; i++){\\n            if(nums[i] != nums[i+1]){\\n                nums[index++] = nums[i+1];\\n            }\\n        }\\n        return index;\\n    }\\n}\\n//this is the question asked in many companies like google, facebook  , walmart , microsoft "
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Insert all the elements in the ordered set, as it don`t take duplicates.\\nThen clear the array or make a new array and put all the set elements into the new array or the previous array(nums).\\nReturn the size of the nums/the newly created array."
                    },
                    {
                        "username": "user0218d",
                        "content": "wow how smart LOL\\nProblem clearly says not to use additional space"
                    },
                    {
                        "username": "jaggz01",
                        "content": "Please tell me this error corresponds to leetcode main() and not mine . Attempting to solve this\\n\\njava.lang.IllegalArgumentException: -1\\n  at line 568, java.base/java.util.stream.ReferencePipeline.limit\\n\\tat __Serializer__.serialize(Unknown Source)\\n\\tat __Serializer__.serialize(Unknown Source)\\n  at line 89, __Driver__.main"
                    },
                    {
                        "username": "rreocode",
                        "content": "```\\n        slow, fast = 0, 1\\n\\n        while fast < len(nums):\\n            if nums[fast] != nums[slow]:\\n                slow += 1\\n                nums[slow] = nums[fast]\\n            fast += 1\\n```\\nwhy is this not allowed"
                    },
                    {
                        "username": "sparklingness",
                        "content": "You were almost there!\\njust add \\'return slow+1\\' in the end of the method."
                    },
                    {
                        "username": "alistairstpierre",
                        "content": "This makes no sense... "
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": " <h1 style=\"color: red;\"> It\\'s not that difficult, go through the problem statement again </h1>"
                    },
                    {
                        "username": "rupamkarmakarcr7",
                        "content": "i guess the Examples of test cases are not explained correctly that's why we are facing problem while solving with python\nas the examples says its returning an int but in test cases its returning the new list (after removing the duplicate elements). "
                    }
                ]
            },
            {
                "id": 1679871,
                "content": [
                    {
                        "username": "WaterPotato",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        n=len(nums)\\n        nums=sorted(nums)\\n        j=1\\n        i=1\\n        while j<n:\\n            if nums[j]==nums[j-1]:\\n                j+=1\\n            else:\\n                nums[i]=nums[j]\\n                j+=1\\n                i+=1\\n        return i\\n\\nI run this python code in my VSC and it really works, but when I run it in leetcode, it cannot pass the checker. Could someone tell me the reason? Thank you!!!"
                    },
                    {
                        "username": "Harsha81",
                        "content": "var removeDuplicates = function(nums) {\\n    for(let i = 0; i < nums.length; i++){\\n        if(nums[i] === nums[i+1]){\\n            nums.splice(i,1)\\n            i--\\n        }\\n    }\\n   \\n}\\n\\nsmall doubt : \\ncan anyone tell me why it\\'s give me the answer but here I\\'m not even write return in the function if i don\\'t write return the in the function it should give me undefined but it\\'s giving the correct answer in leetcode...but in my VS code it\\'s giving undefined because the return in not there in function....please need explanation"
                    },
                    {
                        "username": "2100520139004",
                        "content": " @[leetcode](https://leetcode.com) `your inline code...your inline code...`"
                    },
                    {
                        "username": "Itachi_uchiya",
                        "content": "\\n \\n     class Solution {\\n       public int removeDuplicates(int[] nums) {\\n         int index = 1;\\n         for(int i=0; i< nums.length - 1 ; i++){\\n            if(nums[i] != nums[i+1]){\\n                nums[index++] = nums[i+1];\\n            }\\n        }\\n        return index;\\n    }\\n}\\n//this is the question asked in many companies like google, facebook  , walmart , microsoft "
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Insert all the elements in the ordered set, as it don`t take duplicates.\\nThen clear the array or make a new array and put all the set elements into the new array or the previous array(nums).\\nReturn the size of the nums/the newly created array."
                    },
                    {
                        "username": "user0218d",
                        "content": "wow how smart LOL\\nProblem clearly says not to use additional space"
                    },
                    {
                        "username": "jaggz01",
                        "content": "Please tell me this error corresponds to leetcode main() and not mine . Attempting to solve this\\n\\njava.lang.IllegalArgumentException: -1\\n  at line 568, java.base/java.util.stream.ReferencePipeline.limit\\n\\tat __Serializer__.serialize(Unknown Source)\\n\\tat __Serializer__.serialize(Unknown Source)\\n  at line 89, __Driver__.main"
                    },
                    {
                        "username": "rreocode",
                        "content": "```\\n        slow, fast = 0, 1\\n\\n        while fast < len(nums):\\n            if nums[fast] != nums[slow]:\\n                slow += 1\\n                nums[slow] = nums[fast]\\n            fast += 1\\n```\\nwhy is this not allowed"
                    },
                    {
                        "username": "sparklingness",
                        "content": "You were almost there!\\njust add \\'return slow+1\\' in the end of the method."
                    },
                    {
                        "username": "alistairstpierre",
                        "content": "This makes no sense... "
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": " <h1 style=\"color: red;\"> It\\'s not that difficult, go through the problem statement again </h1>"
                    },
                    {
                        "username": "rupamkarmakarcr7",
                        "content": "i guess the Examples of test cases are not explained correctly that's why we are facing problem while solving with python\nas the examples says its returning an int but in test cases its returning the new list (after removing the duplicate elements). "
                    }
                ]
            },
            {
                "id": 1679713,
                "content": [
                    {
                        "username": "WaterPotato",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        n=len(nums)\\n        nums=sorted(nums)\\n        j=1\\n        i=1\\n        while j<n:\\n            if nums[j]==nums[j-1]:\\n                j+=1\\n            else:\\n                nums[i]=nums[j]\\n                j+=1\\n                i+=1\\n        return i\\n\\nI run this python code in my VSC and it really works, but when I run it in leetcode, it cannot pass the checker. Could someone tell me the reason? Thank you!!!"
                    },
                    {
                        "username": "Harsha81",
                        "content": "var removeDuplicates = function(nums) {\\n    for(let i = 0; i < nums.length; i++){\\n        if(nums[i] === nums[i+1]){\\n            nums.splice(i,1)\\n            i--\\n        }\\n    }\\n   \\n}\\n\\nsmall doubt : \\ncan anyone tell me why it\\'s give me the answer but here I\\'m not even write return in the function if i don\\'t write return the in the function it should give me undefined but it\\'s giving the correct answer in leetcode...but in my VS code it\\'s giving undefined because the return in not there in function....please need explanation"
                    },
                    {
                        "username": "2100520139004",
                        "content": " @[leetcode](https://leetcode.com) `your inline code...your inline code...`"
                    },
                    {
                        "username": "Itachi_uchiya",
                        "content": "\\n \\n     class Solution {\\n       public int removeDuplicates(int[] nums) {\\n         int index = 1;\\n         for(int i=0; i< nums.length - 1 ; i++){\\n            if(nums[i] != nums[i+1]){\\n                nums[index++] = nums[i+1];\\n            }\\n        }\\n        return index;\\n    }\\n}\\n//this is the question asked in many companies like google, facebook  , walmart , microsoft "
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Insert all the elements in the ordered set, as it don`t take duplicates.\\nThen clear the array or make a new array and put all the set elements into the new array or the previous array(nums).\\nReturn the size of the nums/the newly created array."
                    },
                    {
                        "username": "user0218d",
                        "content": "wow how smart LOL\\nProblem clearly says not to use additional space"
                    },
                    {
                        "username": "jaggz01",
                        "content": "Please tell me this error corresponds to leetcode main() and not mine . Attempting to solve this\\n\\njava.lang.IllegalArgumentException: -1\\n  at line 568, java.base/java.util.stream.ReferencePipeline.limit\\n\\tat __Serializer__.serialize(Unknown Source)\\n\\tat __Serializer__.serialize(Unknown Source)\\n  at line 89, __Driver__.main"
                    },
                    {
                        "username": "rreocode",
                        "content": "```\\n        slow, fast = 0, 1\\n\\n        while fast < len(nums):\\n            if nums[fast] != nums[slow]:\\n                slow += 1\\n                nums[slow] = nums[fast]\\n            fast += 1\\n```\\nwhy is this not allowed"
                    },
                    {
                        "username": "sparklingness",
                        "content": "You were almost there!\\njust add \\'return slow+1\\' in the end of the method."
                    },
                    {
                        "username": "alistairstpierre",
                        "content": "This makes no sense... "
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": " <h1 style=\"color: red;\"> It\\'s not that difficult, go through the problem statement again </h1>"
                    },
                    {
                        "username": "rupamkarmakarcr7",
                        "content": "i guess the Examples of test cases are not explained correctly that's why we are facing problem while solving with python\nas the examples says its returning an int but in test cases its returning the new list (after removing the duplicate elements). "
                    }
                ]
            },
            {
                "id": 1679634,
                "content": [
                    {
                        "username": "WaterPotato",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        n=len(nums)\\n        nums=sorted(nums)\\n        j=1\\n        i=1\\n        while j<n:\\n            if nums[j]==nums[j-1]:\\n                j+=1\\n            else:\\n                nums[i]=nums[j]\\n                j+=1\\n                i+=1\\n        return i\\n\\nI run this python code in my VSC and it really works, but when I run it in leetcode, it cannot pass the checker. Could someone tell me the reason? Thank you!!!"
                    },
                    {
                        "username": "Harsha81",
                        "content": "var removeDuplicates = function(nums) {\\n    for(let i = 0; i < nums.length; i++){\\n        if(nums[i] === nums[i+1]){\\n            nums.splice(i,1)\\n            i--\\n        }\\n    }\\n   \\n}\\n\\nsmall doubt : \\ncan anyone tell me why it\\'s give me the answer but here I\\'m not even write return in the function if i don\\'t write return the in the function it should give me undefined but it\\'s giving the correct answer in leetcode...but in my VS code it\\'s giving undefined because the return in not there in function....please need explanation"
                    },
                    {
                        "username": "2100520139004",
                        "content": " @[leetcode](https://leetcode.com) `your inline code...your inline code...`"
                    },
                    {
                        "username": "Itachi_uchiya",
                        "content": "\\n \\n     class Solution {\\n       public int removeDuplicates(int[] nums) {\\n         int index = 1;\\n         for(int i=0; i< nums.length - 1 ; i++){\\n            if(nums[i] != nums[i+1]){\\n                nums[index++] = nums[i+1];\\n            }\\n        }\\n        return index;\\n    }\\n}\\n//this is the question asked in many companies like google, facebook  , walmart , microsoft "
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Insert all the elements in the ordered set, as it don`t take duplicates.\\nThen clear the array or make a new array and put all the set elements into the new array or the previous array(nums).\\nReturn the size of the nums/the newly created array."
                    },
                    {
                        "username": "user0218d",
                        "content": "wow how smart LOL\\nProblem clearly says not to use additional space"
                    },
                    {
                        "username": "jaggz01",
                        "content": "Please tell me this error corresponds to leetcode main() and not mine . Attempting to solve this\\n\\njava.lang.IllegalArgumentException: -1\\n  at line 568, java.base/java.util.stream.ReferencePipeline.limit\\n\\tat __Serializer__.serialize(Unknown Source)\\n\\tat __Serializer__.serialize(Unknown Source)\\n  at line 89, __Driver__.main"
                    },
                    {
                        "username": "rreocode",
                        "content": "```\\n        slow, fast = 0, 1\\n\\n        while fast < len(nums):\\n            if nums[fast] != nums[slow]:\\n                slow += 1\\n                nums[slow] = nums[fast]\\n            fast += 1\\n```\\nwhy is this not allowed"
                    },
                    {
                        "username": "sparklingness",
                        "content": "You were almost there!\\njust add \\'return slow+1\\' in the end of the method."
                    },
                    {
                        "username": "alistairstpierre",
                        "content": "This makes no sense... "
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": " <h1 style=\"color: red;\"> It\\'s not that difficult, go through the problem statement again </h1>"
                    },
                    {
                        "username": "rupamkarmakarcr7",
                        "content": "i guess the Examples of test cases are not explained correctly that's why we are facing problem while solving with python\nas the examples says its returning an int but in test cases its returning the new list (after removing the duplicate elements). "
                    }
                ]
            },
            {
                "id": 1679545,
                "content": [
                    {
                        "username": "WaterPotato",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        n=len(nums)\\n        nums=sorted(nums)\\n        j=1\\n        i=1\\n        while j<n:\\n            if nums[j]==nums[j-1]:\\n                j+=1\\n            else:\\n                nums[i]=nums[j]\\n                j+=1\\n                i+=1\\n        return i\\n\\nI run this python code in my VSC and it really works, but when I run it in leetcode, it cannot pass the checker. Could someone tell me the reason? Thank you!!!"
                    },
                    {
                        "username": "Harsha81",
                        "content": "var removeDuplicates = function(nums) {\\n    for(let i = 0; i < nums.length; i++){\\n        if(nums[i] === nums[i+1]){\\n            nums.splice(i,1)\\n            i--\\n        }\\n    }\\n   \\n}\\n\\nsmall doubt : \\ncan anyone tell me why it\\'s give me the answer but here I\\'m not even write return in the function if i don\\'t write return the in the function it should give me undefined but it\\'s giving the correct answer in leetcode...but in my VS code it\\'s giving undefined because the return in not there in function....please need explanation"
                    },
                    {
                        "username": "2100520139004",
                        "content": " @[leetcode](https://leetcode.com) `your inline code...your inline code...`"
                    },
                    {
                        "username": "Itachi_uchiya",
                        "content": "\\n \\n     class Solution {\\n       public int removeDuplicates(int[] nums) {\\n         int index = 1;\\n         for(int i=0; i< nums.length - 1 ; i++){\\n            if(nums[i] != nums[i+1]){\\n                nums[index++] = nums[i+1];\\n            }\\n        }\\n        return index;\\n    }\\n}\\n//this is the question asked in many companies like google, facebook  , walmart , microsoft "
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Insert all the elements in the ordered set, as it don`t take duplicates.\\nThen clear the array or make a new array and put all the set elements into the new array or the previous array(nums).\\nReturn the size of the nums/the newly created array."
                    },
                    {
                        "username": "user0218d",
                        "content": "wow how smart LOL\\nProblem clearly says not to use additional space"
                    },
                    {
                        "username": "jaggz01",
                        "content": "Please tell me this error corresponds to leetcode main() and not mine . Attempting to solve this\\n\\njava.lang.IllegalArgumentException: -1\\n  at line 568, java.base/java.util.stream.ReferencePipeline.limit\\n\\tat __Serializer__.serialize(Unknown Source)\\n\\tat __Serializer__.serialize(Unknown Source)\\n  at line 89, __Driver__.main"
                    },
                    {
                        "username": "rreocode",
                        "content": "```\\n        slow, fast = 0, 1\\n\\n        while fast < len(nums):\\n            if nums[fast] != nums[slow]:\\n                slow += 1\\n                nums[slow] = nums[fast]\\n            fast += 1\\n```\\nwhy is this not allowed"
                    },
                    {
                        "username": "sparklingness",
                        "content": "You were almost there!\\njust add \\'return slow+1\\' in the end of the method."
                    },
                    {
                        "username": "alistairstpierre",
                        "content": "This makes no sense... "
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": " <h1 style=\"color: red;\"> It\\'s not that difficult, go through the problem statement again </h1>"
                    },
                    {
                        "username": "rupamkarmakarcr7",
                        "content": "i guess the Examples of test cases are not explained correctly that's why we are facing problem while solving with python\nas the examples says its returning an int but in test cases its returning the new list (after removing the duplicate elements). "
                    }
                ]
            },
            {
                "id": 1679495,
                "content": [
                    {
                        "username": "WaterPotato",
                        "content": "class Solution(object):\\n    def removeDuplicates(self, nums):\\n        \"\"\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \"\"\"\\n        n=len(nums)\\n        nums=sorted(nums)\\n        j=1\\n        i=1\\n        while j<n:\\n            if nums[j]==nums[j-1]:\\n                j+=1\\n            else:\\n                nums[i]=nums[j]\\n                j+=1\\n                i+=1\\n        return i\\n\\nI run this python code in my VSC and it really works, but when I run it in leetcode, it cannot pass the checker. Could someone tell me the reason? Thank you!!!"
                    },
                    {
                        "username": "Harsha81",
                        "content": "var removeDuplicates = function(nums) {\\n    for(let i = 0; i < nums.length; i++){\\n        if(nums[i] === nums[i+1]){\\n            nums.splice(i,1)\\n            i--\\n        }\\n    }\\n   \\n}\\n\\nsmall doubt : \\ncan anyone tell me why it\\'s give me the answer but here I\\'m not even write return in the function if i don\\'t write return the in the function it should give me undefined but it\\'s giving the correct answer in leetcode...but in my VS code it\\'s giving undefined because the return in not there in function....please need explanation"
                    },
                    {
                        "username": "2100520139004",
                        "content": " @[leetcode](https://leetcode.com) `your inline code...your inline code...`"
                    },
                    {
                        "username": "Itachi_uchiya",
                        "content": "\\n \\n     class Solution {\\n       public int removeDuplicates(int[] nums) {\\n         int index = 1;\\n         for(int i=0; i< nums.length - 1 ; i++){\\n            if(nums[i] != nums[i+1]){\\n                nums[index++] = nums[i+1];\\n            }\\n        }\\n        return index;\\n    }\\n}\\n//this is the question asked in many companies like google, facebook  , walmart , microsoft "
                    },
                    {
                        "username": "abhinav__19",
                        "content": "Insert all the elements in the ordered set, as it don`t take duplicates.\\nThen clear the array or make a new array and put all the set elements into the new array or the previous array(nums).\\nReturn the size of the nums/the newly created array."
                    },
                    {
                        "username": "user0218d",
                        "content": "wow how smart LOL\\nProblem clearly says not to use additional space"
                    },
                    {
                        "username": "jaggz01",
                        "content": "Please tell me this error corresponds to leetcode main() and not mine . Attempting to solve this\\n\\njava.lang.IllegalArgumentException: -1\\n  at line 568, java.base/java.util.stream.ReferencePipeline.limit\\n\\tat __Serializer__.serialize(Unknown Source)\\n\\tat __Serializer__.serialize(Unknown Source)\\n  at line 89, __Driver__.main"
                    },
                    {
                        "username": "rreocode",
                        "content": "```\\n        slow, fast = 0, 1\\n\\n        while fast < len(nums):\\n            if nums[fast] != nums[slow]:\\n                slow += 1\\n                nums[slow] = nums[fast]\\n            fast += 1\\n```\\nwhy is this not allowed"
                    },
                    {
                        "username": "sparklingness",
                        "content": "You were almost there!\\njust add \\'return slow+1\\' in the end of the method."
                    },
                    {
                        "username": "alistairstpierre",
                        "content": "This makes no sense... "
                    },
                    {
                        "username": "Chouhan_Gourav",
                        "content": " <h1 style=\"color: red;\"> It\\'s not that difficult, go through the problem statement again </h1>"
                    },
                    {
                        "username": "rupamkarmakarcr7",
                        "content": "i guess the Examples of test cases are not explained correctly that's why we are facing problem while solving with python\nas the examples says its returning an int but in test cases its returning the new list (after removing the duplicate elements). "
                    }
                ]
            },
            {
                "id": 1679489,
                "content": [
                    {
                        "username": "yashmondal5006",
                        "content": "please can anyone help me by explaining why are we returning k instead of new nums ??\\n"
                    },
                    {
                        "username": "sparklingness",
                        "content": "IMO.. this problem want you to use the given array nums. And we have to replace values, not make new array. (in-place)\\nSo, we\\'re needed to changed given array to be sorted and not be duplicated in k elements from the start. "
                    },
                    {
                        "username": "dgonzalesi",
                        "content": "Seems like it dont work in ruby, using one method, using a map, a for any of the options works always send an error, even if i just print the arguments [Screenshot](https://drive.google.com/file/d/19B08axFJg584n4hTbtutCXWqwo1StvPl/view?usp=share_link)"
                    },
                    {
                        "username": "dumb_me",
                        "content": "Used 2 pointer approach with little variation(standard approach)  : )\\n\\n```\\nwhile(j < nums.size()) {\\n   while(j < nums.size() && nums[i] == nums[j]) j++;\\n   if(j == nums.size()) break; \\n   nums[k] = nums[j];\\n   i = j;\\n   k++;\\n}\\n```"
                    },
                    {
                        "username": "sirDavid97",
                        "content": "Small py3 solution:\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        k=len(list(dict.fromkeys(nums)))\\n        new_nums = list(dict.fromkeys(nums))\\n        for i in range(0 , len(new_nums)):\\n            while new_nums[i] != nums[i]:\\n                nums.pop(i)\\n                nums.append(\\'_\\')\\n        return k"
                    },
                    {
                        "username": "rahulSrivastava05",
                        "content": "Efficient Approach : \\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size() == 0) return 0;\\n        int res = 1;\\n        for(int i=1;i<nums.size();i++){\\n            if(nums[i] != nums[res-1]){\\n                nums[res] = nums[i];\\n                res++;\\n            }\\n        }\\n        return res;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-remove-duplicates-from-sorted-array-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-remove-duplicates-from-sorted-array-problem-solution.html)"
                    },
                    {
                        "username": "DevyaniVashishth",
                        "content": "var removeDuplicates = function(nums) {\\n    let arr = [];\\n    for(let i = 0; i < nums.length - 1; i++){\\nif(nums[i] !== nums[i + 1]){\\narr.push(nums[i])\\n\\n}\\n    }\\n     arr.push(nums[nums.length - 1]);\\n     // let  l = arr.length;\\n     return arr;\\n};     this code is working fine on freecodecamp console... but here it shows error. i dont know  why is that so, if someone could help me out. i ll be gratefful"
                    },
                    {
                        "username": "blackishigh",
                        "content": "My solution\\n```java\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int kIndex = 0;\\n        int kValue = nums[0];\\n        for(int point = 0 ; point < nums.length -1  ; point ++) {\\n            if(kValue < nums[point+1]) {\\n                int nowKValue = nums[point+1];\\n                nums[point + 1] =  kValue;\\n                nums[kIndex + 1] = nowKValue;\\n                kValue = nowKValue;\\n                kIndex ++ ;\\n            }\\n        }\\n        return kIndex + 1;\\n    }\\n}\\n```"
                    },
                    {
                        "username": "Odegaa",
                        "content": "if (nums.length <= 1) {\\n            return nums.length;\\n        }\\n\\n        Arrays.sort(nums);\\n        List<Integer> duplicateNumbers = new ArrayList<>();\\n\\n        for (int num : nums) {\\n            duplicateNumbers.add(num);\\n        }\\n\\n        for (int i = 0; i < duplicateNumbers.size(); i++) {\\n            for (int j = i + 1; j < nums.length; j++) {\\n                if (nums[i] == nums[j]) {\\n                    duplicateNumbers.remove(nums[i]);\\n                }\\n            }\\n        }\\n        int [] newArray = new int[duplicateNumbers.size()];\\n\\n        for (int i = 0; i < newArray.length; i++) {\\n            newArray[i] = duplicateNumbers.get(i);\\n        }\\n\\n        return newArray.length;\\n\\n\\nWHY??\\n"
                    },
                    {
                        "username": "valibraimi",
                        "content": "Its easy but needed simpler explanation but overall was easy to solve, it took 6 mins or less."
                    }
                ]
            },
            {
                "id": 1679381,
                "content": [
                    {
                        "username": "yashmondal5006",
                        "content": "please can anyone help me by explaining why are we returning k instead of new nums ??\\n"
                    },
                    {
                        "username": "sparklingness",
                        "content": "IMO.. this problem want you to use the given array nums. And we have to replace values, not make new array. (in-place)\\nSo, we\\'re needed to changed given array to be sorted and not be duplicated in k elements from the start. "
                    },
                    {
                        "username": "dgonzalesi",
                        "content": "Seems like it dont work in ruby, using one method, using a map, a for any of the options works always send an error, even if i just print the arguments [Screenshot](https://drive.google.com/file/d/19B08axFJg584n4hTbtutCXWqwo1StvPl/view?usp=share_link)"
                    },
                    {
                        "username": "dumb_me",
                        "content": "Used 2 pointer approach with little variation(standard approach)  : )\\n\\n```\\nwhile(j < nums.size()) {\\n   while(j < nums.size() && nums[i] == nums[j]) j++;\\n   if(j == nums.size()) break; \\n   nums[k] = nums[j];\\n   i = j;\\n   k++;\\n}\\n```"
                    },
                    {
                        "username": "sirDavid97",
                        "content": "Small py3 solution:\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        k=len(list(dict.fromkeys(nums)))\\n        new_nums = list(dict.fromkeys(nums))\\n        for i in range(0 , len(new_nums)):\\n            while new_nums[i] != nums[i]:\\n                nums.pop(i)\\n                nums.append(\\'_\\')\\n        return k"
                    },
                    {
                        "username": "rahulSrivastava05",
                        "content": "Efficient Approach : \\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size() == 0) return 0;\\n        int res = 1;\\n        for(int i=1;i<nums.size();i++){\\n            if(nums[i] != nums[res-1]){\\n                nums[res] = nums[i];\\n                res++;\\n            }\\n        }\\n        return res;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-remove-duplicates-from-sorted-array-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-remove-duplicates-from-sorted-array-problem-solution.html)"
                    },
                    {
                        "username": "DevyaniVashishth",
                        "content": "var removeDuplicates = function(nums) {\\n    let arr = [];\\n    for(let i = 0; i < nums.length - 1; i++){\\nif(nums[i] !== nums[i + 1]){\\narr.push(nums[i])\\n\\n}\\n    }\\n     arr.push(nums[nums.length - 1]);\\n     // let  l = arr.length;\\n     return arr;\\n};     this code is working fine on freecodecamp console... but here it shows error. i dont know  why is that so, if someone could help me out. i ll be gratefful"
                    },
                    {
                        "username": "blackishigh",
                        "content": "My solution\\n```java\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int kIndex = 0;\\n        int kValue = nums[0];\\n        for(int point = 0 ; point < nums.length -1  ; point ++) {\\n            if(kValue < nums[point+1]) {\\n                int nowKValue = nums[point+1];\\n                nums[point + 1] =  kValue;\\n                nums[kIndex + 1] = nowKValue;\\n                kValue = nowKValue;\\n                kIndex ++ ;\\n            }\\n        }\\n        return kIndex + 1;\\n    }\\n}\\n```"
                    },
                    {
                        "username": "Odegaa",
                        "content": "if (nums.length <= 1) {\\n            return nums.length;\\n        }\\n\\n        Arrays.sort(nums);\\n        List<Integer> duplicateNumbers = new ArrayList<>();\\n\\n        for (int num : nums) {\\n            duplicateNumbers.add(num);\\n        }\\n\\n        for (int i = 0; i < duplicateNumbers.size(); i++) {\\n            for (int j = i + 1; j < nums.length; j++) {\\n                if (nums[i] == nums[j]) {\\n                    duplicateNumbers.remove(nums[i]);\\n                }\\n            }\\n        }\\n        int [] newArray = new int[duplicateNumbers.size()];\\n\\n        for (int i = 0; i < newArray.length; i++) {\\n            newArray[i] = duplicateNumbers.get(i);\\n        }\\n\\n        return newArray.length;\\n\\n\\nWHY??\\n"
                    },
                    {
                        "username": "valibraimi",
                        "content": "Its easy but needed simpler explanation but overall was easy to solve, it took 6 mins or less."
                    }
                ]
            },
            {
                "id": 1679288,
                "content": [
                    {
                        "username": "yashmondal5006",
                        "content": "please can anyone help me by explaining why are we returning k instead of new nums ??\\n"
                    },
                    {
                        "username": "sparklingness",
                        "content": "IMO.. this problem want you to use the given array nums. And we have to replace values, not make new array. (in-place)\\nSo, we\\'re needed to changed given array to be sorted and not be duplicated in k elements from the start. "
                    },
                    {
                        "username": "dgonzalesi",
                        "content": "Seems like it dont work in ruby, using one method, using a map, a for any of the options works always send an error, even if i just print the arguments [Screenshot](https://drive.google.com/file/d/19B08axFJg584n4hTbtutCXWqwo1StvPl/view?usp=share_link)"
                    },
                    {
                        "username": "dumb_me",
                        "content": "Used 2 pointer approach with little variation(standard approach)  : )\\n\\n```\\nwhile(j < nums.size()) {\\n   while(j < nums.size() && nums[i] == nums[j]) j++;\\n   if(j == nums.size()) break; \\n   nums[k] = nums[j];\\n   i = j;\\n   k++;\\n}\\n```"
                    },
                    {
                        "username": "sirDavid97",
                        "content": "Small py3 solution:\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        k=len(list(dict.fromkeys(nums)))\\n        new_nums = list(dict.fromkeys(nums))\\n        for i in range(0 , len(new_nums)):\\n            while new_nums[i] != nums[i]:\\n                nums.pop(i)\\n                nums.append(\\'_\\')\\n        return k"
                    },
                    {
                        "username": "rahulSrivastava05",
                        "content": "Efficient Approach : \\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size() == 0) return 0;\\n        int res = 1;\\n        for(int i=1;i<nums.size();i++){\\n            if(nums[i] != nums[res-1]){\\n                nums[res] = nums[i];\\n                res++;\\n            }\\n        }\\n        return res;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-remove-duplicates-from-sorted-array-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-remove-duplicates-from-sorted-array-problem-solution.html)"
                    },
                    {
                        "username": "DevyaniVashishth",
                        "content": "var removeDuplicates = function(nums) {\\n    let arr = [];\\n    for(let i = 0; i < nums.length - 1; i++){\\nif(nums[i] !== nums[i + 1]){\\narr.push(nums[i])\\n\\n}\\n    }\\n     arr.push(nums[nums.length - 1]);\\n     // let  l = arr.length;\\n     return arr;\\n};     this code is working fine on freecodecamp console... but here it shows error. i dont know  why is that so, if someone could help me out. i ll be gratefful"
                    },
                    {
                        "username": "blackishigh",
                        "content": "My solution\\n```java\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int kIndex = 0;\\n        int kValue = nums[0];\\n        for(int point = 0 ; point < nums.length -1  ; point ++) {\\n            if(kValue < nums[point+1]) {\\n                int nowKValue = nums[point+1];\\n                nums[point + 1] =  kValue;\\n                nums[kIndex + 1] = nowKValue;\\n                kValue = nowKValue;\\n                kIndex ++ ;\\n            }\\n        }\\n        return kIndex + 1;\\n    }\\n}\\n```"
                    },
                    {
                        "username": "Odegaa",
                        "content": "if (nums.length <= 1) {\\n            return nums.length;\\n        }\\n\\n        Arrays.sort(nums);\\n        List<Integer> duplicateNumbers = new ArrayList<>();\\n\\n        for (int num : nums) {\\n            duplicateNumbers.add(num);\\n        }\\n\\n        for (int i = 0; i < duplicateNumbers.size(); i++) {\\n            for (int j = i + 1; j < nums.length; j++) {\\n                if (nums[i] == nums[j]) {\\n                    duplicateNumbers.remove(nums[i]);\\n                }\\n            }\\n        }\\n        int [] newArray = new int[duplicateNumbers.size()];\\n\\n        for (int i = 0; i < newArray.length; i++) {\\n            newArray[i] = duplicateNumbers.get(i);\\n        }\\n\\n        return newArray.length;\\n\\n\\nWHY??\\n"
                    },
                    {
                        "username": "valibraimi",
                        "content": "Its easy but needed simpler explanation but overall was easy to solve, it took 6 mins or less."
                    }
                ]
            },
            {
                "id": 1676898,
                "content": [
                    {
                        "username": "yashmondal5006",
                        "content": "please can anyone help me by explaining why are we returning k instead of new nums ??\\n"
                    },
                    {
                        "username": "sparklingness",
                        "content": "IMO.. this problem want you to use the given array nums. And we have to replace values, not make new array. (in-place)\\nSo, we\\'re needed to changed given array to be sorted and not be duplicated in k elements from the start. "
                    },
                    {
                        "username": "dgonzalesi",
                        "content": "Seems like it dont work in ruby, using one method, using a map, a for any of the options works always send an error, even if i just print the arguments [Screenshot](https://drive.google.com/file/d/19B08axFJg584n4hTbtutCXWqwo1StvPl/view?usp=share_link)"
                    },
                    {
                        "username": "dumb_me",
                        "content": "Used 2 pointer approach with little variation(standard approach)  : )\\n\\n```\\nwhile(j < nums.size()) {\\n   while(j < nums.size() && nums[i] == nums[j]) j++;\\n   if(j == nums.size()) break; \\n   nums[k] = nums[j];\\n   i = j;\\n   k++;\\n}\\n```"
                    },
                    {
                        "username": "sirDavid97",
                        "content": "Small py3 solution:\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        k=len(list(dict.fromkeys(nums)))\\n        new_nums = list(dict.fromkeys(nums))\\n        for i in range(0 , len(new_nums)):\\n            while new_nums[i] != nums[i]:\\n                nums.pop(i)\\n                nums.append(\\'_\\')\\n        return k"
                    },
                    {
                        "username": "rahulSrivastava05",
                        "content": "Efficient Approach : \\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size() == 0) return 0;\\n        int res = 1;\\n        for(int i=1;i<nums.size();i++){\\n            if(nums[i] != nums[res-1]){\\n                nums[res] = nums[i];\\n                res++;\\n            }\\n        }\\n        return res;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-remove-duplicates-from-sorted-array-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-remove-duplicates-from-sorted-array-problem-solution.html)"
                    },
                    {
                        "username": "DevyaniVashishth",
                        "content": "var removeDuplicates = function(nums) {\\n    let arr = [];\\n    for(let i = 0; i < nums.length - 1; i++){\\nif(nums[i] !== nums[i + 1]){\\narr.push(nums[i])\\n\\n}\\n    }\\n     arr.push(nums[nums.length - 1]);\\n     // let  l = arr.length;\\n     return arr;\\n};     this code is working fine on freecodecamp console... but here it shows error. i dont know  why is that so, if someone could help me out. i ll be gratefful"
                    },
                    {
                        "username": "blackishigh",
                        "content": "My solution\\n```java\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int kIndex = 0;\\n        int kValue = nums[0];\\n        for(int point = 0 ; point < nums.length -1  ; point ++) {\\n            if(kValue < nums[point+1]) {\\n                int nowKValue = nums[point+1];\\n                nums[point + 1] =  kValue;\\n                nums[kIndex + 1] = nowKValue;\\n                kValue = nowKValue;\\n                kIndex ++ ;\\n            }\\n        }\\n        return kIndex + 1;\\n    }\\n}\\n```"
                    },
                    {
                        "username": "Odegaa",
                        "content": "if (nums.length <= 1) {\\n            return nums.length;\\n        }\\n\\n        Arrays.sort(nums);\\n        List<Integer> duplicateNumbers = new ArrayList<>();\\n\\n        for (int num : nums) {\\n            duplicateNumbers.add(num);\\n        }\\n\\n        for (int i = 0; i < duplicateNumbers.size(); i++) {\\n            for (int j = i + 1; j < nums.length; j++) {\\n                if (nums[i] == nums[j]) {\\n                    duplicateNumbers.remove(nums[i]);\\n                }\\n            }\\n        }\\n        int [] newArray = new int[duplicateNumbers.size()];\\n\\n        for (int i = 0; i < newArray.length; i++) {\\n            newArray[i] = duplicateNumbers.get(i);\\n        }\\n\\n        return newArray.length;\\n\\n\\nWHY??\\n"
                    },
                    {
                        "username": "valibraimi",
                        "content": "Its easy but needed simpler explanation but overall was easy to solve, it took 6 mins or less."
                    }
                ]
            },
            {
                "id": 1676822,
                "content": [
                    {
                        "username": "yashmondal5006",
                        "content": "please can anyone help me by explaining why are we returning k instead of new nums ??\\n"
                    },
                    {
                        "username": "sparklingness",
                        "content": "IMO.. this problem want you to use the given array nums. And we have to replace values, not make new array. (in-place)\\nSo, we\\'re needed to changed given array to be sorted and not be duplicated in k elements from the start. "
                    },
                    {
                        "username": "dgonzalesi",
                        "content": "Seems like it dont work in ruby, using one method, using a map, a for any of the options works always send an error, even if i just print the arguments [Screenshot](https://drive.google.com/file/d/19B08axFJg584n4hTbtutCXWqwo1StvPl/view?usp=share_link)"
                    },
                    {
                        "username": "dumb_me",
                        "content": "Used 2 pointer approach with little variation(standard approach)  : )\\n\\n```\\nwhile(j < nums.size()) {\\n   while(j < nums.size() && nums[i] == nums[j]) j++;\\n   if(j == nums.size()) break; \\n   nums[k] = nums[j];\\n   i = j;\\n   k++;\\n}\\n```"
                    },
                    {
                        "username": "sirDavid97",
                        "content": "Small py3 solution:\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        k=len(list(dict.fromkeys(nums)))\\n        new_nums = list(dict.fromkeys(nums))\\n        for i in range(0 , len(new_nums)):\\n            while new_nums[i] != nums[i]:\\n                nums.pop(i)\\n                nums.append(\\'_\\')\\n        return k"
                    },
                    {
                        "username": "rahulSrivastava05",
                        "content": "Efficient Approach : \\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size() == 0) return 0;\\n        int res = 1;\\n        for(int i=1;i<nums.size();i++){\\n            if(nums[i] != nums[res-1]){\\n                nums[res] = nums[i];\\n                res++;\\n            }\\n        }\\n        return res;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-remove-duplicates-from-sorted-array-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-remove-duplicates-from-sorted-array-problem-solution.html)"
                    },
                    {
                        "username": "DevyaniVashishth",
                        "content": "var removeDuplicates = function(nums) {\\n    let arr = [];\\n    for(let i = 0; i < nums.length - 1; i++){\\nif(nums[i] !== nums[i + 1]){\\narr.push(nums[i])\\n\\n}\\n    }\\n     arr.push(nums[nums.length - 1]);\\n     // let  l = arr.length;\\n     return arr;\\n};     this code is working fine on freecodecamp console... but here it shows error. i dont know  why is that so, if someone could help me out. i ll be gratefful"
                    },
                    {
                        "username": "blackishigh",
                        "content": "My solution\\n```java\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int kIndex = 0;\\n        int kValue = nums[0];\\n        for(int point = 0 ; point < nums.length -1  ; point ++) {\\n            if(kValue < nums[point+1]) {\\n                int nowKValue = nums[point+1];\\n                nums[point + 1] =  kValue;\\n                nums[kIndex + 1] = nowKValue;\\n                kValue = nowKValue;\\n                kIndex ++ ;\\n            }\\n        }\\n        return kIndex + 1;\\n    }\\n}\\n```"
                    },
                    {
                        "username": "Odegaa",
                        "content": "if (nums.length <= 1) {\\n            return nums.length;\\n        }\\n\\n        Arrays.sort(nums);\\n        List<Integer> duplicateNumbers = new ArrayList<>();\\n\\n        for (int num : nums) {\\n            duplicateNumbers.add(num);\\n        }\\n\\n        for (int i = 0; i < duplicateNumbers.size(); i++) {\\n            for (int j = i + 1; j < nums.length; j++) {\\n                if (nums[i] == nums[j]) {\\n                    duplicateNumbers.remove(nums[i]);\\n                }\\n            }\\n        }\\n        int [] newArray = new int[duplicateNumbers.size()];\\n\\n        for (int i = 0; i < newArray.length; i++) {\\n            newArray[i] = duplicateNumbers.get(i);\\n        }\\n\\n        return newArray.length;\\n\\n\\nWHY??\\n"
                    },
                    {
                        "username": "valibraimi",
                        "content": "Its easy but needed simpler explanation but overall was easy to solve, it took 6 mins or less."
                    }
                ]
            },
            {
                "id": 1671285,
                "content": [
                    {
                        "username": "yashmondal5006",
                        "content": "please can anyone help me by explaining why are we returning k instead of new nums ??\\n"
                    },
                    {
                        "username": "sparklingness",
                        "content": "IMO.. this problem want you to use the given array nums. And we have to replace values, not make new array. (in-place)\\nSo, we\\'re needed to changed given array to be sorted and not be duplicated in k elements from the start. "
                    },
                    {
                        "username": "dgonzalesi",
                        "content": "Seems like it dont work in ruby, using one method, using a map, a for any of the options works always send an error, even if i just print the arguments [Screenshot](https://drive.google.com/file/d/19B08axFJg584n4hTbtutCXWqwo1StvPl/view?usp=share_link)"
                    },
                    {
                        "username": "dumb_me",
                        "content": "Used 2 pointer approach with little variation(standard approach)  : )\\n\\n```\\nwhile(j < nums.size()) {\\n   while(j < nums.size() && nums[i] == nums[j]) j++;\\n   if(j == nums.size()) break; \\n   nums[k] = nums[j];\\n   i = j;\\n   k++;\\n}\\n```"
                    },
                    {
                        "username": "sirDavid97",
                        "content": "Small py3 solution:\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        k=len(list(dict.fromkeys(nums)))\\n        new_nums = list(dict.fromkeys(nums))\\n        for i in range(0 , len(new_nums)):\\n            while new_nums[i] != nums[i]:\\n                nums.pop(i)\\n                nums.append(\\'_\\')\\n        return k"
                    },
                    {
                        "username": "rahulSrivastava05",
                        "content": "Efficient Approach : \\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size() == 0) return 0;\\n        int res = 1;\\n        for(int i=1;i<nums.size();i++){\\n            if(nums[i] != nums[res-1]){\\n                nums[res] = nums[i];\\n                res++;\\n            }\\n        }\\n        return res;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-remove-duplicates-from-sorted-array-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-remove-duplicates-from-sorted-array-problem-solution.html)"
                    },
                    {
                        "username": "DevyaniVashishth",
                        "content": "var removeDuplicates = function(nums) {\\n    let arr = [];\\n    for(let i = 0; i < nums.length - 1; i++){\\nif(nums[i] !== nums[i + 1]){\\narr.push(nums[i])\\n\\n}\\n    }\\n     arr.push(nums[nums.length - 1]);\\n     // let  l = arr.length;\\n     return arr;\\n};     this code is working fine on freecodecamp console... but here it shows error. i dont know  why is that so, if someone could help me out. i ll be gratefful"
                    },
                    {
                        "username": "blackishigh",
                        "content": "My solution\\n```java\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int kIndex = 0;\\n        int kValue = nums[0];\\n        for(int point = 0 ; point < nums.length -1  ; point ++) {\\n            if(kValue < nums[point+1]) {\\n                int nowKValue = nums[point+1];\\n                nums[point + 1] =  kValue;\\n                nums[kIndex + 1] = nowKValue;\\n                kValue = nowKValue;\\n                kIndex ++ ;\\n            }\\n        }\\n        return kIndex + 1;\\n    }\\n}\\n```"
                    },
                    {
                        "username": "Odegaa",
                        "content": "if (nums.length <= 1) {\\n            return nums.length;\\n        }\\n\\n        Arrays.sort(nums);\\n        List<Integer> duplicateNumbers = new ArrayList<>();\\n\\n        for (int num : nums) {\\n            duplicateNumbers.add(num);\\n        }\\n\\n        for (int i = 0; i < duplicateNumbers.size(); i++) {\\n            for (int j = i + 1; j < nums.length; j++) {\\n                if (nums[i] == nums[j]) {\\n                    duplicateNumbers.remove(nums[i]);\\n                }\\n            }\\n        }\\n        int [] newArray = new int[duplicateNumbers.size()];\\n\\n        for (int i = 0; i < newArray.length; i++) {\\n            newArray[i] = duplicateNumbers.get(i);\\n        }\\n\\n        return newArray.length;\\n\\n\\nWHY??\\n"
                    },
                    {
                        "username": "valibraimi",
                        "content": "Its easy but needed simpler explanation but overall was easy to solve, it took 6 mins or less."
                    }
                ]
            },
            {
                "id": 1668230,
                "content": [
                    {
                        "username": "yashmondal5006",
                        "content": "please can anyone help me by explaining why are we returning k instead of new nums ??\\n"
                    },
                    {
                        "username": "sparklingness",
                        "content": "IMO.. this problem want you to use the given array nums. And we have to replace values, not make new array. (in-place)\\nSo, we\\'re needed to changed given array to be sorted and not be duplicated in k elements from the start. "
                    },
                    {
                        "username": "dgonzalesi",
                        "content": "Seems like it dont work in ruby, using one method, using a map, a for any of the options works always send an error, even if i just print the arguments [Screenshot](https://drive.google.com/file/d/19B08axFJg584n4hTbtutCXWqwo1StvPl/view?usp=share_link)"
                    },
                    {
                        "username": "dumb_me",
                        "content": "Used 2 pointer approach with little variation(standard approach)  : )\\n\\n```\\nwhile(j < nums.size()) {\\n   while(j < nums.size() && nums[i] == nums[j]) j++;\\n   if(j == nums.size()) break; \\n   nums[k] = nums[j];\\n   i = j;\\n   k++;\\n}\\n```"
                    },
                    {
                        "username": "sirDavid97",
                        "content": "Small py3 solution:\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        k=len(list(dict.fromkeys(nums)))\\n        new_nums = list(dict.fromkeys(nums))\\n        for i in range(0 , len(new_nums)):\\n            while new_nums[i] != nums[i]:\\n                nums.pop(i)\\n                nums.append(\\'_\\')\\n        return k"
                    },
                    {
                        "username": "rahulSrivastava05",
                        "content": "Efficient Approach : \\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size() == 0) return 0;\\n        int res = 1;\\n        for(int i=1;i<nums.size();i++){\\n            if(nums[i] != nums[res-1]){\\n                nums[res] = nums[i];\\n                res++;\\n            }\\n        }\\n        return res;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-remove-duplicates-from-sorted-array-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-remove-duplicates-from-sorted-array-problem-solution.html)"
                    },
                    {
                        "username": "DevyaniVashishth",
                        "content": "var removeDuplicates = function(nums) {\\n    let arr = [];\\n    for(let i = 0; i < nums.length - 1; i++){\\nif(nums[i] !== nums[i + 1]){\\narr.push(nums[i])\\n\\n}\\n    }\\n     arr.push(nums[nums.length - 1]);\\n     // let  l = arr.length;\\n     return arr;\\n};     this code is working fine on freecodecamp console... but here it shows error. i dont know  why is that so, if someone could help me out. i ll be gratefful"
                    },
                    {
                        "username": "blackishigh",
                        "content": "My solution\\n```java\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int kIndex = 0;\\n        int kValue = nums[0];\\n        for(int point = 0 ; point < nums.length -1  ; point ++) {\\n            if(kValue < nums[point+1]) {\\n                int nowKValue = nums[point+1];\\n                nums[point + 1] =  kValue;\\n                nums[kIndex + 1] = nowKValue;\\n                kValue = nowKValue;\\n                kIndex ++ ;\\n            }\\n        }\\n        return kIndex + 1;\\n    }\\n}\\n```"
                    },
                    {
                        "username": "Odegaa",
                        "content": "if (nums.length <= 1) {\\n            return nums.length;\\n        }\\n\\n        Arrays.sort(nums);\\n        List<Integer> duplicateNumbers = new ArrayList<>();\\n\\n        for (int num : nums) {\\n            duplicateNumbers.add(num);\\n        }\\n\\n        for (int i = 0; i < duplicateNumbers.size(); i++) {\\n            for (int j = i + 1; j < nums.length; j++) {\\n                if (nums[i] == nums[j]) {\\n                    duplicateNumbers.remove(nums[i]);\\n                }\\n            }\\n        }\\n        int [] newArray = new int[duplicateNumbers.size()];\\n\\n        for (int i = 0; i < newArray.length; i++) {\\n            newArray[i] = duplicateNumbers.get(i);\\n        }\\n\\n        return newArray.length;\\n\\n\\nWHY??\\n"
                    },
                    {
                        "username": "valibraimi",
                        "content": "Its easy but needed simpler explanation but overall was easy to solve, it took 6 mins or less."
                    }
                ]
            },
            {
                "id": 1667650,
                "content": [
                    {
                        "username": "yashmondal5006",
                        "content": "please can anyone help me by explaining why are we returning k instead of new nums ??\\n"
                    },
                    {
                        "username": "sparklingness",
                        "content": "IMO.. this problem want you to use the given array nums. And we have to replace values, not make new array. (in-place)\\nSo, we\\'re needed to changed given array to be sorted and not be duplicated in k elements from the start. "
                    },
                    {
                        "username": "dgonzalesi",
                        "content": "Seems like it dont work in ruby, using one method, using a map, a for any of the options works always send an error, even if i just print the arguments [Screenshot](https://drive.google.com/file/d/19B08axFJg584n4hTbtutCXWqwo1StvPl/view?usp=share_link)"
                    },
                    {
                        "username": "dumb_me",
                        "content": "Used 2 pointer approach with little variation(standard approach)  : )\\n\\n```\\nwhile(j < nums.size()) {\\n   while(j < nums.size() && nums[i] == nums[j]) j++;\\n   if(j == nums.size()) break; \\n   nums[k] = nums[j];\\n   i = j;\\n   k++;\\n}\\n```"
                    },
                    {
                        "username": "sirDavid97",
                        "content": "Small py3 solution:\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        k=len(list(dict.fromkeys(nums)))\\n        new_nums = list(dict.fromkeys(nums))\\n        for i in range(0 , len(new_nums)):\\n            while new_nums[i] != nums[i]:\\n                nums.pop(i)\\n                nums.append(\\'_\\')\\n        return k"
                    },
                    {
                        "username": "rahulSrivastava05",
                        "content": "Efficient Approach : \\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size() == 0) return 0;\\n        int res = 1;\\n        for(int i=1;i<nums.size();i++){\\n            if(nums[i] != nums[res-1]){\\n                nums[res] = nums[i];\\n                res++;\\n            }\\n        }\\n        return res;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-remove-duplicates-from-sorted-array-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-remove-duplicates-from-sorted-array-problem-solution.html)"
                    },
                    {
                        "username": "DevyaniVashishth",
                        "content": "var removeDuplicates = function(nums) {\\n    let arr = [];\\n    for(let i = 0; i < nums.length - 1; i++){\\nif(nums[i] !== nums[i + 1]){\\narr.push(nums[i])\\n\\n}\\n    }\\n     arr.push(nums[nums.length - 1]);\\n     // let  l = arr.length;\\n     return arr;\\n};     this code is working fine on freecodecamp console... but here it shows error. i dont know  why is that so, if someone could help me out. i ll be gratefful"
                    },
                    {
                        "username": "blackishigh",
                        "content": "My solution\\n```java\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int kIndex = 0;\\n        int kValue = nums[0];\\n        for(int point = 0 ; point < nums.length -1  ; point ++) {\\n            if(kValue < nums[point+1]) {\\n                int nowKValue = nums[point+1];\\n                nums[point + 1] =  kValue;\\n                nums[kIndex + 1] = nowKValue;\\n                kValue = nowKValue;\\n                kIndex ++ ;\\n            }\\n        }\\n        return kIndex + 1;\\n    }\\n}\\n```"
                    },
                    {
                        "username": "Odegaa",
                        "content": "if (nums.length <= 1) {\\n            return nums.length;\\n        }\\n\\n        Arrays.sort(nums);\\n        List<Integer> duplicateNumbers = new ArrayList<>();\\n\\n        for (int num : nums) {\\n            duplicateNumbers.add(num);\\n        }\\n\\n        for (int i = 0; i < duplicateNumbers.size(); i++) {\\n            for (int j = i + 1; j < nums.length; j++) {\\n                if (nums[i] == nums[j]) {\\n                    duplicateNumbers.remove(nums[i]);\\n                }\\n            }\\n        }\\n        int [] newArray = new int[duplicateNumbers.size()];\\n\\n        for (int i = 0; i < newArray.length; i++) {\\n            newArray[i] = duplicateNumbers.get(i);\\n        }\\n\\n        return newArray.length;\\n\\n\\nWHY??\\n"
                    },
                    {
                        "username": "valibraimi",
                        "content": "Its easy but needed simpler explanation but overall was easy to solve, it took 6 mins or less."
                    }
                ]
            },
            {
                "id": 1667264,
                "content": [
                    {
                        "username": "yashmondal5006",
                        "content": "please can anyone help me by explaining why are we returning k instead of new nums ??\\n"
                    },
                    {
                        "username": "sparklingness",
                        "content": "IMO.. this problem want you to use the given array nums. And we have to replace values, not make new array. (in-place)\\nSo, we\\'re needed to changed given array to be sorted and not be duplicated in k elements from the start. "
                    },
                    {
                        "username": "dgonzalesi",
                        "content": "Seems like it dont work in ruby, using one method, using a map, a for any of the options works always send an error, even if i just print the arguments [Screenshot](https://drive.google.com/file/d/19B08axFJg584n4hTbtutCXWqwo1StvPl/view?usp=share_link)"
                    },
                    {
                        "username": "dumb_me",
                        "content": "Used 2 pointer approach with little variation(standard approach)  : )\\n\\n```\\nwhile(j < nums.size()) {\\n   while(j < nums.size() && nums[i] == nums[j]) j++;\\n   if(j == nums.size()) break; \\n   nums[k] = nums[j];\\n   i = j;\\n   k++;\\n}\\n```"
                    },
                    {
                        "username": "sirDavid97",
                        "content": "Small py3 solution:\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        k=len(list(dict.fromkeys(nums)))\\n        new_nums = list(dict.fromkeys(nums))\\n        for i in range(0 , len(new_nums)):\\n            while new_nums[i] != nums[i]:\\n                nums.pop(i)\\n                nums.append(\\'_\\')\\n        return k"
                    },
                    {
                        "username": "rahulSrivastava05",
                        "content": "Efficient Approach : \\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size() == 0) return 0;\\n        int res = 1;\\n        for(int i=1;i<nums.size();i++){\\n            if(nums[i] != nums[res-1]){\\n                nums[res] = nums[i];\\n                res++;\\n            }\\n        }\\n        return res;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-remove-duplicates-from-sorted-array-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-remove-duplicates-from-sorted-array-problem-solution.html)"
                    },
                    {
                        "username": "DevyaniVashishth",
                        "content": "var removeDuplicates = function(nums) {\\n    let arr = [];\\n    for(let i = 0; i < nums.length - 1; i++){\\nif(nums[i] !== nums[i + 1]){\\narr.push(nums[i])\\n\\n}\\n    }\\n     arr.push(nums[nums.length - 1]);\\n     // let  l = arr.length;\\n     return arr;\\n};     this code is working fine on freecodecamp console... but here it shows error. i dont know  why is that so, if someone could help me out. i ll be gratefful"
                    },
                    {
                        "username": "blackishigh",
                        "content": "My solution\\n```java\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int kIndex = 0;\\n        int kValue = nums[0];\\n        for(int point = 0 ; point < nums.length -1  ; point ++) {\\n            if(kValue < nums[point+1]) {\\n                int nowKValue = nums[point+1];\\n                nums[point + 1] =  kValue;\\n                nums[kIndex + 1] = nowKValue;\\n                kValue = nowKValue;\\n                kIndex ++ ;\\n            }\\n        }\\n        return kIndex + 1;\\n    }\\n}\\n```"
                    },
                    {
                        "username": "Odegaa",
                        "content": "if (nums.length <= 1) {\\n            return nums.length;\\n        }\\n\\n        Arrays.sort(nums);\\n        List<Integer> duplicateNumbers = new ArrayList<>();\\n\\n        for (int num : nums) {\\n            duplicateNumbers.add(num);\\n        }\\n\\n        for (int i = 0; i < duplicateNumbers.size(); i++) {\\n            for (int j = i + 1; j < nums.length; j++) {\\n                if (nums[i] == nums[j]) {\\n                    duplicateNumbers.remove(nums[i]);\\n                }\\n            }\\n        }\\n        int [] newArray = new int[duplicateNumbers.size()];\\n\\n        for (int i = 0; i < newArray.length; i++) {\\n            newArray[i] = duplicateNumbers.get(i);\\n        }\\n\\n        return newArray.length;\\n\\n\\nWHY??\\n"
                    },
                    {
                        "username": "valibraimi",
                        "content": "Its easy but needed simpler explanation but overall was easy to solve, it took 6 mins or less."
                    }
                ]
            },
            {
                "id": 1653834,
                "content": [
                    {
                        "username": "yashmondal5006",
                        "content": "please can anyone help me by explaining why are we returning k instead of new nums ??\\n"
                    },
                    {
                        "username": "sparklingness",
                        "content": "IMO.. this problem want you to use the given array nums. And we have to replace values, not make new array. (in-place)\\nSo, we\\'re needed to changed given array to be sorted and not be duplicated in k elements from the start. "
                    },
                    {
                        "username": "dgonzalesi",
                        "content": "Seems like it dont work in ruby, using one method, using a map, a for any of the options works always send an error, even if i just print the arguments [Screenshot](https://drive.google.com/file/d/19B08axFJg584n4hTbtutCXWqwo1StvPl/view?usp=share_link)"
                    },
                    {
                        "username": "dumb_me",
                        "content": "Used 2 pointer approach with little variation(standard approach)  : )\\n\\n```\\nwhile(j < nums.size()) {\\n   while(j < nums.size() && nums[i] == nums[j]) j++;\\n   if(j == nums.size()) break; \\n   nums[k] = nums[j];\\n   i = j;\\n   k++;\\n}\\n```"
                    },
                    {
                        "username": "sirDavid97",
                        "content": "Small py3 solution:\\n\\nclass Solution:\\n    def removeDuplicates(self, nums: List[int]) -> int:\\n        k=len(list(dict.fromkeys(nums)))\\n        new_nums = list(dict.fromkeys(nums))\\n        for i in range(0 , len(new_nums)):\\n            while new_nums[i] != nums[i]:\\n                nums.pop(i)\\n                nums.append(\\'_\\')\\n        return k"
                    },
                    {
                        "username": "rahulSrivastava05",
                        "content": "Efficient Approach : \\n\\nclass Solution {\\npublic:\\n    int removeDuplicates(vector<int>& nums) {\\n        if(nums.size() == 0) return 0;\\n        int res = 1;\\n        for(int i=1;i<nums.size();i++){\\n            if(nums[i] != nums[res-1]){\\n                nums[res] = nums[i];\\n                res++;\\n            }\\n        }\\n        return res;\\n        \\n    }\\n};"
                    },
                    {
                        "username": "yashdeora",
                        "content": "Here is problem solution in Python, Java, C++ and C programming.\\n[https://www.gyangav.com/2022/11/leetcode-remove-duplicates-from-sorted-array-problem-solution.html](https://www.gyangav.com/2022/11/leetcode-remove-duplicates-from-sorted-array-problem-solution.html)"
                    },
                    {
                        "username": "DevyaniVashishth",
                        "content": "var removeDuplicates = function(nums) {\\n    let arr = [];\\n    for(let i = 0; i < nums.length - 1; i++){\\nif(nums[i] !== nums[i + 1]){\\narr.push(nums[i])\\n\\n}\\n    }\\n     arr.push(nums[nums.length - 1]);\\n     // let  l = arr.length;\\n     return arr;\\n};     this code is working fine on freecodecamp console... but here it shows error. i dont know  why is that so, if someone could help me out. i ll be gratefful"
                    },
                    {
                        "username": "blackishigh",
                        "content": "My solution\\n```java\\nclass Solution {\\n    public int removeDuplicates(int[] nums) {\\n        int kIndex = 0;\\n        int kValue = nums[0];\\n        for(int point = 0 ; point < nums.length -1  ; point ++) {\\n            if(kValue < nums[point+1]) {\\n                int nowKValue = nums[point+1];\\n                nums[point + 1] =  kValue;\\n                nums[kIndex + 1] = nowKValue;\\n                kValue = nowKValue;\\n                kIndex ++ ;\\n            }\\n        }\\n        return kIndex + 1;\\n    }\\n}\\n```"
                    },
                    {
                        "username": "Odegaa",
                        "content": "if (nums.length <= 1) {\\n            return nums.length;\\n        }\\n\\n        Arrays.sort(nums);\\n        List<Integer> duplicateNumbers = new ArrayList<>();\\n\\n        for (int num : nums) {\\n            duplicateNumbers.add(num);\\n        }\\n\\n        for (int i = 0; i < duplicateNumbers.size(); i++) {\\n            for (int j = i + 1; j < nums.length; j++) {\\n                if (nums[i] == nums[j]) {\\n                    duplicateNumbers.remove(nums[i]);\\n                }\\n            }\\n        }\\n        int [] newArray = new int[duplicateNumbers.size()];\\n\\n        for (int i = 0; i < newArray.length; i++) {\\n            newArray[i] = duplicateNumbers.get(i);\\n        }\\n\\n        return newArray.length;\\n\\n\\nWHY??\\n"
                    },
                    {
                        "username": "valibraimi",
                        "content": "Its easy but needed simpler explanation but overall was easy to solve, it took 6 mins or less."
                    }
                ]
            }
        ]
    }
]