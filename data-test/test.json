[
    {
        "link": "/problemset/task/1068",
        "title": "Weird Algorithm",
        "content": "Consider an algorithm that takes as input a positive integer n. If n is even, the algorithm divides it by two, and if n is odd, the algorithm multiplies it by three and adds one. The algorithm repeats this, until n is one. For example, the sequence for n=3 is as follows:\n 3 \\rightarrow 10 \\rightarrow 5 \\rightarrow 16 \\rightarrow 8 \\rightarrow 4 \\rightarrow 2 \\rightarrow 1\nYour task is to simulate the execution of the algorithm for a given value of n.\nInput\nThe only input line contains an integer n.\nOutput\nPrint a line that contains all values of n during the algorithm.\nConstraints\n\n1 \\le n \\le 10^6\n\nExample\nInput:\n3\n\nOutput:\n3 10 5 16 8 4 2 1\n"
    },
    {
        "link": "/problemset/task/1083",
        "title": "Missing Number",
        "content": "You are given all numbers between 1,2,\\ldots,n except one. Your task is to find the missing number.\nInput\nThe first input line contains an integer n.\nThe second line contains n-1 numbers. Each number is distinct and between 1 and n (inclusive).\nOutput\nPrint the missing number.\nConstraints\n\n2 \\le n \\le 2 \\cdot 10^5\n\nExample\nInput:\n5\n2 3 1 5\n\nOutput:\n4\n"
    },
    {
        "link": "/problemset/task/1069",
        "title": "Repetitions",
        "content": "You are given a DNA sequence: a string consisting of characters A, C, G, and T. Your task is to find the longest repetition in the sequence. This is a maximum-length substring containing only one type of character.\nInput\nThe only input line contains a string of n characters.\nOutput\nPrint one integer: the length of the longest repetition.\nConstraints\n\n1 \\le n \\le 10^6\n\nExample\nInput:\nATTCGGGA\n\nOutput:\n3\n"
    },
    {
        "link": "/problemset/task/1094",
        "title": "Increasing Array",
        "content": "You are given an array of n integers. You want to modify the array so that it is increasing, i.e., every element is at least as large as the previous element.\nOn each move, you may increase the value of any element by one. What is the minimum number of moves required?\nInput\nThe first input line contains an integer n: the size of the array.\nThen, the second line contains n integers x_1,x_2,\\ldots,x_n: the contents of the array.\nOutput\nPrint the minimum number of moves.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le x_i \\le 10^9\n\nExample\nInput:\n5\n3 2 5 1 7\n\nOutput:\n5\n"
    },
    {
        "link": "/problemset/task/1070",
        "title": "Permutations",
        "content": "A permutation of integers 1,2,\\ldots,n is called beautiful if there are no adjacent elements whose difference is 1.\nGiven n, construct a beautiful permutation if such a permutation exists.\nInput\nThe only input line contains an integer n.\nOutput\nPrint a beautiful permutation of integers 1,2,\\ldots,n. If there are several solutions, you may print any of them. If there are no solutions, print \"NO SOLUTION\".\nConstraints\n\n1 \\le n \\le 10^6\n\nExample 1\nInput:\n5\n\nOutput:\n4 2 5 3 1\nExample 2\nInput:\n3\n\nOutput:\nNO SOLUTION\n"
    },
    {
        "link": "/problemset/task/1071",
        "title": "Number Spiral",
        "content": "A number spiral is an infinite grid whose upper-left square has number 1. Here are the first five layers of the spiral:\n\nYour task is to find out the number in row y and column x.\nInput\nThe first input line contains an integer t: the number of tests.\nAfter this, there are t lines, each containing integers y and x.\nOutput\nFor each test, print the number in row y and column x.\nConstraints\n\n1 \\le t \\le 10^5\n1 \\le y,x \\le 10^9\n\nExample\nInput:\n3\n2 3\n1 1\n4 2\n\nOutput:\n8\n1\n15\n"
    },
    {
        "link": "/problemset/task/1072",
        "title": "Two Knights",
        "content": "Your task is to count for k=1,2,\\ldots,n the number of ways two knights can be placed on a k \\times k chessboard so that they do not attack each other.\nInput\nThe only input line contains an integer n.\nOutput\nPrint n integers: the results.\nConstraints\n\n1 \\le n \\le 10000\n\nExample\nInput:\n8\n\nOutput:\n0\n6\n28\n96\n252\n550\n1056\n1848\n"
    },
    {
        "link": "/problemset/task/1092",
        "title": "Two Sets",
        "content": "Your task is to divide the numbers 1,2,\\ldots,n into two sets of equal sum.\nInput\nThe only input line contains an integer n.\nOutput\nPrint \"YES\", if the division is possible, and \"NO\" otherwise.\nAfter this, if the division is possible, print an example of how to create the sets. First, print the number of elements in the first set followed by the elements themselves in a separate line, and then, print the second set in a similar way.\nConstraints\n\n1 \\le n \\le 10^6\n\nExample 1\nInput:\n7\n\nOutput:\nYES\n4\n1 2 4 7\n3\n3 5 6\nExample 2\nInput:\n6\n\nOutput:\nNO\n"
    },
    {
        "link": "/problemset/task/1617",
        "title": "Bit Strings",
        "content": "Your task is to calculate the number of bit strings of length n.\nFor example, if n=3, the correct answer is 8, because the possible bit strings are 000, 001, 010, 011, 100, 101, 110, and 111.\nInput\nThe only input line has an integer n.\nOutput\nPrint the result modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 10^6\n\nExample\nInput:\n3\n\nOutput:\n8\n"
    },
    {
        "link": "/problemset/task/1618",
        "title": "Trailing Zeros",
        "content": "Your task is to calculate the number of trailing zeros in the factorial n!.\nFor example, 20!=2432902008176640000 and it has 4 trailing zeros.\nInput\nThe only input line has an integer n.\nOutput\nPrint the number of trailing zeros in n!.\nConstraints\n\n1 \\le n \\le 10^9\n\nExample\nInput:\n20\n\nOutput:\n4\n"
    },
    {
        "link": "/problemset/task/1754",
        "title": "Coin Piles",
        "content": "You have two coin piles containing a and b coins. On each move, you can either remove one coin from the left pile and two coins from the right pile, or two coins from the left pile and one coin from the right pile.\nYour task is to efficiently find out if you can empty both the piles.\nInput\nThe first input line has an integer t: the number of tests.\nAfter this, there are t lines, each of which has two integers a and b: the numbers of coins in the piles.\nOutput\nFor each test, print \"YES\" if you can empty the piles and \"NO\" otherwise.\nConstraints\n\n1 \\le t \\le 10^5\n0 \\le a, b \\le 10^9\n\nExample\nInput:\n3\n2 1\n2 2\n3 3\n\nOutput:\nYES\nNO\nYES\n"
    },
    {
        "link": "/problemset/task/1755",
        "title": "Palindrome Reorder",
        "content": "Given a string, your task is to reorder its letters in such a way that it becomes a palindrome (i.e., it reads the same forwards and backwards).\nInput\nThe only input line has a string of length n consisting of characters A\u2013Z.\nOutput\nPrint a palindrome consisting of the characters of the original string. You may print any valid solution. If there are no solutions, print \"NO SOLUTION\".\nConstraints\n\n1 \\le n \\le 10^6\n\nExample\nInput:\nAAAACACBA\n\nOutput:\nAACABACAA\n"
    },
    {
        "link": "/problemset/task/2205",
        "title": "Gray Code",
        "content": "A Gray code is a list of all 2^n bit strings of length n, where any two successive strings differ in exactly one bit (i.e., their Hamming distance is one).\nYour task is to create a Gray code for a given length n.\nInput\nThe only input line has an integer n.\nOutput\nPrint 2^n lines that describe the Gray code. You can print any valid solution.\nConstraints\n\n1 \\le n \\le 16\n\nExample\nInput:\n2\n\nOutput:\n00\n01\n11\n10\n"
    },
    {
        "link": "/problemset/task/2165",
        "title": "Tower of Hanoi",
        "content": "The Tower of Hanoi game consists of three stacks (left, middle and right) and n round disks of different sizes. Initially, the left stack has all the disks, in increasing order of size from top to bottom. \nThe goal is to move all the disks to the right stack using the middle stack. On each move you can move the uppermost disk from a stack to another stack. In addition, it is not allowed to place a larger disk on a smaller disk.\nYour task is to find a solution that minimizes the number of moves.\nInput\nThe only input line has an integer n: the number of disks.\nOutput\nFirst print an integer k: the minimum number of moves.\nAfter this, print k lines that describe the moves. Each line has two integers a and b: you move a disk from stack a to stack b.\nConstraints\n\n1 \\le n \\le 16\n\nExample\nInput:\n2\n\nOutput:\n3\n1 2\n1 3\n2 3\n"
    },
    {
        "link": "/problemset/task/1622",
        "title": "Creating Strings",
        "content": "Given a string, your task is to generate all different strings that can be created using its characters.\nInput\nThe only input line has a string of length n. Each character is between a\u2013z.\nOutput\nFirst print an integer k: the number of strings. Then print k lines: the strings in alphabetical order.\nConstraints\n\n1 \\le n \\le 8\n\nExample\nInput:\naabac\n\nOutput:\n20\naaabc\naaacb\naabac\naabca\naacab\naacba\nabaac\nabaca\nabcaa\nacaab\nacaba\nacbaa\nbaaac\nbaaca\nbacaa\nbcaaa\ncaaab\ncaaba\ncabaa\ncbaaa\n"
    },
    {
        "link": "/problemset/task/1623",
        "title": "Apple Division",
        "content": "There are n apples with known weights. Your task is to divide the apples into two groups so that the difference between the weights of the groups is minimal.\nInput\nThe first input line has an integer n: the number of apples.\nThe next line has n integers p_1,p_2,\\dots,p_n: the weight of each apple.\nOutput\nPrint one integer: the minimum difference between the weights of the groups.\nConstraints\n\n1 \\le n \\le 20\n1 \\le p_i \\le 10^9\n\nExample\nInput:\n5\n3 2 7 4 1\n\nOutput:\n1\n\nExplanation: Group 1 has weights 2, 3 and 4 (total weight 9), and group 2 has weights 1 and 7 (total weight 8).\n"
    },
    {
        "link": "/problemset/task/1624",
        "title": "Chessboard and Queens",
        "content": "Your task is to place eight queens on a chessboard so that no two queens are attacking each other. As an additional challenge, each square is either free or reserved, and you can only place queens on the free squares. However, the reserved squares do not prevent queens from attacking each other.\nHow many possible ways are there to place the queens?\nInput\nThe input has eight lines, and each of them has eight characters. Each square is either free (.) or reserved (*).\nOutput\nPrint one integer: the number of ways you can place the queens.\nExample\nInput:\n........\n........\n..*.....\n........\n........\n.....**.\n...*....\n........\n\nOutput:\n65\n"
    },
    {
        "link": "/problemset/task/2431",
        "title": "Digit Queries",
        "content": "Consider an infinite string that consists of all positive integers in increasing order:\n12345678910111213141516171819202122232425...\n\nYour task is to process q queries of the form: what is the digit at position k in the string?\nInput\nThe first input line has an integer q: the number of queries.\nAfter this, there are q lines that describe the queries. Each line has an integer k: a 1-indexed position in the string.\nOutput\nFor each query, print the corresponding digit.\nConstraints\n\n1 \\le q \\le 1000\n1 \\le k \\le 10^{18}\n\nExample\nInput:\n3\n7\n19\n12\n\nOutput:\n7\n4\n1\n"
    },
    {
        "link": "/problemset/task/1625",
        "title": "Grid Paths",
        "content": "There are 88418 paths in a 7 \\times 7 grid from the upper-left square to the lower-left square. Each path corresponds to a 48-character description consisting of characters D (down), U (up), L (left) and R (right).\nFor example, the path\n\ncorresponds to the description DRURRRRRDDDLUULDDDLDRRURDDLLLLLURULURRUULDLLDDDD.\nYou are given a description of a path which may also contain characters ? (any direction). Your task is to calculate the number of paths that match the description.\nInput\nThe only input line has a 48-character string of characters ?, D, U, L and R.\nOutput\nPrint one integer: the total number of paths.\nExample\nInput:\n??????R??????U??????????????????????????LD????D?\n\nOutput:\n201\n"
    },
    {
        "link": "/problemset/task/1621",
        "title": "Distinct Numbers",
        "content": "You are given a list of n integers, and your task is to calculate the number of distinct values in the list.\nInput\nThe first input line has an integer n: the number of values.\nThe second line has n integers x_1,x_2,\\dots,x_n.\nOutput\nPrint one integers: the number of distinct values.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le x_i \\le 10^9\n\nExample\nInput:\n5\n2 3 2 2 3\n\nOutput:\n2\n"
    },
    {
        "link": "/problemset/task/1084",
        "title": "Apartments",
        "content": "There are n applicants and m free apartments. Your task is to distribute the apartments so that as many applicants as possible will get an apartment.\nEach applicant has a desired apartment size, and they will accept any apartment whose size is close enough to the desired size.\nInput\nThe first input line has three integers n, m, and k: the number of applicants, the number of apartments, and the maximum allowed difference.\nThe next line contains n integers a_1, a_2, \\ldots, a_n: the desired apartment size of each applicant. If the desired size of an applicant is x, he or she will accept any apartment whose size is between x-k and x+k.\nThe last line contains m integers b_1, b_2, \\ldots, b_m: the size of each apartment.\nOutput\nPrint one integer: the number of applicants who will get an apartment.\nConstraints\n\n1 \\le n, m \\le 2 \\cdot 10^5\n0 \\le k \\le 10^9\n1 \\le a_i, b_i \\le 10^9\n\nExample\nInput:\n4 3 5\n60 45 80 60\n30 60 75\n\nOutput:\n2\n"
    },
    {
        "link": "/problemset/task/1090",
        "title": "Ferris Wheel",
        "content": "There are n children who want to go to a Ferris wheel, and your task is to find a gondola for each child.\nEach gondola may have one or two children in it, and in addition, the total weight in a gondola may not exceed x. You know the weight of every child.\nWhat is the minimum number of gondolas needed for the children?\nInput\nThe first input line contains two integers n and x: the number of children and the maximum allowed weight.\nThe next line contains n integers p_1,p_2,\\ldots,p_n: the weight of each child.\nOutput\nPrint one integer: the minimum number of gondolas.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le x \\le 10^9\n1 \\le p_i \\le x\n\nExample\nInput:\n4 10\n7 2 3 9\n\nOutput:\n3\n"
    },
    {
        "link": "/problemset/task/1091",
        "title": "Concert Tickets",
        "content": "There are n concert tickets available, each with a certain price. Then, m customers arrive, one after another.\nEach customer announces the maximum price they are willing to pay for a ticket, and after this, they will get a ticket with the nearest possible price such that it does not exceed the maximum price.\nInput\nThe first input line contains integers n and m: the number of tickets and the number of customers.\nThe next line contains n integers h_1,h_2,\\ldots,h_n: the price of each ticket.\nThe last line contains m integers t_1,t_2,\\ldots,t_m: the maximum price for each customer in the order they arrive.\nOutput\nPrint, for each customer, the price that they will pay for their ticket. After this, the ticket cannot be purchased again.\nIf a customer cannot get any ticket, print -1.\nConstraints\n\n1 \\le n, m \\le 2 \\cdot 10^5\n1 \\le h_i, t_i \\le 10^9\n\nExample\nInput:\n5 3\n5 3 7 8 5\n4 8 3\n\nOutput:\n3\n8\n-1\n"
    },
    {
        "link": "/problemset/task/1619",
        "title": "Restaurant Customers",
        "content": "You are given the arrival and leaving times of n customers in a restaurant.\nWhat was the maximum number of customers in the restaurant at any time?\nInput\nThe first input line has an integer n: the number of customers.\nAfter this, there are n lines that describe the customers. Each line has two integers a and b: the arrival and leaving times of a customer.\nYou may assume that all arrival and leaving times are distinct.\nOutput\nPrint one integer: the maximum number of customers.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le a &lt; b \\le 10^9\n\nExample\nInput:\n3\n5 8\n2 4\n3 9\n\nOutput:\n2\n"
    },
    {
        "link": "/problemset/task/1629",
        "title": "Movie Festival",
        "content": "In a movie festival n movies will be shown. You know the starting and ending time of each movie. What is the maximum number of movies you can watch entirely?\nInput\nThe first input line has an integer n: the number of movies.\nAfter this, there are n lines that describe the movies. Each line has two integers a and b: the starting and ending times of a movie.\nOutput\nPrint one integer: the maximum number of movies.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le a &lt; b \\le 10^9\n\nExample\nInput:\n3\n3 5\n4 9\n5 8\n\nOutput:\n2\n"
    },
    {
        "link": "/problemset/task/1640",
        "title": "Sum of Two Values",
        "content": "You are given an array of n integers, and your task is to find two values (at distinct positions) whose sum is x.\nInput\nThe first input line has two integers n and x: the array size and the target sum.\nThe second line has n integers a_1,a_2,\\dots,a_n: the array values.\nOutput\nPrint two integers: the positions of the values. If there are several solutions, you may print any of them. If there are no solutions, print IMPOSSIBLE.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le x,a_i \\le 10^9\n\nExample\nInput:\n4 8\n2 7 5 1\n\nOutput:\n2 4\n"
    },
    {
        "link": "/problemset/task/1643",
        "title": "Maximum Subarray Sum",
        "content": "Given an array of n integers, your task is to find the maximum sum of values in a contiguous, nonempty subarray.\nInput\nThe first input line has an integer n: the size of the array.\nThe second line has n integers x_1,x_2,\\dots,x_n: the array values.\nOutput\nPrint one integer: the maximum subarray sum.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n-10^9 \\le x_i \\le 10^9\n\nExample\nInput:\n8\n-1 3 -2 5 3 -5 2 2\n\nOutput:\n9\n"
    },
    {
        "link": "/problemset/task/1074",
        "title": "Stick Lengths",
        "content": "There are n sticks with some lengths. Your task is to modify the sticks so that each stick has the same length.\nYou can either lengthen and shorten each stick. Both operations cost x where x is the difference between the new and original length.\nWhat is the minimum total cost?\nInput\nThe first input line contains an integer n: the number of sticks.\nThen there are n integers: p_1,p_2,\\ldots,p_n: the lengths of the sticks.\nOutput\nPrint one integer: the minimum total cost.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le p_i \\le 10^9\n\nExample\nInput:\n5\n2 3 1 5 2\n\nOutput:\n5\n"
    },
    {
        "link": "/problemset/task/2183",
        "title": "Missing Coin Sum",
        "content": "You have n coins with positive integer values. What is the smallest sum you cannot create using a subset of the coins?\nInput\nThe first input line has an integer n: the number of coins.\nThe second line has n integers x_1,x_2,\\dots,x_n: the value of each coin.\nOutput\nPrint one integer: the smallest coin sum.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le x_i \\le 10^9\n\nExample\nInput:\n5\n2 9 1 2 7\n\nOutput:\n6\n"
    },
    {
        "link": "/problemset/task/2216",
        "title": "Collecting Numbers",
        "content": "You are given an array that contains each number between 1 \\dots n exactly once. Your task is to collect the numbers from 1 to n in increasing order.\nOn each round, you go through the array from left to right and collect as many numbers as possible. What will be the total number of rounds?\nInput\nThe first line has an integer n: the array size.\nThe next line has n integers x_1,x_2,\\dots,x_n: the numbers in the array.\nOutput\nPrint one integer: the number of rounds.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n\nExample\nInput:\n5\n4 2 1 5 3\n\nOutput:\n3\n"
    },
    {
        "link": "/problemset/task/2217",
        "title": "Collecting Numbers II",
        "content": "You are given an array that contains each number between 1 \\dots n exactly once. Your task is to collect the numbers from 1 to n in increasing order.\nOn each round, you go through the array from left to right and collect as many numbers as possible.\nGiven m operations that swap two numbers in the array, your task is to report the number of rounds after each operation.\nInput\nThe first line has two integers n and m: the array size and the number of operations.\nThe next line has n integers x_1,x_2,\\dots,x_n: the numbers in the array.\nFinally, there are m lines that describe the operations. Each line has two integers a and b: the numbers at positions a and b are swapped.\nOutput\nPrint m integers: the number of rounds after each swap.\nConstraints\n\n1 \\le n, m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5 3\n4 2 1 5 3\n2 3\n1 5\n2 3\n\nOutput:\n2\n3\n4\n"
    },
    {
        "link": "/problemset/task/1141",
        "title": "Playlist",
        "content": "You are given a playlist of a radio station since its establishment. The playlist has a total of n songs.\nWhat is the longest sequence of successive songs where each song is unique?\nInput\nThe first input line contains an integer n: the number of songs.\nThe next line has n integers k_1,k_2,\\ldots,k_n: the id number of each song.\nOutput\nPrint the length of the longest sequence of unique songs.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le k_i \\le 10^9\n\nExample\nInput:\n8\n1 2 1 3 2 7 4 2\n\nOutput:\n5\n"
    },
    {
        "link": "/problemset/task/1073",
        "title": "Towers",
        "content": "You are given n cubes in a certain order, and your task is to build towers using them. Whenever two cubes are one on top of the other, the upper cube must be smaller than the lower cube.\nYou must process the cubes in the given order. You can always either place the cube on top of an existing tower, or begin a new tower. What is the minimum possible number of towers?\nInput\nThe first input line contains an integer n: the number of cubes.\nThe next line contains n integers k_1,k_2,\\ldots,k_n: the sizes of the cubes.\nOutput\nPrint one integer: the minimum number of towers.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le k_i \\le 10^9\n\nExample\nInput:\n5\n3 8 2 1 5\n\nOutput:\n2\n"
    },
    {
        "link": "/problemset/task/1163",
        "title": "Traffic Lights",
        "content": "There is a street of length x whose positions are numbered 0,1,\\ldots,x. Initially there are no traffic lights, but n sets of traffic lights are added to the street one after another.\nYour task is to calculate the length of the longest passage without traffic lights after each addition.\nInput\nThe first input line contains two integers x and n: the length of the street and the number of sets of traffic lights.\nThen, the next line contains n integers p_1,p_2,\\ldots,p_n: the position of each set of traffic lights. Each position is distinct.\nOutput\nPrint the length of the longest passage without traffic lights after each addition.\nConstraints\n\n1 \\le x \\le 10^9\n1 \\le n \\le 2 \\cdot 10^5\n0 &lt; p_i &lt; x\n\nExample\nInput:\n8 3\n3 6 2\n\nOutput:\n5 3 3\n"
    },
    {
        "link": "/problemset/task/2162",
        "title": "Josephus Problem I",
        "content": "Consider a game where there are n children (numbered 1,2,\\dots,n) in a circle. During the game, every other child is removed from the circle until there are no children left. In which order will the children be removed?\nInput\nThe only input line has an integer n.\nOutput\nPrint n integers: the removal order.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n\nExample\nInput:\n7\n\nOutput:\n2 4 6 1 5 3 7\n"
    },
    {
        "link": "/problemset/task/2163",
        "title": "Josephus Problem II",
        "content": "Consider a game where there are n children (numbered 1,2,\\dots,n) in a circle. During the game, repeatedly k children are skipped and one child is removed from the circle. In which order will the children be removed?\nInput\nThe only input line has two integers n and k.\nOutput\nPrint n integers: the removal order.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n0 \\le k \\le 10^9\n\nExample\nInput:\n7 2\n\nOutput:\n3 6 2 7 5 1 4\n"
    },
    {
        "link": "/problemset/task/2168",
        "title": "Nested Ranges Check",
        "content": "Given n ranges, your task is to determine for each range if it contains some other range and if some other range contains it.\nRange [a,b] contains range [c,d] if a \\le c and d \\le b.\nInput\nThe first input line has an integer n: the number of ranges.\nAfter this, there are n lines that describe the ranges. Each line has two integers x and y: the range is [x,y].\nYou may assume that no range appears more than once in the input.\nOutput\nFirst print a line that describes for each range (in the input order) if it contains some other range (1) or not (0).\nThen print a line that describes for each range (in the input order) if some other range contains it (1) or not (0).\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le x &lt; y \\le 10^9\n\nExample\nInput:\n4\n1 6\n2 4\n4 8\n3 6\n\nOutput:\n1 0 0 0\n0 1 0 1\n"
    },
    {
        "link": "/problemset/task/2169",
        "title": "Nested Ranges Count",
        "content": "Given n ranges, your task is to count for each range how many other ranges it contains and how many other ranges contain it.\nRange [a,b] contains range [c,d] if a \\le c and d \\le b.\nInput\nThe first input line has an integer n: the number of ranges.\nAfter this, there are n lines that describe the ranges. Each line has two integers x and y: the range is [x,y].\nYou may assume that no range appears more than once in the input.\nOutput\nFirst print a line that describes for each range (in the input order) how many other ranges it contains.\nThen print a line that describes for each range (in the input order) how many other ranges contain it.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le x &lt; y \\le 10^9\n\nExample\nInput:\n4\n1 6\n2 4\n4 8\n3 6\n\nOutput:\n2 0 0 0\n0 1 0 1\n"
    },
    {
        "link": "/problemset/task/1164",
        "title": "Room Allocation",
        "content": "There is a large hotel, and n customers will arrive soon. Each customer wants to have a single room.\nYou know each customer's arrival and departure day. Two customers can stay in the same room if the departure day of the first customer is earlier than the arrival day of the second customer.\nWhat is the minimum number of rooms that are needed to accommodate all customers? And how can the rooms be allocated?\nInput\nThe first input line contains an integer n: the number of customers.\nThen there are n lines, each of which describes one customer. Each line has two integers a and b: the arrival and departure day.\nOutput\nPrint first an integer k: the minimum number of rooms required.\nAfter that, print a line that contains the room number of each customer in the same order as in the input. The rooms are numbered 1,2,\\ldots,k. You can print any valid solution.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le a \\le b \\le 10^9\n\nExample\nInput:\n3\n1 2\n2 4\n4 4\n\nOutput:\n2\n1 2 1\n"
    },
    {
        "link": "/problemset/task/1620",
        "title": "Factory Machines",
        "content": "A factory has n machines which can be used to make products. Your goal is to make a total of t products.\nFor each machine, you know the number of seconds it needs to make a single product. The machines can work simultaneously, and you can freely decide their schedule.\nWhat is the shortest time needed to make t products?\nInput\nThe first input line has two integers n and t: the number of machines and products.\nThe next line has n integers k_1,k_2,\\dots,k_n: the time needed to make a product using each machine.\nOutput\nPrint one integer: the minimum time needed to make t products.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le t \\le 10^9\n1 \\le k_i \\le 10^9\n\nExample\nInput:\n3 7\n3 2 5\n\nOutput:\n8\n\nExplanation: Machine 1 makes two products, machine 2 makes four products and machine 3 makes one product.\n"
    },
    {
        "link": "/problemset/task/1630",
        "title": "Tasks and Deadlines",
        "content": "You have to process n tasks. Each task has a duration and a deadline, and you will process the tasks in some order one after another. Your reward for a task is d-f where d is its deadline and f is your finishing time. (The starting time is 0, and you have to process all tasks even if a task would yield negative reward.)\nWhat is your maximum reward if you act optimally?\nInput\nThe first input line has an integer n: the number of tasks.\nAfter this, there are n lines that describe the tasks. Each line has two integers a and d: the duration and deadline of the task.\nOutput\nPrint one integer: the maximum reward.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le a,d \\le 10^6\n\nExample\nInput:\n3\n6 10\n8 15\n5 12\n\nOutput:\n2\n"
    },
    {
        "link": "/problemset/task/1631",
        "title": "Reading Books",
        "content": "There are n books, and Kotivalo and Justiina are going to read them all. For each book, you know the time it takes to read it.\nThey both read each book from beginning to end, and they cannot read a book at the same time. What is the minimum total time required?\nInput\nThe first input line has an integer n: the number of books.\nThe second line has n integers t_1,t_2,\\dots,t_n: the time required to read each book.\nOutput\nPrint one integer: the minimum total time.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le t_i \\le 10^9\n\nExample\nInput:\n3\n2 8 3\n\nOutput:\n16\n"
    },
    {
        "link": "/problemset/task/1641",
        "title": "Sum of Three Values",
        "content": "You are given an array of n integers, and your task is to find three values (at distinct positions) whose sum is x.\nInput\nThe first input line has two integers n and x: the array size and the target sum.\nThe second line has n integers a_1,a_2,\\dots,a_n: the array values.\nOutput\nPrint three integers: the positions of the values. If there are several solutions, you may print any of them. If there are no solutions, print IMPOSSIBLE.\nConstraints\n\n1 \\le n \\le 5000\n1 \\le x,a_i \\le 10^9\n\nExample\nInput:\n4 8\n2 7 5 1\n\nOutput:\n1 3 4\n"
    },
    {
        "link": "/problemset/task/1642",
        "title": "Sum of Four Values",
        "content": "You are given an array of n integers, and your task is to find four values (at distinct positions) whose sum is x.\nInput\nThe first input line has two integers n and x: the array size and the target sum.\nThe second line has n integers a_1,a_2,\\dots,a_n: the array values.\nOutput\nPrint four integers: the positions of the values. If there are several solutions, you may print any of them. If there are no solutions, print IMPOSSIBLE.\nConstraints\n\n1 \\le n \\le 1000\n1 \\le x,a_i \\le 10^9\n\nExample\nInput:\n8 15\n3 2 5 8 1 3 2 3\n\nOutput:\n2 4 6 7\n"
    },
    {
        "link": "/problemset/task/1645",
        "title": "Nearest Smaller Values",
        "content": "Given an array of n integers, your task is to find for each array position the nearest position to its left having a smaller value.\nInput\nThe first input line has an integer n: the size of the array.\nThe second line has n integers x_1,x_2,\\dots,x_n: the array values.\nOutput\nPrint n integers: for each array position the nearest position with a smaller value. If there is no such position, print 0.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le x_i \\le 10^9\n\nExample\nInput:\n8\n2 5 1 4 8 3 2 5\n\nOutput:\n0 1 0 3 4 3 3 7\n"
    },
    {
        "link": "/problemset/task/1660",
        "title": "Subarray Sums I",
        "content": "Given an array of n positive integers, your task is to count the number of subarrays having sum x.\nInput\nThe first input line has two integers n and x: the size of the array and the target sum x.\nThe next line has n integers a_1,a_2,\\dots,a_n: the contents of the array.\nOutput\nPrint one integer: the required number of subarrays.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le x,a_i \\le 10^9\n\nExample\nInput:\n5 7\n2 4 1 2 7\n\nOutput:\n3\n"
    },
    {
        "link": "/problemset/task/1661",
        "title": "Subarray Sums II",
        "content": "Given an array of n integers, your task is to count the number of subarrays having sum x.\nInput\nThe first input line has two integers n and x: the size of the array and the target sum x.\nThe next line has n integers a_1,a_2,\\dots,a_n: the contents of the array.\nOutput\nPrint one integer: the required number of subarrays.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n-10^9 \\le x,a_i \\le 10^9\n\nExample\nInput:\n5 7\n2 -1 3 5 -2\n\nOutput:\n2\n"
    },
    {
        "link": "/problemset/task/1662",
        "title": "Subarray Divisibility",
        "content": "Given an array of n integers, your task is to count the number of subarrays where the sum of values is divisible by n.\nInput\nThe first input line has an integer n: the size of the array.\nThe next line has n integers a_1,a_2,\\dots,a_n: the contents of the array.\nOutput\nPrint one integer: the required number of subarrays.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n-10^9 \\le a_i \\le 10^9\n\nExample\nInput:\n5\n3 1 2 7 4\n\nOutput:\n1\n"
    },
    {
        "link": "/problemset/task/2428",
        "title": "Subarray Distinct Values",
        "content": "Given an array of n integers, your task is to calculate the number of subarrays that have at most k distinct values.\nInput\nThe first input line has two integers n and k.\nThe next line has n integers x_1,x_2,\\dots,x_n: the contents of the array.\nOutput\nPrint one integer: the number of subarrays.\nConstraints\n\n1 \\le k \\le n \\le 2 \\cdot 10^5\n1 \\le x_i \\le 10^9\n\nExample\nInput:\n5 2\n1 2 3 1 1\n\nOutput:\n10\n"
    },
    {
        "link": "/problemset/task/1085",
        "title": "Array Division",
        "content": "You are given an array containing n positive integers.\nYour task is to divide the array into k subarrays so that the maximum sum in a subarray is as small as possible.\nInput\nThe first input line contains two integers n and k: the size of the array and the number of subarrays in the division.\nThe next line contains n integers x_1,x_2,\\ldots,x_n: the contents of the array.\nOutput\nPrint one integer: the maximum sum in a subarray in the optimal division.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le k \\le n\n1 \\le x_i \\le 10^9\n\nExample\nInput:\n5 3\n2 4 7 3 5\n\nOutput:\n8\n\nExplanation: An optimal division is [2,4],[7],[3,5] where the sums of the subarrays are 6,7,8. The largest sum is the last sum 8.\n"
    },
    {
        "link": "/problemset/task/1076",
        "title": "Sliding Median",
        "content": "You are given an array of n integers. Your task is to calculate the median of each window of k elements, from left to right.\nThe median is the middle element when the elements are sorted. If the number of elements is even, there are two possible medians and we assume that the median is the smaller of them.\nInput\nThe first input line contains two integers n and k: the number of elements and the size of the window.\nThen there are n integers x_1,x_2,\\ldots,x_n: the contents of the array.\nOutput\nPrint n-k+1 values: the medians.\nConstraints\n\n1 \\le k \\le n \\le 2 \\cdot 10^5\n1 \\le x_i \\le 10^9\n\nExample\nInput:\n8 3\n2 4 3 5 8 1 2 1\n\nOutput:\n3 4 5 5 2 1\n"
    },
    {
        "link": "/problemset/task/1077",
        "title": "Sliding Cost",
        "content": "You are given an array of n integers. Your task is to calculate for each window of k elements, from left to right, the minimum total cost of making all elements equal.\nYou can increase or decrease each element with cost x where x is the difference between the new and the original value. The total cost is the sum of such costs.\nInput\nThe first input line contains two integers n and k: the number of elements and the size of the window.\nThen there are n integers x_1,x_2,\\ldots,x_n: the contents of the array.\nOutput\nOutput n-k+1 values: the costs.\nConstraints\n\n1 \\le k \\le n \\le 2 \\cdot 10^5\n1 \\le x_i \\le 10^9\n\nExample\nInput:\n8 3\n2 4 3 5 8 1 2 1\n\nOutput:\n2 2 5 7 7 1\n"
    },
    {
        "link": "/problemset/task/1632",
        "title": "Movie Festival II",
        "content": "In a movie festival, n movies will be shown. Syrj\u00e4l\u00e4's movie club consists of k members, who will be all attending the festival.\nYou know the starting and ending time of each movie. What is the maximum total number of movies the club members can watch entirely if they act optimally?\nInput\nThe first input line has two integers n and k: the number of movies and club members.\nAfter this, there are n lines that describe the movies. Each line has two integers a and b: the starting and ending time of a movie.\nOutput\nPrint one integer: the maximum total number of movies.\nConstraints\n\n1 \\le k \\le n \\le 2 \\cdot 10^5\n1 \\le a &lt; b \\le 10^9\n\nExample\nInput:\n5 2\n1 5\n8 10\n3 6\n2 5\n6 9\n\nOutput:\n4\n"
    },
    {
        "link": "/problemset/task/1644",
        "title": "Maximum Subarray Sum II",
        "content": "Given an array of n integers, your task is to find the maximum sum of values in a contiguous subarray with length between a and b.\nInput\nThe first input line has three integers n, a and b: the size of the array and the minimum and maximum subarray length.\nThe second line has n integers x_1,x_2,\\dots,x_n: the array values.\nOutput\nPrint one integer: the maximum subarray sum.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le a \\le b \\le n\n-10^9 \\le x_i \\le 10^9\n\nExample\nInput:\n8 1 2\n-1 3 -2 5 3 -5 2 2\n\nOutput:\n8\n"
    },
    {
        "link": "/problemset/task/1633",
        "title": "Dice Combinations",
        "content": "Your task is to count the number of ways to construct sum n by throwing a dice one or more times. Each throw produces an outcome between 1 and  6.\nFor example, if n=3, there are 4 ways:\n\n1+1+1\n1+2\n2+1\n3\n\nInput\nThe only input line has an integer n.\nOutput\nPrint the number of ways modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 10^6\n\nExample\nInput:\n3\n\nOutput:\n4\n"
    },
    {
        "link": "/problemset/task/1634",
        "title": "Minimizing Coins",
        "content": "Consider a money system consisting of n coins. Each coin has a positive integer value. Your task is to produce a sum of money x using the available coins in such a way that the number of coins is minimal.\nFor example, if the coins are \\{1,5,7\\} and the desired sum is 11, an optimal solution is 5+5+1 which requires 3 coins.\nInput\nThe first input line has two integers n and x: the number of coins and the desired sum of money.\nThe second line has n distinct integers c_1,c_2,\\dots,c_n: the value of each coin.\nOutput\nPrint one integer: the minimum number of coins. If it is not possible to produce the desired sum, print -1.\nConstraints\n\n1 \\le n \\le 100\n1 \\le x \\le 10^6\n1 \\le c_i \\le 10^6\n\nExample\nInput:\n3 11\n1 5 7\n\nOutput:\n3\n"
    },
    {
        "link": "/problemset/task/1635",
        "title": "Coin Combinations I",
        "content": "Consider a money system consisting of n coins. Each coin has a positive integer value. Your task is to calculate the number of distinct ways you can produce a money sum x using the available coins.\nFor example, if the coins are \\{2,3,5\\} and the desired sum is 9, there are 8 ways:\n\n2+2+5\n2+5+2\n5+2+2\n3+3+3\n2+2+2+3\n2+2+3+2\n2+3+2+2\n3+2+2+2\n\nInput\nThe first input line has two integers n and x: the number of coins and the desired sum of money.\nThe second line has n distinct integers c_1,c_2,\\dots,c_n: the value of each coin.\nOutput\nPrint one integer: the number of ways modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 100\n1 \\le x \\le 10^6\n1 \\le c_i \\le 10^6\n\nExample\nInput:\n3 9\n2 3 5\n\nOutput:\n8\n"
    },
    {
        "link": "/problemset/task/1636",
        "title": "Coin Combinations II",
        "content": "Consider a money system consisting of n coins. Each coin has a positive integer value. Your task is to calculate the number of distinct ordered ways you can produce a money sum x using the available coins.\nFor example, if the coins are \\{2,3,5\\} and the desired sum is 9, there are 3 ways:\n\n2+2+5\n3+3+3\n2+2+2+3\n\nInput\nThe first input line has two integers n and x: the number of coins and the desired sum of money.\nThe second line has n distinct integers c_1,c_2,\\dots,c_n: the value of each coin.\nOutput\nPrint one integer: the number of ways modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 100\n1 \\le x \\le 10^6\n1 \\le c_i \\le 10^6\n\nExample\nInput:\n3 9\n2 3 5\n\nOutput:\n3\n"
    },
    {
        "link": "/problemset/task/1637",
        "title": "Removing Digits",
        "content": "You are given an integer n. On each step, you may subtract one of the digits from the number.\nHow many steps are required to make the number equal to 0?\nInput\nThe only input line has an integer n.\nOutput\nPrint one integer: the minimum number of steps.\nConstraints\n\n1 \\le n \\le 10^6\n\nExample\nInput:\n27\n\nOutput:\n5\n\nExplanation: An optimal solution is 27 \\rightarrow 20 \\rightarrow 18 \\rightarrow 10 \\rightarrow 9 \\rightarrow 0.\n"
    },
    {
        "link": "/problemset/task/1638",
        "title": "Grid Paths",
        "content": "Consider an n \\times n grid whose squares may have traps. It is not allowed to move to a square with a trap.\nYour task is to calculate the number of paths from the upper-left square to the lower-right square. You can only move right or down.\nInput\nThe first input line has an integer n: the size of the grid.\nAfter this, there are n lines that describe the grid. Each line has n characters: . denotes an empty cell, and * denotes a trap.\nOutput\nPrint the number of paths modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 1000\n\nExample\nInput:\n4\n....\n.*..\n...*\n*...\n\nOutput:\n3\n"
    },
    {
        "link": "/problemset/task/1158",
        "title": "Book Shop",
        "content": "You are in a book shop which sells n different books. You know the price and number of pages of each book.\nYou have decided that the total price of your purchases will be at most x. What is the maximum number of pages you can buy? You can buy each book at most once.\nInput\nThe first input line contains two integers n and x: the number of books and the maximum total price.\nThe next line contains n integers h_1,h_2,\\ldots,h_n: the price of each book.\nThe last line contains n integers s_1,s_2,\\ldots,s_n: the number of pages of each book.\nOutput\nPrint one integer: the maximum number of pages.\nConstraints\n\n1 \\le n \\le 1000\n1 \\le x \\le 10^5\n1 \\le h_i, s_i \\le 1000\n\nExample\nInput:\n4 10\n4 8 5 3\n5 12 8 1\n\nOutput:\n13\n\nExplanation: You can buy books 1 and 3. Their price is 4+5=9 and the number of pages is 5+8=13.\n"
    },
    {
        "link": "/problemset/task/1746",
        "title": "Array Description",
        "content": "You know that an array has n integers between 1 and  m, and the absolute difference between two adjacent values is at most 1.\nGiven a description of the array where some values may be unknown, your task is to count the number of arrays that match the description.\nInput\nThe first input line has two integers n and m: the array size and the upper bound for each value.\nThe next line has n integers x_1,x_2,\\dots,x_n: the contents of the array. Value 0 denotes an unknown value.\nOutput\nPrint one integer: the number of arrays modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le m \\le 100\n0 \\le x_i \\le m\n\nExample\nInput:\n3 5\n2 0 2\n\nOutput:\n3\n\nExplanation: The arrays [2,1,2], [2,2,2] and [2,3,2] match the description.\n"
    },
    {
        "link": "/problemset/task/2413",
        "title": "Counting Towers",
        "content": "Your task is to build a tower whose width is 2 and height is n. You have an unlimited supply of blocks whose width and height are integers.\nFor example, here are some possible solutions for n=6:\n\nGiven n, how many different towers can you build? Mirrored and rotated towers are counted separately if they look different.\nInput\nThe first input line contains an integer t: the number of tests.\nAfter this, there are t lines, and each line contains an integer n: the height of the tower.\nOutput\nFor each test, print the number of towers modulo 10^9+7.\nConstraints\n\n1 \\le t \\le 100\n1 \\le n \\le 10^6\n\nExample\nInput:\n3\n2\n6\n1337\n\nOutput:\n8\n2864\n640403945\n"
    },
    {
        "link": "/problemset/task/1639",
        "title": "Edit Distance",
        "content": "The edit distance between two strings is the minimum number of operations required to transform one string into the other.\nThe allowed operations are:\n\nAdd one character to the string.\nRemove one character from the string.\nReplace one character in the string.\n\nFor example, the edit distance between LOVE and MOVIE is 2, because you can first replace L with M, and then add I.\nYour task is to calculate the edit distance between two strings.\nInput\nThe first input line has a string that contains n characters between A\u2013Z.\nThe second input line has a string that contains m characters between A\u2013Z.\nOutput\nPrint one integer: the edit distance between the strings.\nConstraints\n\n1 \\le n,m \\le 5000\n\nExample\nInput:\nLOVE\nMOVIE\n\nOutput:\n2\n"
    },
    {
        "link": "/problemset/task/1744",
        "title": "Rectangle Cutting",
        "content": "Given an a \\times b rectangle, your task is to cut it into squares. On each move you can select a rectangle and cut it into two rectangles in such a way that all side lengths remain integers. What is the minimum possible number of moves?\nInput\nThe only input line has two integers a and b.\nOutput\nPrint one integer: the minimum number of moves.\nConstraints\n\n1 \\le a,b \\le 500\n\nExample\nInput:\n3 5\n\nOutput:\n3\n"
    },
    {
        "link": "/problemset/task/1745",
        "title": "Money Sums",
        "content": "You have n coins with certain values. Your task is to find all money sums you can create using these coins.\nInput\nThe first input line has an integer n: the number of coins.\nThe next line has n integers x_1,x_2,\\dots,x_n: the values of the coins.\nOutput\nFirst print an integer k: the number of distinct money sums. After this, print all possible sums in increasing order.\nConstraints\n\n1 \\le n \\le 100\n1 \\le x_i \\le 1000\n\nExample\nInput:\n4\n4 2 5 2\n\nOutput:\n9\n2 4 5 6 7 8 9 11 13\n"
    },
    {
        "link": "/problemset/task/1097",
        "title": "Removal Game",
        "content": "There is a list of n numbers and two players who move alternately. On each move, a player removes either the first or last number from the list, and their score increases by that number. Both players try to maximize their scores.\nWhat is the maximum possible score for the first player when both players play optimally?\nInput\nThe first input line contains an integer n: the size of the list.\nThe next line has n integers x_1,x_2,\\ldots,x_n: the contents of the list.\nOutput\nPrint the maximum possible score for the first player.\nConstraints\n\n1 \\le n \\le 5000\n-10^9 \\le x_i \\le 10^9\n\nExample\nInput:\n4\n4 5 1 3\n\nOutput:\n8\n"
    },
    {
        "link": "/problemset/task/1093",
        "title": "Two Sets II",
        "content": "Your task is to count the number of ways numbers 1,2,\\ldots,n can be divided into two sets of equal sum.\nFor example, if n=7, there are four solutions:\n\n\\{1,3,4,6\\} and \\{2,5,7\\}\n\\{1,2,5,6\\} and \\{3,4,7\\}\n\\{1,2,4,7\\} and \\{3,5,6\\}\n\\{1,6,7\\} and \\{2,3,4,5\\}\n\nInput\nThe only input line contains an integer n.\nOutput\nPrint the answer modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 500\n\nExample\nInput:\n7\n\nOutput:\n4\n"
    },
    {
        "link": "/problemset/task/1145",
        "title": "Increasing Subsequence",
        "content": "You are given an array containing n integers. Your task is to determine the longest increasing subsequence in the array, i.e., the longest subsequence where every element is larger than the previous one.\nA subsequence is a sequence that can be derived from the array by deleting some elements without changing the order of the remaining elements. \nInput\nThe first line contains an integer n: the size of the array.\nAfter this there are n integers x_1,x_2,\\ldots,x_n: the contents of the array.\nOutput\nPrint the length of the longest increasing subsequence.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le x_i \\le 10^9\n\nExample\nInput:\n8\n7 3 5 3 6 2 9 8\n\nOutput:\n4\n"
    },
    {
        "link": "/problemset/task/1140",
        "title": "Projects",
        "content": "There are n projects you can attend. For each project, you know its starting and ending days and the amount of money you would get as reward. You can only attend one project during a day.\nWhat is the maximum amount of money you can earn?\nInput\nThe first input line contains an integer n: the number of projects.\nAfter this, there are n lines. Each such line has three integers a_i, b_i, and p_i: the starting day, the ending day, and the reward.\nOutput\nPrint one integer: the maximum amount of money you can earn.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le a_i \\le b_i \\le 10^9\n1 \\le p_i \\le 10^9\n\nExample\nInput:\n4\n2 4 4\n3 6 6\n6 8 2\n5 7 3\n\nOutput:\n7\n"
    },
    {
        "link": "/problemset/task/1653",
        "title": "Elevator Rides",
        "content": "There are n people who want to get to the top of a building which has only one elevator. You know the weight of each person and the maximum allowed weight in the elevator. What is the minimum number of elevator rides?\nInput\nThe first input line has two integers n and x: the number of people and the maximum allowed weight in the elevator.\nThe second line has n integers w_1,w_2,\\dots,w_n: the weight of each person.\nOutput\nPrint one integer: the minimum number of rides.\nConstraints\n\n1 \\le n \\le 20\n1 \\le x \\le 10^9\n1 \\le w_i \\le x\n\nExample\nInput:\n4 10\n4 8 6 1\n\nOutput:\n2\n"
    },
    {
        "link": "/problemset/task/2181",
        "title": "Counting Tilings",
        "content": "Your task is to count the number of ways you can fill an n \\times m grid using 1 \\times 2 and 2 \\times 1 tiles.\nInput\nThe only input line has two integers n and m.\nOutput\nPrint one integer: the number of ways modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 10\n1 \\le m \\le 1000\n\nExample\nInput:\n4 7\n\nOutput:\n781\n"
    },
    {
        "link": "/problemset/task/2220",
        "title": "Counting Numbers",
        "content": "Your task is to count the number of integers between a and b where no two adjacent digits are the same.\nInput\nThe only input line has two integers a and b.\nOutput\nPrint one integer: the answer to the problem.\nConstraints\n\n0 \\le a \\le b \\le 10^{18}\n\nExample\nInput:\n123 321\n\nOutput:\n171\n"
    },
    {
        "link": "/problemset/task/1192",
        "title": "Counting Rooms",
        "content": "You are given a map of a building, and your task is to count the number of its rooms. The size of the map is n \\times m squares, and each square is either floor or wall. You can walk left, right, up, and down through the floor squares.\nInput\nThe first input line has two integers n and m: the height and width of the map.\nThen there are n lines of m characters describing the map. Each character is either . (floor) or # (wall).\nOutput\nPrint one integer: the number of rooms.\nConstraints\n\n1 \\le n,m \\le 1000\n\nExample\nInput:\n5 8\n########\n#..#...#\n####.#.#\n#..#...#\n########\n\nOutput:\n3\n"
    },
    {
        "link": "/problemset/task/1193",
        "title": "Labyrinth",
        "content": "You are given a map of a labyrinth, and your task is to find a path from start to end. You can walk left, right, up and down.\nInput\nThe first input line has two integers n and m: the height and width of the map.\nThen there are n lines of m characters describing the labyrinth. Each character is . (floor), # (wall), A (start), or B (end). There is exactly one A and one B in the input.\nOutput\nFirst print \"YES\", if there is a path, and \"NO\" otherwise.\nIf there is a path, print the length of the shortest such path and its description as a string consisting of characters L (left), R (right), U (up), and D (down). You can print any valid solution.\nConstraints\n\n1 \\le n,m \\le 1000\n\nExample\nInput:\n5 8\n########\n#.A#...#\n#.##.#B#\n#......#\n########\n\nOutput:\nYES\n9\nLDDRRRRRU\n"
    },
    {
        "link": "/problemset/task/1666",
        "title": "Building Roads",
        "content": "Byteland has n cities, and m roads between them. The goal is to construct new roads so that there is a route between any two cities.\nYour task is to find out the minimum number of roads required, and also determine which roads should be built.\nInput\nThe first input line has two integers n and m: the number of cities and roads. The cities are numbered 1,2,\\dots,n.\nAfter that, there are m lines describing the roads. Each line has two integers a and b: there is a road between those cities.\nA road always connects two different cities, and there is at most one road between any two cities.\nOutput\nFirst print an integer k: the number of required roads.\nThen, print k lines that describe the new roads. You can print any valid solution.\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n4 2\n1 2\n3 4\n\nOutput:\n1\n2 3\n"
    },
    {
        "link": "/problemset/task/1667",
        "title": "Message Route",
        "content": "Syrj\u00e4l\u00e4's network has n computers and m connections. Your task is to find out if Uolevi can send a message to Maija, and if it is possible, what is the minimum number of computers on such a route.\nInput\nThe first input line has two integers n and m: the number of computers and connections. The computers are numbered 1,2,\\dots,n. Uolevi's computer is 1 and Maija's computer is n.\nThen, there are m lines describing the connections. Each line has two integers a and b: there is a connection between those computers.\nEvery connection is between two different computers, and there is at most one connection between any two computers.\nOutput\nIf it is possible to send a message, first print k: the minimum number of computers on a valid route. After this, print an example of such a route. You can print any valid solution.\nIf there are no routes, print \"IMPOSSIBLE\".\nConstraints\n\n2 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5 5\n1 2\n1 3\n1 4\n2 3\n5 4\n\nOutput:\n3\n1 4 5\n"
    },
    {
        "link": "/problemset/task/1668",
        "title": "Building Teams",
        "content": "There are n pupils in Uolevi's class, and m friendships between them. Your task is to divide the pupils into two teams in such a way that no two pupils in a team are friends. You can freely choose the sizes of the teams.\nInput\nThe first input line has two integers n and m: the number of pupils and friendships. The pupils are numbered 1,2,\\dots,n.\nThen, there are m lines describing the friendships. Each line has two integers a and b: pupils a and b are friends.\nEvery friendship is between two different pupils. You can assume that there is at most one friendship between any two pupils.\nOutput\nPrint an example of how to build the teams. For each pupil, print \"1\" or \"2\" depending on to which team the pupil will be assigned. You can print any valid team.\nIf there are no solutions, print \"IMPOSSIBLE\".\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5 3\n1 2\n1 3\n4 5\n\nOutput:\n1 2 2 1 2\n"
    },
    {
        "link": "/problemset/task/1669",
        "title": "Round Trip",
        "content": "Byteland has n cities and m roads between them. Your task is to design a round trip that begins in a city, goes through two or more other cities, and finally returns to the starting city. Every intermediate city on the route has to be distinct.\nInput\nThe first input line has two integers n and m: the number of cities and roads. The cities are numbered 1,2,\\dots,n.\nThen, there are m lines describing the roads. Each line has two integers a and b: there is a road between those cities.\nEvery road is between two different cities, and there is at most one road between any two cities.\nOutput\nFirst print an integer k: the number of cities on the route. Then print k cities in the order they will be visited. You can print any valid solution.\nIf there are no solutions, print \"IMPOSSIBLE\".\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5 6\n1 3\n1 2\n5 3\n1 5\n2 4\n4 5\n\nOutput:\n4\n3 5 1 3\n"
    },
    {
        "link": "/problemset/task/1194",
        "title": "Monsters",
        "content": "You and some monsters are in a labyrinth. When taking a step to some direction in the labyrinth, each monster may simultaneously take one as well. Your goal is to reach one of the boundary squares without ever sharing a square with a monster.\nYour task is to find out if your goal is possible, and if it is, print a path that you can follow. Your plan has to work in any situation; even if the monsters know your path beforehand.\nInput\nThe first input line has two integers n and m: the height and width of the map.\nAfter this there are n lines of m characters describing the map. Each character is . (floor), # (wall), A (start), or M (monster). There is exactly one A in the input.\nOutput\nFirst print \"YES\" if your goal is possible, and \"NO\" otherwise.\nIf your goal is possible, also print an example of a valid path (the length of the path and its description using characters D, U, L, and R). You can print any path, as long as its length is at most n \\cdot m steps.\nConstraints\n\n1 \\le n,m \\le 1000\n\nExample\nInput:\n5 8\n########\n#M..A..#\n#.#.M#.#\n#M#..#..\n#.######\n\nOutput:\nYES\n5\nRRDDR\n"
    },
    {
        "link": "/problemset/task/1671",
        "title": "Shortest Routes I",
        "content": "There are n cities and m flight connections between them. Your task is to determine the length of the shortest route from Syrj\u00e4l\u00e4 to every city.\nInput\nThe first input line has two integers n and m: the number of cities and flight connections. The cities are numbered 1,2,\\dots,n, and city 1 is Syrj\u00e4l\u00e4.\nAfter that, there are m lines describing the flight connections. Each line has three integers a, b and c: a flight begins at city a, ends at city b, and its length is c. Each flight is a one-way flight.\nYou can assume that it is possible to travel from Syrj\u00e4l\u00e4 to all other cities.\nOutput\nPrint n integers: the shortest route lengths from Syrj\u00e4l\u00e4 to cities 1,2,\\dots,n.\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n1 \\le c \\le 10^9\n\nExample\nInput:\n3 4\n1 2 6\n1 3 2\n3 2 3\n1 3 4\n\nOutput:\n0 5 2\n"
    },
    {
        "link": "/problemset/task/1672",
        "title": "Shortest Routes II",
        "content": "There are n cities and m roads between them. Your task is to process q queries where you have to determine the length of the shortest route between two given cities.\nInput\nThe first input line has three integers n, m and q: the number of cities, roads, and queries.\nThen, there are m lines describing the roads. Each line has three integers a, b and c: there is a road between cities a and b whose length is c. All roads are two-way roads.\nFinally, there are q lines describing the queries. Each line has two integers a and b: determine the length of the shortest route between cities a and b.\nOutput\nPrint the length of the shortest route for each query. If there is no route, print -1 instead.\nConstraints\n\n1 \\le n \\le 500\n1 \\le m \\le n^2\n1 \\le q \\le 10^5\n1 \\le a,b \\le n\n1 \\le c \\le 10^9\n\nExample\nInput:\n4 3 5\n1 2 5\n1 3 9\n2 3 3\n1 2\n2 1\n1 3\n1 4\n3 2\n\nOutput:\n5\n5\n8\n-1\n3\n"
    },
    {
        "link": "/problemset/task/1673",
        "title": "High Score",
        "content": "You play a game consisting of n rooms and m tunnels. Your initial score is 0, and each tunnel increases your score by x where x may be both positive or negative. You may go through a tunnel several times.\nYour task is to walk from room 1 to room n. What is the maximum score you can get?\nInput\nThe first input line has two integers n and m: the number of rooms and tunnels. The rooms are numbered 1,2,\\dots,n.\nThen, there are m lines describing the tunnels. Each line has three integers a, b and x: the tunnel starts at room a, ends at room b, and it increases your score by x. All tunnels are one-way tunnels.\nYou can assume that it is possible to get from room 1 to room n.\nOutput\nPrint one integer: the maximum score you can get. However, if you can get an arbitrarily large score, print -1.\nConstraints\n\n1 \\le n \\le 2500\n1 \\le m \\le 5000\n1 \\le a,b \\le n\n-10^9 \\le x \\le 10^9\n\nExample\nInput:\n4 5\n1 2 3\n2 4 -1\n1 3 -2\n3 4 7\n1 4 4\n\nOutput:\n5\n"
    },
    {
        "link": "/problemset/task/1195",
        "title": "Flight Discount",
        "content": "Your task is to find a minimum-price flight route from Syrj\u00e4l\u00e4 to Mets\u00e4l\u00e4. You have one discount coupon, using which you can halve the price of any single flight during the route. However, you can only use the coupon once.\nWhen you use the discount coupon for a flight whose price is x, its price becomes \\lfloor x/2 \\rfloor (it is rounded down to an integer).\nInput\nThe first input line has two integers n and m: the number of cities and flight connections. The cities are numbered 1,2,\\ldots,n. City 1 is Syrj\u00e4l\u00e4, and city n is Mets\u00e4l\u00e4.\nAfter this there are m lines describing the flights. Each line has three integers a, b, and c: a flight begins at city a, ends at city b, and its price is c. Each flight is unidirectional.\nYou can assume that it is always possible to get from Syrj\u00e4l\u00e4 to Mets\u00e4l\u00e4.\nOutput\nPrint one integer: the price of the cheapest route from Syrj\u00e4l\u00e4 to Mets\u00e4l\u00e4.\nConstraints\n\n2 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n1 \\le c \\le 10^9\n\nExample\nInput:\n3 4\n1 2 3\n2 3 1\n1 3 7\n2 1 5\n\nOutput:\n2\n"
    },
    {
        "link": "/problemset/task/1197",
        "title": "Cycle Finding",
        "content": "You are given a directed graph, and your task is to find out if it contains a negative cycle, and also give an example of such a cycle.\nInput\nThe first input line has two integers n and m: the number of nodes and edges. The nodes are numbered 1,2,\\ldots,n.\nAfter this, the input has m lines describing the edges. Each line has three integers a, b, and c: there is an edge from node a to node b whose length is c.\nOutput\nIf the graph contains a negative cycle, print first \"YES\", and then the nodes in the cycle in their correct order. If there are several negative cycles, you can print any of them. If there are no negative cycles, print \"NO\".\nConstraints\n\n1 \\le n \\le 2500\n1 \\le m \\le 5000\n1 \\le a,b \\le n\n-10^9 \\le c \\le 10^9\n\nExample\nInput:\n4 5\n1 2 1\n2 4 1\n3 1 1\n4 1 -3\n4 3 -2\n\nOutput:\nYES\n1 2 4 1\n"
    },
    {
        "link": "/problemset/task/1196",
        "title": "Flight Routes",
        "content": "Your task is to find the k shortest flight routes from Syrj\u00e4l\u00e4 to Mets\u00e4l\u00e4. A route can visit the same city several times.\nNote that there can be several routes with the same price and each of them should be considered (see the example).\nInput\nThe first input line has three integers n, m, and k: the number of cities, the number of flights, and the parameter k. The cities are numbered 1,2,\\ldots,n. City 1 is Syrj\u00e4l\u00e4, and city n is Mets\u00e4l\u00e4.\nAfter this, the input has m lines describing the flights. Each line has three integers a, b, and c: a flight begins at city a, ends at city b, and its price is c. All flights are one-way flights.\nYou may assume that there are at least k distinct routes from Syrj\u00e4l\u00e4 to Mets\u00e4l\u00e4.\nOutput\nPrint k integers: the prices of the k cheapest routes sorted according to their prices.\nConstraints\n\n2 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n1 \\le c \\le 10^9\n1 \\le k \\le 10\n\nExample\nInput:\n4 6 3\n1 2 1\n1 3 3\n2 3 2\n2 4 6\n3 2 8\n3 4 1\n\nOutput:\n4 4 7\n\nExplanation: The cheapest routes are 1 \\rightarrow 3 \\rightarrow 4 (price 4), 1 \\rightarrow 2 \\rightarrow 3 \\rightarrow 4 (price 4) and 1 \\rightarrow 2 \\rightarrow 4 (price 7).\n"
    },
    {
        "link": "/problemset/task/1678",
        "title": "Round Trip II",
        "content": "Byteland has n cities and m flight connections. Your task is to design a round trip that begins in a city, goes through one or more other cities, and finally returns to the starting city. Every intermediate city on the route has to be distinct.\nInput\nThe first input line has two integers n and m: the number of cities and flights. The cities are numbered 1,2,\\dots,n.\nThen, there are m lines describing the flights. Each line has two integers a and b: there is a flight connection from city a to city b. All connections are one-way flights from a city to another city.\nOutput\nFirst print an integer k: the number of cities on the route. Then print k cities in the order they will be visited. You can print any valid solution.\nIf there are no solutions, print \"IMPOSSIBLE\".\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n4 5\n1 3\n2 1\n2 4\n3 2\n3 4\n\nOutput:\n4\n2 1 3 2\n"
    },
    {
        "link": "/problemset/task/1679",
        "title": "Course Schedule",
        "content": "You have to complete n courses. There are m requirements of the form \"course a has to be completed before course b\". Your task is to find an order in which you can complete the courses.\nInput\nThe first input line has two integers n and m: the number of courses and requirements. The courses are numbered 1,2,\\dots,n.\nAfter this, there are m lines describing the requirements. Each line has two integers a and b: course a has to be completed before course b.\nOutput\nPrint an order in which you can complete the courses. You can print any valid order that includes all the courses.\nIf there are no solutions, print \"IMPOSSIBLE\".\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5 3\n1 2\n3 1\n4 5\n\nOutput:\n3 4 1 5 2\n"
    },
    {
        "link": "/problemset/task/1680",
        "title": "Longest Flight Route",
        "content": "Uolevi has won a contest, and the prize is a free flight trip that can consist of one or more flights through cities. Of course, Uolevi wants to choose a trip that has as many cities as possible.\nUolevi wants to fly from Syrj\u00e4l\u00e4 to Lehm\u00e4l\u00e4 so that he visits the maximum number of cities. You are given the list of possible flights, and you know that there are no directed cycles in the flight network.\nInput\nThe first input line has two integers n and m: the number of cities and flights. The cities are numbered 1,2,\\dots,n. City 1 is Syrj\u00e4l\u00e4, and city n is Lehm\u00e4l\u00e4.\nAfter this, there are m lines describing the flights. Each line has two integers a and b: there is a flight from city a to city b. Each flight is a one-way flight.\nOutput\nFirst print the maximum number of cities on the route. After this, print the cities in the order they will be visited. You can print any valid solution.\nIf there are no solutions, print \"IMPOSSIBLE\".\nConstraints\n\n2 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5 5\n1 2\n2 5\n1 3\n3 4\n4 5\n\nOutput:\n4\n1 3 4 5\n"
    },
    {
        "link": "/problemset/task/1681",
        "title": "Game Routes",
        "content": "A game has n levels, connected by m teleporters, and your task is to get from level 1 to level n. The game has been designed so that there are no directed cycles in the underlying graph. In how many ways can you complete the game?\nInput\nThe first input line has two integers n and m: the number of levels and teleporters. The levels are numbered 1,2,\\dots,n.\nAfter this, there are m lines describing the teleporters. Each line has two integers a and b: there is a teleporter from level a to level b.\nOutput\nPrint one integer: the number of ways you can complete the game. Since the result may be large, print it modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n4 5\n1 2\n2 4\n1 3\n3 4\n1 4\n\nOutput:\n3\n"
    },
    {
        "link": "/problemset/task/1202",
        "title": "Investigation",
        "content": "You are going to travel from Syrj\u00e4l\u00e4 to Lehm\u00e4l\u00e4 by plane. You would like to find answers to the following questions:\n\nwhat is the minimum price of such a route?\nhow many minimum-price routes are there? (modulo 10^9+7)\nwhat is the minimum number of flights in a minimum-price route?\nwhat is the maximum number of flights in a minimum-price route?\n\nInput\nThe first input line contains two integers n and m: the number of cities and the number of flights. The cities are numbered 1,2,\\ldots,n. City 1 is Syrj\u00e4l\u00e4, and city n is Lehm\u00e4l\u00e4.\nAfter this, there are m lines describing the flights. Each line has three integers a, b, and c: there is a flight from city a to city b with price c. All flights are one-way flights.\nYou may assume that there is a route from Syrj\u00e4l\u00e4 to Lehm\u00e4l\u00e4.\nOutput\nPrint four integers according to the problem statement.\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n1 \\le c \\le 10^9\n\nExample\nInput:\n4 5\n1 4 5\n1 2 4\n2 4 5\n1 3 2\n3 4 3\n\nOutput:\n5 2 1 2\n"
    },
    {
        "link": "/problemset/task/1750",
        "title": "Planets Queries I",
        "content": "You are playing a game consisting of n planets. Each planet has a teleporter to another planet (or the planet itself).\nYour task is to process q queries of the form: when you begin on planet x and travel through k teleporters, which planet will you reach?\nInput\nThe first input line has two integers n and q: the number of planets and queries. The planets are numbered 1,2,\\dots,n.\nThe second line has n integers t_1,t_2,\\dots,t_n: for each planet, the destination of the teleporter. It is possible that t_i=i.\nFinally, there are q lines describing the queries. Each line has two integers x and k: you start on planet x and travel through k teleporters.\nOutput\nPrint the answer to each query.\nConstraints\n\n1 \\le n, q \\le 2 \\cdot 10^5\n1 \\le t_i \\le n\n1 \\le x \\le n\n0 \\le k \\le 10^9\n\nExample\nInput:\n4 3\n2 1 1 4\n1 2\n3 4\n4 1\n\nOutput:\n1\n2\n4\n"
    },
    {
        "link": "/problemset/task/1160",
        "title": "Planets Queries II",
        "content": "You are playing a game consisting of n planets. Each planet has a teleporter to another planet (or the planet itself).\nYou have to process q queries of the form: You are now on planet a and want to reach planet b. What is the minimum number of teleportations?\nInput\nThe first input line contains two integers n and q: the number of planets and queries. The planets are numbered 1,2,\\ldots,n.\nThe second line contains n integers t_1,t_2,\\ldots,t_n: for each planet, the destination of the teleporter.\nFinally, there are q lines describing the queries. Each line has two integers a and b: you are now on planet a and want to reach planet b.\nOutput\nFor each query, print the minimum number of teleportations. If it is not possible to reach the destination, print -1.\nConstraints\n\n1 \\le n, q \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5 3\n2 3 2 3 2\n1 2\n1 3\n1 4\n\nOutput:\n1\n2\n-1\n"
    },
    {
        "link": "/problemset/task/1751",
        "title": "Planets Cycles",
        "content": "You are playing a game consisting of n planets. Each planet has a teleporter to another planet (or the planet itself).\nYou start on a planet and then travel through teleporters until you reach a planet that you have already visited before.\nYour task is to calculate for each planet the number of teleportations there would be if you started on that planet.\nInput\nThe first input line has an integer n: the number of planets. The planets are numbered 1,2,\\dots,n.\nThe second line has n integers t_1,t_2,\\dots,t_n: for each planet, the destination of the teleporter. It is possible that t_i=i.\nOutput\nPrint n integers according to the problem statement.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le t_i \\le n\n\nExample\nInput:\n5\n2 4 3 1 4\n\nOutput:\n3 3 1 3 4\n"
    },
    {
        "link": "/problemset/task/1675",
        "title": "Road Reparation",
        "content": "There are n cities and m roads between them. Unfortunately, the condition of the roads is so poor that they cannot be used. Your task is to repair some of the roads so that there will be a decent route between any two cities.\nFor each road, you know its reparation cost, and you should find a solution where the total cost is as small as possible.\nInput\nThe first input line has two integers n and m: the number of cities and roads. The cities are numbered 1,2,\\dots,n.\nThen, there are m lines describing the roads. Each line has three integers a, b and c: there is a road between cities a and b, and its reparation cost is c. All roads are two-way roads.\nEvery road is between two different cities, and there is at most one road between two cities.\nOutput\nPrint one integer: the minimum total reparation cost. However, if there are no solutions, print \"IMPOSSIBLE\".\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n1 \\le c \\le 10^9\n\nExample\nInput:\n5 6\n1 2 3\n2 3 5\n2 4 2\n3 4 8\n5 1 7\n5 4 4\n\nOutput:\n14\n"
    },
    {
        "link": "/problemset/task/1676",
        "title": "Road Construction",
        "content": "There are n cities and initially no roads between them. However, every day a new road will be constructed, and there will be a total of m roads.\nA component is a group of cities where there is a route between any two cities using the roads. After each day, your task is to find the number of components and the size of the largest component.\nInput\nThe first input line has two integers n and m: the number of cities and roads. The cities are numbered 1,2,\\dots,n.\nThen, there are m lines describing the new roads. Each line has two integers a and b: a new road is constructed between cities a and b.\nYou may assume that every road will be constructed between two different cities.\nOutput\nPrint m lines: the required information after each day.\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5 3\n1 2\n1 3\n4 5\n\nOutput:\n4 2\n3 3\n2 3\n"
    },
    {
        "link": "/problemset/task/1682",
        "title": "Flight Routes Check",
        "content": "There are n cities and m flight connections. Your task is to check if you can travel from any city to any other city using the available flights.\nInput\nThe first input line has two integers n and m: the number of cities and flights. The cities are numbered 1,2,\\dots,n.\nAfter this, there are m lines describing the flights. Each line has two integers a and b: there is a flight from city a to city b. All flights are one-way flights.\nOutput\nPrint \"YES\" if all routes are possible, and \"NO\" otherwise. In the latter case also print two cities a and b such that you cannot travel from city a to city b. If there are several possible solutions, you can print any of them.\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n4 5\n1 2\n2 3\n3 1\n1 4\n3 4\n\nOutput:\nNO\n4 2\n"
    },
    {
        "link": "/problemset/task/1683",
        "title": "Planets and Kingdoms",
        "content": "A game has n planets, connected by m teleporters. Two planets a and b belong to the same kingdom exactly when there is a route both from a to b and from b to a. Your task is to determine for each planet its kingdom.\nInput\nThe first input line has two integers n and m: the number of planets and teleporters. The planets are numbered 1,2,\\dots,n.\nAfter this, there are m lines describing the teleporters. Each line has two integers a and b: you can travel from planet a to planet b through a teleporter.\nOutput\nFirst print an integer k: the number of kingdoms. After this, print for each planet a kingdom label between 1 and k. You can print any valid solution.\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5 6\n1 2\n2 3\n3 1\n3 4\n4 5\n5 4\n\nOutput:\n2\n1 1 1 2 2\n"
    },
    {
        "link": "/problemset/task/1684",
        "title": "Giant Pizza",
        "content": "Uolevi's family is going to order a large pizza and eat it together. A total of n family members will join the order, and there are m possible toppings. The pizza may have any number of toppings.\nEach family member gives two wishes concerning the toppings of the pizza. The wishes are of the form \"topping x is good/bad\". Your task is to choose the toppings so that at least one wish from everybody becomes true (a good topping is included in the pizza or a bad topping is not included).\nInput\nThe first input line has two integers n and m: the number of family members and toppings. The toppings are numbered 1,2,\\dots,m.\nAfter this, there are n lines describing the wishes. Each line has two wishes of the form \"+ x\" (topping x is good) or \"- x\" (topping x is bad).\nOutput\nPrint a line with m symbols: for each topping \"+\" if it is included and \"-\" if it is not included. You can print any valid solution.\nIf there are no valid solutions, print \"IMPOSSIBLE\".\nConstraints\n\n1 \\le n,m \\le 10^5\n1 \\le x \\le m\n\nExample\nInput:\n3 5\n+ 1 + 2\n- 1 + 3\n+ 4 - 2\n\nOutput:\n- + + + -\n"
    },
    {
        "link": "/problemset/task/1686",
        "title": "Coin Collector",
        "content": "A game has n rooms and m tunnels between them. Each room has a certain number of coins. What is the maximum number of coins you can collect while moving through the tunnels when you can freely choose your starting and ending room?\nInput\nThe first input line has two integers n and m: the number of rooms and tunnels. The rooms are numbered 1,2,\\dots,n.\nThen, there are n integers k_1,k_2,\\ldots,k_n: the number of coins in each room.\nFinally, there are m lines describing the tunnels. Each line has two integers a and b: there is a tunnel from room a to room b. Each tunnel is a one-way tunnel.\nOutput\nPrint one integer: the maximum number of coins you can collect.\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le k_i \\le 10^9\n1 \\le a,b \\le n\n\nExample\nInput:\n4 4\n4 5 2 7\n1 2\n2 1\n1 3\n2 4\n\nOutput:\n16\n"
    },
    {
        "link": "/problemset/task/1691",
        "title": "Mail Delivery",
        "content": "Your task is to deliver mail to the inhabitants of a city. For this reason, you want to find a route whose starting and ending point are the post office, and that goes through every street exactly once.\nInput\nThe first input line has two integers n and m: the number of crossings and streets. The crossings are numbered 1,\\,2,\\ldots,\\,n, and the post office is located at crossing 1.\nAfter that, there are m lines describing the streets. Each line has two integers a and b: there is a street between crossings a and b. All streets are two-way streets.\nEvery street is between two different crossings, and there is at most one street between two crossings.\nOutput\nPrint all the crossings on the route in the order you will visit them. You can print any valid solution.\nIf there are no solutions, print \"IMPOSSIBLE\".\nConstraints\n2\\leq n\\leq 10^5\n1\\leq m\\leq 2 . 10^5\n1\\leq a,\\,b\\leq n\nExample\nInput:\n6 8\n1 2\n1 3\n2 3\n2 4\n2 6\n3 5\n3 6\n4 5\n\nOutput:\n1 2 6 3 2 4 5 3 1\n"
    },
    {
        "link": "/problemset/task/1692",
        "title": "De Bruijn Sequence",
        "content": "Your task is to construct a minimum-length bit string that contains all possible substrings of length n. For example, when n=2, the string 00110 is a valid solution, because its substrings of length 2 are 00, 01, 10 and 11.\nInput\nThe only input line has an integer n.\nOutput\nPrint a minimum-length bit string that contains all substrings of length n. You can print any valid solution.\nConstraints\n\n1 \\le n \\le 15\n\nExample\nInput:\n2\n\nOutput:\n00110\n"
    },
    {
        "link": "/problemset/task/1693",
        "title": "Teleporters Path",
        "content": "A game has n levels and m teleportes between them. You win the game if you move from level 1 to level n using every teleporter exactly once.\nCan you win the game, and what is a possible way to do it?\nInput\nThe first input line has two integers n and m: the number of levels and teleporters. The levels are numbered 1,2,\\dots,n.\nThen, there are m lines describing the teleporters. Each line has two integers a and b: there is a teleporter from level a to level b.\nYou can assume that each pair (a,b) in the input is distinct.\nOutput\nPrint m+1 integers: the sequence in which you visit the levels during the game. You can print any valid solution.\nIf there are no solutions, print \"IMPOSSIBLE\".\nConstraints\n\n2 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5 6\n1 2\n1 3\n2 4\n2 5\n3 1\n4 2\n\nOutput:\n1 3 1 2 4 2 5\n"
    },
    {
        "link": "/problemset/task/1690",
        "title": "Hamiltonian Flights",
        "content": "There are n cities and m flight connections between them. You want to travel from Syrj\u00e4l\u00e4 to Lehm\u00e4l\u00e4 so that you visit each city exactly once. How many possible routes are there?\nInput\nThe first input line has two integers n and m: the number of cities and flights. The cities are numbered 1,2,\\dots,n. City 1 is Syrj\u00e4l\u00e4, and city n is Lehm\u00e4l\u00e4.\nThen, there are m lines describing the flights. Each line has two integers a and b: there is a flight from city a to city b. All flights are one-way flights.\nOutput\nPrint one integer: the number of routes modulo 10^9+7.\nConstraints\n\n2 \\le n \\le 20\n1 \\le m \\le n^2\n1 \\le a,b \\le n\n\nExample\nInput:\n4 6\n1 2\n1 3\n2 3\n3 2\n2 4\n3 4\n\nOutput:\n2\n"
    },
    {
        "link": "/problemset/task/1689",
        "title": "Knight's Tour",
        "content": "Given a starting position of a knight on an 8 \\times 8 chessboard, your task is to find a sequence of moves such that it visits every square exactly once.\nOn each move, the knight may either move two steps horizontally and one step vertically, or one step horizontally and two steps vertically.\nInput\nThe only line has two integers x and y: the knight's starting position.\nOutput\nPrint a grid that shows how the knight moves (according to the example). You can print any valid solution.\nConstraints\n\n1 \\le x,y \\le 8\n\nExample\nInput:\n2 1\n\nOutput:\n8 1 10 13 6 3 20 17 \n11 14 7 2 19 16 23 4 \n26 9 12 15 24 5 18 21 \n49 58 25 28 51 22 33 30 \n40 27 50 59 32 29 52 35 \n57 48 41 44 37 34 31 62 \n42 39 46 55 60 63 36 53 \n47 56 43 38 45 54 61 64\n"
    },
    {
        "link": "/problemset/task/1694",
        "title": "Download Speed",
        "content": "Consider a network consisting of n computers and m connections. Each connection specifies how fast a computer can send data to another computer.\nKotivalo wants to download some data from a server. What is the maximum speed he can do this, using the connections in the network?\nInput\nThe first input line has two integers n and m: the number of computers and connections. The computers are numbered 1,2,\\dots,n. Computer 1 is the server and computer n is Kotivalo's computer.\nAfter this, there are m lines describing the connections. Each line has three integers a, b and c: computer a can send data to computer b at speed c.\nOutput\nPrint one integer: the maximum speed Kotivalo can download data.\nConstraints\n\n1 \\le n \\le 500\n1 \\le m \\le 1000\n1 \\le a,b \\le n\n1 \\le c \\le 10^9\n\nExample\nInput:\n4 5\n1 2 3\n2 4 2\n1 3 4\n3 4 5\n4 1 3\n\nOutput:\n6\n"
    },
    {
        "link": "/problemset/task/1695",
        "title": "Police Chase",
        "content": "Kaaleppi has just robbed a bank and is now heading to the harbor. However, the police wants to stop him by closing some streets of the city.\nWhat is the minimum number of streets that should be closed so that there is no route between the bank and the harbor?\nInput\nThe first input line has two integers n and m: the number of crossings and streets. The crossings are numbered 1,2,\\dots,n. The bank is located at crossing 1, and the harbor is located at crossing n.\nAfter this, there are m lines that describing the streets. Each line has two integers a and b: there is a street between crossings a and b. All streets are two-way streets, and there is at most one street between two crossings.\nOutput\nFirst print an integer k: the minimum number of streets that should be closed. After this, print k lines describing the streets. You can print any valid solution.\nConstraints\n\n2 \\le n \\le 500\n1 \\le m \\le 1000\n1 \\le a,b \\le n\n\nExample\nInput:\n4 5\n1 2\n1 3\n2 3\n3 4\n1 4\n\nOutput:\n2\n3 4\n1 4\n"
    },
    {
        "link": "/problemset/task/1696",
        "title": "School Dance",
        "content": "There are n boys and m girls in a school. Next week a school dance will be organized. A dance pair consists of a boy and a girl, and there are k potential pairs.\nYour task is to find out the maximum number of dance pairs and show how this number can be achieved.\nInput\nThe first input line has three integers n, m and k: the number of boys, girls, and potential pairs. The boys are numbered 1,2,\\dots,n, and the girls are numbered 1,2,\\dots,m.\nAfter this, there are k lines describing the potential pairs. Each line has two integers a and b: boy a and girl b are willing to dance together.\nOutput\nFirst print one integer r: the maximum number of dance pairs. After this, print r lines describing the pairs. You can print any valid solution.\nConstraints\n\n1 \\le n,m \\le 500\n1 \\le k \\le 1000\n1 \\le a \\le n\n1 \\le b \\le m\n\nExample\nInput:\n3 2 4\n1 1\n1 2\n2 1\n3 1\n\nOutput:\n2\n1 2\n3 1\n"
    },
    {
        "link": "/problemset/task/1711",
        "title": "Distinct Routes",
        "content": "A game consists of n rooms and m teleporters. At the beginning of each day, you start in room 1 and you have to reach room n.\nYou can use each teleporter at most once during the game. How many days can you play if you choose your routes optimally?\nInput\nThe first input line has two integers n and m: the number of rooms and teleporters. The rooms are numbered 1,2,\\dots,n.\nAfter this, there are m lines describing the teleporters. Each line has two integers a and b: there is a teleporter from room a to room b.\nThere are no two teleporters whose starting and ending room are the same.\nOutput\nFirst print an integer k: the maximum number of days you can play the game. Then, print k route descriptions according to the example. You can print any valid solution.\nConstraints\n\n2 \\le n \\le 500\n1 \\le m \\le 1000\n1 \\le a,b \\le n\n\nExample\nInput:\n6 7\n1 2\n1 3\n2 6\n3 4\n3 5\n4 6\n5 6\n\nOutput:\n2\n3\n1 2 6\n4\n1 3 4 6\n"
    },
    {
        "link": "/problemset/task/1646",
        "title": "Static Range Sum Queries",
        "content": "Given an array of n integers, your task is to process q queries of the form: what is the sum of values in range [a,b]?\nInput\nThe first input line has two integers n and q: the number of values and queries.\nThe second line has n integers x_1,x_2,\\dots,x_n: the array values.\nFinally, there are q lines describing the queries. Each line has two integers a and b: what is the sum of values in range [a,b]?\nOutput\nPrint the result of each query.\nConstraints\n\n1 \\le n,q \\le 2 \\cdot 10^5\n1 \\le x_i \\le 10^9\n1 \\le a \\le b \\le n\n\nExample\nInput:\n8 4\n3 2 4 5 1 1 5 3\n2 4\n5 6\n1 8\n3 3\n\nOutput:\n11\n2\n24\n4\n"
    },
    {
        "link": "/problemset/task/1647",
        "title": "Static Range Minimum Queries",
        "content": "Given an array of n integers, your task is to process q queries of the form: what is the minimum value in range [a,b]?\nInput\nThe first input line has two integers n and q: the number of values and queries.\nThe second line has n integers x_1,x_2,\\dots,x_n: the array values.\nFinally, there are q lines describing the queries. Each line has two integers a and b: what is the minimum value in range [a,b]?\nOutput\nPrint the result of each query.\nConstraints\n\n1 \\le n,q \\le 2 \\cdot 10^5\n1 \\le x_i \\le 10^9\n1 \\le a \\le b \\le n\n\nExample\nInput:\n8 4\n3 2 4 5 1 1 5 3\n2 4\n5 6\n1 8\n3 3\n\nOutput:\n2\n1\n1\n4\n"
    },
    {
        "link": "/problemset/task/1648",
        "title": "Dynamic Range Sum Queries",
        "content": "Given an array of n integers, your task is to process q queries of the following types:\n\nupdate the value at position k to u\nwhat is the sum of values in range [a,b]?\n\nInput\nThe first input line has two integers n and q: the number of values and queries.\nThe second line has n integers x_1,x_2,\\dots,x_n: the array values.\nFinally, there are q lines describing the queries. Each line has three integers: either \"1 k u\" or \"2 a b\".\nOutput\nPrint the result of each query of type 2.\nConstraints\n\n1 \\le n,q \\le 2 \\cdot 10^5\n1 \\le x_i, u \\le 10^9\n1 \\le k \\le n\n1 \\le a \\le b \\le n\n\nExample\nInput:\n8 4\n3 2 4 5 1 1 5 3\n2 1 4\n2 5 6\n1 3 1\n2 1 4\n\nOutput:\n14\n2\n11\n"
    },
    {
        "link": "/problemset/task/1649",
        "title": "Dynamic Range Minimum Queries",
        "content": "Given an array of n integers, your task is to process q queries of the following types:\n\nupdate the value at position k to u\nwhat is the minimum value in range [a,b]?\n\nInput\nThe first input line has two integers n and q: the number of values and queries.\nThe second line has n integers x_1,x_2,\\dots,x_n: the array values.\nFinally, there are q lines describing the queries. Each line has three integers: either \"1 k u\" or \"2 a b\".\nOutput\nPrint the result of each query of type 2.\nConstraints\n\n1 \\le n,q \\le 2 \\cdot 10^5\n1 \\le x_i, u \\le 10^9\n1 \\le k \\le n\n1 \\le a \\le b \\le n\n\nExample\nInput:\n8 4\n3 2 4 5 1 1 5 3\n2 1 4\n2 5 6\n1 2 3\n2 1 4\n\nOutput:\n2\n1\n3\n"
    },
    {
        "link": "/problemset/task/1650",
        "title": "Range Xor Queries",
        "content": "Given an array of n integers, your task is to process q queries of the form: what is the xor sum of values in range [a,b]?\nInput\nThe first input line has two integers n and q: the number of values and queries.\nThe second line has n integers x_1,x_2,\\dots,x_n: the array values.\nFinally, there are q lines describing the queries. Each line has two integers a and b: what is the xor sum of values in range [a,b]?\nOutput\nPrint the result of each query.\nConstraints\n\n1 \\le n,q \\le 2 \\cdot 10^5\n1 \\le x_i \\le 10^9\n1 \\le a \\le b \\le n\n\nExample\nInput:\n8 4\n3 2 4 5 1 1 5 3\n2 4\n5 6\n1 8\n3 3\n\nOutput:\n3\n0\n6\n4\n"
    },
    {
        "link": "/problemset/task/1651",
        "title": "Range Update Queries",
        "content": "Given an array of n integers, your task is to process q queries of the following types:\n\nincrease each value in range [a,b] by u\nwhat is the value at position k?\n\nInput\nThe first input line has two integers n and q: the number of values and queries.\nThe second line has n integers x_1,x_2,\\dots,x_n: the array values.\nFinally, there are q lines describing the queries. Each line has three integers: either \"1 a b u\" or \"2 k\".\nOutput\nPrint the result of each query of type 2.\nConstraints\n\n1 \\le n,q \\le 2 \\cdot 10^5\n1 \\le x_i, u \\le 10^9\n1 \\le k \\le n\n1 \\le a \\le b \\le n\n\nExample\nInput:\n8 3\n3 2 4 5 1 1 5 3\n2 4\n1 2 5 1\n2 4\n\nOutput:\n5\n6\n"
    },
    {
        "link": "/problemset/task/1652",
        "title": "Forest Queries",
        "content": "You are given an n \\times n grid representing the map of a forest. Each square is either empty or contains a tree. The upper-left square has coordinates (1,1), and the lower-right square has coordinates (n,n).\nYour task is to process q queries of the form: how many trees are inside a given rectangle in the forest?\nInput\nThe first input line has two integers n and q: the size of the forest and the number of queries.\nThen, there are n lines describing the forest. Each line has n characters: . is an empty square and * is a tree.\nFinally, there are q lines describing the queries. Each line has four integers y_1, x_1, y_2, x_2 corresponding to the corners of a rectangle.\nOutput\nPrint the number of trees inside each rectangle.\nConstraints\n\n1 \\le n \\le 1000\n1 \\le q \\le 2 \\cdot 10^5\n1 \\le y_1 \\le y_2 \\le n\n1 \\le x_1 \\le x_2 \\le n\n\nExample\nInput:\n4 3\n.*..\n*.**\n**..\n****\n2 2 3 4\n3 1 3 1\n1 1 2 2\n\nOutput:\n3\n1\n2\n"
    },
    {
        "link": "/problemset/task/1143",
        "title": "Hotel Queries",
        "content": "There are n hotels on a street. For each hotel you know the number of free rooms. Your task is to assign hotel rooms for groups of tourists. All members of a group want to stay in the same hotel.\nThe groups will come to you one after another, and you know for each group the number of rooms it requires. You always assign a group to the first hotel having enough rooms. After this, the number of free rooms in the hotel decreases.\nInput\nThe first input line contains two integers n and m: the number of hotels and the number of groups. The hotels are numbered 1,2,\\ldots,n.\nThe next line contains n integers h_1,h_2,\\ldots,h_n: the number of free rooms in each hotel.\nThe last line contains m integers r_1,r_2,\\ldots,r_m: the number of rooms each group requires.\nOutput\nPrint the assigned hotel for each group. If a group cannot be assigned a hotel, print 0 instead.\nConstraints\n\n1 \\le n,m \\le 2 \\cdot 10^5\n1 \\le h_i \\le 10^9\n1 \\le r_i \\le 10^9\n\nExample\nInput:\n8 5\n3 2 4 1 5 5 2 6\n4 4 7 1 1\n\nOutput:\n3 5 0 1 1\n"
    },
    {
        "link": "/problemset/task/1749",
        "title": "List Removals",
        "content": "You are given a list consisting of n integers. Your task is to remove elements from the list at given positions, and report the removed elements.\nInput\nThe first input line has an integer n: the initial size of the list. During the process, the elements are numbered 1,2,\\dots,k where k is the current size of the list.\nThe second line has n integers x_1,x_2,\\dots,x_n: the contents of the list.\nThe last line has n integers p_1,p_2,\\dots,p_n: the positions of the elements to be removed.\nOutput\nPrint the elements in the order they are removed.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le x_i \\le 10^9\n1 \\le p_i \\le n-i+1\n\nExample\nInput:\n5\n2 6 1 4 2\n3 1 3 1 1\n\nOutput:\n1 2 2 6 4\n\nExplanation: The contents of the list are [2,6,1,4,2], [2,6,4,2], [6,4,2], [6,4], [4] and [].\n"
    },
    {
        "link": "/problemset/task/1144",
        "title": "Salary Queries",
        "content": "A company has n employees with certain salaries. Your task is to keep track of the salaries and process queries.\nInput\nThe first input line contains two integers n and q: the number of employees and queries. The employees are numbered 1,2,\\ldots,n.\nThe next line has n integers p_1,p_2,\\ldots,p_n: each employee's salary.\nAfter this, there are q lines describing the queries. Each line has one of the following forms:\n\n! k x: change the salary of employee k to x\n? a b: count the number of employees whose salary is between a \\ldots b\n\nOutput\nPrint the answer to each ? query.\nConstraints\n\n1 \\le n, q \\le 2 \\cdot 10^5\n1 \\le p_i \\le 10^9\n1 \\le k \\le n\n1 \\le x \\le 10^9\n1 \\le a \\le b \\le 10^9\n\nExample\nInput:\n5 3\n3 7 2 2 5\n? 2 3\n! 3 6\n? 2 3\n\nOutput:\n3\n2\n"
    },
    {
        "link": "/problemset/task/2166",
        "title": "Prefix Sum Queries",
        "content": "Given an array of n integers, your task is to process q queries of the following types:\n\nupdate the value at position k to u\nwhat is the maximum prefix sum in range [a,b]?\n\nInput\nThe first input line has two integers n and q: the number of values and queries.\nThe second line has n integers x_1,x_2,\\dots,x_n: the array values.\nFinally, there are q lines describing the queries. Each line has three integers: either \"1 k u\" or \"2 a b\".\nOutput\nPrint the result of each query of type 2.\nConstraints\n\n1 \\le n,q \\le 2 \\cdot 10^5\n-10^9 \\le x_i, u \\le 10^9\n1 \\le k \\le n\n1 \\le a \\le b \\le n\n\nExample\nInput:\n8 4\n1 2 -1 3 1 -5 1 4\n2 2 6\n1 4 -2\n2 2 6\n2 3 4\n\nOutput:\n5\n2\n0\n"
    },
    {
        "link": "/problemset/task/2206",
        "title": "Pizzeria Queries",
        "content": "There are n buildings on a street, numbered 1,2,\\dots,n. Each building has a pizzeria and an apartment.\nThe pizza price in building k is p_k. If you order a pizza from building a to building b, its price (with delivery) is p_a+|a-b|.\nYour task is to process two types of queries:\n\nThe pizza price p_k in building k becomes x.\nYou are in building k and want to order a pizza. What is the minimum price?\n\nInput\nThe first input line has two integers n and q: the number of buildings and queries.\nThe second line has n integers p_1,p_2,\\dots,p_n: the initial pizza price in each building.\nFinally, there are q lines that describe the queries. Each line is either \"1 k x\" or \"2 k\".\nOutput\nPrint the answer for each query of type 2.\nConstraints\n\n1 \\le n,q \\le 2 \\cdot 10^5\n1 \\le p_i, x \\le 10^9\n1 \\le k \\le n\n\nExample\nInput:\n6 3\n8 6 4 5 7 5\n2 2\n1 5 1\n2 2\n\nOutput:\n5\n4\n"
    },
    {
        "link": "/problemset/task/1190",
        "title": "Subarray Sum Queries",
        "content": "There is an array consisting of n integers. Some values of the array will be updated, and after each update, your task is to report the maximum subarray sum in the array. \nInput\nThe first input line contains integers n and m: the size of the array and the number of updates. The array is indexed 1,2,\\ldots,n.\nThe next line has n integers: x_1,x_2,\\ldots,x_n: the initial contents of the array.\nThen there are m lines describing the changes. Each line has two integers k and x: the value at position k becomes x.\nOutput\nAfter each update, print the maximum subarray sum. Empty subarrays (with sum 0) are allowed.\nConstraints\n\n1 \\le n, m \\le 2 \\cdot 10^5\n-10^9 \\le x_i \\le 10^9\n1 \\le k \\le n\n-10^9 \\le x \\le 10^9\n\nExample\nInput:\n5 3\n1 2 -3 5 -1\n2 6\n3 1\n2 -2\n\nOutput:\n9\n13\n6\n"
    },
    {
        "link": "/problemset/task/1734",
        "title": "Distinct Values Queries",
        "content": "You are given an array of n integers and q queries of the form: how many distinct values are there in a range [a,b]?\nInput\nThe first input line has two integers n and q: the array size and number of queries.\nThe next line has n integers x_1,x_2,\\dots,x_n: the array values.\nFinally, there are q lines describing the queries. Each line has two integers a and b.\nOutput\nFor each query, print the number of distinct values in the range.\nConstraints\n\n1 \\le n,q \\le 2 \\cdot 10^5\n1 \\le x_i \\le 10^9\n1 \\le a \\le b \\le n\n\nExample\nInput:\n5 3\n3 2 3 1 2\n1 3\n2 4\n1 5\n\nOutput:\n2\n3\n3\n"
    },
    {
        "link": "/problemset/task/2416",
        "title": "Increasing Array Queries",
        "content": "You are given an array that consists of n integers. The array elements are indexed 1,2,\\dots,n.\nYou can modify the array using the following operation: choose an array element and increase its value by one.\nYour task is to process q queries of the form: when we consider a subarray from position a to position b, what is the minimum number of operations after which the subarray is increasing?\nAn array is increasing if each element is greater than or equal with the previous element.\nInput\nThe first input line has two integers n and q: the size of the array and the number of queries.\nThe next line has n integers x_1,x_2,\\dots,x_n: the contents of the array.\nFinally, there are q lines that describe the queries. Each line has two integers a and b: the starting and ending position of a subarray.\nOutput\nFor each query, print the minimum number of operations.\nConstraints\n\n1 \\le n,q \\le 2\\cdot10^5\n1 \\le x_i \\le 10^9\n1 \\le a \\le b \\le n\n\nExample\nInput:\n5 3\n2 10 4 2 5\n3 5\n2 2\n1 4\n\nOutput:\n2\n0\n14\n"
    },
    {
        "link": "/problemset/task/1739",
        "title": "Forest Queries II",
        "content": "You are given an n \\times n grid representing the map of a forest. Each square is either empty or has a tree. Your task is to process q queries of the following types:\n\nChange the state (empty/tree) of a square.\nHow many trees are inside a rectangle in the forest?\n\nInput\nThe first input line has two integers n and q: the size of the forest and the number of queries.\nThen, there are n lines describing the forest. Each line has n characters: . is an empty square and * is a tree.\nFinally, there are q lines describing the queries. The format of each line is either \"1 y x\" or \"2 y_1 x_1 y_2 x_2\".\nOutput\nPrint the answer to each query of the second type.\nConstraints\n\n1 \\le n \\le 1000\n1 \\le q \\le 2 \\cdot 10^5\n1 \\le y,x \\le n\n1 \\le y_1 \\le y_2 \\le n\n1 \\le x_1 \\le x_2 \\le n\n\nExample\nInput:\n4 3\n.*..\n*.**\n**..\n****\n2 2 2 3 4\n1 3 3\n2 2 2 3 4\n\nOutput:\n3\n4\n"
    },
    {
        "link": "/problemset/task/1735",
        "title": "Range Updates and Sums",
        "content": "Your task is to maintain an array of n values and efficiently process the following types of queries:\n\nIncrease each value in range [a,b] by x.\nSet each value in range [a,b] to x.\nCalculate the sum of values in range [a,b].\n\nInput\nThe first input line has two integers n and q: the array size and the number of queries.\nThe next line has n values t_1,t_2,\\dots,t_n: the initial contents of the array.\nFinally, there are q lines describing the queries. The format of each line is one of the following: \"1 a b x\",  \"2 a b x\", or \"3 a b\". \nOutput\nPrint the answer to each sum query.\nConstraints\n\n1 \\le n, q \\le 2 \\cdot 10^5\n1 \\le t_i, x \\le 10^6\n1 \\le a \\le b \\le n\n\nExample\nInput:\n6 5\n2 3 1 1 5 3\n3 3 5\n1 2 4 2\n3 3 5\n2 2 4 5\n3 3 5\n\nOutput:\n7\n11\n15\n"
    },
    {
        "link": "/problemset/task/1736",
        "title": "Polynomial Queries",
        "content": "Your task is to maintain an array of n values and efficiently process the following types of queries:\n\nIncrease the first value in range [a,b] by 1, the second value by 2, the third value by 3, and so on.\nCalculate the sum of values in range [a,b].\n\nInput\nThe first input line has two integers n and q: the size of the array and the number of queries.\nThe next line has n values t_1,t_2,\\dots,t_n: the initial contents of the array.\nFinally, there are q lines describing the queries. The format of each line is either \"1 a b\" or \"2 a b\".\nOutput\nPrint the answer to each sum query.\nConstraints\n\n1 \\le n, q \\le 2 \\cdot 10^5\n1 \\le t_i \\le 10^6\n1 \\le a \\le b \\le n\n\nExample\nInput:\n5 3\n4 2 3 1 7\n2 1 5\n1 1 5\n2 1 5\n\nOutput:\n17\n32\n"
    },
    {
        "link": "/problemset/task/1737",
        "title": "Range Queries and Copies",
        "content": "Your task is to maintain a list of arrays which initially has a single array. You have to process the following types of queries:\n\nSet the value a in array k to x.\nCalculate the sum of values in range [a,b] in array k.\nCreate a copy of array k and add it to the end of the list.\n\nInput\nThe first input line has two integers n and q: the array size and the number of queries.\nThe next line has n integers t_1,t_2,\\ldots,t_n: the initial contents of the array.\nFinally, there are q lines describing the queries. The format of each line is one of the following: \"1 k a x\", \"2 k a b\" or \"3 k\".\nOutput\nPrint the answer to each sum query.\nConstraints\n\n1 \\le n, q \\le 2 \\cdot 10^5\n1 \\le t_i, x \\le 10^9\n1 \\le a \\le b \\le n\n\nExample\nInput:\n5 6\n2 3 1 2 5\n3 1\n2 1 1 5\n2 2 1 5\n1 2 2 5\n2 1 1 5\n2 2 1 5\n\nOutput:\n13\n13\n13\n15\n"
    },
    {
        "link": "/problemset/task/1674",
        "title": "Subordinates",
        "content": "Given the structure of a company, your task is to calculate for each employee the number of their subordinates.\nInput\nThe first input line has an integer n: the number of employees. The employees are numbered 1,2,\\dots,n, and employee 1 is the general director of the company.\nAfter this, there are n-1 integers: for each employee 2,3,\\dots,n their direct boss in the company.\nOutput\nPrint n integers: for each employee 1,2,\\dots,n the number of their subordinates.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n\nExample\nInput:\n5\n1 1 2 3\n\nOutput:\n4 1 1 0 0\n"
    },
    {
        "link": "/problemset/task/1130",
        "title": "Tree Matching",
        "content": "You are given a tree consisting of n nodes.\nA matching is a set of edges where each node is an endpoint of at most one edge. What is the maximum number of edges in a matching?\nInput\nThe first input line contains an integer n: the number of nodes. The nodes are numbered 1,2,\\ldots,n.\nThen there are n-1 lines describing the edges. Each line contains two integers a and b: there is an edge between nodes a and b.\nOutput\nPrint one integer: the maximum number of pairs.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5\n1 2\n1 3\n3 4\n3 5\n\nOutput:\n2\n\nExplanation: One possible matching is (1,2) and (3,4).\n"
    },
    {
        "link": "/problemset/task/1131",
        "title": "Tree Diameter",
        "content": "You are given a tree consisting of n nodes.\nThe diameter of a tree is the maximum distance between two nodes. Your task is to determine the diameter of the tree.\nInput\nThe first input line contains an integer n: the number of nodes. The nodes are numbered 1,2,\\ldots,n.\nThen there are n-1 lines describing the edges. Each line contains two integers a and b: there is an edge between nodes a and b.\nOutput\nPrint one integer: the diameter of the tree.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5\n1 2\n1 3\n3 4\n3 5\n\nOutput:\n3\n\nExplanation: The diameter corresponds to the path 2 \\rightarrow 1 \\rightarrow 3 \\rightarrow 5.\n"
    },
    {
        "link": "/problemset/task/1132",
        "title": "Tree Distances I",
        "content": "You are given a tree consisting of n nodes.\nYour task is to determine for each node the maximum distance to another node.\nInput\nThe first input line contains an integer n: the number of nodes. The nodes are numbered 1,2,\\ldots,n.\nThen there are n-1 lines describing the edges. Each line contains two integers a and b: there is an edge between nodes a and b.\nOutput\nPrint n integers: for each node 1,2,\\ldots,n, the maximum distance to another node.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5\n1 2\n1 3\n3 4\n3 5\n\nOutput:\n2 3 2 3 3\n"
    },
    {
        "link": "/problemset/task/1133",
        "title": "Tree Distances II",
        "content": "You are given a tree consisting of n nodes.\nYour task is to determine for each node the sum of the distances from the node to all other nodes.\nInput\nThe first input line contains an integer n: the number of nodes. The nodes are numbered 1,2,\\ldots,n.\nThen there are n-1 lines describing the edges. Each line contains two integers a and b: there is an edge between nodes a and b.\nOutput\nPrint n integers: for each node 1,2,\\ldots,n, the sum of the distances.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5\n1 2\n1 3\n3 4\n3 5\n\nOutput:\n6 9 5 8 8\n"
    },
    {
        "link": "/problemset/task/1687",
        "title": "Company Queries I",
        "content": "A company has n employees, who form a tree hierarchy where each employee has a boss, except for the general director.\nYour task is to process q queries of the form: who is employee x's boss k levels higher up in the hierarchy?\nInput\nThe first input line has two integers n and q: the number of employees and queries. The employees are numbered 1,2,\\dots,n, and employee 1 is the general director.\nThe next line has n-1 integers e_2,e_3,\\dots,e_n: for each employee 2,3,\\dots,n their boss.\nFinally, there are q lines describing the queries. Each line has two integers x and k: who is employee x's boss k levels higher up?\nOutput\nPrint the answer for each query. If such a boss does not exist, print -1.\nConstraints\n\n1 \\le n,q \\le 2 \\cdot 10^5\n1 \\le e_i \\le i-1\n1 \\le x \\le n\n1 \\le k \\le n\n\nExample\nInput:\n5 3\n1 1 3 3\n4 1\n4 2\n4 3\n\nOutput:\n3\n1\n-1\n"
    },
    {
        "link": "/problemset/task/1688",
        "title": "Company Queries II",
        "content": "A company has n employees, who form a tree hierarchy where each employee has a boss, except for the general director.\nYour task is to process q queries of the form: who is the lowest common boss of employees a and b in the hierarchy?\nInput\nThe first input line has two integers n and q: the number of employees and queries. The employees are numbered 1,2,\\dots,n, and employee 1 is the general director.\nThe next line has n-1 integers e_2,e_3,\\dots,e_n: for each employee 2,3,\\dots,n their boss.\nFinally, there are q lines describing the queries. Each line has two integers a and b: who is the lowest common boss of employees a and b?\nOutput\nPrint the answer for each query.\nConstraints\n\n1 \\le n,q \\le 2 \\cdot 10^5\n1 \\le e_i \\le i-1\n1 \\le a,b \\le n\n\nExample\nInput:\n5 3\n1 1 3 3\n4 5\n2 5\n1 4\n\nOutput:\n3\n1\n1\n"
    },
    {
        "link": "/problemset/task/1135",
        "title": "Distance Queries",
        "content": "You are given a tree consisting of n nodes.\nYour task is to process q queries of the form: what is the distance between nodes a and b?\nInput\nThe first input line contains two integers n and q: the number of nodes and queries. The nodes are numbered 1,2,\\ldots,n.\nThen there are n-1 lines describing the edges. Each line contains two integers a and b: there is an edge between nodes a and b.\nFinally, there are q lines describing the queries. Each line contains two integer a and b: what is the distance between nodes a and b?\nOutput\nPrint q integers: the answer to each query.\nConstraints\n\n1 \\le n, q \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5 3\n1 2\n1 3\n3 4\n3 5\n1 3\n2 5\n1 4\n\nOutput:\n1\n3\n2\n"
    },
    {
        "link": "/problemset/task/1136",
        "title": "Counting Paths",
        "content": "You are given a tree consisting of n nodes, and m paths in the tree.\nYour task is to calculate for each node the number of paths containing that node.\nInput\nThe first input line contains integers n and m: the number of nodes and paths. The nodes are numbered 1,2,\\ldots,n.\nThen there are n-1 lines describing the edges. Each line contains two integers a and b: there is an edge between nodes a and b.\nFinally, there are m lines describing the paths. Each line contains two integers a and b: there is a path between nodes a and b.\nOutput\nPrint n integers: for each node 1,2,\\ldots,n, the number of paths containing that node.\nConstraints\n\n1 \\le n, m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5 3\n1 2\n1 3\n3 4\n3 5\n1 3\n2 5\n1 4\n\nOutput:\n3 1 3 1 1\n"
    },
    {
        "link": "/problemset/task/1137",
        "title": "Subtree Queries",
        "content": "You are given a rooted tree consisting of n nodes. The nodes are numbered 1,2,\\ldots,n, and node 1 is the root. Each node has a value.\nYour task is to process following types of queries:\n\nchange the value of node s to x\ncalculate the sum of values in the subtree of node s\n\nInput\nThe first input line contains two integers n and q: the number of nodes and queries. The nodes are numbered 1,2,\\ldots,n.\nThe next line has n integers v_1,v_2,\\ldots,v_n: the value of each node.\nThen there are n-1 lines describing the edges. Each line contans two integers a and b: there is an edge between nodes a and b.\nFinally, there are q lines describing the queries. Each query is either of the form \"1 s x\" or \"2 s\".\nOutput\nPrint the answer to each query of type 2.\nConstraints\n\n1 \\le n, q \\le 2 \\cdot 10^5\n1 \\le a,b, s \\le n\n1 \\le v_i, x \\le 10^9\n\nExample\nInput:\n5 3\n4 2 5 2 1\n1 2\n1 3\n3 4\n3 5\n2 3\n1 5 3\n2 3\n\nOutput:\n8\n10\n"
    },
    {
        "link": "/problemset/task/1138",
        "title": "Path Queries",
        "content": "You are given a rooted tree consisting of n nodes. The nodes are numbered 1,2,\\ldots,n, and node 1 is the root. Each node has a value.\nYour task is to process following types of queries:\n\nchange the value of node s to x\ncalculate the sum of values on the path from the root to node s\n\nInput\nThe first input line contains two integers n and q: the number of nodes and queries. The nodes are numbered 1,2,\\ldots,n.\nThe next line has n integers v_1,v_2,\\ldots,v_n: the value of each node.\nThen there are n-1 lines describing the edges. Each line contains two integers a and b: there is an edge between nodes a and b.\nFinally, there are q lines describing the queries. Each query is either of the form \"1 s x\" or \"2 s\".\nOutput\nPrint the answer to each query of type 2.\nConstraints\n\n1 \\le n, q \\le 2 \\cdot 10^5\n1 \\le a,b, s \\le n\n1 \\le v_i, x \\le 10^9\n\nExample\nInput:\n5 3\n4 2 5 2 1\n1 2\n1 3\n3 4\n3 5\n2 4\n1 3 2\n2 4\n\nOutput:\n11\n8\n"
    },
    {
        "link": "/problemset/task/2134",
        "title": "Path Queries II",
        "content": "You are given a tree consisting of n nodes. The nodes are numbered 1,2,\\ldots,n. Each node has a value.\nYour task is to process following types of queries:\n\nchange the value of node s to x\nfind the maximum value on the path between nodes a and b.\n\nInput\nThe first input line contains two integers n and q: the number of nodes and queries. The nodes are numbered 1,2,\\ldots,n.\nThe next line has n integers v_1,v_2,\\ldots,v_n: the value of each node.\nThen there are n-1 lines describing the edges. Each line contains two integers a and b: there is an edge between nodes a and b.\nFinally, there are q lines describing the queries. Each query is either of the form \"1 s x\" or \"2 a b\".\nOutput\nPrint the answer to each query of type 2.\nConstraints\n\n1 \\le n, q \\le 2 \\cdot 10^5\n1 \\le a,b, s \\le n\n1 \\le v_i, x \\le 10^9\n\nExample\nInput:\n5 3\n2 4 1 3 3\n1 2\n1 3\n2 4\n2 5\n2 3 5\n1 2 2\n2 3 5\n\nOutput:\n4 3\n"
    },
    {
        "link": "/problemset/task/1139",
        "title": "Distinct Colors",
        "content": "You are given a rooted tree consisting of n nodes. The nodes are numbered 1,2,\\ldots,n, and node 1 is the root. Each node has a color.\nYour task is to determine for each node the number of distinct colors in the subtree of the node.\nInput\nThe first input line contains an integer n: the number of nodes. The nodes are numbered 1,2,\\ldots,n.\nThe next line consists of n integers c_1,c_2,\\ldots,c_n: the color of each node.\nThen there are n-1 lines describing the edges. Each line contains two integers a and b: there is an edge between nodes a and b.\nOutput\nPrint n integers: for each node 1,2,\\ldots,n, the number of distinct colors.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n1 \\le c_i \\le 10^9\n\nExample\nInput:\n5\n2 3 2 2 1\n1 2\n1 3\n3 4\n3 5\n\nOutput:\n3 1 2 1 1\n"
    },
    {
        "link": "/problemset/task/2079",
        "title": "Finding a Centroid",
        "content": "Given a tree of n nodes, your task is to find a centroid, i.e., a node such that when it is appointed the root of the tree, each subtree has at most \\lfloor n/2 \\rfloor nodes.\nInput\nThe first input line contains an integer n: the number of nodes. The nodes are numbered 1,2,\u2026,n.\nThen there are n-1 lines describing the edges. Each line contains two integers a and b: there is an edge between nodes a and b.\nOutput\nPrint one integer: a centroid node. If there are several possibilities, you can choose any of them.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5\n1 2\n2 3\n3 4\n3 5\n\nOutput:\n3\n"
    },
    {
        "link": "/problemset/task/2080",
        "title": "Fixed-Length Paths I",
        "content": "Given a tree of n nodes, your task is to count the number of distinct paths that consist of exactly k edges.\nInput\nThe first input line contains two integers n and k: the number of nodes and the path length. The nodes are numbered 1,2,\\ldots,n.\nThen there are n-1 lines describing the edges. Each line contains two integers a and b: there is an edge between nodes a and b.\nOutput\nPrint one integer: the number of paths.\nConstraints\n\n1 \\le k \\le n \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5 2\n1 2\n2 3\n3 4\n3 5\n\nOutput:\n4\n"
    },
    {
        "link": "/problemset/task/2081",
        "title": "Fixed-Length Paths II",
        "content": "Given a tree of n nodes, your task is to count the number of distinct paths that have at least k_1 and at most k_2 edges.\nInput\nThe first input line contains three integers n, k_1 and k_2: the number of nodes and the path lengths. The nodes are numbered 1,2,\\ldots,n.\nThen there are n-1 lines describing the edges. Each line contains two integers a and b: there is an edge between nodes a and b.\nOutput\nPrint one integer: the number of paths.\nConstraints\n\n1 \\le k_1 \\le k_2 \\le n \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5 2 3\n1 2\n2 3\n3 4\n3 5\n\nOutput:\n6\n"
    },
    {
        "link": "/problemset/task/2164",
        "title": "Josephus Queries",
        "content": "Consider a game where there are n children (numbered 1,2,\\dots,n) in a circle. During the game, every second child is removed from the circle, until there are no children left.\nYour task is to process q queries of the form: \"when there are n children, who is the kth child that will be removed?\"\nInput\nThe first input line has an integer q: the number of queries.\nAfter this, there are q lines that describe the queries. Each line has two integers n and k: the number of children and the position of the child.\nOutput\nPrint q integers: the answer for each query.\nConstraints\n\n1 \\le q \\le 10^5\n1 \\le k \\le n \\le 10^9\n\nExample\nInput:\n4\n7 1\n7 3\n2 2\n1337 1313\n\nOutput:\n2\n6\n1\n1107\n"
    },
    {
        "link": "/problemset/task/1095",
        "title": "Exponentiation",
        "content": "Your task is to efficiently calculate values a^b modulo 10^9+7.\nNote that in this task we assume that 0^0=1.\nInput\nThe first input line contains an integer n: the number of calculations.\nAfter this, there are n lines, each containing two integers a and b.\nOutput\nPrint each value a^b modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n0 \\le a,b \\le 10^9\n\nExample\nInput:\n3\n3 4\n2 8\n123 123\n\nOutput:\n81\n256\n921450052\n"
    },
    {
        "link": "/problemset/task/1712",
        "title": "Exponentiation II",
        "content": "Your task is to efficiently calculate values a^{b^c} modulo 10^9+7.\nNote that in this task we assume that 0^0=1.\nInput\nThe first input line has an integer n: the number of calculations.\nAfther this, there are n lines, each containing three integers a, b and c.\nOutput\nPrint each value a^{b^c} modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 10^5\n0 \\le a,b,c \\le 10^9\n\nExample\nInput:\n3\n3 7 1\n15 2 2\n3 4 5\n\nOutput:\n2187\n50625\n763327764\n"
    },
    {
        "link": "/problemset/task/1713",
        "title": "Counting Divisors",
        "content": "Given n integers, your task is to report for each integer the number of its divisors.\nFor example, if x=18, the correct answer is 6 because its divisors are 1,2,3,6,9,18.\nInput\nThe first input line has an integer n: the number of integers.\nAfter this, there are n lines, each containing an integer x.\nOutput\nFor each integer, print the number of its divisors.\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le x \\le 10^6\n\nExample\nInput:\n3\n16\n17\n18\n\nOutput:\n5\n2\n6\n"
    },
    {
        "link": "/problemset/task/1081",
        "title": "Common Divisors",
        "content": "You are given an array of n positive integers. Your task is to find two integers such that their greatest common divisor is as large as possible.\nInput\nThe first input line has an integer n: the size of the array.\nThe second line has n integers x_1,x_2,\\ldots,x_n: the contents of the array.\nOutput\nPrint the maximum greatest common divisor.\nConstraints\n\n2 \\le n \\le 2 \\cdot 10^5\n1 \\le x_i \\le 10^6\n\nExample\nInput:\n5\n3 14 15 7 9\n\nOutput:\n7\n"
    },
    {
        "link": "/problemset/task/1082",
        "title": "Sum of Divisors",
        "content": "Let \\sigma(n) denote the sum of divisors of an integer n. For example, \\sigma(12)=1+2+3+4+6+12=28.\nYour task is to calculate the sum \\sum_{i=1}^n \\sigma(i) modulo 10^9+7.\nInput\nThe only input line has an integer n.\nOutput\nPrint \\sum_{i=1}^n \\sigma(i) modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 10^{12}\n\nExample\nInput:\n5\n\nOutput:\n21\n"
    },
    {
        "link": "/problemset/task/2182",
        "title": "Divisor Analysis",
        "content": "Given an integer, your task is to find the number, sum and product of its divisors. As an example, let us consider the number 12:\n\nthe number of divisors is 6 (they are 1, 2, 3, 4, 6, 12)\nthe sum of divisors is 1+2+3+4+6+12=28\nthe product of divisors is 1 \\cdot 2 \\cdot 3 \\cdot 4 \\cdot 6 \\cdot 12 = 1728\n\nSince the input number may be large, it is given as a prime factorization.\nInput\nThe first line has an integer n: the number of parts in the prime factorization.\nAfter this, there are n lines that describe the factorization. Each line has two numbers x and k where x is a prime and k is its power.\nOutput\nPrint three integers modulo 10^9+7: the number, sum and product of the divisors.\nConstraints\n\n1 \\le n \\le 10^5\n2 \\le x \\le 10^6\neach x is a distinct prime\n1 \\le k \\le 10^9\n\nExample\nInput:\n2\n2 2\n3 1\n\nOutput:\n6 28 1728\n"
    },
    {
        "link": "/problemset/task/2185",
        "title": "Prime Multiples",
        "content": "You are given k distinct prime numbers a_1,a_2,\\ldots,a_k and an integer n.\nYour task is to calculate how many of the first n positive integers are divisible by at least one of the given prime numbers.\nInput\nThe first input line has two integers n and k.\nThe second line has k prime numbers a_1,a_2,\\ldots,a_k.\nOutput\nPrint one integer: the number integers within the interval 1,2,\\ldots,n that are divisible by at least one of the prime numbers.\nConstraints\n\n1 \\le n \\le 10^{18}\n1 \\le k \\le 20\n2 \\le a_i \\le n\n\nExample\nInput:\n20 2\n2 5\n\nOutput:\n12\n\nExplanation: the 12 numbers are 2,4,5,6,8,10,12,14,15,16,18,20.\n"
    },
    {
        "link": "/problemset/task/2417",
        "title": "Counting Coprime Pairs",
        "content": "Given a list of n positive integers, your task is to count the number of pairs of integers that are coprime (i.e., their greatest common divisor is one).\nInput\nThe first input line has an integer n: the number of elements.\nThe next line has n integers x_1,x_2,\\dots,x_n: the contents of the list.\nOutput\nPrint one integer: the answer for the task.\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le x_i \\le 10^6\n\nExample\nInput:\n8\n5 4 20 1 16 17 5 15\n\nOutput:\n19\n"
    },
    {
        "link": "/problemset/task/1079",
        "title": "Binomial Coefficients",
        "content": "Your task is to calculate n binomial coefficients modulo 10^9+7.\nA binomial coefficient {a \\choose b} can be calculated using the formula \\frac{a!}{b!(a-b)!}. We assume that a and b are integers and 0 \\le b \\le a.\nInput\nThe first input line contains an integer n: the number of calculations.\nAfter this, there are n lines, each of which contains two integers a and b.\nOutput\nPrint each binomial coefficient modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 10^5\n0 \\le b \\le a \\le 10^6\n\nExample\nInput:\n3\n5 3\n8 1\n9 5\n\nOutput:\n10\n8\n126\n"
    },
    {
        "link": "/problemset/task/1715",
        "title": "Creating Strings II",
        "content": "Given a string, your task is to calculate the number of different strings that can be created using its characters.\nInput\nThe only input line has a string of length n. Each character is between a\u2013z.\nOutput\nPrint the number of different strings modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 10^6\n\nExample\nInput:\naabac\n\nOutput:\n20\n"
    },
    {
        "link": "/problemset/task/1716",
        "title": "Distributing Apples",
        "content": "There are n children and m apples that will be distributed to them. Your task is to count the number of ways this can be done.\nFor example, if n=3 and m=2, there are 6 ways: [0,0,2], [0,1,1], [0,2,0], [1,0,1], [1,1,0] and [2,0,0].\nInput\nThe only input line has two integers n and m.\nOutput\nPrint the number of ways modulo 10^9+7.\nConstraints\n\n1 \\le n,m \\le 10^6\n\nExample\nInput:\n3 2\n\nOutput:\n6\n"
    },
    {
        "link": "/problemset/task/1717",
        "title": "Christmas Party",
        "content": "There are n children at a Christmas party, and each of them has brought a gift. The idea is that everybody will get a gift brought by someone else.\nIn how many ways can the gifts be distributed?\nInput\nThe only input line has an integer n: the number of children.\nOutput\nPrint the number of ways modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 10^6\n\nExample\nInput:\n4\n\nOutput:\n9\n"
    },
    {
        "link": "/problemset/task/2064",
        "title": "Bracket Sequences I",
        "content": "Your task is to calculate the number of valid bracket sequences of length n. For example, when n=6, there are 5 sequences:\n\n()()()\n()(())\n(())()\n((()))\n(()())\n\nInput\nThe only input line has an integer n.\nOutput\nPrint the number of sequences modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 10^6\n\nExample\nInput:\n6\n\nOutput:\n5\n"
    },
    {
        "link": "/problemset/task/2187",
        "title": "Bracket Sequences II",
        "content": "Your task is to calculate the number of valid bracket sequences of length n when a prefix of the sequence is given.\nInput\nThe first input line has an integer n.\nThe second line has a string of k characters: the prefix of the sequence.\nOutput\nPrint the number of sequences modulo 10^9+7.\nConstraints\n\n1 \\le k \\le n \\le 10^6\n\nExample\nInput:\n6\n(()\n\nOutput:\n2\n\nExplanation: There are two possible sequences: (())() and (()()).\n"
    },
    {
        "link": "/problemset/task/2209",
        "title": "Counting Necklaces",
        "content": "Your task is to count the number of different necklaces that consist of n pearls and each pearl has m possible colors.\nTwo necklaces are considered to be different if it is not possible to rotate one of them so that they look the same.\nInput\nThe only input line has two numbers n and m: the number of pearls and colors.\nOutput\nPrint one integer: the number of different necklaces modulo 10^9+7.\nConstraints\n\n1 \\le n,m \\le 10^6\n\nExample\nInput:\n4 3\n\nOutput:\n24\n"
    },
    {
        "link": "/problemset/task/2210",
        "title": "Counting Grids",
        "content": "Your task is to count the number of different n \\times n grids whose each square is black or white.\nTwo grids are considered to be different if it is not possible to rotate one of them so that they look the same.\nInput\nThe only input line has an integer n: the size of the grid.\nOutput\nPrint one integer: the number of grids modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 10^9\n\nExample\nInput:\n4\n\nOutput:\n16456\n"
    },
    {
        "link": "/problemset/task/1722",
        "title": "Fibonacci Numbers",
        "content": "The Fibonacci numbers can be defined as follows:\n\nF_0=0\nF_1=1\nF_n = F_{n-2}+F_{n-1}\n\nYour task is to calculate the value of F_n for a given n.\nInput\nThe only input line has an integer n.\nOutput\nPrint the value of F_n modulo 10^9+7.\nConstraints\n\n0 \\le n \\le 10^{18}\n\nExample\nInput:\n10\n\nOutput:\n55\n"
    },
    {
        "link": "/problemset/task/1096",
        "title": "Throwing Dice",
        "content": "Your task is to calculate the number of ways to get a sum n by throwing dice. Each throw yields an integer between 1 \\ldots 6.\nFor example, if n=10, some possible ways are 3+3+4, 1+4+1+4 and 1+1+6+1+1.\nInput\nThe only input line contains an integer n.\nOutput\nPrint the number of ways modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 10^{18}\n\nExample\nInput:\n8\n\nOutput:\n125\n"
    },
    {
        "link": "/problemset/task/1723",
        "title": "Graph Paths I",
        "content": "Consider a directed graph that has n nodes and m edges. Your task is to count the number of paths from node 1 to node n with exactly k edges.\nInput\nThe first input line contains three integers n, m and k: the number of nodes and edges, and the length of the path. The nodes are numbered 1,2,\\dots,n.\nThen, there are m lines describing the edges. Each line contains two integers a and b: there is an edge from node a to node b.\nOutput\nPrint the number of paths modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 100\n1 \\le m \\le n(n-1)\n1 \\le k \\le 10^9\n1 \\le a,b \\le n\n\nExample\nInput:\n3 4 8\n1 2\n2 3\n3 1\n3 2\n\nOutput:\n2\n\nExplanation: The paths are 1 \\rightarrow 2 \\rightarrow 3 \\rightarrow 1 \\rightarrow 2 \\rightarrow 3 \\rightarrow 1 \\rightarrow 2 \\rightarrow 3 and 1 \\rightarrow 2 \\rightarrow 3 \\rightarrow 2 \\rightarrow 3 \\rightarrow 2 \\rightarrow 3 \\rightarrow 2 \\rightarrow 3.\n"
    },
    {
        "link": "/problemset/task/1724",
        "title": "Graph Paths II",
        "content": "Consider a directed weighted graph having n nodes and m edges. Your task is to calculate the minimum path length from node 1 to node n with exactly k edges.\nInput\nThe first input line contains three integers n, m and k: the number of nodes and edges, and the length of the path. The nodes are numbered 1,2,\\dots,n.\nThen, there are m lines describing the edges. Each line contains three integers a, b and c: there is an edge from node a to node b with weight c.\nOutput\nPrint the minimum path length. If there are no such paths, print -1.\nConstraints\n\n1 \\le n \\le 100\n1 \\le m \\le n(n-1)\n1 \\le k \\le 10^9\n1 \\le a,b \\le n\n1 \\le c \\le 10^9\n\nExample\nInput:\n3 4 8\n1 2 5\n2 3 4\n3 1 1\n3 2 2\n\nOutput:\n27\n"
    },
    {
        "link": "/problemset/task/1725",
        "title": "Dice Probability",
        "content": "You throw a dice n times, and every throw produces an outcome between 1 and 6. What is the probability that the sum of outcomes is between a and b?\nInput\nThe only input line contains three integers n, a and b.\nOutput\nPrint the probability rounded to six decimal places (rounding half to even).\nConstraints\n\n1 \\le n \\le 100\n1 \\le a \\le b \\le 6n\n\nExample\nInput:\n2 9 10\n\nOutput:\n0.194444\n"
    },
    {
        "link": "/problemset/task/1726",
        "title": "Moving Robots",
        "content": "Each square of an 8 \\times 8 chessboard has a robot. Each robot independently moves k steps, and there can be many robots on the same square.\nOn each turn, a robot moves one step left, right, up or down, but not outside the board. It randomly chooses a direction among those where it can move.\nYour task is to calculate the expected number of empty squares after k turns.\nInput\nThe only input line has an integer k.\nOutput\nPrint the expected number of empty squares rounded to six decimal places (rounding half to even).\nConstraints\n\n1 \\le k \\le 100\n\nExample\nInput:\n10\n\nOutput:\n23.120740\n"
    },
    {
        "link": "/problemset/task/1727",
        "title": "Candy Lottery",
        "content": "There are n children, and each of them independently gets a random integer number of candies between 1 and k.\nWhat is the expected maximum number of candies a child gets?\nInput\nThe only input line contains two integers n and k.\nOutput\nPrint the expected number rounded to six decimal places (rounding half to even).\nConstraints\n\n1 \\le n \\le 100\n1 \\le k \\le 100\n\nExample\nInput:\n2 3\n\nOutput:\n2.444444\n"
    },
    {
        "link": "/problemset/task/1728",
        "title": "Inversion Probability",
        "content": "An array has n integers x_1,x_2,\\dots,x_n, and each of them has been randomly chosen between 1 and r_i. An inversion is a pair (a,b) where a&lt;b and x_a&gt;x_b.\nWhat is the expected number of inversions in the array?\nInput\nThe first input line contains an integer n: the size of the array.\nThe second line contains n integers r_1,r_2,\\dots,r_n: the range of possible values for each array position.\nOutput\nPrint the expected number of inversions rounded to six decimal places (rounding half to even).\nConstraints\n\n1 \\le n \\le 100\n1 \\le r_i \\le 100\n\nExample\nInput:\n3\n5 2 7\n\nOutput:\n1.057143\n"
    },
    {
        "link": "/problemset/task/1729",
        "title": "Stick Game",
        "content": "Consider a game where two players remove sticks from a heap. The players move alternately, and the player who removes the last stick wins the game.\nA set P=\\{p_1,p_2,\\ldots,p_k\\} determines the allowed moves. For example, if P=\\{1,3,4\\}, a player may remove 1, 3 or 4 sticks.\nYour task is find out for each number of sticks 1,2,\\dots,n if the first player has a winning or losing position.\nInput\nThe first input line has two integers n and k: the number of sticks and moves.\nThe next line has k integers p_1,p_2,\\dots,p_k that describe the allowed moves. All integers are distinct, and one of them is 1.\nOutput\nPrint a string containing n characters: W means a winning position, and L means a losing position.\nConstraints\n\n1 \\le n \\le 10^6\n1 \\le k \\le 100\n1 \\le p_i \\le n\n\nExample\nInput:\n10 3\n1 3 4\n\nOutput:\nWLWWWWLWLW\n"
    },
    {
        "link": "/problemset/task/1730",
        "title": "Nim Game I",
        "content": "There are n heaps of sticks and two players who move alternately. On each move, a player chooses a non-empty heap and removes any number of sticks. The player who removes the last stick wins the game.\nYour task is to find out who wins if both players play optimally.\nInput\nThe first input line contains an integer t: the number of tests. After this, t test cases are described:\nThe first line contains an integer n: the number of heaps.\nThe next line has n integers x_1,x_2,\\ldots,x_n: the number of sticks in each heap.\nOutput\nFor each test case, print \"first\" if the first player wins the game and \"second\" if the second player wins the game.\nConstraints\n\n1 \\le t \\le 2 \\cdot 10^5\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le x_i \\le 10^9\nthe sum of all n is at most 2 \\cdot 10^5\n\nExample\nInput:\n3\n4\n5 7 2 5\n2\n4 1\n3\n3 5 6\n\nOutput:\nfirst\nfirst\nsecond\n"
    },
    {
        "link": "/problemset/task/1098",
        "title": "Nim Game II",
        "content": "There are n heaps of sticks and two players who move alternately. On each move, a player chooses a non-empty heap and removes 1, 2, or 3 sticks. The player who removes the last stick wins the game.\nYour task is to find out who wins if both players play optimally.\nInput\nThe first input line contains an integer t: the number of tests. After this, t test cases are described:\nThe first line contains an integer n: the number of heaps.\nThe next line has n integers x_1,x_2,\\ldots,x_n: the number of sticks in each heap.\nOutput\nFor each test case, print \"first\" if the first player wins the game and \"second\" if the second player wins the game.\nConstraints\n\n1 \\le t \\le 2 \\cdot 10^5\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le x_i \\le 10^9\nthe sum of all n is at most 2 \\cdot 10^5\n\nExample\nInput:\n3\n4\n5 7 2 5\n2\n4 1\n3\n4 4 4\n\nOutput:\nfirst\nfirst\nsecond\n"
    },
    {
        "link": "/problemset/task/1099",
        "title": "Stair Game",
        "content": "There is a staircase consisting of n stairs, numbered 1,2,\\ldots,n. Initially, each stair has some number of balls.\nThere are two players who move alternately. On each move, a player chooses a stair k where k \\neq 1 and it has at least one ball. Then, the player moves any number of balls from stair k to stair k-1. The player who moves last wins the game.\nYour task is to find out who wins the game when both players play optimally.\nNote that if there are no possible moves at all, the second player wins.\nInput\nThe first input line has an integer t: the number of tests. After this, t test cases are described:\nThe first line contains an integer n: the number of stairs.\nThe next line has n integers p_1,p_2,\\ldots,p_n: the initial number of balls on each stair.\nOutput\nFor each test, print \"first\" if the first player wins the game and \"second\" if the second player wins the game.\nConstraints\n\n1 \\le t \\le 2 \\cdot 10^5\n1 \\le n \\le 2 \\cdot 10^5\n0 \\le p_i \\le 10^9\nthe sum of all n is at most 2 \\cdot 10^5\n\nExample\nInput:\n3\n3\n0 2 1\n4\n1 1 1 1\n2\n5 3\n\nOutput:\nfirst\nsecond\nfirst\n"
    },
    {
        "link": "/problemset/task/2207",
        "title": "Grundy's Game",
        "content": "There is a heap of n coins and two players who move alternately. On each move, a player chooses a heap and divides into two nonempty heaps that have a different number of coins. The player who makes the last move wins the game.\nYour task is to find out who wins if both players play optimally.\nInput\nThe first input line contains an integer t: the number of tests.\nAfter this, there are t lines that describe the tests. Each line has an integer n: the number of coins in the initial heap.\nOutput\nFor each test case, print \"first\" if the first player wins the game and \"second\" if the second player wins the game.\nConstraints\n\n1 \\le t \\le 10^5\n1 \\le n \\le 10^6\n\nExample\nInput:\n3\n6\n7\n8\n\nOutput:\nfirst\nsecond\nfirst\n"
    },
    {
        "link": "/problemset/task/2208",
        "title": "Another Game",
        "content": "There are n heaps of coins and two players who move alternately. On each move, a player selects some of the nonempty heaps and removes one coin from each heap. The player who removes the last coin wins the game.\nYour task is to find out who wins if both players play optimally.\nInput\nThe first input line contains an integer t: the number of tests. After this, t test cases are described:\nThe first line contains an integer n: the number of heaps.\nThe next line has n integers x_1,x_2,\\ldots,x_n: the number of coins in each heap.\nOutput\nFor each test case, print \"first\" if the first player wins the game and \"second\" if the second player wins the game.\nConstraints\n\n1 \\le t \\le 2 \\cdot 10^5\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le x_i \\le 10^9\nthe sum of all n is at most 2 \\cdot 10^5\n\nExample\nInput:\n3\n3\n1 2 3\n2\n2 2\n4\n5 5 4 5\n\nOutput:\nfirst\nsecond\nfirst\n"
    },
    {
        "link": "/problemset/task/1731",
        "title": "Word Combinations",
        "content": "You are given a string of length n and a dictionary containing k words. In how many ways can you create the string using the words?\nInput\nThe first input line has a string containing n characters between a\u2013z.\nThe second line has an integer k: the number of words in the dictionary.\nFinally there are k lines describing the words. Each word is unique and consists of characters a\u2013z.\nOutput\nPrint the number of ways modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 5000\n1 \\le k \\le 10^5\nthe total length of the words is at most 10^6\n\nExample\nInput:\nababc\n4\nab\nabab\nc\ncb\n\nOutput:\n2\n\nExplanation: The possible ways are ab+ab+c and abab+c.\n"
    },
    {
        "link": "/problemset/task/1753",
        "title": "String Matching",
        "content": "Given a string and a pattern, your task is to count the number of positions where the pattern occurs in the string.\nInput\nThe first input line has a string of length n, and the second input line has a pattern of length m. Both of them consist of characters a\u2013z.\nOutput\nPrint one integer: the number of occurrences.\nConstraints\n\n1 \\le n,m \\le 10^6\n\nExample\nInput:\nsaippuakauppias\npp\n\nOutput:\n2\n"
    },
    {
        "link": "/problemset/task/1732",
        "title": "Finding Borders",
        "content": "A border of a string is a prefix that is also a suffix of the string but not the whole string. For example, the borders of abcababcab are ab and abcab.\nYour task is to find all border lengths of a given string.\nInput\nThe only input line has a string of length n consisting of characters a\u2013z.\nOutput\nPrint all border lengths of the string in increasing order.\nConstraints\n\n1 \\le n \\le 10^6\n\nExample\nInput:\nabcababcab\n\nOutput:\n2 5\n"
    },
    {
        "link": "/problemset/task/1733",
        "title": "Finding Periods",
        "content": "A period of a string is a prefix that can be used to generate the whole string by repeating the prefix. The last repetition may be partial. For example, the periods of abcabca are abc, abcabc and abcabca.\nYour task is to find all period lengths of a string.\nInput\nThe only input line has a string of length n consisting of characters a\u2013z.\nOutput\nPrint all period lengths in increasing order.\nConstraints\n\n1 \\le n \\le 10^6\n\nExample\nInput:\nabcabca\n\nOutput:\n3 6 7\n"
    },
    {
        "link": "/problemset/task/1110",
        "title": "Minimal Rotation",
        "content": "A rotation of a string can be generated by moving characters one after another from beginning to end. For example, the rotations of acab are acab, caba, abac, and baca.\nYour task is to determine the lexicographically minimal rotation of a string.\nInput\nThe only input line contains a string of length n. Each character is one of a\u2013z.\nOutput\nPrint the lexicographically minimal rotation.\nConstraints\n\n1 \\le n \\le 10^6\n\nExample\nInput:\nacab\n\nOutput:\nabac\n"
    },
    {
        "link": "/problemset/task/1111",
        "title": "Longest Palindrome",
        "content": "Given a string, your task is to determine the longest palindromic substring of the string. For example, the longest palindrome in aybabtu is bab.\nInput\nThe only input line contains a string of length n. Each character is one of a\u2013z.\nOutput\nPrint the longest palindrome in the string. If there are several solutions, you may print any of them.\nConstraints\n\n1 \\le n \\le 10^6\n\nExample\nInput:\naybabtu\n\nOutput:\nbab\n"
    },
    {
        "link": "/problemset/task/1112",
        "title": "Required Substring",
        "content": "Your task is to calculate the number of strings of length n having a given pattern of length m as their substring. All strings consist of characters A\u2013Z.\nInput\nThe first input line has an integer n: the length of the final string.\nThe second line has a pattern of length m.\nOutput\nPrint the number of strings modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 1000\n1 \\le m \\le 100\n\nExample\nInput:\n6\nABCDB\n\nOutput:\n52\n\nExplanation: The final string will be of the form ABCDBx or xABCDB where x is any character between A\u2013Z.\n"
    },
    {
        "link": "/problemset/task/2420",
        "title": "Palindrome Queries",
        "content": "You are given a string that consists of n characters between a\u2013z. The positions of the string are indexed 1,2,\\dots,n.\nYour task is to process m operations of the following types:\n\nChange the character at position k to x\nCheck if the substring from position a to position b is a palindrome\n\nInput\nThe first input line has two integers n and m: the length of the string and the number of operations.\nThe next line has a string that consists of n characters.\nFinally, there are m lines that describe the operations. Each line is of the form \"1 k x\" or \"2 a b\".\nOutput\nFor each operation 2, print YES if the substring is a palindrome and NO otherwise.\nConstraints\n\n1 \\le n, m \\le 2 \\cdot 10^5\n1 \\le k \\le n\n1 \\le a \\le b \\le n\n\nExample\nInput:\n7 5\naybabtu\n2 3 5\n1 3 x\n2 3 5\n1 5 x\n2 3 5\n\nOutput:\nYES\nNO\nYES\n"
    },
    {
        "link": "/problemset/task/2102",
        "title": "Finding Patterns",
        "content": "Given a string and patterns, check for each pattern if it appears in the string.\nInput\nThe first input line has a string of length n.\nThe next input line has an integer k: the number of patterns. Finally, there are k lines that describe the patterns.\nThe string and the patterns consist of characters a\u2013z.\nOutput\nFor each pattern, print \"YES\" if it appears in the string and \"NO\" otherwise.\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le k \\le 5 \\cdot 10^5\nthe total length of the patterns is at most 5 \\cdot 10^5\n\nExample\nInput:\naybabtu\n3\nbab\nabc\nayba\n\nOutput:\nYES\nNO\nYES\n"
    },
    {
        "link": "/problemset/task/2103",
        "title": "Counting Patterns",
        "content": "Given a string and patterns, count for each pattern the number of positions where it appears in the string.\nInput\nThe first input line has a string of length n.\nThe next input line has an integer k: the number of patterns. Finally, there are k lines that describe the patterns.\nThe string and the patterns consist of characters a\u2013z.\nOutput\nFor each pattern, print the number of positions.\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le k \\le 5 \\cdot 10^5\nthe total length of the patterns is at most 5 \\cdot 10^5\n\nExample\nInput:\naybabtu\n3\nbab\nabc\na\n\nOutput:\n1\n0\n2\n"
    },
    {
        "link": "/problemset/task/2104",
        "title": "Pattern Positions",
        "content": "Given a string and patterns, find for each pattern the first position (1-indexed) where it appears in the string.\nInput\nThe first input line has a string of length n.\nThe next input line has an integer k: the number of patterns. Finally, there are k lines that describe the patterns.\nThe string and the patterns consist of characters a\u2013z.\nOutput\nPrint the first position for each pattern (or -1 if it does not appear at all).\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le k \\le 5 \\cdot 10^5\nthe total length of the patterns is at most 5 \\cdot 10^5\n\nExample\nInput:\naybabtu\n3\nbab\nabc\na\n\nOutput:\n3\n-1\n1\n"
    },
    {
        "link": "/problemset/task/2105",
        "title": "Distinct Substrings",
        "content": "Count the number of distinct substrings that appear in a string.\nInput\nThe only input line has a string of length n that consists of characters a\u2013z.\nOutput\nPrint one integer: the number of substrings.\nConstraints\n\n1 \\le n \\le 10^5\n\nExample\nInput:\nabaa\n\nOutput:\n8\n\nExplanation: the substrings are a, b, aa, ab, ba, aba, baa and abaa.\n"
    },
    {
        "link": "/problemset/task/2106",
        "title": "Repeating Substring",
        "content": "A repeating substring is a substring that occurs in two (or more) locations in the string. Your task is to find the longest repeating substring in a given string.\nInput\nThe only input line has a string of length n that consists of characters a\u2013z.\nOutput\nPrint the longest repeating substring. If there are several possibilities, you can print any of them. If there is no repeating substring, print -1.\nConstraints\n\n1 \\le n \\le 10^5\n\nExample\nInput:\ncabababc\n\nOutput:\nabab\n"
    },
    {
        "link": "/problemset/task/2107",
        "title": "String Functions",
        "content": "We consider a string of n characters, indexed 1,2,\\dots,n. Your task is to calculate all values of the following functions:\n\nz(i) denotes the maximum length of a substring that begins at position i and is a prefix of the string. In addition, z(1)=0.\n\\pi(i) denotes the maximum length of a substring that ends at position i, is a prefix of the string, and whose length is at most i-1.\n\nNote that the function z is used in the Z-algorithm, and the function \\pi is used in the KMP algorithm.\nInput\nThe only input line has a string of length n. Each character is between a\u2013z.\nOutput\nPrint two lines: first the values of the z function, and then the values of the \\pi function.\nConstraints\n\n1 \\le n \\le 10^6\n\nExample\nInput:\nabaabca\n\nOutput:\n0 0 1 2 0 0 1\n0 0 1 1 2 0 1\n"
    },
    {
        "link": "/problemset/task/2108",
        "title": "Substring Order I",
        "content": "You are given a string of length n. If all of its distinct substrings are ordered lexicographically, what is the kth smallest of them?\nInput\nThe first input line has a string of length n that consists of characters a\u2013z.\nThe second input line has an integer k.\nOutput\nPrint the kth smallest distinct substring in lexicographical order.\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le k \\le \\frac{n(n+1)}{2}\nIt is guaranteed that k does not exceed the number of distinct substrings.\n\nExample\nInput:\nbabaacbaab\n10\n\nOutput:\naba\n\nExplanation: The 10 smallest distinct substrings in order are a, aa, aab, aac, aacb, aacba, aacbaa, aacbaab, ab, and aba.\n"
    },
    {
        "link": "/problemset/task/2109",
        "title": "Substring Order II",
        "content": "You are given a string of length n. If all of its substrings (not necessarily distinct) are ordered lexicographically, what is the kth smallest of them?\nInput\nThe first input line has a string of length n that consists of characters a\u2013z.\nThe second input line has an integer k.\nOutput\nPrint the kth smallest substring in lexicographical order.\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le k \\le \\frac{n(n+1)}{2}\n\nExample\nInput:\nbaabaa\n10\n\nOutput:\nab\n\nExplanation: The 10 smallest substrings in order are a, a, a, a, aa, aa, aab, aaba, aabaa, and ab.\n"
    },
    {
        "link": "/problemset/task/2110",
        "title": "Substring Distribution",
        "content": "You are given a string of length n. For every integer between 1 \\ldots n you need to print the number of distinct substrings of that length.\nInput\nThe only input line has a string of length n that consists of characters a\u2013z.\nOutput\nFor each integer between 1 \\ldots n print the number of distinct substrings of that length.\nConstraints\n\n1 \\le n \\le 10^5\n\nExample\nInput:\nabab\n\nOutput:\n2 2 2 1\n"
    },
    {
        "link": "/problemset/task/2189",
        "title": "Point Location Test",
        "content": "There is a line that goes through the points p_1=(x_1,y_1) and p_2=(x_2,y_2). There is also a point p_3=(x_3,y_3).\nYour task is to determine whether p_3 is located on the left or right side of the line or if it touches the line when we are looking from p_1 to p_2.\nInput\nThe first input line has an integer t: the number of tests.\nAfter this, there are t lines that describe the tests. Each line has six integers: x_1, y_1, x_2, y_2, x_3 and y_3.\nOutput\nFor each test, print \"LEFT\", \"RIGHT\" or \"TOUCH\".\nConstraints\n\n1 \\le t \\le 10^5\n-10^9 \\le x_1, y_1, x_2, y_2, x_3, y_3 \\le 10^9\nx_1 \\neq x_2 or y_1 \\neq y_2\n\nExample\nInput:\n3\n1 1 5 3 2 3\n1 1 5 3 4 1\n1 1 5 3 3 2\n\nOutput:\nLEFT\nRIGHT\nTOUCH\n"
    },
    {
        "link": "/problemset/task/2190",
        "title": "Line Segment Intersection",
        "content": "There are two line segments: the first goes through the points (x_1,y_1) and (x_2,y_2), and the second goes through the points (x_3,y_3) and (x_4,y_4).\nYour task is to determine if the line segments intersect, i.e., they have at least one common point.\nInput\nThe first input line has an integer t: the number of tests.\nAfter this, there are t lines that describe the tests. Each line has eight integers x_1, y_1, x_2, y_2, x_3, y_3, x_4 and y_4.\nOutput\nFor each test, print \"YES\" if the line segments intersect and \"NO\" otherwise.\nConstraints\n\n1 \\le t \\le 10^5\n-10^9 \\le x_1, y_1, x_2, y_2, x_3, y_3, x_4, y_4 \\le 10^9\n(x_1,y_1) \\neq (x_2,y_2)\n(x_3,y_3) \\neq (x_4,y_4)\n\nExample\nInput:\n5\n1 1 5 3 1 2 4 3\n1 1 5 3 1 1 4 3\n1 1 5 3 2 3 4 1\n1 1 5 3 2 4 4 1\n1 1 5 3 3 2 7 4\n\nOutput:\nNO\nYES\nYES\nYES\nYES\n"
    },
    {
        "link": "/problemset/task/2191",
        "title": "Polygon Area",
        "content": "Your task is to calculate the area of a given polygon.\nThe polygon consists of n vertices (x_1,y_1),(x_2,y_2),\\dots,(x_n,y_n). The vertices (x_i,y_i) and (x_{i+1},y_{i+1}) are adjacent for i=1,2,\\dots,n-1, and the vertices (x_1,y_1) and (x_n,y_n) are also adjacent.\nInput\nThe first input line has an integer n: the number of vertices.\nAfter this, there are n lines that describe the vertices. The ith such line has two integers x_i and y_i.\nYou may assume that the polygon is simple, i.e., it does not intersect itself.\nOutput\nPrint one integer: 2a where the area of the polygon is a (this ensures that the result is an integer).\nConstraints\n\n3 \\le n \\le 1000\n-10^9 \\le x_i, y_i \\le 10^9\n\nExample\nInput:\n4\n1 1\n4 2\n3 5\n1 4\n\nOutput:\n16\n"
    },
    {
        "link": "/problemset/task/2192",
        "title": "Point in Polygon",
        "content": "You are given a polygon of n vertices and a list of m points. Your task is to determine for each point if it is inside, outside or on the boundary of the polygon.\nThe polygon consists of n vertices (x_1,y_1),(x_2,y_2),\\dots,(x_n,y_n). The vertices (x_i,y_i) and (x_{i+1},y_{i+1}) are adjacent for i=1,2,\\dots,n-1, and the vertices (x_1,y_1) and (x_n,y_n) are also adjacent.\nInput\nThe first input line has two integers n and m: the number of vertices in the polygon and the number of points.\nAfter this, there are n lines that describe the polygon. The ith such line has two integers x_i and y_i.\nYou may assume that the polygon is simple, i.e., it does not intersect itself.\nFinally, there are m lines that describe the points. Each line has two integers x and y.\nOutput\nFor each point, print \"INSIDE\", \"OUTSIDE\" or \"BOUNDARY\".\nConstraints\n\n3 \\le n,m \\le 1000\n1 \\le m \\le 1000\n-10^9 \\le x_i, y_i \\le 10^9\n-10^9 \\le x, y \\le 10^9\n\nExample\nInput:\n4 3\n1 1\n4 2\n3 5\n1 4\n2 3\n3 1\n1 3\n\nOutput:\nINSIDE\nOUTSIDE\nBOUNDARY\n"
    },
    {
        "link": "/problemset/task/2193",
        "title": "Polygon Lattice Points",
        "content": "Given a polygon, your task is to calculate the number of lattice points inside the polygon and on its boundary. A lattice point is a point whose coordinates are integers.\nThe polygon consists of n vertices (x_1,y_1),(x_2,y_2),\\dots,(x_n,y_n). The vertices (x_i,y_i) and (x_{i+1},y_{i+1}) are adjacent for i=1,2,\\dots,n-1, and the vertices (x_1,y_1) and (x_n,y_n) are also adjacent.\nInput\nThe first input line has an integer n: the number of vertices.\nAfter this, there are n lines that describe the vertices. The ith such line has two integers x_i and y_i.\nYou may assume that the polygon is simple, i.e., it does not intersect itself.\nOutput\nPrint two integers: the number of lattice points inside the polygon and on its boundary.\nConstraints\n\n3 \\le n \\le 10^5\n-10^9 \\le x_i, y_i \\le 10^9\n\nExample\nInput:\n4\n1 1\n5 3\n3 5\n1 4\n\nOutput:\n6 8\n"
    },
    {
        "link": "/problemset/task/2194",
        "title": "Minimum Euclidean Distance",
        "content": "Given a set of points in the two-dimensional plane, your task is to find the minimum Euclidean distance between two distinct points.\nThe Euclidean distance of points (x_1,y_1) and (x_2,y_2) is \\sqrt{(x_1-x_2)^2+(y_1-y_2)^2}.\nInput\nThe first input line has an integer n: the number of points.\nAfter this, there are n lines that describe the points. Each line has two integers x and y. You may assume that each point is distinct.\nOutput\nPrint one integer: d^2 where d is the minimum Euclidean distance (this ensures that the result is an integer).\nConstraints\n\n2 \\le n \\le 2 \\cdot 10^5\n-10^9 \\le x,y \\le 10^9\n\nExample\nInput:\n4\n2 1\n4 4\n1 2\n6 3\n\nOutput:\n2\n"
    },
    {
        "link": "/problemset/task/2195",
        "title": "Convex Hull",
        "content": "Given a set of n points in the two-dimensional plane, your task is to determine the convex hull of the points.\nInput\nThe first input line has an integer n: the number of points.\nAfter this, there are n lines that describe the points. Each line has two integers x and y: the coordinates of a point.\nYou may assume that each point is distinct, and the area of the hull is positive.\nOutput\nFirst print an integer k: the number of points in the convex hull.\nAfter this, print k lines that describe the points. You can print the points in any order. Print all points that lie on the convex hull.\nConstraints\n\n3 \\le n \\le 2 \\cdot 10^5\n-10^9 \\le x, y \\le 10^9\n\nExample\nInput:\n6\n2 1\n2 5\n3 3\n4 3\n4 4\n6 3\n\nOutput:\n4\n2 1\n2 5\n4 4\n6 3\n"
    },
    {
        "link": "/problemset/task/1628",
        "title": "Meet in the Middle",
        "content": "You are given an array of n numbers. In how many ways can you choose a subset of the numbers with sum x?\nInput\nThe first input line has two numbers n and x: the array size and the required sum.\nThe second line has n integers t_1,t_2,\\dots,t_n: the numbers in the array.\nOutput\nPrint the number of ways you can create the sum x.\nConstraints\n\n1 \\le n \\le 40\n1 \\le x \\le 10^9\n1 \\le t_i \\le 10^9\n\nExample\nInput:\n4 5\n1 2 3 2\n\nOutput:\n3\n"
    },
    {
        "link": "/problemset/task/2136",
        "title": "Hamming Distance",
        "content": "The Hamming distance between two strings a and b of equal length is the number of positions where the strings differ.\nYou are given n bit strings, each of length k and your task is to calculate the minimum Hamming distance between two strings. \nInput\nThe first input line has two integers n and k: the number of bit strings and their length. \nThen there are n lines each consisting of one bit string of length k.\nOutput\nPrint the minimum Hamming distance between two strings.\nConstraints\n\n2 \\le n \\le 2 \\cdot 10^4\n1 \\le k \\le 30\n\nExample\nInput:\n5 6\n110111\n001000\n100001\n101000\n101110\n\nOutput:\n1\n\nExplanation: The strings 101000 and 001000 differ only at the first position.\n"
    },
    {
        "link": "/problemset/task/2137",
        "title": "Beautiful Subgrids",
        "content": "You are given an n \\times n grid whose each square is either black or white. A subgrid is called beautiful if its height and width is at least two and all of its corners are black. How many beautiful subgrids are there within the given grid?\nInput\nThe first input line has an integer n: the size of the grid.\nThen there are n lines describing the grid: 1 means that a square is black and 0 means it is white.\nOutput\nPrint the number of beautiful subgrids.\nConstraints\n\n1 \\le n \\le 3000\n\nExample\nInput:\n5\n00010\n11111\n00110\n11001\n00010\n\nOutput:\n4\n"
    },
    {
        "link": "/problemset/task/2138",
        "title": "Reachable Nodes",
        "content": "A directed acyclic graph consists of n nodes and m edges. The nodes are numbered 1,2,\\dots,n.\nCalculate for each node the number of nodes you can reach from that node (including the node itself).\nInput\nThe first input line has two integers n and m: the number of nodes and edges.\nThen there are m lines describing the edges. Each line has two distinct integers a and b: there is an edge from node a to node b.\nOutput\nPrint n integers: for each node the number of reachable nodes.\nConstraints\n\n1 \\le n \\le 5 \\cdot 10^4\n1 \\le m \\le 10^5\n\nExample\nInput:\n5 6\n1 2\n1 3\n1 4\n2 3\n3 5\n4 5\n\nOutput:\n5 3 2 2 1\n"
    },
    {
        "link": "/problemset/task/2143",
        "title": "Reachability Queries",
        "content": "A directed graph consists of n nodes and m edges. The edges are numbered 1,2,\\dots,n.\nYour task is to answer q queries of the form \"can you reach node b from node a?\"\nInput\nThe first input line has three integers n, m and q: the number of nodes, edges and queries.\nThen there are m lines describing the edges. Each line has two distinct integers a and b: there is an edge from node a to node b.\nFinally there are q lines describing the queries. Each line consists of two integers a and b: \"can you reach node b from node a?\"\nOutput\nPrint the answer for each query: either \"YES\" or \"NO\".\nConstraints\n\n1 \\le n \\le 5 \\cdot 10^4\n1 \\le m,q \\le 10^5\n\nExample\nInput:\n4 4 3\n1 2\n2 3\n3 1\n4 3\n1 3\n1 4\n4 1\n\nOutput:\nYES\nNO\nYES\n"
    },
    {
        "link": "/problemset/task/2072",
        "title": "Cut and Paste",
        "content": "Given a string, your task is to process operations where you cut a substring and paste it to the end of the string. What is the final string after all the operations?\nInput\nThe first input line has two integers n and m: the length of the string and the number of operations. The characters of the string are numbered 1,2,\\dots,n.\nThe next line has a string of length n that consists of characters A\u2013Z.\nFinally, there are m lines that describe the operations. Each line has two integers a and b: you cut a substring from position a to position b.\nOutput\nPrint the final string after all the operations.\nConstraints\n\n1 \\le n, m \\le 2 \\cdot 10^5\n1 \\le a \\le b \\le n\n\nExample\nInput:\n7 2\nAYBABTU\n3 5\n3 5\n\nOutput:\nAYABTUB\n"
    },
    {
        "link": "/problemset/task/2073",
        "title": "Substring Reversals",
        "content": "Given a string, your task is to process operations where you reverse a substring of the string. What is the final string after all the operations?\nInput\nThe first input line has two integers n and m: the length of the string and the number of operations. The characters of the string are numbered 1,2,\\dots,n.\nThe next line has a string of length n that consists of characters A\u2013Z.\nFinally, there are m lines that describe the operations. Each line has two integers a and b: you reverse a substring from position a to position b.\nOutput\nPrint the final string after all the operations.\nConstraints\n\n1 \\le n, m \\le 2 \\cdot 10^5\n1 \\le a \\le b \\le n\n\nExample\nInput:\n7 2\nAYBABTU\n3 4\n4 7\n\nOutput:\nAYAUTBB\n"
    },
    {
        "link": "/problemset/task/2074",
        "title": "Reversals and Sums",
        "content": "Given an array of n integers, you have to process following operations:\n\nreverse a subarray\ncalculate the sum of values in a subarray\n\nInput\nThe first input line has two integers n and m: the size of the array and the number of operations. The array elements are numbered 1,2,\\dots,n.\nThe next line as n integers x_1,x_2,\\dots,x_n: the contents of the array.\nFinally, there are m lines that describe the operations. Each line has three integers t, a and b. If t=1, you should reverse a subarray from a to b. If t=2, you should calculate the sum of values from a to b.\nOutput\nPrint the answer to each operation where t=2.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le m \\le 10^5\n0 \\le x_i \\le 10^9\n1 \\le a \\le b \\le n\n\nExample\nInput:\n8 3\n2 1 3 4 5 3 4 4\n2 2 4\n1 3 6\n2 2 4\n\nOutput:\n8\n9\n"
    },
    {
        "link": "/problemset/task/2076",
        "title": "Necessary Roads",
        "content": "There are n cities and m roads between them. There is a route between any two cities.\nA road is called necessary if there is no route between some two cities after removing that road. Your task is to find all necessary roads.\nInput\nThe first input line has two integers n and m: the number of cities and roads. The cities are numbered 1,2,\\dots,n.\nAfter this, there are m lines that describe the roads. Each line has two integers a and b: there is a road between cities a and b. There is at most one road between two cities, and every road connects two distinct cities.\nOutput\nFirst print an integer k: the number of necessary roads. After that, print k lines that describe the roads. You may print the roads in any order.\nConstraints\n\n2 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5 5\n1 2\n1 4\n2 4\n3 5\n4 5\n\nOutput:\n2\n3 5\n4 5\n"
    },
    {
        "link": "/problemset/task/2077",
        "title": "Necessary Cities",
        "content": "There are n cities and m roads between them. There is a route between any two cities.\nA city is called necessary if there is no route between some other two cities after removing that city (and adjacent roads). Your task is to find all necessary cities.\nInput\nThe first input line has two integers n and m: the number of cities and roads. The cities are numbered 1,2,\\dots,n.\nAfter this, there are m lines that describe the roads. Each line has two integers a and b: there is a road between cities a and b. There is at most one road between two cities, and every road connects two distinct cities.\nOutput\nFirst print an integer k: the number of necessary cities. After that, print a list of k cities. You may print the cities in any order.\nConstraints\n\n2 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5 5\n1 2\n1 4\n2 4\n3 5\n4 5\n\nOutput:\n2\n4 5\n"
    },
    {
        "link": "/problemset/task/2078",
        "title": "Eulerian Subgraphs",
        "content": "You are given an undirected graph that has n nodes and m edges.\nWe consider subgraphs that have all nodes of the original graph and some of its edges. A subgraph is called Eulerian if each node has even degree.\nYour task is to count the number of Eulerian subgraphs modulo 10^9+7.\nInput\nThe first input line has two integers n and m: the number of nodes and edges. The nodes are numbered 1,2,\\dots,n.\nAfter this, there are m lines that describe the edges. Each line has two integers a and b: there is an edge between nodes a and b. There is at most one edge between two nodes, and each edge connects two distinct nodes.\nOutput\nPrint the number of Eulerian subgraphs modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 10^5\n0 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n4 3\n1 2\n1 3\n2 3\n\nOutput:\n2\n\nExplanation: You can either keep or remove all edges, so there are two possible Eulerian subgraphs.\n"
    },
    {
        "link": "/problemset/task/2084",
        "title": "Monster Game I",
        "content": "You are playing a game that consists of n levels. Each level has a monster. On levels 1,2,\\dots,n-1, you can either kill or escape the monster. However, on level n you must kill the final monster to win the game.\nKilling a monster takes sf time where s is the monster's strength and f is your skill factor (lower skill factor is better). After killing a monster, you get a new skill factor. What is the minimum total time in which you can win the game?\nInput\nThe first input line has two integers n and x: the number of levels and your initial skill factor.\nThe second line has n integers s_1,s_2,\\dots,s_n: each monster's strength.\nThe third line has n integers f_1,f_2,\\dots,f_n: your new skill factor after killing a monster.\nOutput\nPrint one integer: the minimum total time to win the game.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le x \\le 10^6\n1 \\le s_1 \\le s_2 \\le \\dots \\le s_n \\le 10^6\nx \\ge f_1 \\ge f_2 \\ge \\dots \\ge f_n \\ge 1\n\nExample\nInput:\n5 100\n20 30 30 50 90\n90 60 20 20 10\n\nOutput:\n4800\n\nExplanation: The best way to play is to kill the third and fifth monster.\n"
    },
    {
        "link": "/problemset/task/2085",
        "title": "Monster Game II",
        "content": "You are playing a game that consists of n levels. Each level has a monster. On levels 1,2,\\dots,n-1, you can either kill or escape the monster. However, on level n you must kill the final monster to win the game.\nKilling a monster takes sf time where s is the monster's strength and f is your skill factor. After killing a monster, you get a new skill factor  (lower skill factor is better). What is the minimum total time in which you can win the game?\nInput\nThe first input line has two integers n and x: the number of levels and your initial skill factor.\nThe second line has n integers s_1,s_2,\\dots,s_n: each monster's strength.\nThe third line has n integers f_1,f_2,\\dots,f_n: your new skill factor after killing a monster.\nOutput\nPrint one integer: the minimum total time to win the game.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le x \\le 10^6\n1 \\le s_i, f_i \\le 10^6\n\nExample\nInput:\n5 100\n50 20 30 90 30\n60 20 20 10 90\n\nOutput:\n2600\n\nExplanation: The best way to play is to kill the second and fifth monster.\n"
    },
    {
        "link": "/problemset/task/2086",
        "title": "Subarray Squares",
        "content": "Given an array of n elements, your task is to divide into k subarrays. The cost of each subarray is the square of the sum of the values in the subarray. What is the minimum total cost if you act optimally?\nInput\nThe first input line has two integers n and k: the array elements and the number of subarrays. The array elements are numbered 1,2,\\dots,n.\nThe second line has n integers x_1,x_2,\\dots,x_n: the contents of the array.\nOutput\nPrint one integer: the minimum total cost.\nConstraints\n\n1 \\le k \\le n \\le 3000\n1 \\le x_i \\le 10^5\n\nExample\nInput:\n8 3\n2 3 1 2 2 3 4 1\n\nOutput:\n110\n\nExplanation: An optimal solution is [2,3,1], [2,2,3], [4,1], whose cost is (2+3+1)^2+(2+2+3)^2+(4+1)^2=110.\n"
    },
    {
        "link": "/problemset/task/2087",
        "title": "Houses and Schools",
        "content": "There are n houses on a street, numbered 1,2,\\dots,n. The distance of houses a and b is |a-b|. You know the number of children in each house.\nYour task is to establish k schools in such a way that each school is in some house. Then, each child goes to the nearest school. What is the minimum total walking distance of the children if you act optimally?\nInput\nThe first input line has two integers n and k: the number of houses and the number of schools. The houses are numbered 1,2\\dots,n.\nAfter this, there are n integers c_1,c_2,\\dots,c_n: the number of children in each house.\nOutput\nPrint the minimum total distance.\nConstraints\n\n1 \\le k \\le n \\le 3000\n1 \\le c_i \\le 10^9\n\nExample\nInput:\n6 2\n2 7 1 4 6 4\n\nOutput:\n11\n\nExplanation: Houses 2 and 5 will have schools.\n"
    },
    {
        "link": "/problemset/task/2088",
        "title": "Knuth Division",
        "content": "Given an array of n numbers, your task is to divide it into n subarrays, each of which has a single element.\nOn each move, you may choose any subarray and split it into two subarrays. The cost of such a move is the sum of values in the chosen subarray.\nWhat is the minimum total cost if you act optimally?\nInput\nThe first input line has an integer n: the array size. The array elements are numbered 1,2,\\dots,n.\nThe second line has n integers x_1,x_2,\\dots,x_n: the contents of the array.\nOutput\nPrint one integer: the minimum total cost.\nConstraints\n\n1 \\le n \\le 5000\n1 \\le x_i \\le 10^9\n\nExample\nInput:\n5\n2 7 3 2 5\n\nOutput:\n43\n"
    },
    {
        "link": "/problemset/task/2111",
        "title": "Apples and Bananas",
        "content": "There are apples and bananas and each of them has an integer weight between 1 \\ldots k. Your task is to calculate for each weight w between 2...2k the number of ways we can choose an apple and a banana whose combined weight is w.\nInput\nThe first input line contains three integers k, n and m: the number k, the number of apples and the number of bananas.\nThe next line contains n integers a_1,a_2,\\ldots,a_n: weight of each apple.\nThe last line contains m integers b_1,b_2,\\ldots,b_m: weight of each banana.\nOutput\nFor each integer w between 2 \\ldots 2k print the number of ways to choose an apple and a banana whose combined weight is w.\nConstraints\n\n1 \\le k,n,m \\le 2 \\cdot 10^5\n1 \\le a_i \\le k\n1 \\le b_i \\le k\n\nExample\nInput:\n5 3 4\n5 2 5\n4 3 2 3\n\nOutput:\n0 0 1 2 1 2 4 2 0  \n\nExplanation: For example for w = 8 there are 4 different ways: we can pick an apple of weight 5 in two different ways and a banana of weight 3 in two different ways.\n"
    },
    {
        "link": "/problemset/task/2112",
        "title": "One Bit Positions",
        "content": "You are given a binary string of length n and your task is to calculate for every k between 1 \\ldots n-1 the number of ways we can choose two positions i and j such that i-j=k and there is a one-bit at both positions.\nInput\nThe only input line has a string that consists only of characters 0 and 1.\nOutput\nFor every distance k between 1\\ldots n-1 print the number of ways we can choose two such positions.\nConstraints\n\n2 \\le n \\le 2 \\cdot 10^5\n\nExample\nInput:\n1001011010\n\nOutput:\n1 2 3 0 2 1 0 1 0\n"
    },
    {
        "link": "/problemset/task/2113",
        "title": "Signal Processing",
        "content": "You are given two integer sequences: a signal and a mask. Your task is to process the signal by moving the mask through the signal from left to right. At each mask position calculate the sum of products of aligned signal and mask values in the part where the signal and the mask overlap.\nInput\nThe first input line consists of two integers n and m: the length of the signal and the length of the mask.\nThe next line consists of n integers a_1,a_2,\\ldots,a_n defining the signal.\nThe last line consists of m integers b_1,b_2,\\ldots,b_m defining the mask. \nOutput\nPrint n+m-1 integers: the sum of products of aligned values at each mask position from left to right.\nConstraints\n\n1 \\le n,m \\le 2 \\cdot 10^5\n1 \\le a_i,b_i \\le 100\n\nExample\nInput:\n5 3\n1 3 2 1 4\n1 2 3\n\nOutput:\n3 11 13 10 16 9 4\n\nExplanation: For example, at the second mask position the sum of aligned products is 2 \\cdot 1 + 3 \\cdot 3 = 11.\n"
    },
    {
        "link": "/problemset/task/2101",
        "title": "New Roads Queries",
        "content": "There are n cities in Byteland but no roads between them. However, each day, a new road will be built. There will be a total of m roads.\nYour task is to process q queries of the form: \"after how many days can we travel from city a to city b for the first time?\"\nInput\nThe first input line has three integers n, m and q: the number of cities, roads and queries. The cities are numbered 1,2,\\dots,n.\nAfter this, there are m lines that describe the roads in the order they are built. Each line has two integers a and b: there will be a road between cities a and b.\nFinally, there are q lines that describe the queries. Each line has two integers a and b: we want to travel from city a to city b.\nOutput\nFor each query, print the number of days, or -1 if it is never possible.\nConstraints\n\n1 \\le n, m, q \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5 4 3\n1 2\n2 3\n1 3\n2 5\n1 3\n3 4\n3 5\n\nOutput:\n2\n-1\n4\n"
    },
    {
        "link": "/problemset/task/2133",
        "title": "Dynamic Connectivity",
        "content": "Consider an undirected graph that consists of n nodes and m edges. There are two types of events that can happen:\n\nA new edge is created between nodes a and b.\nAn existing edge between nodes a and b is removed.\n\nYour task is to report the number of components after every event.\nInput\nThe first input line has three integers n, m and k: the number of nodes, edges and events.\nAfter this there are m lines describing the edges. Each line has two integers a and b: there is an edge between nodes a and b. There is at most one edge between any pair of nodes.\nThen there are k lines describing the events. Each line has the form \"t a b\" where t is 1 (create a new edge) or 2 (remove an edge). A new edge is always created between two nodes that do not already have an edge between them, and only existing edges can get removed.\nOutput\nPrint k+1 integers: first the number of components before the first event, and after this the new number of components after each event.\nConstraints\n\n2 \\le n \\le 10^5\n1 \\le m,k \\le 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5 3 3\n1 4\n2 3\n3 5\n1 2 5\n2 3 5\n1 1 2\n\nOutput:\n2 2 2 1\n"
    },
    {
        "link": "/problemset/task/2121",
        "title": "Parcel Delivery",
        "content": "There are n cities and m routes through which parcels can be carried from one city to another city. For each route, you know the maximum number of parcels and the cost of a single parcel.\nYou want to send k parcels from Syrj\u00e4l\u00e4 to Lehm\u00e4l\u00e4. What is the cheapest way to do that?\nInput\nThe first input line has three integers n, m and k: the number of cities, routes and parcels. The cities are numbered 1,2,\\dots,n. City 1 is Syrj\u00e4l\u00e4 and city n is Lehm\u00e4l\u00e4.\nAfter this, there are m lines that describe the routes. Each line has four integers a, b, r and c: there is a route from city a to city b, at most r parcels can be carried through the route, and the cost of each parcel is c.\nOutput\nPrint one integer: the minimum total cost or -1 if there are no solutions.\nConstraints\n\n1 \\le n \\le 500\n1 \\le m \\le 1000\n1 \\le k \\le 100\n1 \\le a,b \\le n\n1 \\le r,c \\le 1000\n\nExample\nInput:\n4 5 3\n1 2 5 100\n1 3 10 50\n1 4 7 500\n2 4 8 350\n3 4 2 100\n\nOutput:\n750\n\nExplanation: One parcel is delivered through route 1 \\rightarrow 2 \\rightarrow 4 (cost 1 \\cdot 450=450) and two parcels are delivered through route 1 \\rightarrow 3 \\rightarrow 4 (cost 2 \\cdot 150=300).\n"
    },
    {
        "link": "/problemset/task/2129",
        "title": "Task Assignment",
        "content": "A company has n employees and there are n tasks that need to be done. We know for each employee the cost of carrying out each task. Every employee should be assigned to exactly one task. What is the minimum total cost if we assign the tasks optimally and how could they be assigned?\nInput\nThe first input line has one integer n: the number of employees and the number of tasks that need to be done.\nAfter this, there are n lines each consisting of n integers. The ith line consists of integers c_{i1},c_{i2},\\ldots,c_{in}: the cost of each task when it is assigned to the ith employee.\nOutput\nFirst print the minimum total cost.\nThen print n lines each consisting of two integers a and b: you assign the bth task to the ath employee.\nIf there are multiple solutions you can print any of them.\nConstraints\n\n1 \\le n \\le 200\n1 \\le c_{ij} \\le 1000\n\nExample\nInput:\n4\n17 8 16 9\n7 15 12 19\n6 9 10 11\n14 7 13 10\n\nOutput:\n33\n1 4\n2 1\n3 3\n4 2\n\nExplanation: The minimum total cost is 33. We can reach this by assigning employee 1 task 4, employee 2 task 1, employee 3 task 3 and employee 4 task 2. This will cost 9 + 7 + 10 + 7 = 33.\n"
    },
    {
        "link": "/problemset/task/2130",
        "title": "Distinct Routes II",
        "content": "A game consists of n rooms and m teleporters. At the beginning of each day, you start in room 1 and you have to reach room n.\nYou can use each teleporter at most once during the game. You want to play the game for exactly k days. Every time you use any teleporter you have to pay one coin. What is the minimum number of coins you have to pay during k days if you play optimally?\nInput\nThe first input line has three integers n, m and k: the number of rooms, the number of teleporters and the number of days you play the game. The rooms are numbered 1,2,\\dots,n.\nAfter this, there are m lines describing the teleporters. Each line has two integers a and b: there is a teleporter from room a to room b.\nThere are no two teleporters whose starting and ending room are the same.\nOutput\nFirst print one integer: the minimum number of coins you have to pay if you play optimally. Then, print k route descriptions according to the example. You can print any valid solution.\nIf it is not possible to play the game for k days, print only -1.\nConstraints\n\n2 \\le n \\le 500\n1 \\le m \\le 1000\n1 \\le k \\le n-1\n1 \\le a,b \\le n\n\nExample\nInput:\n8 10 2\n1 2\n1 3\n2 5\n2 4\n3 5 \n3 6\n4 8\n5 8\n6 7 \n7 8\n\nOutput:\n6\n4\n1 2 4 8 \n4\n1 3 5 8 \n"
    },
    {
        "link": "/problemset/task/1087",
        "title": "Shortest Subsequence",
        "content": "You are given a DNA sequence consisting of characters A, C, G, and T.\nYour task is to find the shortest DNA sequence that is not a subsequence of the original sequence.\nInput\nThe only input line contains a DNA sequence with n characters.\nOutput\nPrint the shortest DNA sequence that is not a subsequence of the original sequence. If there are several solutions, you may print any of them.\nConstraints\n\n1 \\le n \\le 10^6\n\nExample\nInput:\nACGTACGT\n\nOutput:\nAAA\n"
    },
    {
        "link": "/problemset/task/1146",
        "title": "Counting Bits",
        "content": "Your task is to count the number of one bits in the binary representations of integers between 1 and n.\nInput\nThe only input line has an integer n.\nOutput\nPrint the number of one bits in the binary representations of integers between 1 and n.\nConstraints\n\n1 \\le n \\le 10^{15}\n\nExample\nInput:\n7\n\nOutput:\n12\n\nExplanation: The binary representations of 1 \\ldots 7 are 1, 10, 11, 100, 101, 110, and 111, so there are a total of 12 one bits.\n"
    },
    {
        "link": "/problemset/task/1670",
        "title": "Swap Game",
        "content": "You are given a 3 \\times 3 grid containing the numbers 1,2,\\dots,9. Your task is to perform a sequence of moves so that the grid will look like this:\n1 2 3\n4 5 6\n7 8 9\n\nOn each move, you can swap the numbers in any two adjacent squares (horizontally or vertically). What is the minimum number of moves required?\nInput\nThe input has three lines, and each of them has three integers.\nOutput\nPrint one integer: the minimum number of moves.\nExample\nInput:\n2 1 3\n7 5 9\n8 4 6\n\nOutput:\n4\n"
    },
    {
        "link": "/problemset/task/1134",
        "title": "Pr\u00fcfer Code",
        "content": "A Pr\u00fcfer code of a tree of n nodes is a sequence of n-2 integers that uniquely specifies the structure of the tree.\nThe code is constructed as follows: As long as there are at least three nodes left, find a leaf with the smallest label, add the label of its only neighbor to the code, and remove the leaf from the tree.\nGiven a Pr\u00fcfer code of a tree, your task is to construct the original tree.\nInput\nThe first input line contains an integer n: the number of nodes. The nodes are numbered 1,2,\\ldots,n.\nThe second line contains n-2 integers: the Pr\u00fcfer code.\nOutput\nPrint n-1 lines describing the edges of the tree. Each line has to contain two integers a and b: there is an edge between nodes a and b. You can print the edges in any order.\nConstraints\n\n3 \\le n \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5\n2 2 4\n\nOutput:\n1 2\n2 3\n2 4\n4 5\n"
    },
    {
        "link": "/problemset/task/1756",
        "title": "Acyclic Graph Edges",
        "content": "Given an undirected graph, your task is to choose a direction for each edge so that the resulting directed graph is acyclic.\nInput\nThe first input line has two integers n and m: the number of nodes and edges. The nodes are numbered 1,2,\\dots,n.\nAfter this, there are m lines describing the edges. Each line has two distinct integers a and b: there is an edge between nodes a and b.\nOutput\nPrint m lines describing the directions of the edges. Each line has two integers a and b: there is an edge from node a to node b. You can print any valid solution.\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n3 3\n1 2\n2 3\n3 1\n\nOutput:\n1 2\n3 2\n3 1\n"
    },
    {
        "link": "/problemset/task/2177",
        "title": "Strongly Connected Edges",
        "content": "Given an undirected graph, your task is to choose a direction for each edge so that the resulting directed graph is strongly connected.\nInput\nThe first input line has two integers n and m: the number of nodes and edges. The nodes are numbered 1,2,\\dots,n.\nAfter this, there are m lines describing the edges. Each line has two integers a and b: there is an edge between nodes a and b.\nYou may assume that the graph is simple, i.e., there are at most one edge between two nodes and every edge connects two distinct nodes.\nOutput\nPrint m lines describing the directions of the edges. Each line has two integers a and b: there is an edge from node a to node b. You can print any valid solution.\nIf there are no solutions, only print \"IMPOSSIBLE\".\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n3 3\n1 2\n1 3\n2 3\n\nOutput:\n1 2\n2 3\n3 1\n"
    },
    {
        "link": "/problemset/task/2179",
        "title": "Even Outdegree Edges",
        "content": "Given an undirected graph, your task is to choose a direction for each edge so that in the resulting directed graph each node has an even outdegree. The outdegree of a node is the number of edges coming out of that node.\nInput\nThe first input line has two integers n and m: the number of nodes and edges. The nodes are numbered 1,2,\\dots,n.\nAfter this, there are m lines describing the edges. Each line has two integers a and b: there is an edge between nodes a and b.\nYou may assume that the graph is simple, i.e., there is at most one edge between any two nodes and every edge connects two distinct nodes.\nOutput\nPrint m lines describing the directions of the edges. Each line has two integers a and b: there is an edge from node a to node b. You can print any valid solution.\nIf there are no solutions, only print \"IMPOSSIBLE\".\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n4 4\n1 2\n2 3\n3 4\n1 4\n\nOutput:\n1 2\n3 2\n3 4\n1 4\n"
    },
    {
        "link": "/problemset/task/2422",
        "title": "Multiplication Table",
        "content": "Find the middle element when the numbers in an n \\times n multiplication table are sorted in increasing order. It is assumed that n is odd.\nFor example, the 3 \\times 3 multiplication table is as follows:\n\n\\begin{matrix}\n1 &amp; 2 &amp; 3 \\\\\n2 &amp; 4 &amp; 6 \\\\\n3 &amp; 6 &amp; 9 \\\\\n\\end{matrix}\n\nThe numbers in increasing order are [1,2,2,3,3,4,6,6,9], so the answer is 3.\nInput\nThe only input line has an integer n.\nOutput\nPrint one integer: the answer to the task.\nConstraints\n\n1 \\le n &lt; 10^6\n\nExample\nInput:\n3\n\nOutput:\n3\n"
    },
    {
        "link": "/problemset/task/1142",
        "title": "Advertisement",
        "content": "A fence consists of n vertical boards. The width of each board is 1 and their heights may vary.\nYou want to attach a rectangular advertisement to the fence. What is the maximum area of such an advertisement?\nInput\nThe first input line contains an integer n: the width of the fence.\nAfter this, there are n integers k_1,k_2,\\ldots,k_n: the height of each board.\nOutput\nPrint one integer: the maximum area of an advertisement.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le k_i \\le 10^9\n\nExample\nInput:\n8\n4 1 5 3 3 2 4 1\n\nOutput:\n10\n"
    },
    {
        "link": "/problemset/task/2186",
        "title": "Special Substrings",
        "content": "A substring is called special if every character that appears in the string appears the same number of times in the substring.\nYour task is to count the number of special substrings in a given string.\nInput\nThe only input line has a string of length n. Every character is between a...z.\nOutput\nPrint one integer: the number of special substrings.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n\nExample\nInput:\nabccabab\n\nOutput:\n5\n\nExplanation: The special substrings are abc, cab, abccab, bccaba and ccabab.\n"
    },
    {
        "link": "/problemset/task/2229",
        "title": "Permutation Inversions",
        "content": "Your task is to count the number of permutations of 1,2,\\dots,n that have exactly k inversions (i.e., pairs of elements in the wrong order).\nFor example, when n=4 and k=3, there are 6 such permutations:\n\n[1,4,3,2]\n[2,3,4,1]\n[2,4,1,3]\n[3,1,4,2]\n[3,2,1,4]\n[4,1,2,3]\n\nInput\nThe only input line has two integers n and k.\nOutput\nPrint the answer modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 500\n0 \\le k \\le \\frac{n(n-1)}{2}\n\nExample\nInput:\n4 3\n\nOutput:\n6\n"
    },
    {
        "link": "/problemset/task/1655",
        "title": "Maximum Xor Subarray",
        "content": "Given an array of n integers, your task is to find the maximum xor sum in a subarray.\nInput\nThe first input line has an integer n: the size of the array.\nThe next line has n integers x_1,x_2,\\dots,x_n: the contents of the array.\nOutput\nPrint one integer: the maximum xor sum in a subarray.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n0 \\le x_i \\le 10^9\n\nExample\nInput:\n4\n5 1 5 9\n\nOutput:\n13\n"
    },
    {
        "link": "/problemset/task/1664",
        "title": "Movie Festival Queries",
        "content": "In a movie festival, n movies will be shown. You know the starting and ending time of each movie.\nYour task is to process q queries of the form: if you arrive and leave the festival at specific times, what is the maximum number of movies you can watch?\nYou can watch two movies if the first movie ends before or exactly when the second movie starts. You can start the first movie exactly when you arrive and leave exactly when the last movie ends.\nInput\nThe first input line has two integers n and q: the number of movies and queries.\nAfter this, there are n lines describing the movies. Each line has two integers a and b: the starting and ending time of a movie.\nFinally, there are q lines describing the queries. Each line has two integers a and b: your arrival and leaving time.\nOutput\nPrint the maximum number of movies for each query.\nConstraints\n\n1 \\le n,q \\le 2 \\cdot 10^5\n1 \\le a &lt; b \\le 10^6\n\nExample\nInput:\n4 3\n2 5\n6 10\n4 7\n9 10\n5 9\n2 10\n7 10\n\nOutput:\n0\n2\n1\n"
    },
    {
        "link": "/problemset/task/1697",
        "title": "Chess Tournament",
        "content": "There will be a chess tournament of n players. Each player has announced the number of games they want to play.\nEach pair of players can play at most one game. Your task is to determine which games will be played so that everybody will be happy.\nInput\nThe first input line has an integer n: the number of players. The players are numbered 1,2,\\dots,n.\nThe next line has n integers x_1,x_2,\\dots,x_n: for each player, the number of games they want to play.\nOutput\nFirst print an integer k: the number of games. Then, print k lines describing the games. You can print any valid solution.\nIf there are no solutions, print \"IMPOSSIBLE\".\nConstraints\n\n1 \\le n \\le 10^5\n\\sum_{i=1}^{n} x_i \\le 2 \\cdot 10^5\n\nExample\nInput:\n5\n1 3 2 0 2\n\nOutput:\n4\n1 2\n2 3\n2 5\n3 5\n"
    },
    {
        "link": "/problemset/task/1702",
        "title": "Tree Traversals",
        "content": "There are three common ways to traverse the nodes of a binary tree:\n\nPreorder: First process the root, then the left subtree, and finally the right subtree.\nInorder: First process the left subtree, then the root, and finally the right subtree.\nPostorder: First process the left subtree, then the right subtree, and finally the root.\n\nThere is a binary tree of n nodes with distinct labels. You are given the preorder and inorder traversals of the tree, and your task is to determine its postorder traversal.\nInput\nThe first input line has an integer n: the number of nodes. The nodes are numbered 1,2,\\dots,n.\nAfter this, there are two lines describing the preorder and inorder traversals of the tree. Both lines consist of n integers.\nYou can assume that the input corresponds to a binary tree.\nOutput\nPrint the postorder traversal of the tree.\nConstraints\n\n1 \\le n \\le 10^5\n\nExample\nInput:\n5\n5 3 2 1 4\n3 5 1 2 4\n\nOutput:\n3 1 4 2 5\n"
    },
    {
        "link": "/problemset/task/1704",
        "title": "Network Renovation",
        "content": "Syrj\u00e4l\u00e4's network consists of n computers and n-1 connections between them. It is possible to send data between any two computers.\nHowever, if any connection breaks down, it will no longer be possible to send data between some computers. Your task is to add the minimum number of new connections in such a way that you can still send data between any two computers even if any single connection breaks down.\nInput\nThe first input line has an integer n: the number of computers. The computers are numbered 1,2,\\dots,n.\nAfter this, there are n-1 lines describing the connections. Each line has two integers a and b: there is a connection between computers a and b.\nOutput\nFirst print an integer k: the minimum number of new connections. After this, print k lines describing the connections. You can print any valid solution.\nConstraints\n\n3 \\le n \\le 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5\n1 2\n1 3\n3 4\n3 5\n\nOutput:\n2\n2 4\n4 5\n"
    },
    {
        "link": "/problemset/task/1707",
        "title": "Graph Girth",
        "content": "Given an undirected graph, your task is to determine its girth, i.e., the length of its shortest cycle.\nInput\nThe first input line has two integers n and m: the number of nodes and edges. The nodes are numbered 1,2,\\dots,n.\nAfter this, there are m lines describing the edges. Each line has two integers a and b: there is an edge between nodes a and b.\nYou may assume that there is at most one edge between each two nodes.\nOutput\nPrint one integer: the girth of the graph. If there are no cycles, print -1.\nConstraints\n\n1 \\le n \\le 2500\n1 \\le m \\le 5000\n\nExample\nInput:\n5 6\n1 2\n1 3\n2 4\n2 5\n3 4\n4 5\n\nOutput:\n3\n"
    },
    {
        "link": "/problemset/task/1740",
        "title": "Intersection Points",
        "content": "Given n horizontal and vertical line segments, your task is to calculate the number of their intersection points.\nYou can assume that no parallel line segments intersect, and no endpoint of a line segment is an intersection point.\nInput\nThe first input line has an integer n: the number of line segments.\nThen there are n lines describing the line segments. Each line has four integers: x_1, y_1, x_2 and y_2: a line segment begins at point (x_1,y_1) and ends at point (x_2,y_2).\nOutput\nPrint the number of intersection points.\nConstraints\n\n1 \\le n \\le 10^5\n-10^6 \\le x_1 \\le x_2 \\le 10^6\n-10^6 \\le y_1 \\le y_2 \\le 10^6\n(x_1,y_1) \\neq (x_2,y_2)\n\nExample\nInput:\n3\n2 3 7 3\n3 1 3 5\n6 2 6 6\n\nOutput:\n2\n"
    },
    {
        "link": "/problemset/task/2214",
        "title": "Inverse Inversions",
        "content": "Your task is to create a permutation of numbers 1,2,\\dots,n that has exactly k inversions.\nAn inversion is a pair (a,b) where a&lt;b and p_a&gt;p_b where p_i denotes the number at position i in the permutation.\nInput\nThe only input line has two integers n and k.\nOutput\nPrint a line that contains the permutation. You can print any valid solution.\nConstraints\n\n1 \\le n \\le 10^6\n0 \\le k \\le \\frac{n(n-1)}{2}\n\nExample\nInput:\n5 4\n\nOutput:\n1 5 2 4 3\n"
    },
    {
        "link": "/problemset/task/2215",
        "title": "Monotone Subsequences",
        "content": "Your task is to create a permutation of numbers 1,2,\\dots,n whose longest monotone subsequence has exactly k elements.\nA monotone subsequence is either increasing or decreasing. For example, some monotone subsequences in [2,1,4,5,3] are [2,4,5] and [4,3].\nInput\nThe first input line has an integer t: the number of tests.\nAfter this, there are t lines. Each line has two integers n and k.\nOutput\nFor each test, print a line that contains the permutation. You can print any valid solution. If there are no solutions, print \"IMPOSSIBLE\".\nConstraints\n\n1 \\le t \\le 1000\n1 \\le k \\le n \\le 100\n\nExample\nInput:\n3\n5 3\n5 2\n7 7\n\nOutput:\n2 1 4 5 3\nIMPOSSIBLE\n1 2 3 4 5 6 7\n"
    },
    {
        "link": "/problemset/task/1743",
        "title": "String Reorder",
        "content": "Given a string, you want to reorder its characters so that no two adjacent characters are the same. What is the lexicographically minimal such string?\nInput\nThe only input line as a string of length n consisting of characters A\u2013Z.\nOutput\nPrint the lexicographically minimal reordered string where no two adjacent characters are the same. If it is not possible to create such a string, print -1.\nConstraints\n\n1 \\le n \\le 10^6\n\nExample\nInput:\nHATTIVATTI\n\nOutput:\nAHATITITVT\n"
    },
    {
        "link": "/problemset/task/2425",
        "title": "Stack Weights",
        "content": "You have n coins, each of which has a distinct weight.\nThere are two stacks which are initially empty. On each step you move one coin to a stack. You never remove a coin from a stack.\nAfter each move, your task is to determine which stack is heavier (if we can be sure that either stack is heavier).\nInput\nThe first input line has an integer n: the number of coins. The coins are numbered 1,2,\\dots,n. You know that coin i is always heavier than coin i-1, but you don't know their exact weights.\nAfter this, there are n lines that describe the moves. Each line has two integers c and s: move coin c to stack s (1 = left, 2 = right).\nOutput\nAfter each move, print &lt; if the right stack is heavier, &gt; if the left stack is heavier, and ? if we can't know which stack is heavier.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n\nExample\nInput:\n3\n2 1\n3 2\n1 1\n\nOutput:\n&gt;\n&lt;\n?\n\nExplanation: After the last move, if the coins are [2,3,4], the left stack is heavier, but if the coins are [1,2,5], the right stack is heavier.\n"
    },
    {
        "link": "/problemset/task/1747",
        "title": "Pyramid Array",
        "content": "You are given an array consisting of n distinct integers. On each move, you can swap any two adjacent values.\nYou want to transform the array into a pyramid array. This means that the final array has to be first increasing and then decreasing. It is also allowed that the final array is only increasing or decreasing.\nWhat is the minimum number of moves needed?\nInput\nThe first input line has an integer n: the size of the array.\nThe next line has n distinct integers x_1,x_2,\\dots,x_n: the contents of the array.\nOutput\nPrint one integer: the minimum number of moves.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le x_i \\le 10^9\n\nExample\nInput:\n4\n2 1 5 3\n\nOutput:\n1\n\nExplanation: You may swap the first two values which creates a pyramid array [1,2,5,3].\n"
    },
    {
        "link": "/problemset/task/1748",
        "title": "Increasing Subsequence II",
        "content": "Given an array of n integers, your task is to calculate the number of increasing subsequences it contains. If two subsequences have the same values but in different positions in the array, they are counted separately.\nInput\nThe first input line has an integer n: the size of the array.\nThe second line has n integers x_1,x_2,\\dots,x_n: the contents of the array.\nOutput\nPrint one integer: the number of increasing subsequences modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le x_i \\le 10^9\n\nExample\nInput:\n3\n2 1 3\n\nOutput:\n5\n\nExplanation: The increasing subsequences are [2], [1], [3], [2,3] and [1,3].\n"
    },
    {
        "link": "/problemset/task/1149",
        "title": "String Removals",
        "content": "You are given a string. You can remove any number of characters from it, but you cannot change the order of the remaining characters.\nHow many different strings can you generate?\nInput\nThe first input line contains a string of size n. Each character is one of a\u2013z.\nOutput\nPrint one integer: the number of strings modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 5 \\cdot 10^5\n\nExample\nInput:\naybabtu\n\nOutput:\n103\n"
    },
    {
        "link": "/problemset/task/1188",
        "title": "Bit Inversions",
        "content": "There is a bit string consisting of n bits. Then, there are some changes that invert one given bit. Your task is to report, after each change, the length of the longest substring whose each bit is the same.\nInput\nThe first input line has a bit string consisting of n bits. The bits are numbered 1,2,\\ldots,n.\nThe next line contains an integer m: the number of changes.\nThe last line contains m integers x_1,x_2,\\ldots,x_m describing the changes.\nOutput\nAfter each change, print the length of the longest substring whose each bit is the same.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le x_i \\le n\n\nExample\nInput:\n001011\n3\n3 2 5\n\nOutput:\n4 2 3\n\nExplanation: The bit string first becomes 000011, then 010011, and finally 010001.\n"
    },
    {
        "link": "/problemset/task/2419",
        "title": "Xor Pyramid",
        "content": "Consider a xor pyramid where each number is the xor of lower-left and lower-right numbers. Here is an example pyramid:\n\nGiven the bottom row of the pyramid, your task is to find the topmost number.\nInput\nThe first input line has an integer n: the size of the pyramid.\nThe next line has n integers a_1,a_2,\\dots,a_n: the bottom row of the pyramid.\nOutput\nPrint one integer: the topmost number.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le a_i \\le 10^9\n\nExample\nInput:\n8\n2 10 5 12 9 5 1 5\n\nOutput:\n9\n"
    },
    {
        "link": "/problemset/task/1086",
        "title": "Writing Numbers",
        "content": "You would like to write a list of positive integers 1,2,3,\\ldots using your computer. However, you can press each key 0\u20139 at most n times during the process.\nWhat is the last number you can write?\nInput\nThe only input line contains the value of n.\nOutput\nPrint the last number you can write.\nConstraints\n\n1 \\le n \\le 10^{18}\n\nExample\nInput:\n5\n\nOutput:\n12\n\nExplanation: You can write the numbers 1,2,\\ldots,12. This requires that you press key 1 five times, so you cannot write the number 13.\n"
    },
    {
        "link": "/problemset/task/1113",
        "title": "String Transform",
        "content": "Consider the following string transformation:\n\nappend the character # to the string (we assume that # is lexicographically smaller than all other characters of the string)\ngenerate all rotations of the string\nsort the rotations in increasing order\nbased on this order, construct a new string that contains the last character of each rotation\n\nFor example, the string babc becomes babc#. Then, the sorted list of rotations is #babc, abc#b, babc#, bc#ba, and c#bab. This yields a string cb#ab.\nInput\nThe only input line contains the transformed string of length n+1. Each character of the original string is one of a\u2013z.\nOutput\nPrint the original string of length n.\nConstraints\n\n1 \\le n \\le 10^6\n\nExample\nInput:\ncb#ab\n\nOutput:\nbabc\n"
    },
    {
        "link": "/problemset/task/2427",
        "title": "Letter Pair Move Game",
        "content": "There are 2n boxes in a line. Two adjacent boxes are empty, and all other boxes have a letter \"A\" or \"B\". Both letters appear in exactly n-1 boxes.\nYour task is to move the letters so that all letters \"A\" appear before any letter \"B\". On each turn you can choose any two adjacent boxes that have a letter and move the letters to the two adjacent empty boxes, preserving their order.\nIt can be proven that either there is a solution that consists of at most 10n turns or there are no solutions.\nInput\nThe first line has an integer n: there are 2n boxes.\nThe second line has a string of 2n characters which describes the starting position. Each character is \"A\", \"B\" or \".\" (empty box).\nOutput\nFirst print an integer k: the number of turns. After this, print k lines that describe the moves. You can print any solution, as long as k \\le 1000.\nIf there are no solutions, print only \"-1\".\nConstraints\n\n1 \\le n \\le 100\n\nExample 1\nInput:\n3\nAB..BA\n\nOutput:\n2\nABBA..\nA..ABB\nExample 2\nInput:\n3\nABAB..\n\nOutput:\n-1\n"
    },
    {
        "link": "/problemset/task/1147",
        "title": "Maximum Building I",
        "content": "You are given a map of a forest where some squares are empty and some squares have trees.\nWhat is the maximum area of a rectangular building that can be placed in the forest so that no trees must be cut down?\nInput\nThe first input line contains integers n and m: the size of the forest.\nAfter this, the forest is described. Each square is empty (.) or has trees (*).\nInput\nPrint the maximum area of a rectangular building.\nConstraints\n\n1 \\le n,m \\le 1000\n\nExample\nInput:\n4 7\n...*.*.\n.*.....\n.......\n......*\n\nOutput:\n12\n"
    },
    {
        "link": "/problemset/task/1162",
        "title": "Sorting Methods",
        "content": "Here are some possible methods using which we can sort the elements of an array in increasing order:\n\nAt each step, choose two adjacent elements and swap them.\nAt each step, choose any two elements and swap them.\nAt each step, choose any element and move it to another position.\nAt each step, choose any element and move it to the front of the array.\n\nGiven a permutation of numbers 1,2,\\ldots,n, calculate the minimum number of steps to sort the array using the above methods.\nInput\nThe first input line contains an integer n.\nThe second line contains n integers describing the permutation.\nOutput\nPrint four numbers: the minimum number of steps using each method.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n\nExample\nInput:\n8\n7 8 2 6 5 1 3 4\n\nOutput:\n20 6 5 6\n"
    },
    {
        "link": "/problemset/task/1191",
        "title": "Cyclic Array",
        "content": "You are given a cyclic array consisting of n values. Each element has two neighbors; the elements at positions n and 1 are also considered neighbors.\nYour task is to divide the array into subarrays so that the sum of each subarray is at most k. What is the minimum number of subarrays?\nInput\nThe first input line contains integers n and k.\nThe next line has n integers x_1,x_2,\\ldots,x_n: the contents of the array.\nThere is always at least one division (i.e., no value in the array is larger than k).\nOutput\nPrint one integer: the minimum number of subarrays.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le x_i \\le 10^9\n1 \\le k \\le 10^{18}\n\nExample\nInput:\n8 5\n2 2 2 1 3 1 2 1\n\nOutput:\n3\n\nExplanation: We can create three subarrays: [2,2,1], [3,1], and [2,1,2] (remember that the array is cyclic).\n"
    },
    {
        "link": "/problemset/task/2414",
        "title": "List of Sums",
        "content": "List A consists of n positive integers, and list B contains the sum of each element pair of list A.\nFor example, if A=[1,2,3], then B=[3,4,5], and if A=[1,3,3,3], then B=[4,4,4,6,6,6].\nGiven list B, your task is to reconstruct list A.\nInput\nThe first input line has an integer n: the size of list A.\nThe next line has \\frac{n(n-1)}{2} integers: the contents of list B.\nYou can assume that there is a list A that corresponds to the input, and each value in A is between 1 \\dots k.\nOutput\nPrint n integers: the contents of list A.\nYou can print the values in any order. If there are more than one solution, you can print any of them.\nConstraints\n\n3 \\le n \\le 100\n1 \\le k \\le 10^9\n\nExample\nInput:\n4\n4 4 4 6 6 6\n\nOutput:\n1 3 3 3\n\nExplanation: In this case list A can be either [1,3,3,3] or [2,2,2,4] and both solutions are accepted.\n"
    },
    {
        "link": "/problemset/task/2132",
        "title": "Increasing Array II",
        "content": "You are given an array of n integers. You want to modify the array so that it is increasing, i.e., every element is at least as large as the previous element.\nOn each move, you can increase or decrease the value of any element by one. What is the minimum number of moves required?\nInput\nThe first input line contains an integer n: the size of the array.\nThen, the second line contains n integers x_1,x_2,\\ldots,x_n: the contents of the array.\nOutput\nPrint the minimum number of moves.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le x_i \\le 10^9\n\nExample\nInput:\n5\n3 8 5 6 5\n\nOutput:\n4\n"
    },
    {
        "link": "/problemset/task/1189",
        "title": "Food Division",
        "content": "There are n children around a round table. For each child, you know the amount of food they currently have and the amount of food they want. The total amount of food in the table is correct.\nAt each step, a child can give one unit of food to his or her neighbour. What is the minimum number of steps needed?\nInput\nThe first input line contains an integer n: the number of children.\nThe next line has n integers a_1,a_2,\\ldots,a_n: the current amount of food for each child.\nThe last line has n integers b_1,b_2,\\ldots,b_n: the required amount of food for each child.\nOutput\nPrint one integer: the minimum number of steps.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n0 \\le a_i, b_i \\le 10^6\n\nExample\nInput:\n3\n3 5 0\n2 4 2\n\nOutput:\n2\n\nExplanation: Child 1 gives one unit of food to child 3, and child 2 gives one unit of food to child 3.\n"
    },
    {
        "link": "/problemset/task/1654",
        "title": "Bit Problem",
        "content": "Given a list of n integers, your task is to calculate for each element x:\n\nthe number of elements y such that x \\mid y = x\nthe number of elements y such that x \\mathrel{\\&amp;} y = x\nthe number of elements y such that x \\mathrel{\\&amp;} y \\neq 0\n\nInput\nThe first input line has an integer n: the size of the list.\nThe next line has n integers x_1,x_2,\\dots,x_n: the elements of the list.\nOutput\nPrint n lines: for each element the required values.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n1 \\le x_i \\le 10^6\n\nExample\nInput:\n5\n3 7 2 9 2\n\nOutput:\n3 2 5\n4 1 5\n2 4 4\n1 1 3\n2 4 4\n"
    },
    {
        "link": "/problemset/task/1698",
        "title": "Swap Round Sorting",
        "content": "You are given an array containing a permutation of numbers 1,2,\\dots,n, and your task is to sort the array using swap rounds. On each swap round, you can choose any number of distinct pairs of elements and swap each pair.\nYour task is to find the minimum number of rounds and show how you can choose the pairs in each round.\nInput\nThe first input line has an integer n: the size of the array.\nThe second line has n integers x_1,x_2,\\dots,x_n: the initial permutation.\nOutput\nFirst print an integer k: the minimum number of rounds.\nThen, for each round, print the number of swaps and the indices of each swap. You can print any valid solution.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n\nExample\nInput:\n5\n5 2 1 3 4\n\nOutput:\n2\n2\n1 3\n4 5\n1\n3 5\n\nExplanation: The inital array is [5,2,1,3,4]. After round 1, the array becomes [1,2,5,4,3]. After round 2, the array becomes [1,2,3,4,5].\n"
    },
    {
        "link": "/problemset/task/2430",
        "title": "Binary Subsequences",
        "content": "Your task is to find a minimum length bit string that has exactly n distinct subsequences.\nFor example, a correct solution for n=6 is 101 whose distinct subsequences are 0, 1, 01, 10, 11 and 101.\nInput\nThe only input line has an integer n.\nOutput\nPrint one bit string: a solution to the task. You can print any valid solution.\nConstraints\n\n1 \\le n \\le 10^6\n\nExample\nInput:\n6\n\nOutput:\n101\n"
    },
    {
        "link": "/problemset/task/1700",
        "title": "Tree Isomorphism I",
        "content": "Given two rooted trees, your task is to find out if they are isomorphic, i.e., it is possible to draw them so that they look the same.\nInput\nThe first input line has an integer t: the number of tests. Then, there are t tests described as follows:\nThe first line has an integer n: the number of nodes in both trees. The nodes are numbered 1,2,\\dots,n, and node 1 is the root.\nThen, there are n-1 lines describing the edges of the first tree, and finally n-1 lines describing the edges of the second tree.\nOutput\nFor each test, print \"YES\", if the trees are isomorphic, and \"NO\" otherwise.\nConstraints\n\n1 \\le t \\le 1000\n2 \\le n \\le 10^5\nthe sum of all values of n is at most 10^5\n\nExample\nInput:\n2\n3\n1 2\n2 3\n1 2\n1 3\n3\n1 2\n2 3\n1 3\n3 2\n\nOutput:\nNO\nYES\n"
    },
    {
        "link": "/problemset/task/2228",
        "title": "Counting Sequences",
        "content": "Your task is to count the number of sequences of length n where each element is an integer between 1 \\dots k and each integer between 1 \\dots k appears at least once in the sequence.\nFor example, when n=6 and k=4, some valid sequences are [1,3,1,4,3,2] and [2,2,1,3,4,2].\nInput\nThe only input line has two integers n and k.\nOutput\nPrint one integer: the number of sequences modulo 10^9+7.\nConstraints\n\n1 \\le k \\le n \\le 10^6\n\nExample\nInput:\n6 4\n\nOutput:\n1560\n"
    },
    {
        "link": "/problemset/task/1703",
        "title": "Critical Cities",
        "content": "There are n cities and m flight connections between them. A city is called a critical city if it appears on every route from a city to another city.\nYour task is to find all critical cities from Syrj\u00e4l\u00e4 to Lehm\u00e4l\u00e4.\nInput\nThe first input line has two integers n and m: the number of cities and flights. The cities are numbered 1,2,\\dots,n. City 1 is Syrj\u00e4l\u00e4, and city n is Lehm\u00e4l\u00e4.\nThen, there are m lines describing the connections. Each line has two integers a and b: there is a flight from city a to city b. All flights are one-way.\nYou may assume that there is a route from Syrj\u00e4l\u00e4 to Lehm\u00e4l\u00e4.\nOutput\nFirst print an integer k: the number of critical cities. After this, print k integers: the critical cities in increasing order.\nConstraints\n\n2 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5 5\n1 2\n2 3\n2 4\n3 5\n4 5\n\nOutput:\n3\n1 2 5\n"
    },
    {
        "link": "/problemset/task/1706",
        "title": "School Excursion",
        "content": "A group of n children are coming to Helsinki. There are two possible attractions: a child can visit either Korkeasaari (zoo) or Linnanm\u00e4ki (amusement park).\nThere are m pairs of children who want to visit the same attraction. Your task is to find all possible alternatives for the number of children that will visit Korkeasaari. The children's wishes have to be taken into account.\nInput\nThe first input line has two integers n and m: the number of children and their wishes. The children are numbered 1,2,\\dots,n.\nAfter this, there are m lines describing the children's wishes. Each line has two integers a and b: children a and b want to visit the same attraction.\nOutput\nPrint a bit string of length n where a one-bit at index i indicates that it is possible that exactly i children visit Korkeasaari (the bit string is to be considered one-indexed).\nConstraints\n\n1 \\le n \\le 10^5\n0 \\le m \\le 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5 3\n1 2\n2 3\n1 5\n\nOutput:\n10011\n\nExplanation: The number of children visiting Korkeasaari can be 1, 4 or 5.\n"
    },
    {
        "link": "/problemset/task/1709",
        "title": "Coin Grid",
        "content": "There is an n \\times n grid whose each square is empty or has a coin. On each move, you can remove all coins in a row or column.\nWhat is the minimum number of moves after which the grid is empty?\nInput\nThe first input line has an integer n: the size of the grid. The rows and columns are numbered 1,2,\\dots,n.\nAfter this, there are n lines describing the grid. Each line has n characters: each character is either . (empty) or o (coin).\nOutput\nFirst print an integer k: the minimum number of moves. After this, print k lines describing the moves.\nOn each line, first print 1 (row) or 2 (column), and then the number of a row or column. You can print any valid solution.\nConstraints\n\n1 \\le n \\le 100\n\nExample\nInput:\n3\n..o\no.o\n...\n\nOutput:\n2\n1 2\n2 3\n"
    },
    {
        "link": "/problemset/task/1742",
        "title": "Robot Path",
        "content": "You are given a description of a robot's path. The robot begins at point (0,0) and performs n commands. Each command moves the robot some distance up, down, left or right.\nThe robot will stop when it has performed all commands, or immediately when it returns to a point that it has already visited. Your task is to calculate the total distance the robot moves.\nInput\nThe first input line has an integer n: the number of commands.\nAfter that, there are n lines describing the commands. Each line has a character d and an integer x: the robot moves the distance  x to the direction d. Each direction is U (up), D (down), L (left), or R (right).\nOutput\nPrint the total distance the robot moves.\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le x \\le 10^6\n\nExample\nInput:\n5\nU 2\nR 3\nD 1\nL 5\nU 2\n\nOutput:\n9\n"
    },
    {
        "link": "/problemset/task/2426",
        "title": "Programmers and Artists",
        "content": "A company wants to hire a programmers and b artists.\nThere are a total of n applicants, and each applicant can become either a programmer or an artist. You know each applicant's programming and artistic skills.\nYour task is to select the new employees so that the sum of their skills is maximum.\nInput\nThe first input line has three integers a, b and n: the required number of programmers and artists, and the total number of applicants.\nAfter this, there are n lines that describe the applicants. Each line has two integers x and y: the applicant's programming and artistic skills.\nOutput\nPrint one integer: the maximum sum of skills.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n0 \\le a,b \\le n\na+b \\le n\n1 \\le x,y \\le 10^9\n\nExample\nInput:\n2 1 4\n3 7\n9 8\n1 5\n4 2\n\nOutput:\n20\n\nExplanation: An optimal solution is to hire two programmers with skills 9 and 4 and one artist with skill 7. The sum of the skills is 9+4+7=20.\n"
    },
    {
        "link": "/problemset/task/1757",
        "title": "Course Schedule II",
        "content": "You want to complete n courses that have requirements of the form \"course a has to be completed before course b\".\nYou want to complete course 1 as soon as possible. If there are several ways to do this, you want then to complete course 2 as soon as possible, and so on.\nYour task is to determine the order in which you complete the courses.\nInput\nThe first input line has two integers n and m: the number of courses and requirements. The courses are numbered 1,2,\\dots,n.\nThen, there are m lines describing the requirements. Each line has two integers a and b: course a has to be completed before course b.\nYou can assume that there is at least one valid schedule.\nOutput\nPrint one line having n integers: the order in which you complete the courses.\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n4 2\n2 1\n2 3\n\nOutput:\n2 1 3 4\n"
    },
    {
        "link": "/problemset/task/2174",
        "title": "Removing Digits II",
        "content": "You are given an integer n. On each step, you may subtract from it any one-digit number that appears in it.\nHow many steps are required to make the number equal to 0?\nInput\nThe only input line has an integer n.\nOutput\nPrint one integer: the minimum number of steps.\nConstraints\n\n1 \\le n \\le 10^{18}\n\nExample\nInput:\n27\n\nOutput:\n5\n\nExplanation: An optimal solution is 27 \\rightarrow 20 \\rightarrow 18 \\rightarrow 10 \\rightarrow 9 \\rightarrow 0.\n"
    },
    {
        "link": "/problemset/task/2180",
        "title": "Coin Arrangement",
        "content": "There is a 2 \\times n grid whose each cell contains some number of coins. The total number of coins is 2n.\nYour task is to arrange the coins so that each cell contains exactly one coin. On each move you can choose any coin and move it one step left, right, up or down.\nWhat is the minimum number of moves if you act optimally?\nInput\nThe first input line has an integer n: the width of the grid.\nAfter this, there are two lines that describe the grid. Each line has n integers: the number of coins in each cell.\nOutput\nPrint one integer: the minimum number of moves.\nConstraints\n\n1 \\le n \\le 10^5\n\nExample\nInput:\n4\n0 1 0 1\n2 0 1 3\n\nOutput:\n5\n"
    },
    {
        "link": "/problemset/task/2176",
        "title": "Counting Bishops",
        "content": "Your task is to count the number of ways k bishops can be placed on an n \\times n chessboard so that no two bishops attack each other.\nTwo bishops attack each other if they are on the same diagonal.\nInput\nThe only input line has two integers n and k: the board size and the number of bishops.\nOutput\nPrint one integer: the number of ways modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 500\n1 \\le k \\le n^2\n\nExample\nInput:\n5 4\n\nOutput:\n2728\n"
    },
    {
        "link": "/problemset/task/2432",
        "title": "Grid Puzzle I",
        "content": "There is an n \\times n grid, and your task is to choose from each row and column some number of squares. How can you do that?\nInput\nThe first input line has an integer n: the size of the grid. The rows and columns are numbered 1,2,\\dots,n.\nThe next line has n integers a_1,a_2,\\ldots,a_n: You must choose exactly a_i squares from the ith row.\nThe las line has n integers b_1,b_2,\\ldots,b_n: You must choose exactly b_j squares from the jth column.\nOutput\nPrint n lines describing which squares you choose (X means that you choose a square, . means that you don't choose it). You can print any valid solution.\nIf it is not possible to satisfy the conditions print only -1.\nConstraints\n\n1 \\le n \\le 50\n0 \\le a_i \\le n\n0 \\le b_j \\le n\n\nExample\nInput:\n5\n0 1 3 2 0\n1 2 2 0 1\n\nOutput:\n.....\n..X..\n.XX.X\nXX...\n.....\n"
    },
    {
        "link": "/problemset/task/2131",
        "title": "Grid Puzzle II",
        "content": "There is an n \\times n grid whose each square has some number of coins in it.\nYou know for each row and column how many squares you must choose from that row or column. You get all coins from every square you choose. What is the maximum number of coins you can collect and how could you choose the squares so that the given conditions are satisfied?\nInput\nThe first input line has an integer n: the size of the grid. The rows and columns are numbered 1,2,\\dots,n.\nThe next line has n integers a_1,a_2,\\ldots,a_n: You must choose exactly a_i squares from the ith row.\nThe next line has n integers b_1,b_2,\\ldots,b_n: You must choose exactly b_j squares from the jth column.\nFinally, there are n lines describing the grid. You can assume The sums of a_1,a_2,\\ldots,a_n and b_1,b_2,\\ldots,b_n are equal.\nOutput\nFirst print an integer k: the maximum number of coins you can collect. After this print n lines describing which squares you choose (X means that you choose a square, . means that you don't choose it).\nIf it is not possible to satisfy the conditions print only -1.\nConstraints\n\n1 \\le n \\le 50\n0 \\le a_i \\le n\n0 \\le b_j \\le n\n0 \\le c_{ij} \\le 1000\n\nExample\nInput:\n5\n0 1 3 2 0\n1 2 2 0 1\n2 5 1 5 1\n0 2 5 1 2\n3 8 9 3 5\n1 4 3 7 3\n0 3 6 2 8\n\nOutput:\n32\n.....\n..X..\n.XX.X\nXX...\n.....\n"
    },
    {
        "link": "/problemset/task/1080",
        "title": "Empty String",
        "content": "You are given a string consisting of n characters between a and z.\nOn each turn, you may remove any two adjacent characters that are equal. Your goal is to construct an empty string by removing all the characters.\nIn how many ways can you do this?\nInput\nThe only input line has a string of length n.\nOutput\nPrint one integer: the number of ways modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 500\n\nExample\nInput:\naabccb\n\nOutput:\n3\n"
    },
    {
        "link": "/problemset/task/1078",
        "title": "Grid Paths",
        "content": "Consider an n \\times n grid whose top-left square is (1,1) and bottom-right square is (n,n).\nYour task is to move from the top-left square to the bottom-right square. On each step you may move one square right or down. In addition, there are m traps in the grid. You cannot move to a square with a trap.\nWhat is the total number of possible paths?\nInput\nThe first input line contains two integers n and m: the size of the grid and the number of traps.\nAfter this, there are m lines describing the traps. Each such line contains two integers y and x: the location of a trap.\nYou can assume that there are no traps in the top-left and bottom-right square.\nOutput\nPrint the number of paths modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 10^6\n1 \\le m \\le 1000\n1 \\le y,x \\le n\n\nExample\nInput:\n3 1\n2 2\n\nOutput:\n2\n"
    },
    {
        "link": "/problemset/task/2115",
        "title": "Bit Substrings",
        "content": "You are given a bit string of length n. Your task is to calculate for each k between 0  \\ldots n the number of non-empty substrings that contain exactly k ones.\nFor example, if the string is 101, there are:\n\n1 substring that contains 0 ones: 0\n4 substrings that contain 1 one: 01, 1, 1, 10\n1 substring that contains 2 ones: 101\n0 substrings that contain 3 ones\n\nInput\nThe only input line contains a binary string of length n.\nOutput\nPrint n+1 values as specified above.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n\nExample\nInput:\n101\n\nOutput:\n1 4 1 0 \n"
    },
    {
        "link": "/problemset/task/2075",
        "title": "Reversal Sorting",
        "content": "You have an array that contains a permutation of integers 1,2,\\dots,n. Your task is to sort the array in increasing order by reversing subarrays. You can construct any solution that has at most n reversals.\nInput\nThe first input line has an integer n: the size of the array. The array elements are numbered 1,2,\\dots,n.\nThe next line has n integers x_1,x_2,\\dots,x_n: the contents of the array.\nOutput\nFirst print an integer k: the number of reversals.\nAfter that, print k lines that describe the reversals. Each line has two integers a and b: you reverse a subarray from position a to position b.\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n\nExample\nInput:\n4\n2 3 1 4\n\nOutput:\n2\n1 3\n2 3\n"
    },
    {
        "link": "/problemset/task/2421",
        "title": "Counting Reorders",
        "content": "Calculate the number of ways you can reorder the characters of a string so that no two adjacent characters are the same.\nFor example, the answer for aabc is 6, because the possible orders are abac, abca, acab, acba, baca, and caba.\nInput\nThe only input line has a string that consists of n characters between a\u2013z.\nOutput\nPrint an integer: the answer modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 5000\n\nExample\nInput:\naabc\n\nOutput:\n6\n"
    },
    {
        "link": "/problemset/task/1159",
        "title": "Book Shop II",
        "content": "You are in a book shop which sells n different books. You know the price, the number of pages and the number of copies of each book.\nYou have decided that the total price of your purchases will be at most x. What is the maximum number of pages you can buy? You can buy several copies of the same book.\nInput\nThe first input line contains two integers n and x: the number of book and the maximum total price.\nThe next line contains n integers h_1,h_2,\\ldots,h_n: the price of each book.\nThe next line contains n integers s_1,s_2,\\ldots,s_n: the number of pages of each book.\nThe last line contains n integers k_1,k_2,\\ldots,k_n: the number of copies of each book.\nOutput\nPrint one integer: the maximum number of pages.\nConstraints\n\n1 \\le n \\le 100\n1 \\le x \\le 10^5\n1 \\le h_i, s_i, k_i \\le 1000\n\nExample\nInput:\n3 10\n2 6 3\n8 5 4\n3 5 2\n\nOutput:\n28\n\nExplanation: You can buy three copies of book 1 and one copy of book 3. The price is 3 \\cdot 2 + 3 = 9 and the number of pages is 3 \\cdot 8 + 4 = 28.\n"
    },
    {
        "link": "/problemset/task/1677",
        "title": "Network Breakdown",
        "content": "Syrj\u00e4l\u00e4's network has n computers and m connections between them. The network consists of components of computers that can send messages to each other.\nNobody in Syrj\u00e4l\u00e4 understands how the network works. For this reason, if a connection breaks down, nobody will repair it. In this situation a component may be divided into two components.\nYour task is to calculate the number of components after each connection breakdown.\nInput\nThe first input line has three integers n, m and k: the number of computers, connections and breakdowns. The computers are numbered 1,2,\\dots,n.\nThen, there are m lines describing the connections. Each line has two integers a and b: there is a connection between computers a and b. Each connection is between two different computers, and there is at most one connection between two computers.\nFinally, there are k lines describing the breakdowns. Each line has two integers a and b: the connection between computers a and b breaks down.\nOutput\nAfter each breakdown, print the number of components.\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le k \\le m\n1 \\le a,b \\le n\n\nExample\nInput:\n5 5 3\n1 2\n1 3\n2 3\n3 4\n4 5\n3 4\n2 3\n4 5\n\nOutput:\n2 2 3\n"
    },
    {
        "link": "/problemset/task/1203",
        "title": "Visiting Cities",
        "content": "You want to travel from Syrj\u00e4l\u00e4 to Lehm\u00e4l\u00e4 by plane using a minimum-price route. Which cities will you certainly visit?\nInput\nThe first input line contains two integers n and m: the number of cities and the number of flights. The cities are numbered 1,2,\\ldots,n. City 1 is Syrj\u00e4l\u00e4, and city n is Lehm\u00e4l\u00e4.\nAfter this, there are m lines describing the flights. Each line has three integers a, b, and c: there is a flight from city a to city b with price c. All flights are one-way flights.\nYou may assume that there is a route from Syrj\u00e4l\u00e4 to Lehm\u00e4l\u00e4.\nOutput\nFirst print an integer k: the number of cities that are certainly in the route. After this, print the k cities sorted in increasing order.\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n1 \\le c \\le 10^9\n\nExample\nInput:\n5 6\n1 2 3\n1 3 4\n2 3 1\n2 4 5\n3 4 1\n4 5 8\n\nOutput:\n4\n1 3 4 5\n"
    },
    {
        "link": "/problemset/task/2184",
        "title": "Missing Coin Sum Queries",
        "content": "You have n coins with positive integer values. The coins are numbered 1,2,\\dots,n.\nYour task is to process q queries of the form: \"if you can use coins a \\dots b, what is the smallest sum you cannot produce?\"\nInput\nThe first input line has two integers n and q: the number of coins and queries.\nThe second line has n integers x_1,x_2,\\dots,x_n: the value of each coin.\nFinally, there are q lines that describe the queries. Each line has two values a and b: you can use coins a \\dots b.\nOutput\nPrint the answer for each query.\nConstraints\n\n1 \\le n, q \\le 2 \\cdot 10^5\n1 \\le x_i \\le 10^9\n1 \\le a \\le b \\le n\n\nExample\nInput:\n5 3\n2 9 1 2 7\n2 4\n4 4\n1 5\n\nOutput:\n4\n1\n6\n\nExplanation: First you can use coins [9,1,2], then coins [2] and finally coins [2,9,1,2,7].\n"
    },
    {
        "link": "/problemset/task/1157",
        "title": "Number Grid",
        "content": "Consider a two-dimensional grid whose rows and columns are 1-indexed. Each square contains the smallest nonnegative integer that does not appear to the left on the same row or above on the same column.\nYour task is to calculate the value at square (y,x).\nInput\nThe only input line contains two integers y and x.\nOutput\nPrint one integer: the value at square (y,x).\nConstraints\n\n1 \\le y,x \\le 10^9\n\nExample\nInput:\n3 5\n\nOutput:\n6\n"
    },
    {
        "link": "/problemset/task/1148",
        "title": "Maximum Building II",
        "content": "You are given a map of a forest where some squares are empty and some squares have trees.\nYou want to place a rectangular building in the forest so that no trees need to be cut down. For each building size, your task is to calculate the number of ways you can do this.\nInput\nThe first input line contains integers n and m: the size of the forest.\nAfter this, the forest is described. Each square is empty (.) or has trees (*).\nOutput\nPrint n lines each containing m integers.\nConstraints\n\n1 \\le n,m \\le 1000\n\nExample\nInput:\n4 7\n...*.*.\n.*.....\n.......\n......*\n\nOutput:\n24 17 13 9 6 3 1 \n16 9 7 5 3 1 0 \n9 3 2 1 0 0 0 \n3 0 0 0 0 0 0\n\nExplanation: For example, there are 5 possible places for a building of size 2 \\times 4.\n"
    },
    {
        "link": "/problemset/task/2423",
        "title": "Filling Trominos",
        "content": "Your task is to fill an n \\times m grid using L-trominos (three squares that have an L-shape). For example, here is one way to fill a 4 \\times 6 grid:\n\nInput\nThe first input line has an integer t: the number of tests.\nAfter that, there are t lines that describe the tests. Each line has two integers n and m.\nOutput\nFor each test, print YES if there is a solution, and NO otherwise.\nIf there is a solution, also print n lines that each contain m letters between A\u2013Z. Adjacent squares must have the same letter exactly when they belong to the same tromino. You can print any valid solution.\nConstraints\n\n1 \\le t \\le 100\n1 \\le n,m \\le 100\n\nExample\nInput:\n2\n4 6\n4 7\n\nOutput:\nYES\nAADDBB\nACCDEB\nBCAEEC\nBBAACC\nNO\n"
    },
    {
        "link": "/problemset/task/1161",
        "title": "Stick Divisions",
        "content": "You have a stick of length x and you want to divide it into n sticks, with given lengths, whose total length is x.\nOn each move you can take any stick and divide it into two sticks. The cost of such an operation is the length of the original stick.\nWhat is the minimum cost needed to create the sticks?\nInput\nThe first input line has two integers x and n: the length of the stick and the number of sticks in the division.\nThe second line has n integers d_1,d_2,\\ldots,d_n: the length of each stick in the division.\nOutput\nPrint one integer: the minimum cost of the division.\nConstraints\n\n1 \\le x \\le 10^9\n1 \\le n \\le 2 \\cdot 10^5\n\\sum d_i = x\n\nExample\nInput:\n8 3\n2 3 3\n\nOutput:\n13\n\nExplanation: You first divide the stick of length 8 into sticks of length 3 and 5 (cost 8). After this, you divide the stick of length 5 into sticks of length 2 and 3 (cost 5). The total cost is 8+5=13.\n"
    },
    {
        "link": "/problemset/task/1665",
        "title": "Coding Company",
        "content": "Your company has n coders, and each of them has a skill level between 0 and 100. Your task is to divide the coders into teams that work together.\nBased on your experience, you know that teams work well when the skill levels of the coders are about the same. For this reason, the penalty for creating a team is the skill level difference between the best and the worst coder.\nIn how many ways can you divide the coders into teams such that the sum of the penalties is at most x?\nInput\nThe first input line has two integers n and x: the number of coders and the maximum allowed penalty sum.\nThe next line has n integers t_1,t_2,\\dots,t_n: the skill level of each coder.\nOutput\nPrint one integer: the number of valid divisions modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 100\n0 \\le x \\le 5000\n0 \\le t_i \\le 100\n\nExample\nInput:\n3 2\n2 5 3\n\nOutput:\n3\n"
    },
    {
        "link": "/problemset/task/1699",
        "title": "Flight Route Requests",
        "content": "There are n cities with airports but no flight connections. You are given m requests which routes should be possible to travel.\nYour task is to determine the minimum number of one-way flight connections which makes it possible to fulfil all requests.\nInput\nThe first input line has two integers n and m: the number of cities and requests. The cities are numbered 1,2,\\dots,n.\nAfter this, there are m lines describing the requests. Each line has two integers a and b: there has to be a route from city a to city b. Each request is unique.\nOutput\nPrint one integer: the minimum number of flight connections.\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a, b \\le n\n\nExample\nInput:\n4 5\n1 2\n2 3\n2 4\n3 1\n3 4\n\nOutput:\n4\n\nExplanation: You can create the connections 1 \\rightarrow 2, 2 \\rightarrow 3, 2 \\rightarrow 4 and 3 \\rightarrow 1. Then you can also fly from city 3 to city 4 using the route 3 \\rightarrow 1 \\rightarrow 2 \\rightarrow 4.\n"
    },
    {
        "link": "/problemset/task/2402",
        "title": "Two Stacks Sorting",
        "content": "You are given an input list that consists of n numbers. Each integer between 1 and n appears exactly once in the list.\nYour task is to create a sorted output list using two stacks. On each move you can do one of the following:\n\nMove the first number from the input list to a stack\nMove a number from a stack to the end of the output list\n\nInput\nThe first input line has an integer n.\nThe second line has n integers: the contents of the input list.\nOutput\nPrint n integers: for each number the stack where it is moved (1 or 2).\nYou can print any valid solution. If there are no solutions, print \"IMPOSSIBLE\".\nConstraints\n\n1 \\le n \\le 2 \\cdot 10^5\n\nExample\nInput:\n5\n2 3 1 5 4\n\nOutput:\n1 2 1 1 2\n"
    },
    {
        "link": "/problemset/task/1701",
        "title": "Tree Isomorphism II",
        "content": "Given two (not rooted) trees, your task is to find out if they are isomorphic, i.e., it is possible to draw them so that they look the same.\nInput\nThe first input line has an integer t: the number of tests. Then, there are t tests described as follows:\nThe first line has an integer n: the number of nodes in both trees. The nodes are numbered 1,2,\\dots,n.\nThen, there are n-1 lines describing the edges of the first tree, and finally n-1 lines describing the edges of the second tree.\nOutput\nFor each test, print \"YES\", if the trees are isomorphic, and \"NO\" otherwise.\nConstraints\n\n1 \\le t \\le 1000\n2 \\le n \\le 10^5\nthe sum of all values of n is at most 10^5\n\nExample\nInput:\n2\n3\n1 2\n2 3\n1 2\n1 3\n3\n1 2\n2 3\n1 3\n3 2\n\nOutput:\nYES\nYES\n"
    },
    {
        "link": "/problemset/task/1705",
        "title": "Forbidden Cities",
        "content": "There are n cities and m roads between them. Kaaleppi is currently in city a and wants to travel to city b.\nHowever, there is a problem: Kaaleppi has recently robbed a bank in city c and can't enter the city, because the local police would catch him. Your task is to find out if there is a route from city a to city b that does not visit city c.\nAs an additional challenge, you have to process q queries where a, b and c vary.\nInput\nThe first input line has three integers n, m and q: the number of cities, roads and queries. The cities are numbered 1,2,\\dots,n.\nThen, there are m lines describing the roads. Each line has two integers a and b: there is a road between cities a and b. Each road is bidirectional.\nFinally, there are q lines describing the queries. Each line has three integers a, b and c: is there a route from city a to city b that does not visit city c?\nYou can assume that there is a route between any two cities.\nOutput\nFor each query, print \"YES\", if there is such a route, and \"NO\" otherwise.\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le q \\le 10^5\n1 \\le a,b,c \\le n\n\nExample\nInput:\n5 6 3\n1 2\n1 3\n2 3\n2 4\n3 4\n4 5\n1 4 2\n3 5 4\n3 5 2\n\nOutput:\nYES\nNO\nYES\n"
    },
    {
        "link": "/problemset/task/1741",
        "title": "Area of Rectangles",
        "content": "Given n rectangles, your task is to determine the total area of their union.\nInput\nThe first input line has an integer n: the number of rectangles.\nAfter that, there are n lines describing the rectangles. Each line has four integers x_1, y_1, x_2 and y_2: a rectangle begins at point (x_1,y_1) and ends at point (x_2,y_2).\nOutput\nPrint the total area covered by the rectangles.\nConstraints\n\n1 \\le n \\le 10^5\n-10^6 \\le x_1 &lt; x_2 \\le 10^6\n-10^6 \\le y_1 &lt; y_2 \\le 10^6\n\nExample\nInput:\n3\n1 3 4 5\n3 1 7 4\n5 3 8 6\n\nOutput:\n24\n"
    },
    {
        "link": "/problemset/task/2429",
        "title": "Grid Completion",
        "content": "Your task is to create an n \\times n grid whose each row and column has exactly one A and B. Some of the characters have already been placed. In how many ways can you complete the grid?\nInput\nThe first input line has an integer n: the size of the grid.\nAfter this, there are n lines that describe the grid. Each line has n characters: . means an empty square, and A and B show the characters already placed.\nYou can assume that every row and column has at most one A and B.\nOutput\nPrint one integer: the number of ways modulo 10^9+7.\nConstraints\n\n2 \\le n \\le 500\n\nExample\nInput:\n5\n.....\n..AB.\n.....\nB....\n...A.\n\nOutput:\n16\n"
    },
    {
        "link": "/problemset/task/1752",
        "title": "Creating Offices",
        "content": "There are n cities and n-1 roads between them. There is a unique route between any two cities, and their distance is the number of roads on that route.\nA company wants to have offices in some cities, but the distance between any two offices has to be at least d. What is the maximum number of offices they can have?\nInput\nThe first input line has two integers n and d: the number of cities and the minimum distance. The cities are numbered 1,2,\\dots,n.\nAfter this, there are n-1 lines describing the roads. Each line has two integers a and b: there is a road between cities a and b.\nOutput\nFirst print an integer k: the maximum number of offices. After that, print the cities which will have offices. You can print any valid solution.\nConstraints\n\n1 \\le n,d \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n5 3\n1 2\n2 3\n3 4\n3 5\n\nOutput:\n2\n1 4\n"
    },
    {
        "link": "/problemset/task/1075",
        "title": "Permutations II",
        "content": "A permutation of integers 1,2,\\ldots,n is called beautiful if there are no adjacent elements whose difference is 1.\nGiven n, your task is to count the number of beautiful permutations.\nInput\nThe only input line contains an integer n.\nOutput\nPrint the number of beautiful permutations of 1,2,\\ldots,n modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 1000\n\nExample\nInput:\n5\n\nOutput:\n14\n"
    },
    {
        "link": "/problemset/task/2415",
        "title": "Functional Graph Distribution",
        "content": "A functional graph is a directed graph where each node has outdegree 1. For example, here is a functional graph that has 9 nodes and 2 components:\n\nGiven n, your task is to calculate for each k=1 \\dots n the number of functional graphs that have n nodes and k components.\nInput\nThe only input line has an integer n: the number of nodes.\nOutput\nPrint n lines: for each k=1 \\dots n the number of graphs modulo 10^9+7.\nConstraints\n\n1 \\le n \\le 5000\n\nExample\nInput:\n3\n\nOutput:\n17\n9\n1\n"
    },
    {
        "link": "/problemset/task/1685",
        "title": "New Flight Routes",
        "content": "There are n cities and m flight connections between them. Your task is to add new flights so that it will be possible to travel from any city to any other city. What is the minimum number of new flights required?\nInput\nThe first input line has two integers n and m: the number of cities and flights. The cities are numbered 1,2,\\dots,n.\nAfter this, there are m lines describing the flights. Each line has two integers a and b: there is a flight from city a to city b. All flights are one-way flights.\nOutput\nFirst print an integer k: the required number of new flights. After this, print k lines describing the new flights. You can print any valid solution.\nConstraints\n\n1 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n\n\nExample\nInput:\n4 5\n1 2\n2 3\n3 1\n1 4\n3 4\n\nOutput:\n1\n4 2\n"
    },
    {
        "link": "/problemset/task/2418",
        "title": "Grid Path Construction",
        "content": "Given an n \\times m grid and two squares a=(y_1,x_1) and b=(y_2,x_2), create a path from a to b that visits each square exactly once.\nFor example, here is a path from a=(1,3) to b=(3,6) in a 4 \\times 7 grid:\n\nInput\nThe first input line has an integer t: the number of tests.\nAfter this, there are t lines that describe the tests. Each line has six integers n, m, y_1, x_1, y_2 and x_2.\nIn all tests 1 \\le y_1,y_2 \\le n and 1 \\le x_1,x_2 \\le m. In addition, y_1 \\neq y_2 or x_1 \\neq x_2.\nOutput\nPrint YES, if it is possible to construct a path, and NO otherwise.\nIf there is a path, also print its description which consists of characters U (up), D (down), L (left) and R (right). If there are several paths, you can print any of them.\nConstraints\n\n1 \\le t \\le 100\n1 \\le n \\le 50\n1 \\le m \\le 50\n\nExample\nInput:\n5\n1 3 1 1 1 3\n1 3 1 2 1 3\n2 2 1 1 2 2\n2 2 1 1 2 1\n4 7 1 3 3 6\n\nOutput:\nYES\nRR\nNO\nNO\nYES\nRDL\nYES\nRRRRDDDLLLLLLUUURDDRURDRURD\n"
    },
    {
        "title": "Maximum Number of Tasks You Can Assign",
        "content": "You have n tasks and m workers. Each task has a strength requirement stored in a 0-indexed integer array tasks, with the ith task requiring tasks[i] strength to complete. The strength of each worker is stored in a 0-indexed integer array workers, with the jth worker having workers[j] strength. Each worker can only be assigned to a single task and must have a strength greater than or equal to the task's strength requirement (i.e., workers[j] >= tasks[i]).\nAdditionally, you have pills magical pills that will increase a worker's strength by strength. You can decide which workers receive the magical pills, however, you may only give each worker at most one magical pill.\nGiven the 0-indexed integer arrays tasks and workers and the integers pills and strength, return the maximum number of tasks that can be completed.\n&nbsp;\nExample 1:\n\nInput: tasks = [3,2,1], workers = [0,3,3], pills = 1, strength = 1\nOutput: 3\nExplanation:\nWe can assign the magical pill and tasks as follows:\n- Give the magical pill to worker 0.\n- Assign worker 0 to task 2 (0 + 1 >= 1)\n- Assign worker 1 to task 1 (3 >= 2)\n- Assign worker 2 to task 0 (3 >= 3)\n\nExample 2:\n\nInput: tasks = [5,4], workers = [0,0,0], pills = 1, strength = 5\nOutput: 1\nExplanation:\nWe can assign the magical pill and tasks as follows:\n- Give the magical pill to worker 0.\n- Assign worker 0 to task 0 (0 + 5 >= 5)\n\nExample 3:\n\nInput: tasks = [10,15,30], workers = [0,10,10,10,10], pills = 3, strength = 10\nOutput: 2\nExplanation:\nWe can assign the magical pills and tasks as follows:\n- Give the magical pill to worker 0 and worker 1.\n- Assign worker 0 to task 0 (0 + 10 >= 10)\n- Assign worker 1 to task 1 (10 + 10 >= 15)\nThe last pill is not given because it will not make any worker strong enough for the last task.\n\n&nbsp;\nConstraints:\n\n\tn == tasks.length\n\tm == workers.length\n\t1 <= n, m <= 5 * 104\n\t0 <= pills <= m\n\t0 <= tasks[i], workers[j], strength <= 109"
    },
    {
        "title": "Find Good Days to Rob the Bank",
        "content": "You and a gang of thieves are planning on robbing a bank. You are given a 0-indexed integer array security, where security[i] is the number of guards on duty on the ith day. The days are numbered starting from 0. You are also given an integer time.\nThe ith day is a good day to rob the bank if:\n\n\tThere are at least time days before and after the ith day,\n\tThe number of guards at the bank for the time days before i are non-increasing, and\n\tThe number of guards at the bank for the time days after i are non-decreasing.\n\nMore formally, this means day i is a good day to rob the bank if and only if security[i - time] >= security[i - time + 1] >= ... >= security[i] <= ... <= security[i + time - 1] <= security[i + time].\nReturn a list of all days (0-indexed) that are good days to rob the bank. The order that the days are returned in does not matter.\n&nbsp;\nExample 1:\n\nInput: security = [5,3,3,3,5,6,2], time = 2\nOutput: [2,3]\nExplanation:\nOn day 2, we have security[0] >= security[1] >= security[2] <= security[3] <= security[4].\nOn day 3, we have security[1] >= security[2] >= security[3] <= security[4] <= security[5].\nNo other days satisfy this condition, so days 2 and 3 are the only good days to rob the bank.\n\nExample 2:\n\nInput: security = [1,1,1,1,1], time = 0\nOutput: [0,1,2,3,4]\nExplanation:\nSince time equals 0, every day is a good day to rob the bank, so return every day.\n\nExample 3:\n\nInput: security = [1,2,3,4,5,6], time = 2\nOutput: []\nExplanation:\nNo day has 2 days before it that have a non-increasing number of guards.\nThus, no day is a good day to rob the bank, so return an empty list.\n\n&nbsp;\nConstraints:\n\n\t1 <= security.length <= 105\n\t0 <= security[i], time <= 105"
    },
    {
        "title": "Parsing A Boolean Expression",
        "content": "A boolean expression is an expression that evaluates to either true or false. It can be in one of the following shapes:\n\n\t't' that evaluates to true.\n\t'f' that evaluates to false.\n\t'!(subExpr)' that evaluates to the logical NOT of the inner expression subExpr.\n\t'&(subExpr1, subExpr2, ..., subExprn)' that evaluates to the logical AND of the inner expressions subExpr1, subExpr2, ..., subExprn where n >= 1.\n\t'|(subExpr1, subExpr2, ..., subExprn)' that evaluates to the logical OR of the inner expressions subExpr1, subExpr2, ..., subExprn where n >= 1.\n\nGiven a string expression that represents a boolean expression, return the evaluation of that expression.\nIt is guaranteed that the given expression is valid and follows the given rules.\n&nbsp;\nExample 1:\n\nInput: expression = \"&(|(f))\"\nOutput: false\nExplanation: \nFirst, evaluate |(f) --> f. The expression is now \"&(f)\".\nThen, evaluate &(f) --> f. The expression is now \"f\".\nFinally, return false.\n\nExample 2:\n\nInput: expression = \"|(f,f,f,t)\"\nOutput: true\nExplanation: The evaluation of (false OR false OR false OR true) is true.\n\nExample 3:\n\nInput: expression = \"!(&(f,t))\"\nOutput: true\nExplanation: \nFirst, evaluate &(f,t) --> (false AND true) --> false --> f. The expression is now \"!(f)\".\nThen, evaluate !(f) --> NOT false --> true. We return true.\n\n&nbsp;\nConstraints:\n\n\t1 <= expression.length <= 2 * 104\n\texpression[i] is one following characters: '(', ')', '&', '|', '!', 't', 'f', and ','."
    },
    {
        "title": "Maximum Sum Obtained of Any Permutation",
        "content": "We have an array of integers, nums, and an array of requests where requests[i] = [starti, endi]. The ith request asks for the sum of nums[starti] + nums[starti + 1] + ... + nums[endi - 1] + nums[endi]. Both starti and endi are 0-indexed.\n\nReturn the maximum total sum of all requests among all permutations of nums.\n\nSince the answer may be too large, return it modulo 109 + 7.\n\n&nbsp;\nExample 1:\n\n\nInput: nums = [1,2,3,4,5], requests = [[1,3],[0,1]]\nOutput: 19\nExplanation: One permutation of nums is [2,1,3,4,5] with the following result: \nrequests[0] -&gt; nums[1] + nums[2] + nums[3] = 1 + 3 + 4 = 8\nrequests[1] -&gt; nums[0] + nums[1] = 2 + 1 = 3\nTotal sum: 8 + 3 = 11.\nA permutation with a higher total sum is [3,5,4,2,1] with the following result:\nrequests[0] -&gt; nums[1] + nums[2] + nums[3] = 5 + 4 + 2 = 11\nrequests[1] -&gt; nums[0] + nums[1] = 3 + 5  = 8\nTotal sum: 11 + 8 = 19, which is the best that you can do.\n\n\nExample 2:\n\n\nInput: nums = [1,2,3,4,5,6], requests = [[0,1]]\nOutput: 11\nExplanation: A permutation with the max total sum is [6,5,4,3,2,1] with request sums [11].\n\nExample 3:\n\n\nInput: nums = [1,2,3,4,5,10], requests = [[0,2],[1,3],[1,1]]\nOutput: 47\nExplanation: A permutation with the max total sum is [4,10,5,3,2,1] with request sums [19,18,10].\n\n&nbsp;\nConstraints:\n\n\n\tn == nums.length\n\t1 &lt;= n &lt;= 105\n\t0 &lt;= nums[i]&nbsp;&lt;= 105\n\t1 &lt;= requests.length &lt;=&nbsp;105\n\trequests[i].length == 2\n\t0 &lt;= starti&nbsp;&lt;= endi&nbsp;&lt;&nbsp;n\n\n"
    },
    {
        "title": "Count Fertile Pyramids in a Land",
        "content": "A farmer has a rectangular grid of land with m rows and n columns that can be divided into unit cells. Each cell is either fertile (represented by a 1) or barren (represented by a 0). All cells outside the grid are considered barren.\nA pyramidal plot of land can be defined as a set of cells with the following criteria:\n\n\tThe number of cells in the set has to be greater than 1 and all cells must be fertile.\n\tThe apex of a pyramid is the topmost cell of the pyramid. The height of a pyramid is the number of rows it covers. Let (r, c) be the apex of the pyramid, and its height be h. Then, the plot comprises of cells (i, j) where r <= i <= r + h - 1 and c - (i - r) <= j <= c + (i - r).\n\nAn inverse pyramidal plot of land can be defined as a set of cells with similar criteria:\n\n\tThe number of cells in the set has to be greater than 1 and all cells must be fertile.\n\tThe apex of an inverse pyramid is the bottommost cell of the inverse pyramid. The height of an inverse pyramid is the number of rows it covers. Let (r, c) be the apex of the pyramid, and its height be h. Then, the plot comprises of cells (i, j) where r - h + 1 <= i <= r and c - (r - i) <= j <= c + (r - i).\n\nSome examples of valid and invalid pyramidal (and inverse pyramidal) plots are shown below. Black cells indicate fertile cells.\nGiven a 0-indexed m x n binary matrix grid representing the farmland, return the total number of pyramidal and inverse pyramidal plots that can be found in grid.\n&nbsp;\nExample 1:\n\nInput: grid = [[0,1,1,0],[1,1,1,1]]\nOutput: 2\nExplanation: The 2 possible pyramidal plots are shown in blue and red respectively.\nThere are no inverse pyramidal plots in this grid. \nHence total number of pyramidal and inverse pyramidal plots is 2 + 0 = 2.\n\nExample 2:\n\nInput: grid = [[1,1,1],[1,1,1]]\nOutput: 2\nExplanation: The pyramidal plot is shown in blue, and the inverse pyramidal plot is shown in red. \nHence the total number of plots is 1 + 1 = 2.\n\nExample 3:\n\nInput: grid = [[1,1,1,1,0],[1,1,1,1,1],[1,1,1,1,1],[0,1,0,0,1]]\nOutput: 13\nExplanation: There are 7 pyramidal plots, 3 of which are shown in the 2nd and 3rd figures.\nThere are 6 inverse pyramidal plots, 2 of which are shown in the last figure.\nThe total number of plots is 7 + 6 = 13.\n\n&nbsp;\nConstraints:\n\n\tm == grid.length\n\tn == grid[i].length\n\t1 <= m, n <= 1000\n\t1 <= m * n <= 105\n\tgrid[i][j] is either 0 or 1."
    },
    {
        "title": "Find the Score of All Prefixes of an Array",
        "content": "We define the conversion array conver of an array arr as follows:\n\n\tconver[i] = arr[i] + max(arr[0..i]) where max(arr[0..i]) is the maximum value of arr[j] over 0 <= j <= i.\n\nWe also define the score of an array arr as the sum of the values of the conversion array of arr.\nGiven a 0-indexed integer array nums of length n, return an array ans of length n where ans[i] is the score of the prefix nums[0..i].\n&nbsp;\nExample 1:\n\nInput: nums = [2,3,7,5,10]\nOutput: [4,10,24,36,56]\nExplanation: \nFor the prefix [2], the conversion array is [4] hence the score is 4\nFor the prefix [2, 3], the conversion array is [4, 6] hence the score is 10\nFor the prefix [2, 3, 7], the conversion array is [4, 6, 14] hence the score is 24\nFor the prefix [2, 3, 7, 5], the conversion array is [4, 6, 14, 12] hence the score is 36\nFor the prefix [2, 3, 7, 5, 10], the conversion array is [4, 6, 14, 12, 20] hence the score is 56\n\nExample 2:\n\nInput: nums = [1,1,2,4,8,16]\nOutput: [2,4,8,16,32,64]\nExplanation: \nFor the prefix [1], the conversion array is [2] hence the score is 2\nFor the prefix [1, 1], the conversion array is [2, 2] hence the score is 4\nFor the prefix [1, 1, 2], the conversion array is [2, 2, 4] hence the score is 8\nFor the prefix [1, 1, 2, 4], the conversion array is [2, 2, 4, 8] hence the score is 16\nFor the prefix [1, 1, 2, 4, 8], the conversion array is [2, 2, 4, 8, 16] hence the score is 32\nFor the prefix [1, 1, 2, 4, 8, 16], the conversion array is [2, 2, 4, 8, 16, 32] hence the score is 64\n\n&nbsp;\nConstraints:\n\n\t1 <= nums.length <= 105\n\t1 <= nums[i] <= 109"
    },
    {
        "title": "Count Distinct Numbers on Board",
        "content": "You are given a positive integer n, that is initially placed on a board. Every day, for 109 days, you perform the following procedure:\n\n\tFor each number x present on the board, find all numbers 1 <= i <= n such that x % i == 1.\n\tThen, place those numbers on the board.\n\nReturn the number of distinct integers present on the board after 109 days have elapsed.\nNote:\n\n\tOnce a number is placed on the board, it will remain on it until the end.\n\t%&nbsp;stands&nbsp;for the modulo operation. For example,&nbsp;14 % 3 is 2.\n\n&nbsp;\nExample 1:\n\nInput: n = 5\nOutput: 4\nExplanation: Initially, 5 is present on the board. \nThe next day, 2 and 4 will be added since 5 % 2 == 1 and 5 % 4 == 1. \nAfter that day, 3 will be added to the board because 4 % 3 == 1. \nAt the end of a billion days, the distinct numbers on the board will be 2, 3, 4, and 5. \n\nExample 2:\n\nInput: n = 3\nOutput: 2\nExplanation: \nSince 3 % 2 == 1, 2 will be added to the board. \nAfter a billion days, the only two distinct numbers on the board are 2 and 3. \n\n&nbsp;\nConstraints:\n\n\t1 <= n <= 100"
    },
    {
        "title": "Smallest Even Multiple",
        "content": "Given a positive integer n, return the smallest positive integer that is a multiple of both 2 and n.\n&nbsp;\nExample 1:\n\nInput: n = 5\nOutput: 10\nExplanation: The smallest multiple of both 5 and 2 is 10.\n\nExample 2:\n\nInput: n = 6\nOutput: 6\nExplanation: The smallest multiple of both 6 and 2 is 6. Note that a number is a multiple of itself.\n\n&nbsp;\nConstraints:\n\n\t1 <= n <= 150"
    },
    {
        "title": "Minimum Cost of Buying Candies With Discount",
        "content": "A shop is selling candies at a discount. For every two candies sold, the shop gives a third candy for free.\nThe customer can choose any candy to take away for free as long as the cost of the chosen candy is less than or equal to the minimum cost of the two candies bought.\n\n\tFor example, if there are 4 candies with costs 1, 2, 3, and 4, and the customer buys candies with costs 2 and 3, they&nbsp;can take the candy with cost 1 for free, but not the candy with cost 4.\n\nGiven a 0-indexed integer array cost, where cost[i] denotes the cost of the ith candy, return the minimum cost of buying all the candies.\n&nbsp;\nExample 1:\n\nInput: cost = [1,2,3]\nOutput: 5\nExplanation: We buy the candies with costs 2 and 3, and take the candy with cost 1 for free.\nThe total cost of buying all candies is 2 + 3 = 5. This is the only way we can buy the candies.\nNote that we cannot buy candies with costs 1 and 3, and then take the candy with cost 2 for free.\nThe cost of the free candy has to be less than or equal to the minimum cost of the purchased candies.\n\nExample 2:\n\nInput: cost = [6,5,7,9,2,2]\nOutput: 23\nExplanation: The way in which we can get the minimum cost is described below:\n- Buy candies with costs 9 and 7\n- Take the candy with cost 6 for free\n- We buy candies with costs 5 and 2\n- Take the last remaining candy with cost 2 for free\nHence, the minimum cost to buy all candies is 9 + 7 + 5 + 2 = 23.\n\nExample 3:\n\nInput: cost = [5,5]\nOutput: 10\nExplanation: Since there are only 2 candies, we buy both of them. There is not a third candy we can take for free.\nHence, the minimum cost to buy all candies is 5 + 5 = 10.\n\n&nbsp;\nConstraints:\n\n\t1 <= cost.length <= 100\n\t1 <= cost[i] <= 100"
    },
    {
        "title": "Find Consecutive Integers from a Data Stream",
        "content": "For a stream of integers, implement a data structure that checks if the last k integers parsed in the stream are equal to value.\nImplement the DataStream class:\n\n\tDataStream(int value, int k) Initializes the object with an empty integer stream and the two integers value and k.\n\tboolean consec(int num) Adds num to the stream of integers. Returns true if the last k integers are equal to value, and false otherwise. If there are less than k integers, the condition does not hold true, so returns false.\n\n&nbsp;\nExample 1:\n\nInput\n[\"DataStream\", \"consec\", \"consec\", \"consec\", \"consec\"]\n[[4, 3], [4], [4], [4], [3]]\nOutput\n[null, false, false, true, false]\nExplanation\nDataStream dataStream = new DataStream(4, 3); //value = 4, k = 3 \ndataStream.consec(4); // Only 1 integer is parsed, so returns False. \ndataStream.consec(4); // Only 2 integers are parsed.\n                      // Since 2 is less than k, returns False. \ndataStream.consec(4); // The 3 integers parsed are all equal to value, so returns True. \ndataStream.consec(3); // The last k integers parsed in the stream are [4,4,3].\n                      // Since 3 is not equal to value, it returns False.\n\n&nbsp;\nConstraints:\n\n\t1 <= value, num <= 109\n\t1 <= k <= 105\n\tAt most 105 calls will be made to consec."
    },
    {
        "title": "Closest Nodes Queries in a Binary Search Tree",
        "content": "You are given the root of a binary search tree and an array queries of size n consisting of positive integers.\nFind a 2D array answer of size n where answer[i] = [mini, maxi]:\n\n\tmini is the largest value in the tree that is smaller than or equal to queries[i]. If a such value does not exist, add -1 instead.\n\tmaxi is the smallest value in the tree that is greater than or equal to queries[i]. If a such value does not exist, add -1 instead.\n\nReturn the array answer.\n&nbsp;\nExample 1:\n\nInput: root = [6,2,13,1,4,9,15,null,null,null,null,null,null,14], queries = [2,5,16]\nOutput: [[2,2],[4,6],[15,-1]]\nExplanation: We answer the queries in the following way:\n- The largest number that is smaller or equal than 2 in the tree is 2, and the smallest number that is greater or equal than 2 is still 2. So the answer for the first query is [2,2].\n- The largest number that is smaller or equal than 5 in the tree is 4, and the smallest number that is greater or equal than 5 is 6. So the answer for the second query is [4,6].\n- The largest number that is smaller or equal than 16 in the tree is 15, and the smallest number that is greater or equal than 16 does not exist. So the answer for the third query is [15,-1].\n\nExample 2:\n\nInput: root = [4,null,9], queries = [3]\nOutput: [[-1,4]]\nExplanation: The largest number that is smaller or equal to 3 in the tree does not exist, and the smallest number that is greater or equal to 3 is 4. So the answer for the query is [-1,4].\n\n&nbsp;\nConstraints:\n\n\tThe number of nodes in the tree is in the range [2, 105].\n\t1 <= Node.val <= 106\n\tn == queries.length\n\t1 <= n <= 105\n\t1 <= queries[i] <= 106"
    },
    {
        "title": "Find the Score of All Prefixes of an Array",
        "content": "We define the conversion array conver of an array arr as follows:\n\n\tconver[i] = arr[i] + max(arr[0..i]) where max(arr[0..i]) is the maximum value of arr[j] over 0 <= j <= i.\n\nWe also define the score of an array arr as the sum of the values of the conversion array of arr.\nGiven a 0-indexed integer array nums of length n, return an array ans of length n where ans[i] is the score of the prefix nums[0..i].\n&nbsp;\nExample 1:\n\nInput: nums = [2,3,7,5,10]\nOutput: [4,10,24,36,56]\nExplanation: \nFor the prefix [2], the conversion array is [4] hence the score is 4\nFor the prefix [2, 3], the conversion array is [4, 6] hence the score is 10\nFor the prefix [2, 3, 7], the conversion array is [4, 6, 14] hence the score is 24\nFor the prefix [2, 3, 7, 5], the conversion array is [4, 6, 14, 12] hence the score is 36\nFor the prefix [2, 3, 7, 5, 10], the conversion array is [4, 6, 14, 12, 20] hence the score is 56\n\nExample 2:\n\nInput: nums = [1,1,2,4,8,16]\nOutput: [2,4,8,16,32,64]\nExplanation: \nFor the prefix [1], the conversion array is [2] hence the score is 2\nFor the prefix [1, 1], the conversion array is [2, 2] hence the score is 4\nFor the prefix [1, 1, 2], the conversion array is [2, 2, 4] hence the score is 8\nFor the prefix [1, 1, 2, 4], the conversion array is [2, 2, 4, 8] hence the score is 16\nFor the prefix [1, 1, 2, 4, 8], the conversion array is [2, 2, 4, 8, 16] hence the score is 32\nFor the prefix [1, 1, 2, 4, 8, 16], the conversion array is [2, 2, 4, 8, 16, 32] hence the score is 64\n\n&nbsp;\nConstraints:\n\n\t1 <= nums.length <= 105\n\t1 <= nums[i] <= 109"
    },
    {
        "title": "Design Cancellable Function",
        "content": "Sometimes you have a long running task, and you may wish to cancel it before it completes. To help with this goal, write a function&nbsp;cancellable that accepts a generator object and returns an array of two values: a cancel function and a promise.\n\nYou may assume the generator function will only&nbsp;yield promises. It is your function&#39;s responsibility to pass the values resolved by the promise back to the generator. If the promise rejects, your function should throw that&nbsp;error back to the generator.\n\nIf the cancel callback is called before the generator is done, your function should throw an error back to the generator. That error should be the string&nbsp;&quot;Cancelled&quot;&nbsp;(Not an Error&nbsp;object). If the error was caught, the returned&nbsp;promise should resolve with the next value that was yielded or returned. Otherwise, the promise should reject with the thrown error. No more code should be executed.\n\nWhen the generator is done, the promise your function returned should resolve the value the generator returned. If, however, the generator throws an error, the returned promise should reject with the error.\n\nAn example of how your code would be used:\n\n\nfunction* tasks() {\n  const val = yield new Promise(resolve =&gt; resolve(2 + 2));\n  yield new Promise(resolve =&gt; setTimeout(resolve, 100));\n  return val + 1; // calculation shouldn&#39;t be done.\n}\nconst [cancel, promise] = cancellable(tasks());\nsetTimeout(cancel, 50);\npromise.catch(console.log); // logs &quot;Cancelled&quot; at t=50ms\n\n\nIf&nbsp;instead&nbsp;cancel() was not called or was called after t=100ms, the promise would&nbsp;have resolved&nbsp;5.\n\n&nbsp;\nExample 1:\n\n\nInput: \ngeneratorFunction = function*() { \n&nbsp; return 42; \n}\ncancelledAt = 100\nOutput: {&quot;resolved&quot;: 42}\nExplanation:\nconst generator = generatorFunction();\nconst [cancel, promise] = cancellable(generator);\nsetTimeout(cancel, 100);\npromise.then(console.log); // resolves 42 at t=0ms\n\nThe generator immediately yields 42 and finishes. Because of that, the returned promise immediately resolves 42. Note that cancelling a finished generator does nothing.\n\n\nExample 2:\n\n\nInput:\ngeneratorFunction = function*() { \n&nbsp; const msg = yield new Promise(res =&gt; res(&quot;Hello&quot;)); \n&nbsp; throw `Error: ${msg}`; \n}\ncancelledAt = null\nOutput: {&quot;rejected&quot;: &quot;Error: Hello&quot;}\nExplanation:\nA promise is yielded. The function handles this by waiting for it to resolve and then passes the resolved value back to the generator. Then an error is thrown which has the effect of causing the promise to reject with the same thrown error.\n\n\nExample 3:\n\n\nInput: \ngeneratorFunction = function*() { \n&nbsp; yield new Promise(res =&gt; setTimeout(res, 200)); \n&nbsp; return &quot;Success&quot;; \n}\ncancelledAt = 100\nOutput: {&quot;rejected&quot;: &quot;Cancelled&quot;}\nExplanation:\nWhile the function is waiting for the yielded promise to resolve, cancel() is called. This causes an error message to be sent back to the generator. Since this error is uncaught, the returned promise rejected with this error.\n\n\nExample 4:\n\n\nInput:\ngeneratorFunction = function*() { \n&nbsp; let result = 0; \n&nbsp; yield new Promise(res =&gt; setTimeout(res, 100));\n&nbsp; result += yield new Promise(res =&gt; res(1)); \n&nbsp; yield new Promise(res =&gt; setTimeout(res, 100)); \n&nbsp; result += yield new Promise(res =&gt; res(1)); \n&nbsp; return result;\n}\ncancelledAt = null\nOutput: {&quot;resolved&quot;: 2}\nExplanation:\n4 promises are yielded. Two of those promises have their values added to the result. After 200ms, the generator finishes with a value of 2, and that value is resolved by the returned promise.\n\n\nExample 5:\n\n\nInput: \ngeneratorFunction = function*() { \n&nbsp; let result = 0; \n&nbsp; try { \n&nbsp;   yield new Promise(res =&gt; setTimeout(res, 100)); \n&nbsp;   result += yield new Promise(res =&gt; res(1)); \n&nbsp;   yield new Promise(res =&gt; setTimeout(res, 100)); \n&nbsp;   result += yield new Promise(res =&gt; res(1)); \n&nbsp; } catch(e) { \n&nbsp;   return result; \n&nbsp; } \n&nbsp; return result; \n}\ncancelledAt = 150\nOutput: {&quot;resolved&quot;: 1}\nExplanation:\nThe first two yielded promises resolve and cause the result to increment. However, at t=150ms, the generator is cancelled. The error sent to the generator is caught and the result is returned and finally resolved by the returned promise.\n\n\nExample 6:\n\n\nInput: \ngeneratorFunction = function*() { \n&nbsp; try { \n&nbsp;   yield new Promise((resolve, reject) =&gt; reject(&quot;Promise Rejected&quot;)); \n&nbsp; } catch(e) { \n&nbsp;   let a = yield new Promise(resolve =&gt; resolve(2));\n    let b = yield new Promise(resolve =&gt; resolve(2)); \n&nbsp;   return a + b; \n&nbsp; }; \n}\ncancelledAt = null\nOutput: {&quot;resolved&quot;: 4}\nExplanation:\nThe first yielded promise immediately rejects. This error is caught. Because the generator hasn&#39;t been cancelled, execution continues as usual. It ends up resolving 2 + 2 = 4.\n\n&nbsp;\nConstraints:\n\n\n\tcancelledAt == null or 0 &lt;= cancelledAt &lt;= 1000\n\tgeneratorFunction returns a generator object\n\n"
    },
    {
        "title": "Counter II",
        "content": "Write a function&nbsp;createCounter. It should accept an initial integer&nbsp;init. It should return an object with three functions.\n\nThe three functions are:\n\n\n\tincrement()&nbsp;increases&nbsp;the current value by 1 and then returns it.\n\tdecrement()&nbsp;reduces the current value by 1 and then returns it.\n\treset()&nbsp;sets the current value to&nbsp;init&nbsp;and then returns it.\n\n\n&nbsp;\nExample 1:\n\n\nInput: init = 5, calls = [&quot;increment&quot;,&quot;reset&quot;,&quot;decrement&quot;]\nOutput: [6,5,4]\nExplanation:\nconst counter = createCounter(5);\ncounter.increment(); // 6\ncounter.reset(); // 5\ncounter.decrement(); // 4\n\n\nExample 2:\n\n\nInput: init = 0, calls = [&quot;increment&quot;,&quot;increment&quot;,&quot;decrement&quot;,&quot;reset&quot;,&quot;reset&quot;]\nOutput: [1,2,1,0,0]\nExplanation:\nconst counter = createCounter(0);\ncounter.increment(); // 1\ncounter.increment(); // 2\ncounter.decrement(); // 1\ncounter.reset(); // 0\ncounter.reset(); // 0\n\n\n&nbsp;\nConstraints:\n\n\n\t-1000 &lt;= init &lt;= 1000\n\t0 &lt;= calls.length &lt;= 1000\n\tcalls[i] is one of &quot;increment&quot;, &quot;decrement&quot; and&nbsp;&quot;reset&quot;\n\n"
    },
    {
        "title": "Count the Number of Complete Components",
        "content": "You are given an integer n. There is an undirected graph with n vertices, numbered from 0 to n - 1. You are given a 2D integer array edges where edges[i] = [ai, bi] denotes that there exists an undirected edge connecting vertices ai and bi.\n\nReturn the number of complete connected components of the graph.\n\nA connected component is a subgraph of a graph in which there exists a path between any two vertices, and no vertex of the subgraph shares an edge with a vertex outside of the subgraph.\n\nA connected component is said to be complete if there exists an edge between every pair of its vertices.\n\n&nbsp;\nExample 1:\n\n\n\n\nInput: n = 6, edges = [[0,1],[0,2],[1,2],[3,4]]\nOutput: 3\nExplanation: From the picture above, one can see that all of the components of this graph are complete.\n\n\nExample 2:\n\n\n\n\nInput: n = 6, edges = [[0,1],[0,2],[1,2],[3,4],[3,5]]\nOutput: 1\nExplanation: The component containing vertices 0, 1, and 2 is complete since there is an edge between every pair of two vertices. On the other hand, the component containing vertices 3, 4, and 5 is not complete since there is no edge between vertices 4 and 5. Thus, the number of complete components in this graph is 1.\n\n\n&nbsp;\nConstraints:\n\n\n\t1 &lt;= n &lt;= 50\n\t0 &lt;= edges.length &lt;= n * (n - 1) / 2\n\tedges[i].length == 2\n\t0 &lt;= ai, bi &lt;= n - 1\n\tai != bi\n\tThere are no repeated edges.\n\n"
    },
    {
        "title": "Minimum Cost to Make All Characters Equal",
        "content": "You are given a 0-indexed binary string s of length n on which you can apply two types of operations:\n\n\n\tChoose an index i and invert all characters from&nbsp;index 0 to index i&nbsp;(both inclusive), with a cost of i + 1\n\tChoose an index i and invert all characters&nbsp;from&nbsp;index i to index n - 1&nbsp;(both inclusive), with a cost of n - i\n\n\nReturn the minimum cost to make all characters of the string equal.\n\nInvert a character means&nbsp;if its value is &#39;0&#39; it becomes &#39;1&#39; and vice-versa.\n\n&nbsp;\nExample 1:\n\n\nInput: s = &quot;0011&quot;\nOutput: 2\nExplanation: Apply the second operation with i = 2 to obtain s = &quot;0000&quot; for a cost of 2. It can be shown that 2 is the minimum cost to make all characters equal.\n\n\nExample 2:\n\n\nInput: s = &quot;010101&quot;\nOutput: 9\nExplanation: Apply the first operation with i = 2 to obtain s = &quot;101101&quot; for a cost of 3.\nApply the first operation with i = 1 to obtain s = &quot;011101&quot; for a cost of 2. \nApply the first operation with i = 0 to obtain s = &quot;111101&quot; for a cost of 1. \nApply the second operation with i = 4 to obtain s = &quot;111110&quot; for a cost of 2.\nApply the second operation with i = 5 to obtain s = &quot;111111&quot; for a cost of 1. \nThe total cost to make all characters equal is 9. It can be shown that 9 is the minimum cost to make all characters equal.\n\n\n&nbsp;\nConstraints:\n\n\n\t1 &lt;= s.length == n &lt;= 105\n\ts[i] is either &#39;0&#39; or &#39;1&#39;\n\n"
    },
    {
        "title": "Check if The Number is Fascinating",
        "content": "You are given an integer n that consists of exactly 3 digits.\n\nWe call the number n fascinating if, after the following modification, the resulting number contains all the digits from 1 to 9 exactly once and does not contain any 0&#39;s:\n\n\n\tConcatenate n with the numbers 2 * n and 3 * n.\n\n\nReturn true if n is fascinating, or false otherwise.\n\nConcatenating two numbers means joining them together. For example, the concatenation of 121 and 371 is 121371.\n\n&nbsp;\nExample 1:\n\n\nInput: n = 192\nOutput: true\nExplanation: We concatenate the numbers n = 192 and 2 * n = 384 and 3 * n = 576. The resulting number is 192384576. This number contains all the digits from 1 to 9 exactly once.\n\n\nExample 2:\n\n\nInput: n = 100\nOutput: false\nExplanation: We concatenate the numbers n = 100 and 2 * n = 200 and 3 * n = 300. The resulting number is 100200300. This number does not satisfy any of the conditions.\n\n\n&nbsp;\nConstraints:\n\n\n\t100 &lt;= n &lt;= 999\n\n"
    },
    {
        "title": "Total Distance Traveled",
        "content": "A truck has two fuel tanks. You are given two integers, mainTank representing the fuel present in the main tank in liters and additionalTank representing the fuel present in the additional tank in liters.\n\nThe truck has a mileage of 10 km per liter. Whenever 5 liters of fuel get&nbsp;used up in the main tank,&nbsp;if the additional tank has at least 1 liters of fuel, 1 liters of fuel will be transferred from the additional tank to the main tank.\n\nReturn the maximum distance which can be traveled.\n\nNote: Injection from the additional tank is not continuous. It happens suddenly and immediately for every 5 liters consumed.\n\n&nbsp;\nExample 1:\n\n\nInput: mainTank = 5, additionalTank = 10\nOutput: 60\nExplanation: \nAfter spending 5 litre of fuel, fuel remaining is (5 - 5 + 1) = 1 litre and distance traveled is 50km.\nAfter spending another 1 litre of fuel, no fuel gets injected in the main tank and the main tank becomes empty.\nTotal distance traveled is 60km.\n\n\nExample 2:\n\n\nInput: mainTank = 1, additionalTank = 2\nOutput: 10\nExplanation: \nAfter spending 1 litre of fuel, the main tank becomes empty.\nTotal distance traveled is 10km.\n\n\n\n&nbsp;\nConstraints:\n\n\n\t1 &lt;= mainTank, additionalTank &lt;= 100\n\n"
    },
    {
        "title": "Robot Collisions",
        "content": "There are n 1-indexed robots, each having a position on a line, health, and movement direction.\n\nYou are given 0-indexed integer arrays positions, healths, and a string directions (directions[i] is either &#39;L&#39; for left or &#39;R&#39; for right). All integers in positions are unique.\n\nAll robots start moving on the line simultaneously at the same speed in their given directions. If two robots ever share the same position while moving, they will collide.\n\nIf two robots collide, the robot with lower health is removed from the line, and the health of the other robot decreases by one. The surviving robot continues in the same direction it was going. If both robots have the same health, they are both removed from the line.\n\nYour task is to determine the health of the robots that survive the collisions, in the same order that the robots were given, i.e. final heath of robot 1 (if survived), final health of robot 2 (if survived), and so on. If there are no survivors, return an empty array.\n\nReturn an array containing the health of the remaining robots (in the order they were given in the input), after no further collisions can occur.\n\nNote: The positions may be unsorted.\n\n&nbsp;\n\n&nbsp;\nExample 1:\n\n\n\n\nInput: positions = [5,4,3,2,1], healths = [2,17,9,15,10], directions = &quot;RRRRR&quot;\nOutput: [2,17,9,15,10]\nExplanation: No collision occurs in this example, since all robots are moving in the same direction. So, the health of the robots in order from the first robot is returned, [2, 17, 9, 15, 10].\n\n\nExample 2:\n\n\n\n\nInput: positions = [3,5,2,6], healths = [10,10,15,12], directions = &quot;RLRL&quot;\nOutput: [14]\nExplanation: There are 2 collisions in this example. Firstly, robot 1 and robot 2 will collide, and since both have the same health, they will be removed from the line. Next, robot 3 and robot 4 will collide and since robot 4&#39;s health is smaller, it gets removed, and robot 3&#39;s health becomes 15 - 1 = 14. Only robot 3 remains, so we return [14].\n\n\nExample 3:\n\n\n\n\nInput: positions = [1,2,5,6], healths = [10,10,11,11], directions = &quot;RLRL&quot;\nOutput: []\nExplanation: Robot 1 and robot 2 will collide and since both have the same health, they are both removed. Robot 3 and 4 will collide and since both have the same health, they are both removed. So, we return an empty array, [].\n\n&nbsp;\nConstraints:\n\n\n\t1 &lt;= positions.length == healths.length == directions.length == n &lt;= 105\n\t1 &lt;= positions[i], healths[i] &lt;= 109\n\tdirections[i] == &#39;L&#39; or directions[i] == &#39;R&#39;\n\tAll values in positions are distinct\n\n"
    },
    {
        "title": "Prime Pairs With Target Sum",
        "content": "You are given an integer n. We say that two integers x and y form a prime number pair if:\n\n\n\t1 &lt;= x &lt;= y &lt;= n\n\tx + y == n\n\tx and y are prime numbers\n\n\nReturn the 2D sorted list of prime number pairs [xi, yi]. The list should be sorted in increasing order of xi. If there are no prime number pairs at all, return an empty array.\n\nNote: A prime number is a natural number greater than 1 with only two factors, itself and 1.\n\n&nbsp;\nExample 1:\n\n\nInput: n = 10\nOutput: [[3,7],[5,5]]\nExplanation: In this example, there are two prime pairs that satisfy the criteria. \nThese pairs are [3,7] and [5,5], and we return them in the sorted order as described in the problem statement.\n\n\nExample 2:\n\n\nInput: n = 2\nOutput: []\nExplanation: We can show that there is no prime number pair that gives a sum of 2, so we return an empty array. \n\n\n&nbsp;\nConstraints:\n\n\n\t1 &lt;= n &lt;= 106\n\n"
    },
    {
        "title": "Longest Non-decreasing Subarray From Two Arrays",
        "content": "You are given two 0-indexed integer arrays nums1 and nums2 of length n.\n\nLet&#39;s define another 0-indexed integer array, nums3, of length n. For each index i in the range [0, n - 1], you can assign either nums1[i] or nums2[i] to nums3[i].\n\nYour task is to maximize the length of the longest non-decreasing subarray in nums3 by choosing its values optimally.\n\nReturn an integer representing the length of the longest non-decreasing subarray in nums3.\n\nNote: A subarray is a contiguous non-empty sequence of elements within an array.\n\n&nbsp;\nExample 1:\n\n\nInput: nums1 = [2,3,1], nums2 = [1,2,1]\nOutput: 2\nExplanation: One way to construct nums3 is: \nnums3 = [nums1[0], nums2[1], nums2[2]] =&gt; [2,2,1]. \nThe subarray starting from index 0 and ending at index 1, [2,2], forms a non-decreasing subarray of length 2. \nWe can show that 2 is the maximum achievable length.\n\nExample 2:\n\n\nInput: nums1 = [1,3,2,1], nums2 = [2,2,3,4]\nOutput: 4\nExplanation: One way to construct nums3 is: \nnums3 = [nums1[0], nums2[1], nums2[2], nums2[3]] =&gt; [1,2,3,4]. \nThe entire array forms a non-decreasing subarray of length 4, making it the maximum achievable length.\n\n\nExample 3:\n\n\nInput: nums1 = [1,1], nums2 = [2,2]\nOutput: 2\nExplanation: One way to construct nums3 is: \nnums3 = [nums1[0], nums1[1]] =&gt; [1,1]. \nThe entire array forms a non-decreasing subarray of length 2, making it the maximum achievable length.\n\n\n&nbsp;\nConstraints:\n\n\n\t1 &lt;= nums1.length == nums2.length == n &lt;= 105\n\t1 &lt;= nums1[i], nums2[i] &lt;= 109\n\n"
    },
    {
        "title": "Split Strings by Separator",
        "content": "Given an array of strings words and a character separator, split each string in words by separator.\n\nReturn an array of strings containing the new strings formed after the splits, excluding empty strings.\n\nNotes\n\n\n\tseparator is used to determine where the split should occur, but it is not included as part of the resulting strings.\n\tA split may result in more than two strings.\n\tThe resulting strings must maintain the same order as they were initially given.\n\n\n&nbsp;\nExample 1:\n\n\nInput: words = [&quot;one.two.three&quot;,&quot;four.five&quot;,&quot;six&quot;], separator = &quot;.&quot;\nOutput: [&quot;one&quot;,&quot;two&quot;,&quot;three&quot;,&quot;four&quot;,&quot;five&quot;,&quot;six&quot;]\nExplanation: In this example we split as follows:\n\n&quot;one.two.three&quot; splits into &quot;one&quot;, &quot;two&quot;, &quot;three&quot;\n&quot;four.five&quot; splits into &quot;four&quot;, &quot;five&quot;\n&quot;six&quot; splits into &quot;six&quot; \n\nHence, the resulting array is [&quot;one&quot;,&quot;two&quot;,&quot;three&quot;,&quot;four&quot;,&quot;five&quot;,&quot;six&quot;].\n\nExample 2:\n\n\nInput: words = [&quot;$easy$&quot;,&quot;$problem$&quot;], separator = &quot;$&quot;\nOutput: [&quot;easy&quot;,&quot;problem&quot;]\nExplanation: In this example we split as follows: \n\n&quot;$easy$&quot; splits into &quot;easy&quot; (excluding empty strings)\n&quot;$problem$&quot; splits into &quot;problem&quot; (excluding empty strings)\n\nHence, the resulting array is [&quot;easy&quot;,&quot;problem&quot;].\n\n\nExample 3:\n\n\nInput: words = [&quot;|||&quot;], separator = &quot;|&quot;\nOutput: []\nExplanation: In this example the resulting split of &quot;|||&quot; will contain only empty strings, so we return an empty array []. \n\n&nbsp;\nConstraints:\n\n\n\t1 &lt;= words.length &lt;= 100\n\t1 &lt;= words[i].length &lt;= 20\n\tcharacters in words[i] are either lowercase English letters or characters from the string &quot;.,|$#@&quot; (excluding the quotes)\n\tseparator is a character from the string &quot;.,|$#@&quot; (excluding the quotes)\n\n"
    },
    {
        "title": "Maximum Elegance of a K-Length Subsequence",
        "content": "You are given a 0-indexed 2D integer array items of length n and an integer k.\n\nitems[i] = [profiti, categoryi], where profiti and categoryi denote the profit and category of the ith item respectively.\n\nLet&#39;s define the elegance of a subsequence of items as total_profit + distinct_categories2, where total_profit is the sum of all profits in the subsequence, and distinct_categories is the number of distinct categories from all the categories in the selected subsequence.\n\nYour task is to find the maximum elegance from all subsequences of size k in items.\n\nReturn an integer denoting the maximum elegance of a subsequence of items with size exactly k.\n\nNote: A subsequence of an array is a new array generated from the original array by deleting some elements (possibly none) without changing the remaining elements&#39; relative order.\n\n&nbsp;\nExample 1:\n\n\nInput: items = [[3,2],[5,1],[10,1]], k = 2\nOutput: 17\nExplanation: In this example, we have to select a subsequence of size 2.\nWe can select items[0] = [3,2] and items[2] = [10,1].\nThe total profit in this subsequence is 3 + 10 = 13, and the subsequence contains 2 distinct categories [2,1].\nHence, the elegance is 13 + 22 = 17, and we can show that it is the maximum achievable elegance. \n\n\nExample 2:\n\n\nInput: items = [[3,1],[3,1],[2,2],[5,3]], k = 3\nOutput: 19\nExplanation: In this example, we have to select a subsequence of size 3. \nWe can select items[0] = [3,1], items[2] = [2,2], and items[3] = [5,3]. \nThe total profit in this subsequence is 3 + 2 + 5 = 10, and the subsequence contains 3 distinct categories [1,2,3]. \nHence, the elegance is 10 + 32 = 19, and we can show that it is the maximum achievable elegance.\n\nExample 3:\n\n\nInput: items = [[1,1],[2,1],[3,1]], k = 3\nOutput: 7\nExplanation: In this example, we have to select a subsequence of size 3. \nWe should select all the items. \nThe total profit will be 1 + 2 + 3 = 6, and the subsequence contains 1 distinct category [1]. \nHence, the maximum elegance is 6 + 12 = 7.  \n\n&nbsp;\nConstraints:\n\n\n\t1 &lt;= items.length == n &lt;= 105\n\titems[i].length == 2\n\titems[i][0] == profiti\n\titems[i][1] == categoryi\n\t1 &lt;= profiti &lt;= 109\n\t1 &lt;= categoryi &lt;= n \n\t1 &lt;= k &lt;= n\n\n"
    },
    {
        "title": "Furthest Point From Origin",
        "content": "You are given a string moves of length n consisting only of characters &#39;L&#39;, &#39;R&#39;, and &#39;_&#39;. The string represents your movement on a number line starting from the origin 0.\n\nIn the ith move, you can choose one of the following directions:\n\n\n\tmove to the left if moves[i] = &#39;L&#39; or moves[i] = &#39;_&#39;\n\tmove to the right if moves[i] = &#39;R&#39; or moves[i] = &#39;_&#39;\n\n\nReturn the distance from the origin of the furthest point you can get to after n moves.\n\n&nbsp;\nExample 1:\n\n\nInput: moves = &quot;L_RL__R&quot;\nOutput: 3\nExplanation: The furthest point we can reach from the origin 0 is point -3 through the following sequence of moves &quot;LLRLLLR&quot;.\n\n\nExample 2:\n\n\nInput: moves = &quot;_R__LL_&quot;\nOutput: 5\nExplanation: The furthest point we can reach from the origin 0 is point -5 through the following sequence of moves &quot;LRLLLLL&quot;.\n\n\nExample 3:\n\n\nInput: moves = &quot;_______&quot;\nOutput: 7\nExplanation: The furthest point we can reach from the origin 0 is point 7 through the following sequence of moves &quot;RRRRRRR&quot;.\n\n\n&nbsp;\nConstraints:\n\n\n\t1 &lt;= moves.length == n &lt;= 50\n\tmoves consists only of characters &#39;L&#39;, &#39;R&#39; and &#39;_&#39;.\n\n"
    },
    {
        "title": "  Count Symmetric Integers",
        "content": "You are given two positive integers low and high.\n\nAn integer x consisting of 2 * n digits is symmetric if the sum of the first n digits of x is equal to the sum of the last n digits of x. Numbers with an odd number of digits are never symmetric.\n\nReturn the number of symmetric integers in the range [low, high].\n\n&nbsp;\nExample 1:\n\n\nInput: low = 1, high = 100\nOutput: 9\nExplanation: There are 9 symmetric integers between 1 and 100: 11, 22, 33, 44, 55, 66, 77, 88, and 99.\n\n\nExample 2:\n\n\nInput: low = 1200, high = 1230\nOutput: 4\nExplanation: There are 4 symmetric integers between 1200 and 1230: 1203, 1212, 1221, and 1230.\n\n\n&nbsp;\nConstraints:\n\n\n\t1 &lt;= low &lt;= high &lt;= 104\n\n"
    },
    {
        "title": "Apply Bitwise Operations to Make Strings Equal",
        "content": "You are given two 0-indexed binary strings s and target of the same length n. You can do the following operation on s any number of times:\n\n\tChoose two different indices i and j where 0 <= i, j < n.\n\tSimultaneously, replace s[i] with (s[i] OR s[j]) and s[j] with (s[i] XOR s[j]).\n\nFor example, if s = \"0110\", you can choose i = 0 and j = 2, then simultaneously replace s[0] with (s[0] OR s[2] = 0 OR 1 = 1), and s[2] with (s[0] XOR s[2] = 0 XOR 1 = 1), so we will have s = \"1110\".\nReturn true if you can make the string s equal to target, or false otherwise.\n&nbsp;\nExample 1:\n\nInput: s = \"1010\", target = \"0110\"\nOutput: true\nExplanation: We can do the following operations:\n- Choose i = 2 and j = 0. We have now s = \"0010\".\n- Choose i = 2 and j = 1. We have now s = \"0110\".\nSince we can make s equal to target, we return true.\n\nExample 2:\n\nInput: s = \"11\", target = \"00\"\nOutput: false\nExplanation: It is not possible to make s equal to target with any number of operations.\n\n&nbsp;\nConstraints:\n\n\tn == s.length == target.length\n\t2 <= n <= 105\n\ts and target consist of only the digits 0 and 1."
    },
    {
        "title": "Group Anagrams",
        "content": "Given an array of strings strs, group the anagrams together. You can return the answer in any order.\nAn Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n&nbsp;\nExample 1:\nInput: strs = [\"eat\",\"tea\",\"tan\",\"ate\",\"nat\",\"bat\"]\nOutput: [[\"bat\"],[\"nat\",\"tan\"],[\"ate\",\"eat\",\"tea\"]]\nExample 2:\nInput: strs = [\"\"]\nOutput: [[\"\"]]\nExample 3:\nInput: strs = [\"a\"]\nOutput: [[\"a\"]]\n&nbsp;\nConstraints:\n\n\t1 <= strs.length <= 104\n\t0 <= strs[i].length <= 100\n\tstrs[i] consists of lowercase English letters."
    },
    {
        "title": "House Robber IV",
        "content": "There are several consecutive houses along a street, each of which has some money inside. There is also a robber, who wants to steal money from the homes, but he refuses to steal from adjacent homes.\nThe capability of the robber is the maximum amount of money he steals from one house of all the houses he robbed.\nYou are given an integer array nums representing how much money is stashed in each house. More formally, the ith house from the left has nums[i] dollars.\nYou are also given an integer k, representing the minimum number of houses the robber will steal from. It is always possible to steal at least k houses.\nReturn the minimum capability of the robber out of all the possible ways to steal at least k houses.\n&nbsp;\nExample 1:\n\nInput: nums = [2,3,5,9], k = 2\nOutput: 5\nExplanation: \nThere are three ways to rob at least 2 houses:\n- Rob the houses at indices 0 and 2. Capability is max(nums[0], nums[2]) = 5.\n- Rob the houses at indices 0 and 3. Capability is max(nums[0], nums[3]) = 9.\n- Rob the houses at indices 1 and 3. Capability is max(nums[1], nums[3]) = 9.\nTherefore, we return min(5, 9, 9) = 5.\n\nExample 2:\n\nInput: nums = [2,7,9,3,1], k = 2\nOutput: 2\nExplanation: There are 7 ways to rob the houses. The way which leads to minimum capability is to rob the house at index 0 and 4. Return max(nums[0], nums[4]) = 2.\n\n&nbsp;\nConstraints:\n\n\t1 <= nums.length <= 105\n\t1 <= nums[i] <= 109\n\t1 <= k <= (nums.length + 1)/2"
    },
    {
        "title": "Root Equals Sum of Children",
        "content": "You are given the root of a binary tree that consists of exactly 3 nodes: the root, its left child, and its right child.\nReturn true if the value of the root is equal to the sum of the values of its two children, or false otherwise.\n&nbsp;\nExample 1:\n\nInput: root = [10,4,6]\nOutput: true\nExplanation: The values of the root, its left child, and its right child are 10, 4, and 6, respectively.\n10 is equal to 4 + 6, so we return true.\n\nExample 2:\n\nInput: root = [5,3,1]\nOutput: false\nExplanation: The values of the root, its left child, and its right child are 5, 3, and 1, respectively.\n5 is not equal to 3 + 1, so we return false.\n\n&nbsp;\nConstraints:\n\n\tThe tree consists only of the root, its left child, and its right child.\n\t-100 <= Node.val <= 100"
    },
    {
        "title": "Find Resultant Array After Removing Anagrams",
        "content": "You are given a 0-indexed string array words, where words[i] consists of lowercase English letters.\n\nIn one operation, select any index i such that 0 &lt; i &lt; words.length and words[i - 1] and words[i] are anagrams, and delete words[i] from words. Keep performing this operation as long as you can select an index that satisfies the conditions.\n\nReturn words after performing all operations. It can be shown that selecting the indices for each operation in any arbitrary order will lead to the same result.\n\nAn Anagram is a word or phrase formed by rearranging the letters of a different word or phrase using all the original letters exactly once. For example, &quot;dacb&quot; is an anagram of &quot;abdc&quot;.\n\n&nbsp;\nExample 1:\n\n\nInput: words = [&quot;abba&quot;,&quot;baba&quot;,&quot;bbaa&quot;,&quot;cd&quot;,&quot;cd&quot;]\nOutput: [&quot;abba&quot;,&quot;cd&quot;]\nExplanation:\nOne of the ways we can obtain the resultant array is by using the following operations:\n- Since words[2] = &quot;bbaa&quot; and words[1] = &quot;baba&quot; are anagrams, we choose index 2 and delete words[2].\n  Now words = [&quot;abba&quot;,&quot;baba&quot;,&quot;cd&quot;,&quot;cd&quot;].\n- Since words[1] = &quot;baba&quot; and words[0] = &quot;abba&quot; are anagrams, we choose index 1 and delete words[1].\n  Now words = [&quot;abba&quot;,&quot;cd&quot;,&quot;cd&quot;].\n- Since words[2] = &quot;cd&quot; and words[1] = &quot;cd&quot; are anagrams, we choose index 2 and delete words[2].\n  Now words = [&quot;abba&quot;,&quot;cd&quot;].\nWe can no longer perform any operations, so [&quot;abba&quot;,&quot;cd&quot;] is the final answer.\n\nExample 2:\n\n\nInput: words = [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;]\nOutput: [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;]\nExplanation:\nNo two adjacent strings in words are anagrams of each other, so no operations are performed.\n\n&nbsp;\nConstraints:\n\n\n\t1 &lt;= words.length &lt;= 100\n\t1 &lt;= words[i].length &lt;= 10\n\twords[i] consists of lowercase English letters.\n\n"
    },
    {
        "title": "Long Pressed Name",
        "content": "Your friend is typing his name into a keyboard. Sometimes, when typing a character c, the key might get long pressed, and the character will be typed 1 or more times.\nYou examine the typed characters of the keyboard. Return True if it is possible that it was your friends name, with some characters (possibly none) being long pressed.\n&nbsp;\nExample 1:\n\nInput: name = \"alex\", typed = \"aaleex\"\nOutput: true\nExplanation: 'a' and 'e' in 'alex' were long pressed.\n\nExample 2:\n\nInput: name = \"saeed\", typed = \"ssaaedd\"\nOutput: false\nExplanation: 'e' must have been pressed twice, but it was not in the typed output.\n\n&nbsp;\nConstraints:\n\n\t1 <= name.length, typed.length <= 1000\n\tname and typed consist of only lowercase English letters."
    },
    {
        "title": "House Robber II",
        "content": "You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed. All houses at this place are arranged in a circle. That means the first house is the neighbor of the last one. Meanwhile, adjacent houses have a security system connected, and&nbsp;it will automatically contact the police if two adjacent houses were broken into on the same night.\nGiven an integer array nums representing the amount of money of each house, return the maximum amount of money you can rob tonight without alerting the police.\n&nbsp;\nExample 1:\n\nInput: nums = [2,3,2]\nOutput: 3\nExplanation: You cannot rob house 1 (money = 2) and then rob house 3 (money = 2), because they are adjacent houses.\n\nExample 2:\n\nInput: nums = [1,2,3,1]\nOutput: 4\nExplanation: Rob house 1 (money = 1) and then rob house 3 (money = 3).\nTotal amount you can rob = 1 + 3 = 4.\n\nExample 3:\n\nInput: nums = [1,2,3]\nOutput: 3\n\n&nbsp;\nConstraints:\n\n\t1 <= nums.length <= 100\n\t0 <= nums[i] <= 1000"
    },
    {
        "title": "Plus One",
        "content": "You are given a large integer represented as an integer array digits, where each digits[i] is the ith digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0's.\nIncrement the large integer by one and return the resulting array of digits.\n&nbsp;\nExample 1:\n\nInput: digits = [1,2,3]\nOutput: [1,2,4]\nExplanation: The array represents the integer 123.\nIncrementing by one gives 123 + 1 = 124.\nThus, the result should be [1,2,4].\n\nExample 2:\n\nInput: digits = [4,3,2,1]\nOutput: [4,3,2,2]\nExplanation: The array represents the integer 4321.\nIncrementing by one gives 4321 + 1 = 4322.\nThus, the result should be [4,3,2,2].\n\nExample 3:\n\nInput: digits = [9]\nOutput: [1,0]\nExplanation: The array represents the integer 9.\nIncrementing by one gives 9 + 1 = 10.\nThus, the result should be [1,0].\n\n&nbsp;\nConstraints:\n\n\t1 <= digits.length <= 100\n\t0 <= digits[i] <= 9\n\tdigits does not contain any leading 0's."
    },
    {
        "title": "Fraction to Recurring Decimal",
        "content": "Given two integers representing the numerator and denominator of a fraction, return the fraction in string format.\n\nIf the fractional part is repeating, enclose the repeating part in parentheses.\n\nIf multiple answers are possible, return any of them.\n\nIt is guaranteed that the length of the answer string is less than 104 for all the given inputs.\n\n&nbsp;\nExample 1:\n\n\nInput: numerator = 1, denominator = 2\nOutput: &quot;0.5&quot;\n\n\nExample 2:\n\n\nInput: numerator = 2, denominator = 1\nOutput: &quot;2&quot;\n\n\nExample 3:\n\n\nInput: numerator = 4, denominator = 333\nOutput: &quot;0.(012)&quot;\n\n\n&nbsp;\nConstraints:\n\n\n\t-231 &lt;=&nbsp;numerator, denominator &lt;= 231 - 1\n\tdenominator != 0\n\n"
    },
    {
        "title": "Minimum Operations to Make Array Equal II",
        "content": "You are given two integer arrays nums1 and nums2 of equal length n and an integer k. You can perform the following operation on nums1:\n\n\tChoose two indexes i and j and increment nums1[i] by k and decrement nums1[j] by k. In other words, nums1[i] = nums1[i] + k and nums1[j] = nums1[j] - k.\n\nnums1 is said to be equal to nums2 if for all indices i such that 0 <= i < n, nums1[i] == nums2[i].\nReturn the minimum number of operations required to make nums1 equal to nums2. If it is impossible to make them equal, return -1.\n&nbsp;\nExample 1:\n\nInput: nums1 = [4,3,1,4], nums2 = [1,3,7,1], k = 3\nOutput: 2\nExplanation: In 2 operations, we can transform nums1 to nums2.\n1st operation: i = 2, j = 0. After applying the operation, nums1 = [1,3,4,4].\n2nd operation: i = 2, j = 3. After applying the operation, nums1 = [1,3,7,1].\nOne can prove that it is impossible to make arrays equal in fewer operations.\nExample 2:\n\nInput: nums1 = [3,8,5,2], nums2 = [2,4,1,6], k = 1\nOutput: -1\nExplanation: It can be proved that it is impossible to make the two arrays equal.\n\n&nbsp;\nConstraints:\n\n\tn == nums1.length == nums2.length\n\t2 <= n <= 105\n\t0 <= nums1[i], nums2[j] <= 109\n\t0 <= k <= 105"
    },
    {
        "title": "Make Array Empty",
        "content": "You are given an integer array nums containing distinct numbers, and you can perform the following operations until the array is empty:\n\n\tIf the first element has the smallest value, remove it\n\tOtherwise, put the first element at the end of the array.\n\nReturn an integer denoting the number of operations it takes to make nums empty.\n&nbsp;\nExample 1:\n\nInput: nums = [3,4,-1]\nOutput: 5\n\n\t\n\t\t\n\t\t\tOperation\n\t\t\tArray\n\t\t\n\t\n\t\n\t\t\n\t\t\t1\n\t\t\t[4, -1, 3]\n\t\t\n\t\t\n\t\t\t2\n\t\t\t[-1, 3, 4]\n\t\t\n\t\t\n\t\t\t3\n\t\t\t[3, 4]\n\t\t\n\t\t\n\t\t\t4\n\t\t\t[4]\n\t\t\n\t\t\n\t\t\t5\n\t\t\t[]\n\t\t\n\t\n\nExample 2:\n\nInput: nums = [1,2,4,3]\nOutput: 5\n\n\t\n\t\t\n\t\t\tOperation\n\t\t\tArray\n\t\t\n\t\n\t\n\t\t\n\t\t\t1\n\t\t\t[2, 4, 3]\n\t\t\n\t\t\n\t\t\t2\n\t\t\t[4, 3]\n\t\t\n\t\t\n\t\t\t3\n\t\t\t[3, 4]\n\t\t\n\t\t\n\t\t\t4\n\t\t\t[4]\n\t\t\n\t\t\n\t\t\t5\n\t\t\t[]\n\t\t\n\t\n\nExample 3:\n\nInput: nums = [1,2,3]\nOutput: 3\n\n\t\n\t\t\n\t\t\tOperation\n\t\t\tArray\n\t\t\n\t\n\t\n\t\t\n\t\t\t1\n\t\t\t[2, 3]\n\t\t\n\t\t\n\t\t\t2\n\t\t\t[3]\n\t\t\n\t\t\n\t\t\t3\n\t\t\t[]\n\t\t\n\t\n\n&nbsp;\nConstraints:\n\n\t1 <= nums.length <= 105\n\t-109&nbsp;<= nums[i] <= 109\n\tAll values in nums are distinct."
    },
    {
        "title": "Time Needed to Rearrange a Binary String",
        "content": "You are given a binary string s. In one second, all occurrences of \"01\" are simultaneously replaced with \"10\". This process repeats until no occurrences of \"01\" exist.\nReturn the number of seconds needed to complete this process.\n&nbsp;\nExample 1:\n\nInput: s = \"0110101\"\nOutput: 4\nExplanation: \nAfter one second, s becomes \"1011010\".\nAfter another second, s becomes \"1101100\".\nAfter the third second, s becomes \"1110100\".\nAfter the fourth second, s becomes \"1111000\".\nNo occurrence of \"01\" exists any longer, and the process needed 4 seconds to complete,\nso we return 4.\n\nExample 2:\n\nInput: s = \"11100\"\nOutput: 0\nExplanation:\nNo occurrence of \"01\" exists in s, and the processes needed 0 seconds to complete,\nso we return 0.\n\n&nbsp;\nConstraints:\n\n\t1 <= s.length <= 1000\n\ts[i] is either '0' or '1'.\n\n&nbsp;\nFollow up:\nCan you solve this problem in O(n) time complexity?"
    },
    {
        "title": "Shifting Letters II",
        "content": "You are given a string s of lowercase English letters and a 2D integer array shifts where shifts[i] = [starti, endi, directioni]. For every i, shift the characters in s from the index starti to the index endi (inclusive) forward if directioni = 1, or shift the characters backward if directioni = 0.\n\nShifting a character forward means replacing it with the next letter in the alphabet (wrapping around so that &#39;z&#39; becomes &#39;a&#39;). Similarly, shifting a character backward means replacing it with the previous letter in the alphabet (wrapping around so that &#39;a&#39; becomes &#39;z&#39;).\n\nReturn the final string after all such shifts to s are applied.\n\n&nbsp;\nExample 1:\n\n\nInput: s = &quot;abc&quot;, shifts = [[0,1,0],[1,2,1],[0,2,1]]\nOutput: &quot;ace&quot;\nExplanation: Firstly, shift the characters from index 0 to index 1 backward. Now s = &quot;zac&quot;.\nSecondly, shift the characters from index 1 to index 2 forward. Now s = &quot;zbd&quot;.\nFinally, shift the characters from index 0 to index 2 forward. Now s = &quot;ace&quot;.\n\nExample 2:\n\n\nInput: s = &quot;dztz&quot;, shifts = [[0,0,0],[1,1,1]]\nOutput: &quot;catz&quot;\nExplanation: Firstly, shift the characters from index 0 to index 0 backward. Now s = &quot;cztz&quot;.\nFinally, shift the characters from index 1 to index 1 forward. Now s = &quot;catz&quot;.\n\n\n&nbsp;\nConstraints:\n\n\n\t1 &lt;= s.length, shifts.length &lt;= 5 * 104\n\tshifts[i].length == 3\n\t0 &lt;= starti &lt;= endi &lt; s.length\n\t0 &lt;= directioni &lt;= 1\n\ts consists of lowercase English letters.\n\n"
    },
    {
        "title": "Path In Zigzag Labelled Binary Tree",
        "content": "In an infinite binary tree where every node has two children, the nodes are labelled in row order.\nIn the odd numbered rows (ie., the first, third, fifth,...), the labelling is left to right, while in the even numbered rows (second, fourth, sixth,...), the labelling is right to left.\n\nGiven the label of a node in this tree, return the labels in the path from the root of the tree to the&nbsp;node with that label.\n&nbsp;\nExample 1:\n\nInput: label = 14\nOutput: [1,3,4,14]\n\nExample 2:\n\nInput: label = 26\nOutput: [1,2,6,10,26]\n\n&nbsp;\nConstraints:\n\n\t1 <= label <= 10^6"
    },
    {
        "title": "Plus One",
        "content": "You are given a large integer represented as an integer array digits, where each digits[i] is the ith digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0's.\nIncrement the large integer by one and return the resulting array of digits.\n&nbsp;\nExample 1:\n\nInput: digits = [1,2,3]\nOutput: [1,2,4]\nExplanation: The array represents the integer 123.\nIncrementing by one gives 123 + 1 = 124.\nThus, the result should be [1,2,4].\n\nExample 2:\n\nInput: digits = [4,3,2,1]\nOutput: [4,3,2,2]\nExplanation: The array represents the integer 4321.\nIncrementing by one gives 4321 + 1 = 4322.\nThus, the result should be [4,3,2,2].\n\nExample 3:\n\nInput: digits = [9]\nOutput: [1,0]\nExplanation: The array represents the integer 9.\nIncrementing by one gives 9 + 1 = 10.\nThus, the result should be [1,0].\n\n&nbsp;\nConstraints:\n\n\t1 <= digits.length <= 100\n\t0 <= digits[i] <= 9\n\tdigits does not contain any leading 0's."
    },
    {
        "title": "Fraction to Recurring Decimal",
        "content": "Given two integers representing the numerator and denominator of a fraction, return the fraction in string format.\n\nIf the fractional part is repeating, enclose the repeating part in parentheses.\n\nIf multiple answers are possible, return any of them.\n\nIt is guaranteed that the length of the answer string is less than 104 for all the given inputs.\n\n&nbsp;\nExample 1:\n\n\nInput: numerator = 1, denominator = 2\nOutput: &quot;0.5&quot;\n\n\nExample 2:\n\n\nInput: numerator = 2, denominator = 1\nOutput: &quot;2&quot;\n\n\nExample 3:\n\n\nInput: numerator = 4, denominator = 333\nOutput: &quot;0.(012)&quot;\n\n\n&nbsp;\nConstraints:\n\n\n\t-231 &lt;=&nbsp;numerator, denominator &lt;= 231 - 1\n\tdenominator != 0\n\n"
    },
    {
        "title": "Count The Repetitions",
        "content": "We define str = [s, n] as the string str which consists of the string s concatenated n times.\n\n\n\tFor example, str == [&quot;abc&quot;, 3] ==&quot;abcabcabc&quot;.\n\n\nWe define that string s1 can be obtained from string s2 if we can remove some characters from s2 such that it becomes s1.\n\n\n\tFor example, s1 = &quot;abc&quot; can be obtained from s2 = &quot;abdbec&quot; based on our definition by removing the bolded underlined characters.\n\n\nYou are given two strings s1 and s2 and two integers n1 and n2. You have the two strings str1 = [s1, n1] and str2 = [s2, n2].\n\nReturn the maximum integer m such that str = [str2, m] can be obtained from str1.\n\n&nbsp;\nExample 1:\nInput: s1 = \"acb\", n1 = 4, s2 = \"ab\", n2 = 2\nOutput: 2\nExample 2:\nInput: s1 = \"acb\", n1 = 1, s2 = \"acb\", n2 = 1\nOutput: 1\n\n&nbsp;\nConstraints:\n\n\n\t1 &lt;= s1.length, s2.length &lt;= 100\n\ts1 and s2 consist of lowercase English letters.\n\t1 &lt;= n1, n2 &lt;= 106\n\n"
    },
    {
        "title": "Reshape the Matrix",
        "content": "In MATLAB, there is a handy function called reshape which can reshape an m x n matrix into a new one with a different size r x c keeping its original data.\n\nYou are given an m x n matrix mat and two integers r and c representing the number of rows and the number of columns of the wanted reshaped matrix.\n\nThe reshaped matrix should be filled with all the elements of the original matrix in the same row-traversing order as they were.\n\nIf the reshape operation with given parameters is possible and legal, output the new reshaped matrix; Otherwise, output the original matrix.\n\n&nbsp;\nExample 1:\n\n\nInput: mat = [[1,2],[3,4]], r = 1, c = 4\nOutput: [[1,2,3,4]]\n\n\nExample 2:\n\n\nInput: mat = [[1,2],[3,4]], r = 2, c = 4\nOutput: [[1,2],[3,4]]\n\n\n&nbsp;\nConstraints:\n\n\n\tm == mat.length\n\tn == mat[i].length\n\t1 &lt;= m, n &lt;= 100\n\t-1000 &lt;= mat[i][j] &lt;= 1000\n\t1 &lt;= r, c &lt;= 300\n\n"
    },
    {
        "title": "Beautiful Arrangement II",
        "content": "Given two integers n and k, construct a list answer that contains n different positive integers ranging from 1 to n and obeys the following requirement:\n\n\n\tSuppose this list is answer =&nbsp;[a1, a2, a3, ... , an], then the list [|a1 - a2|, |a2 - a3|, |a3 - a4|, ... , |an-1 - an|] has exactly k distinct integers.\n\n\nReturn the list answer. If there multiple valid answers, return any of them.\n\n&nbsp;\nExample 1:\n\n\nInput: n = 3, k = 1\nOutput: [1,2,3]\nExplanation: The [1,2,3] has three different positive integers ranging from 1 to 3, and the [1,1] has exactly 1 distinct integer: 1\n\n\nExample 2:\n\n\nInput: n = 3, k = 2\nOutput: [1,3,2]\nExplanation: The [1,3,2] has three different positive integers ranging from 1 to 3, and the [2,1] has exactly 2 distinct integers: 1 and 2.\n\n\n&nbsp;\nConstraints:\n\n\n\t1 &lt;= k &lt; n &lt;= 104\n\n"
    },
    {
        "title": "Paths in Matrix Whose Sum Is Divisible by K",
        "content": "You are given a 0-indexed m x n integer matrix grid and an integer k. You are currently at position (0, 0) and you want to reach position (m - 1, n - 1) moving only down or right.\nReturn the number of paths where the sum of the elements on the path is divisible by k. Since the answer may be very large, return it modulo 109 + 7.\n&nbsp;\nExample 1:\n\nInput: grid = [[5,2,4],[3,0,5],[0,7,2]], k = 3\nOutput: 2\nExplanation: There are two paths where the sum of the elements on the path is divisible by k.\nThe first path highlighted in red has a sum of 5 + 2 + 4 + 5 + 2 = 18 which is divisible by 3.\nThe second path highlighted in blue has a sum of 5 + 3 + 0 + 5 + 2 = 15 which is divisible by 3.\n\nExample 2:\n\nInput: grid = [[0,0]], k = 5\nOutput: 1\nExplanation: The path highlighted in red has a sum of 0 + 0 = 0 which is divisible by 5.\n\nExample 3:\n\nInput: grid = [[7,3,4,9],[2,3,6,2],[2,3,7,0]], k = 1\nOutput: 10\nExplanation: Every integer is divisible by 1 so the sum of the elements on every possible path is divisible by k.\n\n&nbsp;\nConstraints:\n\n\tm == grid.length\n\tn == grid[i].length\n\t1 <= m, n <= 5 * 104\n\t1 <= m * n <= 5 * 104\n\t0 <= grid[i][j] <= 100\n\t1 <= k <= 50"
    },
    {
        "title": "Maximum Candies Allocated to K Children",
        "content": "You are given a 0-indexed integer array candies. Each element in the array denotes a pile of candies of size candies[i]. You can divide each pile into any number of sub piles, but you cannot merge two piles together.\nYou are also given an integer k. You should allocate piles of candies to k children such that each child gets the same number of candies. Each child can take at most one pile of candies and some piles of candies may go unused.\nReturn the maximum number of candies each child can get.\n&nbsp;\nExample 1:\n\nInput: candies = [5,8,6], k = 3\nOutput: 5\nExplanation: We can divide candies[1] into 2 piles of size 5 and 3, and candies[2] into 2 piles of size 5 and 1. We now have five piles of candies of sizes 5, 5, 3, 5, and 1. We can allocate the 3 piles of size 5 to 3 children. It can be proven that each child cannot receive more than 5 candies.\n\nExample 2:\n\nInput: candies = [2,5], k = 11\nOutput: 0\nExplanation: There are 11 children but only 7 candies in total, so it is impossible to ensure each child receives at least one candy. Thus, each child gets no candy and the answer is 0.\n\n&nbsp;\nConstraints:\n\n\t1 <= candies.length <= 105\n\t1 <= candies[i] <= 107\n\t1 <= k <= 1012"
    }
]