[
    {
        "title": "Find Cumulative Salary of an Employee",
        "question_content": null,
        "solutions": [],
        "discussions": [
            {
                "id": 1567746,
                "content": [
                    {
                        "username": "wuweiwei0423",
                        "content": "\\'\\'\\'\\nselect id, month, salary from (\\nselect id, month, sum(salary) over(partition by id order by month range between 2 preceding and current row) as salary,\\n   rank() over(partition by id order by month desc) as rnk from employee) temp\\nwhere rnk!=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "Selene1129xjl",
                        "content": "using range between in the window function is very elegant, thx"
                    },
                    {
                        "username": "garyJarred",
                        "content": "I failed the following test case:\\nid,month,salary\\n1,1,20\\n2,1,20\\n1,2,30\\n2,2,30\\n3,2,40\\n1,3,40\\n3,3,60\\n1,4,60\\n3,4,70\\n1,5,70\\nand here is the expected output:\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":[[1,4,130],[1,3,90],[1,2,50],[1,1,20],[2,1,20],[3,3,100],[3,2,40]]}\\nthere are 5 months in Jan, Except the most recent one, 5, we need return the cumsum from 2 to 4, right?\\ncan anyone kindly explain why the expect output give 4 records in Jan?\\n"
                    },
                    {
                        "username": "youlina3",
                        "content": "I found there is no window funciton solution as the official solution. So I am very confused about whether we can use window function in interview."
                    },
                    {
                        "username": "lee03215",
                        "content": "WITH cte AS(\\nSELECT id, month, Salary, ROW_NUMBER() OVER (PARTITION BY Id ORDER BY Month DESC) AS n\\nFROM Employee)\\nSELECT E1.Id, E1.Month, E1.Salary + IFNULL(E2.Salary, 0) + IFNULL(E3.Salary, 0) AS Salary\\nFROM cte AS E1\\nLEFT JOIN cte AS E2 ON E1.id = E2.id AND E1.Month - 1 = E2.Month\\nLEFT JOIN cte AS E3 ON E2.id = E3.id AND E2.Month - 1 = E3.Month\\nWHERE E1.n <> 1;"
                    },
                    {
                        "username": "jessiececilya",
                        "content": "with t as\\n(select id, month, salary, rank() over(partition by id order by month desc) as R \\nfrom employee)\\nselect t.id, t.month, sum(t.salary) over(partition by t.id order by t.month rows between 2 preceding and current row) as salary \\nfrom t \\nwhere t.R!=1\\norder by t.id, month desc"
                    },
                    {
                        "username": "ramya---",
                        "content": "\\tSELECT ID, MONTH, CUMSUM AS SALARY FROM (\\n\\n\\tSELECT ID, MONTH ,MAX(MONTH) OVER (PARTITION BY ID) AS RECENT , \\n\\n\\tSUM(SALARY)  OVER (PARTITION BY ID ORDER BY MONTH ROWS BETWEEN 2\\n\\t\\tPRECEDING and CURRENT ROW ) AS CUMSUM FROM EMPLOYEE) G\\n\\n\\t\\tWHERE MONTH!=RECENT ORDER BY ID, MONTH DESC"
                    },
                    {
                        "username": "apurvasharma0611",
                        "content": "\\'\\'\\'\\nselect Id, Month, \\nSum(Salary) over(partition by Id Order by Id asc, Month asc  \\n                 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as Salary\\nfrom Employee\\nwhere concat(Id,Month) not in (select concat(Id, max(Month))from Employeegroup by Id)\\norder by Id asc, Month desc\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Jodie_ch",
                        "content": "with cte as(\\nselect Id, Month, Salary,\\ndense_rank() over (partition by Id order by Month desc) as rnk\\nfrom Employee)\\n\\nselect Id, Month, \\nsum(Salary) over (partition by Id order by Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW ) as Salary\\nfrom cte\\nwhere rnk > 1\\ngroup by Id, Month\\norder by Id asc, Month desc"
                    },
                    {
                        "username": "reachnetha",
                        "content": "\\'\\'\\'\\n\\nselect id, month,\\nsum(salary) over (partition by id order by month ROWS between 2 PRECEDING  AND 0 FOLLOWING ) salary\\n\\nfrom \\n(select id,\\nmonth,\\n salary,\\nrow_number() over (partition by id order by month desc) rn\\nfrom Employee)\\nwhere rn !=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "thethirstymayor",
                        "content": "The question states that only the prior 3 months are to be listed per ID, right?\\n\\nFor one of the solutions, it lists the expected output as follows: \\n\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":**[[1,4,130],[1,3,90],[1,2,50],[1,1,20]**,[2,1,20],[3,3,100],[3,2,40]]}\\n\\nThis is wrong, as it includes 4 months rather than 3.  This question should be fixed or removed."
                    }
                ]
            },
            {
                "id": 1568427,
                "content": [
                    {
                        "username": "wuweiwei0423",
                        "content": "\\'\\'\\'\\nselect id, month, salary from (\\nselect id, month, sum(salary) over(partition by id order by month range between 2 preceding and current row) as salary,\\n   rank() over(partition by id order by month desc) as rnk from employee) temp\\nwhere rnk!=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "Selene1129xjl",
                        "content": "using range between in the window function is very elegant, thx"
                    },
                    {
                        "username": "garyJarred",
                        "content": "I failed the following test case:\\nid,month,salary\\n1,1,20\\n2,1,20\\n1,2,30\\n2,2,30\\n3,2,40\\n1,3,40\\n3,3,60\\n1,4,60\\n3,4,70\\n1,5,70\\nand here is the expected output:\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":[[1,4,130],[1,3,90],[1,2,50],[1,1,20],[2,1,20],[3,3,100],[3,2,40]]}\\nthere are 5 months in Jan, Except the most recent one, 5, we need return the cumsum from 2 to 4, right?\\ncan anyone kindly explain why the expect output give 4 records in Jan?\\n"
                    },
                    {
                        "username": "youlina3",
                        "content": "I found there is no window funciton solution as the official solution. So I am very confused about whether we can use window function in interview."
                    },
                    {
                        "username": "lee03215",
                        "content": "WITH cte AS(\\nSELECT id, month, Salary, ROW_NUMBER() OVER (PARTITION BY Id ORDER BY Month DESC) AS n\\nFROM Employee)\\nSELECT E1.Id, E1.Month, E1.Salary + IFNULL(E2.Salary, 0) + IFNULL(E3.Salary, 0) AS Salary\\nFROM cte AS E1\\nLEFT JOIN cte AS E2 ON E1.id = E2.id AND E1.Month - 1 = E2.Month\\nLEFT JOIN cte AS E3 ON E2.id = E3.id AND E2.Month - 1 = E3.Month\\nWHERE E1.n <> 1;"
                    },
                    {
                        "username": "jessiececilya",
                        "content": "with t as\\n(select id, month, salary, rank() over(partition by id order by month desc) as R \\nfrom employee)\\nselect t.id, t.month, sum(t.salary) over(partition by t.id order by t.month rows between 2 preceding and current row) as salary \\nfrom t \\nwhere t.R!=1\\norder by t.id, month desc"
                    },
                    {
                        "username": "ramya---",
                        "content": "\\tSELECT ID, MONTH, CUMSUM AS SALARY FROM (\\n\\n\\tSELECT ID, MONTH ,MAX(MONTH) OVER (PARTITION BY ID) AS RECENT , \\n\\n\\tSUM(SALARY)  OVER (PARTITION BY ID ORDER BY MONTH ROWS BETWEEN 2\\n\\t\\tPRECEDING and CURRENT ROW ) AS CUMSUM FROM EMPLOYEE) G\\n\\n\\t\\tWHERE MONTH!=RECENT ORDER BY ID, MONTH DESC"
                    },
                    {
                        "username": "apurvasharma0611",
                        "content": "\\'\\'\\'\\nselect Id, Month, \\nSum(Salary) over(partition by Id Order by Id asc, Month asc  \\n                 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as Salary\\nfrom Employee\\nwhere concat(Id,Month) not in (select concat(Id, max(Month))from Employeegroup by Id)\\norder by Id asc, Month desc\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Jodie_ch",
                        "content": "with cte as(\\nselect Id, Month, Salary,\\ndense_rank() over (partition by Id order by Month desc) as rnk\\nfrom Employee)\\n\\nselect Id, Month, \\nsum(Salary) over (partition by Id order by Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW ) as Salary\\nfrom cte\\nwhere rnk > 1\\ngroup by Id, Month\\norder by Id asc, Month desc"
                    },
                    {
                        "username": "reachnetha",
                        "content": "\\'\\'\\'\\n\\nselect id, month,\\nsum(salary) over (partition by id order by month ROWS between 2 PRECEDING  AND 0 FOLLOWING ) salary\\n\\nfrom \\n(select id,\\nmonth,\\n salary,\\nrow_number() over (partition by id order by month desc) rn\\nfrom Employee)\\nwhere rn !=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "thethirstymayor",
                        "content": "The question states that only the prior 3 months are to be listed per ID, right?\\n\\nFor one of the solutions, it lists the expected output as follows: \\n\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":**[[1,4,130],[1,3,90],[1,2,50],[1,1,20]**,[2,1,20],[3,3,100],[3,2,40]]}\\n\\nThis is wrong, as it includes 4 months rather than 3.  This question should be fixed or removed."
                    }
                ]
            },
            {
                "id": 1569301,
                "content": [
                    {
                        "username": "wuweiwei0423",
                        "content": "\\'\\'\\'\\nselect id, month, salary from (\\nselect id, month, sum(salary) over(partition by id order by month range between 2 preceding and current row) as salary,\\n   rank() over(partition by id order by month desc) as rnk from employee) temp\\nwhere rnk!=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "Selene1129xjl",
                        "content": "using range between in the window function is very elegant, thx"
                    },
                    {
                        "username": "garyJarred",
                        "content": "I failed the following test case:\\nid,month,salary\\n1,1,20\\n2,1,20\\n1,2,30\\n2,2,30\\n3,2,40\\n1,3,40\\n3,3,60\\n1,4,60\\n3,4,70\\n1,5,70\\nand here is the expected output:\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":[[1,4,130],[1,3,90],[1,2,50],[1,1,20],[2,1,20],[3,3,100],[3,2,40]]}\\nthere are 5 months in Jan, Except the most recent one, 5, we need return the cumsum from 2 to 4, right?\\ncan anyone kindly explain why the expect output give 4 records in Jan?\\n"
                    },
                    {
                        "username": "youlina3",
                        "content": "I found there is no window funciton solution as the official solution. So I am very confused about whether we can use window function in interview."
                    },
                    {
                        "username": "lee03215",
                        "content": "WITH cte AS(\\nSELECT id, month, Salary, ROW_NUMBER() OVER (PARTITION BY Id ORDER BY Month DESC) AS n\\nFROM Employee)\\nSELECT E1.Id, E1.Month, E1.Salary + IFNULL(E2.Salary, 0) + IFNULL(E3.Salary, 0) AS Salary\\nFROM cte AS E1\\nLEFT JOIN cte AS E2 ON E1.id = E2.id AND E1.Month - 1 = E2.Month\\nLEFT JOIN cte AS E3 ON E2.id = E3.id AND E2.Month - 1 = E3.Month\\nWHERE E1.n <> 1;"
                    },
                    {
                        "username": "jessiececilya",
                        "content": "with t as\\n(select id, month, salary, rank() over(partition by id order by month desc) as R \\nfrom employee)\\nselect t.id, t.month, sum(t.salary) over(partition by t.id order by t.month rows between 2 preceding and current row) as salary \\nfrom t \\nwhere t.R!=1\\norder by t.id, month desc"
                    },
                    {
                        "username": "ramya---",
                        "content": "\\tSELECT ID, MONTH, CUMSUM AS SALARY FROM (\\n\\n\\tSELECT ID, MONTH ,MAX(MONTH) OVER (PARTITION BY ID) AS RECENT , \\n\\n\\tSUM(SALARY)  OVER (PARTITION BY ID ORDER BY MONTH ROWS BETWEEN 2\\n\\t\\tPRECEDING and CURRENT ROW ) AS CUMSUM FROM EMPLOYEE) G\\n\\n\\t\\tWHERE MONTH!=RECENT ORDER BY ID, MONTH DESC"
                    },
                    {
                        "username": "apurvasharma0611",
                        "content": "\\'\\'\\'\\nselect Id, Month, \\nSum(Salary) over(partition by Id Order by Id asc, Month asc  \\n                 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as Salary\\nfrom Employee\\nwhere concat(Id,Month) not in (select concat(Id, max(Month))from Employeegroup by Id)\\norder by Id asc, Month desc\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Jodie_ch",
                        "content": "with cte as(\\nselect Id, Month, Salary,\\ndense_rank() over (partition by Id order by Month desc) as rnk\\nfrom Employee)\\n\\nselect Id, Month, \\nsum(Salary) over (partition by Id order by Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW ) as Salary\\nfrom cte\\nwhere rnk > 1\\ngroup by Id, Month\\norder by Id asc, Month desc"
                    },
                    {
                        "username": "reachnetha",
                        "content": "\\'\\'\\'\\n\\nselect id, month,\\nsum(salary) over (partition by id order by month ROWS between 2 PRECEDING  AND 0 FOLLOWING ) salary\\n\\nfrom \\n(select id,\\nmonth,\\n salary,\\nrow_number() over (partition by id order by month desc) rn\\nfrom Employee)\\nwhere rn !=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "thethirstymayor",
                        "content": "The question states that only the prior 3 months are to be listed per ID, right?\\n\\nFor one of the solutions, it lists the expected output as follows: \\n\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":**[[1,4,130],[1,3,90],[1,2,50],[1,1,20]**,[2,1,20],[3,3,100],[3,2,40]]}\\n\\nThis is wrong, as it includes 4 months rather than 3.  This question should be fixed or removed."
                    }
                ]
            },
            {
                "id": 1575685,
                "content": [
                    {
                        "username": "wuweiwei0423",
                        "content": "\\'\\'\\'\\nselect id, month, salary from (\\nselect id, month, sum(salary) over(partition by id order by month range between 2 preceding and current row) as salary,\\n   rank() over(partition by id order by month desc) as rnk from employee) temp\\nwhere rnk!=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "Selene1129xjl",
                        "content": "using range between in the window function is very elegant, thx"
                    },
                    {
                        "username": "garyJarred",
                        "content": "I failed the following test case:\\nid,month,salary\\n1,1,20\\n2,1,20\\n1,2,30\\n2,2,30\\n3,2,40\\n1,3,40\\n3,3,60\\n1,4,60\\n3,4,70\\n1,5,70\\nand here is the expected output:\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":[[1,4,130],[1,3,90],[1,2,50],[1,1,20],[2,1,20],[3,3,100],[3,2,40]]}\\nthere are 5 months in Jan, Except the most recent one, 5, we need return the cumsum from 2 to 4, right?\\ncan anyone kindly explain why the expect output give 4 records in Jan?\\n"
                    },
                    {
                        "username": "youlina3",
                        "content": "I found there is no window funciton solution as the official solution. So I am very confused about whether we can use window function in interview."
                    },
                    {
                        "username": "lee03215",
                        "content": "WITH cte AS(\\nSELECT id, month, Salary, ROW_NUMBER() OVER (PARTITION BY Id ORDER BY Month DESC) AS n\\nFROM Employee)\\nSELECT E1.Id, E1.Month, E1.Salary + IFNULL(E2.Salary, 0) + IFNULL(E3.Salary, 0) AS Salary\\nFROM cte AS E1\\nLEFT JOIN cte AS E2 ON E1.id = E2.id AND E1.Month - 1 = E2.Month\\nLEFT JOIN cte AS E3 ON E2.id = E3.id AND E2.Month - 1 = E3.Month\\nWHERE E1.n <> 1;"
                    },
                    {
                        "username": "jessiececilya",
                        "content": "with t as\\n(select id, month, salary, rank() over(partition by id order by month desc) as R \\nfrom employee)\\nselect t.id, t.month, sum(t.salary) over(partition by t.id order by t.month rows between 2 preceding and current row) as salary \\nfrom t \\nwhere t.R!=1\\norder by t.id, month desc"
                    },
                    {
                        "username": "ramya---",
                        "content": "\\tSELECT ID, MONTH, CUMSUM AS SALARY FROM (\\n\\n\\tSELECT ID, MONTH ,MAX(MONTH) OVER (PARTITION BY ID) AS RECENT , \\n\\n\\tSUM(SALARY)  OVER (PARTITION BY ID ORDER BY MONTH ROWS BETWEEN 2\\n\\t\\tPRECEDING and CURRENT ROW ) AS CUMSUM FROM EMPLOYEE) G\\n\\n\\t\\tWHERE MONTH!=RECENT ORDER BY ID, MONTH DESC"
                    },
                    {
                        "username": "apurvasharma0611",
                        "content": "\\'\\'\\'\\nselect Id, Month, \\nSum(Salary) over(partition by Id Order by Id asc, Month asc  \\n                 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as Salary\\nfrom Employee\\nwhere concat(Id,Month) not in (select concat(Id, max(Month))from Employeegroup by Id)\\norder by Id asc, Month desc\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Jodie_ch",
                        "content": "with cte as(\\nselect Id, Month, Salary,\\ndense_rank() over (partition by Id order by Month desc) as rnk\\nfrom Employee)\\n\\nselect Id, Month, \\nsum(Salary) over (partition by Id order by Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW ) as Salary\\nfrom cte\\nwhere rnk > 1\\ngroup by Id, Month\\norder by Id asc, Month desc"
                    },
                    {
                        "username": "reachnetha",
                        "content": "\\'\\'\\'\\n\\nselect id, month,\\nsum(salary) over (partition by id order by month ROWS between 2 PRECEDING  AND 0 FOLLOWING ) salary\\n\\nfrom \\n(select id,\\nmonth,\\n salary,\\nrow_number() over (partition by id order by month desc) rn\\nfrom Employee)\\nwhere rn !=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "thethirstymayor",
                        "content": "The question states that only the prior 3 months are to be listed per ID, right?\\n\\nFor one of the solutions, it lists the expected output as follows: \\n\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":**[[1,4,130],[1,3,90],[1,2,50],[1,1,20]**,[2,1,20],[3,3,100],[3,2,40]]}\\n\\nThis is wrong, as it includes 4 months rather than 3.  This question should be fixed or removed."
                    }
                ]
            },
            {
                "id": 1575325,
                "content": [
                    {
                        "username": "wuweiwei0423",
                        "content": "\\'\\'\\'\\nselect id, month, salary from (\\nselect id, month, sum(salary) over(partition by id order by month range between 2 preceding and current row) as salary,\\n   rank() over(partition by id order by month desc) as rnk from employee) temp\\nwhere rnk!=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "Selene1129xjl",
                        "content": "using range between in the window function is very elegant, thx"
                    },
                    {
                        "username": "garyJarred",
                        "content": "I failed the following test case:\\nid,month,salary\\n1,1,20\\n2,1,20\\n1,2,30\\n2,2,30\\n3,2,40\\n1,3,40\\n3,3,60\\n1,4,60\\n3,4,70\\n1,5,70\\nand here is the expected output:\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":[[1,4,130],[1,3,90],[1,2,50],[1,1,20],[2,1,20],[3,3,100],[3,2,40]]}\\nthere are 5 months in Jan, Except the most recent one, 5, we need return the cumsum from 2 to 4, right?\\ncan anyone kindly explain why the expect output give 4 records in Jan?\\n"
                    },
                    {
                        "username": "youlina3",
                        "content": "I found there is no window funciton solution as the official solution. So I am very confused about whether we can use window function in interview."
                    },
                    {
                        "username": "lee03215",
                        "content": "WITH cte AS(\\nSELECT id, month, Salary, ROW_NUMBER() OVER (PARTITION BY Id ORDER BY Month DESC) AS n\\nFROM Employee)\\nSELECT E1.Id, E1.Month, E1.Salary + IFNULL(E2.Salary, 0) + IFNULL(E3.Salary, 0) AS Salary\\nFROM cte AS E1\\nLEFT JOIN cte AS E2 ON E1.id = E2.id AND E1.Month - 1 = E2.Month\\nLEFT JOIN cte AS E3 ON E2.id = E3.id AND E2.Month - 1 = E3.Month\\nWHERE E1.n <> 1;"
                    },
                    {
                        "username": "jessiececilya",
                        "content": "with t as\\n(select id, month, salary, rank() over(partition by id order by month desc) as R \\nfrom employee)\\nselect t.id, t.month, sum(t.salary) over(partition by t.id order by t.month rows between 2 preceding and current row) as salary \\nfrom t \\nwhere t.R!=1\\norder by t.id, month desc"
                    },
                    {
                        "username": "ramya---",
                        "content": "\\tSELECT ID, MONTH, CUMSUM AS SALARY FROM (\\n\\n\\tSELECT ID, MONTH ,MAX(MONTH) OVER (PARTITION BY ID) AS RECENT , \\n\\n\\tSUM(SALARY)  OVER (PARTITION BY ID ORDER BY MONTH ROWS BETWEEN 2\\n\\t\\tPRECEDING and CURRENT ROW ) AS CUMSUM FROM EMPLOYEE) G\\n\\n\\t\\tWHERE MONTH!=RECENT ORDER BY ID, MONTH DESC"
                    },
                    {
                        "username": "apurvasharma0611",
                        "content": "\\'\\'\\'\\nselect Id, Month, \\nSum(Salary) over(partition by Id Order by Id asc, Month asc  \\n                 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as Salary\\nfrom Employee\\nwhere concat(Id,Month) not in (select concat(Id, max(Month))from Employeegroup by Id)\\norder by Id asc, Month desc\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Jodie_ch",
                        "content": "with cte as(\\nselect Id, Month, Salary,\\ndense_rank() over (partition by Id order by Month desc) as rnk\\nfrom Employee)\\n\\nselect Id, Month, \\nsum(Salary) over (partition by Id order by Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW ) as Salary\\nfrom cte\\nwhere rnk > 1\\ngroup by Id, Month\\norder by Id asc, Month desc"
                    },
                    {
                        "username": "reachnetha",
                        "content": "\\'\\'\\'\\n\\nselect id, month,\\nsum(salary) over (partition by id order by month ROWS between 2 PRECEDING  AND 0 FOLLOWING ) salary\\n\\nfrom \\n(select id,\\nmonth,\\n salary,\\nrow_number() over (partition by id order by month desc) rn\\nfrom Employee)\\nwhere rn !=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "thethirstymayor",
                        "content": "The question states that only the prior 3 months are to be listed per ID, right?\\n\\nFor one of the solutions, it lists the expected output as follows: \\n\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":**[[1,4,130],[1,3,90],[1,2,50],[1,1,20]**,[2,1,20],[3,3,100],[3,2,40]]}\\n\\nThis is wrong, as it includes 4 months rather than 3.  This question should be fixed or removed."
                    }
                ]
            },
            {
                "id": 1574984,
                "content": [
                    {
                        "username": "wuweiwei0423",
                        "content": "\\'\\'\\'\\nselect id, month, salary from (\\nselect id, month, sum(salary) over(partition by id order by month range between 2 preceding and current row) as salary,\\n   rank() over(partition by id order by month desc) as rnk from employee) temp\\nwhere rnk!=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "Selene1129xjl",
                        "content": "using range between in the window function is very elegant, thx"
                    },
                    {
                        "username": "garyJarred",
                        "content": "I failed the following test case:\\nid,month,salary\\n1,1,20\\n2,1,20\\n1,2,30\\n2,2,30\\n3,2,40\\n1,3,40\\n3,3,60\\n1,4,60\\n3,4,70\\n1,5,70\\nand here is the expected output:\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":[[1,4,130],[1,3,90],[1,2,50],[1,1,20],[2,1,20],[3,3,100],[3,2,40]]}\\nthere are 5 months in Jan, Except the most recent one, 5, we need return the cumsum from 2 to 4, right?\\ncan anyone kindly explain why the expect output give 4 records in Jan?\\n"
                    },
                    {
                        "username": "youlina3",
                        "content": "I found there is no window funciton solution as the official solution. So I am very confused about whether we can use window function in interview."
                    },
                    {
                        "username": "lee03215",
                        "content": "WITH cte AS(\\nSELECT id, month, Salary, ROW_NUMBER() OVER (PARTITION BY Id ORDER BY Month DESC) AS n\\nFROM Employee)\\nSELECT E1.Id, E1.Month, E1.Salary + IFNULL(E2.Salary, 0) + IFNULL(E3.Salary, 0) AS Salary\\nFROM cte AS E1\\nLEFT JOIN cte AS E2 ON E1.id = E2.id AND E1.Month - 1 = E2.Month\\nLEFT JOIN cte AS E3 ON E2.id = E3.id AND E2.Month - 1 = E3.Month\\nWHERE E1.n <> 1;"
                    },
                    {
                        "username": "jessiececilya",
                        "content": "with t as\\n(select id, month, salary, rank() over(partition by id order by month desc) as R \\nfrom employee)\\nselect t.id, t.month, sum(t.salary) over(partition by t.id order by t.month rows between 2 preceding and current row) as salary \\nfrom t \\nwhere t.R!=1\\norder by t.id, month desc"
                    },
                    {
                        "username": "ramya---",
                        "content": "\\tSELECT ID, MONTH, CUMSUM AS SALARY FROM (\\n\\n\\tSELECT ID, MONTH ,MAX(MONTH) OVER (PARTITION BY ID) AS RECENT , \\n\\n\\tSUM(SALARY)  OVER (PARTITION BY ID ORDER BY MONTH ROWS BETWEEN 2\\n\\t\\tPRECEDING and CURRENT ROW ) AS CUMSUM FROM EMPLOYEE) G\\n\\n\\t\\tWHERE MONTH!=RECENT ORDER BY ID, MONTH DESC"
                    },
                    {
                        "username": "apurvasharma0611",
                        "content": "\\'\\'\\'\\nselect Id, Month, \\nSum(Salary) over(partition by Id Order by Id asc, Month asc  \\n                 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as Salary\\nfrom Employee\\nwhere concat(Id,Month) not in (select concat(Id, max(Month))from Employeegroup by Id)\\norder by Id asc, Month desc\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Jodie_ch",
                        "content": "with cte as(\\nselect Id, Month, Salary,\\ndense_rank() over (partition by Id order by Month desc) as rnk\\nfrom Employee)\\n\\nselect Id, Month, \\nsum(Salary) over (partition by Id order by Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW ) as Salary\\nfrom cte\\nwhere rnk > 1\\ngroup by Id, Month\\norder by Id asc, Month desc"
                    },
                    {
                        "username": "reachnetha",
                        "content": "\\'\\'\\'\\n\\nselect id, month,\\nsum(salary) over (partition by id order by month ROWS between 2 PRECEDING  AND 0 FOLLOWING ) salary\\n\\nfrom \\n(select id,\\nmonth,\\n salary,\\nrow_number() over (partition by id order by month desc) rn\\nfrom Employee)\\nwhere rn !=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "thethirstymayor",
                        "content": "The question states that only the prior 3 months are to be listed per ID, right?\\n\\nFor one of the solutions, it lists the expected output as follows: \\n\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":**[[1,4,130],[1,3,90],[1,2,50],[1,1,20]**,[2,1,20],[3,3,100],[3,2,40]]}\\n\\nThis is wrong, as it includes 4 months rather than 3.  This question should be fixed or removed."
                    }
                ]
            },
            {
                "id": 1574618,
                "content": [
                    {
                        "username": "wuweiwei0423",
                        "content": "\\'\\'\\'\\nselect id, month, salary from (\\nselect id, month, sum(salary) over(partition by id order by month range between 2 preceding and current row) as salary,\\n   rank() over(partition by id order by month desc) as rnk from employee) temp\\nwhere rnk!=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "Selene1129xjl",
                        "content": "using range between in the window function is very elegant, thx"
                    },
                    {
                        "username": "garyJarred",
                        "content": "I failed the following test case:\\nid,month,salary\\n1,1,20\\n2,1,20\\n1,2,30\\n2,2,30\\n3,2,40\\n1,3,40\\n3,3,60\\n1,4,60\\n3,4,70\\n1,5,70\\nand here is the expected output:\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":[[1,4,130],[1,3,90],[1,2,50],[1,1,20],[2,1,20],[3,3,100],[3,2,40]]}\\nthere are 5 months in Jan, Except the most recent one, 5, we need return the cumsum from 2 to 4, right?\\ncan anyone kindly explain why the expect output give 4 records in Jan?\\n"
                    },
                    {
                        "username": "youlina3",
                        "content": "I found there is no window funciton solution as the official solution. So I am very confused about whether we can use window function in interview."
                    },
                    {
                        "username": "lee03215",
                        "content": "WITH cte AS(\\nSELECT id, month, Salary, ROW_NUMBER() OVER (PARTITION BY Id ORDER BY Month DESC) AS n\\nFROM Employee)\\nSELECT E1.Id, E1.Month, E1.Salary + IFNULL(E2.Salary, 0) + IFNULL(E3.Salary, 0) AS Salary\\nFROM cte AS E1\\nLEFT JOIN cte AS E2 ON E1.id = E2.id AND E1.Month - 1 = E2.Month\\nLEFT JOIN cte AS E3 ON E2.id = E3.id AND E2.Month - 1 = E3.Month\\nWHERE E1.n <> 1;"
                    },
                    {
                        "username": "jessiececilya",
                        "content": "with t as\\n(select id, month, salary, rank() over(partition by id order by month desc) as R \\nfrom employee)\\nselect t.id, t.month, sum(t.salary) over(partition by t.id order by t.month rows between 2 preceding and current row) as salary \\nfrom t \\nwhere t.R!=1\\norder by t.id, month desc"
                    },
                    {
                        "username": "ramya---",
                        "content": "\\tSELECT ID, MONTH, CUMSUM AS SALARY FROM (\\n\\n\\tSELECT ID, MONTH ,MAX(MONTH) OVER (PARTITION BY ID) AS RECENT , \\n\\n\\tSUM(SALARY)  OVER (PARTITION BY ID ORDER BY MONTH ROWS BETWEEN 2\\n\\t\\tPRECEDING and CURRENT ROW ) AS CUMSUM FROM EMPLOYEE) G\\n\\n\\t\\tWHERE MONTH!=RECENT ORDER BY ID, MONTH DESC"
                    },
                    {
                        "username": "apurvasharma0611",
                        "content": "\\'\\'\\'\\nselect Id, Month, \\nSum(Salary) over(partition by Id Order by Id asc, Month asc  \\n                 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as Salary\\nfrom Employee\\nwhere concat(Id,Month) not in (select concat(Id, max(Month))from Employeegroup by Id)\\norder by Id asc, Month desc\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Jodie_ch",
                        "content": "with cte as(\\nselect Id, Month, Salary,\\ndense_rank() over (partition by Id order by Month desc) as rnk\\nfrom Employee)\\n\\nselect Id, Month, \\nsum(Salary) over (partition by Id order by Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW ) as Salary\\nfrom cte\\nwhere rnk > 1\\ngroup by Id, Month\\norder by Id asc, Month desc"
                    },
                    {
                        "username": "reachnetha",
                        "content": "\\'\\'\\'\\n\\nselect id, month,\\nsum(salary) over (partition by id order by month ROWS between 2 PRECEDING  AND 0 FOLLOWING ) salary\\n\\nfrom \\n(select id,\\nmonth,\\n salary,\\nrow_number() over (partition by id order by month desc) rn\\nfrom Employee)\\nwhere rn !=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "thethirstymayor",
                        "content": "The question states that only the prior 3 months are to be listed per ID, right?\\n\\nFor one of the solutions, it lists the expected output as follows: \\n\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":**[[1,4,130],[1,3,90],[1,2,50],[1,1,20]**,[2,1,20],[3,3,100],[3,2,40]]}\\n\\nThis is wrong, as it includes 4 months rather than 3.  This question should be fixed or removed."
                    }
                ]
            },
            {
                "id": 1574079,
                "content": [
                    {
                        "username": "wuweiwei0423",
                        "content": "\\'\\'\\'\\nselect id, month, salary from (\\nselect id, month, sum(salary) over(partition by id order by month range between 2 preceding and current row) as salary,\\n   rank() over(partition by id order by month desc) as rnk from employee) temp\\nwhere rnk!=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "Selene1129xjl",
                        "content": "using range between in the window function is very elegant, thx"
                    },
                    {
                        "username": "garyJarred",
                        "content": "I failed the following test case:\\nid,month,salary\\n1,1,20\\n2,1,20\\n1,2,30\\n2,2,30\\n3,2,40\\n1,3,40\\n3,3,60\\n1,4,60\\n3,4,70\\n1,5,70\\nand here is the expected output:\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":[[1,4,130],[1,3,90],[1,2,50],[1,1,20],[2,1,20],[3,3,100],[3,2,40]]}\\nthere are 5 months in Jan, Except the most recent one, 5, we need return the cumsum from 2 to 4, right?\\ncan anyone kindly explain why the expect output give 4 records in Jan?\\n"
                    },
                    {
                        "username": "youlina3",
                        "content": "I found there is no window funciton solution as the official solution. So I am very confused about whether we can use window function in interview."
                    },
                    {
                        "username": "lee03215",
                        "content": "WITH cte AS(\\nSELECT id, month, Salary, ROW_NUMBER() OVER (PARTITION BY Id ORDER BY Month DESC) AS n\\nFROM Employee)\\nSELECT E1.Id, E1.Month, E1.Salary + IFNULL(E2.Salary, 0) + IFNULL(E3.Salary, 0) AS Salary\\nFROM cte AS E1\\nLEFT JOIN cte AS E2 ON E1.id = E2.id AND E1.Month - 1 = E2.Month\\nLEFT JOIN cte AS E3 ON E2.id = E3.id AND E2.Month - 1 = E3.Month\\nWHERE E1.n <> 1;"
                    },
                    {
                        "username": "jessiececilya",
                        "content": "with t as\\n(select id, month, salary, rank() over(partition by id order by month desc) as R \\nfrom employee)\\nselect t.id, t.month, sum(t.salary) over(partition by t.id order by t.month rows between 2 preceding and current row) as salary \\nfrom t \\nwhere t.R!=1\\norder by t.id, month desc"
                    },
                    {
                        "username": "ramya---",
                        "content": "\\tSELECT ID, MONTH, CUMSUM AS SALARY FROM (\\n\\n\\tSELECT ID, MONTH ,MAX(MONTH) OVER (PARTITION BY ID) AS RECENT , \\n\\n\\tSUM(SALARY)  OVER (PARTITION BY ID ORDER BY MONTH ROWS BETWEEN 2\\n\\t\\tPRECEDING and CURRENT ROW ) AS CUMSUM FROM EMPLOYEE) G\\n\\n\\t\\tWHERE MONTH!=RECENT ORDER BY ID, MONTH DESC"
                    },
                    {
                        "username": "apurvasharma0611",
                        "content": "\\'\\'\\'\\nselect Id, Month, \\nSum(Salary) over(partition by Id Order by Id asc, Month asc  \\n                 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as Salary\\nfrom Employee\\nwhere concat(Id,Month) not in (select concat(Id, max(Month))from Employeegroup by Id)\\norder by Id asc, Month desc\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Jodie_ch",
                        "content": "with cte as(\\nselect Id, Month, Salary,\\ndense_rank() over (partition by Id order by Month desc) as rnk\\nfrom Employee)\\n\\nselect Id, Month, \\nsum(Salary) over (partition by Id order by Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW ) as Salary\\nfrom cte\\nwhere rnk > 1\\ngroup by Id, Month\\norder by Id asc, Month desc"
                    },
                    {
                        "username": "reachnetha",
                        "content": "\\'\\'\\'\\n\\nselect id, month,\\nsum(salary) over (partition by id order by month ROWS between 2 PRECEDING  AND 0 FOLLOWING ) salary\\n\\nfrom \\n(select id,\\nmonth,\\n salary,\\nrow_number() over (partition by id order by month desc) rn\\nfrom Employee)\\nwhere rn !=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "thethirstymayor",
                        "content": "The question states that only the prior 3 months are to be listed per ID, right?\\n\\nFor one of the solutions, it lists the expected output as follows: \\n\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":**[[1,4,130],[1,3,90],[1,2,50],[1,1,20]**,[2,1,20],[3,3,100],[3,2,40]]}\\n\\nThis is wrong, as it includes 4 months rather than 3.  This question should be fixed or removed."
                    }
                ]
            },
            {
                "id": 1573473,
                "content": [
                    {
                        "username": "wuweiwei0423",
                        "content": "\\'\\'\\'\\nselect id, month, salary from (\\nselect id, month, sum(salary) over(partition by id order by month range between 2 preceding and current row) as salary,\\n   rank() over(partition by id order by month desc) as rnk from employee) temp\\nwhere rnk!=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "Selene1129xjl",
                        "content": "using range between in the window function is very elegant, thx"
                    },
                    {
                        "username": "garyJarred",
                        "content": "I failed the following test case:\\nid,month,salary\\n1,1,20\\n2,1,20\\n1,2,30\\n2,2,30\\n3,2,40\\n1,3,40\\n3,3,60\\n1,4,60\\n3,4,70\\n1,5,70\\nand here is the expected output:\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":[[1,4,130],[1,3,90],[1,2,50],[1,1,20],[2,1,20],[3,3,100],[3,2,40]]}\\nthere are 5 months in Jan, Except the most recent one, 5, we need return the cumsum from 2 to 4, right?\\ncan anyone kindly explain why the expect output give 4 records in Jan?\\n"
                    },
                    {
                        "username": "youlina3",
                        "content": "I found there is no window funciton solution as the official solution. So I am very confused about whether we can use window function in interview."
                    },
                    {
                        "username": "lee03215",
                        "content": "WITH cte AS(\\nSELECT id, month, Salary, ROW_NUMBER() OVER (PARTITION BY Id ORDER BY Month DESC) AS n\\nFROM Employee)\\nSELECT E1.Id, E1.Month, E1.Salary + IFNULL(E2.Salary, 0) + IFNULL(E3.Salary, 0) AS Salary\\nFROM cte AS E1\\nLEFT JOIN cte AS E2 ON E1.id = E2.id AND E1.Month - 1 = E2.Month\\nLEFT JOIN cte AS E3 ON E2.id = E3.id AND E2.Month - 1 = E3.Month\\nWHERE E1.n <> 1;"
                    },
                    {
                        "username": "jessiececilya",
                        "content": "with t as\\n(select id, month, salary, rank() over(partition by id order by month desc) as R \\nfrom employee)\\nselect t.id, t.month, sum(t.salary) over(partition by t.id order by t.month rows between 2 preceding and current row) as salary \\nfrom t \\nwhere t.R!=1\\norder by t.id, month desc"
                    },
                    {
                        "username": "ramya---",
                        "content": "\\tSELECT ID, MONTH, CUMSUM AS SALARY FROM (\\n\\n\\tSELECT ID, MONTH ,MAX(MONTH) OVER (PARTITION BY ID) AS RECENT , \\n\\n\\tSUM(SALARY)  OVER (PARTITION BY ID ORDER BY MONTH ROWS BETWEEN 2\\n\\t\\tPRECEDING and CURRENT ROW ) AS CUMSUM FROM EMPLOYEE) G\\n\\n\\t\\tWHERE MONTH!=RECENT ORDER BY ID, MONTH DESC"
                    },
                    {
                        "username": "apurvasharma0611",
                        "content": "\\'\\'\\'\\nselect Id, Month, \\nSum(Salary) over(partition by Id Order by Id asc, Month asc  \\n                 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as Salary\\nfrom Employee\\nwhere concat(Id,Month) not in (select concat(Id, max(Month))from Employeegroup by Id)\\norder by Id asc, Month desc\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Jodie_ch",
                        "content": "with cte as(\\nselect Id, Month, Salary,\\ndense_rank() over (partition by Id order by Month desc) as rnk\\nfrom Employee)\\n\\nselect Id, Month, \\nsum(Salary) over (partition by Id order by Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW ) as Salary\\nfrom cte\\nwhere rnk > 1\\ngroup by Id, Month\\norder by Id asc, Month desc"
                    },
                    {
                        "username": "reachnetha",
                        "content": "\\'\\'\\'\\n\\nselect id, month,\\nsum(salary) over (partition by id order by month ROWS between 2 PRECEDING  AND 0 FOLLOWING ) salary\\n\\nfrom \\n(select id,\\nmonth,\\n salary,\\nrow_number() over (partition by id order by month desc) rn\\nfrom Employee)\\nwhere rn !=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "thethirstymayor",
                        "content": "The question states that only the prior 3 months are to be listed per ID, right?\\n\\nFor one of the solutions, it lists the expected output as follows: \\n\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":**[[1,4,130],[1,3,90],[1,2,50],[1,1,20]**,[2,1,20],[3,3,100],[3,2,40]]}\\n\\nThis is wrong, as it includes 4 months rather than 3.  This question should be fixed or removed."
                    }
                ]
            },
            {
                "id": 1572985,
                "content": [
                    {
                        "username": "wuweiwei0423",
                        "content": "\\'\\'\\'\\nselect id, month, salary from (\\nselect id, month, sum(salary) over(partition by id order by month range between 2 preceding and current row) as salary,\\n   rank() over(partition by id order by month desc) as rnk from employee) temp\\nwhere rnk!=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "Selene1129xjl",
                        "content": "using range between in the window function is very elegant, thx"
                    },
                    {
                        "username": "garyJarred",
                        "content": "I failed the following test case:\\nid,month,salary\\n1,1,20\\n2,1,20\\n1,2,30\\n2,2,30\\n3,2,40\\n1,3,40\\n3,3,60\\n1,4,60\\n3,4,70\\n1,5,70\\nand here is the expected output:\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":[[1,4,130],[1,3,90],[1,2,50],[1,1,20],[2,1,20],[3,3,100],[3,2,40]]}\\nthere are 5 months in Jan, Except the most recent one, 5, we need return the cumsum from 2 to 4, right?\\ncan anyone kindly explain why the expect output give 4 records in Jan?\\n"
                    },
                    {
                        "username": "youlina3",
                        "content": "I found there is no window funciton solution as the official solution. So I am very confused about whether we can use window function in interview."
                    },
                    {
                        "username": "lee03215",
                        "content": "WITH cte AS(\\nSELECT id, month, Salary, ROW_NUMBER() OVER (PARTITION BY Id ORDER BY Month DESC) AS n\\nFROM Employee)\\nSELECT E1.Id, E1.Month, E1.Salary + IFNULL(E2.Salary, 0) + IFNULL(E3.Salary, 0) AS Salary\\nFROM cte AS E1\\nLEFT JOIN cte AS E2 ON E1.id = E2.id AND E1.Month - 1 = E2.Month\\nLEFT JOIN cte AS E3 ON E2.id = E3.id AND E2.Month - 1 = E3.Month\\nWHERE E1.n <> 1;"
                    },
                    {
                        "username": "jessiececilya",
                        "content": "with t as\\n(select id, month, salary, rank() over(partition by id order by month desc) as R \\nfrom employee)\\nselect t.id, t.month, sum(t.salary) over(partition by t.id order by t.month rows between 2 preceding and current row) as salary \\nfrom t \\nwhere t.R!=1\\norder by t.id, month desc"
                    },
                    {
                        "username": "ramya---",
                        "content": "\\tSELECT ID, MONTH, CUMSUM AS SALARY FROM (\\n\\n\\tSELECT ID, MONTH ,MAX(MONTH) OVER (PARTITION BY ID) AS RECENT , \\n\\n\\tSUM(SALARY)  OVER (PARTITION BY ID ORDER BY MONTH ROWS BETWEEN 2\\n\\t\\tPRECEDING and CURRENT ROW ) AS CUMSUM FROM EMPLOYEE) G\\n\\n\\t\\tWHERE MONTH!=RECENT ORDER BY ID, MONTH DESC"
                    },
                    {
                        "username": "apurvasharma0611",
                        "content": "\\'\\'\\'\\nselect Id, Month, \\nSum(Salary) over(partition by Id Order by Id asc, Month asc  \\n                 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as Salary\\nfrom Employee\\nwhere concat(Id,Month) not in (select concat(Id, max(Month))from Employeegroup by Id)\\norder by Id asc, Month desc\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Jodie_ch",
                        "content": "with cte as(\\nselect Id, Month, Salary,\\ndense_rank() over (partition by Id order by Month desc) as rnk\\nfrom Employee)\\n\\nselect Id, Month, \\nsum(Salary) over (partition by Id order by Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW ) as Salary\\nfrom cte\\nwhere rnk > 1\\ngroup by Id, Month\\norder by Id asc, Month desc"
                    },
                    {
                        "username": "reachnetha",
                        "content": "\\'\\'\\'\\n\\nselect id, month,\\nsum(salary) over (partition by id order by month ROWS between 2 PRECEDING  AND 0 FOLLOWING ) salary\\n\\nfrom \\n(select id,\\nmonth,\\n salary,\\nrow_number() over (partition by id order by month desc) rn\\nfrom Employee)\\nwhere rn !=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "thethirstymayor",
                        "content": "The question states that only the prior 3 months are to be listed per ID, right?\\n\\nFor one of the solutions, it lists the expected output as follows: \\n\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":**[[1,4,130],[1,3,90],[1,2,50],[1,1,20]**,[2,1,20],[3,3,100],[3,2,40]]}\\n\\nThis is wrong, as it includes 4 months rather than 3.  This question should be fixed or removed."
                    }
                ]
            },
            {
                "id": 1567746,
                "content": [
                    {
                        "username": "wuweiwei0423",
                        "content": "\\'\\'\\'\\nselect id, month, salary from (\\nselect id, month, sum(salary) over(partition by id order by month range between 2 preceding and current row) as salary,\\n   rank() over(partition by id order by month desc) as rnk from employee) temp\\nwhere rnk!=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "Selene1129xjl",
                        "content": "using range between in the window function is very elegant, thx"
                    },
                    {
                        "username": "garyJarred",
                        "content": "I failed the following test case:\\nid,month,salary\\n1,1,20\\n2,1,20\\n1,2,30\\n2,2,30\\n3,2,40\\n1,3,40\\n3,3,60\\n1,4,60\\n3,4,70\\n1,5,70\\nand here is the expected output:\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":[[1,4,130],[1,3,90],[1,2,50],[1,1,20],[2,1,20],[3,3,100],[3,2,40]]}\\nthere are 5 months in Jan, Except the most recent one, 5, we need return the cumsum from 2 to 4, right?\\ncan anyone kindly explain why the expect output give 4 records in Jan?\\n"
                    },
                    {
                        "username": "youlina3",
                        "content": "I found there is no window funciton solution as the official solution. So I am very confused about whether we can use window function in interview."
                    },
                    {
                        "username": "lee03215",
                        "content": "WITH cte AS(\\nSELECT id, month, Salary, ROW_NUMBER() OVER (PARTITION BY Id ORDER BY Month DESC) AS n\\nFROM Employee)\\nSELECT E1.Id, E1.Month, E1.Salary + IFNULL(E2.Salary, 0) + IFNULL(E3.Salary, 0) AS Salary\\nFROM cte AS E1\\nLEFT JOIN cte AS E2 ON E1.id = E2.id AND E1.Month - 1 = E2.Month\\nLEFT JOIN cte AS E3 ON E2.id = E3.id AND E2.Month - 1 = E3.Month\\nWHERE E1.n <> 1;"
                    },
                    {
                        "username": "jessiececilya",
                        "content": "with t as\\n(select id, month, salary, rank() over(partition by id order by month desc) as R \\nfrom employee)\\nselect t.id, t.month, sum(t.salary) over(partition by t.id order by t.month rows between 2 preceding and current row) as salary \\nfrom t \\nwhere t.R!=1\\norder by t.id, month desc"
                    },
                    {
                        "username": "ramya---",
                        "content": "\\tSELECT ID, MONTH, CUMSUM AS SALARY FROM (\\n\\n\\tSELECT ID, MONTH ,MAX(MONTH) OVER (PARTITION BY ID) AS RECENT , \\n\\n\\tSUM(SALARY)  OVER (PARTITION BY ID ORDER BY MONTH ROWS BETWEEN 2\\n\\t\\tPRECEDING and CURRENT ROW ) AS CUMSUM FROM EMPLOYEE) G\\n\\n\\t\\tWHERE MONTH!=RECENT ORDER BY ID, MONTH DESC"
                    },
                    {
                        "username": "apurvasharma0611",
                        "content": "\\'\\'\\'\\nselect Id, Month, \\nSum(Salary) over(partition by Id Order by Id asc, Month asc  \\n                 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as Salary\\nfrom Employee\\nwhere concat(Id,Month) not in (select concat(Id, max(Month))from Employeegroup by Id)\\norder by Id asc, Month desc\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Jodie_ch",
                        "content": "with cte as(\\nselect Id, Month, Salary,\\ndense_rank() over (partition by Id order by Month desc) as rnk\\nfrom Employee)\\n\\nselect Id, Month, \\nsum(Salary) over (partition by Id order by Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW ) as Salary\\nfrom cte\\nwhere rnk > 1\\ngroup by Id, Month\\norder by Id asc, Month desc"
                    },
                    {
                        "username": "reachnetha",
                        "content": "\\'\\'\\'\\n\\nselect id, month,\\nsum(salary) over (partition by id order by month ROWS between 2 PRECEDING  AND 0 FOLLOWING ) salary\\n\\nfrom \\n(select id,\\nmonth,\\n salary,\\nrow_number() over (partition by id order by month desc) rn\\nfrom Employee)\\nwhere rn !=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "thethirstymayor",
                        "content": "The question states that only the prior 3 months are to be listed per ID, right?\\n\\nFor one of the solutions, it lists the expected output as follows: \\n\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":**[[1,4,130],[1,3,90],[1,2,50],[1,1,20]**,[2,1,20],[3,3,100],[3,2,40]]}\\n\\nThis is wrong, as it includes 4 months rather than 3.  This question should be fixed or removed."
                    }
                ]
            },
            {
                "id": 1568427,
                "content": [
                    {
                        "username": "wuweiwei0423",
                        "content": "\\'\\'\\'\\nselect id, month, salary from (\\nselect id, month, sum(salary) over(partition by id order by month range between 2 preceding and current row) as salary,\\n   rank() over(partition by id order by month desc) as rnk from employee) temp\\nwhere rnk!=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "Selene1129xjl",
                        "content": "using range between in the window function is very elegant, thx"
                    },
                    {
                        "username": "garyJarred",
                        "content": "I failed the following test case:\\nid,month,salary\\n1,1,20\\n2,1,20\\n1,2,30\\n2,2,30\\n3,2,40\\n1,3,40\\n3,3,60\\n1,4,60\\n3,4,70\\n1,5,70\\nand here is the expected output:\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":[[1,4,130],[1,3,90],[1,2,50],[1,1,20],[2,1,20],[3,3,100],[3,2,40]]}\\nthere are 5 months in Jan, Except the most recent one, 5, we need return the cumsum from 2 to 4, right?\\ncan anyone kindly explain why the expect output give 4 records in Jan?\\n"
                    },
                    {
                        "username": "youlina3",
                        "content": "I found there is no window funciton solution as the official solution. So I am very confused about whether we can use window function in interview."
                    },
                    {
                        "username": "lee03215",
                        "content": "WITH cte AS(\\nSELECT id, month, Salary, ROW_NUMBER() OVER (PARTITION BY Id ORDER BY Month DESC) AS n\\nFROM Employee)\\nSELECT E1.Id, E1.Month, E1.Salary + IFNULL(E2.Salary, 0) + IFNULL(E3.Salary, 0) AS Salary\\nFROM cte AS E1\\nLEFT JOIN cte AS E2 ON E1.id = E2.id AND E1.Month - 1 = E2.Month\\nLEFT JOIN cte AS E3 ON E2.id = E3.id AND E2.Month - 1 = E3.Month\\nWHERE E1.n <> 1;"
                    },
                    {
                        "username": "jessiececilya",
                        "content": "with t as\\n(select id, month, salary, rank() over(partition by id order by month desc) as R \\nfrom employee)\\nselect t.id, t.month, sum(t.salary) over(partition by t.id order by t.month rows between 2 preceding and current row) as salary \\nfrom t \\nwhere t.R!=1\\norder by t.id, month desc"
                    },
                    {
                        "username": "ramya---",
                        "content": "\\tSELECT ID, MONTH, CUMSUM AS SALARY FROM (\\n\\n\\tSELECT ID, MONTH ,MAX(MONTH) OVER (PARTITION BY ID) AS RECENT , \\n\\n\\tSUM(SALARY)  OVER (PARTITION BY ID ORDER BY MONTH ROWS BETWEEN 2\\n\\t\\tPRECEDING and CURRENT ROW ) AS CUMSUM FROM EMPLOYEE) G\\n\\n\\t\\tWHERE MONTH!=RECENT ORDER BY ID, MONTH DESC"
                    },
                    {
                        "username": "apurvasharma0611",
                        "content": "\\'\\'\\'\\nselect Id, Month, \\nSum(Salary) over(partition by Id Order by Id asc, Month asc  \\n                 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as Salary\\nfrom Employee\\nwhere concat(Id,Month) not in (select concat(Id, max(Month))from Employeegroup by Id)\\norder by Id asc, Month desc\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Jodie_ch",
                        "content": "with cte as(\\nselect Id, Month, Salary,\\ndense_rank() over (partition by Id order by Month desc) as rnk\\nfrom Employee)\\n\\nselect Id, Month, \\nsum(Salary) over (partition by Id order by Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW ) as Salary\\nfrom cte\\nwhere rnk > 1\\ngroup by Id, Month\\norder by Id asc, Month desc"
                    },
                    {
                        "username": "reachnetha",
                        "content": "\\'\\'\\'\\n\\nselect id, month,\\nsum(salary) over (partition by id order by month ROWS between 2 PRECEDING  AND 0 FOLLOWING ) salary\\n\\nfrom \\n(select id,\\nmonth,\\n salary,\\nrow_number() over (partition by id order by month desc) rn\\nfrom Employee)\\nwhere rn !=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "thethirstymayor",
                        "content": "The question states that only the prior 3 months are to be listed per ID, right?\\n\\nFor one of the solutions, it lists the expected output as follows: \\n\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":**[[1,4,130],[1,3,90],[1,2,50],[1,1,20]**,[2,1,20],[3,3,100],[3,2,40]]}\\n\\nThis is wrong, as it includes 4 months rather than 3.  This question should be fixed or removed."
                    }
                ]
            },
            {
                "id": 1569301,
                "content": [
                    {
                        "username": "wuweiwei0423",
                        "content": "\\'\\'\\'\\nselect id, month, salary from (\\nselect id, month, sum(salary) over(partition by id order by month range between 2 preceding and current row) as salary,\\n   rank() over(partition by id order by month desc) as rnk from employee) temp\\nwhere rnk!=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "Selene1129xjl",
                        "content": "using range between in the window function is very elegant, thx"
                    },
                    {
                        "username": "garyJarred",
                        "content": "I failed the following test case:\\nid,month,salary\\n1,1,20\\n2,1,20\\n1,2,30\\n2,2,30\\n3,2,40\\n1,3,40\\n3,3,60\\n1,4,60\\n3,4,70\\n1,5,70\\nand here is the expected output:\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":[[1,4,130],[1,3,90],[1,2,50],[1,1,20],[2,1,20],[3,3,100],[3,2,40]]}\\nthere are 5 months in Jan, Except the most recent one, 5, we need return the cumsum from 2 to 4, right?\\ncan anyone kindly explain why the expect output give 4 records in Jan?\\n"
                    },
                    {
                        "username": "youlina3",
                        "content": "I found there is no window funciton solution as the official solution. So I am very confused about whether we can use window function in interview."
                    },
                    {
                        "username": "lee03215",
                        "content": "WITH cte AS(\\nSELECT id, month, Salary, ROW_NUMBER() OVER (PARTITION BY Id ORDER BY Month DESC) AS n\\nFROM Employee)\\nSELECT E1.Id, E1.Month, E1.Salary + IFNULL(E2.Salary, 0) + IFNULL(E3.Salary, 0) AS Salary\\nFROM cte AS E1\\nLEFT JOIN cte AS E2 ON E1.id = E2.id AND E1.Month - 1 = E2.Month\\nLEFT JOIN cte AS E3 ON E2.id = E3.id AND E2.Month - 1 = E3.Month\\nWHERE E1.n <> 1;"
                    },
                    {
                        "username": "jessiececilya",
                        "content": "with t as\\n(select id, month, salary, rank() over(partition by id order by month desc) as R \\nfrom employee)\\nselect t.id, t.month, sum(t.salary) over(partition by t.id order by t.month rows between 2 preceding and current row) as salary \\nfrom t \\nwhere t.R!=1\\norder by t.id, month desc"
                    },
                    {
                        "username": "ramya---",
                        "content": "\\tSELECT ID, MONTH, CUMSUM AS SALARY FROM (\\n\\n\\tSELECT ID, MONTH ,MAX(MONTH) OVER (PARTITION BY ID) AS RECENT , \\n\\n\\tSUM(SALARY)  OVER (PARTITION BY ID ORDER BY MONTH ROWS BETWEEN 2\\n\\t\\tPRECEDING and CURRENT ROW ) AS CUMSUM FROM EMPLOYEE) G\\n\\n\\t\\tWHERE MONTH!=RECENT ORDER BY ID, MONTH DESC"
                    },
                    {
                        "username": "apurvasharma0611",
                        "content": "\\'\\'\\'\\nselect Id, Month, \\nSum(Salary) over(partition by Id Order by Id asc, Month asc  \\n                 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as Salary\\nfrom Employee\\nwhere concat(Id,Month) not in (select concat(Id, max(Month))from Employeegroup by Id)\\norder by Id asc, Month desc\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Jodie_ch",
                        "content": "with cte as(\\nselect Id, Month, Salary,\\ndense_rank() over (partition by Id order by Month desc) as rnk\\nfrom Employee)\\n\\nselect Id, Month, \\nsum(Salary) over (partition by Id order by Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW ) as Salary\\nfrom cte\\nwhere rnk > 1\\ngroup by Id, Month\\norder by Id asc, Month desc"
                    },
                    {
                        "username": "reachnetha",
                        "content": "\\'\\'\\'\\n\\nselect id, month,\\nsum(salary) over (partition by id order by month ROWS between 2 PRECEDING  AND 0 FOLLOWING ) salary\\n\\nfrom \\n(select id,\\nmonth,\\n salary,\\nrow_number() over (partition by id order by month desc) rn\\nfrom Employee)\\nwhere rn !=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "thethirstymayor",
                        "content": "The question states that only the prior 3 months are to be listed per ID, right?\\n\\nFor one of the solutions, it lists the expected output as follows: \\n\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":**[[1,4,130],[1,3,90],[1,2,50],[1,1,20]**,[2,1,20],[3,3,100],[3,2,40]]}\\n\\nThis is wrong, as it includes 4 months rather than 3.  This question should be fixed or removed."
                    }
                ]
            },
            {
                "id": 1575685,
                "content": [
                    {
                        "username": "wuweiwei0423",
                        "content": "\\'\\'\\'\\nselect id, month, salary from (\\nselect id, month, sum(salary) over(partition by id order by month range between 2 preceding and current row) as salary,\\n   rank() over(partition by id order by month desc) as rnk from employee) temp\\nwhere rnk!=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "Selene1129xjl",
                        "content": "using range between in the window function is very elegant, thx"
                    },
                    {
                        "username": "garyJarred",
                        "content": "I failed the following test case:\\nid,month,salary\\n1,1,20\\n2,1,20\\n1,2,30\\n2,2,30\\n3,2,40\\n1,3,40\\n3,3,60\\n1,4,60\\n3,4,70\\n1,5,70\\nand here is the expected output:\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":[[1,4,130],[1,3,90],[1,2,50],[1,1,20],[2,1,20],[3,3,100],[3,2,40]]}\\nthere are 5 months in Jan, Except the most recent one, 5, we need return the cumsum from 2 to 4, right?\\ncan anyone kindly explain why the expect output give 4 records in Jan?\\n"
                    },
                    {
                        "username": "youlina3",
                        "content": "I found there is no window funciton solution as the official solution. So I am very confused about whether we can use window function in interview."
                    },
                    {
                        "username": "lee03215",
                        "content": "WITH cte AS(\\nSELECT id, month, Salary, ROW_NUMBER() OVER (PARTITION BY Id ORDER BY Month DESC) AS n\\nFROM Employee)\\nSELECT E1.Id, E1.Month, E1.Salary + IFNULL(E2.Salary, 0) + IFNULL(E3.Salary, 0) AS Salary\\nFROM cte AS E1\\nLEFT JOIN cte AS E2 ON E1.id = E2.id AND E1.Month - 1 = E2.Month\\nLEFT JOIN cte AS E3 ON E2.id = E3.id AND E2.Month - 1 = E3.Month\\nWHERE E1.n <> 1;"
                    },
                    {
                        "username": "jessiececilya",
                        "content": "with t as\\n(select id, month, salary, rank() over(partition by id order by month desc) as R \\nfrom employee)\\nselect t.id, t.month, sum(t.salary) over(partition by t.id order by t.month rows between 2 preceding and current row) as salary \\nfrom t \\nwhere t.R!=1\\norder by t.id, month desc"
                    },
                    {
                        "username": "ramya---",
                        "content": "\\tSELECT ID, MONTH, CUMSUM AS SALARY FROM (\\n\\n\\tSELECT ID, MONTH ,MAX(MONTH) OVER (PARTITION BY ID) AS RECENT , \\n\\n\\tSUM(SALARY)  OVER (PARTITION BY ID ORDER BY MONTH ROWS BETWEEN 2\\n\\t\\tPRECEDING and CURRENT ROW ) AS CUMSUM FROM EMPLOYEE) G\\n\\n\\t\\tWHERE MONTH!=RECENT ORDER BY ID, MONTH DESC"
                    },
                    {
                        "username": "apurvasharma0611",
                        "content": "\\'\\'\\'\\nselect Id, Month, \\nSum(Salary) over(partition by Id Order by Id asc, Month asc  \\n                 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as Salary\\nfrom Employee\\nwhere concat(Id,Month) not in (select concat(Id, max(Month))from Employeegroup by Id)\\norder by Id asc, Month desc\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Jodie_ch",
                        "content": "with cte as(\\nselect Id, Month, Salary,\\ndense_rank() over (partition by Id order by Month desc) as rnk\\nfrom Employee)\\n\\nselect Id, Month, \\nsum(Salary) over (partition by Id order by Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW ) as Salary\\nfrom cte\\nwhere rnk > 1\\ngroup by Id, Month\\norder by Id asc, Month desc"
                    },
                    {
                        "username": "reachnetha",
                        "content": "\\'\\'\\'\\n\\nselect id, month,\\nsum(salary) over (partition by id order by month ROWS between 2 PRECEDING  AND 0 FOLLOWING ) salary\\n\\nfrom \\n(select id,\\nmonth,\\n salary,\\nrow_number() over (partition by id order by month desc) rn\\nfrom Employee)\\nwhere rn !=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "thethirstymayor",
                        "content": "The question states that only the prior 3 months are to be listed per ID, right?\\n\\nFor one of the solutions, it lists the expected output as follows: \\n\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":**[[1,4,130],[1,3,90],[1,2,50],[1,1,20]**,[2,1,20],[3,3,100],[3,2,40]]}\\n\\nThis is wrong, as it includes 4 months rather than 3.  This question should be fixed or removed."
                    }
                ]
            },
            {
                "id": 1575325,
                "content": [
                    {
                        "username": "wuweiwei0423",
                        "content": "\\'\\'\\'\\nselect id, month, salary from (\\nselect id, month, sum(salary) over(partition by id order by month range between 2 preceding and current row) as salary,\\n   rank() over(partition by id order by month desc) as rnk from employee) temp\\nwhere rnk!=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "Selene1129xjl",
                        "content": "using range between in the window function is very elegant, thx"
                    },
                    {
                        "username": "garyJarred",
                        "content": "I failed the following test case:\\nid,month,salary\\n1,1,20\\n2,1,20\\n1,2,30\\n2,2,30\\n3,2,40\\n1,3,40\\n3,3,60\\n1,4,60\\n3,4,70\\n1,5,70\\nand here is the expected output:\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":[[1,4,130],[1,3,90],[1,2,50],[1,1,20],[2,1,20],[3,3,100],[3,2,40]]}\\nthere are 5 months in Jan, Except the most recent one, 5, we need return the cumsum from 2 to 4, right?\\ncan anyone kindly explain why the expect output give 4 records in Jan?\\n"
                    },
                    {
                        "username": "youlina3",
                        "content": "I found there is no window funciton solution as the official solution. So I am very confused about whether we can use window function in interview."
                    },
                    {
                        "username": "lee03215",
                        "content": "WITH cte AS(\\nSELECT id, month, Salary, ROW_NUMBER() OVER (PARTITION BY Id ORDER BY Month DESC) AS n\\nFROM Employee)\\nSELECT E1.Id, E1.Month, E1.Salary + IFNULL(E2.Salary, 0) + IFNULL(E3.Salary, 0) AS Salary\\nFROM cte AS E1\\nLEFT JOIN cte AS E2 ON E1.id = E2.id AND E1.Month - 1 = E2.Month\\nLEFT JOIN cte AS E3 ON E2.id = E3.id AND E2.Month - 1 = E3.Month\\nWHERE E1.n <> 1;"
                    },
                    {
                        "username": "jessiececilya",
                        "content": "with t as\\n(select id, month, salary, rank() over(partition by id order by month desc) as R \\nfrom employee)\\nselect t.id, t.month, sum(t.salary) over(partition by t.id order by t.month rows between 2 preceding and current row) as salary \\nfrom t \\nwhere t.R!=1\\norder by t.id, month desc"
                    },
                    {
                        "username": "ramya---",
                        "content": "\\tSELECT ID, MONTH, CUMSUM AS SALARY FROM (\\n\\n\\tSELECT ID, MONTH ,MAX(MONTH) OVER (PARTITION BY ID) AS RECENT , \\n\\n\\tSUM(SALARY)  OVER (PARTITION BY ID ORDER BY MONTH ROWS BETWEEN 2\\n\\t\\tPRECEDING and CURRENT ROW ) AS CUMSUM FROM EMPLOYEE) G\\n\\n\\t\\tWHERE MONTH!=RECENT ORDER BY ID, MONTH DESC"
                    },
                    {
                        "username": "apurvasharma0611",
                        "content": "\\'\\'\\'\\nselect Id, Month, \\nSum(Salary) over(partition by Id Order by Id asc, Month asc  \\n                 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as Salary\\nfrom Employee\\nwhere concat(Id,Month) not in (select concat(Id, max(Month))from Employeegroup by Id)\\norder by Id asc, Month desc\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Jodie_ch",
                        "content": "with cte as(\\nselect Id, Month, Salary,\\ndense_rank() over (partition by Id order by Month desc) as rnk\\nfrom Employee)\\n\\nselect Id, Month, \\nsum(Salary) over (partition by Id order by Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW ) as Salary\\nfrom cte\\nwhere rnk > 1\\ngroup by Id, Month\\norder by Id asc, Month desc"
                    },
                    {
                        "username": "reachnetha",
                        "content": "\\'\\'\\'\\n\\nselect id, month,\\nsum(salary) over (partition by id order by month ROWS between 2 PRECEDING  AND 0 FOLLOWING ) salary\\n\\nfrom \\n(select id,\\nmonth,\\n salary,\\nrow_number() over (partition by id order by month desc) rn\\nfrom Employee)\\nwhere rn !=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "thethirstymayor",
                        "content": "The question states that only the prior 3 months are to be listed per ID, right?\\n\\nFor one of the solutions, it lists the expected output as follows: \\n\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":**[[1,4,130],[1,3,90],[1,2,50],[1,1,20]**,[2,1,20],[3,3,100],[3,2,40]]}\\n\\nThis is wrong, as it includes 4 months rather than 3.  This question should be fixed or removed."
                    }
                ]
            },
            {
                "id": 1574984,
                "content": [
                    {
                        "username": "wuweiwei0423",
                        "content": "\\'\\'\\'\\nselect id, month, salary from (\\nselect id, month, sum(salary) over(partition by id order by month range between 2 preceding and current row) as salary,\\n   rank() over(partition by id order by month desc) as rnk from employee) temp\\nwhere rnk!=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "Selene1129xjl",
                        "content": "using range between in the window function is very elegant, thx"
                    },
                    {
                        "username": "garyJarred",
                        "content": "I failed the following test case:\\nid,month,salary\\n1,1,20\\n2,1,20\\n1,2,30\\n2,2,30\\n3,2,40\\n1,3,40\\n3,3,60\\n1,4,60\\n3,4,70\\n1,5,70\\nand here is the expected output:\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":[[1,4,130],[1,3,90],[1,2,50],[1,1,20],[2,1,20],[3,3,100],[3,2,40]]}\\nthere are 5 months in Jan, Except the most recent one, 5, we need return the cumsum from 2 to 4, right?\\ncan anyone kindly explain why the expect output give 4 records in Jan?\\n"
                    },
                    {
                        "username": "youlina3",
                        "content": "I found there is no window funciton solution as the official solution. So I am very confused about whether we can use window function in interview."
                    },
                    {
                        "username": "lee03215",
                        "content": "WITH cte AS(\\nSELECT id, month, Salary, ROW_NUMBER() OVER (PARTITION BY Id ORDER BY Month DESC) AS n\\nFROM Employee)\\nSELECT E1.Id, E1.Month, E1.Salary + IFNULL(E2.Salary, 0) + IFNULL(E3.Salary, 0) AS Salary\\nFROM cte AS E1\\nLEFT JOIN cte AS E2 ON E1.id = E2.id AND E1.Month - 1 = E2.Month\\nLEFT JOIN cte AS E3 ON E2.id = E3.id AND E2.Month - 1 = E3.Month\\nWHERE E1.n <> 1;"
                    },
                    {
                        "username": "jessiececilya",
                        "content": "with t as\\n(select id, month, salary, rank() over(partition by id order by month desc) as R \\nfrom employee)\\nselect t.id, t.month, sum(t.salary) over(partition by t.id order by t.month rows between 2 preceding and current row) as salary \\nfrom t \\nwhere t.R!=1\\norder by t.id, month desc"
                    },
                    {
                        "username": "ramya---",
                        "content": "\\tSELECT ID, MONTH, CUMSUM AS SALARY FROM (\\n\\n\\tSELECT ID, MONTH ,MAX(MONTH) OVER (PARTITION BY ID) AS RECENT , \\n\\n\\tSUM(SALARY)  OVER (PARTITION BY ID ORDER BY MONTH ROWS BETWEEN 2\\n\\t\\tPRECEDING and CURRENT ROW ) AS CUMSUM FROM EMPLOYEE) G\\n\\n\\t\\tWHERE MONTH!=RECENT ORDER BY ID, MONTH DESC"
                    },
                    {
                        "username": "apurvasharma0611",
                        "content": "\\'\\'\\'\\nselect Id, Month, \\nSum(Salary) over(partition by Id Order by Id asc, Month asc  \\n                 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as Salary\\nfrom Employee\\nwhere concat(Id,Month) not in (select concat(Id, max(Month))from Employeegroup by Id)\\norder by Id asc, Month desc\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Jodie_ch",
                        "content": "with cte as(\\nselect Id, Month, Salary,\\ndense_rank() over (partition by Id order by Month desc) as rnk\\nfrom Employee)\\n\\nselect Id, Month, \\nsum(Salary) over (partition by Id order by Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW ) as Salary\\nfrom cte\\nwhere rnk > 1\\ngroup by Id, Month\\norder by Id asc, Month desc"
                    },
                    {
                        "username": "reachnetha",
                        "content": "\\'\\'\\'\\n\\nselect id, month,\\nsum(salary) over (partition by id order by month ROWS between 2 PRECEDING  AND 0 FOLLOWING ) salary\\n\\nfrom \\n(select id,\\nmonth,\\n salary,\\nrow_number() over (partition by id order by month desc) rn\\nfrom Employee)\\nwhere rn !=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "thethirstymayor",
                        "content": "The question states that only the prior 3 months are to be listed per ID, right?\\n\\nFor one of the solutions, it lists the expected output as follows: \\n\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":**[[1,4,130],[1,3,90],[1,2,50],[1,1,20]**,[2,1,20],[3,3,100],[3,2,40]]}\\n\\nThis is wrong, as it includes 4 months rather than 3.  This question should be fixed or removed."
                    }
                ]
            },
            {
                "id": 1574618,
                "content": [
                    {
                        "username": "wuweiwei0423",
                        "content": "\\'\\'\\'\\nselect id, month, salary from (\\nselect id, month, sum(salary) over(partition by id order by month range between 2 preceding and current row) as salary,\\n   rank() over(partition by id order by month desc) as rnk from employee) temp\\nwhere rnk!=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "Selene1129xjl",
                        "content": "using range between in the window function is very elegant, thx"
                    },
                    {
                        "username": "garyJarred",
                        "content": "I failed the following test case:\\nid,month,salary\\n1,1,20\\n2,1,20\\n1,2,30\\n2,2,30\\n3,2,40\\n1,3,40\\n3,3,60\\n1,4,60\\n3,4,70\\n1,5,70\\nand here is the expected output:\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":[[1,4,130],[1,3,90],[1,2,50],[1,1,20],[2,1,20],[3,3,100],[3,2,40]]}\\nthere are 5 months in Jan, Except the most recent one, 5, we need return the cumsum from 2 to 4, right?\\ncan anyone kindly explain why the expect output give 4 records in Jan?\\n"
                    },
                    {
                        "username": "youlina3",
                        "content": "I found there is no window funciton solution as the official solution. So I am very confused about whether we can use window function in interview."
                    },
                    {
                        "username": "lee03215",
                        "content": "WITH cte AS(\\nSELECT id, month, Salary, ROW_NUMBER() OVER (PARTITION BY Id ORDER BY Month DESC) AS n\\nFROM Employee)\\nSELECT E1.Id, E1.Month, E1.Salary + IFNULL(E2.Salary, 0) + IFNULL(E3.Salary, 0) AS Salary\\nFROM cte AS E1\\nLEFT JOIN cte AS E2 ON E1.id = E2.id AND E1.Month - 1 = E2.Month\\nLEFT JOIN cte AS E3 ON E2.id = E3.id AND E2.Month - 1 = E3.Month\\nWHERE E1.n <> 1;"
                    },
                    {
                        "username": "jessiececilya",
                        "content": "with t as\\n(select id, month, salary, rank() over(partition by id order by month desc) as R \\nfrom employee)\\nselect t.id, t.month, sum(t.salary) over(partition by t.id order by t.month rows between 2 preceding and current row) as salary \\nfrom t \\nwhere t.R!=1\\norder by t.id, month desc"
                    },
                    {
                        "username": "ramya---",
                        "content": "\\tSELECT ID, MONTH, CUMSUM AS SALARY FROM (\\n\\n\\tSELECT ID, MONTH ,MAX(MONTH) OVER (PARTITION BY ID) AS RECENT , \\n\\n\\tSUM(SALARY)  OVER (PARTITION BY ID ORDER BY MONTH ROWS BETWEEN 2\\n\\t\\tPRECEDING and CURRENT ROW ) AS CUMSUM FROM EMPLOYEE) G\\n\\n\\t\\tWHERE MONTH!=RECENT ORDER BY ID, MONTH DESC"
                    },
                    {
                        "username": "apurvasharma0611",
                        "content": "\\'\\'\\'\\nselect Id, Month, \\nSum(Salary) over(partition by Id Order by Id asc, Month asc  \\n                 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as Salary\\nfrom Employee\\nwhere concat(Id,Month) not in (select concat(Id, max(Month))from Employeegroup by Id)\\norder by Id asc, Month desc\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Jodie_ch",
                        "content": "with cte as(\\nselect Id, Month, Salary,\\ndense_rank() over (partition by Id order by Month desc) as rnk\\nfrom Employee)\\n\\nselect Id, Month, \\nsum(Salary) over (partition by Id order by Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW ) as Salary\\nfrom cte\\nwhere rnk > 1\\ngroup by Id, Month\\norder by Id asc, Month desc"
                    },
                    {
                        "username": "reachnetha",
                        "content": "\\'\\'\\'\\n\\nselect id, month,\\nsum(salary) over (partition by id order by month ROWS between 2 PRECEDING  AND 0 FOLLOWING ) salary\\n\\nfrom \\n(select id,\\nmonth,\\n salary,\\nrow_number() over (partition by id order by month desc) rn\\nfrom Employee)\\nwhere rn !=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "thethirstymayor",
                        "content": "The question states that only the prior 3 months are to be listed per ID, right?\\n\\nFor one of the solutions, it lists the expected output as follows: \\n\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":**[[1,4,130],[1,3,90],[1,2,50],[1,1,20]**,[2,1,20],[3,3,100],[3,2,40]]}\\n\\nThis is wrong, as it includes 4 months rather than 3.  This question should be fixed or removed."
                    }
                ]
            },
            {
                "id": 1574079,
                "content": [
                    {
                        "username": "wuweiwei0423",
                        "content": "\\'\\'\\'\\nselect id, month, salary from (\\nselect id, month, sum(salary) over(partition by id order by month range between 2 preceding and current row) as salary,\\n   rank() over(partition by id order by month desc) as rnk from employee) temp\\nwhere rnk!=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "Selene1129xjl",
                        "content": "using range between in the window function is very elegant, thx"
                    },
                    {
                        "username": "garyJarred",
                        "content": "I failed the following test case:\\nid,month,salary\\n1,1,20\\n2,1,20\\n1,2,30\\n2,2,30\\n3,2,40\\n1,3,40\\n3,3,60\\n1,4,60\\n3,4,70\\n1,5,70\\nand here is the expected output:\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":[[1,4,130],[1,3,90],[1,2,50],[1,1,20],[2,1,20],[3,3,100],[3,2,40]]}\\nthere are 5 months in Jan, Except the most recent one, 5, we need return the cumsum from 2 to 4, right?\\ncan anyone kindly explain why the expect output give 4 records in Jan?\\n"
                    },
                    {
                        "username": "youlina3",
                        "content": "I found there is no window funciton solution as the official solution. So I am very confused about whether we can use window function in interview."
                    },
                    {
                        "username": "lee03215",
                        "content": "WITH cte AS(\\nSELECT id, month, Salary, ROW_NUMBER() OVER (PARTITION BY Id ORDER BY Month DESC) AS n\\nFROM Employee)\\nSELECT E1.Id, E1.Month, E1.Salary + IFNULL(E2.Salary, 0) + IFNULL(E3.Salary, 0) AS Salary\\nFROM cte AS E1\\nLEFT JOIN cte AS E2 ON E1.id = E2.id AND E1.Month - 1 = E2.Month\\nLEFT JOIN cte AS E3 ON E2.id = E3.id AND E2.Month - 1 = E3.Month\\nWHERE E1.n <> 1;"
                    },
                    {
                        "username": "jessiececilya",
                        "content": "with t as\\n(select id, month, salary, rank() over(partition by id order by month desc) as R \\nfrom employee)\\nselect t.id, t.month, sum(t.salary) over(partition by t.id order by t.month rows between 2 preceding and current row) as salary \\nfrom t \\nwhere t.R!=1\\norder by t.id, month desc"
                    },
                    {
                        "username": "ramya---",
                        "content": "\\tSELECT ID, MONTH, CUMSUM AS SALARY FROM (\\n\\n\\tSELECT ID, MONTH ,MAX(MONTH) OVER (PARTITION BY ID) AS RECENT , \\n\\n\\tSUM(SALARY)  OVER (PARTITION BY ID ORDER BY MONTH ROWS BETWEEN 2\\n\\t\\tPRECEDING and CURRENT ROW ) AS CUMSUM FROM EMPLOYEE) G\\n\\n\\t\\tWHERE MONTH!=RECENT ORDER BY ID, MONTH DESC"
                    },
                    {
                        "username": "apurvasharma0611",
                        "content": "\\'\\'\\'\\nselect Id, Month, \\nSum(Salary) over(partition by Id Order by Id asc, Month asc  \\n                 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as Salary\\nfrom Employee\\nwhere concat(Id,Month) not in (select concat(Id, max(Month))from Employeegroup by Id)\\norder by Id asc, Month desc\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Jodie_ch",
                        "content": "with cte as(\\nselect Id, Month, Salary,\\ndense_rank() over (partition by Id order by Month desc) as rnk\\nfrom Employee)\\n\\nselect Id, Month, \\nsum(Salary) over (partition by Id order by Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW ) as Salary\\nfrom cte\\nwhere rnk > 1\\ngroup by Id, Month\\norder by Id asc, Month desc"
                    },
                    {
                        "username": "reachnetha",
                        "content": "\\'\\'\\'\\n\\nselect id, month,\\nsum(salary) over (partition by id order by month ROWS between 2 PRECEDING  AND 0 FOLLOWING ) salary\\n\\nfrom \\n(select id,\\nmonth,\\n salary,\\nrow_number() over (partition by id order by month desc) rn\\nfrom Employee)\\nwhere rn !=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "thethirstymayor",
                        "content": "The question states that only the prior 3 months are to be listed per ID, right?\\n\\nFor one of the solutions, it lists the expected output as follows: \\n\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":**[[1,4,130],[1,3,90],[1,2,50],[1,1,20]**,[2,1,20],[3,3,100],[3,2,40]]}\\n\\nThis is wrong, as it includes 4 months rather than 3.  This question should be fixed or removed."
                    }
                ]
            },
            {
                "id": 1573473,
                "content": [
                    {
                        "username": "wuweiwei0423",
                        "content": "\\'\\'\\'\\nselect id, month, salary from (\\nselect id, month, sum(salary) over(partition by id order by month range between 2 preceding and current row) as salary,\\n   rank() over(partition by id order by month desc) as rnk from employee) temp\\nwhere rnk!=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "Selene1129xjl",
                        "content": "using range between in the window function is very elegant, thx"
                    },
                    {
                        "username": "garyJarred",
                        "content": "I failed the following test case:\\nid,month,salary\\n1,1,20\\n2,1,20\\n1,2,30\\n2,2,30\\n3,2,40\\n1,3,40\\n3,3,60\\n1,4,60\\n3,4,70\\n1,5,70\\nand here is the expected output:\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":[[1,4,130],[1,3,90],[1,2,50],[1,1,20],[2,1,20],[3,3,100],[3,2,40]]}\\nthere are 5 months in Jan, Except the most recent one, 5, we need return the cumsum from 2 to 4, right?\\ncan anyone kindly explain why the expect output give 4 records in Jan?\\n"
                    },
                    {
                        "username": "youlina3",
                        "content": "I found there is no window funciton solution as the official solution. So I am very confused about whether we can use window function in interview."
                    },
                    {
                        "username": "lee03215",
                        "content": "WITH cte AS(\\nSELECT id, month, Salary, ROW_NUMBER() OVER (PARTITION BY Id ORDER BY Month DESC) AS n\\nFROM Employee)\\nSELECT E1.Id, E1.Month, E1.Salary + IFNULL(E2.Salary, 0) + IFNULL(E3.Salary, 0) AS Salary\\nFROM cte AS E1\\nLEFT JOIN cte AS E2 ON E1.id = E2.id AND E1.Month - 1 = E2.Month\\nLEFT JOIN cte AS E3 ON E2.id = E3.id AND E2.Month - 1 = E3.Month\\nWHERE E1.n <> 1;"
                    },
                    {
                        "username": "jessiececilya",
                        "content": "with t as\\n(select id, month, salary, rank() over(partition by id order by month desc) as R \\nfrom employee)\\nselect t.id, t.month, sum(t.salary) over(partition by t.id order by t.month rows between 2 preceding and current row) as salary \\nfrom t \\nwhere t.R!=1\\norder by t.id, month desc"
                    },
                    {
                        "username": "ramya---",
                        "content": "\\tSELECT ID, MONTH, CUMSUM AS SALARY FROM (\\n\\n\\tSELECT ID, MONTH ,MAX(MONTH) OVER (PARTITION BY ID) AS RECENT , \\n\\n\\tSUM(SALARY)  OVER (PARTITION BY ID ORDER BY MONTH ROWS BETWEEN 2\\n\\t\\tPRECEDING and CURRENT ROW ) AS CUMSUM FROM EMPLOYEE) G\\n\\n\\t\\tWHERE MONTH!=RECENT ORDER BY ID, MONTH DESC"
                    },
                    {
                        "username": "apurvasharma0611",
                        "content": "\\'\\'\\'\\nselect Id, Month, \\nSum(Salary) over(partition by Id Order by Id asc, Month asc  \\n                 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as Salary\\nfrom Employee\\nwhere concat(Id,Month) not in (select concat(Id, max(Month))from Employeegroup by Id)\\norder by Id asc, Month desc\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Jodie_ch",
                        "content": "with cte as(\\nselect Id, Month, Salary,\\ndense_rank() over (partition by Id order by Month desc) as rnk\\nfrom Employee)\\n\\nselect Id, Month, \\nsum(Salary) over (partition by Id order by Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW ) as Salary\\nfrom cte\\nwhere rnk > 1\\ngroup by Id, Month\\norder by Id asc, Month desc"
                    },
                    {
                        "username": "reachnetha",
                        "content": "\\'\\'\\'\\n\\nselect id, month,\\nsum(salary) over (partition by id order by month ROWS between 2 PRECEDING  AND 0 FOLLOWING ) salary\\n\\nfrom \\n(select id,\\nmonth,\\n salary,\\nrow_number() over (partition by id order by month desc) rn\\nfrom Employee)\\nwhere rn !=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "thethirstymayor",
                        "content": "The question states that only the prior 3 months are to be listed per ID, right?\\n\\nFor one of the solutions, it lists the expected output as follows: \\n\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":**[[1,4,130],[1,3,90],[1,2,50],[1,1,20]**,[2,1,20],[3,3,100],[3,2,40]]}\\n\\nThis is wrong, as it includes 4 months rather than 3.  This question should be fixed or removed."
                    }
                ]
            },
            {
                "id": 1572985,
                "content": [
                    {
                        "username": "wuweiwei0423",
                        "content": "\\'\\'\\'\\nselect id, month, salary from (\\nselect id, month, sum(salary) over(partition by id order by month range between 2 preceding and current row) as salary,\\n   rank() over(partition by id order by month desc) as rnk from employee) temp\\nwhere rnk!=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "Selene1129xjl",
                        "content": "using range between in the window function is very elegant, thx"
                    },
                    {
                        "username": "garyJarred",
                        "content": "I failed the following test case:\\nid,month,salary\\n1,1,20\\n2,1,20\\n1,2,30\\n2,2,30\\n3,2,40\\n1,3,40\\n3,3,60\\n1,4,60\\n3,4,70\\n1,5,70\\nand here is the expected output:\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":[[1,4,130],[1,3,90],[1,2,50],[1,1,20],[2,1,20],[3,3,100],[3,2,40]]}\\nthere are 5 months in Jan, Except the most recent one, 5, we need return the cumsum from 2 to 4, right?\\ncan anyone kindly explain why the expect output give 4 records in Jan?\\n"
                    },
                    {
                        "username": "youlina3",
                        "content": "I found there is no window funciton solution as the official solution. So I am very confused about whether we can use window function in interview."
                    },
                    {
                        "username": "lee03215",
                        "content": "WITH cte AS(\\nSELECT id, month, Salary, ROW_NUMBER() OVER (PARTITION BY Id ORDER BY Month DESC) AS n\\nFROM Employee)\\nSELECT E1.Id, E1.Month, E1.Salary + IFNULL(E2.Salary, 0) + IFNULL(E3.Salary, 0) AS Salary\\nFROM cte AS E1\\nLEFT JOIN cte AS E2 ON E1.id = E2.id AND E1.Month - 1 = E2.Month\\nLEFT JOIN cte AS E3 ON E2.id = E3.id AND E2.Month - 1 = E3.Month\\nWHERE E1.n <> 1;"
                    },
                    {
                        "username": "jessiececilya",
                        "content": "with t as\\n(select id, month, salary, rank() over(partition by id order by month desc) as R \\nfrom employee)\\nselect t.id, t.month, sum(t.salary) over(partition by t.id order by t.month rows between 2 preceding and current row) as salary \\nfrom t \\nwhere t.R!=1\\norder by t.id, month desc"
                    },
                    {
                        "username": "ramya---",
                        "content": "\\tSELECT ID, MONTH, CUMSUM AS SALARY FROM (\\n\\n\\tSELECT ID, MONTH ,MAX(MONTH) OVER (PARTITION BY ID) AS RECENT , \\n\\n\\tSUM(SALARY)  OVER (PARTITION BY ID ORDER BY MONTH ROWS BETWEEN 2\\n\\t\\tPRECEDING and CURRENT ROW ) AS CUMSUM FROM EMPLOYEE) G\\n\\n\\t\\tWHERE MONTH!=RECENT ORDER BY ID, MONTH DESC"
                    },
                    {
                        "username": "apurvasharma0611",
                        "content": "\\'\\'\\'\\nselect Id, Month, \\nSum(Salary) over(partition by Id Order by Id asc, Month asc  \\n                 ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as Salary\\nfrom Employee\\nwhere concat(Id,Month) not in (select concat(Id, max(Month))from Employeegroup by Id)\\norder by Id asc, Month desc\\n\\n\\'\\'\\'"
                    },
                    {
                        "username": "Jodie_ch",
                        "content": "with cte as(\\nselect Id, Month, Salary,\\ndense_rank() over (partition by Id order by Month desc) as rnk\\nfrom Employee)\\n\\nselect Id, Month, \\nsum(Salary) over (partition by Id order by Month ROWS BETWEEN 2 PRECEDING AND CURRENT ROW ) as Salary\\nfrom cte\\nwhere rnk > 1\\ngroup by Id, Month\\norder by Id asc, Month desc"
                    },
                    {
                        "username": "reachnetha",
                        "content": "\\'\\'\\'\\n\\nselect id, month,\\nsum(salary) over (partition by id order by month ROWS between 2 PRECEDING  AND 0 FOLLOWING ) salary\\n\\nfrom \\n(select id,\\nmonth,\\n salary,\\nrow_number() over (partition by id order by month desc) rn\\nfrom Employee)\\nwhere rn !=1\\norder by id, month desc\\n\\'\\'\\'"
                    },
                    {
                        "username": "thethirstymayor",
                        "content": "The question states that only the prior 3 months are to be listed per ID, right?\\n\\nFor one of the solutions, it lists the expected output as follows: \\n\\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":**[[1,4,130],[1,3,90],[1,2,50],[1,1,20]**,[2,1,20],[3,3,100],[3,2,40]]}\\n\\nThis is wrong, as it includes 4 months rather than 3.  This question should be fixed or removed."
                    }
                ]
            },
            {
                "id": 1569183,
                "content": [
                    {
                        "username": "pradeepa1505",
                        "content": "Input:\n{\"headers\": {\"Employee\": [\"Id\", \"Month\", \"Salary\"]}, \"rows\": {\"Employee\": [[1, 1, 20], [2, 1, 20], [1, 2, 30], [2, 2, 30], [3,2,40],[1,3,40], [3,3,60],[1,4,60],[3,4,70],[1,5,70]]}}\n\nExpected Output:\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":[[1,4,130],[1,3,90],[1,2,50],[1,1,20],[2,1,20],[3,3,100],[3,2,40]]}\n\n1,4,130 should have been 1,4,150 (20+30+40+60)\n"
                    },
                    {
                        "username": "ZahraMalwi",
                        "content": "\\nWITH CTE AS\\n(\\n    SELECT ID, MONTH, \\n    SUM(SALARY) \\n    OVER(PARTITION BY ID ORDER BY MONTH ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS Salary,\\n    rank() over(partition by id order by month desc) as month_rank\\n    FROM EMPLOYEE\\n)\\n\\nSELECT id, month, Salary FROM CTE\\nwhere month_rank > 1\\nORDER BY ID, MONTH DESC"
                    },
                    {
                        "username": "asr22",
                        "content": " `with e as`\\n`(select * from (select id , month , salary, row_number() over(partition by id order by month`\\n`desc) as rk from Employee) as temp`\\n`where rk!=1)`\\n\\n`select id, month , sum(Salary) over(partition by id  order by  month desc range` \\n`between current row and 2 following) as salary`\\n`from e`\\n"
                    },
                    {
                        "username": "adluke61",
                        "content": "This is an odd question because the missing row values make it difficult to use the window function, even though a window function is the natural solution to this problem. \\n"
                    }
                ]
            },
            {
                "id": 1788098,
                "content": [
                    {
                        "username": "pradeepa1505",
                        "content": "Input:\n{\"headers\": {\"Employee\": [\"Id\", \"Month\", \"Salary\"]}, \"rows\": {\"Employee\": [[1, 1, 20], [2, 1, 20], [1, 2, 30], [2, 2, 30], [3,2,40],[1,3,40], [3,3,60],[1,4,60],[3,4,70],[1,5,70]]}}\n\nExpected Output:\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":[[1,4,130],[1,3,90],[1,2,50],[1,1,20],[2,1,20],[3,3,100],[3,2,40]]}\n\n1,4,130 should have been 1,4,150 (20+30+40+60)\n"
                    },
                    {
                        "username": "ZahraMalwi",
                        "content": "\\nWITH CTE AS\\n(\\n    SELECT ID, MONTH, \\n    SUM(SALARY) \\n    OVER(PARTITION BY ID ORDER BY MONTH ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS Salary,\\n    rank() over(partition by id order by month desc) as month_rank\\n    FROM EMPLOYEE\\n)\\n\\nSELECT id, month, Salary FROM CTE\\nwhere month_rank > 1\\nORDER BY ID, MONTH DESC"
                    },
                    {
                        "username": "asr22",
                        "content": " `with e as`\\n`(select * from (select id , month , salary, row_number() over(partition by id order by month`\\n`desc) as rk from Employee) as temp`\\n`where rk!=1)`\\n\\n`select id, month , sum(Salary) over(partition by id  order by  month desc range` \\n`between current row and 2 following) as salary`\\n`from e`\\n"
                    },
                    {
                        "username": "adluke61",
                        "content": "This is an odd question because the missing row values make it difficult to use the window function, even though a window function is the natural solution to this problem. \\n"
                    }
                ]
            },
            {
                "id": 1677315,
                "content": [
                    {
                        "username": "pradeepa1505",
                        "content": "Input:\n{\"headers\": {\"Employee\": [\"Id\", \"Month\", \"Salary\"]}, \"rows\": {\"Employee\": [[1, 1, 20], [2, 1, 20], [1, 2, 30], [2, 2, 30], [3,2,40],[1,3,40], [3,3,60],[1,4,60],[3,4,70],[1,5,70]]}}\n\nExpected Output:\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":[[1,4,130],[1,3,90],[1,2,50],[1,1,20],[2,1,20],[3,3,100],[3,2,40]]}\n\n1,4,130 should have been 1,4,150 (20+30+40+60)\n"
                    },
                    {
                        "username": "ZahraMalwi",
                        "content": "\\nWITH CTE AS\\n(\\n    SELECT ID, MONTH, \\n    SUM(SALARY) \\n    OVER(PARTITION BY ID ORDER BY MONTH ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS Salary,\\n    rank() over(partition by id order by month desc) as month_rank\\n    FROM EMPLOYEE\\n)\\n\\nSELECT id, month, Salary FROM CTE\\nwhere month_rank > 1\\nORDER BY ID, MONTH DESC"
                    },
                    {
                        "username": "asr22",
                        "content": " `with e as`\\n`(select * from (select id , month , salary, row_number() over(partition by id order by month`\\n`desc) as rk from Employee) as temp`\\n`where rk!=1)`\\n\\n`select id, month , sum(Salary) over(partition by id  order by  month desc range` \\n`between current row and 2 following) as salary`\\n`from e`\\n"
                    },
                    {
                        "username": "adluke61",
                        "content": "This is an odd question because the missing row values make it difficult to use the window function, even though a window function is the natural solution to this problem. \\n"
                    }
                ]
            },
            {
                "id": 1632943,
                "content": [
                    {
                        "username": "pradeepa1505",
                        "content": "Input:\n{\"headers\": {\"Employee\": [\"Id\", \"Month\", \"Salary\"]}, \"rows\": {\"Employee\": [[1, 1, 20], [2, 1, 20], [1, 2, 30], [2, 2, 30], [3,2,40],[1,3,40], [3,3,60],[1,4,60],[3,4,70],[1,5,70]]}}\n\nExpected Output:\n{\"headers\":[\"id\",\"month\",\"Salary\"],\"values\":[[1,4,130],[1,3,90],[1,2,50],[1,1,20],[2,1,20],[3,3,100],[3,2,40]]}\n\n1,4,130 should have been 1,4,150 (20+30+40+60)\n"
                    },
                    {
                        "username": "ZahraMalwi",
                        "content": "\\nWITH CTE AS\\n(\\n    SELECT ID, MONTH, \\n    SUM(SALARY) \\n    OVER(PARTITION BY ID ORDER BY MONTH ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS Salary,\\n    rank() over(partition by id order by month desc) as month_rank\\n    FROM EMPLOYEE\\n)\\n\\nSELECT id, month, Salary FROM CTE\\nwhere month_rank > 1\\nORDER BY ID, MONTH DESC"
                    },
                    {
                        "username": "asr22",
                        "content": " `with e as`\\n`(select * from (select id , month , salary, row_number() over(partition by id order by month`\\n`desc) as rk from Employee) as temp`\\n`where rk!=1)`\\n\\n`select id, month , sum(Salary) over(partition by id  order by  month desc range` \\n`between current row and 2 following) as salary`\\n`from e`\\n"
                    },
                    {
                        "username": "adluke61",
                        "content": "This is an odd question because the missing row values make it difficult to use the window function, even though a window function is the natural solution to this problem. \\n"
                    }
                ]
            }
        ]
    }
]