[
    {
        "title": "Department Highest Salary",
        "question_content": "Table: Employee\n\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| id           | int     |\n| name         | varchar |\n| salary       | int     |\n| departmentId | int     |\n+--------------+---------+\nid is the primary key (column with unique values) for this table.\ndepartmentId is a foreign key (reference columns) of the ID from the Department table.\nEach row of this table indicates the ID, name, and salary of an employee. It also contains the ID of their department.\n\n&nbsp;\nTable: Department\n\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| name        | varchar |\n+-------------+---------+\nid is the primary key (column with unique values) for this table. It is guaranteed that department name is not NULL.\nEach row of this table indicates the ID of a department and its name.\n\n&nbsp;\nWrite a solution to find employees who have the highest salary in each of the departments.\nReturn the result table in any order.\nThe result format is in the following example.\n&nbsp;\nExample 1:\n\nInput: \nEmployee table:\n+----+-------+--------+--------------+\n| id | name  | salary | departmentId |\n+----+-------+--------+--------------+\n| 1  | Joe   | 70000  | 1            |\n| 2  | Jim   | 90000  | 1            |\n| 3  | Henry | 80000  | 2            |\n| 4  | Sam   | 60000  | 2            |\n| 5  | Max   | 90000  | 1            |\n+----+-------+--------+--------------+\nDepartment table:\n+----+-------+\n| id | name  |\n+----+-------+\n| 1  | IT    |\n| 2  | Sales |\n+----+-------+\nOutput: \n+------------+----------+--------+\n| Department | Employee | Salary |\n+------------+----------+--------+\n| IT         | Jim      | 90000  |\n| Sales      | Henry    | 80000  |\n| IT         | Max      | 90000  |\n+------------+----------+--------+\nExplanation: Max and Jim both have the highest salary in the IT department and Henry has the highest salary in the Sales department.",
        "solutions": [
            {
                "id": 53607,
                "title": "three-accpeted-solutions",
                "content": "    SELECT D.Name AS Department ,E.Name AS Employee ,E.Salary \\n    FROM\\n    \\tEmployee E,\\n    \\t(SELECT DepartmentId,max(Salary) as max FROM Employee GROUP BY DepartmentId) T,\\n    \\tDepartment D\\n    WHERE E.DepartmentId = T.DepartmentId \\n      AND E.Salary = T.max\\n      AND E.DepartmentId = D.id\\n\\n    SELECT D.Name,A.Name,A.Salary \\n    FROM \\n    \\tEmployee A,\\n    \\tDepartment D   \\n    WHERE A.DepartmentId = D.Id \\n      AND NOT EXISTS \\n      (SELECT 1 FROM Employee B WHERE B.Salary > A.Salary AND A.DepartmentId = B.DepartmentId) \\n\\n    SELECT D.Name AS Department ,E.Name AS Employee ,E.Salary \\n    from \\n    \\tEmployee E,\\n    \\tDepartment D \\n    WHERE E.DepartmentId = D.id \\n      AND (DepartmentId,Salary) in \\n      (SELECT DepartmentId,max(Salary) as max FROM Employee GROUP BY DepartmentId)",
                "solutionTags": [],
                "code": "    SELECT D.Name AS Department ,E.Name AS Employee ,E.Salary \\n    FROM\\n    \\tEmployee E,\\n    \\t(SELECT DepartmentId,max(Salary) as max FROM Employee GROUP BY DepartmentId) T,\\n    \\tDepartment D\\n    WHERE E.DepartmentId = T.DepartmentId \\n      AND E.Salary = T.max\\n      AND E.DepartmentId = D.id\\n\\n    SELECT D.Name,A.Name,A.Salary \\n    FROM \\n    \\tEmployee A,\\n    \\tDepartment D   \\n    WHERE A.DepartmentId = D.Id \\n      AND NOT EXISTS \\n      (SELECT 1 FROM Employee B WHERE B.Salary > A.Salary AND A.DepartmentId = B.DepartmentId) \\n\\n    SELECT D.Name AS Department ,E.Name AS Employee ,E.Salary \\n    from \\n    \\tEmployee E,\\n    \\tDepartment D \\n    WHERE E.DepartmentId = D.id \\n      AND (DepartmentId,Salary) in \\n      (SELECT DepartmentId,max(Salary) as max FROM Employee GROUP BY DepartmentId)",
                "codeTag": "Unknown"
            },
            {
                "id": 2457422,
                "title": "solution-with-detail-explanation-easy-to-understand",
                "content": "**Please upvote Me ^ Thanks.**\\nIT IS SIMPLE \\n\\nfirst identify highest salary by \\n`SELECT departmentId,MAX(salary) FROM Employee GROUP BY departmentId`\\n\\nThen JOIN both table by\\n`SELECT Department.name AS Department ,Employee.name AS Employee, Employee.salary\\nFROM Department  JOIN Employee  ON Employee.departmentId=Department.id `\\n\\nThen put Condition by\\n`WHERE(departmentId, salary) IN\\n(SELECT departmentId,MAX(salary) FROM Employee GROUP BY departmentId) ;`\\n\\n**Code**\\n\\n```\\nSELECT Department.name AS Department ,Employee.name AS Employee, Employee.salary\\nFROM Department  JOIN Employee  ON Employee.departmentId=Department.id \\nWHERE(departmentId, salary) IN\\n(SELECT departmentId,MAX(salary) FROM Employee GROUP BY departmentId) ;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT Department.name AS Department ,Employee.name AS Employee, Employee.salary\\nFROM Department  JOIN Employee  ON Employee.departmentId=Department.id \\nWHERE(departmentId, salary) IN\\n(SELECT departmentId,MAX(salary) FROM Employee GROUP BY departmentId) ;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3861495,
                "title": "pandas-very-simple-step-by-step-process-detailed",
                "content": "\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nThe approach involves merging the DataFrames, grouping by department, and then finding the employees with the highest salary within each group using the max function and boolean indexing. The function handles empty table scenarios and correctly renames the columns as specified.\\n\\n# Detailed procedure\\n- Check if either the employee or department DataFrame is empty. If either of them is empty, return an empty DataFrame with the column names [\\'Department\\', \\'Employee\\', \\'Salary\\'].\\n```\\n    if employee.empty or department.empty:\\n        return pd.DataFrame(columns=[\\'Department\\',\\'Employee\\', \\'Salary\\'])\\n```\\n- Merge the employee and department DataFrames on \\'departmentId\\' and \\'id\\' columns, respectively, using the merge function.\\n```\\n    merged_df = employee.merge(department, left_on=\\'departmentId\\', right_on=\\'id\\', suffixes=(\\'_employee\\', \\'_department\\'))\\n```\\n- Use the groupby function to group data in merged_df by \\'departmentId\\' and apply a lambda function to find employees with the highest salary in each group.\\n```\\n    highest_salary_df = merged_df.groupby(\\'departmentId\\').apply(lambda x: x[x[\\'salary\\'] == x[\\'salary\\'].max()])\\n```\\n- Reset the index of highest_salary_df to remove the group labels and obtain a flat DataFrame.\\n```\\n    highest_salary_df = highest_salary_df.reset_index(drop=True)\\n```\\n- Select the required columns \\'name_department\\', \\'name_employee\\', and \\'salary\\' from highest_salary_df to get the department name, employee name, and salary of employees with the highest salary in each department.\\n```\\n    result_df = highest_salary_df[[\\'name_department\\', \\'name_employee\\', \\'salary\\']]\\n```\\n- Rename the columns of the resulting DataFrame to [\\'Department\\', \\'Employee\\', \\'Salary\\'] as specified.\\n```\\n    result_df.columns = [\\'Department\\',\\'Employee\\', \\'Salary\\']\\n```\\n- Return the resulting DataFrame result_df containing employees with the highest salary in each department.\\n\\n\\n\\n# Code\\n```\\nimport pandas as pd\\n\\ndef department_highest_salary(employee: pd.DataFrame, department: pd.DataFrame) -> pd.DataFrame:\\n    if employee.empty or department.empty:\\n        return pd.DataFrame(columns=[\\'Department\\',\\'Employee\\', \\'Salary\\'])\\n    \\n    # Merge the employee and department DataFrames on \\'departmentId\\' and \\'id\\' columns\\n    merged_df = employee.merge(department, left_on=\\'departmentId\\', right_on=\\'id\\', suffixes=(\\'_employee\\', \\'_department\\'))\\n    \\n    # Use groupby to group data by \\'departmentId\\' and apply a lambda function to get employees with highest salary in each group\\n    highest_salary_df = merged_df.groupby(\\'departmentId\\').apply(lambda x: x[x[\\'salary\\'] == x[\\'salary\\'].max()])\\n    \\n    # Drop the duplicate \\'departmentId\\' column and reset the index\\n    highest_salary_df = highest_salary_df.reset_index(drop=True)\\n    \\n    # Select the required columns and return the result\\n    result_df = highest_salary_df[[\\'name_department\\', \\'name_employee\\', \\'salary\\']]\\n    \\n    # Rename the columns as specified\\n    result_df.columns = [\\'Department\\',\\'Employee\\', \\'Salary\\']\\n    \\n    return result_df\\n```\\n\\n# Please upvote the solution which motivates me to share high quality solutions like this \\uD83E\\uDD7A Thank You \\u2764\\uFE0F.",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```\\n    if employee.empty or department.empty:\\n        return pd.DataFrame(columns=[\\'Department\\',\\'Employee\\', \\'Salary\\'])\\n```\n```\\n    merged_df = employee.merge(department, left_on=\\'departmentId\\', right_on=\\'id\\', suffixes=(\\'_employee\\', \\'_department\\'))\\n```\n```\\n    highest_salary_df = merged_df.groupby(\\'departmentId\\').apply(lambda x: x[x[\\'salary\\'] == x[\\'salary\\'].max()])\\n```\n```\\n    highest_salary_df = highest_salary_df.reset_index(drop=True)\\n```\n```\\n    result_df = highest_salary_df[[\\'name_department\\', \\'name_employee\\', \\'salary\\']]\\n```\n```\\n    result_df.columns = [\\'Department\\',\\'Employee\\', \\'Salary\\']\\n```\n```\\nimport pandas as pd\\n\\ndef department_highest_salary(employee: pd.DataFrame, department: pd.DataFrame) -> pd.DataFrame:\\n    if employee.empty or department.empty:\\n        return pd.DataFrame(columns=[\\'Department\\',\\'Employee\\', \\'Salary\\'])\\n    \\n    # Merge the employee and department DataFrames on \\'departmentId\\' and \\'id\\' columns\\n    merged_df = employee.merge(department, left_on=\\'departmentId\\', right_on=\\'id\\', suffixes=(\\'_employee\\', \\'_department\\'))\\n    \\n    # Use groupby to group data by \\'departmentId\\' and apply a lambda function to get employees with highest salary in each group\\n    highest_salary_df = merged_df.groupby(\\'departmentId\\').apply(lambda x: x[x[\\'salary\\'] == x[\\'salary\\'].max()])\\n    \\n    # Drop the duplicate \\'departmentId\\' column and reset the index\\n    highest_salary_df = highest_salary_df.reset_index(drop=True)\\n    \\n    # Select the required columns and return the result\\n    result_df = highest_salary_df[[\\'name_department\\', \\'name_employee\\', \\'salary\\']]\\n    \\n    # Rename the columns as specified\\n    result_df.columns = [\\'Department\\',\\'Employee\\', \\'Salary\\']\\n    \\n    return result_df\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 53608,
                "title": "simple-solution-easy-to-understand",
                "content": "    SELECT dep.Name as Department, emp.Name as Employee, emp.Salary \\n    from Department dep, Employee emp \\n    where emp.DepartmentId=dep.Id \\n    and emp.Salary=(Select max(Salary) from Employee e2 where e2.DepartmentId=dep.Id)",
                "solutionTags": [],
                "code": "    SELECT dep.Name as Department, emp.Name as Employee, emp.Salary \\n    from Department dep, Employee emp \\n    where emp.DepartmentId=dep.Id \\n    and emp.Salary=(Select max(Salary) from Employee e2 where e2.DepartmentId=dep.Id)",
                "codeTag": "Unknown"
            },
            {
                "id": 3827264,
                "title": "100-easy-fast-clean-solution",
                "content": "# Code\\n```\\n/* Write your PL/SQL query statement below */\\nSELECT DEPT.name AS Department, EMP.name AS Employee, EMP.salary AS \\n\\nSalary FROM Department DEPT, Employee EMP WHERE\\n\\nEMP.departmentId = DEPT.id AND (EMP.departmentId, salary) IN \\n\\n(SELECT departmentId, MAX (salary) FROM Employee GROUP BY \\n\\ndepartmentId)\\n```\\nIF THIS WILL BE HELPFUL TO YOU,PLEASE UPVOTE !\\n\\n![5kej8w.jpg](https://assets.leetcode.com/users/images/c29d80c7-fd85-4816-8171-ebf71ef130fa_1690526222.9120727.jpeg)\\n\\n\\n",
                "solutionTags": [
                    "MySQL",
                    "MS SQL Server",
                    "Oracle",
                    "Database"
                ],
                "code": "```\\n/* Write your PL/SQL query statement below */\\nSELECT DEPT.name AS Department, EMP.name AS Employee, EMP.salary AS \\n\\nSalary FROM Department DEPT, Employee EMP WHERE\\n\\nEMP.departmentId = DEPT.id AND (EMP.departmentId, salary) IN \\n\\n(SELECT departmentId, MAX (salary) FROM Employee GROUP BY \\n\\ndepartmentId)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 53670,
                "title": "sharing-my-simple-solution",
                "content": "    Select Department.Name, emp1.Name, emp1.Salary from \\n    Employee emp1 join Department on emp1.DepartmentId = Department.Id\\n    where emp1.Salary = (Select Max(Salary) from Employee emp2 where emp2.DepartmentId = emp1.DepartmentId);",
                "solutionTags": [],
                "code": "    Select Department.Name, emp1.Name, emp1.Salary from \\n    Employee emp1 join Department on emp1.DepartmentId = Department.Id\\n    where emp1.Salary = (Select Max(Salary) from Employee emp2 where emp2.DepartmentId = emp1.DepartmentId);",
                "codeTag": "Unknown"
            },
            {
                "id": 53612,
                "title": "group-by-having-not-working-for-multiple-highest-salary-why",
                "content": "`SELECT b.Name as Department, a.Name as Employee, a.Salary\\nFROM Employee a\\nJOIN Department b\\nON a.DepartmentId = b.Id\\nGROUP BY Department\\nHAVING a.Salary = max(a.Salary)`\\n\\nThis way it was not able to return multiple rows with same highest salary. I can't figure why, please help!",
                "solutionTags": [],
                "code": "`SELECT b.Name as Department, a.Name as Employee, a.Salary\\nFROM Employee a\\nJOIN Department b\\nON a.DepartmentId = b.Id\\nGROUP BY Department\\nHAVING a.Salary = max(a.Salary)`\\n\\nThis way it was not able to return multiple rows with same highest salary. I can't figure why, please help!",
                "codeTag": "Unknown"
            },
            {
                "id": 631832,
                "title": "mysql-partition-by-with-join-solution-with-explaination",
                "content": "```\\nSELECT b.Name AS Department, a.Name AS Employee, Salary FROM\\n(SELECT *, MAX(Salary) OVER(PARTITION BY DepartmentId) AS max_val\\nFROM Employee) a\\nJOIN Department b\\nON a.DepartmentId = b.Id\\nWHERE Salary = max_val;\\n```\\nLogic here: add a column to the original Employee table of max salary within that department (that is what over partition by do)\\nThen we select the ones that match max with its value to filter out the people with max salary of his / her department\\nThen we join on the Department table to get the require information",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT b.Name AS Department, a.Name AS Employee, Salary FROM\\n(SELECT *, MAX(Salary) OVER(PARTITION BY DepartmentId) AS max_val\\nFROM Employee) a\\nJOIN Department b\\nON a.DepartmentId = b.Id\\nWHERE Salary = max_val;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 53609,
                "title": "why-cannot-we-just-use-max-with-group-by",
                "content": "    select D.name as Department, E.name as Employee, max(salary) as Salary \\n        from Employee E , Department D \\n        where E.DepartmentId = D.Id  \\n        group by D.id\\n\\nI tried to use something like this, but it did not pass. When two departments has the same max salary, it only outputs one row.\\n\\nHowever, this is not how it works in my local mysql.\\n\\nWhy is this wrong?",
                "solutionTags": [],
                "code": "    select D.name as Department, E.name as Employee, max(salary) as Salary \\n        from Employee E , Department D \\n        where E.DepartmentId = D.Id  \\n        group by D.id\\n\\nI tried to use something like this, but it did not pass. When two departments has the same max salary, it only outputs one row.\\n\\nHowever, this is not how it works in my local mysql.\\n\\nWhy is this wrong?",
                "codeTag": "Unknown"
            },
            {
                "id": 3214824,
                "title": "184-solution-with-step-by-step-explanation",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\nLet\\'s go through the steps:\\n\\nJoin the Employee and Department tables on the departmentId column to get the name of the department for each employee.\\nUse a subquery to get the maximum salary for each department. The subquery first groups the employees by departmentId, and then gets the maximum salary for each group using the MAX function.\\nJoin the result of the subquery with the Employee table on the departmentId and salary columns to get the employees who have the maximum salary for their department.\\nSelect the Department, Employee, and Salary columns from the result.\\nThis query will return the department name, employee name, and their salary for each department where at least one employee has the highest salary. The result will be ordered by department name, but the order of the rows within each department is not specified.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\nTo find the employees who have the highest salary in each of the departments, we can use a subquery to get the maximum salary for each department, and then join it with the employee table to get the employees who have the maximum salary for their department.\\n\\nHere\\'s the SQL query:\\n\\n```\\nSELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\nFROM Employee e\\nJOIN Department d ON e.departmentId = d.id\\nWHERE (e.departmentId, e.salary) IN\\n    (SELECT departmentId, MAX(salary)\\n     FROM Employee\\n     GROUP BY departmentId)\\n\\n```",
                "solutionTags": [
                    "MySQL",
                    "Database"
                ],
                "code": "```\\nSELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\nFROM Employee e\\nJOIN Department d ON e.departmentId = d.id\\nWHERE (e.departmentId, e.salary) IN\\n    (SELECT departmentId, MAX(salary)\\n     FROM Employee\\n     GROUP BY departmentId)\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3019487,
                "title": "95-beats-mysql-solution",
                "content": "\\n# Code\\n```\\nselect Department,e.name as Employee,e.salary as Salary \\nfrom employee e,\\n(\\n    select d.id department_id,d.name as Department,max(e.salary) as max \\n    from department d left join employee e \\n    on  d.id=e.departmentId \\n    group by d.id\\n) as MaxSalaries \\nwhere e.departmentId=department_id and e.salary = max;\\n```\\n\\n```\\nplease upvote, if you find it useful\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect Department,e.name as Employee,e.salary as Salary \\nfrom employee e,\\n(\\n    select d.id department_id,d.name as Department,max(e.salary) as max \\n    from department d left join employee e \\n    on  d.id=e.departmentId \\n    group by d.id\\n) as MaxSalaries \\nwhere e.departmentId=department_id and e.salary = max;\\n```\n```\\nplease upvote, if you find it useful\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2163234,
                "title": "mysql-solution-using-join",
                "content": "```\\nSELECT D.NAME AS DEPARTMENT,\\nE.NAME AS EMPLOYEE,\\nE.SALARY\\nFROM EMPLOYEE E\\nJOIN DEPARTMENT D ON \\nE.DEPARTMENTID = D.ID\\nWHERE SALARY = (SELECT MAX(SALARY) FROM EMPLOYEE WHERE D.ID = EMPLOYEE.DEPARTMENTID);\\n```\\n\\nPlease upvote if you find it useful.",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT D.NAME AS DEPARTMENT,\\nE.NAME AS EMPLOYEE,\\nE.SALARY\\nFROM EMPLOYEE E\\nJOIN DEPARTMENT D ON \\nE.DEPARTMENTID = D.ID\\nWHERE SALARY = (SELECT MAX(SALARY) FROM EMPLOYEE WHERE D.ID = EMPLOYEE.DEPARTMENTID);\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3867312,
                "title": "pandas-vs-sql-elegant-short-all-30-days-of-pandas-solutions",
                "content": "# Complexity\\n- Time complexity: $$O(n)$$\\n- Space complexity: $$O(n)$$\\n\\n# Code\\n```Python []\\ndef department_highest_salary(employee: pd.DataFrame, department: pd.DataFrame) -> pd.DataFrame:\\n    return employee.merge(\\n        department, left_on=\\'departmentId\\', right_on=\\'id\\', suffixes=(\\'_employee\\', \\'_department\\')\\n    ).groupby(\\n        \\'departmentId\\'\\n    ).apply(\\n        lambda x: x[x[\\'salary\\'] == x[\\'salary\\'].max()]\\n    ).reset_index(drop=True)[\\n        [\\'name_department\\', \\'name_employee\\', \\'salary\\']\\n    ].rename(columns={\\n        \\'name_department\\': \\'Department\\',\\n        \\'name_employee\\': \\'Employee\\',\\n        \\'salary\\': \\'Salary\\',\\n    })\\n```\\n```SQL []\\nWITH cte AS (\\n    SELECT d.name AS department,\\n           e.name AS employee,\\n           e.salary,\\n           max(e.salary) OVER (PARTITION BY d.id) AS max_salary\\n      FROM Employee e\\n          JOIN Department d\\n              ON e.departmentId = d.id\\n)\\nSELECT department,\\n       employee,\\n       salary\\n  FROM cte\\n WHERE salary = max_salary;\\n```\\n\\n# Important!\\n###### If you like the solution or find it useful, feel free to **upvote** for it, it will support me in creating high quality solutions)\\n\\n# 30 Days of Pandas solutions\\n\\n### Data Filtering \\u2705\\n- [Big Countries](https://leetcode.com/problems/big-countries/solutions/3848474/pandas-elegant-short-1-line/)\\n- [Recyclable and Low Fat Products](https://leetcode.com/problems/recyclable-and-low-fat-products/solutions/3848500/pandas-elegant-short-1-line/)\\n- [Customers Who Never Order](https://leetcode.com/problems/customers-who-never-order/solutions/3848527/pandas-elegant-short-1-line/)\\n- [Article Views I](https://leetcode.com/problems/article-views-i/solutions/3867192/pandas-elegant-short-1-line/)\\n\\n\\n### String Methods \\u2705\\n- [Invalid Tweets](https://leetcode.com/problems/invalid-tweets/solutions/3849121/pandas-elegant-short-1-line/)\\n- [Calculate Special Bonus](https://leetcode.com/problems/calculate-special-bonus/solutions/3867209/pandas-elegant-short-1-line/)\\n- [Fix Names in a Table](https://leetcode.com/problems/fix-names-in-a-table/solutions/3849167/pandas-elegant-short-1-line/)\\n- [Find Users With Valid E-Mails](https://leetcode.com/problems/find-users-with-valid-e-mails/solutions/3849177/pandas-elegant-short-1-line/)\\n- [Patients With a Condition](https://leetcode.com/problems/patients-with-a-condition/solutions/3849196/pandas-elegant-short-1-line-regex/)\\n\\n\\n### Data Manipulation \\u2705\\n- [Nth Highest Salary](https://leetcode.com/problems/nth-highest-salary/solutions/3867257/pandas-elegant-short-1-line/)\\n- [Second Highest Salary](https://leetcode.com/problems/second-highest-salary/solutions/3867278/pandas-elegant-short/)\\n- [Department Highest Salary](https://leetcode.com/problems/department-highest-salary/solutions/3867312/pandas-elegant-short-1-line/)\\n- [Rank Scores](https://leetcode.com/problems/rank-scores/solutions/3872817/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n- [Delete Duplicate Emails](https://leetcode.com/problems/delete-duplicate-emails/solutions/3849211/pandas-elegant-short/)\\n- [Rearrange Products Table](https://leetcode.com/problems/rearrange-products-table/solutions/3849226/pandas-elegant-short-1-line/)\\n\\n\\n### Statistics \\u2705\\n- [The Number of Rich Customers](https://leetcode.com/problems/the-number-of-rich-customers/solutions/3849251/pandas-elegant-short-1-line/)\\n- [Immediate Food Delivery I](https://leetcode.com/problems/immediate-food-delivery-i/solutions/3872719/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n- [Count Salary Categories](https://leetcode.com/problems/count-salary-categories/solutions/3872801/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n\\n\\n### Data Aggregation \\u2705\\n- [Find Total Time Spent by Each Employee](https://leetcode.com/problems/find-total-time-spent-by-each-employee/solutions/3872715/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n- [Game Play Analysis I](https://leetcode.com/problems/game-play-analysis-i/solutions/3863223/pandas-elegant-short-1-line/)\\n- [Number of Unique Subjects Taught by Each Teacher](https://leetcode.com/problems/number-of-unique-subjects-taught-by-each-teacher/solutions/3863239/pandas-elegant-short-1-line/)\\n- [Classes More Than 5 Students](https://leetcode.com/problems/classes-more-than-5-students/solutions/3863249/pandas-elegant-short/)\\n- [Customer Placing the Largest Number of Orders](https://leetcode.com/problems/customer-placing-the-largest-number-of-orders/solutions/3863257/pandas-elegant-short-1-line/)\\n- [Group Sold Products By The Date](https://leetcode.com/problems/group-sold-products-by-the-date/solutions/3863267/pandas-elegant-short-1-line/)\\n- [Daily Leads and Partners](https://leetcode.com/problems/daily-leads-and-partners/solutions/3863279/pandas-elegant-short-1-line/)\\n\\n\\n### Data Aggregation \\u2705\\n- [Actors and Directors Who Cooperated At Least Three Times](https://leetcode.com/problems/actors-and-directors-who-cooperated-at-least-three-times/solutions/3863309/pandas-elegant-short/)\\n- [Replace Employee ID With The Unique Identifier](https://leetcode.com/problems/replace-employee-id-with-the-unique-identifier/solutions/3872822/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n- [Students and Examinations](https://leetcode.com/problems/students-and-examinations/solutions/3872699/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n- [Managers with at Least 5 Direct Reports](https://leetcode.com/problems/managers-with-at-least-5-direct-reports/solutions/3872861/pandas-elegant-short/)\\n- [Sales Person](https://leetcode.com/problems/sales-person/solutions/3872712/pandas-elegant-short-1-line-all-30-days-of-pandas-solutions/)\\n",
                "solutionTags": [
                    "Python",
                    "Python3",
                    "MySQL",
                    "Pandas"
                ],
                "code": "```Python []\\ndef department_highest_salary(employee: pd.DataFrame, department: pd.DataFrame) -> pd.DataFrame:\\n    return employee.merge(\\n        department, left_on=\\'departmentId\\', right_on=\\'id\\', suffixes=(\\'_employee\\', \\'_department\\')\\n    ).groupby(\\n        \\'departmentId\\'\\n    ).apply(\\n        lambda x: x[x[\\'salary\\'] == x[\\'salary\\'].max()]\\n    ).reset_index(drop=True)[\\n        [\\'name_department\\', \\'name_employee\\', \\'salary\\']\\n    ].rename(columns={\\n        \\'name_department\\': \\'Department\\',\\n        \\'name_employee\\': \\'Employee\\',\\n        \\'salary\\': \\'Salary\\',\\n    })\\n```\n```SQL []\\nWITH cte AS (\\n    SELECT d.name AS department,\\n           e.name AS employee,\\n           e.salary,\\n           max(e.salary) OVER (PARTITION BY d.id) AS max_salary\\n      FROM Employee e\\n          JOIN Department d\\n              ON e.departmentId = d.id\\n)\\nSELECT department,\\n       employee,\\n       salary\\n  FROM cte\\n WHERE salary = max_salary;\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 53647,
                "title": "a-simple-solution-use-one-join",
                "content": "select d.Name Department, e.Name Employee, Salary\\nfrom Department d join Employee e on d.Id=e.DepartmentId\\nwhere (Salary,d.id) in (select max(Salary),DepartmentId from Employee group by DepartmentId);",
                "solutionTags": [],
                "code": "select d.Name Department, e.Name Employee, Salary\\nfrom Department d join Employee e on d.Id=e.DepartmentId\\nwhere (Salary,d.id) in (select max(Salary),DepartmentId from Employee group by DepartmentId);",
                "codeTag": "Unknown"
            },
            {
                "id": 53610,
                "title": "my-best-solution-super-clean-no-subquery-no-max",
                "content": "Oftentimes those interviewers won't allow you to write subquery~\\n\\n**Return the highest salary for each department**\\n\\n      SELECT D.Name as Department, E.Name as Employee, E.Salary \\n      FROM Department D, Employee E, Employee E2  \\n      WHERE D.ID = E.DepartmentId and E.DepartmentId = E2.DepartmentId and \\n      E.Salary <= E2.Salary\\n      group by D.ID,E.Name having count(distinct E2.Salary) = 1\\n      order by D.Name desc\\n\\n**Follow up, return the secondary salary for each department**\\n\\n       SELECT D.Name as Department, E.Name as Employee, E.Salary \\n       FROM Department D, Employee E, Employee E2  \\n       WHERE D.ID = E.DepartmentId and E.DepartmentId = E2.DepartmentId and \\n       E.Salary < E2.Salary\\n       group by D.ID,E.Name having count(distinct E2.Salary) = 1\\n       order by D.Name desc",
                "solutionTags": [],
                "code": "Oftentimes those interviewers won't allow you to write subquery~\\n\\n**Return the highest salary for each department**\\n\\n      SELECT D.Name as Department, E.Name as Employee, E.Salary \\n      FROM Department D, Employee E, Employee E2  \\n      WHERE D.ID = E.DepartmentId and E.DepartmentId = E2.DepartmentId and \\n      E.Salary <= E2.Salary\\n      group by D.ID,E.Name having count(distinct E2.Salary) = 1\\n      order by D.Name desc\\n\\n**Follow up, return the secondary salary for each department**\\n\\n       SELECT D.Name as Department, E.Name as Employee, E.Salary \\n       FROM Department D, Employee E, Employee E2  \\n       WHERE D.ID = E.DepartmentId and E.DepartmentId = E2.DepartmentId and \\n       E.Salary < E2.Salary\\n       group by D.ID,E.Name having count(distinct E2.Salary) = 1\\n       order by D.Name desc",
                "codeTag": "Unknown"
            },
            {
                "id": 2421075,
                "title": "mysql-2-different-approach-easy-understanding-beginner-level-simple-short-solution",
                "content": "***Please upvote to motivate me in my quest of documenting all leetcode solutions. HAPPY CODING:)\\nAny suggestions and improvements are always welcome**.*\\n______________________\\n\\u2705 **MySQL Code :**\\n***Approach 1:***\\n```\\nSELECT t1.Department, t1.Employee, t1.Salary\\nFROM(SELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\n,RANK()OVER(PARTITION BY d.id ORDER BY salary DESC) AS rk\\nFROM Department AS d\\nJOIN Employee AS e ON E.departmentId = d.id) AS t1\\nWHERE rk = 1\\n```\\n__________________________________\\n***Approach 2***:\\n\\n```\\nSELECT D.Name AS Department ,E.Name AS Employee ,E.Salary \\nFROM\\n\\tEmployee E,\\n\\t(SELECT DepartmentId,max(Salary) as max FROM Employee GROUP BY DepartmentId) T,\\n\\tDepartment D\\nWHERE E.DepartmentId = T.DepartmentId \\n  AND E.Salary = T.max\\n  AND E.DepartmentId = D.id\\n```\\n______________________\\nIf you like the solution, please upvote \\uD83D\\uDD3C\\nFor any questions, or discussions, comment below. \\uD83D\\uDC47\\uFE0F",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT t1.Department, t1.Employee, t1.Salary\\nFROM(SELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\n,RANK()OVER(PARTITION BY d.id ORDER BY salary DESC) AS rk\\nFROM Department AS d\\nJOIN Employee AS e ON E.departmentId = d.id) AS t1\\nWHERE rk = 1\\n```\n```\\nSELECT D.Name AS Department ,E.Name AS Employee ,E.Salary \\nFROM\\n\\tEmployee E,\\n\\t(SELECT DepartmentId,max(Salary) as max FROM Employee GROUP BY DepartmentId) T,\\n\\tDepartment D\\nWHERE E.DepartmentId = T.DepartmentId \\n  AND E.Salary = T.max\\n  AND E.DepartmentId = D.id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 914390,
                "title": "mysql-find-the-highest-salary-with-rank-function",
                "content": "We can either group table by `DepartmentId` and get the highest salary with `max(salary)`, or use window function `rank`. \n\n```sql\nSELECT department, employee, salary\nFROM ( SELECT a.name AS employee\n        , b.name AS department\n        , salary\n        , RANK() OVER (PARTITION BY b.name ORDER BY a.salary DESC) AS dr\n    FROM employee a JOIN department b ON a.departmentid = b.id ) tmp\n    WHERE dr = 1\n```",
                "solutionTags": [],
                "code": "```sql\nSELECT department, employee, salary\nFROM ( SELECT a.name AS employee\n        , b.name AS department\n        , salary\n        , RANK() OVER (PARTITION BY b.name ORDER BY a.salary DESC) AS dr\n    FROM employee a JOIN department b ON a.departmentid = b.id ) tmp\n    WHERE dr = 1\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 53676,
                "title": "share-my-simple-query-using-all",
                "content": "<PRE><CODE>\\nselect Department.Name as Department, e1.Name as Employee, Salary\\nfrom Employee e1, Department\\nwhere e1.DepartmentId = Department.Id \\nand\\nSalary >= ALL (select Salary from Employee e2 where e2.DepartmentId = e1.DepartmentId);\\n</CODE></PRE>",
                "solutionTags": [],
                "code": "<PRE><CODE>\\nselect Department.Name as Department, e1.Name as Employee, Salary\\nfrom Employee e1, Department\\nwhere e1.DepartmentId = Department.Id \\nand\\nSalary >= ALL (select Salary from Employee e2 where e2.DepartmentId = e1.DepartmentId);\\n</CODE></PRE>",
                "codeTag": "Unknown"
            },
            {
                "id": 3880019,
                "title": "pandas-3-line-solution-beats-90",
                "content": "# Approach\\n<!-- Describe your approach to solving the problem. -->\\nWe could do this using a series of group-by, apply and merge operations, but we can do it quickly utilizing group-by and transform. Documentation is here: https://pandas.pydata.org/docs/reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html\\n\\nIf you can\\'t really understand the documentation (I couldn\\'t), using transform in conjunction with a group-by operation in this situation is (informally)\\n1) Performing the group-by operation specified (in this case, grouping by department).\\n2) Calling [\\'Salary\\'] is extracting the salary series while maintaing the group-by information.\\n3) .transform(max) is taking the maximum of salaries by group, and converting it back into a series of the same length that preserves indexes from merged_df. In this context, it returns a series of salaries where each entry is the maximum salary in a particular department, and entries are duplicated and arranged such that the order matches up with each observation in the original dataframe (merged_df). Intuitively, if you added this series to the dataframe, it\\'s like adding an attribute to each individual which tells us the highest salary in their department.\\n\\nIn the end, we use this series to filter for the rows in the orignal dataframe which have the maximum salary. Amazingly, it accounts for ties in the maximum salary due to how we are able to filter using this series. \\n\\n# Code\\n```\\nimport pandas as pd\\n\\ndef department_highest_salary(employee: pd.DataFrame, department: pd.DataFrame) -> pd.DataFrame:\\n    #First, we merge the employee and department dataframes \\n    #using an inner join (default for merge)\\n    merged_df = employee.merge(department, left_on = \\'departmentId\\', right_on = \\'id\\')\\n\\n    #Second, we rename the columns \\n    #and take only the department, employee, and salary columns\\n    merged_df = merged_df.rename(columns = {\\'name_x\\': \\'Employee\\', \\'name_y\\': \\'Department\\', \\'salary\\': \\'Salary\\'})[[\\'Department\\', \\'Employee\\', \\'Salary\\']]\\n    \\n    return merged_df[merged_df[\\'Salary\\'] == merged_df.groupby(\\'Department\\')[\\'Salary\\'].transform(max)]\\n```",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```\\nimport pandas as pd\\n\\ndef department_highest_salary(employee: pd.DataFrame, department: pd.DataFrame) -> pd.DataFrame:\\n    #First, we merge the employee and department dataframes \\n    #using an inner join (default for merge)\\n    merged_df = employee.merge(department, left_on = \\'departmentId\\', right_on = \\'id\\')\\n\\n    #Second, we rename the columns \\n    #and take only the department, employee, and salary columns\\n    merged_df = merged_df.rename(columns = {\\'name_x\\': \\'Employee\\', \\'name_y\\': \\'Department\\', \\'salary\\': \\'Salary\\'})[[\\'Department\\', \\'Employee\\', \\'Salary\\']]\\n    \\n    return merged_df[merged_df[\\'Salary\\'] == merged_df.groupby(\\'Department\\')[\\'Salary\\'].transform(max)]\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 1008243,
                "title": "six-ways-to-solve-this",
                "content": "Start with defining a common table expression for the join which I\\'ll reuse for all solutions\\n```\\nwith DepartmentSalary\\nas\\n(\\nselect d.Name as Department, e.Name as Employee, e.Salary as Salary\\nfrom Employee e join Department d on\\n    e.DepartmentId = d.Id\\n)\\n```\\n\\nSolution 1: \\n```\\nselect * from DepartmentSalary ds\\nwhere not Salary < ANY (select Salary from DepartmentSalary where Department = ds.Department)\\n```\\n\\nSolution 2:\\n```\\nselect * from DepartmentSalary ds\\nwhere Salary >= All (select Salary from DepartmentSalary where Department = ds.Department)\\n```\\n\\nSolution 3:\\n```\\nselect * from DepartmentSalary ds\\nwhere Salary = (select max(Salary) from DepartmentSalary where Department = ds.Department)\\n```\\n\\nSolution 4: \\nThis is probably the most optimal, since this will only do 1 scan of the table (Others will need to rely on the query optimizer, which if it\\'s smart will hopefully figure out how to rewrite the query to a similar form). \\n```\\nselect Department, Employee, Salary from (\\nselect *, max(Salary) over (partition by Department) maxSalary from DepartmentSalary\\n)tmp where Salary = maxSalary\\n```\\n\\nSolution 5:\\n```\\nselect * from DepartmentSalary ds\\nwhere Salary = (select max(Salary) from DepartmentSalary where Department = ds.Department)\\n```\\n\\nSolution 6:\\n```\\nselect ds.* from DepartmentSalary ds\\njoin\\n(\\n    select Department, max(Salary) maxSalary from DepartmentSalary\\n    group by Department \\n) maxSalary\\non\\nds.Department = maxSalary.Department\\nand\\nds.Salary = maxSalary.maxSalary\\n```",
                "solutionTags": [],
                "code": "```\\nwith DepartmentSalary\\nas\\n(\\nselect d.Name as Department, e.Name as Employee, e.Salary as Salary\\nfrom Employee e join Department d on\\n    e.DepartmentId = d.Id\\n)\\n```\n```\\nselect * from DepartmentSalary ds\\nwhere not Salary < ANY (select Salary from DepartmentSalary where Department = ds.Department)\\n```\n```\\nselect * from DepartmentSalary ds\\nwhere Salary >= All (select Salary from DepartmentSalary where Department = ds.Department)\\n```\n```\\nselect * from DepartmentSalary ds\\nwhere Salary = (select max(Salary) from DepartmentSalary where Department = ds.Department)\\n```\n```\\nselect Department, Employee, Salary from (\\nselect *, max(Salary) over (partition by Department) maxSalary from DepartmentSalary\\n)tmp where Salary = maxSalary\\n```\n```\\nselect * from DepartmentSalary ds\\nwhere Salary = (select max(Salary) from DepartmentSalary where Department = ds.Department)\\n```\n```\\nselect ds.* from DepartmentSalary ds\\njoin\\n(\\n    select Department, max(Salary) maxSalary from DepartmentSalary\\n    group by Department \\n) maxSalary\\non\\nds.Department = maxSalary.Department\\nand\\nds.Salary = maxSalary.maxSalary\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1559069,
                "title": "faster-than-99-29-using-mysql-windowing-functions-with-detailed-explanation",
                "content": "Runtime: 457 ms, faster than 99.29% of MySQL online submissions for Department Highest Salary.\\nMemory Usage: 0B, less than 100.00% of MySQL online submissions for Department Highest Salary.\\n\\nExplanation: I\\'m using concept of Windowing, which is [well supported by MySQL](https://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html). Together with Windowing I\\'m using [`RANK()`](https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html#function_rank) function, which ranks all the salaries grouped by `e.departmentId` (`PARTITION BY e.departmentId`) and the rank is calculated descending based on the salary value (`ORDER BY e.salary DESC`). We could, of course, use [`DENSE_RANK()`](https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html#function_dense-rank).\\n\\nChacteristing of `RANK()` is that if two or more values have the same rank (1st in our case), they will have the same value, therefore we can select them safely in the final `SELECT` using `WHERE sr.srank = 1`.\\n\\nNotes:\\n\\n1. I like to name columns explicitly, so there is no \"figuring out\" how the column is named and from where does it come from, hence the additional code.\\n2. I prefer to use `WITH` (so called [`Common Table Expressions`](https://dev.mysql.com/doc/refman/8.0/en/with.html)) instead of nested queries. Why? Code is more readable, easier to understand, easier to maintain and develop. It\\'s also reflecting more how we think from a perspective of preparing data for a final `SELECT`, breaking subqueries into logical steps. It especially works with longer queries.\\n\\n```sql\\n# Write your MySQL query statement below\\nWITH salaries_ranked AS (\\n    SELECT\\n        e.departmentId id,\\n        e.name name,\\n        e.salary salary,\\n        RANK() OVER(\\n            PARTITION BY e.departmentId\\n            ORDER BY e.salary DESC\\n        ) srank\\n    FROM Employee e\\n)\\nSELECT\\n    d.name Department,\\n    sr.name Employee,\\n    sr.salary\\nFROM salaries_ranked sr\\nJOIN Department d ON d.id = sr.id\\nWHERE sr.srank = 1;\\n```",
                "solutionTags": [
                    "MySQL",
                    "Sliding Window"
                ],
                "code": "```sql\\n# Write your MySQL query statement below\\nWITH salaries_ranked AS (\\n    SELECT\\n        e.departmentId id,\\n        e.name name,\\n        e.salary salary,\\n        RANK() OVER(\\n            PARTITION BY e.departmentId\\n            ORDER BY e.salary DESC\\n        ) srank\\n    FROM Employee e\\n)\\nSELECT\\n    d.name Department,\\n    sr.name Employee,\\n    sr.salary\\nFROM salaries_ranked sr\\nJOIN Department d ON d.id = sr.id\\nWHERE sr.srank = 1;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3082984,
                "title": "rank-window-function",
                "content": "# Intuition\\nuse rank() to rank salary partition by departments, then select rank = 1 rows\\n\\n# Code\\n```\\n/* Write your T-SQL query statement below */\\nWITH joined as(\\nSELECT d.name Department,\\ne.name as Employee, \\ne.salary as Salary,\\nRANK() over (PARTITION BY d.name ORDER BY e.salary DESC) rank \\nFROM Department d \\nJOIN Employee e on d.id = e.departmentId\\n) \\n\\nselect \\nDepartment,Employee, Salary\\nfrom joined \\nWHERE rank = 1\\n\\n\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\n/* Write your T-SQL query statement below */\\nWITH joined as(\\nSELECT d.name Department,\\ne.name as Employee, \\ne.salary as Salary,\\nRANK() over (PARTITION BY d.name ORDER BY e.salary DESC) rank \\nFROM Department d \\nJOIN Employee e on d.id = e.departmentId\\n) \\n\\nselect \\nDepartment,Employee, Salary\\nfrom joined \\nWHERE rank = 1\\n\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2717605,
                "title": "simple-logic-no-advance-function-used",
                "content": "```\\nSELECT    D.name AS DEPARTMENT , \\n          E.name AS EMPLOYEE , \\n\\t\\t  E.salary\\n     FROM EMPLOYEE AS E \\n\\t               JOIN \\n\\t\\t\\t\\t   DEPARTMENT AS D \\n\\t\\t\\t\\t   ON E.departmentId = D.id\\n     WHERE E.salary =   ( SELECT MAX(salary) # this subquery gives max salary  of an department so that we can generate all employees who have max salary in that department.\\n                                 FROM EMPLOYEE\\n                                 WHERE departmentID = E.departmentID);\\n```",
                "solutionTags": [],
                "code": "```\\nSELECT    D.name AS DEPARTMENT , \\n          E.name AS EMPLOYEE , \\n\\t\\t  E.salary\\n     FROM EMPLOYEE AS E \\n\\t               JOIN \\n\\t\\t\\t\\t   DEPARTMENT AS D \\n\\t\\t\\t\\t   ON E.departmentId = D.id\\n     WHERE E.salary =   ( SELECT MAX(salary) # this subquery gives max salary  of an department so that we can generate all employees who have max salary in that department.\\n                                 FROM EMPLOYEE\\n                                 WHERE departmentID = E.departmentID);\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2525723,
                "title": "simplest-solution",
                "content": "```\\nselect d.name as Department ,e.name as Employee ,e.salary \\nfrom Employee e, Department d \\nwhere e.DepartmentId = d.id and (DepartmentId,Salary) in \\n(select DepartmentId,max(Salary) as max from Employee group by DepartmentId)\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect d.name as Department ,e.name as Employee ,e.salary \\nfrom Employee e, Department d \\nwhere e.DepartmentId = d.id and (DepartmentId,Salary) in \\n(select DepartmentId,max(Salary) as max from Employee group by DepartmentId)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1069024,
                "title": "clean-code-i-was-upset-about-the-discussion-none-was-clear",
                "content": "Upvote if you like the cleanliness!! \\n\\nwith cte as(\\nselect d.Name as Department, \\n    e.Name as Employee, \\n    e.Salary as Salary,\\n    rank() over(partition by d.Name Order by Salary desc) as ranks\\n    from Employee e inner join Department d on d.Id = e.Departmentid)\\n    \\nselect \\nDepartment,\\nEmployee, \\nSalary\\nfrom cte\\nWhere ranks = 1",
                "solutionTags": [],
                "code": "Upvote if you like the cleanliness!! \\n\\nwith cte as(\\nselect d.Name as Department, \\n    e.Name as Employee, \\n    e.Salary as Salary,\\n    rank() over(partition by d.Name Order by Salary desc) as ranks\\n    from Employee e inner join Department d on d.Id = e.Departmentid)\\n    \\nselect \\nDepartment,\\nEmployee, \\nSalary\\nfrom cte\\nWhere ranks = 1",
                "codeTag": "Unknown"
            },
            {
                "id": 2996402,
                "title": "mysql-solution",
                "content": "# Code\\n```\\n# Write your MySQL query statement below\\nselect Department.name as \\'Department\\', Employee.name as \\'Employee\\', Salary\\nfrom Employee join Department on Employee.DepartmentId = Department.Id\\nwhere (Employee.DepartmentId, Salary) in (\\nselect DepartmentId, max(Salary) from Employee group by DepartmentId);\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect Department.name as \\'Department\\', Employee.name as \\'Employee\\', Salary\\nfrom Employee join Department on Employee.DepartmentId = Department.Id\\nwhere (Employee.DepartmentId, Salary) in (\\nselect DepartmentId, max(Salary) from Employee group by DepartmentId);\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1875758,
                "title": "ms-sql-two-approach-subquery-group-by-join",
                "content": "Approach 1\\n```\\nselect d.name as Department, e.name as Employee, e.salary as Salary \\nfrom Employee e join Department d on e.departmentId = d.id\\nwhere 1 > (select count(salary) \\n            from Employee e1 \\n            where e1.salary > e.salary and e1.departmentId = e.departmentId);\\n\\n```\\n\\nApproach 2\\n\\n```\\nselect d.name as Department, e.name as Employee, e.salary as Salary \\nfrom Employee e join Department d on e.departmentId = d.id\\nwhere e.salary = (select max(salary) \\n                from Employee e1 group by e1.departmentId having e1.departmentId = e.departmentId);\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\nselect d.name as Department, e.name as Employee, e.salary as Salary \\nfrom Employee e join Department d on e.departmentId = d.id\\nwhere 1 > (select count(salary) \\n            from Employee e1 \\n            where e1.salary > e.salary and e1.departmentId = e.departmentId);\\n\\n```\n```\\nselect d.name as Department, e.name as Employee, e.salary as Salary \\nfrom Employee e join Department d on e.departmentId = d.id\\nwhere e.salary = (select max(salary) \\n                from Employee e1 group by e1.departmentId having e1.departmentId = e.departmentId);\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 53658,
                "title": "easy-solution-no-joins-group-by-is-enough-916ms",
                "content": "    select\\n    d.Name, e.Name, e.Salary\\n    from\\n    Department d,\\n    Employee e,\\n    (select MAX(Salary) as Salary,  DepartmentId as DepartmentId from Employee GROUP BY DepartmentId) h\\n    where\\n    e.Salary = h.Salary and\\n    e.DepartmentId = h.DepartmentId and\\n    e.DepartmentId = d.Id;",
                "solutionTags": [],
                "code": "    select\\n    d.Name, e.Name, e.Salary\\n    from\\n    Department d,\\n    Employee e,\\n    (select MAX(Salary) as Salary,  DepartmentId as DepartmentId from Employee GROUP BY DepartmentId) h\\n    where\\n    e.Salary = h.Salary and\\n    e.DepartmentId = h.DepartmentId and\\n    e.DepartmentId = d.Id;",
                "codeTag": "Unknown"
            },
            {
                "id": 3927506,
                "title": "pandas-beginner-friendly-solution",
                "content": "**\\uD83D\\uDD3C IF YOU FIND THIS POST HELPFUL PLEASE UPVOTE \\uD83D\\uDC4D**\\n```\\nimport pandas as pd\\n\\ndef department_highest_salary(employee: pd.DataFrame, department: pd.DataFrame) -> pd.DataFrame:\\n    \\n    merged_df = employee.merge(department, left_on = \\'departmentId\\', right_on = \\'id\\')\\n    \\n    merged_df = merged_df.rename(columns = {\\'name_x\\': \\'Employee\\', \\'name_y\\': \\'Department\\', \\'salary\\': \\'Salary\\'})[[\\'Department\\', \\'Employee\\', \\'Salary\\']]\\n    \\n    return merged_df[merged_df[\\'Salary\\'] == merged_df.groupby(\\'Department\\')[\\'Salary\\'].transform(max)]\\n```\\n**Thank you for reading! \\uD83D\\uDE04 Comment if you have any questions or feedback.**",
                "solutionTags": [
                    "Python"
                ],
                "code": "```\\nimport pandas as pd\\n\\ndef department_highest_salary(employee: pd.DataFrame, department: pd.DataFrame) -> pd.DataFrame:\\n    \\n    merged_df = employee.merge(department, left_on = \\'departmentId\\', right_on = \\'id\\')\\n    \\n    merged_df = merged_df.rename(columns = {\\'name_x\\': \\'Employee\\', \\'name_y\\': \\'Department\\', \\'salary\\': \\'Salary\\'})[[\\'Department\\', \\'Employee\\', \\'Salary\\']]\\n    \\n    return merged_df[merged_df[\\'Salary\\'] == merged_df.groupby(\\'Department\\')[\\'Salary\\'].transform(max)]\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3496337,
                "title": "easy-peasy-solution",
                "content": "# Code\\n```\\n# Write your MySQL query statement below\\n\\nselect d.name as department,e.name as employee ,e.salary from employee as e \\njoin \\ndepartment as d on e.departmentId=d.id \\n    where (e.departmentId,e.salary) in (\\n    select departmentId , max(salary) from employee\\n    group by departmentId\\n);\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\n\\nselect d.name as department,e.name as employee ,e.salary from employee as e \\njoin \\ndepartment as d on e.departmentId=d.id \\n    where (e.departmentId,e.salary) in (\\n    select departmentId , max(salary) from employee\\n    group by departmentId\\n);\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3323167,
                "title": "easy-mysql-query",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT D.name AS Department, E.name AS Employee,E.salary AS Salary from Employee E,Department D\\nwhere D.id=E.departmentId and E.salary=(SELECT max(salary) from Employee E where E.departmentId=D.id);\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT D.name AS Department, E.name AS Employee,E.salary AS Salary from Employee E,Department D\\nwhere D.id=E.departmentId and E.salary=(SELECT max(salary) from Employee E where E.departmentId=D.id);\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1869199,
                "title": "simple-mysql-querry",
                "content": "```\\nSELECT \\n    dep.Name as Department,\\n    emp.Name as Employee,\\n    emp.Salary \\nfrom \\n    Department dep,\\n    Employee emp \\nwhere \\n    emp.DepartmentId = dep.Id \\nand \\n    emp.Salary=\\n        (Select \\n            max(Salary) \\n         from \\n            Employee emp2 \\n         where \\n            emp2.DepartmentId=dep.Id)\\n```\\n\\nPlease comment if there is any doubt in the above querry.\\n\\nPlease **Upvote** if you like the solution.",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT \\n    dep.Name as Department,\\n    emp.Name as Employee,\\n    emp.Salary \\nfrom \\n    Department dep,\\n    Employee emp \\nwhere \\n    emp.DepartmentId = dep.Id \\nand \\n    emp.Salary=\\n        (Select \\n            max(Salary) \\n         from \\n            Employee emp2 \\n         where \\n            emp2.DepartmentId=dep.Id)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1346210,
                "title": "group-by-and-having-oracle",
                "content": "```\\n/* Write your PL/SQL query statement below */\\nselect d.name department,e.name employee ,e.salary salary from employee e,department d where e.departmentid=d.id and\\ne.salary=(select max(distinct salary) from employee group by departmentid having departmentid=e.departmentid);\\n```",
                "solutionTags": [
                    "Oracle"
                ],
                "code": "```\\n/* Write your PL/SQL query statement below */\\nselect d.name department,e.name employee ,e.salary salary from employee e,department d where e.departmentid=d.id and\\ne.salary=(select max(distinct salary) from employee group by departmentid having departmentid=e.departmentid);\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 442426,
                "title": "simple-mysql-query",
                "content": "```\\nSELECT \\n    d.Name AS Department, e.Name AS Employee, e.Salary AS Salary\\nFROM \\n    Employee AS e, Department AS d\\nWHERE \\n    e.DepartmentID = d.Id\\n    AND\\n    e.Salary = (SELECT \\n                    MAX(Salary) \\n               FROM \\n                    Employee\\n               WHERE\\n                    DepartmentId = d.Id)\\n```",
                "solutionTags": [],
                "code": "```\\nSELECT \\n    d.Name AS Department, e.Name AS Employee, e.Salary AS Salary\\nFROM \\n    Employee AS e, Department AS d\\nWHERE \\n    e.DepartmentID = d.Id\\n    AND\\n    e.Salary = (SELECT \\n                    MAX(Salary) \\n               FROM \\n                    Employee\\n               WHERE\\n                    DepartmentId = d.Id)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 348175,
                "title": "mssql-window-function",
                "content": "```\\nSELECT\\n    d.Name AS Department,\\n    Sel.Name AS Employee,\\n    Sel.Salary AS Salary\\nFROM\\n(\\n    SELECT\\n        Name,\\n        Salary,\\n        DepartmentId,\\n        DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary DESC) AS dr\\n    FROM Employee \\n) AS Sel\\nINNER JOIN Department d ON d.Id = Sel.DepartmentId\\nWHERE Sel.dr = 1\\n```",
                "solutionTags": [],
                "code": "```\\nSELECT\\n    d.Name AS Department,\\n    Sel.Name AS Employee,\\n    Sel.Salary AS Salary\\nFROM\\n(\\n    SELECT\\n        Name,\\n        Salary,\\n        DepartmentId,\\n        DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary DESC) AS dr\\n    FROM Employee \\n) AS Sel\\nINNER JOIN Department d ON d.Id = Sel.DepartmentId\\nWHERE Sel.dr = 1\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2555659,
                "title": "184-department-highest-salary",
                "content": "```\\nSELECT dept.Name AS Department, Employee.Name AS Employee, Salary\\nFROM Employee\\n\\nINNER JOIN Department AS dept ON Employee.DepartmentId=dept.Id\\n\\nwhere (dept.Id, Salary) IN (SELECT DepartmentId, max(Salary)\\n                         FROM Employee GROUP BY DepartmentId);",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT dept.Name AS Department, Employee.Name AS Employee, Salary\\nFROM Employee\\n\\nINNER JOIN Department AS dept ON Employee.DepartmentId=dept.Id\\n\\nwhere (dept.Id, Salary) IN (SELECT DepartmentId, max(Salary)\\n                         FROM Employee GROUP BY DepartmentId);",
                "codeTag": "Unknown"
            },
            {
                "id": 977945,
                "title": "accepted-simple-oracle",
                "content": "oracle\\n```\\nselect d.Name as Department, e.Name as Employee, e.Salary\\nfrom Department d inner join Employee e on d.Id = e.DepartmentId\\nwhere (e.Salary, e.DepartmentId)  in (select max(Salary), DepartmentId from Employee group by DepartmentId)\\n```",
                "solutionTags": [
                    "Oracle"
                ],
                "code": "```\\nselect d.Name as Department, e.Name as Employee, e.Salary\\nfrom Department d inner join Employee e on d.Id = e.DepartmentId\\nwhere (e.Salary, e.DepartmentId)  in (select max(Salary), DepartmentId from Employee group by DepartmentId)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3878427,
                "title": "pandas-simple-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nEasy Solution you will understand once you see the code\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\nimport pandas as pd\\n\\ndef department_highest_salary(employee: pd.DataFrame, department: pd.DataFrame) -> pd.DataFrame:\\n    if employee.empty or department.empty:\\n        return pd.DataFrame(columns=[\\'Department\\', \\'Employee\\', \\'Salary\\'])\\n\\n    # Merge the employee and department DataFrames on \\'departmentId\\' and \\'id\\' columns\\n    merged_df = employee.merge(department, left_on=\\'departmentId\\', right_on=\\'id\\', suffixes= (\\'_employee\\', \\'_department\\'))\\n\\n    # Find the maximum salary in each department\\n    max_salaries = merged_df.groupby(\\'departmentId\\')[\\'salary\\'].transform(\\'max\\')\\n\\n    # Filter for employees with maximum salary in each department\\n    highest_salary_df = merged_df[merged_df[\\'salary\\'] == max_salaries]\\n\\n    # Select the required columns\\n    result_df = highest_salary_df[[\\'name_department\\', \\'name_employee\\', \\'salary\\']]\\n\\n    # Rename the columns as specified\\n    result_df.columns = [\\'Department\\', \\'Employee\\', \\'Salary\\']\\n\\n    return result_df\\n\\n\\n```",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```\\nimport pandas as pd\\n\\ndef department_highest_salary(employee: pd.DataFrame, department: pd.DataFrame) -> pd.DataFrame:\\n    if employee.empty or department.empty:\\n        return pd.DataFrame(columns=[\\'Department\\', \\'Employee\\', \\'Salary\\'])\\n\\n    # Merge the employee and department DataFrames on \\'departmentId\\' and \\'id\\' columns\\n    merged_df = employee.merge(department, left_on=\\'departmentId\\', right_on=\\'id\\', suffixes= (\\'_employee\\', \\'_department\\'))\\n\\n    # Find the maximum salary in each department\\n    max_salaries = merged_df.groupby(\\'departmentId\\')[\\'salary\\'].transform(\\'max\\')\\n\\n    # Filter for employees with maximum salary in each department\\n    highest_salary_df = merged_df[merged_df[\\'salary\\'] == max_salaries]\\n\\n    # Select the required columns\\n    result_df = highest_salary_df[[\\'name_department\\', \\'name_employee\\', \\'salary\\']]\\n\\n    # Rename the columns as specified\\n    result_df.columns = [\\'Department\\', \\'Employee\\', \\'Salary\\']\\n\\n    return result_df\\n\\n\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3850664,
                "title": "best-solutions-mysql-pandas-beats-100",
                "content": "# Code\\n```\\n# Write your MySQL query statement below\\nSELECT D.Name AS Department, E.Name AS Employee, E.Salary \\nFROM Employee E, Department D \\nWHERE E.DepartmentId = D.id AND (DepartmentId,Salary) in \\n  (SELECT DepartmentId,max(Salary) as max FROM Employee GROUP BY DepartmentId)\\n```\\n```\\nimport pandas as pd\\n\\ndef department_highest_salary(employee: pd.DataFrame, department: pd.DataFrame) -> pd.DataFrame:\\n    data = pd.merge(employee, department, left_on = \\'departmentId\\', right_on = \\'id\\', how = \\'left\\')\\n    df = data.groupby(\\'name_y\\').apply(lambda x: x[x.salary == x.salary.max()])\\n    df = df.rename(columns={\\'name_y\\': \\'Department\\', \\'name_x\\': \\'Employee\\'})\\n    df = df.drop(columns=[\\'id_x\\', \\'id_y\\']).reset_index()\\n    return df[[\\'Department\\',\\'Employee\\',\\'salary\\']]\\n```",
                "solutionTags": [
                    "MySQL",
                    "Pandas"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT D.Name AS Department, E.Name AS Employee, E.Salary \\nFROM Employee E, Department D \\nWHERE E.DepartmentId = D.id AND (DepartmentId,Salary) in \\n  (SELECT DepartmentId,max(Salary) as max FROM Employee GROUP BY DepartmentId)\\n```\n```\\nimport pandas as pd\\n\\ndef department_highest_salary(employee: pd.DataFrame, department: pd.DataFrame) -> pd.DataFrame:\\n    data = pd.merge(employee, department, left_on = \\'departmentId\\', right_on = \\'id\\', how = \\'left\\')\\n    df = data.groupby(\\'name_y\\').apply(lambda x: x[x.salary == x.salary.max()])\\n    df = df.rename(columns={\\'name_y\\': \\'Department\\', \\'name_x\\': \\'Employee\\'})\\n    df = df.drop(columns=[\\'id_x\\', \\'id_y\\']).reset_index()\\n    return df[[\\'Department\\',\\'Employee\\',\\'salary\\']]\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3759714,
                "title": "easy-mysql-solution",
                "content": "\\n\\n# Code\\n```\\nSELECT D.Name AS Department ,E.Name AS Employee ,E.Salary \\nfrom \\n\\tEmployee E,\\n\\tDepartment D \\nWHERE E.DepartmentId = D.id \\n  AND (DepartmentId,Salary) in \\n  (SELECT DepartmentId,max(Salary) as max FROM Employee GROUP BY DepartmentId)\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT D.Name AS Department ,E.Name AS Employee ,E.Salary \\nfrom \\n\\tEmployee E,\\n\\tDepartment D \\nWHERE E.DepartmentId = D.id \\n  AND (DepartmentId,Salary) in \\n  (SELECT DepartmentId,max(Salary) as max FROM Employee GROUP BY DepartmentId)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3710755,
                "title": "mysql-solution-for-department-highest-salary-problem",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\nThe goal is to find employees who have the highest salary in each department. To achieve this, we need to compare the salary of each employee within their respective department and select the ones with the maximum salary.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\nThe approach is to join the Employee and Department tables based on the departmentId foreign key. By performing this join, we can access the department name for each employee. Then, we use a subquery to calculate the maximum salary for each department. Finally, we filter the results by selecting only the employees whose department and salary match the maximum values.\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\nThe time complexity of this solution depends on the size of the Employee table. Let\\'s denote m as the number of rows in the Employee table. The subquery that calculates the maximum salary for each department has a complexity of O(m). The join operation and filtering have a complexity of O(m) as well. Therefore, the overall time complexity is O(m).\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\nThe space complexity is determined by the number of rows returned in the result table. If there are k departments and each department has one employee with the highest salary, the result will have k rows. Therefore, the space complexity is O(k).\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT d.name AS Department, e.name AS Employee, e.Salary\\nFROM Employee e\\nINNER JOIN Department d ON e.departmentId = d.id\\nWHERE (e.departmentId, e.salary) IN (\\n    SELECT departmentId, MAX(salary)\\n    FROM Employee\\n    GROUP BY departmentId\\n);\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT d.name AS Department, e.name AS Employee, e.Salary\\nFROM Employee e\\nINNER JOIN Department d ON e.departmentId = d.id\\nWHERE (e.departmentId, e.salary) IN (\\n    SELECT departmentId, MAX(salary)\\n    FROM Employee\\n    GROUP BY departmentId\\n);\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3276114,
                "title": "simple-and-easy-to-understand-solution-mysql",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT dept.name AS Department, emp.name AS Employee, emp.salary AS Salary\\nFROM Department dept, Employee emp\\nWHERE emp.departmentId = dept.id\\nAND emp.salary = (SELECT MAX(Salary) FROM Employee emp WHERE emp.departmentId = dept.id)\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT dept.name AS Department, emp.name AS Employee, emp.salary AS Salary\\nFROM Department dept, Employee emp\\nWHERE emp.departmentId = dept.id\\nAND emp.salary = (SELECT MAX(Salary) FROM Employee emp WHERE emp.departmentId = dept.id)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2815559,
                "title": "sql-multiple-approaches-easy-to-understand",
                "content": "I just found this Blog and Github repository with solutions to Leetcode problems.\\nhttps://leet-codes.blogspot.com/2022/10/department-highest-salary.html\\nIt has solutions to almost every problem on Leetcode, and I recommend checking it out.\\nNote: You can bookmark it as a resource, and approach. Other approaches are in above blog\\n<br>\\n\\n```\\nSELECT d.name AS Department, e.Employee, e.Salary\\nFROM Department d\\nLEFT JOIN (\\n        SELECT \\n            departmentId, \\n            salary AS Salary,\\n            name AS Employee,\\n            DENSE_RANK() OVER (PARTITION BY departmentId ORDER BY salary DESC) AS \\'salary_rank\\'\\n        FROM Employee) e\\nON d.id = e.departmentId\\nWHERE salary_rank = 1\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT d.name AS Department, e.Employee, e.Salary\\nFROM Department d\\nLEFT JOIN (\\n        SELECT \\n            departmentId, \\n            salary AS Salary,\\n            name AS Employee,\\n            DENSE_RANK() OVER (PARTITION BY departmentId ORDER BY salary DESC) AS \\'salary_rank\\'\\n        FROM Employee) e\\nON d.id = e.departmentId\\nWHERE salary_rank = 1\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2813583,
                "title": "93-faster",
                "content": "![image](https://assets.leetcode.com/users/images/5a4bea54-9e8e-4929-9709-77afb82be822_1668422497.2098377.png)\\n\\n\\n```\\nSELECT Department, Employee, Salary \\nFROM ( \\n        SELECT *, rank() over(PARTITION BY Department ORDER BY Salary DESC) AS Highest_Salaries \\n        FROM (\\n                SELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\n                FROM Department d\\n                INNER JOIN Employee e\\n                ON d.id = e.departmentId\\n            ) AS x         \\n    ) AS y\\nWHERE Highest_Salaries < 2;\\n```",
                "solutionTags": [],
                "code": "```\\nSELECT Department, Employee, Salary \\nFROM ( \\n        SELECT *, rank() over(PARTITION BY Department ORDER BY Salary DESC) AS Highest_Salaries \\n        FROM (\\n                SELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\n                FROM Department d\\n                INNER JOIN Employee e\\n                ON d.id = e.departmentId\\n            ) AS x         \\n    ) AS y\\nWHERE Highest_Salaries < 2;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2704795,
                "title": "mysql-subquery-easy-to-understand",
                "content": "```\\nselect d.name as department,e.name as employee,salary\\nfrom department d\\njoin employee e\\non d.id = e.departmentid\\nwhere (departmentid,salary ) in\\n(select departmentid,max(salary) from employee group by departmentid);\\n```\\nBreaking the code\\n\\n1 inside the subquerry, we can get the max salary for each department using the \\n```\\n(select departmentid,max(salary) from employee group by departmentid)\\n```\\n\\n2 select the multiple condtion where clause to select the max salary by department using \\n```\\nwhere (departmentid,salary ) in\\n(select departmentid,max(salary) from employee group by departmentid)\\n```\\n\\n3  Rest of the code is to join the tables and select the required column\\n\\nupvote if helps, ping if need help.",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect d.name as department,e.name as employee,salary\\nfrom department d\\njoin employee e\\non d.id = e.departmentid\\nwhere (departmentid,salary ) in\\n(select departmentid,max(salary) from employee group by departmentid);\\n```\n```\\n(select departmentid,max(salary) from employee group by departmentid)\\n```\n```\\nwhere (departmentid,salary ) in\\n(select departmentid,max(salary) from employee group by departmentid)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1976460,
                "title": "inner-join-where-group-by-70-20-time",
                "content": "```\\n# Write your MySQL query statement below\\nselect Department.name as Department, Employee.name as Employee, Employee.salary as salary\\nfrom Employee\\ninner join Department on\\nemployee.departmentId = department.id\\nwhere \\n(employee.departmentId, salary) IN (\\n    select DepartmentId, max(salary)\\n    from Employee\\n    group by departmentId\\n);\\n\\n```",
                "solutionTags": [],
                "code": "```\\n# Write your MySQL query statement below\\nselect Department.name as Department, Employee.name as Employee, Employee.salary as salary\\nfrom Employee\\ninner join Department on\\nemployee.departmentId = department.id\\nwhere \\n(employee.departmentId, salary) IN (\\n    select DepartmentId, max(salary)\\n    from Employee\\n    group by departmentId\\n);\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1822982,
                "title": "correlated-subqueries",
                "content": "SELECT d.name AS Department, e.name AS Employee, Salary\\nFROM Employee e\\nJOIN department d ON e.departmentId = d.id\\nWHERE salary = (SELECT MAX(salary) FROM employee WHERE departmentId = e.departmentId )\\n\\nI learned that from Mosh",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "SELECT d.name AS Department, e.name AS Employee, Salary\\nFROM Employee e\\nJOIN department d ON e.departmentId = d.id\\nWHERE salary = (SELECT MAX(salary) FROM employee WHERE departmentId = e.departmentId )\\n\\nI learned that from Mosh",
                "codeTag": "Unknown"
            },
            {
                "id": 1522483,
                "title": "solution-with-explanation-using-rank-in-mysql",
                "content": "This query can  be written using INNER JOIN and/or Sub-query. This solution shows a way of writing it using `RANK()` function.\\n\\n**`Step 1`**\\nWe need to rank the employees based on their salaries for each department\\n\\n```\\nSELECT\\n\\td.Name AS Department,\\n\\te.Name as Employee,\\n\\te.Salary,\\n\\t/* Ranking employee based on salary for each department(d.Name)*/\\n\\tRANK() OVER (PARTITION BY d.Name ORDER BY e.Salary DESC) AS emp_rank #\\nFROM employee e\\nJOIN department d ON d.Id = e.DepartmentId\\n```\\n\\n**`Step 2`** \\nThe ranking above is done in descending order of salary and partitioned by department so the highest salary for each department should always have `rank = 1`. All we need is to just select the ones whose `rank = 1`.\\n\\nWe can write a CTE(Common Table Expression) for the first step and simply select the necessary columns in second step from the CTE table. \\n\\nThe full query should look like this:\\n```\\nWITH employee_rank AS(\\n    SELECT\\n        d.Name AS Department,\\n        e.Name as Employee,\\n        e.Salary,\\n        RANK() OVER (PARTITION BY d.Name ORDER BY e.Salary DESC) AS emp_rank\\n    FROM employee e\\n    JOIN department d ON d.Id = e.DepartmentId\\n)\\n\\nSELECT\\n    Department,\\n    Employee,\\n    Salary\\nFROM employee_rank\\nWHERE emp_rank = 1;\\n```\\n\\n\\n**N. B.:** We can also use `DENSE_RANK()` instead of `RANK()` here which will give us the exact same result for this problem as we are only considering the highest salary here.\\n\\nThis query gives the following runtime and memory usage after successful submission\\n```\\nRuntime: 505 ms, faster than 88.21% of MySQL online submissions for Department Highest Salary.\\nMemory Usage: 0B, less than 100.00% of MySQL online submissions for Department Highest Salary.\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT\\n\\td.Name AS Department,\\n\\te.Name as Employee,\\n\\te.Salary,\\n\\t/* Ranking employee based on salary for each department(d.Name)*/\\n\\tRANK() OVER (PARTITION BY d.Name ORDER BY e.Salary DESC) AS emp_rank #\\nFROM employee e\\nJOIN department d ON d.Id = e.DepartmentId\\n```\n```\\nWITH employee_rank AS(\\n    SELECT\\n        d.Name AS Department,\\n        e.Name as Employee,\\n        e.Salary,\\n        RANK() OVER (PARTITION BY d.Name ORDER BY e.Salary DESC) AS emp_rank\\n    FROM employee e\\n    JOIN department d ON d.Id = e.DepartmentId\\n)\\n\\nSELECT\\n    Department,\\n    Employee,\\n    Salary\\nFROM employee_rank\\nWHERE emp_rank = 1;\\n```\n```\\nRuntime: 505 ms, faster than 88.21% of MySQL online submissions for Department Highest Salary.\\nMemory Usage: 0B, less than 100.00% of MySQL online submissions for Department Highest Salary.\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1476469,
                "title": "intuitive-solution",
                "content": "Approach/Steps:\\n1. Calculate department wise highest salaries\\n\\t```\\n\\tselect DepartmentId, max(Salary) from Employee group by DepartmentId\\n\\t```\\n2. Fetch all Employees which are getting highest salary in the department\\n\\t```\\n\\tselect * from Employee\\n\\twhere (DepartmentId, Salary) in \\n\\t(select DepartmentId, max(Salary) from Employee group by DepartmentId)\\n\\t```\\n3. Join the Employee and Department tables to get the department name in the result (Final Solution)\\n\\t```\\n\\tselect d.Name as Department, e.Name as Employee, Salary from Employee e join Department d on\\n\\te.DepartmentId = d.Id\\n\\twhere (e.DepartmentId, e.Salary) in \\n\\t(select DepartmentId, max(Salary) from Employee group by DepartmentId)\\n\\t```\\n\\nRuntime: 506 ms, faster than 87.68% submissions",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n\\tselect DepartmentId, max(Salary) from Employee group by DepartmentId\\n\\t```\n```\\n\\tselect * from Employee\\n\\twhere (DepartmentId, Salary) in \\n\\t(select DepartmentId, max(Salary) from Employee group by DepartmentId)\\n\\t```\n```\\n\\tselect d.Name as Department, e.Name as Employee, Salary from Employee e join Department d on\\n\\te.DepartmentId = d.Id\\n\\twhere (e.DepartmentId, e.Salary) in \\n\\t(select DepartmentId, max(Salary) from Employee group by DepartmentId)\\n\\t```",
                "codeTag": "Unknown"
            },
            {
                "id": 1468065,
                "title": "using-subquery",
                "content": "```\\nselect max(e2.salary) from employee e2 where e2.departmentid = e.departmentid\\n```\\nthis query will give maximum salary for one departmentId\\nand use this result to our main query so the result will be like below:\\n\\n```\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d , Employee e\\nwhere e.departmentId = d.id\\nand e.salary = (\\n    select max(e2.salary) from employee e2 where e2.departmentid = e.departmentid\\n);\\n```\\nHit like if you find this helpful!\\n",
                "solutionTags": [],
                "code": "```\\nselect max(e2.salary) from employee e2 where e2.departmentid = e.departmentid\\n```\n```\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d , Employee e\\nwhere e.departmentId = d.id\\nand e.salary = (\\n    select max(e2.salary) from employee e2 where e2.departmentid = e.departmentid\\n);\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1357856,
                "title": "using-inner-join-easy-to-understand",
                "content": "```\\nSELECT Department.Name AS Department, Employee.Name AS Employee, Employee.Salary AS Salary\\nFROM Employee INNER JOIN Department\\nON Employee.DepartmentId =Department.Id\\nWHERE Employee.Salary=\\n    (\\n        SELECT MAX(Salary) FROM Employee  \\n        WHERE Employee.DepartmentId=Department.Id\\n    );\\n\\t```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT Department.Name AS Department, Employee.Name AS Employee, Employee.Salary AS Salary\\nFROM Employee INNER JOIN Department\\nON Employee.DepartmentId =Department.Id\\nWHERE Employee.Salary=\\n    (\\n        SELECT MAX(Salary) FROM Employee  \\n        WHERE Employee.DepartmentId=Department.Id\\n    );\\n\\t```",
                "codeTag": "Unknown"
            },
            {
                "id": 1290764,
                "title": "mysql-simple-window-function",
                "content": "```\\nselect b.Name as Department, a.Name as Employee, Salary\\nfrom \\n# rank Salary in department\\n(select *, dense_rank () over (partition by DepartmentId order by Salary desc) as salaryRank\\nfrom Employee) a \\njoin Department b \\non a.DepartmentId = b.Id and a.salaryRank = 1\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect b.Name as Department, a.Name as Employee, Salary\\nfrom \\n# rank Salary in department\\n(select *, dense_rank () over (partition by DepartmentId order by Salary desc) as salaryRank\\nfrom Employee) a \\njoin Department b \\non a.DepartmentId = b.Id and a.salaryRank = 1\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1261602,
                "title": "simple-solution-using-where-and-and",
                "content": "```\\nSELECT D.NAME AS Department, E.NAME AS Employee, E.SALARY AS Salary\\nFROM EMPLOYEE AS E, DEPARTMENT AS D\\nWHERE D.ID = E.DEPARTMENTID\\nAND E.SALARY = \\n    (SELECT MAX(SALARY) \\n     FROM EMPLOYEE AS E2 \\n     WHERE E2.DEPARTMENTID = D.ID)\\n```\\n\\n\\n",
                "solutionTags": [],
                "code": "```\\nSELECT D.NAME AS Department, E.NAME AS Employee, E.SALARY AS Salary\\nFROM EMPLOYEE AS E, DEPARTMENT AS D\\nWHERE D.ID = E.DEPARTMENTID\\nAND E.SALARY = \\n    (SELECT MAX(SALARY) \\n     FROM EMPLOYEE AS E2 \\n     WHERE E2.DEPARTMENTID = D.ID)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 875946,
                "title": "use-dense-rank-and-inner-join",
                "content": "```\\nSELECT Department, Employee, Salary\\nFROM (SELECT D.Name AS Department, E.Name AS Employee, E.Salary AS Salary , DENSE_RANK() OVER(PARTITION BY E.DepartmentId ORDER BY E.Salary DESC) RN\\n     FROM Employee E\\n     INNER JOIN Department D\\n     ON E.DepartmentId = D.Id)\\nWHERE RN=1\\n```\\n\\u4E00\\u5F00\\u59CB\\u60F3\\u7528group by\\u6765\\u7740\\uFF0C\\u53D1\\u73B0\\u5206\\u7EC4\\u7684\\u65F6\\u5019\\u8981\\u4E48\\u8003\\u8651\\u5B50\\u67E5\\u8BE2\\u8981\\u4E48\\u4E0D\\u597D\\u7EC4\\u5185\\u6392\\u5E8F\\n\\u7528\\u4E86\\u5206\\u6790\\u51FD\\u6570\\u6765\\u5B9E\\u73B0\\u5206\\u7EC4\\u6392\\u5E8F\\u548C\\u83B7\\u53D6\\u5206\\u7EC4\\u6392\\u540D\\u987A\\u5E8F\\n\\u4E00\\u5F00\\u59CB\\u7528\\u4E86\\u5DE6\\u8FDE\\u63A5\\uFF0Csubmission\\u7684\\u65F6\\u5019\\u53D1\\u73B0\\u6709\\u53EF\\u80FD\\u5B58\\u5728\\u7A7A\\u503C\\u7684\\u60C5\\u51B5\\uFF0C\\u6539\\u6210\\u4E86\\u5185\\u8FDE\\u63A5\\uFF0C\\u6EE4\\u6389\\u5DE6\\u8868\\u53EF\\u80FD\\u5339\\u914D\\u4E0D\\u5230departmentid\\u7684\\u60C5\\u51B5\\n\\u6700\\u540E\\u8FD8\\u662F\\u7528\\u4E86\\u5B50\\u67E5\\u8BE2\\u2026\\u2026",
                "solutionTags": [
                    "Oracle"
                ],
                "code": "```\\nSELECT Department, Employee, Salary\\nFROM (SELECT D.Name AS Department, E.Name AS Employee, E.Salary AS Salary , DENSE_RANK() OVER(PARTITION BY E.DepartmentId ORDER BY E.Salary DESC) RN\\n     FROM Employee E\\n     INNER JOIN Department D\\n     ON E.DepartmentId = D.Id)\\nWHERE RN=1\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 642894,
                "title": "mysql-using-inner-join",
                "content": "```\\nselect d.Name as Department,\\ne.Name as Employee,\\ne.Salary\\nfrom Employee e inner join Department d\\non e.DepartmentId = d.Id\\nwhere e.Salary = (select max(salary) from Employee where departmentId = d.Id);\\n```",
                "solutionTags": [],
                "code": "```\\nselect d.Name as Department,\\ne.Name as Employee,\\ne.Salary\\nfrom Employee e inner join Department d\\non e.DepartmentId = d.Id\\nwhere e.Salary = (select max(salary) from Employee where departmentId = d.Id);\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 201053,
                "title": "248ms-ans-beats-99-and-illustration",
                "content": "The most tricky part is to get the actual name of each department. Otherwise it is a simple question\\nFirst we find the max price from the employee table of each departmentID\\nSecond, join the filtered employee table and department table and get the name of department\\n```\\nselect Department.Name as Department, a.Name as Employee,  a.Salary as Salary\\nfrom Department\\njoin (select Name, Salary, DepartmentId from Employee \\n      where (DepartmentId, Salary) in (\\n          select DepartmentId, max(Salary)   # find the max price  of each departmentID\\n          from Employee\\n          group by DepartmentId)) as a \\n     on Department.Id = a.DepartmentId\\n```",
                "solutionTags": [],
                "code": "```\\nselect Department.Name as Department, a.Name as Employee,  a.Salary as Salary\\nfrom Department\\njoin (select Name, Salary, DepartmentId from Employee \\n      where (DepartmentId, Salary) in (\\n          select DepartmentId, max(Salary)   # find the max price  of each departmentID\\n          from Employee\\n          group by DepartmentId)) as a \\n     on Department.Id = a.DepartmentId\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 53616,
                "title": "what-s-wrong-with-my-code",
                "content": "select Department.Name Department ,Employee.Name Employee, max(Salary) Salary\\nfrom  Employee join Department on Employee.DepartmentId = Department.ID \\ngroup by Department.ID\\norder by  Department.ID\\n\\n{\"headers\": {\"Employee\": [\"Id\", \"Name\", \"Salary\", \"DepartmentId\"], \"Department\": [\"Id\", \"Name\"]}, \"rows\": {\"Employee\": [[1, \"Joe\", 70000, 1], [2, \"Henry\", 80000, 2], [3, \"Sam\", 60000, 2], [4, \"Max\", 90000, 1]], \"Department\": [[1, \"IT\"], [2, \"Sales\"]]}}\\n\\nmy output: \\n{\"headers\": [\"Department\", \"Employee\", \"Salary\"], \"values\": [[\"IT\", \"Joe\", 90000], [\"Sales\", \"Henry\", 80000]]}\\n\\nExpected:\\n{\"headers\": [\"Department\", \"Employee\", \"Salary\"], \"values\": [[\"Sales\", \"Henry\", 80000], [\"IT\", \"Max\", 90000]]}",
                "solutionTags": [],
                "code": "select Department.Name Department ,Employee.Name Employee, max(Salary) Salary\\nfrom  Employee join Department on Employee.DepartmentId = Department.ID \\ngroup by Department.ID\\norder by  Department.ID\\n\\n{\"headers\": {\"Employee\": [\"Id\", \"Name\", \"Salary\", \"DepartmentId\"], \"Department\": [\"Id\", \"Name\"]}, \"rows\": {\"Employee\": [[1, \"Joe\", 70000, 1], [2, \"Henry\", 80000, 2], [3, \"Sam\", 60000, 2], [4, \"Max\", 90000, 1]], \"Department\": [[1, \"IT\"], [2, \"Sales\"]]}}\\n\\nmy output: \\n{\"headers\": [\"Department\", \"Employee\", \"Salary\"], \"values\": [[\"IT\", \"Joe\", 90000], [\"Sales\", \"Henry\", 80000]]}\\n\\nExpected:\\n{\"headers\": [\"Department\", \"Employee\", \"Salary\"], \"values\": [[\"Sales\", \"Henry\", 80000], [\"IT\", \"Max\", 90000]]}",
                "codeTag": "Unknown"
            },
            {
                "id": 53682,
                "title": "accepted-solution-without-using-max-function",
                "content": "    select b.Name Department, a.Name Employee, a.Salary from\\n    (\\n        select a.Name, a.Salary, a.DepartmentId \\n        from Employee a left outer join Employee b\\n        on a.DepartmentId = b.DepartmentId \\n        and a.Salary < b.Salary\\n        where b.Id is null\\n    ) a join Department b\\n    on a.DepartmentId = b.Id;",
                "solutionTags": [],
                "code": "    select b.Name Department, a.Name Employee, a.Salary from\\n    (\\n        select a.Name, a.Salary, a.DepartmentId \\n        from Employee a left outer join Employee b\\n        on a.DepartmentId = b.DepartmentId \\n        and a.Salary < b.Salary\\n        where b.Id is null\\n    ) a join Department b\\n    on a.DepartmentId = b.Id;",
                "codeTag": "Unknown"
            },
            {
                "id": 3977256,
                "title": "184-department-highest-salary",
                "content": "\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT DEPT.name AS Department, EMP.name AS Employee, EMP.salary AS Salary \\nFROM Department DEPT, Employee EMP WHERE\\nEMP.departmentId = DEPT.id AND (EMP.departmentId, salary) IN \\n(SELECT departmentId, MAX(salary) FROM Employee GROUP BY departmentId)\\n```",
                "solutionTags": [
                    "MySQL",
                    "Database"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT DEPT.name AS Department, EMP.name AS Employee, EMP.salary AS Salary \\nFROM Department DEPT, Employee EMP WHERE\\nEMP.departmentId = DEPT.id AND (EMP.departmentId, salary) IN \\n(SELECT departmentId, MAX(salary) FROM Employee GROUP BY departmentId)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3872647,
                "title": "mysql-eassy-solution",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nSELECT Department.name AS Department ,Employee.name AS Employee, Employee.salary FROM Department  JOIN Employee  ON Employee.departmentId=Department.id WHERE(departmentId, salary) IN (SELECT departmentId,MAX(salary) FROM Employee GROUP BY departmentId) ;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT Department.name AS Department ,Employee.name AS Employee, Employee.salary FROM Department  JOIN Employee  ON Employee.departmentId=Department.id WHERE(departmentId, salary) IN (SELECT departmentId,MAX(salary) FROM Employee GROUP BY departmentId) ;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3850809,
                "title": "clear-solution",
                "content": "-- We can write an inner query to get max salary department wise. \\n-- After that we can use that result and join it with employee and department\\n-- to get department name, employee name and max salary. \\n\\n/* Write your T-SQL query statement below */\\n```\\nselect d.name Department, emp.name Employee, temp.salary Salary from \\n(select dept.id as deptid, max(emp.salary) as salary\\nfrom employee emp inner join department dept\\non emp.departmentId = dept.id\\ngroup by dept.id) temp\\ninner join employee emp on emp.departmentId = temp.deptid\\nand temp.salary = emp.salary\\ninner join Department d on d.id = temp.deptid\\n```\\n\\n-- --Other possible solutions\\n```\\n-- SELECT D.Name,A.Name,A.Salary \\n-- FROM \\n-- \\tEmployee A,\\n-- \\tDepartment D   \\n-- WHERE A.DepartmentId = D.Id \\n--   AND NOT EXISTS \\n--   (SELECT 1 FROM Employee B WHERE B.Salary > A.Salary AND A.DepartmentId = B.DepartmentId) \\n```\\n-- -- \\n```\\n-- SELECT D.Name AS Department ,E.Name AS Employee ,E.Salary \\n-- from \\n-- \\tEmployee E,\\n-- \\tDepartment D \\n-- WHERE E.DepartmentId = D.id \\n--   AND (DepartmentId,Salary) in \\n--   (SELECT DepartmentId,max(Salary) as max FROM Employee GROUP BY DepartmentId)\\n ```",
                "solutionTags": [],
                "code": "```\\nselect d.name Department, emp.name Employee, temp.salary Salary from \\n(select dept.id as deptid, max(emp.salary) as salary\\nfrom employee emp inner join department dept\\non emp.departmentId = dept.id\\ngroup by dept.id) temp\\ninner join employee emp on emp.departmentId = temp.deptid\\nand temp.salary = emp.salary\\ninner join Department d on d.id = temp.deptid\\n```\n```\\n-- SELECT D.Name,A.Name,A.Salary \\n-- FROM \\n-- \\tEmployee A,\\n-- \\tDepartment D   \\n-- WHERE A.DepartmentId = D.Id \\n--   AND NOT EXISTS \\n--   (SELECT 1 FROM Employee B WHERE B.Salary > A.Salary AND A.DepartmentId = B.DepartmentId) \\n```\n```\\n-- SELECT D.Name AS Department ,E.Name AS Employee ,E.Salary \\n-- from \\n-- \\tEmployee E,\\n-- \\tDepartment D \\n-- WHERE E.DepartmentId = D.id \\n--   AND (DepartmentId,Salary) in \\n--   (SELECT DepartmentId,max(Salary) as max FROM Employee GROUP BY DepartmentId)\\n ```",
                "codeTag": "Unknown"
            },
            {
                "id": 3545420,
                "title": "solution-with-window-function-sql-server",
                "content": "# Intuition\\r\\n<!-- Describe your first thoughts on how to solve this problem. -->\\r\\n\\r\\n# Approach\\r\\n<!-- Describe your approach to solving the problem. -->\\r\\n\\r\\n# Complexity\\r\\n- Time complexity:\\r\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\r\\n\\r\\n- Space complexity:\\r\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\r\\n\\r\\n# Code\\r\\n```\\r\\n/* Write your T-SQL query statement below */\\r\\n\\r\\n\\r\\nWITH CTE AS (SELECT\\r\\n    *,\\r\\n    DENSE_RANK() OVER(PARTITION BY DepartmentID ORDER BY salary DESC) RANKED\\r\\nFROM\\r\\n    Employee\\r\\n)\\r\\nSELECT\\r\\n    d.name Department ,\\r\\n    c.name Employee,\\r\\n    c.salary\\r\\nFROM\\r\\n    CTE c\\r\\nINNER JOIN\\r\\n    Department d on c.departmentid = d.id\\r\\nWHERE\\r\\n    EXISTS (\\r\\n\\r\\n        SELECT 1\\r\\n        FROM\\r\\n            CTE C1\\r\\n        WHERE\\r\\n            c.id = c1.id\\r\\n        AND\\r\\n            c.departmentid = c1.departmentid\\r\\n        AND\\r\\n            C1.RANKED = 1\\r\\n    )\\r\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\r\\n/* Write your T-SQL query statement below */\\r\\n\\r\\n\\r\\nWITH CTE AS (SELECT\\r\\n    *,\\r\\n    DENSE_RANK() OVER(PARTITION BY DepartmentID ORDER BY salary DESC) RANKED\\r\\nFROM\\r\\n    Employee\\r\\n)\\r\\nSELECT\\r\\n    d.name Department ,\\r\\n    c.name Employee,\\r\\n    c.salary\\r\\nFROM\\r\\n    CTE c\\r\\nINNER JOIN\\r\\n    Department d on c.departmentid = d.id\\r\\nWHERE\\r\\n    EXISTS (\\r\\n\\r\\n        SELECT 1\\r\\n        FROM\\r\\n            CTE C1\\r\\n        WHERE\\r\\n            c.id = c1.id\\r\\n        AND\\r\\n            c.departmentid = c1.departmentid\\r\\n        AND\\r\\n            C1.RANKED = 1\\r\\n    )\\r\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3531504,
                "title": "solved-via-cte",
                "content": "# Code\\n```\\n;WITH emp as (\\n  select Max(salary) as maxSalary, departmentId from Employee\\n  group by\\n  departmentId\\n)\\n\\nselect e.name as Employee, e.salary as Salary, d.name as Department from Employee e \\ninner join Department d\\non d.id = e.departmentId\\ninner join emp\\non emp.maxSalary = e.salary and emp.departmentId = d.id\\n\\n\\n\\n\\n\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\n;WITH emp as (\\n  select Max(salary) as maxSalary, departmentId from Employee\\n  group by\\n  departmentId\\n)\\n\\nselect e.name as Employee, e.salary as Salary, d.name as Department from Employee e \\ninner join Department d\\non d.id = e.departmentId\\ninner join emp\\non emp.maxSalary = e.salary and emp.departmentId = d.id\\n\\n\\n\\n\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3430702,
                "title": "mssql-solution-with-dense-rank",
                "content": "\\n# Code\\n```\\n/* Write your T-SQL query statement below */\\nSELECT\\n    Department, Employee, Salary\\nFROM\\n(SELECT\\n    D.NAME AS Department,\\n    E.NAME AS Employee,\\n    E.SALARY AS Salary,\\n    DENSE_RANK() OVER(PARTITION BY D.NAME ORDER BY E.SALARY DESC) AS rank\\nFROM \\n    EMPLOYEE E\\nJOIN \\n    DEPARTMENT D ON D.ID = E.DEPARTMENTID) AS R\\nWHERE R.rank = 1;\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\n/* Write your T-SQL query statement below */\\nSELECT\\n    Department, Employee, Salary\\nFROM\\n(SELECT\\n    D.NAME AS Department,\\n    E.NAME AS Employee,\\n    E.SALARY AS Salary,\\n    DENSE_RANK() OVER(PARTITION BY D.NAME ORDER BY E.SALARY DESC) AS rank\\nFROM \\n    EMPLOYEE E\\nJOIN \\n    DEPARTMENT D ON D.ID = E.DEPARTMENTID) AS R\\nWHERE R.rank = 1;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3429187,
                "title": "easy-to-understand-step-by-step-explanation-beats-80",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\nYou can solve this problem by using a combination of `GROUP BY` and `MAX(salary)`. The tricky part is that more than one employee may have the maximum department salary. This means that we have to split the search process into several steps.\\n\\n1. Find the maximum salary for each department.\\n2. Find the employees whose salary and department match the results from step 1.\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\nThis is your starting point. You can see that the highest salary for the IT department is 90000 and that Max and Jim both have this salary.\\n\\n```\\nEmployee table:\\n+----+-------+--------+--------------+\\n| id | name  | salary | departmentId |\\n+----+-------+--------+--------------+\\n| 1  | Joe   | 70000  | 1            |\\n| 2  | Jim   | 90000  | 1            | <-- highest in IT\\n| 3  | Henry | 80000  | 2            | <-- highest in Sales\\n| 4  | Sam   | 60000  | 2            |\\n| 5  | Max   | 90000  | 1            | <-- highest in IT\\n+----+-------+--------+--------------+\\n\\nDepartment table:\\n+----+-------+\\n| id | name  |\\n+----+-------+\\n| 1  | IT    |\\n| 2  | Sales |\\n+----+-------+\\n```\\n\\n### Step 1 - Find the maximum salary for each department\\n\\nYou can use `GROUP BY` in combination with `MAX(salary)` to find the highest salary per department.\\n\\n```\\n| departmentId | maxSalary |\\n| ------------ | --------- |\\n| 1            | 90000     |\\n| 2            | 80000     |\\n```\\n\\n### Step 2 - Find the employees whose salary and department match the results from step 1\\n\\nJoin the Employee and Department tables with the MaxSalary table on the shared departmentId column, then filter out all rows where the employee\\'s salary does not equal the maximum salary value. This is similar to asking for a list of employees who have the maximum salary for their department.\\n\\n(Rename the columns to get the correct answer.)\\n\\n```\\n| departmentId | maxSalary | Department.name | Employee.name | Employee.salary |\\n| ------------ | --------- | --------------- | ------------- | --------------- |\\n| 1            | 90000     | IT              | Jim           | 90000           |\\n| 2            | 80000     | Sales           | Henry         | 80000           |\\n| 1            | 90000     | IT              | Max           | 90000           |\\n```\\n\\n# Code\\n```\\n--\\n-- Step 1 - Find the maximum salary for each department\\n--\\nWITH\\n  MaxSalary AS (\\n  SELECT\\n    Department.id departmentId,\\n    MAX(salary) maxSalary\\n  FROM\\n    Employee\\n  INNER JOIN\\n    Department\\n  ON\\n    Employee.departmentId = Department.id\\n  GROUP BY\\n    Department.id\\n)\\n--\\n-- Step 2 - Find the employees whose salary and department match the results from step 1\\n--\\nSELECT\\n  Department.name Department,\\n  Employee.name Employee,\\n  Employee.salary Salary\\nFROM\\n  Employee\\nINNER JOIN\\n  MaxSalary\\nON\\n  Employee.departmentId = MaxSalary.departmentId\\nINNER JOIN\\n  Department\\nON\\n  Employee.departmentId = Department.id\\nWHERE\\n  Employee.salary = maxSalary\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nEmployee table:\\n+----+-------+--------+--------------+\\n| id | name  | salary | departmentId |\\n+----+-------+--------+--------------+\\n| 1  | Joe   | 70000  | 1            |\\n| 2  | Jim   | 90000  | 1            | <-- highest in IT\\n| 3  | Henry | 80000  | 2            | <-- highest in Sales\\n| 4  | Sam   | 60000  | 2            |\\n| 5  | Max   | 90000  | 1            | <-- highest in IT\\n+----+-------+--------+--------------+\\n\\nDepartment table:\\n+----+-------+\\n| id | name  |\\n+----+-------+\\n| 1  | IT    |\\n| 2  | Sales |\\n+----+-------+\\n```\n```\\n| departmentId | maxSalary |\\n| ------------ | --------- |\\n| 1            | 90000     |\\n| 2            | 80000     |\\n```\n```\\n| departmentId | maxSalary | Department.name | Employee.name | Employee.salary |\\n| ------------ | --------- | --------------- | ------------- | --------------- |\\n| 1            | 90000     | IT              | Jim           | 90000           |\\n| 2            | 80000     | Sales           | Henry         | 80000           |\\n| 1            | 90000     | IT              | Max           | 90000           |\\n```\n```\\n--\\n-- Step 1 - Find the maximum salary for each department\\n--\\nWITH\\n  MaxSalary AS (\\n  SELECT\\n    Department.id departmentId,\\n    MAX(salary) maxSalary\\n  FROM\\n    Employee\\n  INNER JOIN\\n    Department\\n  ON\\n    Employee.departmentId = Department.id\\n  GROUP BY\\n    Department.id\\n)\\n--\\n-- Step 2 - Find the employees whose salary and department match the results from step 1\\n--\\nSELECT\\n  Department.name Department,\\n  Employee.name Employee,\\n  Employee.salary Salary\\nFROM\\n  Employee\\nINNER JOIN\\n  MaxSalary\\nON\\n  Employee.departmentId = MaxSalary.departmentId\\nINNER JOIN\\n  Department\\nON\\n  Employee.departmentId = Department.id\\nWHERE\\n  Employee.salary = maxSalary\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2908445,
                "title": "using-subquery-group-by-max",
                "content": "# Query\\n```\\nSELECT d.name AS \\'Department\\', e.name AS \\'Employee\\', salary AS \\'Salary\\'\\nFROM Employee e JOIN Department d\\nON e.departmentId = d.id\\nWHERE (e.departmentId, e.salary) IN\\n(SELECT departmentId, MAX(salary)\\nFROM Employee\\nGROUP BY departmentId);\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT d.name AS \\'Department\\', e.name AS \\'Employee\\', salary AS \\'Salary\\'\\nFROM Employee e JOIN Department d\\nON e.departmentId = d.id\\nWHERE (e.departmentId, e.salary) IN\\n(SELECT departmentId, MAX(salary)\\nFROM Employee\\nGROUP BY departmentId);\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2611911,
                "title": "just-join-and-dense-rank",
                "content": "select Department, Employee, salary from(\\nselect d.name as Department,e.name as Employee, e.salary as salary, \\ndense_rank() over(partition by e.departmentId order by e.salary desc) as salaryRank\\nfrom employee e, department d\\nwhere e.departmentId=d.id)\\nwhere salaryRank=1",
                "solutionTags": [],
                "code": "select Department, Employee, salary from(\\nselect d.name as Department,e.name as Employee, e.salary as salary, \\ndense_rank() over(partition by e.departmentId order by e.salary desc) as salaryRank\\nfrom employee e, department d\\nwhere e.departmentId=d.id)\\nwhere salaryRank=1",
                "codeTag": "Unknown"
            },
            {
                "id": 2601962,
                "title": "simple-clean-with-rank-and-partition-by",
                "content": "```\\nwith T as (\\nselect *, \\n    rank() over(partition by departmentId order by salary desc) as rnk\\nfrom Employee)\\n\\nselect d.name as Department, t.name as Employee, salary as Salary\\nfrom T t\\nleft join Department d\\non t.departmentId = d.id\\nwhere t.rnk = 1\\n```",
                "solutionTags": [],
                "code": "```\\nwith T as (\\nselect *, \\n    rank() over(partition by departmentId order by salary desc) as rnk\\nfrom Employee)\\n\\nselect d.name as Department, t.name as Employee, salary as Salary\\nfrom T t\\nleft join Department d\\non t.departmentId = d.id\\nwhere t.rnk = 1\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2601104,
                "title": "mysql-very-easy-solutiojn-62",
                "content": "```\\nselect dp.name as Department, em.name as Employee, em.salary as Salary \\n\\tfrom employee em \\n\\t\\tinner join department dp \\n\\t\\t\\ton dp.id = em.departmentid \\n\\t\\t\\t\\twhere (em.departmentid, em.salary) \\n\\t\\t\\t\\t\\tin \\n\\t\\t\\t\\t\\t\\t(select departmentid, max(salary) from employee group by departmentid);\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect dp.name as Department, em.name as Employee, em.salary as Salary \\n\\tfrom employee em \\n\\t\\tinner join department dp \\n\\t\\t\\ton dp.id = em.departmentid \\n\\t\\t\\t\\twhere (em.departmentid, em.salary) \\n\\t\\t\\t\\t\\tin \\n\\t\\t\\t\\t\\t\\t(select departmentid, max(salary) from employee group by departmentid);\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2504412,
                "title": "2-solutions-for-t-sql",
                "content": "Solution 1:\\n```\\nselect  d.name as Department, \\n        e.name as Employee, \\n        salary as Salary\\nfrom Employee e\\njoin Department d on e.departmentId = d.id\\njoin (select max(salary) as max_sal, departmentId\\n      from Employee\\n      group by departmentId) t\\non e.salary = t.max_sal\\nand e.departmentId = t.departmentId\\n```\\nSolution 2:\\n```\\nselect Department, Employee, Salary\\nfrom (\\n    select  d.name as Department,\\n            e.name as Employee,\\n            salary as Salary,\\n            dense_rank() over(partition by departmentId order by salary desc) as rnk\\n    from Employee e\\n    join Department d on e.departmentId = d.id\\n    ) t\\nwhere rnk = 1\\n```",
                "solutionTags": [],
                "code": "```\\nselect  d.name as Department, \\n        e.name as Employee, \\n        salary as Salary\\nfrom Employee e\\njoin Department d on e.departmentId = d.id\\njoin (select max(salary) as max_sal, departmentId\\n      from Employee\\n      group by departmentId) t\\non e.salary = t.max_sal\\nand e.departmentId = t.departmentId\\n```\n```\\nselect Department, Employee, Salary\\nfrom (\\n    select  d.name as Department,\\n            e.name as Employee,\\n            salary as Salary,\\n            dense_rank() over(partition by departmentId order by salary desc) as rnk\\n    from Employee e\\n    join Department d on e.departmentId = d.id\\n    ) t\\nwhere rnk = 1\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2491220,
                "title": "max-with-window",
                "content": "\\tSELECT department,\\n\\t\\t   employee,\\n\\t\\t   salary\\n\\t  FROM (\\n\\t\\tSELECT d.name AS department,\\n\\t\\t\\t   e.name AS employee,\\n\\t\\t\\t   e.salary,\\n\\t\\t\\t   MAX(e.salary) OVER (PARTITION BY d.id) AS max_salary\\n\\t\\t  FROM Employee e JOIN Department d\\n\\t\\t\\t  ON e.departmentId = d.id\\n\\t) AS _\\n\\t WHERE salary = max_salary;\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "\\tSELECT department,\\n\\t\\t   employee,\\n\\t\\t   salary\\n\\t  FROM (\\n\\t\\tSELECT d.name AS department,\\n\\t\\t\\t   e.name AS employee,\\n\\t\\t\\t   e.salary,\\n\\t\\t\\t   MAX(e.salary) OVER (PARTITION BY d.id) AS max_salary\\n\\t\\t  FROM Employee e JOIN Department d\\n\\t\\t\\t  ON e.departmentId = d.id\\n\\t) AS _\\n\\t WHERE salary = max_salary;\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 2355332,
                "title": "mysql-dense-rank-left-join-with-subquery-cte-common-table-expression",
                "content": "### 1. Using CTE\\n```\\nWITH cte \\nAS(\\n    SELECT \\n        departmentId, \\n        salary AS Salary,\\n        name AS Employee,\\n        DENSE_RANK() OVER (PARTITION BY departmentId ORDER BY salary DESC) AS \\'salary_rank\\'\\n    FROM Employee)\\n\\nSELECT d.name AS Department, e.Employee, e.Salary\\nFROM Department d\\nLEFT JOIN cte e\\nON d.id = e.departmentId\\nWHERE salary_rank = 1\\n```\\n### 2. Using Subquery\\n```\\nSELECT d.name AS Department, e.Employee, e.Salary\\nFROM Department d\\nLEFT JOIN (\\n        SELECT \\n            departmentId, \\n            salary AS Salary,\\n            name AS Employee,\\n            DENSE_RANK() OVER (PARTITION BY departmentId ORDER BY salary DESC) AS \\'salary_rank\\'\\n        FROM Employee) e\\nON d.id = e.departmentId\\nWHERE salary_rank = 1\\n```\\n\\nBoth are similar approach.\\n\\n##### NOTE: \\nIt doesn\\'t make a difference whether to use `DENSE_RANK()` OR `RANK()` here, since the question had asked about just the highest salary. But if it was about Nth Highest salary, then use `DENSE_RANK()`, so as to not leave gaps in ranking and just change `WHERE salary_rank = 1` to `WHERE salary_rank = N`\\n\\n\\n##### Further Readings:\\n1. [MySQL 8.0 Reference Manual: 13.2.15 WITH (Common Table Expressions)](https://dev.mysql.com/doc/refman/8.0/en/with.html)\\n2. [An Introduction to MySQL CTE](https://www.mysqltutorial.org/mysql-cte/)\\n3. [Is there a performance difference between CTE , Sub-Query, Temporary Table or Table Variable?](https://stackoverflow.com/questions/11169550/is-there-a-performance-difference-between-cte-sub-query-temporary-table-or-ta#:~:text=The%20performance%20of%20CTEs%20and,stored%20and%20read%20multiple%20times.)\\n4. [RANK() vs DENSE_RANK() vs ROW_NUMBER() - StackOverFlow](https://stackoverflow.com/a/22081083)\\n\\nThanks for reading! \\nIf there\\'s any error or doubt, do comment. Feedbacks are always appreciated!!",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nWITH cte \\nAS(\\n    SELECT \\n        departmentId, \\n        salary AS Salary,\\n        name AS Employee,\\n        DENSE_RANK() OVER (PARTITION BY departmentId ORDER BY salary DESC) AS \\'salary_rank\\'\\n    FROM Employee)\\n\\nSELECT d.name AS Department, e.Employee, e.Salary\\nFROM Department d\\nLEFT JOIN cte e\\nON d.id = e.departmentId\\nWHERE salary_rank = 1\\n```\n```\\nSELECT d.name AS Department, e.Employee, e.Salary\\nFROM Department d\\nLEFT JOIN (\\n        SELECT \\n            departmentId, \\n            salary AS Salary,\\n            name AS Employee,\\n            DENSE_RANK() OVER (PARTITION BY departmentId ORDER BY salary DESC) AS \\'salary_rank\\'\\n        FROM Employee) e\\nON d.id = e.departmentId\\nWHERE salary_rank = 1\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2345235,
                "title": "mysql-explained-step-by-step-join-group-by-max",
                "content": "```\\n/*\\n \\n this will select ,max salary from each group:\\n1) SELECT MAX(Salary) AS Salary FROM Employee GROUP BY departmentId\\n\\n\\n\\nthe given below query will be wrong becuase we are not \\nspecifying the id in the inner query therefore it will give wrong \\nanswers for the dept whose salary are same ,\\ntherefore we need to specify id in the inner query\\n2) \\nSELECT d.name AS Department, e.name AS Employee , e.salary AS Salary\\nFROM Employee as e INNER JOIN Department as d on e.departmentId=d.id \\nWHERE SALARY IN (SELECT  MAX(Salary) AS Salary FROM Employee GROUP BY departmentId)\\n\\n\\n\\ntherefore we need to change the inner id :\\n\\nSELECT departmentId ,  MAX(Salary) AS Salary FROM Employee GROUP BY departmentId\\n\\n3) and final query:\\n*/\\n\\n\\nSELECT d.name AS Department, e.name AS Employee , e.salary AS Salary \\nFROM Employee as e INNER JOIN Department as d on e.departmentId=d.id \\nWHERE (d.id,Salary)  \\nIN (SELECT  departmentId, MAX(Salary) AS Salary FROM Employee GROUP BY departmentId)\\n\\n\\n\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n/*\\n \\n this will select ,max salary from each group:\\n1) SELECT MAX(Salary) AS Salary FROM Employee GROUP BY departmentId\\n\\n\\n\\nthe given below query will be wrong becuase we are not \\nspecifying the id in the inner query therefore it will give wrong \\nanswers for the dept whose salary are same ,\\ntherefore we need to specify id in the inner query\\n2) \\nSELECT d.name AS Department, e.name AS Employee , e.salary AS Salary\\nFROM Employee as e INNER JOIN Department as d on e.departmentId=d.id \\nWHERE SALARY IN (SELECT  MAX(Salary) AS Salary FROM Employee GROUP BY departmentId)\\n\\n\\n\\ntherefore we need to change the inner id :\\n\\nSELECT departmentId ,  MAX(Salary) AS Salary FROM Employee GROUP BY departmentId\\n\\n3) and final query:\\n*/\\n\\n\\nSELECT d.name AS Department, e.name AS Employee , e.salary AS Salary \\nFROM Employee as e INNER JOIN Department as d on e.departmentId=d.id \\nWHERE (d.id,Salary)  \\nIN (SELECT  departmentId, MAX(Salary) AS Salary FROM Employee GROUP BY departmentId)\\n\\n\\n\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2237191,
                "title": "simplest-oracle-solution-using-subquery",
                "content": "select D1.name as Department,E2.name as Employee, E1.Salary from (\\nselect E.departmentId as DepartmentId,max(E.salary) as Salary\\nfrom Employee E, Department D\\nwhere E.departmentId=D.id\\ngroup by E.departmentId\\n) E1, Employee E2, Department D1\\nwhere E1.departmentId = E2.departmentId\\nand E1.Salary = E2.Salary\\nand E1.departmentId=D1.id",
                "solutionTags": [
                    "Oracle"
                ],
                "code": "select D1.name as Department,E2.name as Employee, E1.Salary from (\\nselect E.departmentId as DepartmentId,max(E.salary) as Salary\\nfrom Employee E, Department D\\nwhere E.departmentId=D.id\\ngroup by E.departmentId\\n) E1, Employee E2, Department D1\\nwhere E1.departmentId = E2.departmentId\\nand E1.Salary = E2.Salary\\nand E1.departmentId=D1.id",
                "codeTag": "Unknown"
            },
            {
                "id": 2173246,
                "title": "using-dense-rank-good-performance-and-flexible-for-2nd-highest-salary",
                "content": "SELECT B.name as \"Department\", A.name as \"Employee\", A.salary as \"Salary\"\\nFROM (SELECT *, (dense_rank() over(Partition by C.departmentId order by C.salary DESC)) as \"RNK\" FROM Employee C) A\\nLEFT JOIN Department B ON A.departmentId=B.id\\nWHERE A.RNK=1\\n\\n",
                "solutionTags": [],
                "code": "SELECT B.name as \"Department\", A.name as \"Employee\", A.salary as \"Salary\"\\nFROM (SELECT *, (dense_rank() over(Partition by C.departmentId order by C.salary DESC)) as \"RNK\" FROM Employee C) A\\nLEFT JOIN Department B ON A.departmentId=B.id\\nWHERE A.RNK=1\\n\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 1976146,
                "title": "mysql-sol-only-dense-rank-easy",
                "content": "Super easy, using only dense_rank() \\n```\\nselect t.dp_name as Department, t.ename as Employee,  t.salary as Salary\\nfrom \\n(\\nSELECT e.id, e.name as ename, e.salary, d.name as dp_name, DENSE_RANK() OVER(PARTITION BY e.departmentid ORDER BY e.salary desc) as rnk\\nfrom\\nemployee e join department d\\non (e.departmentid = d.id)\\n) t\\nwhere rnk = 1\\n```",
                "solutionTags": [],
                "code": "```\\nselect t.dp_name as Department, t.ename as Employee,  t.salary as Salary\\nfrom \\n(\\nSELECT e.id, e.name as ename, e.salary, d.name as dp_name, DENSE_RANK() OVER(PARTITION BY e.departmentid ORDER BY e.salary desc) as rnk\\nfrom\\nemployee e join department d\\non (e.departmentid = d.id)\\n) t\\nwhere rnk = 1\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1969159,
                "title": "mysql-by-using-dense-rank-easy-to-understand",
                "content": "```\\nWITH Cal  as (\\nselect e.name Employee, e.salary Salary, e.departmentId, DENSE_RANK() over(partition by departmentId order by salary desc)   sal_rank from Employee e\\n)\\n   select d.name Department, c.Employee, c.Salary \\n       from Cal c join Department d\\n           on c.departmentId = d.id \\n               where sal_rank = 1;\\n```\\n**If Helpful Please Like And Upvoke **",
                "solutionTags": [
                    "Oracle"
                ],
                "code": "```\\nWITH Cal  as (\\nselect e.name Employee, e.salary Salary, e.departmentId, DENSE_RANK() over(partition by departmentId order by salary desc)   sal_rank from Employee e\\n)\\n   select d.name Department, c.Employee, c.Salary \\n       from Cal c join Department d\\n           on c.departmentId = d.id \\n               where sal_rank = 1;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1741945,
                "title": "simple-dense-ranked-solution",
                "content": "```\\nselect department, employee, salary\\nfrom (select d.name as department,\\n             e.name as employee,\\n             e.salary as salary,\\n             DENSE_RANK() OVER(PARTITION BY d.name ORDER BY e.salary DESC) ranked\\n        from Employee e\\n        join Department d on e.departmentId = d.id) as temp\\nwhere ranked = 1\\n```\\n\\n",
                "solutionTags": [],
                "code": "```\\nselect department, employee, salary\\nfrom (select d.name as department,\\n             e.name as employee,\\n             e.salary as salary,\\n             DENSE_RANK() OVER(PARTITION BY d.name ORDER BY e.salary DESC) ranked\\n        from Employee e\\n        join Department d on e.departmentId = d.id) as temp\\nwhere ranked = 1\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1673311,
                "title": "clear-solution-using-over-partition-by",
                "content": "```\\nSELECT\\n    D.name AS Department,\\n    E.name AS Employee,\\n    E.salary AS Salary\\nFROM\\n    (SELECT *, MAX(salary) OVER (PARTITION BY departmentId) AS max_sal FROM Employee) E\\n    JOIN Department D\\n    ON E.departmentId = D.id\\n    WHERE E.salary = max_sal;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT\\n    D.name AS Department,\\n    E.name AS Employee,\\n    E.salary AS Salary\\nFROM\\n    (SELECT *, MAX(salary) OVER (PARTITION BY departmentId) AS max_sal FROM Employee) E\\n    JOIN Department D\\n    ON E.departmentId = D.id\\n    WHERE E.salary = max_sal;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1672005,
                "title": "mysql-easy-explanation",
                "content": "We need to get max salary for each department, and then print all employees for that salary.\\nHow can we get max salary for each department ?\\n```\\nSELECT departmentId, MAX(Salary) FROM Employee\\nGROUP BY departmentId\\n```\\nLet\\'s store it as maxSalaries\\n```\\n(SELECT departmentId, MAX(Salary) as salary FROM Employee\\nGROUP BY departmentId) as maxSalaries\\n```\\nNow we need to fetch all the rows in Employee table where it\\'s department has maximum salary..\\nSo, join the above table with Employee and try to fetch result\\n```\\nSELECT departmentId as Department, name as Employee, Salary FROM Employee e\\nJOIN\\n(SELECT departmentId, MAX(salary) as salary FROM Employee\\nGROUP BY departmentId) as maxSalaries\\nUSING (salary, departmentId )\\n```\\n\\n\\nNow we just need to replace our department ids with \\nrespective department names. So, join the above with department table and use respective alias name\\n```\\nSELECT d.name as Department, e.name as Employee, Salary FROM Employee e\\nJOIN\\n(SELECT departmentId, MAX(salary) as salary FROM Employee\\nGROUP BY departmentId) as maxSalaries\\nUSING (salary, departmentId )\\n\\nJOIN\\n\\nDepartment d\\nON (d.id=e.departmentId)\\n```\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT departmentId, MAX(Salary) FROM Employee\\nGROUP BY departmentId\\n```\n```\\n(SELECT departmentId, MAX(Salary) as salary FROM Employee\\nGROUP BY departmentId) as maxSalaries\\n```\n```\\nSELECT departmentId as Department, name as Employee, Salary FROM Employee e\\nJOIN\\n(SELECT departmentId, MAX(salary) as salary FROM Employee\\nGROUP BY departmentId) as maxSalaries\\nUSING (salary, departmentId )\\n```\n```\\nSELECT d.name as Department, e.name as Employee, Salary FROM Employee e\\nJOIN\\n(SELECT departmentId, MAX(salary) as salary FROM Employee\\nGROUP BY departmentId) as maxSalaries\\nUSING (salary, departmentId )\\n\\nJOIN\\n\\nDepartment d\\nON (d.id=e.departmentId)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1542515,
                "title": "simple-mysql-faster-than-98",
                "content": "```\\nWITH cte AS (\\n    SELECT d.name AS \\'Department\\', e.name AS \\'Employee\\', e.Salary,\\n    DENSE_RANK() OVER(PARTITION BY d.name ORDER BY e.Salary DESC) AS \\'rank\\'\\n    FROM Department d INNER JOIN Employee e\\n    ON e.departmentId = d.id\\n)\\nSELECT Department, Employee, Salary\\nFROM cte\\nWHERE cte.rank = 1\\nORDER BY 1, 3 DESC, 2",
                "solutionTags": [],
                "code": "```\\nWITH cte AS (\\n    SELECT d.name AS \\'Department\\', e.name AS \\'Employee\\', e.Salary,\\n    DENSE_RANK() OVER(PARTITION BY d.name ORDER BY e.Salary DESC) AS \\'rank\\'\\n    FROM Department d INNER JOIN Employee e\\n    ON e.departmentId = d.id\\n)\\nSELECT Department, Employee, Salary\\nFROM cte\\nWHERE cte.rank = 1\\nORDER BY 1, 3 DESC, 2",
                "codeTag": "Unknown"
            },
            {
                "id": 1514949,
                "title": "using-inner-join-simplest-code",
                "content": "```\\nSELECT D.NAME DEPARTMENT,E.NAME EMPLOYEE,E.SALARY SALARY FROM EMPLOYEE E\\nINNER JOIN DEPARTMENT D\\nON E.DEPARTMENTID=D.ID\\nGROUP BY D.ID,E.NAME,E.SALARY\\nHAVING E.SALARY>=(SELECT MAX(SALARY)FROM EMPLOYEE E WHERE E.DEPARTMENTID=D.ID)\\n```",
                "solutionTags": [],
                "code": "```\\nSELECT D.NAME DEPARTMENT,E.NAME EMPLOYEE,E.SALARY SALARY FROM EMPLOYEE E\\nINNER JOIN DEPARTMENT D\\nON E.DEPARTMENTID=D.ID\\nGROUP BY D.ID,E.NAME,E.SALARY\\nHAVING E.SALARY>=(SELECT MAX(SALARY)FROM EMPLOYEE E WHERE E.DEPARTMENTID=D.ID)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1496851,
                "title": "simple-solution",
                "content": "```\\nSELECT d.Name Department, e.Name Employee, e.Salary FROM Employee e, Department d\\nWHERE d.Id = e.DepartmentId AND (e.DepartmentId, e.Salary) IN \\n(SELECT DepartmentId, MAX(Salary) FROM Employee \\n GROUP BY DepartmentId)\\n```",
                "solutionTags": [],
                "code": "```\\nSELECT d.Name Department, e.Name Employee, e.Salary FROM Employee e, Department d\\nWHERE d.Id = e.DepartmentId AND (e.DepartmentId, e.Salary) IN \\n(SELECT DepartmentId, MAX(Salary) FROM Employee \\n GROUP BY DepartmentId)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1445407,
                "title": "using-cte-dense-rank",
                "content": "```\\nwith tbl1 as (\\n\\tSELECT d.name as Department,\\n\\t   e.name as Employee,\\n\\t   e.salary as Salary,\\n\\t   DENSE_RANK() OVER (PARTITION BY e.DepartmentId ORDER BY e.salary desc) as ranked_salary\\nFROM employee e\\nJOIN Department d\\nON (d.id = e.DepartmentId)\\n\\n)\\n\\nSELECT department,\\n\\t   employee,\\n\\t   salary\\nFROM tbl1\\nWHERE ranked_salary = 1\\n```",
                "solutionTags": [],
                "code": "```\\nwith tbl1 as (\\n\\tSELECT d.name as Department,\\n\\t   e.name as Employee,\\n\\t   e.salary as Salary,\\n\\t   DENSE_RANK() OVER (PARTITION BY e.DepartmentId ORDER BY e.salary desc) as ranked_salary\\nFROM employee e\\nJOIN Department d\\nON (d.id = e.DepartmentId)\\n\\n)\\n\\nSELECT department,\\n\\t   employee,\\n\\t   salary\\nFROM tbl1\\nWHERE ranked_salary = 1\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1422683,
                "title": "mysql-mssql-using-join",
                "content": "MySQL:\\n\\n\\tSELECT DISTINCT S.Department, E.Name Employee, E.Salary\\n\\tFROM Employee E\\n\\tJOIN (\\n\\t\\tSELECT D.Id, D.Name Department, Max(Salary) Salary\\n\\t\\tFROM Employee E\\n\\t\\tJOIN Department D ON E.DepartmentId = D.Id\\n\\t\\tGROUP BY D.Id\\n\\t) S\\n\\tON E.Salary = S.Salary AND E.DepartmentId = S.Id\\n\\t\\nMS SQL Server:\\n\\n\\tSELECT DISTINCT S.Department, E.Name Employee, E.Salary\\n\\tFROM Employee E\\n\\tJOIN (\\n\\t\\tSELECT D.Id, D.Name Department, Max(Salary) Salary\\n\\t\\tFROM Employee E\\n\\t\\tJOIN Department D ON E.DepartmentId = D.Id\\n\\t\\tGROUP BY D.Id, D.Name\\n\\t) S\\n\\tON E.Salary = S.Salary AND E.DepartmentId = S.Id",
                "solutionTags": [],
                "code": "MySQL:\\n\\n\\tSELECT DISTINCT S.Department, E.Name Employee, E.Salary\\n\\tFROM Employee E\\n\\tJOIN (\\n\\t\\tSELECT D.Id, D.Name Department, Max(Salary) Salary\\n\\t\\tFROM Employee E\\n\\t\\tJOIN Department D ON E.DepartmentId = D.Id\\n\\t\\tGROUP BY D.Id\\n\\t) S\\n\\tON E.Salary = S.Salary AND E.DepartmentId = S.Id\\n\\t\\nMS SQL Server:\\n\\n\\tSELECT DISTINCT S.Department, E.Name Employee, E.Salary\\n\\tFROM Employee E\\n\\tJOIN (\\n\\t\\tSELECT D.Id, D.Name Department, Max(Salary) Salary\\n\\t\\tFROM Employee E\\n\\t\\tJOIN Department D ON E.DepartmentId = D.Id\\n\\t\\tGROUP BY D.Id, D.Name\\n\\t) S\\n\\tON E.Salary = S.Salary AND E.DepartmentId = S.Id",
                "codeTag": "Unknown"
            },
            {
                "id": 1214874,
                "title": "simple-solution-with-window-function",
                "content": "```\\nWITH CTE AS (\\nSELECT DEPARTMENTID,NAME,SALARY,RANK() OVER(PARTITION BY DEPARTMENTID ORDER BY SALARY DESC) as r\\nFROM EMPLOYEE\\n    )\\n    SELECT D.NAME AS Department,C.NAME AS Employee,c.salary as Salary\\n    FROM CTE C JOIN DEPARTMENT D \\n    ON C.DEPARTMENTID = D.ID\\n    where c.r=1\\n\\t```",
                "solutionTags": [],
                "code": "```\\nWITH CTE AS (\\nSELECT DEPARTMENTID,NAME,SALARY,RANK() OVER(PARTITION BY DEPARTMENTID ORDER BY SALARY DESC) as r\\nFROM EMPLOYEE\\n    )\\n    SELECT D.NAME AS Department,C.NAME AS Employee,c.salary as Salary\\n    FROM CTE C JOIN DEPARTMENT D \\n    ON C.DEPARTMENTID = D.ID\\n    where c.r=1\\n\\t```",
                "codeTag": "Unknown"
            },
            {
                "id": 1212350,
                "title": "easy-to-understand-solution-using-subquery",
                "content": "SELECT d.name as Department, e.Name as Employee, e.Salary FROM Employee e INNER JOIN\\nDepartment d ON e.DepartmentId = d.Id\\nWHERE e.Salary IN\\n(\\nSELECT MAX(e1.Salary) FROM employee e1 INNER JOIN Department d1\\n    ON e1.DepartmentId = d1.Id\\n    WHERE e1.DepartmentId = e.DepartmentId\\n    GROUP BY d1.Name\\n)",
                "solutionTags": [],
                "code": "SELECT d.name as Department, e.Name as Employee, e.Salary FROM Employee e INNER JOIN\\nDepartment d ON e.DepartmentId = d.Id\\nWHERE e.Salary IN\\n(\\nSELECT MAX(e1.Salary) FROM employee e1 INNER JOIN Department d1\\n    ON e1.DepartmentId = d1.Id\\n    WHERE e1.DepartmentId = e.DepartmentId\\n    GROUP BY d1.Name\\n)",
                "codeTag": "Unknown"
            },
            {
                "id": 1086086,
                "title": "mysql-window-functions-can-be-intimidating-that-is-why-i-give-them-cute-names",
                "content": "\\tselect \\n        a.Department, \\n        a.Employee,\\n        a.Salary \\n    from\\n        (\\n            select \\n                d.name as Department,\\n                e.name as Employee,\\n                e.salary as Salary,\\n                DENSE_RANK() over (partition by d.id order by e.salary desc) as rankie\\n            from\\n                employee e \\n\\t\\t\\tjoin \\n\\t\\t\\t\\tdepartment d \\n\\t\\t\\ton \\n\\t\\t\\t\\te.departmentId = d.id\\n        ) a\\n        \\n    where a.rankie = 1;",
                "solutionTags": [],
                "code": "\\tselect \\n        a.Department, \\n        a.Employee,\\n        a.Salary \\n    from\\n        (\\n            select \\n                d.name as Department,\\n                e.name as Employee,\\n                e.salary as Salary,\\n                DENSE_RANK() over (partition by d.id order by e.salary desc) as rankie\\n            from\\n                employee e \\n\\t\\t\\tjoin \\n\\t\\t\\t\\tdepartment d \\n\\t\\t\\ton \\n\\t\\t\\t\\te.departmentId = d.id\\n        ) a\\n        \\n    where a.rankie = 1;",
                "codeTag": "Unknown"
            },
            {
                "id": 1023990,
                "title": "dense-rank",
                "content": "```\\nWITH tab1 AS (SELECT\\n                    d.name AS department,\\n                    e.name AS employee,\\n                    e.salary,\\n                    DENSE_RANK() OVER (PARTITION BY d.name ORDER BY e.salary DESC) as DRANK\\n                FROM\\n                    employee AS e\\n                JOIN \\n                    department AS d\\n                ON\\n                    e.departmentid = d.id)\\n                \\n                \\nSELECT department, employee, salary\\nFROM tab1\\nWHERE DRANK = 1\\n```",
                "solutionTags": [],
                "code": "```\\nWITH tab1 AS (SELECT\\n                    d.name AS department,\\n                    e.name AS employee,\\n                    e.salary,\\n                    DENSE_RANK() OVER (PARTITION BY d.name ORDER BY e.salary DESC) as DRANK\\n                FROM\\n                    employee AS e\\n                JOIN \\n                    department AS d\\n                ON\\n                    e.departmentid = d.id)\\n                \\n                \\nSELECT department, employee, salary\\nFROM tab1\\nWHERE DRANK = 1\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 788682,
                "title": "easy-understand",
                "content": "```\\nSELECT b.Name as Department,a.Name as Employee,a.Salary from Employee a join Department b on a.DepartmentId=b.Id\\nwhere a.Salary=(select max(Salary) from Employee where DepartmentId=b.Id)\\n```",
                "solutionTags": [],
                "code": "```\\nSELECT b.Name as Department,a.Name as Employee,a.Salary from Employee a join Department b on a.DepartmentId=b.Id\\nwhere a.Salary=(select max(Salary) from Employee where DepartmentId=b.Id)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 755737,
                "title": "mysql-dense-rank",
                "content": "```\\nSELECT d.Name as Department, Employee, Salary\\nFROM\\n(\\nSELECT Name as Employee, DepartmentId, Salary, dense_rank() over(partition by DepartmentId order by Salary DESC) as rk\\nFROM Employee) rk_table inner join Department d on rk = 1 and DepartmentId = d.Id\\n```\\n\\nThe runtime is lower than using where clause but I think the idea is more generalized.",
                "solutionTags": [],
                "code": "```\\nSELECT d.Name as Department, Employee, Salary\\nFROM\\n(\\nSELECT Name as Employee, DepartmentId, Salary, dense_rank() over(partition by DepartmentId order by Salary DESC) as rk\\nFROM Employee) rk_table inner join Department d on rk = 1 and DepartmentId = d.Id\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 738552,
                "title": "mysql-solution-with-exp",
                "content": "First join Employee and Department table.\\nThen for selected departmentID, get the maximum of the salary in that department\\nOutput the entry condition on the salary equals within department maximum salary.\\n\\n\\n```\\n# Write your MySQL query statement below\\nselect D.Name as Department, E.Name as Employee, E.Salary\\nfrom Department D\\njoin\\nEmployee E\\non D.Id = E.DepartmentId\\nwhere E.Salary = (select max(E2.Salary) from Employee E2 where E2.DepartmentId = E.DepartmentId)\\n\\n```",
                "solutionTags": [],
                "code": "```\\n# Write your MySQL query statement below\\nselect D.Name as Department, E.Name as Employee, E.Salary\\nfrom Department D\\njoin\\nEmployee E\\non D.Id = E.DepartmentId\\nwhere E.Salary = (select max(E2.Salary) from Employee E2 where E2.DepartmentId = E.DepartmentId)\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 506788,
                "title": "mysql-90-using-double-join",
                "content": "```\\nSelect a.Name as Department ,e2.Name as Employee,e2.Salary as Salary \\nFROM Employee e2 \\nJOIN (Select d.Id,d.Name,max(e1.Salary) as max_dep_salary \\nFROM Employee e1 \\nJOIN Department d ON e1.DepartmentId=d.id GROUP By d.Id,d.name) a \\nON (e2.DepartmentId=a.Id AND e2.Salary=a.max_dep_salary)\\n```",
                "solutionTags": [],
                "code": "```\\nSelect a.Name as Department ,e2.Name as Employee,e2.Salary as Salary \\nFROM Employee e2 \\nJOIN (Select d.Id,d.Name,max(e1.Salary) as max_dep_salary \\nFROM Employee e1 \\nJOIN Department d ON e1.DepartmentId=d.id GROUP By d.Id,d.name) a \\nON (e2.DepartmentId=a.Id AND e2.Salary=a.max_dep_salary)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 180385,
                "title": "oracle-rank-solution",
                "content": "```\\nSELECT \\nd.Name \"Department\",\\na.Name \"Employee\",\\na.Salary \"Salary\"\\nFROM(\\nSELECT\\n    RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS rank,\\n    Salary,\\n    Name,\\n    DepartmentId\\n    FROM Employee\\n) a\\nJOIN Department d\\n    ON a.DepartmentId = d.Id\\nWHERE a.rank = 1\\nORDER BY \"Salary\";\\n```",
                "solutionTags": [],
                "code": "```\\nSELECT \\nd.Name \"Department\",\\na.Name \"Employee\",\\na.Salary \"Salary\"\\nFROM(\\nSELECT\\n    RANK() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS rank,\\n    Salary,\\n    Name,\\n    DepartmentId\\n    FROM Employee\\n) a\\nJOIN Department d\\n    ON a.DepartmentId = d.Id\\nWHERE a.rank = 1\\nORDER BY \"Salary\";\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3972657,
                "title": "100-easy-and-clean-solution",
                "content": "# Code\\n```\\n# Write your MySQL query statement below\\nSELECT DEPT.name AS Department, EMP.name AS Employee, EMP.salary AS Salary \\nFROM Department DEPT, Employee EMP WHERE\\nEMP.departmentId = DEPT.id AND (EMP.departmentId, salary) IN \\n(SELECT departmentId, MAX(salary) FROM Employee GROUP BY departmentId)\\n```",
                "solutionTags": [
                    "MySQL",
                    "MS SQL Server",
                    "Database"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nSELECT DEPT.name AS Department, EMP.name AS Employee, EMP.salary AS Salary \\nFROM Department DEPT, Employee EMP WHERE\\nEMP.departmentId = DEPT.id AND (EMP.departmentId, salary) IN \\n(SELECT departmentId, MAX(salary) FROM Employee GROUP BY departmentId)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3907064,
                "title": "pandas-code",
                "content": "\\n# Code\\n```\\nimport pandas as pd\\n\\ndef department_highest_salary(employee: pd.DataFrame, department: pd.DataFrame) -> pd.DataFrame:\\n    merged_df = employee.merge(department, left_on = \\'departmentId\\', right_on = \\'id\\')\\n    merged_df = merged_df.rename(columns = {\\'name_x\\': \\'Employee\\', \\'name_y\\': \\'Department\\', \\'salary\\': \\'Salary\\'})[[\\'Department\\', \\'Employee\\', \\'Salary\\']]\\n    return merged_df[merged_df[\\'Salary\\'] == merged_df.groupby(\\'Department\\')[\\'Salary\\'].transform(max)]\\n```",
                "solutionTags": [
                    "Pandas"
                ],
                "code": "```\\nimport pandas as pd\\n\\ndef department_highest_salary(employee: pd.DataFrame, department: pd.DataFrame) -> pd.DataFrame:\\n    merged_df = employee.merge(department, left_on = \\'departmentId\\', right_on = \\'id\\')\\n    merged_df = merged_df.rename(columns = {\\'name_x\\': \\'Employee\\', \\'name_y\\': \\'Department\\', \\'salary\\': \\'Salary\\'})[[\\'Department\\', \\'Employee\\', \\'Salary\\']]\\n    return merged_df[merged_df[\\'Salary\\'] == merged_df.groupby(\\'Department\\')[\\'Salary\\'].transform(max)]\\n```",
                "codeTag": "Python3"
            },
            {
                "id": 3867386,
                "title": "cte-first-val",
                "content": "```\\nwith temporary_table(name,salary,departmentId,top_salary) as\\n(select e.name,e.salary,e.departmentId,FIRST_VALUE(e.salary) over(partition by departmentId order by salary desc) as      top_salary from Employee e)\\n\\n\\nselect d.name as Department, t.name as Employee, t.salary as Salary \\nfrom temporary_table t inner join Department d\\non t.departmentId=d.id\\nwhere t.salary=t.top_salary;\\n```",
                "solutionTags": [],
                "code": "```\\nwith temporary_table(name,salary,departmentId,top_salary) as\\n(select e.name,e.salary,e.departmentId,FIRST_VALUE(e.salary) over(partition by departmentId order by salary desc) as      top_salary from Employee e)\\n\\n\\nselect d.name as Department, t.name as Employee, t.salary as Salary \\nfrom temporary_table t inner join Department d\\non t.departmentId=d.id\\nwhere t.salary=t.top_salary;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 3662564,
                "title": "easy-solution-sql-server",
                "content": "# Intuition\\n<!-- Describe your first thoughts on how to solve this problem. -->\\n\\n# Approach\\n<!-- Describe your approach to solving the problem. -->\\n\\n# Complexity\\n- Time complexity:\\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\\n\\n- Space complexity:\\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\\n\\n# Code\\n```\\n/* Write your T-SQL query statement below */\\nSELECT T2.name as \\'Department\\', T1.name as \\'Employee\\', T1.salary \\'Salary\\' FROM Employee T1 \\nINNER JOIN Department T2 ON T1.departmentId = T2.Id\\nWHERE T1.salary = (SELECT MAX(T3.salary) FROM Employee T3 \\nWHERE T2.Id = T3.departmentId) \\n\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\n/* Write your T-SQL query statement below */\\nSELECT T2.name as \\'Department\\', T1.name as \\'Employee\\', T1.salary \\'Salary\\' FROM Employee T1 \\nINNER JOIN Department T2 ON T1.departmentId = T2.Id\\nWHERE T1.salary = (SELECT MAX(T3.salary) FROM Employee T3 \\nWHERE T2.Id = T3.departmentId) \\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2653450,
                "title": "using-dense-rank-and-cte",
                "content": "# Approach\\nHi, here have tried to solve this problem using Dense Rank and CTE (Common Table expression).\\n\\n\\n# Code\\n```\\n# Write your MySQL query statement below\\nWITH temp_table(rank_salary,Department, Employee, Salary) as (select DENSE_RANK() OVER(partition by depart.name order by em.salary desc) as rank_salary,depart.name as \"Department\", em.name as \"Employee\", em.salary as \"Salary\"\\nfrom Employee em join Department depart on em.departmentId=depart.id)\\n\\n\\nselect Department, Employee, Salary from temp_table where rank_salary = 1\\n\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nWITH temp_table(rank_salary,Department, Employee, Salary) as (select DENSE_RANK() OVER(partition by depart.name order by em.salary desc) as rank_salary,depart.name as \"Department\", em.name as \"Employee\", em.salary as \"Salary\"\\nfrom Employee em join Department depart on em.departmentId=depart.id)\\n\\n\\nselect Department, Employee, Salary from temp_table where rank_salary = 1\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2594193,
                "title": "window-function-solution",
                "content": "select t2.department as department, t2.employee as employee, t2.salary as salary\\nfrom\\n(select t1.department as department, t1.employee as employee, t1.salary as salary, \\ndense_rank() over (partition by t1.department order by t1.salary desc) as r\\nfrom\\n(select d.name as department, e.name as employee, e.salary as salary\\nfrom employee e\\njoin department d\\non e.departmentid = d.id) as t1) as t2\\nwhere t2.r = 1",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "select t2.department as department, t2.employee as employee, t2.salary as salary\\nfrom\\n(select t1.department as department, t1.employee as employee, t1.salary as salary, \\ndense_rank() over (partition by t1.department order by t1.salary desc) as r\\nfrom\\n(select d.name as department, e.name as employee, e.salary as salary\\nfrom employee e\\njoin department d\\non e.departmentid = d.id) as t1) as t2\\nwhere t2.r = 1",
                "codeTag": "Unknown"
            },
            {
                "id": 2590774,
                "title": "easy-sql-solution",
                "content": "```\\nSELECT Department, Employee, Salary\\nFROM (\\n    SELECT d.name AS Department, e.name AS Employee, e.salary AS Salary, \\n    RANK() OVER(PARTITION BY d.name ORDER BY e.salary DESC) AS s_rank\\n    FROM Employee e \\n    JOIN Department d ON d.id = e.departmentId\\n) AS T \\nWHERE s_rank = 1\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT Department, Employee, Salary\\nFROM (\\n    SELECT d.name AS Department, e.name AS Employee, e.salary AS Salary, \\n    RANK() OVER(PARTITION BY d.name ORDER BY e.salary DESC) AS s_rank\\n    FROM Employee e \\n    JOIN Department d ON d.id = e.departmentId\\n) AS T \\nWHERE s_rank = 1\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2575949,
                "title": "dense-rank-mysql",
                "content": "\\tselect depName as Department, empName as Employee ,salary as Salary from (select d.name as depName,e.name as empName,e.salary,DENSE_RANK() over (partition by d.name order by e.salary desc) as r from Employee e,Department d where e.departmentId=d.id)as t where t.r=1;",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "\\tselect depName as Department, empName as Employee ,salary as Salary from (select d.name as depName,e.name as empName,e.salary,DENSE_RANK() over (partition by d.name order by e.salary desc) as r from Employee e,Department d where e.departmentId=d.id)as t where t.r=1;",
                "codeTag": "Unknown"
            },
            {
                "id": 2561643,
                "title": "using-rank",
                "content": "```\\nSELECT T.Department, T.Employee, T.Salary\\nFROM (SELECT D.name as \\'Department\\', E.name as \\'Employee\\', E.salary as \\'Salary\\', RANK() OVER (PARTITION BY D.id ORDER BY E.salary DESC) as \\'rank\\'\\nFROM Employee E\\nLEFT JOIN Department D\\nON E.departmentId=D.id) T\\nWHERE T.rank =1\\n```",
                "solutionTags": [],
                "code": "```\\nSELECT T.Department, T.Employee, T.Salary\\nFROM (SELECT D.name as \\'Department\\', E.name as \\'Employee\\', E.salary as \\'Salary\\', RANK() OVER (PARTITION BY D.id ORDER BY E.salary DESC) as \\'rank\\'\\nFROM Employee E\\nLEFT JOIN Department D\\nON E.departmentId=D.id) T\\nWHERE T.rank =1\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2515027,
                "title": "subquery-and-window-functions",
                "content": "Select Department,\\n      Employee,\\n      Salary FROM (\\n                Select d.name as Department,\\n                e.name as Employee,\\n                e.salary as Salary,\\n                DENSE_RANK() OVER (PARTITION BY d.name ORDER BY e.salary DESC) as rnk\\n                FROM  Employee e\\n                JOIN Department d \\n                on e.departmentId = d.id\\n                 ) temp_table                   \\nWHERE rnk = 1",
                "solutionTags": [],
                "code": "Select Department,\\n      Employee,\\n      Salary FROM (\\n                Select d.name as Department,\\n                e.name as Employee,\\n                e.salary as Salary,\\n                DENSE_RANK() OVER (PARTITION BY d.name ORDER BY e.salary DESC) as rnk\\n                FROM  Employee e\\n                JOIN Department d \\n                on e.departmentId = d.id\\n                 ) temp_table                   \\nWHERE rnk = 1",
                "codeTag": "Unknown"
            },
            {
                "id": 2450671,
                "title": "dense-rank",
                "content": "```\\nSELECT Department , Employee, Salary FROM\\n(\\nSELECT D.name as Department , E.name as Employee , E.salary as Salary, DENSE_RANK() OVER (PARTITION BY E.departmentId order by E.salary desc) as rank\\nFROM Employee as E inner join Department as D on E.departmentId = D.id\\n) temp\\nwhere rank = 1\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT Department , Employee, Salary FROM\\n(\\nSELECT D.name as Department , E.name as Employee , E.salary as Salary, DENSE_RANK() OVER (PARTITION BY E.departmentId order by E.salary desc) as rank\\nFROM Employee as E inner join Department as D on E.departmentId = D.id\\n) temp\\nwhere rank = 1\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2402632,
                "title": "easy-solution-using-basic-concepts-only",
                "content": "select  d.name as\"Department\" , e.name as\"Employee\", salary as \"Salary\"from Employee e\\njoin Department d \\non e.departmentId=d.id\\nwhere  (e.salary, e.departmentId) in (select max(salary), departmentId from employee group by departmentId)\\n",
                "solutionTags": [],
                "code": "select  d.name as\"Department\" , e.name as\"Employee\", salary as \"Salary\"from Employee e\\njoin Department d \\non e.departmentId=d.id\\nwhere  (e.salary, e.departmentId) in (select max(salary), departmentId from employee group by departmentId)\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 2398627,
                "title": "easy-solution-of-department-highest-salary-mysql",
                "content": "```\\nselect Department.name as Department , Employee.name as Employee, Employee.salary as Salary from Department \\n        join Employee \\n            on Employee.departmentId = Department.id \\n                and Employee.salary = (select max(salary) from Employee \\n                                            where Employee.departmentId = Department.id);",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect Department.name as Department , Employee.name as Employee, Employee.salary as Salary from Department \\n        join Employee \\n            on Employee.departmentId = Department.id \\n                and Employee.salary = (select max(salary) from Employee \\n                                            where Employee.departmentId = Department.id);",
                "codeTag": "Unknown"
            },
            {
                "id": 2327349,
                "title": "simple-approach-using-window-functions",
                "content": "```\\nselect e.department, e.employee, e.salary from (select d.*, rank() over(partition by d.department order by d.salary desc) as rank_number from (select a.name Employee , a.salary, b.name department from Employee a join Department b on a.departmentid = b.id) d) e where e.rank_number=1;\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect e.department, e.employee, e.salary from (select d.*, rank() over(partition by d.department order by d.salary desc) as rank_number from (select a.name Employee , a.salary, b.name department from Employee a join Department b on a.departmentid = b.id) d) e where e.rank_number=1;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2320629,
                "title": "mysql-2-solns-subquery-using-join-vs-cte-using-rank",
                "content": "CTE using Dense Rank\\n```\\nWITH TempTable AS (\\n    SELECT \\n        name,\\n        salary,\\n        departmentId,\\n        DENSE_RANK() OVER (\\n            PARTITION BY departmentId\\n            ORDER BY salary DESC\\n        ) AS denseRank\\n    FROM Employee\\n)\\n\\nSELECT T2.name AS Department, T1.name AS Employee, T1.salary AS salary\\nFROM TempTable AS T1\\nJOIN Department AS T2\\nON T1.departmentId = T2.id\\nWHERE T1.denseRank = 1\\n```\\n\\nSubquery using Join\\n```\\nSELECT D.name AS Department, E.name AS Employee, E.salary AS Salary\\nFROM Employee AS E\\nJOIN Department AS D\\nON E.departmentId = D.id\\nWHERE E.salary = (\\n    SELECT MAX(T.Salary)\\n    FROM Employee AS T\\n    WHERE T.departmentId = E.departmentId\\n)\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nWITH TempTable AS (\\n    SELECT \\n        name,\\n        salary,\\n        departmentId,\\n        DENSE_RANK() OVER (\\n            PARTITION BY departmentId\\n            ORDER BY salary DESC\\n        ) AS denseRank\\n    FROM Employee\\n)\\n\\nSELECT T2.name AS Department, T1.name AS Employee, T1.salary AS salary\\nFROM TempTable AS T1\\nJOIN Department AS T2\\nON T1.departmentId = T2.id\\nWHERE T1.denseRank = 1\\n```\n```\\nSELECT D.name AS Department, E.name AS Employee, E.salary AS Salary\\nFROM Employee AS E\\nJOIN Department AS D\\nON E.departmentId = D.id\\nWHERE E.salary = (\\n    SELECT MAX(T.Salary)\\n    FROM Employee AS T\\n    WHERE T.departmentId = E.departmentId\\n)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2310496,
                "title": "mysql-easy-solution",
                "content": "select department.name as department, employee.name as employee, employee.salary as salary\\nfrom employee join department on employee.departmentId = department.id\\nwhere(employee.departmentId, employee.salary) in\\n (select departmentId, MAX(salary) as salary\\nfrom employee\\ngroup by departmentId)",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "select department.name as department, employee.name as employee, employee.salary as salary\\nfrom employee join department on employee.departmentId = department.id\\nwhere(employee.departmentId, employee.salary) in\\n (select departmentId, MAX(salary) as salary\\nfrom employee\\ngroup by departmentId)",
                "codeTag": "Unknown"
            },
            {
                "id": 2306035,
                "title": "mysql-2-solutions-subquery-rank-or-cte-rank-with-explainations",
                "content": "**SOLUTION 1**\\n```\\nselect Department, Employee, Salary\\nfrom (\\n    select d.name as Department, e.name as Employee, e.salary as Salary,\\n    rank() over (partition by d.name order by e.salary desc) as rnk\\n    from employee e join department d on e.departmentId = d.id) a\\nwhere a.rnk = 1\\n```\\n\\nHere are the steps:\\n1.   We want to find the highest salary employee in each department\\n`select d.name as Department, e.name as Employee, e.salary as Salary,\\n    rank() over (partition by d.name order by e.salary desc) as rnk\\n    from employee e join department d on e.departmentId = d.id`\\n\\n2. Adding the top part to display the columns that we want only to be displayed and from to get the data from the previous query\\n`select Department, Employee, Salary from`\\n\\n3. Since the query needs to retun to the highest employee\\'s salary on each department, we want to add *where* function\\n`where a.rnk = 1`\\n\\nNote: when using a subquery, the derived table needs to have an alias; hence, I use a for it is alias.\\n\\n------------------------------------\\n\\n**SOLUTION 2**\\n```\\nwith highest_salary as\\n    (select d.name as Department, e.name as Employee, e.salary as Salary, \\n     rank() over (partition by d.name order by e.salary desc) as rnk\\n     from employee e join department d on e.departmentId = d.id)\\n    \\nselect Department, Employee, Salary\\nfrom highest_salary\\nwhere rnk = 1\\n```\\n\\nHere are the steps:\\n1. We want to find the highest salary employee in each department\\n`\\n\\tselect d.name as Department, e.name as Employee, e.salary as Salary, \\n     rank() over (partition by d.name order by e.salary desc) as rnk\\n     from employee e join department d on e.departmentId = d.id\\n`\\n\\n2. Then, we want to create a temporary table; hence, we need to add *with* function\\n`with highest_salary as\\n    (select d.name as Department, e.name as Employee, e.salary as Salary, \\n     rank() over (partition by d.name order by e.salary desc) as rnk\\n     from employee e join department d on e.departmentId = d.id)`\\n\\t\\n3. In order to return to the highest salary on each department, we want to set a rank = 1 filter.\\n`select Department, Employee, Salary\\nfrom highest_salary\\nwhere rnk = 1`",
                "solutionTags": [],
                "code": "```\\nselect Department, Employee, Salary\\nfrom (\\n    select d.name as Department, e.name as Employee, e.salary as Salary,\\n    rank() over (partition by d.name order by e.salary desc) as rnk\\n    from employee e join department d on e.departmentId = d.id) a\\nwhere a.rnk = 1\\n```\n```\\nwith highest_salary as\\n    (select d.name as Department, e.name as Employee, e.salary as Salary, \\n     rank() over (partition by d.name order by e.salary desc) as rnk\\n     from employee e join department d on e.departmentId = d.id)\\n    \\nselect Department, Employee, Salary\\nfrom highest_salary\\nwhere rnk = 1\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2289968,
                "title": "sql-for-dummies",
                "content": "\\tSELECT D.NAME AS Department, E.NAME AS Employee, E.SALARY AS Salary\\n\\tFROM EMPLOYEE E JOIN DEPARTMENT D\\n\\tON D.ID = E.DEPARTMENTID\\n\\tWHERE (E.SALARY, E.DEPARTMENTID) IN(\\n\\tSELECT MAX(SALARY), DEPARTMENTID\\n\\tFROM EMPLOYEE\\n\\tGROUP BY DEPARTMENTID   )",
                "solutionTags": [],
                "code": "\\tSELECT D.NAME AS Department, E.NAME AS Employee, E.SALARY AS Salary\\n\\tFROM EMPLOYEE E JOIN DEPARTMENT D\\n\\tON D.ID = E.DEPARTMENTID\\n\\tWHERE (E.SALARY, E.DEPARTMENTID) IN(\\n\\tSELECT MAX(SALARY), DEPARTMENTID\\n\\tFROM EMPLOYEE\\n\\tGROUP BY DEPARTMENTID   )",
                "codeTag": "Unknown"
            },
            {
                "id": 2262483,
                "title": "subquery-and-inner-join",
                "content": "```\\nselect department.name as Department, employee.name as Employee, employee.salary\\nfrom employee join \\n\\t(select d.id, max(e.salary) as Salary\\n\\tfrom employee e join department d\\n\\ton e.departmentId = d.id\\n\\tgroup by d.id)\\n\\tas Data\\non employee.departmentId = Data.id\\njoin department\\non Data.id = department.id\\nwhere employee.salary = Data.salary\\n```",
                "solutionTags": [
                    "MS SQL Server"
                ],
                "code": "```\\nselect department.name as Department, employee.name as Employee, employee.salary\\nfrom employee join \\n\\t(select d.id, max(e.salary) as Salary\\n\\tfrom employee e join department d\\n\\ton e.departmentId = d.id\\n\\tgroup by d.id)\\n\\tas Data\\non employee.departmentId = Data.id\\njoin department\\non Data.id = department.id\\nwhere employee.salary = Data.salary\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2261035,
                "title": "subquery",
                "content": "```\\nselect D.name as Department,E.name as Employee,E.salary as Salary \\nfrom Employee as E,Department as D\\nwhere E.departmentId=D.id\\nand E.salary=(select max(salary) from Employee where DepartmentId=D.id)\\n\\n```",
                "solutionTags": [],
                "code": "```\\nselect D.name as Department,E.name as Employee,E.salary as Salary \\nfrom Employee as E,Department as D\\nwhere E.departmentId=D.id\\nand E.salary=(select max(salary) from Employee where DepartmentId=D.id)\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2243863,
                "title": "faster-than-96-96-easy-to-understand-solution",
                "content": "```\\nSELECT\\n    Department,\\n    Employee,\\n    Salary\\nFROM\\n    (\\n        SELECT\\n            d.name AS Department,\\n            e.name AS Employee,\\n            e.salary AS Salary,\\n            RANK() OVER(\\n                PARTITION BY d.name\\n                ORDER BY\\n                    e.salary DESC\\n            ) AS rnk\\n        FROM\\n            employee e\\n            INNER JOIN Department d ON e.departmentid = d.id\\n    ) AS temp\\nWHERE\\n    rnk = 1;\\n```\\n\\n![image](https://assets.leetcode.com/users/images/169a78ea-ccc4-48f5-be4c-9fc402b0d909_1657075683.5302362.png)\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT\\n    Department,\\n    Employee,\\n    Salary\\nFROM\\n    (\\n        SELECT\\n            d.name AS Department,\\n            e.name AS Employee,\\n            e.salary AS Salary,\\n            RANK() OVER(\\n                PARTITION BY d.name\\n                ORDER BY\\n                    e.salary DESC\\n            ) AS rnk\\n        FROM\\n            employee e\\n            INNER JOIN Department d ON e.departmentid = d.id\\n    ) AS temp\\nWHERE\\n    rnk = 1;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2225830,
                "title": "mysql-solution",
                "content": "```\\nSELECT\\n    dep.name AS `Department`,\\n    emp.name AS `Employee`,\\n    salary\\nFROM\\n    Employee emp\\nINNER JOIN\\n    Department dep\\n    ON\\n    dep.id = emp.departmentId\\nWHERE\\n    salary = (SELECT MAX(salary) FROM Employee WHERE departmentId = emp.departmentId GROUP BY departmentId);\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT\\n    dep.name AS `Department`,\\n    emp.name AS `Employee`,\\n    salary\\nFROM\\n    Employee emp\\nINNER JOIN\\n    Department dep\\n    ON\\n    dep.id = emp.departmentId\\nWHERE\\n    salary = (SELECT MAX(salary) FROM Employee WHERE departmentId = emp.departmentId GROUP BY departmentId);\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2202241,
                "title": "mysql-97-fastest-solution-dense-rank-partition-left-join",
                "content": "```\\n# Write your MySQL query statement below\\nselect Department,Employee,Salary from(\\nselect e.name as Employee, d.name as Department, e.salary, dense_rank() over(partition by departmentId order by salary DESC) as RNK from Employee e\\nLEFT JOIN Department d\\non e.departmentId = d.id\\ngroup by d.name,e.name\\norder by e.name\\n)a\\nwhere a.RNK =1\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n# Write your MySQL query statement below\\nselect Department,Employee,Salary from(\\nselect e.name as Employee, d.name as Department, e.salary, dense_rank() over(partition by departmentId order by salary DESC) as RNK from Employee e\\nLEFT JOIN Department d\\non e.departmentId = d.id\\ngroup by d.name,e.name\\norder by e.name\\n)a\\nwhere a.RNK =1\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2184936,
                "title": "elegant-sql",
                "content": "```\\nwith CTE (Department, DepartmentId, Salary) AS(\\n  select \\n    d.name, e.departmentId, max(e.salary) as Salary \\n  from Employee e \\n  join Department d on(d.id = e.departmentId) \\n  group by e.departmentId\\n) \\nSELECT \\n  CTE.Department, \\n  e.name as Employee, \\n  CTE.Salary \\nFROM CTE \\njoin Employee e on (\\n    e.salary = CTE.salary \\n    and e.departmentId = CTE.DepartmentId\\n  )\\n```",
                "solutionTags": [
                    "MySQL",
                    "MS SQL Server"
                ],
                "code": "```\\nwith CTE (Department, DepartmentId, Salary) AS(\\n  select \\n    d.name, e.departmentId, max(e.salary) as Salary \\n  from Employee e \\n  join Department d on(d.id = e.departmentId) \\n  group by e.departmentId\\n) \\nSELECT \\n  CTE.Department, \\n  e.name as Employee, \\n  CTE.Salary \\nFROM CTE \\njoin Employee e on (\\n    e.salary = CTE.salary \\n    and e.departmentId = CTE.DepartmentId\\n  )\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2183943,
                "title": "where-in-code",
                "content": "```\\nSELECT d.name as Department\\n      ,e.name as Employee\\n      ,e.salary \\nFROM Employee e\\n     LEFT JOIN Department d ON e.departmentid=d.id\\nWHERE (e.departmentid,e.salary) IN (\\n                                    SELECT departmentid\\n                                    ,MAX(salary) as salary\\n                                     FROM Employee  \\n                                     GROUP BY departmentid \\n                                     )",
                "solutionTags": [],
                "code": "```\\nSELECT d.name as Department\\n      ,e.name as Employee\\n      ,e.salary \\nFROM Employee e\\n     LEFT JOIN Department d ON e.departmentid=d.id\\nWHERE (e.departmentid,e.salary) IN (\\n                                    SELECT departmentid\\n                                    ,MAX(salary) as salary\\n                                     FROM Employee  \\n                                     GROUP BY departmentid \\n                                     )",
                "codeTag": "Unknown"
            },
            {
                "id": 2181142,
                "title": "quick-and-simple-solution",
                "content": "select c.name as Department,b.name as Employee, b.salary as Salary from\\n(select a.* from\\n(select id, name, salary, departmentid, rank() over(partition by departmentid order by salary desc) as rn from employee) a\\nwhere a.rn=1) b join department c\\non b.departmentid=c.id",
                "solutionTags": [],
                "code": "select c.name as Department,b.name as Employee, b.salary as Salary from\\n(select a.* from\\n(select id, name, salary, departmentid, rank() over(partition by departmentid order by salary desc) as rn from employee) a\\nwhere a.rn=1) b join department c\\non b.departmentid=c.id",
                "codeTag": "Unknown"
            },
            {
                "id": 2171434,
                "title": "use-dense-rank-to-solve-this-type-of-problems-n-highest",
                "content": "```\\nselect Department, Employee, salary as \\'Salary\\'\\nfrom (\\n    select e.name as \\'Employee\\', salary, d.name as \\'Department\\',\\n    dense_rank() over(partition by departmentId order by salary desc) as \\'rnk\\'\\n    from Employee as e\\n    left join Department as d\\n    on departmentId = d.id\\n) as t\\nwhere t.rnk = 1\\n```",
                "solutionTags": [],
                "code": "```\\nselect Department, Employee, salary as \\'Salary\\'\\nfrom (\\n    select e.name as \\'Employee\\', salary, d.name as \\'Department\\',\\n    dense_rank() over(partition by departmentId order by salary desc) as \\'rnk\\'\\n    from Employee as e\\n    left join Department as d\\n    on departmentId = d.id\\n) as t\\nwhere t.rnk = 1\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2066919,
                "title": "mysql-easy-to-understand",
                "content": "```\\nselect t1.Department, t1.Employee, t1.Salary\\nfrom\\n(select d.name as Department, e.name as Employee, e.salary as Salary\\n,RANK()OVER(partition by d.id order by salary desc) as rk\\nfrom Department AS d\\njoin Employee AS e on E.departmentId = d.id) as t1\\nwhere rk = 1\\n```\\n",
                "solutionTags": [],
                "code": "```\\nselect t1.Department, t1.Employee, t1.Salary\\nfrom\\n(select d.name as Department, e.name as Employee, e.salary as Salary\\n,RANK()OVER(partition by d.id order by salary desc) as rk\\nfrom Department AS d\\njoin Employee AS e on E.departmentId = d.id) as t1\\nwhere rk = 1\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 2032905,
                "title": "solution-using-two-join",
                "content": "WITH TEMP AS(\\n    SELECT  MAX(SALARY) AS SALARY, MAX(departmentId) AS DEPARRMENTID FROM EMPLOYEE\\n    GROUP BY departmentId\\n)\\nSELECT DISTINCT D.NAME AS \\'DEPARTMENT\\', E.NAME AS \\'EMPLOYEE\\', T.SALARY FROM EMPLOYEE E JOIN DEPARTMENT D\\nON E.departmentId = D.ID JOIN TEMP T\\nON T.DEPARRMENTID = D.ID\\nWHERE E.SALARY = T.SALARY AND T.DEPARRMENTID = D.ID\\n",
                "solutionTags": [
                    "MySQL",
                    "MS SQL Server"
                ],
                "code": "WITH TEMP AS(\\n    SELECT  MAX(SALARY) AS SALARY, MAX(departmentId) AS DEPARRMENTID FROM EMPLOYEE\\n    GROUP BY departmentId\\n)\\nSELECT DISTINCT D.NAME AS \\'DEPARTMENT\\', E.NAME AS \\'EMPLOYEE\\', T.SALARY FROM EMPLOYEE E JOIN DEPARTMENT D\\nON E.departmentId = D.ID JOIN TEMP T\\nON T.DEPARRMENTID = D.ID\\nWHERE E.SALARY = T.SALARY AND T.DEPARRMENTID = D.ID\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 2030628,
                "title": "using-rank-function-and-a-cte",
                "content": "```\\n# Write your MySQL query statement below\\nwith cte as(\\nselect \\n    d.name as Department, \\n    e.name as Employee,\\n    e.salary as Salary,\\n    rank() over (partition by d.name order by e.salary desc) as rank_\\nfrom Employee e\\ninner join Department d on d.id=e.departmentId\\n    )\\n    \\nselect \\n    Department,\\n    Employee,\\n    Salary\\nfrom cte\\nwhere rank_=1",
                "solutionTags": [],
                "code": "```\\n# Write your MySQL query statement below\\nwith cte as(\\nselect \\n    d.name as Department, \\n    e.name as Employee,\\n    e.salary as Salary,\\n    rank() over (partition by d.name order by e.salary desc) as rank_\\nfrom Employee e\\ninner join Department d on d.id=e.departmentId\\n    )\\n    \\nselect \\n    Department,\\n    Employee,\\n    Salary\\nfrom cte\\nwhere rank_=1",
                "codeTag": "Unknown"
            },
            {
                "id": 2006022,
                "title": "mysql-solution",
                "content": "```\\nSELECT\\n    Department.name AS \\'Department\\',\\n    Employee.name AS \\'Employee\\',\\n    Salary\\nFROM\\n    Employee\\n        JOIN\\n    Department ON Employee.DepartmentId = Department.Id\\nWHERE\\n    (Employee.DepartmentId , Salary) IN\\n    (SELECT\\n         DepartmentId, MAX(Salary)\\n     FROM\\n         Employee\\n     GROUP BY DepartmentId\\n    );\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT\\n    Department.name AS \\'Department\\',\\n    Employee.name AS \\'Employee\\',\\n    Salary\\nFROM\\n    Employee\\n        JOIN\\n    Department ON Employee.DepartmentId = Department.Id\\nWHERE\\n    (Employee.DepartmentId , Salary) IN\\n    (SELECT\\n         DepartmentId, MAX(Salary)\\n     FROM\\n         Employee\\n     GROUP BY DepartmentId\\n    );\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1986253,
                "title": "solution-using-window-function-dense-rank",
                "content": "```\\nselect rnk.Department as \\'Department\\',rnk.Employee as \\'Employee\\',rnk.Salary as \\'Salary\\' from\\n(select d.name as \\'Department\\',e.name as \\'Employee\\',e.salary as \\'Salary\\',\\ndense_rank() over(partition by d.name order by e.salary desc) as rnk_id\\nfrom Employee e, Department d where d.id=e.departmentId) as rnk\\nwhere rnk.rnk_id=1; \\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect rnk.Department as \\'Department\\',rnk.Employee as \\'Employee\\',rnk.Salary as \\'Salary\\' from\\n(select d.name as \\'Department\\',e.name as \\'Employee\\',e.salary as \\'Salary\\',\\ndense_rank() over(partition by d.name order by e.salary desc) as rnk_id\\nfrom Employee e, Department d where d.id=e.departmentId) as rnk\\nwhere rnk.rnk_id=1; \\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1969708,
                "title": "mysql-solution",
                "content": "# Solution\\n```\\nSELECT Department, Employee, Salary\\nFROM (\\n    SELECT Department.name as Department, Employee.name as Employee, Salary, \\n    RANK() OVER(PARTITION BY Department.name ORDER BY Salary DESC) as rn\\n    FROM Employee\\n    inner join Department on Department.id = Employee.departmentId\\n) sub_select\\nWHERE rn = 1\\n```\\nThe **RANK()** function is a window function that assigns a rank to each row within a partition of a result set.\\nThe rows within a partition that have the same values will receive the same rank. The rank of the first row within a partition is one. The **RANK()** function adds the number of tied rows to the tied rank to calculate the rank of the next row, therefore, the ranks may not be consecutive.\\nIf you find this **solution** and **explanation** helpful, please **upvote** it for others people.\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT Department, Employee, Salary\\nFROM (\\n    SELECT Department.name as Department, Employee.name as Employee, Salary, \\n    RANK() OVER(PARTITION BY Department.name ORDER BY Salary DESC) as rn\\n    FROM Employee\\n    inner join Department on Department.id = Employee.departmentId\\n) sub_select\\nWHERE rn = 1\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1930376,
                "title": "fast-and-easy-mysql-using-group-by-and-subquery",
                "content": "SELECT de.name  Department,  emp.name  Employee, emp.salary  Salary\\nFROM\\nEmployee  emp\\nJOIN\\nDepartment  de\\nON\\nemp.departmentId = de.id\\nWHERE\\n(emp.departmentId,emp.salary)\\nIN(SELECT emp.departmentId,max(emp.salary)    FROM Employee emp GROUP BY emp.departmentId)",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "SELECT de.name  Department,  emp.name  Employee, emp.salary  Salary\\nFROM\\nEmployee  emp\\nJOIN\\nDepartment  de\\nON\\nemp.departmentId = de.id\\nWHERE\\n(emp.departmentId,emp.salary)\\nIN(SELECT emp.departmentId,max(emp.salary)    FROM Employee emp GROUP BY emp.departmentId)",
                "codeTag": "Unknown"
            },
            {
                "id": 1929580,
                "title": "rank-window-function",
                "content": "SELECT Department, Employee, salary\\nFROM(\\nSELECT d.name AS `Department`, e.name AS `Employee`,\\n       e.salary,\\n       RANK() OVER(PARTITION BY d.name ORDER BY e.salary DESC) AS rnk\\nFROM Employee e\\nLEFT JOIN Department d\\nON e.departmentID = d.id) t\\nWHERE rnk = 1;\\n\\n",
                "solutionTags": [],
                "code": "SELECT Department, Employee, salary\\nFROM(\\nSELECT d.name AS `Department`, e.name AS `Employee`,\\n       e.salary,\\n       RANK() OVER(PARTITION BY d.name ORDER BY e.salary DESC) AS rnk\\nFROM Employee e\\nLEFT JOIN Department d\\nON e.departmentID = d.id) t\\nWHERE rnk = 1;\\n\\n",
                "codeTag": "Unknown"
            },
            {
                "id": 1912926,
                "title": "mysql-faster-than-85-65-elegant-solution",
                "content": "```\\nSELECT \\n    t.Department,\\n    t.Employee,\\n    t.Salary\\nFROM (\\n    SELECT \\n        d.name AS Department, \\n        e.name AS Employee, \\n        e.salary AS Salary,\\n        DENSE_RANK() OVER(PARTITION BY d.id ORDER BY e.salary DESC) AS DenseRank\\n    FROM Employee AS e \\n    LEFT JOIN Department AS d ON e.departmentId = d.id\\n) AS t\\nWHERE t.DenseRank = 1;\\n```\\n\\n![image](https://assets.leetcode.com/users/images/854b8248-4aa9-4937-b97f-4d780ef9b8ed_1649058444.234964.png)\\n",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nSELECT \\n    t.Department,\\n    t.Employee,\\n    t.Salary\\nFROM (\\n    SELECT \\n        d.name AS Department, \\n        e.name AS Employee, \\n        e.salary AS Salary,\\n        DENSE_RANK() OVER(PARTITION BY d.id ORDER BY e.salary DESC) AS DenseRank\\n    FROM Employee AS e \\n    LEFT JOIN Department AS d ON e.departmentId = d.id\\n) AS t\\nWHERE t.DenseRank = 1;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1706284,
                "title": "using-dense-rank-in-mssql",
                "content": "select sl.Department, sl.Employee, sl.Salary\\nfrom\\n(select d.name as \\'Department\\', e.name as \\'Employee\\', e.salary,\\nDENSE_RANK() OVER(Partition BY d.name order by e.salary desc) r\\nfrom Employee e\\nleft join Department d\\non e.departmentID=d.id) as sl\\nwhere sl.r=1",
                "solutionTags": [],
                "code": "select sl.Department, sl.Employee, sl.Salary\\nfrom\\n(select d.name as \\'Department\\', e.name as \\'Employee\\', e.salary,\\nDENSE_RANK() OVER(Partition BY d.name order by e.salary desc) r\\nfrom Employee e\\nleft join Department d\\non e.departmentID=d.id) as sl\\nwhere sl.r=1",
                "codeTag": "Unknown"
            },
            {
                "id": 1698358,
                "title": "3-easiest-sqls",
                "content": "Classic [from the BigData world....]\\n```\\nWITH src AS\\n(\\n    SELECT MAX(e.salary)   AS salary\\n         , e.departmentId  AS departmentId\\n      FROM Employee e\\n     GROUP BY e.departmentId\\n)\\nSELECT d.name       AS Department\\n     , e.name       AS Employee\\n     , e.salary     AS Salary\\n  FROM employee   e\\n       INNER JOIN\\n       src\\n        ON e.salary       = src.salary\\n       AND e.departmentId = src.departmentId\\n       INNER JOIN\\n       department d\\n        ON e.departmentId = d.id\\n```\\nsecond idea\\n```\\nWITH src AS (\\n    SELECT d.name       AS Department\\n         , e.name       AS Employee\\n         , e.salary     AS Salary\\n         , RANK() OVER(PARTITION BY e.departmentId ORDER BY e.salary DESC) AS rn\\n      FROM employee   e\\n           INNER JOIN\\n           department d\\n            ON e.departmentId = d.id\\n)\\nSELECT s.Department\\n     , s.Employee\\n     , s.Salary\\n  FROM src s\\n WHERE s.rn = 1\\n```\\n3th idea\\n```\\nSELECT d.name       AS Department\\n     , e.name       AS Employee\\n     , e.salary     AS Salary\\n  FROM employee   e\\n       INNER JOIN\\n       department d\\n        ON e.departmentId = d.id\\n WHERE NOT EXISTS (\\n                    SELECT 1\\n                      FROM employee t\\n                     WHERE t.salary > e.salary\\n                       AND t.departmentId = e.departmentId\\n                  )\\n```",
                "solutionTags": [
                    "MySQL",
                    "Oracle"
                ],
                "code": "```\\nWITH src AS\\n(\\n    SELECT MAX(e.salary)   AS salary\\n         , e.departmentId  AS departmentId\\n      FROM Employee e\\n     GROUP BY e.departmentId\\n)\\nSELECT d.name       AS Department\\n     , e.name       AS Employee\\n     , e.salary     AS Salary\\n  FROM employee   e\\n       INNER JOIN\\n       src\\n        ON e.salary       = src.salary\\n       AND e.departmentId = src.departmentId\\n       INNER JOIN\\n       department d\\n        ON e.departmentId = d.id\\n```\n```\\nWITH src AS (\\n    SELECT d.name       AS Department\\n         , e.name       AS Employee\\n         , e.salary     AS Salary\\n         , RANK() OVER(PARTITION BY e.departmentId ORDER BY e.salary DESC) AS rn\\n      FROM employee   e\\n           INNER JOIN\\n           department d\\n            ON e.departmentId = d.id\\n)\\nSELECT s.Department\\n     , s.Employee\\n     , s.Salary\\n  FROM src s\\n WHERE s.rn = 1\\n```\n```\\nSELECT d.name       AS Department\\n     , e.name       AS Employee\\n     , e.salary     AS Salary\\n  FROM employee   e\\n       INNER JOIN\\n       department d\\n        ON e.departmentId = d.id\\n WHERE NOT EXISTS (\\n                    SELECT 1\\n                      FROM employee t\\n                     WHERE t.salary > e.salary\\n                       AND t.departmentId = e.departmentId\\n                  )\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1678227,
                "title": "department-highest-salary",
                "content": "SELECT D.NAME \"Department\", E1.NAME \"Employee\", E1.SALARY \"Salary\"\\nFROM EMPLOYEE E1 , DEPARTMENT D \\nWHERE (DEPARTMENTID , SALARY ) IN \\n(SELECT DEPARTMENTID , MAX(E.SALARY) FROM EMPLOYEE E GROUP BY E.DEPARTMENTID ) \\nAND E1.DEPARTMENTID = D.ID",
                "solutionTags": [],
                "code": "SELECT D.NAME \"Department\", E1.NAME \"Employee\", E1.SALARY \"Salary\"\\nFROM EMPLOYEE E1 , DEPARTMENT D \\nWHERE (DEPARTMENTID , SALARY ) IN \\n(SELECT DEPARTMENTID , MAX(E.SALARY) FROM EMPLOYEE E GROUP BY E.DEPARTMENTID ) \\nAND E1.DEPARTMENTID = D.ID",
                "codeTag": "Unknown"
            },
            {
                "id": 1660808,
                "title": "clear-solution-faster-than-76",
                "content": "```sql\\nSELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\nFROM Employee AS e\\nINNER JOIN Department AS d\\nON e.departmentId = d.id\\nWHERE e.salary = (SELECT MAX(salary) FROM Employee WHERE departmentId = d.id)\\n```",
                "solutionTags": [],
                "code": "```sql\\nSELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\nFROM Employee AS e\\nINNER JOIN Department AS d\\nON e.departmentId = d.id\\nWHERE e.salary = (SELECT MAX(salary) FROM Employee WHERE departmentId = d.id)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1656832,
                "title": "mssql-dense-rank",
                "content": "Logic:\\n\\nUse DENSE_RANK on salary in desc order and  partition on departmentId.\\nThen on where clause choose rank of 1\\n\\n```\\nSELECT d.name as Department, rs.name as Employee, rs.salary as Salary\\nfrom (\\nSELECT name, departmentId, salary,\\n        DENSE_RANK() OVER (PARTITION BY departmentId ORDER BY salary desc) as ranking\\n    FROM Employee )rs JOIN Department d ON rs.departmentId = d.id\\nwhere ranking = 1\\n```\\n\\nRuntime: 1154 ms, faster than 54.89% of MS SQL Server online submissions for Department Highest Salary.\\n\\n",
                "solutionTags": [],
                "code": "```\\nSELECT d.name as Department, rs.name as Employee, rs.salary as Salary\\nfrom (\\nSELECT name, departmentId, salary,\\n        DENSE_RANK() OVER (PARTITION BY departmentId ORDER BY salary desc) as ranking\\n    FROM Employee )rs JOIN Department d ON rs.departmentId = d.id\\nwhere ranking = 1\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1581914,
                "title": "solution-using-join-and-window-functions",
                "content": "```\\nWITH CTE AS \\n(\\n    SELECT DEPARTMENT.name as DEPARTMENT, EMPLOYEE.name AS Employee, EMPLOYEE.salary AS SALARY FROM EMPLOYEE LEFT JOIN DEPARTMENT ON EMPLOYEE.departmentID = DEPARTMENT.id\\n)\\n\\nSELECT DEPARTMENT, EMPLOYEE, SALARY FROM\\n(\\nSELECT DEPARTMENT, EMPLOYEE, SALARY, DENSE_RANK() OVER (PARTITION BY DEPARTMENT ORDER BY SALARY DESC) AS RANK_DESC FROM CTE\\n) a\\nWHERE RANK_DESC = 1;\\n\\n```\\n\\nThe logic here is, I first join the tables, with only the data I care about. The joined table is stored in a form of a Common Table Expression, and the names in the select query correspond to their respective columns. \\n\\nThen, we select the correct value from the sub-query, and make sure we partition over `DEPARTMENT` and we order the salaries in a descending order. \\n\\nOne very useful feature of this solution is you can extend this to the problem for finding the top 3 salaries by just modifying the last statement to `<= 3` instead of `=1`.",
                "solutionTags": [
                    "Sliding Window"
                ],
                "code": "```\\nWITH CTE AS \\n(\\n    SELECT DEPARTMENT.name as DEPARTMENT, EMPLOYEE.name AS Employee, EMPLOYEE.salary AS SALARY FROM EMPLOYEE LEFT JOIN DEPARTMENT ON EMPLOYEE.departmentID = DEPARTMENT.id\\n)\\n\\nSELECT DEPARTMENT, EMPLOYEE, SALARY FROM\\n(\\nSELECT DEPARTMENT, EMPLOYEE, SALARY, DENSE_RANK() OVER (PARTITION BY DEPARTMENT ORDER BY SALARY DESC) AS RANK_DESC FROM CTE\\n) a\\nWHERE RANK_DESC = 1;\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1558035,
                "title": "simple-group-by-mysql",
                "content": "```\\nselect a1.department, a1.employee, a1.salary\\nfrom (select t1.name as employee, salary, departmentID, t2.name as department\\n      from employee as t1\\n      left join department as t2\\n      on t1.departmentID = t2.id) as a1 \\n      \\ninner join (select id, name, max(salary) as max_salary\\n            from (select tt1.id, tt1.name, salary\\n                  from department as tt1\\n                  left join employee as tt2\\n                  on tt1.id = tt2.departmentID) as tt0\\n            group by id, name) as a2\\non a1.departmentID = a2.id\\nand a1.salary = a2.max_salary\\n```",
                "solutionTags": [],
                "code": "```\\nselect a1.department, a1.employee, a1.salary\\nfrom (select t1.name as employee, salary, departmentID, t2.name as department\\n      from employee as t1\\n      left join department as t2\\n      on t1.departmentID = t2.id) as a1 \\n      \\ninner join (select id, name, max(salary) as max_salary\\n            from (select tt1.id, tt1.name, salary\\n                  from department as tt1\\n                  left join employee as tt2\\n                  on tt1.id = tt2.departmentID) as tt0\\n            group by id, name) as a2\\non a1.departmentID = a2.id\\nand a1.salary = a2.max_salary\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1548394,
                "title": "simple-mysql-solution",
                "content": "```\\nselect d.name as Department,e.name as Employee,e.salary as Salary\\nfrom employee as e,department as d\\nwhere e.departmentId=d.id and\\n(departmentId,salary) in\\n(select departmentId,max(salary) from employee group by departmentId);\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect d.name as Department,e.name as Employee,e.salary as Salary\\nfrom employee as e,department as d\\nwhere e.departmentId=d.id and\\n(departmentId,salary) in\\n(select departmentId,max(salary) from employee group by departmentId);\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1545506,
                "title": "simple-solution",
                "content": "\\n```\\nselect d.name as Department,R.name as Employee,R.salary as Salary \\nfrom \\n(select name,salary,departmentId \\n from employee \\n where (departmentId,salary) \\n in(select departmentId,max(salary) \\n    from employee group by departmentId)) as r,\\nDepartment as d \\nwhere R.departmentId = d.id;\\n\\n```",
                "solutionTags": [],
                "code": "```\\nselect d.name as Department,R.name as Employee,R.salary as Salary \\nfrom \\n(select name,salary,departmentId \\n from employee \\n where (departmentId,salary) \\n in(select departmentId,max(salary) \\n    from employee group by departmentId)) as r,\\nDepartment as d \\nwhere R.departmentId = d.id;\\n\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1545332,
                "title": "2-step-basic-solution-for-beginners",
                "content": "# Two Step Solution\\n### **1.**Find highest salary using group by on departmentId present in Employee Table.\\n**Solution**\\n* ` select name,salary,departmentId from employee where (departmentId,salary) in(select departmentId,max(salary) from employee group by departmentId)`*\\n### **2**.Since the solution contain the Department name which is present in other table so we have join these two table( **table obtained in Step 1 and Department Table** ) in order to fetch the Department name.\\n**Final Solution**\\n```\\nselect d.name as Department,R.name as Employee,R.salary as Salary from \\n(select name,salary,departmentId from employee where (departmentId,salary) in(select departmentId,max(salary) from employee group by departmentId)) as r,\\nDepartment as d where R.departmentId = d.id;\\n```\\n**:-;** Thank You",
                "solutionTags": [],
                "code": "```\\nselect d.name as Department,R.name as Employee,R.salary as Salary from \\n(select name,salary,departmentId from employee where (departmentId,salary) in(select departmentId,max(salary) from employee group by departmentId)) as r,\\nDepartment as d where R.departmentId = d.id;\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1511880,
                "title": "faster-than-99-6",
                "content": "SELECT t.Department, t.Employee, t.Salary\\nFROM (SELECT d.Name AS Department, e.Name AS Employee, Salary,\\n              MAX(Salary) OVER(PARTITION BY d.Id) \"MaxSalary\"\\nFROM Employee AS e\\nINNER JOIN Department AS d\\nON e.DepartmentId = d.Id) AS t\\nWHERE t.Salary = t.MaxSalary;",
                "solutionTags": [],
                "code": "SELECT t.Department, t.Employee, t.Salary\\nFROM (SELECT d.Name AS Department, e.Name AS Employee, Salary,\\n              MAX(Salary) OVER(PARTITION BY d.Id) \"MaxSalary\"\\nFROM Employee AS e\\nINNER JOIN Department AS d\\nON e.DepartmentId = d.Id) AS t\\nWHERE t.Salary = t.MaxSalary;",
                "codeTag": "Unknown"
            },
            {
                "id": 1498822,
                "title": "simple-inner-join-accepted-solution",
                "content": "```\\n(SELECT D.Name as Department,E.Name as Employee,e.Salary As Salary\\nFROM EMPLOYEE AS E INNER JOIN DEPARTMENT AS D \\nON D.Id = E.DepartmentId \\nGROUP BY D.Id, E.Name, E.Salary\\nhaving E.salary >= (select max(salary) from Employee where DepartmentId = D.Id))\\n\\n#naveen Kumar Vadlamudi\\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\n(SELECT D.Name as Department,E.Name as Employee,e.Salary As Salary\\nFROM EMPLOYEE AS E INNER JOIN DEPARTMENT AS D \\nON D.Id = E.DepartmentId \\nGROUP BY D.Id, E.Name, E.Salary\\nhaving E.salary >= (select max(salary) from Employee where DepartmentId = D.Id))\\n\\n#naveen Kumar Vadlamudi\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1458505,
                "title": "using-sub-query",
                "content": "```\\n# Write your MySQL query statement below\\nSelect Department.Name as Department, \\n       e1.Name as Employee, \\n       e1.Salary \\nfrom Employee e1 \\njoin Department d on e1.DepartmentId = d.Id\\n\\nwhere e1.Salary = \\n    (Select Max(Salary) \\n     from Employee e2 \\n     where e2.DepartmentId = e1.DepartmentId)\\n```",
                "solutionTags": [],
                "code": "```\\n# Write your MySQL query statement below\\nSelect Department.Name as Department, \\n       e1.Name as Employee, \\n       e1.Salary \\nfrom Employee e1 \\njoin Department d on e1.DepartmentId = d.Id\\n\\nwhere e1.Salary = \\n    (Select Max(Salary) \\n     from Employee e2 \\n     where e2.DepartmentId = e1.DepartmentId)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1448447,
                "title": "can-anyone-tell-me-why-this-code-is-wrong-confused",
                "content": "```\\nselect d.name as department, e.name as employee, e.salary\\nfrom employee e, department d\\nwhere e.departmentid = d.id\\ngroup by e.departmentid\\nhaving e.salary = max(e.salary)\\n```",
                "solutionTags": [],
                "code": "```\\nselect d.name as department, e.name as employee, e.salary\\nfrom employee e, department d\\nwhere e.departmentid = d.id\\ngroup by e.departmentid\\nhaving e.salary = max(e.salary)\\n```",
                "codeTag": "Unknown"
            },
            {
                "id": 1441911,
                "title": "184-department-highest-salary-step-by-step-solution-with-comments",
                "content": "\\n# 1. get the highest salary department wise \\n\\n#   SELECT DepartmentId,MAX(Salary)\\n#   FROM Employee\\n#   GROUP BY DepartmentId\\n\\n# WILL UTILISE IT AS SUBQUERY IN 3\\n\\n# 2.\\n#IN OUTPUT WE WANT Department, Employee, Salary\\n# SO WE WILL JOIN TABLE Employee and Department\\n\\n#SELECT Department.Name AS Department, Employee.Name  AS Employee, Employee.Salary AS Salary\\n#FROM Employee JOIN Department ON Employee.DepartmentId =Department.ID \\n\\n# 3. IN 1 we have max salary department wise, in 2 we have joined 2 tables lets combine thwse 2 to get results\\n# for combining it we will use condition in where\\n#########.  FINAL SOLUTION ###################\\n\\nSELECT Department.Name AS Department, Employee.Name  AS Employee, Employee.Salary AS Salary\\nFROM Employee JOIN Department ON Employee.DepartmentId =Department.ID \\nWHERE (DepartmentId, Salary)  IN \\n(\\nSELECT DepartmentId,MAX(Salary)\\nFROM Employee\\nGROUP BY DepartmentId\\n)\\n###############################################",
                "solutionTags": [],
                "code": "\\n# 1. get the highest salary department wise \\n\\n#   SELECT DepartmentId,MAX(Salary)\\n#   FROM Employee\\n#   GROUP BY DepartmentId\\n\\n# WILL UTILISE IT AS SUBQUERY IN 3\\n\\n# 2.\\n#IN OUTPUT WE WANT Department, Employee, Salary\\n# SO WE WILL JOIN TABLE Employee and Department\\n\\n#SELECT Department.Name AS Department, Employee.Name  AS Employee, Employee.Salary AS Salary\\n#FROM Employee JOIN Department ON Employee.DepartmentId =Department.ID \\n\\n# 3. IN 1 we have max salary department wise, in 2 we have joined 2 tables lets combine thwse 2 to get results\\n# for combining it we will use condition in where\\n#########.  FINAL SOLUTION ###################\\n\\nSELECT Department.Name AS Department, Employee.Name  AS Employee, Employee.Salary AS Salary\\nFROM Employee JOIN Department ON Employee.DepartmentId =Department.ID \\nWHERE (DepartmentId, Salary)  IN \\n(\\nSELECT DepartmentId,MAX(Salary)\\nFROM Employee\\nGROUP BY DepartmentId\\n)\\n###############################################",
                "codeTag": "Unknown"
            },
            {
                "id": 1424701,
                "title": "mssql-using-join-and-subquery-simple-and-fast",
                "content": "```Select d1.Name as Department, e1.Name as Employee, e1.Salary as Salary ```\\n```from Department d1```\\n```inner join Employee e1 on d1.Id = e1.DepartmentId```\\n```where e1.Salary in```\\n```(```\\n    ```select max(e2.Salary)```\\n   ```from Employee e2```\\n   ``` where e2.DepartmentId = d1.Id```\\n```)```",
                "solutionTags": [],
                "code": "```Select d1.Name as Department, e1.Name as Employee, e1.Salary as Salary ```\n```from Department d1```\n```inner join Employee e1 on d1.Id = e1.DepartmentId```\n```where e1.Salary in```\n```(```\n```select max(e2.Salary)```\n```from Employee e2```\n``` where e2.DepartmentId = d1.Id```\n```)```",
                "codeTag": "Unknown"
            },
            {
                "id": 1401604,
                "title": "simple-solution-without-rank-or-dense-rank",
                "content": "```\\nSELECT D.Name AS Department ,E.Name AS Employee ,E.Salary \\nfrom Employee E, Department D \\nWHERE E.DepartmentId = D.id \\nAND (DepartmentId,Salary) in \\n(SELECT DepartmentId,max(Salary) FROM Employee GROUP BY DepartmentId)",
                "solutionTags": [],
                "code": "```\\nSELECT D.Name AS Department ,E.Name AS Employee ,E.Salary \\nfrom Employee E, Department D \\nWHERE E.DepartmentId = D.id \\nAND (DepartmentId,Salary) in \\n(SELECT DepartmentId,max(Salary) FROM Employee GROUP BY DepartmentId)",
                "codeTag": "Unknown"
            },
            {
                "id": 1401034,
                "title": "simplest-solution-using-dense-rank",
                "content": "```\\n# Write your MySQL query statement below\\nselect \\n        Department,Employee,Salary\\n        from (\\n                select\\n                    D.Name as Department,\\n                    E.Name as Employee,\\n                    E.Salary AS Salary, \\n                    dense_rank() over(\\n                                        partition by E.DepartmentID \\n                                        order by Salary DESC\\n                                        ) as R\\n                    from Employee E , Department D \\n                    Where E.DepartmentId = D.Id\\n            ) as TMP \\n        where TMP.R = 1",
                "solutionTags": [],
                "code": "```\\n# Write your MySQL query statement below\\nselect \\n        Department,Employee,Salary\\n        from (\\n                select\\n                    D.Name as Department,\\n                    E.Name as Employee,\\n                    E.Salary AS Salary, \\n                    dense_rank() over(\\n                                        partition by E.DepartmentID \\n                                        order by Salary DESC\\n                                        ) as R\\n                    from Employee E , Department D \\n                    Where E.DepartmentId = D.Id\\n            ) as TMP \\n        where TMP.R = 1",
                "codeTag": "Unknown"
            },
            {
                "id": 1373195,
                "title": "ms-sql-simple-solution",
                "content": "```\\nwith temp as \\n(select DepartmentId\\n      ,Name\\n      ,salary\\n      ,dense_rank() over (Partition by DepartmentID order by Salary desc) as rank\\nfrom employee\\n)      \\n\\nselect D.Name as Department,temp.name as employee,temp.salary\\nfrom temp \\njoin Department D\\non D.id = temp.DepartmentId\\nwhere rank = 1\\norder by DepartmentId,Salary",
                "solutionTags": [],
                "code": "```\\nwith temp as \\n(select DepartmentId\\n      ,Name\\n      ,salary\\n      ,dense_rank() over (Partition by DepartmentID order by Salary desc) as rank\\nfrom employee\\n)      \\n\\nselect D.Name as Department,temp.name as employee,temp.salary\\nfrom temp \\njoin Department D\\non D.id = temp.DepartmentId\\nwhere rank = 1\\norder by DepartmentId,Salary",
                "codeTag": "Unknown"
            },
            {
                "id": 1359106,
                "title": "simple-code-with-ravi-department-highest-sallary-sql",
                "content": "# Write your MySQL query statement below\\n```\\nselect d.name department,e.name employee ,e.salary salary from employee e,department d where e.departmentid=d.id and\\ne.salary=(select max(distinct salary) from employee group by departmentid having departmentid=e.departmentid);  \\n```",
                "solutionTags": [
                    "MySQL"
                ],
                "code": "```\\nselect d.name department,e.name employee ,e.salary salary from employee e,department d where e.departmentid=d.id and\\ne.salary=(select max(distinct salary) from employee group by departmentid having departmentid=e.departmentid);  \\n```",
                "codeTag": "Unknown"
            }
        ],
        "discussions": [
            {
                "id": 1575029,
                "content": [
                    {
                        "username": "tr1328",
                        "content": "\\'\\'\\'\\nSELECT D.Name as Department, E.Name as Employee, Salary FROM Employee E inner join Department D on E.DepartmentId = D.Id WHERE (DepartmentId,Salary) in(SELECT DepartmentId, MAX(Salary) FROM Employee group by DepartmentId)\\n\\'\\'\\'"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "this is not good because problem not limit total result, so you don\\'t have to include departmentId in query result\\n# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n"
                    },
                    {
                        "username": "JYu89828",
                        "content": "\\t/* Write your T-SQL query statement below */\\n\\tselect c.Department, c.Employee, c.Salary\\n\\tfrom\\n\\t(select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\n\\tfrom Employee e join Department d on e.DepartmentId=d.Id) as c\\n\\twhere rank=1\\n"
                    },
                    {
                        "username": "AbdelrahmanDwedar",
                        "content": "you don\\'t need to make a rank for it, you could just use the max() function in this case."
                    },
                    {
                        "username": "pratibhaga8",
                        "content": "[@hailing_liu](/hailing_liu) not working ...subquery is not working"
                    },
                    {
                        "username": "hailing_liu",
                        "content": "When I change the last sentense to \"where c.rank=1\", it works. "
                    },
                    {
                        "username": "ajitraut",
                        "content": "\\nselect d.Name as Department, e.Name as Employee, e.salary as salary \\nfrom Employee e , Department d \\nwhere \\n       e.DepartmentId = d.Id\\nand \\n      (e.DepartmentId, e.Salary)  in \\n  (select e.DepartmentId, max(e.Salary) from Employee e group by e.DepartmentId);\\n\\n"
                    },
                    {
                        "username": "Jennie11",
                        "content": "\\nSELECT d.Name AS Department, e.Name As Employee, e.Salary AS Salary\\nFROM Employee AS e\\nLEFT JOIN Department AS d\\nON e.DepartmentId = d.Id\\nWHERE (d.Id, e.Salary) in (SELECT DepartmentId, max(Salary)\\n                          FROM Employee\\n                          GROUP BY DepartmentId)\\n;\\n"
                    },
                    {
                        "username": "obence09",
                        "content": "The task says thet the row order does not matter.\\nMy Query works but it fails to pass the test due to the fact thet in my query the order of the rows are different than in the result set but the result is the same....\\nPlease fix this!!\\n\\n\\'\\'\\'SELECT d.Name AS \\'Department\\',e.Name AS \\'Emloyee\\', e.Salary   \\nFROM (SELECT Name, Salary, DepartmentId,\\n      dense_rank() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS \\'rank\\' FROM Employee) AS e \\nJOIN Department AS d ON e.DepartmentId = d.Id\\nWHERE e.rank = 1;\\'\\'\\'\\n"
                    },
                    {
                        "username": "rohitahuja823",
                        "content": "Select sq.Department, sq.Employee, sq.Salary from(\\nSelect d.name as Department, e.name as Employee, e.salary as Salary,\\nrank() over(partition by e.departmentId order by salary desc) as rn\\nfrom Employee e\\njoin Department d\\non e.departmentId = d.id\\norder by e.id\\n) sq\\nwhere sq.rn = 1"
                    },
                    {
                        "username": "vineetatrivedi",
                        "content": "\\'\\'\\'\\n;with cte \\nas (\\nSelect max(salary) salary , departmentid, d.name departmentname\\nfrom Employee e \\ninner join department d on e.departmentid =d.id\\ngroup by e.departmentid, d.name\\n)\\nselect departmentname department, e.name Employee , e.Salary\\nfrom employee e\\ninner join cte on e.departmentid =cte.departmentid\\n                and cte.salary =e.salary\\n\\'\\'\\'"
                    },
                    {
                        "username": "adxyadxy",
                        "content": "\\nselect Department, name as \"Employee\",  salary as \"Salary\" from \\n(select d.name as \"Department\", e.salary, e.name, dense_rank() over (partition by e.departmentid order by e.salary desc) as salary_rank \\nfrom employee e\\ninner join department d on e.departmentid=d.id) as temp\\nwhere salary_rank=1"
                    },
                    {
                        "username": "SolmanRaj",
                        "content": "Thank You it Helped me.."
                    },
                    {
                        "username": "mymay",
                        "content": "\\'\\'\\'\\nselect D.Name Department, E.Name Employee, E.Salary from Employee E, Department D\\nwhere E.DepartmentId = D.Id and (DepartmentId, Salary) in \\n(select DepartmentId, max(Salary) from Employee\\n group by DepartmentId)\\n \\'\\'\\'"
                    },
                    {
                        "username": "faisal0901",
                        "content": "little bit confusing where the JOIN ?\\n"
                    },
                    {
                        "username": "Adamevans",
                        "content": "with max as \\n(select max(salary) as maxSalary,\\ndepartmentId\\nfrom Employee e\\ngroup by DepartmentId)\\n\\nselect d.name as Department,\\ne.name as Employee,\\ne.Salary from\\nEmployee e \\ninner join department d on d.id = e.DepartmentId\\nwhere e.salary in (select maxSalary from max where departmentId = e.departmentId)"
                    },
                    {
                        "username": "rabikunwar177",
                        "content": "WITH CTE AS\\n(\\n    Select d.name as Department,e.name as Employee,e.salary as Salary,\\n    dense_rank() over (partition by d.name order by e.salary desc) as rnk \\n     from Employee e\\n    left join Department d\\n    on e.departmentId = d.id\\n)\\n\\nSelect Department,Employee,Salary from CTE where rnk = 1\\n"
                    }
                ]
            },
            {
                "id": 1570374,
                "content": [
                    {
                        "username": "tr1328",
                        "content": "\\'\\'\\'\\nSELECT D.Name as Department, E.Name as Employee, Salary FROM Employee E inner join Department D on E.DepartmentId = D.Id WHERE (DepartmentId,Salary) in(SELECT DepartmentId, MAX(Salary) FROM Employee group by DepartmentId)\\n\\'\\'\\'"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "this is not good because problem not limit total result, so you don\\'t have to include departmentId in query result\\n# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n"
                    },
                    {
                        "username": "JYu89828",
                        "content": "\\t/* Write your T-SQL query statement below */\\n\\tselect c.Department, c.Employee, c.Salary\\n\\tfrom\\n\\t(select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\n\\tfrom Employee e join Department d on e.DepartmentId=d.Id) as c\\n\\twhere rank=1\\n"
                    },
                    {
                        "username": "AbdelrahmanDwedar",
                        "content": "you don\\'t need to make a rank for it, you could just use the max() function in this case."
                    },
                    {
                        "username": "pratibhaga8",
                        "content": "[@hailing_liu](/hailing_liu) not working ...subquery is not working"
                    },
                    {
                        "username": "hailing_liu",
                        "content": "When I change the last sentense to \"where c.rank=1\", it works. "
                    },
                    {
                        "username": "ajitraut",
                        "content": "\\nselect d.Name as Department, e.Name as Employee, e.salary as salary \\nfrom Employee e , Department d \\nwhere \\n       e.DepartmentId = d.Id\\nand \\n      (e.DepartmentId, e.Salary)  in \\n  (select e.DepartmentId, max(e.Salary) from Employee e group by e.DepartmentId);\\n\\n"
                    },
                    {
                        "username": "Jennie11",
                        "content": "\\nSELECT d.Name AS Department, e.Name As Employee, e.Salary AS Salary\\nFROM Employee AS e\\nLEFT JOIN Department AS d\\nON e.DepartmentId = d.Id\\nWHERE (d.Id, e.Salary) in (SELECT DepartmentId, max(Salary)\\n                          FROM Employee\\n                          GROUP BY DepartmentId)\\n;\\n"
                    },
                    {
                        "username": "obence09",
                        "content": "The task says thet the row order does not matter.\\nMy Query works but it fails to pass the test due to the fact thet in my query the order of the rows are different than in the result set but the result is the same....\\nPlease fix this!!\\n\\n\\'\\'\\'SELECT d.Name AS \\'Department\\',e.Name AS \\'Emloyee\\', e.Salary   \\nFROM (SELECT Name, Salary, DepartmentId,\\n      dense_rank() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS \\'rank\\' FROM Employee) AS e \\nJOIN Department AS d ON e.DepartmentId = d.Id\\nWHERE e.rank = 1;\\'\\'\\'\\n"
                    },
                    {
                        "username": "rohitahuja823",
                        "content": "Select sq.Department, sq.Employee, sq.Salary from(\\nSelect d.name as Department, e.name as Employee, e.salary as Salary,\\nrank() over(partition by e.departmentId order by salary desc) as rn\\nfrom Employee e\\njoin Department d\\non e.departmentId = d.id\\norder by e.id\\n) sq\\nwhere sq.rn = 1"
                    },
                    {
                        "username": "vineetatrivedi",
                        "content": "\\'\\'\\'\\n;with cte \\nas (\\nSelect max(salary) salary , departmentid, d.name departmentname\\nfrom Employee e \\ninner join department d on e.departmentid =d.id\\ngroup by e.departmentid, d.name\\n)\\nselect departmentname department, e.name Employee , e.Salary\\nfrom employee e\\ninner join cte on e.departmentid =cte.departmentid\\n                and cte.salary =e.salary\\n\\'\\'\\'"
                    },
                    {
                        "username": "adxyadxy",
                        "content": "\\nselect Department, name as \"Employee\",  salary as \"Salary\" from \\n(select d.name as \"Department\", e.salary, e.name, dense_rank() over (partition by e.departmentid order by e.salary desc) as salary_rank \\nfrom employee e\\ninner join department d on e.departmentid=d.id) as temp\\nwhere salary_rank=1"
                    },
                    {
                        "username": "SolmanRaj",
                        "content": "Thank You it Helped me.."
                    },
                    {
                        "username": "mymay",
                        "content": "\\'\\'\\'\\nselect D.Name Department, E.Name Employee, E.Salary from Employee E, Department D\\nwhere E.DepartmentId = D.Id and (DepartmentId, Salary) in \\n(select DepartmentId, max(Salary) from Employee\\n group by DepartmentId)\\n \\'\\'\\'"
                    },
                    {
                        "username": "faisal0901",
                        "content": "little bit confusing where the JOIN ?\\n"
                    },
                    {
                        "username": "Adamevans",
                        "content": "with max as \\n(select max(salary) as maxSalary,\\ndepartmentId\\nfrom Employee e\\ngroup by DepartmentId)\\n\\nselect d.name as Department,\\ne.name as Employee,\\ne.Salary from\\nEmployee e \\ninner join department d on d.id = e.DepartmentId\\nwhere e.salary in (select maxSalary from max where departmentId = e.departmentId)"
                    },
                    {
                        "username": "rabikunwar177",
                        "content": "WITH CTE AS\\n(\\n    Select d.name as Department,e.name as Employee,e.salary as Salary,\\n    dense_rank() over (partition by d.name order by e.salary desc) as rnk \\n     from Employee e\\n    left join Department d\\n    on e.departmentId = d.id\\n)\\n\\nSelect Department,Employee,Salary from CTE where rnk = 1\\n"
                    }
                ]
            },
            {
                "id": 1576810,
                "content": [
                    {
                        "username": "tr1328",
                        "content": "\\'\\'\\'\\nSELECT D.Name as Department, E.Name as Employee, Salary FROM Employee E inner join Department D on E.DepartmentId = D.Id WHERE (DepartmentId,Salary) in(SELECT DepartmentId, MAX(Salary) FROM Employee group by DepartmentId)\\n\\'\\'\\'"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "this is not good because problem not limit total result, so you don\\'t have to include departmentId in query result\\n# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n"
                    },
                    {
                        "username": "JYu89828",
                        "content": "\\t/* Write your T-SQL query statement below */\\n\\tselect c.Department, c.Employee, c.Salary\\n\\tfrom\\n\\t(select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\n\\tfrom Employee e join Department d on e.DepartmentId=d.Id) as c\\n\\twhere rank=1\\n"
                    },
                    {
                        "username": "AbdelrahmanDwedar",
                        "content": "you don\\'t need to make a rank for it, you could just use the max() function in this case."
                    },
                    {
                        "username": "pratibhaga8",
                        "content": "[@hailing_liu](/hailing_liu) not working ...subquery is not working"
                    },
                    {
                        "username": "hailing_liu",
                        "content": "When I change the last sentense to \"where c.rank=1\", it works. "
                    },
                    {
                        "username": "ajitraut",
                        "content": "\\nselect d.Name as Department, e.Name as Employee, e.salary as salary \\nfrom Employee e , Department d \\nwhere \\n       e.DepartmentId = d.Id\\nand \\n      (e.DepartmentId, e.Salary)  in \\n  (select e.DepartmentId, max(e.Salary) from Employee e group by e.DepartmentId);\\n\\n"
                    },
                    {
                        "username": "Jennie11",
                        "content": "\\nSELECT d.Name AS Department, e.Name As Employee, e.Salary AS Salary\\nFROM Employee AS e\\nLEFT JOIN Department AS d\\nON e.DepartmentId = d.Id\\nWHERE (d.Id, e.Salary) in (SELECT DepartmentId, max(Salary)\\n                          FROM Employee\\n                          GROUP BY DepartmentId)\\n;\\n"
                    },
                    {
                        "username": "obence09",
                        "content": "The task says thet the row order does not matter.\\nMy Query works but it fails to pass the test due to the fact thet in my query the order of the rows are different than in the result set but the result is the same....\\nPlease fix this!!\\n\\n\\'\\'\\'SELECT d.Name AS \\'Department\\',e.Name AS \\'Emloyee\\', e.Salary   \\nFROM (SELECT Name, Salary, DepartmentId,\\n      dense_rank() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS \\'rank\\' FROM Employee) AS e \\nJOIN Department AS d ON e.DepartmentId = d.Id\\nWHERE e.rank = 1;\\'\\'\\'\\n"
                    },
                    {
                        "username": "rohitahuja823",
                        "content": "Select sq.Department, sq.Employee, sq.Salary from(\\nSelect d.name as Department, e.name as Employee, e.salary as Salary,\\nrank() over(partition by e.departmentId order by salary desc) as rn\\nfrom Employee e\\njoin Department d\\non e.departmentId = d.id\\norder by e.id\\n) sq\\nwhere sq.rn = 1"
                    },
                    {
                        "username": "vineetatrivedi",
                        "content": "\\'\\'\\'\\n;with cte \\nas (\\nSelect max(salary) salary , departmentid, d.name departmentname\\nfrom Employee e \\ninner join department d on e.departmentid =d.id\\ngroup by e.departmentid, d.name\\n)\\nselect departmentname department, e.name Employee , e.Salary\\nfrom employee e\\ninner join cte on e.departmentid =cte.departmentid\\n                and cte.salary =e.salary\\n\\'\\'\\'"
                    },
                    {
                        "username": "adxyadxy",
                        "content": "\\nselect Department, name as \"Employee\",  salary as \"Salary\" from \\n(select d.name as \"Department\", e.salary, e.name, dense_rank() over (partition by e.departmentid order by e.salary desc) as salary_rank \\nfrom employee e\\ninner join department d on e.departmentid=d.id) as temp\\nwhere salary_rank=1"
                    },
                    {
                        "username": "SolmanRaj",
                        "content": "Thank You it Helped me.."
                    },
                    {
                        "username": "mymay",
                        "content": "\\'\\'\\'\\nselect D.Name Department, E.Name Employee, E.Salary from Employee E, Department D\\nwhere E.DepartmentId = D.Id and (DepartmentId, Salary) in \\n(select DepartmentId, max(Salary) from Employee\\n group by DepartmentId)\\n \\'\\'\\'"
                    },
                    {
                        "username": "faisal0901",
                        "content": "little bit confusing where the JOIN ?\\n"
                    },
                    {
                        "username": "Adamevans",
                        "content": "with max as \\n(select max(salary) as maxSalary,\\ndepartmentId\\nfrom Employee e\\ngroup by DepartmentId)\\n\\nselect d.name as Department,\\ne.name as Employee,\\ne.Salary from\\nEmployee e \\ninner join department d on d.id = e.DepartmentId\\nwhere e.salary in (select maxSalary from max where departmentId = e.departmentId)"
                    },
                    {
                        "username": "rabikunwar177",
                        "content": "WITH CTE AS\\n(\\n    Select d.name as Department,e.name as Employee,e.salary as Salary,\\n    dense_rank() over (partition by d.name order by e.salary desc) as rnk \\n     from Employee e\\n    left join Department d\\n    on e.departmentId = d.id\\n)\\n\\nSelect Department,Employee,Salary from CTE where rnk = 1\\n"
                    }
                ]
            },
            {
                "id": 1574371,
                "content": [
                    {
                        "username": "tr1328",
                        "content": "\\'\\'\\'\\nSELECT D.Name as Department, E.Name as Employee, Salary FROM Employee E inner join Department D on E.DepartmentId = D.Id WHERE (DepartmentId,Salary) in(SELECT DepartmentId, MAX(Salary) FROM Employee group by DepartmentId)\\n\\'\\'\\'"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "this is not good because problem not limit total result, so you don\\'t have to include departmentId in query result\\n# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n"
                    },
                    {
                        "username": "JYu89828",
                        "content": "\\t/* Write your T-SQL query statement below */\\n\\tselect c.Department, c.Employee, c.Salary\\n\\tfrom\\n\\t(select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\n\\tfrom Employee e join Department d on e.DepartmentId=d.Id) as c\\n\\twhere rank=1\\n"
                    },
                    {
                        "username": "AbdelrahmanDwedar",
                        "content": "you don\\'t need to make a rank for it, you could just use the max() function in this case."
                    },
                    {
                        "username": "pratibhaga8",
                        "content": "[@hailing_liu](/hailing_liu) not working ...subquery is not working"
                    },
                    {
                        "username": "hailing_liu",
                        "content": "When I change the last sentense to \"where c.rank=1\", it works. "
                    },
                    {
                        "username": "ajitraut",
                        "content": "\\nselect d.Name as Department, e.Name as Employee, e.salary as salary \\nfrom Employee e , Department d \\nwhere \\n       e.DepartmentId = d.Id\\nand \\n      (e.DepartmentId, e.Salary)  in \\n  (select e.DepartmentId, max(e.Salary) from Employee e group by e.DepartmentId);\\n\\n"
                    },
                    {
                        "username": "Jennie11",
                        "content": "\\nSELECT d.Name AS Department, e.Name As Employee, e.Salary AS Salary\\nFROM Employee AS e\\nLEFT JOIN Department AS d\\nON e.DepartmentId = d.Id\\nWHERE (d.Id, e.Salary) in (SELECT DepartmentId, max(Salary)\\n                          FROM Employee\\n                          GROUP BY DepartmentId)\\n;\\n"
                    },
                    {
                        "username": "obence09",
                        "content": "The task says thet the row order does not matter.\\nMy Query works but it fails to pass the test due to the fact thet in my query the order of the rows are different than in the result set but the result is the same....\\nPlease fix this!!\\n\\n\\'\\'\\'SELECT d.Name AS \\'Department\\',e.Name AS \\'Emloyee\\', e.Salary   \\nFROM (SELECT Name, Salary, DepartmentId,\\n      dense_rank() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS \\'rank\\' FROM Employee) AS e \\nJOIN Department AS d ON e.DepartmentId = d.Id\\nWHERE e.rank = 1;\\'\\'\\'\\n"
                    },
                    {
                        "username": "rohitahuja823",
                        "content": "Select sq.Department, sq.Employee, sq.Salary from(\\nSelect d.name as Department, e.name as Employee, e.salary as Salary,\\nrank() over(partition by e.departmentId order by salary desc) as rn\\nfrom Employee e\\njoin Department d\\non e.departmentId = d.id\\norder by e.id\\n) sq\\nwhere sq.rn = 1"
                    },
                    {
                        "username": "vineetatrivedi",
                        "content": "\\'\\'\\'\\n;with cte \\nas (\\nSelect max(salary) salary , departmentid, d.name departmentname\\nfrom Employee e \\ninner join department d on e.departmentid =d.id\\ngroup by e.departmentid, d.name\\n)\\nselect departmentname department, e.name Employee , e.Salary\\nfrom employee e\\ninner join cte on e.departmentid =cte.departmentid\\n                and cte.salary =e.salary\\n\\'\\'\\'"
                    },
                    {
                        "username": "adxyadxy",
                        "content": "\\nselect Department, name as \"Employee\",  salary as \"Salary\" from \\n(select d.name as \"Department\", e.salary, e.name, dense_rank() over (partition by e.departmentid order by e.salary desc) as salary_rank \\nfrom employee e\\ninner join department d on e.departmentid=d.id) as temp\\nwhere salary_rank=1"
                    },
                    {
                        "username": "SolmanRaj",
                        "content": "Thank You it Helped me.."
                    },
                    {
                        "username": "mymay",
                        "content": "\\'\\'\\'\\nselect D.Name Department, E.Name Employee, E.Salary from Employee E, Department D\\nwhere E.DepartmentId = D.Id and (DepartmentId, Salary) in \\n(select DepartmentId, max(Salary) from Employee\\n group by DepartmentId)\\n \\'\\'\\'"
                    },
                    {
                        "username": "faisal0901",
                        "content": "little bit confusing where the JOIN ?\\n"
                    },
                    {
                        "username": "Adamevans",
                        "content": "with max as \\n(select max(salary) as maxSalary,\\ndepartmentId\\nfrom Employee e\\ngroup by DepartmentId)\\n\\nselect d.name as Department,\\ne.name as Employee,\\ne.Salary from\\nEmployee e \\ninner join department d on d.id = e.DepartmentId\\nwhere e.salary in (select maxSalary from max where departmentId = e.departmentId)"
                    },
                    {
                        "username": "rabikunwar177",
                        "content": "WITH CTE AS\\n(\\n    Select d.name as Department,e.name as Employee,e.salary as Salary,\\n    dense_rank() over (partition by d.name order by e.salary desc) as rnk \\n     from Employee e\\n    left join Department d\\n    on e.departmentId = d.id\\n)\\n\\nSelect Department,Employee,Salary from CTE where rnk = 1\\n"
                    }
                ]
            },
            {
                "id": 1575588,
                "content": [
                    {
                        "username": "tr1328",
                        "content": "\\'\\'\\'\\nSELECT D.Name as Department, E.Name as Employee, Salary FROM Employee E inner join Department D on E.DepartmentId = D.Id WHERE (DepartmentId,Salary) in(SELECT DepartmentId, MAX(Salary) FROM Employee group by DepartmentId)\\n\\'\\'\\'"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "this is not good because problem not limit total result, so you don\\'t have to include departmentId in query result\\n# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n"
                    },
                    {
                        "username": "JYu89828",
                        "content": "\\t/* Write your T-SQL query statement below */\\n\\tselect c.Department, c.Employee, c.Salary\\n\\tfrom\\n\\t(select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\n\\tfrom Employee e join Department d on e.DepartmentId=d.Id) as c\\n\\twhere rank=1\\n"
                    },
                    {
                        "username": "AbdelrahmanDwedar",
                        "content": "you don\\'t need to make a rank for it, you could just use the max() function in this case."
                    },
                    {
                        "username": "pratibhaga8",
                        "content": "[@hailing_liu](/hailing_liu) not working ...subquery is not working"
                    },
                    {
                        "username": "hailing_liu",
                        "content": "When I change the last sentense to \"where c.rank=1\", it works. "
                    },
                    {
                        "username": "ajitraut",
                        "content": "\\nselect d.Name as Department, e.Name as Employee, e.salary as salary \\nfrom Employee e , Department d \\nwhere \\n       e.DepartmentId = d.Id\\nand \\n      (e.DepartmentId, e.Salary)  in \\n  (select e.DepartmentId, max(e.Salary) from Employee e group by e.DepartmentId);\\n\\n"
                    },
                    {
                        "username": "Jennie11",
                        "content": "\\nSELECT d.Name AS Department, e.Name As Employee, e.Salary AS Salary\\nFROM Employee AS e\\nLEFT JOIN Department AS d\\nON e.DepartmentId = d.Id\\nWHERE (d.Id, e.Salary) in (SELECT DepartmentId, max(Salary)\\n                          FROM Employee\\n                          GROUP BY DepartmentId)\\n;\\n"
                    },
                    {
                        "username": "obence09",
                        "content": "The task says thet the row order does not matter.\\nMy Query works but it fails to pass the test due to the fact thet in my query the order of the rows are different than in the result set but the result is the same....\\nPlease fix this!!\\n\\n\\'\\'\\'SELECT d.Name AS \\'Department\\',e.Name AS \\'Emloyee\\', e.Salary   \\nFROM (SELECT Name, Salary, DepartmentId,\\n      dense_rank() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS \\'rank\\' FROM Employee) AS e \\nJOIN Department AS d ON e.DepartmentId = d.Id\\nWHERE e.rank = 1;\\'\\'\\'\\n"
                    },
                    {
                        "username": "rohitahuja823",
                        "content": "Select sq.Department, sq.Employee, sq.Salary from(\\nSelect d.name as Department, e.name as Employee, e.salary as Salary,\\nrank() over(partition by e.departmentId order by salary desc) as rn\\nfrom Employee e\\njoin Department d\\non e.departmentId = d.id\\norder by e.id\\n) sq\\nwhere sq.rn = 1"
                    },
                    {
                        "username": "vineetatrivedi",
                        "content": "\\'\\'\\'\\n;with cte \\nas (\\nSelect max(salary) salary , departmentid, d.name departmentname\\nfrom Employee e \\ninner join department d on e.departmentid =d.id\\ngroup by e.departmentid, d.name\\n)\\nselect departmentname department, e.name Employee , e.Salary\\nfrom employee e\\ninner join cte on e.departmentid =cte.departmentid\\n                and cte.salary =e.salary\\n\\'\\'\\'"
                    },
                    {
                        "username": "adxyadxy",
                        "content": "\\nselect Department, name as \"Employee\",  salary as \"Salary\" from \\n(select d.name as \"Department\", e.salary, e.name, dense_rank() over (partition by e.departmentid order by e.salary desc) as salary_rank \\nfrom employee e\\ninner join department d on e.departmentid=d.id) as temp\\nwhere salary_rank=1"
                    },
                    {
                        "username": "SolmanRaj",
                        "content": "Thank You it Helped me.."
                    },
                    {
                        "username": "mymay",
                        "content": "\\'\\'\\'\\nselect D.Name Department, E.Name Employee, E.Salary from Employee E, Department D\\nwhere E.DepartmentId = D.Id and (DepartmentId, Salary) in \\n(select DepartmentId, max(Salary) from Employee\\n group by DepartmentId)\\n \\'\\'\\'"
                    },
                    {
                        "username": "faisal0901",
                        "content": "little bit confusing where the JOIN ?\\n"
                    },
                    {
                        "username": "Adamevans",
                        "content": "with max as \\n(select max(salary) as maxSalary,\\ndepartmentId\\nfrom Employee e\\ngroup by DepartmentId)\\n\\nselect d.name as Department,\\ne.name as Employee,\\ne.Salary from\\nEmployee e \\ninner join department d on d.id = e.DepartmentId\\nwhere e.salary in (select maxSalary from max where departmentId = e.departmentId)"
                    },
                    {
                        "username": "rabikunwar177",
                        "content": "WITH CTE AS\\n(\\n    Select d.name as Department,e.name as Employee,e.salary as Salary,\\n    dense_rank() over (partition by d.name order by e.salary desc) as rnk \\n     from Employee e\\n    left join Department d\\n    on e.departmentId = d.id\\n)\\n\\nSelect Department,Employee,Salary from CTE where rnk = 1\\n"
                    }
                ]
            },
            {
                "id": 1723282,
                "content": [
                    {
                        "username": "tr1328",
                        "content": "\\'\\'\\'\\nSELECT D.Name as Department, E.Name as Employee, Salary FROM Employee E inner join Department D on E.DepartmentId = D.Id WHERE (DepartmentId,Salary) in(SELECT DepartmentId, MAX(Salary) FROM Employee group by DepartmentId)\\n\\'\\'\\'"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "this is not good because problem not limit total result, so you don\\'t have to include departmentId in query result\\n# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n"
                    },
                    {
                        "username": "JYu89828",
                        "content": "\\t/* Write your T-SQL query statement below */\\n\\tselect c.Department, c.Employee, c.Salary\\n\\tfrom\\n\\t(select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\n\\tfrom Employee e join Department d on e.DepartmentId=d.Id) as c\\n\\twhere rank=1\\n"
                    },
                    {
                        "username": "AbdelrahmanDwedar",
                        "content": "you don\\'t need to make a rank for it, you could just use the max() function in this case."
                    },
                    {
                        "username": "pratibhaga8",
                        "content": "[@hailing_liu](/hailing_liu) not working ...subquery is not working"
                    },
                    {
                        "username": "hailing_liu",
                        "content": "When I change the last sentense to \"where c.rank=1\", it works. "
                    },
                    {
                        "username": "ajitraut",
                        "content": "\\nselect d.Name as Department, e.Name as Employee, e.salary as salary \\nfrom Employee e , Department d \\nwhere \\n       e.DepartmentId = d.Id\\nand \\n      (e.DepartmentId, e.Salary)  in \\n  (select e.DepartmentId, max(e.Salary) from Employee e group by e.DepartmentId);\\n\\n"
                    },
                    {
                        "username": "Jennie11",
                        "content": "\\nSELECT d.Name AS Department, e.Name As Employee, e.Salary AS Salary\\nFROM Employee AS e\\nLEFT JOIN Department AS d\\nON e.DepartmentId = d.Id\\nWHERE (d.Id, e.Salary) in (SELECT DepartmentId, max(Salary)\\n                          FROM Employee\\n                          GROUP BY DepartmentId)\\n;\\n"
                    },
                    {
                        "username": "obence09",
                        "content": "The task says thet the row order does not matter.\\nMy Query works but it fails to pass the test due to the fact thet in my query the order of the rows are different than in the result set but the result is the same....\\nPlease fix this!!\\n\\n\\'\\'\\'SELECT d.Name AS \\'Department\\',e.Name AS \\'Emloyee\\', e.Salary   \\nFROM (SELECT Name, Salary, DepartmentId,\\n      dense_rank() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS \\'rank\\' FROM Employee) AS e \\nJOIN Department AS d ON e.DepartmentId = d.Id\\nWHERE e.rank = 1;\\'\\'\\'\\n"
                    },
                    {
                        "username": "rohitahuja823",
                        "content": "Select sq.Department, sq.Employee, sq.Salary from(\\nSelect d.name as Department, e.name as Employee, e.salary as Salary,\\nrank() over(partition by e.departmentId order by salary desc) as rn\\nfrom Employee e\\njoin Department d\\non e.departmentId = d.id\\norder by e.id\\n) sq\\nwhere sq.rn = 1"
                    },
                    {
                        "username": "vineetatrivedi",
                        "content": "\\'\\'\\'\\n;with cte \\nas (\\nSelect max(salary) salary , departmentid, d.name departmentname\\nfrom Employee e \\ninner join department d on e.departmentid =d.id\\ngroup by e.departmentid, d.name\\n)\\nselect departmentname department, e.name Employee , e.Salary\\nfrom employee e\\ninner join cte on e.departmentid =cte.departmentid\\n                and cte.salary =e.salary\\n\\'\\'\\'"
                    },
                    {
                        "username": "adxyadxy",
                        "content": "\\nselect Department, name as \"Employee\",  salary as \"Salary\" from \\n(select d.name as \"Department\", e.salary, e.name, dense_rank() over (partition by e.departmentid order by e.salary desc) as salary_rank \\nfrom employee e\\ninner join department d on e.departmentid=d.id) as temp\\nwhere salary_rank=1"
                    },
                    {
                        "username": "SolmanRaj",
                        "content": "Thank You it Helped me.."
                    },
                    {
                        "username": "mymay",
                        "content": "\\'\\'\\'\\nselect D.Name Department, E.Name Employee, E.Salary from Employee E, Department D\\nwhere E.DepartmentId = D.Id and (DepartmentId, Salary) in \\n(select DepartmentId, max(Salary) from Employee\\n group by DepartmentId)\\n \\'\\'\\'"
                    },
                    {
                        "username": "faisal0901",
                        "content": "little bit confusing where the JOIN ?\\n"
                    },
                    {
                        "username": "Adamevans",
                        "content": "with max as \\n(select max(salary) as maxSalary,\\ndepartmentId\\nfrom Employee e\\ngroup by DepartmentId)\\n\\nselect d.name as Department,\\ne.name as Employee,\\ne.Salary from\\nEmployee e \\ninner join department d on d.id = e.DepartmentId\\nwhere e.salary in (select maxSalary from max where departmentId = e.departmentId)"
                    },
                    {
                        "username": "rabikunwar177",
                        "content": "WITH CTE AS\\n(\\n    Select d.name as Department,e.name as Employee,e.salary as Salary,\\n    dense_rank() over (partition by d.name order by e.salary desc) as rnk \\n     from Employee e\\n    left join Department d\\n    on e.departmentId = d.id\\n)\\n\\nSelect Department,Employee,Salary from CTE where rnk = 1\\n"
                    }
                ]
            },
            {
                "id": 1576527,
                "content": [
                    {
                        "username": "tr1328",
                        "content": "\\'\\'\\'\\nSELECT D.Name as Department, E.Name as Employee, Salary FROM Employee E inner join Department D on E.DepartmentId = D.Id WHERE (DepartmentId,Salary) in(SELECT DepartmentId, MAX(Salary) FROM Employee group by DepartmentId)\\n\\'\\'\\'"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "this is not good because problem not limit total result, so you don\\'t have to include departmentId in query result\\n# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n"
                    },
                    {
                        "username": "JYu89828",
                        "content": "\\t/* Write your T-SQL query statement below */\\n\\tselect c.Department, c.Employee, c.Salary\\n\\tfrom\\n\\t(select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\n\\tfrom Employee e join Department d on e.DepartmentId=d.Id) as c\\n\\twhere rank=1\\n"
                    },
                    {
                        "username": "AbdelrahmanDwedar",
                        "content": "you don\\'t need to make a rank for it, you could just use the max() function in this case."
                    },
                    {
                        "username": "pratibhaga8",
                        "content": "[@hailing_liu](/hailing_liu) not working ...subquery is not working"
                    },
                    {
                        "username": "hailing_liu",
                        "content": "When I change the last sentense to \"where c.rank=1\", it works. "
                    },
                    {
                        "username": "ajitraut",
                        "content": "\\nselect d.Name as Department, e.Name as Employee, e.salary as salary \\nfrom Employee e , Department d \\nwhere \\n       e.DepartmentId = d.Id\\nand \\n      (e.DepartmentId, e.Salary)  in \\n  (select e.DepartmentId, max(e.Salary) from Employee e group by e.DepartmentId);\\n\\n"
                    },
                    {
                        "username": "Jennie11",
                        "content": "\\nSELECT d.Name AS Department, e.Name As Employee, e.Salary AS Salary\\nFROM Employee AS e\\nLEFT JOIN Department AS d\\nON e.DepartmentId = d.Id\\nWHERE (d.Id, e.Salary) in (SELECT DepartmentId, max(Salary)\\n                          FROM Employee\\n                          GROUP BY DepartmentId)\\n;\\n"
                    },
                    {
                        "username": "obence09",
                        "content": "The task says thet the row order does not matter.\\nMy Query works but it fails to pass the test due to the fact thet in my query the order of the rows are different than in the result set but the result is the same....\\nPlease fix this!!\\n\\n\\'\\'\\'SELECT d.Name AS \\'Department\\',e.Name AS \\'Emloyee\\', e.Salary   \\nFROM (SELECT Name, Salary, DepartmentId,\\n      dense_rank() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS \\'rank\\' FROM Employee) AS e \\nJOIN Department AS d ON e.DepartmentId = d.Id\\nWHERE e.rank = 1;\\'\\'\\'\\n"
                    },
                    {
                        "username": "rohitahuja823",
                        "content": "Select sq.Department, sq.Employee, sq.Salary from(\\nSelect d.name as Department, e.name as Employee, e.salary as Salary,\\nrank() over(partition by e.departmentId order by salary desc) as rn\\nfrom Employee e\\njoin Department d\\non e.departmentId = d.id\\norder by e.id\\n) sq\\nwhere sq.rn = 1"
                    },
                    {
                        "username": "vineetatrivedi",
                        "content": "\\'\\'\\'\\n;with cte \\nas (\\nSelect max(salary) salary , departmentid, d.name departmentname\\nfrom Employee e \\ninner join department d on e.departmentid =d.id\\ngroup by e.departmentid, d.name\\n)\\nselect departmentname department, e.name Employee , e.Salary\\nfrom employee e\\ninner join cte on e.departmentid =cte.departmentid\\n                and cte.salary =e.salary\\n\\'\\'\\'"
                    },
                    {
                        "username": "adxyadxy",
                        "content": "\\nselect Department, name as \"Employee\",  salary as \"Salary\" from \\n(select d.name as \"Department\", e.salary, e.name, dense_rank() over (partition by e.departmentid order by e.salary desc) as salary_rank \\nfrom employee e\\ninner join department d on e.departmentid=d.id) as temp\\nwhere salary_rank=1"
                    },
                    {
                        "username": "SolmanRaj",
                        "content": "Thank You it Helped me.."
                    },
                    {
                        "username": "mymay",
                        "content": "\\'\\'\\'\\nselect D.Name Department, E.Name Employee, E.Salary from Employee E, Department D\\nwhere E.DepartmentId = D.Id and (DepartmentId, Salary) in \\n(select DepartmentId, max(Salary) from Employee\\n group by DepartmentId)\\n \\'\\'\\'"
                    },
                    {
                        "username": "faisal0901",
                        "content": "little bit confusing where the JOIN ?\\n"
                    },
                    {
                        "username": "Adamevans",
                        "content": "with max as \\n(select max(salary) as maxSalary,\\ndepartmentId\\nfrom Employee e\\ngroup by DepartmentId)\\n\\nselect d.name as Department,\\ne.name as Employee,\\ne.Salary from\\nEmployee e \\ninner join department d on d.id = e.DepartmentId\\nwhere e.salary in (select maxSalary from max where departmentId = e.departmentId)"
                    },
                    {
                        "username": "rabikunwar177",
                        "content": "WITH CTE AS\\n(\\n    Select d.name as Department,e.name as Employee,e.salary as Salary,\\n    dense_rank() over (partition by d.name order by e.salary desc) as rnk \\n     from Employee e\\n    left join Department d\\n    on e.departmentId = d.id\\n)\\n\\nSelect Department,Employee,Salary from CTE where rnk = 1\\n"
                    }
                ]
            },
            {
                "id": 1574884,
                "content": [
                    {
                        "username": "tr1328",
                        "content": "\\'\\'\\'\\nSELECT D.Name as Department, E.Name as Employee, Salary FROM Employee E inner join Department D on E.DepartmentId = D.Id WHERE (DepartmentId,Salary) in(SELECT DepartmentId, MAX(Salary) FROM Employee group by DepartmentId)\\n\\'\\'\\'"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "this is not good because problem not limit total result, so you don\\'t have to include departmentId in query result\\n# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n"
                    },
                    {
                        "username": "JYu89828",
                        "content": "\\t/* Write your T-SQL query statement below */\\n\\tselect c.Department, c.Employee, c.Salary\\n\\tfrom\\n\\t(select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\n\\tfrom Employee e join Department d on e.DepartmentId=d.Id) as c\\n\\twhere rank=1\\n"
                    },
                    {
                        "username": "AbdelrahmanDwedar",
                        "content": "you don\\'t need to make a rank for it, you could just use the max() function in this case."
                    },
                    {
                        "username": "pratibhaga8",
                        "content": "[@hailing_liu](/hailing_liu) not working ...subquery is not working"
                    },
                    {
                        "username": "hailing_liu",
                        "content": "When I change the last sentense to \"where c.rank=1\", it works. "
                    },
                    {
                        "username": "ajitraut",
                        "content": "\\nselect d.Name as Department, e.Name as Employee, e.salary as salary \\nfrom Employee e , Department d \\nwhere \\n       e.DepartmentId = d.Id\\nand \\n      (e.DepartmentId, e.Salary)  in \\n  (select e.DepartmentId, max(e.Salary) from Employee e group by e.DepartmentId);\\n\\n"
                    },
                    {
                        "username": "Jennie11",
                        "content": "\\nSELECT d.Name AS Department, e.Name As Employee, e.Salary AS Salary\\nFROM Employee AS e\\nLEFT JOIN Department AS d\\nON e.DepartmentId = d.Id\\nWHERE (d.Id, e.Salary) in (SELECT DepartmentId, max(Salary)\\n                          FROM Employee\\n                          GROUP BY DepartmentId)\\n;\\n"
                    },
                    {
                        "username": "obence09",
                        "content": "The task says thet the row order does not matter.\\nMy Query works but it fails to pass the test due to the fact thet in my query the order of the rows are different than in the result set but the result is the same....\\nPlease fix this!!\\n\\n\\'\\'\\'SELECT d.Name AS \\'Department\\',e.Name AS \\'Emloyee\\', e.Salary   \\nFROM (SELECT Name, Salary, DepartmentId,\\n      dense_rank() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS \\'rank\\' FROM Employee) AS e \\nJOIN Department AS d ON e.DepartmentId = d.Id\\nWHERE e.rank = 1;\\'\\'\\'\\n"
                    },
                    {
                        "username": "rohitahuja823",
                        "content": "Select sq.Department, sq.Employee, sq.Salary from(\\nSelect d.name as Department, e.name as Employee, e.salary as Salary,\\nrank() over(partition by e.departmentId order by salary desc) as rn\\nfrom Employee e\\njoin Department d\\non e.departmentId = d.id\\norder by e.id\\n) sq\\nwhere sq.rn = 1"
                    },
                    {
                        "username": "vineetatrivedi",
                        "content": "\\'\\'\\'\\n;with cte \\nas (\\nSelect max(salary) salary , departmentid, d.name departmentname\\nfrom Employee e \\ninner join department d on e.departmentid =d.id\\ngroup by e.departmentid, d.name\\n)\\nselect departmentname department, e.name Employee , e.Salary\\nfrom employee e\\ninner join cte on e.departmentid =cte.departmentid\\n                and cte.salary =e.salary\\n\\'\\'\\'"
                    },
                    {
                        "username": "adxyadxy",
                        "content": "\\nselect Department, name as \"Employee\",  salary as \"Salary\" from \\n(select d.name as \"Department\", e.salary, e.name, dense_rank() over (partition by e.departmentid order by e.salary desc) as salary_rank \\nfrom employee e\\ninner join department d on e.departmentid=d.id) as temp\\nwhere salary_rank=1"
                    },
                    {
                        "username": "SolmanRaj",
                        "content": "Thank You it Helped me.."
                    },
                    {
                        "username": "mymay",
                        "content": "\\'\\'\\'\\nselect D.Name Department, E.Name Employee, E.Salary from Employee E, Department D\\nwhere E.DepartmentId = D.Id and (DepartmentId, Salary) in \\n(select DepartmentId, max(Salary) from Employee\\n group by DepartmentId)\\n \\'\\'\\'"
                    },
                    {
                        "username": "faisal0901",
                        "content": "little bit confusing where the JOIN ?\\n"
                    },
                    {
                        "username": "Adamevans",
                        "content": "with max as \\n(select max(salary) as maxSalary,\\ndepartmentId\\nfrom Employee e\\ngroup by DepartmentId)\\n\\nselect d.name as Department,\\ne.name as Employee,\\ne.Salary from\\nEmployee e \\ninner join department d on d.id = e.DepartmentId\\nwhere e.salary in (select maxSalary from max where departmentId = e.departmentId)"
                    },
                    {
                        "username": "rabikunwar177",
                        "content": "WITH CTE AS\\n(\\n    Select d.name as Department,e.name as Employee,e.salary as Salary,\\n    dense_rank() over (partition by d.name order by e.salary desc) as rnk \\n     from Employee e\\n    left join Department d\\n    on e.departmentId = d.id\\n)\\n\\nSelect Department,Employee,Salary from CTE where rnk = 1\\n"
                    }
                ]
            },
            {
                "id": 1573400,
                "content": [
                    {
                        "username": "tr1328",
                        "content": "\\'\\'\\'\\nSELECT D.Name as Department, E.Name as Employee, Salary FROM Employee E inner join Department D on E.DepartmentId = D.Id WHERE (DepartmentId,Salary) in(SELECT DepartmentId, MAX(Salary) FROM Employee group by DepartmentId)\\n\\'\\'\\'"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "this is not good because problem not limit total result, so you don\\'t have to include departmentId in query result\\n# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n"
                    },
                    {
                        "username": "JYu89828",
                        "content": "\\t/* Write your T-SQL query statement below */\\n\\tselect c.Department, c.Employee, c.Salary\\n\\tfrom\\n\\t(select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\n\\tfrom Employee e join Department d on e.DepartmentId=d.Id) as c\\n\\twhere rank=1\\n"
                    },
                    {
                        "username": "AbdelrahmanDwedar",
                        "content": "you don\\'t need to make a rank for it, you could just use the max() function in this case."
                    },
                    {
                        "username": "pratibhaga8",
                        "content": "[@hailing_liu](/hailing_liu) not working ...subquery is not working"
                    },
                    {
                        "username": "hailing_liu",
                        "content": "When I change the last sentense to \"where c.rank=1\", it works. "
                    },
                    {
                        "username": "ajitraut",
                        "content": "\\nselect d.Name as Department, e.Name as Employee, e.salary as salary \\nfrom Employee e , Department d \\nwhere \\n       e.DepartmentId = d.Id\\nand \\n      (e.DepartmentId, e.Salary)  in \\n  (select e.DepartmentId, max(e.Salary) from Employee e group by e.DepartmentId);\\n\\n"
                    },
                    {
                        "username": "Jennie11",
                        "content": "\\nSELECT d.Name AS Department, e.Name As Employee, e.Salary AS Salary\\nFROM Employee AS e\\nLEFT JOIN Department AS d\\nON e.DepartmentId = d.Id\\nWHERE (d.Id, e.Salary) in (SELECT DepartmentId, max(Salary)\\n                          FROM Employee\\n                          GROUP BY DepartmentId)\\n;\\n"
                    },
                    {
                        "username": "obence09",
                        "content": "The task says thet the row order does not matter.\\nMy Query works but it fails to pass the test due to the fact thet in my query the order of the rows are different than in the result set but the result is the same....\\nPlease fix this!!\\n\\n\\'\\'\\'SELECT d.Name AS \\'Department\\',e.Name AS \\'Emloyee\\', e.Salary   \\nFROM (SELECT Name, Salary, DepartmentId,\\n      dense_rank() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS \\'rank\\' FROM Employee) AS e \\nJOIN Department AS d ON e.DepartmentId = d.Id\\nWHERE e.rank = 1;\\'\\'\\'\\n"
                    },
                    {
                        "username": "rohitahuja823",
                        "content": "Select sq.Department, sq.Employee, sq.Salary from(\\nSelect d.name as Department, e.name as Employee, e.salary as Salary,\\nrank() over(partition by e.departmentId order by salary desc) as rn\\nfrom Employee e\\njoin Department d\\non e.departmentId = d.id\\norder by e.id\\n) sq\\nwhere sq.rn = 1"
                    },
                    {
                        "username": "vineetatrivedi",
                        "content": "\\'\\'\\'\\n;with cte \\nas (\\nSelect max(salary) salary , departmentid, d.name departmentname\\nfrom Employee e \\ninner join department d on e.departmentid =d.id\\ngroup by e.departmentid, d.name\\n)\\nselect departmentname department, e.name Employee , e.Salary\\nfrom employee e\\ninner join cte on e.departmentid =cte.departmentid\\n                and cte.salary =e.salary\\n\\'\\'\\'"
                    },
                    {
                        "username": "adxyadxy",
                        "content": "\\nselect Department, name as \"Employee\",  salary as \"Salary\" from \\n(select d.name as \"Department\", e.salary, e.name, dense_rank() over (partition by e.departmentid order by e.salary desc) as salary_rank \\nfrom employee e\\ninner join department d on e.departmentid=d.id) as temp\\nwhere salary_rank=1"
                    },
                    {
                        "username": "SolmanRaj",
                        "content": "Thank You it Helped me.."
                    },
                    {
                        "username": "mymay",
                        "content": "\\'\\'\\'\\nselect D.Name Department, E.Name Employee, E.Salary from Employee E, Department D\\nwhere E.DepartmentId = D.Id and (DepartmentId, Salary) in \\n(select DepartmentId, max(Salary) from Employee\\n group by DepartmentId)\\n \\'\\'\\'"
                    },
                    {
                        "username": "faisal0901",
                        "content": "little bit confusing where the JOIN ?\\n"
                    },
                    {
                        "username": "Adamevans",
                        "content": "with max as \\n(select max(salary) as maxSalary,\\ndepartmentId\\nfrom Employee e\\ngroup by DepartmentId)\\n\\nselect d.name as Department,\\ne.name as Employee,\\ne.Salary from\\nEmployee e \\ninner join department d on d.id = e.DepartmentId\\nwhere e.salary in (select maxSalary from max where departmentId = e.departmentId)"
                    },
                    {
                        "username": "rabikunwar177",
                        "content": "WITH CTE AS\\n(\\n    Select d.name as Department,e.name as Employee,e.salary as Salary,\\n    dense_rank() over (partition by d.name order by e.salary desc) as rnk \\n     from Employee e\\n    left join Department d\\n    on e.departmentId = d.id\\n)\\n\\nSelect Department,Employee,Salary from CTE where rnk = 1\\n"
                    }
                ]
            },
            {
                "id": 1573177,
                "content": [
                    {
                        "username": "tr1328",
                        "content": "\\'\\'\\'\\nSELECT D.Name as Department, E.Name as Employee, Salary FROM Employee E inner join Department D on E.DepartmentId = D.Id WHERE (DepartmentId,Salary) in(SELECT DepartmentId, MAX(Salary) FROM Employee group by DepartmentId)\\n\\'\\'\\'"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "this is not good because problem not limit total result, so you don\\'t have to include departmentId in query result\\n# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n"
                    },
                    {
                        "username": "JYu89828",
                        "content": "\\t/* Write your T-SQL query statement below */\\n\\tselect c.Department, c.Employee, c.Salary\\n\\tfrom\\n\\t(select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\n\\tfrom Employee e join Department d on e.DepartmentId=d.Id) as c\\n\\twhere rank=1\\n"
                    },
                    {
                        "username": "AbdelrahmanDwedar",
                        "content": "you don\\'t need to make a rank for it, you could just use the max() function in this case."
                    },
                    {
                        "username": "pratibhaga8",
                        "content": "[@hailing_liu](/hailing_liu) not working ...subquery is not working"
                    },
                    {
                        "username": "hailing_liu",
                        "content": "When I change the last sentense to \"where c.rank=1\", it works. "
                    },
                    {
                        "username": "ajitraut",
                        "content": "\\nselect d.Name as Department, e.Name as Employee, e.salary as salary \\nfrom Employee e , Department d \\nwhere \\n       e.DepartmentId = d.Id\\nand \\n      (e.DepartmentId, e.Salary)  in \\n  (select e.DepartmentId, max(e.Salary) from Employee e group by e.DepartmentId);\\n\\n"
                    },
                    {
                        "username": "Jennie11",
                        "content": "\\nSELECT d.Name AS Department, e.Name As Employee, e.Salary AS Salary\\nFROM Employee AS e\\nLEFT JOIN Department AS d\\nON e.DepartmentId = d.Id\\nWHERE (d.Id, e.Salary) in (SELECT DepartmentId, max(Salary)\\n                          FROM Employee\\n                          GROUP BY DepartmentId)\\n;\\n"
                    },
                    {
                        "username": "obence09",
                        "content": "The task says thet the row order does not matter.\\nMy Query works but it fails to pass the test due to the fact thet in my query the order of the rows are different than in the result set but the result is the same....\\nPlease fix this!!\\n\\n\\'\\'\\'SELECT d.Name AS \\'Department\\',e.Name AS \\'Emloyee\\', e.Salary   \\nFROM (SELECT Name, Salary, DepartmentId,\\n      dense_rank() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS \\'rank\\' FROM Employee) AS e \\nJOIN Department AS d ON e.DepartmentId = d.Id\\nWHERE e.rank = 1;\\'\\'\\'\\n"
                    },
                    {
                        "username": "rohitahuja823",
                        "content": "Select sq.Department, sq.Employee, sq.Salary from(\\nSelect d.name as Department, e.name as Employee, e.salary as Salary,\\nrank() over(partition by e.departmentId order by salary desc) as rn\\nfrom Employee e\\njoin Department d\\non e.departmentId = d.id\\norder by e.id\\n) sq\\nwhere sq.rn = 1"
                    },
                    {
                        "username": "vineetatrivedi",
                        "content": "\\'\\'\\'\\n;with cte \\nas (\\nSelect max(salary) salary , departmentid, d.name departmentname\\nfrom Employee e \\ninner join department d on e.departmentid =d.id\\ngroup by e.departmentid, d.name\\n)\\nselect departmentname department, e.name Employee , e.Salary\\nfrom employee e\\ninner join cte on e.departmentid =cte.departmentid\\n                and cte.salary =e.salary\\n\\'\\'\\'"
                    },
                    {
                        "username": "adxyadxy",
                        "content": "\\nselect Department, name as \"Employee\",  salary as \"Salary\" from \\n(select d.name as \"Department\", e.salary, e.name, dense_rank() over (partition by e.departmentid order by e.salary desc) as salary_rank \\nfrom employee e\\ninner join department d on e.departmentid=d.id) as temp\\nwhere salary_rank=1"
                    },
                    {
                        "username": "SolmanRaj",
                        "content": "Thank You it Helped me.."
                    },
                    {
                        "username": "mymay",
                        "content": "\\'\\'\\'\\nselect D.Name Department, E.Name Employee, E.Salary from Employee E, Department D\\nwhere E.DepartmentId = D.Id and (DepartmentId, Salary) in \\n(select DepartmentId, max(Salary) from Employee\\n group by DepartmentId)\\n \\'\\'\\'"
                    },
                    {
                        "username": "faisal0901",
                        "content": "little bit confusing where the JOIN ?\\n"
                    },
                    {
                        "username": "Adamevans",
                        "content": "with max as \\n(select max(salary) as maxSalary,\\ndepartmentId\\nfrom Employee e\\ngroup by DepartmentId)\\n\\nselect d.name as Department,\\ne.name as Employee,\\ne.Salary from\\nEmployee e \\ninner join department d on d.id = e.DepartmentId\\nwhere e.salary in (select maxSalary from max where departmentId = e.departmentId)"
                    },
                    {
                        "username": "rabikunwar177",
                        "content": "WITH CTE AS\\n(\\n    Select d.name as Department,e.name as Employee,e.salary as Salary,\\n    dense_rank() over (partition by d.name order by e.salary desc) as rnk \\n     from Employee e\\n    left join Department d\\n    on e.departmentId = d.id\\n)\\n\\nSelect Department,Employee,Salary from CTE where rnk = 1\\n"
                    }
                ]
            },
            {
                "id": 1575029,
                "content": [
                    {
                        "username": "tr1328",
                        "content": "\\'\\'\\'\\nSELECT D.Name as Department, E.Name as Employee, Salary FROM Employee E inner join Department D on E.DepartmentId = D.Id WHERE (DepartmentId,Salary) in(SELECT DepartmentId, MAX(Salary) FROM Employee group by DepartmentId)\\n\\'\\'\\'"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "this is not good because problem not limit total result, so you don\\'t have to include departmentId in query result\\n# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n"
                    },
                    {
                        "username": "JYu89828",
                        "content": "\\t/* Write your T-SQL query statement below */\\n\\tselect c.Department, c.Employee, c.Salary\\n\\tfrom\\n\\t(select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\n\\tfrom Employee e join Department d on e.DepartmentId=d.Id) as c\\n\\twhere rank=1\\n"
                    },
                    {
                        "username": "AbdelrahmanDwedar",
                        "content": "you don\\'t need to make a rank for it, you could just use the max() function in this case."
                    },
                    {
                        "username": "pratibhaga8",
                        "content": "[@hailing_liu](/hailing_liu) not working ...subquery is not working"
                    },
                    {
                        "username": "hailing_liu",
                        "content": "When I change the last sentense to \"where c.rank=1\", it works. "
                    },
                    {
                        "username": "ajitraut",
                        "content": "\\nselect d.Name as Department, e.Name as Employee, e.salary as salary \\nfrom Employee e , Department d \\nwhere \\n       e.DepartmentId = d.Id\\nand \\n      (e.DepartmentId, e.Salary)  in \\n  (select e.DepartmentId, max(e.Salary) from Employee e group by e.DepartmentId);\\n\\n"
                    },
                    {
                        "username": "Jennie11",
                        "content": "\\nSELECT d.Name AS Department, e.Name As Employee, e.Salary AS Salary\\nFROM Employee AS e\\nLEFT JOIN Department AS d\\nON e.DepartmentId = d.Id\\nWHERE (d.Id, e.Salary) in (SELECT DepartmentId, max(Salary)\\n                          FROM Employee\\n                          GROUP BY DepartmentId)\\n;\\n"
                    },
                    {
                        "username": "obence09",
                        "content": "The task says thet the row order does not matter.\\nMy Query works but it fails to pass the test due to the fact thet in my query the order of the rows are different than in the result set but the result is the same....\\nPlease fix this!!\\n\\n\\'\\'\\'SELECT d.Name AS \\'Department\\',e.Name AS \\'Emloyee\\', e.Salary   \\nFROM (SELECT Name, Salary, DepartmentId,\\n      dense_rank() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS \\'rank\\' FROM Employee) AS e \\nJOIN Department AS d ON e.DepartmentId = d.Id\\nWHERE e.rank = 1;\\'\\'\\'\\n"
                    },
                    {
                        "username": "rohitahuja823",
                        "content": "Select sq.Department, sq.Employee, sq.Salary from(\\nSelect d.name as Department, e.name as Employee, e.salary as Salary,\\nrank() over(partition by e.departmentId order by salary desc) as rn\\nfrom Employee e\\njoin Department d\\non e.departmentId = d.id\\norder by e.id\\n) sq\\nwhere sq.rn = 1"
                    },
                    {
                        "username": "vineetatrivedi",
                        "content": "\\'\\'\\'\\n;with cte \\nas (\\nSelect max(salary) salary , departmentid, d.name departmentname\\nfrom Employee e \\ninner join department d on e.departmentid =d.id\\ngroup by e.departmentid, d.name\\n)\\nselect departmentname department, e.name Employee , e.Salary\\nfrom employee e\\ninner join cte on e.departmentid =cte.departmentid\\n                and cte.salary =e.salary\\n\\'\\'\\'"
                    },
                    {
                        "username": "adxyadxy",
                        "content": "\\nselect Department, name as \"Employee\",  salary as \"Salary\" from \\n(select d.name as \"Department\", e.salary, e.name, dense_rank() over (partition by e.departmentid order by e.salary desc) as salary_rank \\nfrom employee e\\ninner join department d on e.departmentid=d.id) as temp\\nwhere salary_rank=1"
                    },
                    {
                        "username": "SolmanRaj",
                        "content": "Thank You it Helped me.."
                    },
                    {
                        "username": "mymay",
                        "content": "\\'\\'\\'\\nselect D.Name Department, E.Name Employee, E.Salary from Employee E, Department D\\nwhere E.DepartmentId = D.Id and (DepartmentId, Salary) in \\n(select DepartmentId, max(Salary) from Employee\\n group by DepartmentId)\\n \\'\\'\\'"
                    },
                    {
                        "username": "faisal0901",
                        "content": "little bit confusing where the JOIN ?\\n"
                    },
                    {
                        "username": "Adamevans",
                        "content": "with max as \\n(select max(salary) as maxSalary,\\ndepartmentId\\nfrom Employee e\\ngroup by DepartmentId)\\n\\nselect d.name as Department,\\ne.name as Employee,\\ne.Salary from\\nEmployee e \\ninner join department d on d.id = e.DepartmentId\\nwhere e.salary in (select maxSalary from max where departmentId = e.departmentId)"
                    },
                    {
                        "username": "rabikunwar177",
                        "content": "WITH CTE AS\\n(\\n    Select d.name as Department,e.name as Employee,e.salary as Salary,\\n    dense_rank() over (partition by d.name order by e.salary desc) as rnk \\n     from Employee e\\n    left join Department d\\n    on e.departmentId = d.id\\n)\\n\\nSelect Department,Employee,Salary from CTE where rnk = 1\\n"
                    }
                ]
            },
            {
                "id": 1570374,
                "content": [
                    {
                        "username": "tr1328",
                        "content": "\\'\\'\\'\\nSELECT D.Name as Department, E.Name as Employee, Salary FROM Employee E inner join Department D on E.DepartmentId = D.Id WHERE (DepartmentId,Salary) in(SELECT DepartmentId, MAX(Salary) FROM Employee group by DepartmentId)\\n\\'\\'\\'"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "this is not good because problem not limit total result, so you don\\'t have to include departmentId in query result\\n# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n"
                    },
                    {
                        "username": "JYu89828",
                        "content": "\\t/* Write your T-SQL query statement below */\\n\\tselect c.Department, c.Employee, c.Salary\\n\\tfrom\\n\\t(select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\n\\tfrom Employee e join Department d on e.DepartmentId=d.Id) as c\\n\\twhere rank=1\\n"
                    },
                    {
                        "username": "AbdelrahmanDwedar",
                        "content": "you don\\'t need to make a rank for it, you could just use the max() function in this case."
                    },
                    {
                        "username": "pratibhaga8",
                        "content": "[@hailing_liu](/hailing_liu) not working ...subquery is not working"
                    },
                    {
                        "username": "hailing_liu",
                        "content": "When I change the last sentense to \"where c.rank=1\", it works. "
                    },
                    {
                        "username": "ajitraut",
                        "content": "\\nselect d.Name as Department, e.Name as Employee, e.salary as salary \\nfrom Employee e , Department d \\nwhere \\n       e.DepartmentId = d.Id\\nand \\n      (e.DepartmentId, e.Salary)  in \\n  (select e.DepartmentId, max(e.Salary) from Employee e group by e.DepartmentId);\\n\\n"
                    },
                    {
                        "username": "Jennie11",
                        "content": "\\nSELECT d.Name AS Department, e.Name As Employee, e.Salary AS Salary\\nFROM Employee AS e\\nLEFT JOIN Department AS d\\nON e.DepartmentId = d.Id\\nWHERE (d.Id, e.Salary) in (SELECT DepartmentId, max(Salary)\\n                          FROM Employee\\n                          GROUP BY DepartmentId)\\n;\\n"
                    },
                    {
                        "username": "obence09",
                        "content": "The task says thet the row order does not matter.\\nMy Query works but it fails to pass the test due to the fact thet in my query the order of the rows are different than in the result set but the result is the same....\\nPlease fix this!!\\n\\n\\'\\'\\'SELECT d.Name AS \\'Department\\',e.Name AS \\'Emloyee\\', e.Salary   \\nFROM (SELECT Name, Salary, DepartmentId,\\n      dense_rank() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS \\'rank\\' FROM Employee) AS e \\nJOIN Department AS d ON e.DepartmentId = d.Id\\nWHERE e.rank = 1;\\'\\'\\'\\n"
                    },
                    {
                        "username": "rohitahuja823",
                        "content": "Select sq.Department, sq.Employee, sq.Salary from(\\nSelect d.name as Department, e.name as Employee, e.salary as Salary,\\nrank() over(partition by e.departmentId order by salary desc) as rn\\nfrom Employee e\\njoin Department d\\non e.departmentId = d.id\\norder by e.id\\n) sq\\nwhere sq.rn = 1"
                    },
                    {
                        "username": "vineetatrivedi",
                        "content": "\\'\\'\\'\\n;with cte \\nas (\\nSelect max(salary) salary , departmentid, d.name departmentname\\nfrom Employee e \\ninner join department d on e.departmentid =d.id\\ngroup by e.departmentid, d.name\\n)\\nselect departmentname department, e.name Employee , e.Salary\\nfrom employee e\\ninner join cte on e.departmentid =cte.departmentid\\n                and cte.salary =e.salary\\n\\'\\'\\'"
                    },
                    {
                        "username": "adxyadxy",
                        "content": "\\nselect Department, name as \"Employee\",  salary as \"Salary\" from \\n(select d.name as \"Department\", e.salary, e.name, dense_rank() over (partition by e.departmentid order by e.salary desc) as salary_rank \\nfrom employee e\\ninner join department d on e.departmentid=d.id) as temp\\nwhere salary_rank=1"
                    },
                    {
                        "username": "SolmanRaj",
                        "content": "Thank You it Helped me.."
                    },
                    {
                        "username": "mymay",
                        "content": "\\'\\'\\'\\nselect D.Name Department, E.Name Employee, E.Salary from Employee E, Department D\\nwhere E.DepartmentId = D.Id and (DepartmentId, Salary) in \\n(select DepartmentId, max(Salary) from Employee\\n group by DepartmentId)\\n \\'\\'\\'"
                    },
                    {
                        "username": "faisal0901",
                        "content": "little bit confusing where the JOIN ?\\n"
                    },
                    {
                        "username": "Adamevans",
                        "content": "with max as \\n(select max(salary) as maxSalary,\\ndepartmentId\\nfrom Employee e\\ngroup by DepartmentId)\\n\\nselect d.name as Department,\\ne.name as Employee,\\ne.Salary from\\nEmployee e \\ninner join department d on d.id = e.DepartmentId\\nwhere e.salary in (select maxSalary from max where departmentId = e.departmentId)"
                    },
                    {
                        "username": "rabikunwar177",
                        "content": "WITH CTE AS\\n(\\n    Select d.name as Department,e.name as Employee,e.salary as Salary,\\n    dense_rank() over (partition by d.name order by e.salary desc) as rnk \\n     from Employee e\\n    left join Department d\\n    on e.departmentId = d.id\\n)\\n\\nSelect Department,Employee,Salary from CTE where rnk = 1\\n"
                    }
                ]
            },
            {
                "id": 1576810,
                "content": [
                    {
                        "username": "tr1328",
                        "content": "\\'\\'\\'\\nSELECT D.Name as Department, E.Name as Employee, Salary FROM Employee E inner join Department D on E.DepartmentId = D.Id WHERE (DepartmentId,Salary) in(SELECT DepartmentId, MAX(Salary) FROM Employee group by DepartmentId)\\n\\'\\'\\'"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "this is not good because problem not limit total result, so you don\\'t have to include departmentId in query result\\n# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n"
                    },
                    {
                        "username": "JYu89828",
                        "content": "\\t/* Write your T-SQL query statement below */\\n\\tselect c.Department, c.Employee, c.Salary\\n\\tfrom\\n\\t(select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\n\\tfrom Employee e join Department d on e.DepartmentId=d.Id) as c\\n\\twhere rank=1\\n"
                    },
                    {
                        "username": "AbdelrahmanDwedar",
                        "content": "you don\\'t need to make a rank for it, you could just use the max() function in this case."
                    },
                    {
                        "username": "pratibhaga8",
                        "content": "[@hailing_liu](/hailing_liu) not working ...subquery is not working"
                    },
                    {
                        "username": "hailing_liu",
                        "content": "When I change the last sentense to \"where c.rank=1\", it works. "
                    },
                    {
                        "username": "ajitraut",
                        "content": "\\nselect d.Name as Department, e.Name as Employee, e.salary as salary \\nfrom Employee e , Department d \\nwhere \\n       e.DepartmentId = d.Id\\nand \\n      (e.DepartmentId, e.Salary)  in \\n  (select e.DepartmentId, max(e.Salary) from Employee e group by e.DepartmentId);\\n\\n"
                    },
                    {
                        "username": "Jennie11",
                        "content": "\\nSELECT d.Name AS Department, e.Name As Employee, e.Salary AS Salary\\nFROM Employee AS e\\nLEFT JOIN Department AS d\\nON e.DepartmentId = d.Id\\nWHERE (d.Id, e.Salary) in (SELECT DepartmentId, max(Salary)\\n                          FROM Employee\\n                          GROUP BY DepartmentId)\\n;\\n"
                    },
                    {
                        "username": "obence09",
                        "content": "The task says thet the row order does not matter.\\nMy Query works but it fails to pass the test due to the fact thet in my query the order of the rows are different than in the result set but the result is the same....\\nPlease fix this!!\\n\\n\\'\\'\\'SELECT d.Name AS \\'Department\\',e.Name AS \\'Emloyee\\', e.Salary   \\nFROM (SELECT Name, Salary, DepartmentId,\\n      dense_rank() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS \\'rank\\' FROM Employee) AS e \\nJOIN Department AS d ON e.DepartmentId = d.Id\\nWHERE e.rank = 1;\\'\\'\\'\\n"
                    },
                    {
                        "username": "rohitahuja823",
                        "content": "Select sq.Department, sq.Employee, sq.Salary from(\\nSelect d.name as Department, e.name as Employee, e.salary as Salary,\\nrank() over(partition by e.departmentId order by salary desc) as rn\\nfrom Employee e\\njoin Department d\\non e.departmentId = d.id\\norder by e.id\\n) sq\\nwhere sq.rn = 1"
                    },
                    {
                        "username": "vineetatrivedi",
                        "content": "\\'\\'\\'\\n;with cte \\nas (\\nSelect max(salary) salary , departmentid, d.name departmentname\\nfrom Employee e \\ninner join department d on e.departmentid =d.id\\ngroup by e.departmentid, d.name\\n)\\nselect departmentname department, e.name Employee , e.Salary\\nfrom employee e\\ninner join cte on e.departmentid =cte.departmentid\\n                and cte.salary =e.salary\\n\\'\\'\\'"
                    },
                    {
                        "username": "adxyadxy",
                        "content": "\\nselect Department, name as \"Employee\",  salary as \"Salary\" from \\n(select d.name as \"Department\", e.salary, e.name, dense_rank() over (partition by e.departmentid order by e.salary desc) as salary_rank \\nfrom employee e\\ninner join department d on e.departmentid=d.id) as temp\\nwhere salary_rank=1"
                    },
                    {
                        "username": "SolmanRaj",
                        "content": "Thank You it Helped me.."
                    },
                    {
                        "username": "mymay",
                        "content": "\\'\\'\\'\\nselect D.Name Department, E.Name Employee, E.Salary from Employee E, Department D\\nwhere E.DepartmentId = D.Id and (DepartmentId, Salary) in \\n(select DepartmentId, max(Salary) from Employee\\n group by DepartmentId)\\n \\'\\'\\'"
                    },
                    {
                        "username": "faisal0901",
                        "content": "little bit confusing where the JOIN ?\\n"
                    },
                    {
                        "username": "Adamevans",
                        "content": "with max as \\n(select max(salary) as maxSalary,\\ndepartmentId\\nfrom Employee e\\ngroup by DepartmentId)\\n\\nselect d.name as Department,\\ne.name as Employee,\\ne.Salary from\\nEmployee e \\ninner join department d on d.id = e.DepartmentId\\nwhere e.salary in (select maxSalary from max where departmentId = e.departmentId)"
                    },
                    {
                        "username": "rabikunwar177",
                        "content": "WITH CTE AS\\n(\\n    Select d.name as Department,e.name as Employee,e.salary as Salary,\\n    dense_rank() over (partition by d.name order by e.salary desc) as rnk \\n     from Employee e\\n    left join Department d\\n    on e.departmentId = d.id\\n)\\n\\nSelect Department,Employee,Salary from CTE where rnk = 1\\n"
                    }
                ]
            },
            {
                "id": 1574371,
                "content": [
                    {
                        "username": "tr1328",
                        "content": "\\'\\'\\'\\nSELECT D.Name as Department, E.Name as Employee, Salary FROM Employee E inner join Department D on E.DepartmentId = D.Id WHERE (DepartmentId,Salary) in(SELECT DepartmentId, MAX(Salary) FROM Employee group by DepartmentId)\\n\\'\\'\\'"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "this is not good because problem not limit total result, so you don\\'t have to include departmentId in query result\\n# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n"
                    },
                    {
                        "username": "JYu89828",
                        "content": "\\t/* Write your T-SQL query statement below */\\n\\tselect c.Department, c.Employee, c.Salary\\n\\tfrom\\n\\t(select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\n\\tfrom Employee e join Department d on e.DepartmentId=d.Id) as c\\n\\twhere rank=1\\n"
                    },
                    {
                        "username": "AbdelrahmanDwedar",
                        "content": "you don\\'t need to make a rank for it, you could just use the max() function in this case."
                    },
                    {
                        "username": "pratibhaga8",
                        "content": "[@hailing_liu](/hailing_liu) not working ...subquery is not working"
                    },
                    {
                        "username": "hailing_liu",
                        "content": "When I change the last sentense to \"where c.rank=1\", it works. "
                    },
                    {
                        "username": "ajitraut",
                        "content": "\\nselect d.Name as Department, e.Name as Employee, e.salary as salary \\nfrom Employee e , Department d \\nwhere \\n       e.DepartmentId = d.Id\\nand \\n      (e.DepartmentId, e.Salary)  in \\n  (select e.DepartmentId, max(e.Salary) from Employee e group by e.DepartmentId);\\n\\n"
                    },
                    {
                        "username": "Jennie11",
                        "content": "\\nSELECT d.Name AS Department, e.Name As Employee, e.Salary AS Salary\\nFROM Employee AS e\\nLEFT JOIN Department AS d\\nON e.DepartmentId = d.Id\\nWHERE (d.Id, e.Salary) in (SELECT DepartmentId, max(Salary)\\n                          FROM Employee\\n                          GROUP BY DepartmentId)\\n;\\n"
                    },
                    {
                        "username": "obence09",
                        "content": "The task says thet the row order does not matter.\\nMy Query works but it fails to pass the test due to the fact thet in my query the order of the rows are different than in the result set but the result is the same....\\nPlease fix this!!\\n\\n\\'\\'\\'SELECT d.Name AS \\'Department\\',e.Name AS \\'Emloyee\\', e.Salary   \\nFROM (SELECT Name, Salary, DepartmentId,\\n      dense_rank() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS \\'rank\\' FROM Employee) AS e \\nJOIN Department AS d ON e.DepartmentId = d.Id\\nWHERE e.rank = 1;\\'\\'\\'\\n"
                    },
                    {
                        "username": "rohitahuja823",
                        "content": "Select sq.Department, sq.Employee, sq.Salary from(\\nSelect d.name as Department, e.name as Employee, e.salary as Salary,\\nrank() over(partition by e.departmentId order by salary desc) as rn\\nfrom Employee e\\njoin Department d\\non e.departmentId = d.id\\norder by e.id\\n) sq\\nwhere sq.rn = 1"
                    },
                    {
                        "username": "vineetatrivedi",
                        "content": "\\'\\'\\'\\n;with cte \\nas (\\nSelect max(salary) salary , departmentid, d.name departmentname\\nfrom Employee e \\ninner join department d on e.departmentid =d.id\\ngroup by e.departmentid, d.name\\n)\\nselect departmentname department, e.name Employee , e.Salary\\nfrom employee e\\ninner join cte on e.departmentid =cte.departmentid\\n                and cte.salary =e.salary\\n\\'\\'\\'"
                    },
                    {
                        "username": "adxyadxy",
                        "content": "\\nselect Department, name as \"Employee\",  salary as \"Salary\" from \\n(select d.name as \"Department\", e.salary, e.name, dense_rank() over (partition by e.departmentid order by e.salary desc) as salary_rank \\nfrom employee e\\ninner join department d on e.departmentid=d.id) as temp\\nwhere salary_rank=1"
                    },
                    {
                        "username": "SolmanRaj",
                        "content": "Thank You it Helped me.."
                    },
                    {
                        "username": "mymay",
                        "content": "\\'\\'\\'\\nselect D.Name Department, E.Name Employee, E.Salary from Employee E, Department D\\nwhere E.DepartmentId = D.Id and (DepartmentId, Salary) in \\n(select DepartmentId, max(Salary) from Employee\\n group by DepartmentId)\\n \\'\\'\\'"
                    },
                    {
                        "username": "faisal0901",
                        "content": "little bit confusing where the JOIN ?\\n"
                    },
                    {
                        "username": "Adamevans",
                        "content": "with max as \\n(select max(salary) as maxSalary,\\ndepartmentId\\nfrom Employee e\\ngroup by DepartmentId)\\n\\nselect d.name as Department,\\ne.name as Employee,\\ne.Salary from\\nEmployee e \\ninner join department d on d.id = e.DepartmentId\\nwhere e.salary in (select maxSalary from max where departmentId = e.departmentId)"
                    },
                    {
                        "username": "rabikunwar177",
                        "content": "WITH CTE AS\\n(\\n    Select d.name as Department,e.name as Employee,e.salary as Salary,\\n    dense_rank() over (partition by d.name order by e.salary desc) as rnk \\n     from Employee e\\n    left join Department d\\n    on e.departmentId = d.id\\n)\\n\\nSelect Department,Employee,Salary from CTE where rnk = 1\\n"
                    }
                ]
            },
            {
                "id": 1575588,
                "content": [
                    {
                        "username": "tr1328",
                        "content": "\\'\\'\\'\\nSELECT D.Name as Department, E.Name as Employee, Salary FROM Employee E inner join Department D on E.DepartmentId = D.Id WHERE (DepartmentId,Salary) in(SELECT DepartmentId, MAX(Salary) FROM Employee group by DepartmentId)\\n\\'\\'\\'"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "this is not good because problem not limit total result, so you don\\'t have to include departmentId in query result\\n# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n"
                    },
                    {
                        "username": "JYu89828",
                        "content": "\\t/* Write your T-SQL query statement below */\\n\\tselect c.Department, c.Employee, c.Salary\\n\\tfrom\\n\\t(select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\n\\tfrom Employee e join Department d on e.DepartmentId=d.Id) as c\\n\\twhere rank=1\\n"
                    },
                    {
                        "username": "AbdelrahmanDwedar",
                        "content": "you don\\'t need to make a rank for it, you could just use the max() function in this case."
                    },
                    {
                        "username": "pratibhaga8",
                        "content": "[@hailing_liu](/hailing_liu) not working ...subquery is not working"
                    },
                    {
                        "username": "hailing_liu",
                        "content": "When I change the last sentense to \"where c.rank=1\", it works. "
                    },
                    {
                        "username": "ajitraut",
                        "content": "\\nselect d.Name as Department, e.Name as Employee, e.salary as salary \\nfrom Employee e , Department d \\nwhere \\n       e.DepartmentId = d.Id\\nand \\n      (e.DepartmentId, e.Salary)  in \\n  (select e.DepartmentId, max(e.Salary) from Employee e group by e.DepartmentId);\\n\\n"
                    },
                    {
                        "username": "Jennie11",
                        "content": "\\nSELECT d.Name AS Department, e.Name As Employee, e.Salary AS Salary\\nFROM Employee AS e\\nLEFT JOIN Department AS d\\nON e.DepartmentId = d.Id\\nWHERE (d.Id, e.Salary) in (SELECT DepartmentId, max(Salary)\\n                          FROM Employee\\n                          GROUP BY DepartmentId)\\n;\\n"
                    },
                    {
                        "username": "obence09",
                        "content": "The task says thet the row order does not matter.\\nMy Query works but it fails to pass the test due to the fact thet in my query the order of the rows are different than in the result set but the result is the same....\\nPlease fix this!!\\n\\n\\'\\'\\'SELECT d.Name AS \\'Department\\',e.Name AS \\'Emloyee\\', e.Salary   \\nFROM (SELECT Name, Salary, DepartmentId,\\n      dense_rank() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS \\'rank\\' FROM Employee) AS e \\nJOIN Department AS d ON e.DepartmentId = d.Id\\nWHERE e.rank = 1;\\'\\'\\'\\n"
                    },
                    {
                        "username": "rohitahuja823",
                        "content": "Select sq.Department, sq.Employee, sq.Salary from(\\nSelect d.name as Department, e.name as Employee, e.salary as Salary,\\nrank() over(partition by e.departmentId order by salary desc) as rn\\nfrom Employee e\\njoin Department d\\non e.departmentId = d.id\\norder by e.id\\n) sq\\nwhere sq.rn = 1"
                    },
                    {
                        "username": "vineetatrivedi",
                        "content": "\\'\\'\\'\\n;with cte \\nas (\\nSelect max(salary) salary , departmentid, d.name departmentname\\nfrom Employee e \\ninner join department d on e.departmentid =d.id\\ngroup by e.departmentid, d.name\\n)\\nselect departmentname department, e.name Employee , e.Salary\\nfrom employee e\\ninner join cte on e.departmentid =cte.departmentid\\n                and cte.salary =e.salary\\n\\'\\'\\'"
                    },
                    {
                        "username": "adxyadxy",
                        "content": "\\nselect Department, name as \"Employee\",  salary as \"Salary\" from \\n(select d.name as \"Department\", e.salary, e.name, dense_rank() over (partition by e.departmentid order by e.salary desc) as salary_rank \\nfrom employee e\\ninner join department d on e.departmentid=d.id) as temp\\nwhere salary_rank=1"
                    },
                    {
                        "username": "SolmanRaj",
                        "content": "Thank You it Helped me.."
                    },
                    {
                        "username": "mymay",
                        "content": "\\'\\'\\'\\nselect D.Name Department, E.Name Employee, E.Salary from Employee E, Department D\\nwhere E.DepartmentId = D.Id and (DepartmentId, Salary) in \\n(select DepartmentId, max(Salary) from Employee\\n group by DepartmentId)\\n \\'\\'\\'"
                    },
                    {
                        "username": "faisal0901",
                        "content": "little bit confusing where the JOIN ?\\n"
                    },
                    {
                        "username": "Adamevans",
                        "content": "with max as \\n(select max(salary) as maxSalary,\\ndepartmentId\\nfrom Employee e\\ngroup by DepartmentId)\\n\\nselect d.name as Department,\\ne.name as Employee,\\ne.Salary from\\nEmployee e \\ninner join department d on d.id = e.DepartmentId\\nwhere e.salary in (select maxSalary from max where departmentId = e.departmentId)"
                    },
                    {
                        "username": "rabikunwar177",
                        "content": "WITH CTE AS\\n(\\n    Select d.name as Department,e.name as Employee,e.salary as Salary,\\n    dense_rank() over (partition by d.name order by e.salary desc) as rnk \\n     from Employee e\\n    left join Department d\\n    on e.departmentId = d.id\\n)\\n\\nSelect Department,Employee,Salary from CTE where rnk = 1\\n"
                    }
                ]
            },
            {
                "id": 1723282,
                "content": [
                    {
                        "username": "tr1328",
                        "content": "\\'\\'\\'\\nSELECT D.Name as Department, E.Name as Employee, Salary FROM Employee E inner join Department D on E.DepartmentId = D.Id WHERE (DepartmentId,Salary) in(SELECT DepartmentId, MAX(Salary) FROM Employee group by DepartmentId)\\n\\'\\'\\'"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "this is not good because problem not limit total result, so you don\\'t have to include departmentId in query result\\n# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n"
                    },
                    {
                        "username": "JYu89828",
                        "content": "\\t/* Write your T-SQL query statement below */\\n\\tselect c.Department, c.Employee, c.Salary\\n\\tfrom\\n\\t(select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\n\\tfrom Employee e join Department d on e.DepartmentId=d.Id) as c\\n\\twhere rank=1\\n"
                    },
                    {
                        "username": "AbdelrahmanDwedar",
                        "content": "you don\\'t need to make a rank for it, you could just use the max() function in this case."
                    },
                    {
                        "username": "pratibhaga8",
                        "content": "[@hailing_liu](/hailing_liu) not working ...subquery is not working"
                    },
                    {
                        "username": "hailing_liu",
                        "content": "When I change the last sentense to \"where c.rank=1\", it works. "
                    },
                    {
                        "username": "ajitraut",
                        "content": "\\nselect d.Name as Department, e.Name as Employee, e.salary as salary \\nfrom Employee e , Department d \\nwhere \\n       e.DepartmentId = d.Id\\nand \\n      (e.DepartmentId, e.Salary)  in \\n  (select e.DepartmentId, max(e.Salary) from Employee e group by e.DepartmentId);\\n\\n"
                    },
                    {
                        "username": "Jennie11",
                        "content": "\\nSELECT d.Name AS Department, e.Name As Employee, e.Salary AS Salary\\nFROM Employee AS e\\nLEFT JOIN Department AS d\\nON e.DepartmentId = d.Id\\nWHERE (d.Id, e.Salary) in (SELECT DepartmentId, max(Salary)\\n                          FROM Employee\\n                          GROUP BY DepartmentId)\\n;\\n"
                    },
                    {
                        "username": "obence09",
                        "content": "The task says thet the row order does not matter.\\nMy Query works but it fails to pass the test due to the fact thet in my query the order of the rows are different than in the result set but the result is the same....\\nPlease fix this!!\\n\\n\\'\\'\\'SELECT d.Name AS \\'Department\\',e.Name AS \\'Emloyee\\', e.Salary   \\nFROM (SELECT Name, Salary, DepartmentId,\\n      dense_rank() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS \\'rank\\' FROM Employee) AS e \\nJOIN Department AS d ON e.DepartmentId = d.Id\\nWHERE e.rank = 1;\\'\\'\\'\\n"
                    },
                    {
                        "username": "rohitahuja823",
                        "content": "Select sq.Department, sq.Employee, sq.Salary from(\\nSelect d.name as Department, e.name as Employee, e.salary as Salary,\\nrank() over(partition by e.departmentId order by salary desc) as rn\\nfrom Employee e\\njoin Department d\\non e.departmentId = d.id\\norder by e.id\\n) sq\\nwhere sq.rn = 1"
                    },
                    {
                        "username": "vineetatrivedi",
                        "content": "\\'\\'\\'\\n;with cte \\nas (\\nSelect max(salary) salary , departmentid, d.name departmentname\\nfrom Employee e \\ninner join department d on e.departmentid =d.id\\ngroup by e.departmentid, d.name\\n)\\nselect departmentname department, e.name Employee , e.Salary\\nfrom employee e\\ninner join cte on e.departmentid =cte.departmentid\\n                and cte.salary =e.salary\\n\\'\\'\\'"
                    },
                    {
                        "username": "adxyadxy",
                        "content": "\\nselect Department, name as \"Employee\",  salary as \"Salary\" from \\n(select d.name as \"Department\", e.salary, e.name, dense_rank() over (partition by e.departmentid order by e.salary desc) as salary_rank \\nfrom employee e\\ninner join department d on e.departmentid=d.id) as temp\\nwhere salary_rank=1"
                    },
                    {
                        "username": "SolmanRaj",
                        "content": "Thank You it Helped me.."
                    },
                    {
                        "username": "mymay",
                        "content": "\\'\\'\\'\\nselect D.Name Department, E.Name Employee, E.Salary from Employee E, Department D\\nwhere E.DepartmentId = D.Id and (DepartmentId, Salary) in \\n(select DepartmentId, max(Salary) from Employee\\n group by DepartmentId)\\n \\'\\'\\'"
                    },
                    {
                        "username": "faisal0901",
                        "content": "little bit confusing where the JOIN ?\\n"
                    },
                    {
                        "username": "Adamevans",
                        "content": "with max as \\n(select max(salary) as maxSalary,\\ndepartmentId\\nfrom Employee e\\ngroup by DepartmentId)\\n\\nselect d.name as Department,\\ne.name as Employee,\\ne.Salary from\\nEmployee e \\ninner join department d on d.id = e.DepartmentId\\nwhere e.salary in (select maxSalary from max where departmentId = e.departmentId)"
                    },
                    {
                        "username": "rabikunwar177",
                        "content": "WITH CTE AS\\n(\\n    Select d.name as Department,e.name as Employee,e.salary as Salary,\\n    dense_rank() over (partition by d.name order by e.salary desc) as rnk \\n     from Employee e\\n    left join Department d\\n    on e.departmentId = d.id\\n)\\n\\nSelect Department,Employee,Salary from CTE where rnk = 1\\n"
                    }
                ]
            },
            {
                "id": 1576527,
                "content": [
                    {
                        "username": "tr1328",
                        "content": "\\'\\'\\'\\nSELECT D.Name as Department, E.Name as Employee, Salary FROM Employee E inner join Department D on E.DepartmentId = D.Id WHERE (DepartmentId,Salary) in(SELECT DepartmentId, MAX(Salary) FROM Employee group by DepartmentId)\\n\\'\\'\\'"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "this is not good because problem not limit total result, so you don\\'t have to include departmentId in query result\\n# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n"
                    },
                    {
                        "username": "JYu89828",
                        "content": "\\t/* Write your T-SQL query statement below */\\n\\tselect c.Department, c.Employee, c.Salary\\n\\tfrom\\n\\t(select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\n\\tfrom Employee e join Department d on e.DepartmentId=d.Id) as c\\n\\twhere rank=1\\n"
                    },
                    {
                        "username": "AbdelrahmanDwedar",
                        "content": "you don\\'t need to make a rank for it, you could just use the max() function in this case."
                    },
                    {
                        "username": "pratibhaga8",
                        "content": "[@hailing_liu](/hailing_liu) not working ...subquery is not working"
                    },
                    {
                        "username": "hailing_liu",
                        "content": "When I change the last sentense to \"where c.rank=1\", it works. "
                    },
                    {
                        "username": "ajitraut",
                        "content": "\\nselect d.Name as Department, e.Name as Employee, e.salary as salary \\nfrom Employee e , Department d \\nwhere \\n       e.DepartmentId = d.Id\\nand \\n      (e.DepartmentId, e.Salary)  in \\n  (select e.DepartmentId, max(e.Salary) from Employee e group by e.DepartmentId);\\n\\n"
                    },
                    {
                        "username": "Jennie11",
                        "content": "\\nSELECT d.Name AS Department, e.Name As Employee, e.Salary AS Salary\\nFROM Employee AS e\\nLEFT JOIN Department AS d\\nON e.DepartmentId = d.Id\\nWHERE (d.Id, e.Salary) in (SELECT DepartmentId, max(Salary)\\n                          FROM Employee\\n                          GROUP BY DepartmentId)\\n;\\n"
                    },
                    {
                        "username": "obence09",
                        "content": "The task says thet the row order does not matter.\\nMy Query works but it fails to pass the test due to the fact thet in my query the order of the rows are different than in the result set but the result is the same....\\nPlease fix this!!\\n\\n\\'\\'\\'SELECT d.Name AS \\'Department\\',e.Name AS \\'Emloyee\\', e.Salary   \\nFROM (SELECT Name, Salary, DepartmentId,\\n      dense_rank() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS \\'rank\\' FROM Employee) AS e \\nJOIN Department AS d ON e.DepartmentId = d.Id\\nWHERE e.rank = 1;\\'\\'\\'\\n"
                    },
                    {
                        "username": "rohitahuja823",
                        "content": "Select sq.Department, sq.Employee, sq.Salary from(\\nSelect d.name as Department, e.name as Employee, e.salary as Salary,\\nrank() over(partition by e.departmentId order by salary desc) as rn\\nfrom Employee e\\njoin Department d\\non e.departmentId = d.id\\norder by e.id\\n) sq\\nwhere sq.rn = 1"
                    },
                    {
                        "username": "vineetatrivedi",
                        "content": "\\'\\'\\'\\n;with cte \\nas (\\nSelect max(salary) salary , departmentid, d.name departmentname\\nfrom Employee e \\ninner join department d on e.departmentid =d.id\\ngroup by e.departmentid, d.name\\n)\\nselect departmentname department, e.name Employee , e.Salary\\nfrom employee e\\ninner join cte on e.departmentid =cte.departmentid\\n                and cte.salary =e.salary\\n\\'\\'\\'"
                    },
                    {
                        "username": "adxyadxy",
                        "content": "\\nselect Department, name as \"Employee\",  salary as \"Salary\" from \\n(select d.name as \"Department\", e.salary, e.name, dense_rank() over (partition by e.departmentid order by e.salary desc) as salary_rank \\nfrom employee e\\ninner join department d on e.departmentid=d.id) as temp\\nwhere salary_rank=1"
                    },
                    {
                        "username": "SolmanRaj",
                        "content": "Thank You it Helped me.."
                    },
                    {
                        "username": "mymay",
                        "content": "\\'\\'\\'\\nselect D.Name Department, E.Name Employee, E.Salary from Employee E, Department D\\nwhere E.DepartmentId = D.Id and (DepartmentId, Salary) in \\n(select DepartmentId, max(Salary) from Employee\\n group by DepartmentId)\\n \\'\\'\\'"
                    },
                    {
                        "username": "faisal0901",
                        "content": "little bit confusing where the JOIN ?\\n"
                    },
                    {
                        "username": "Adamevans",
                        "content": "with max as \\n(select max(salary) as maxSalary,\\ndepartmentId\\nfrom Employee e\\ngroup by DepartmentId)\\n\\nselect d.name as Department,\\ne.name as Employee,\\ne.Salary from\\nEmployee e \\ninner join department d on d.id = e.DepartmentId\\nwhere e.salary in (select maxSalary from max where departmentId = e.departmentId)"
                    },
                    {
                        "username": "rabikunwar177",
                        "content": "WITH CTE AS\\n(\\n    Select d.name as Department,e.name as Employee,e.salary as Salary,\\n    dense_rank() over (partition by d.name order by e.salary desc) as rnk \\n     from Employee e\\n    left join Department d\\n    on e.departmentId = d.id\\n)\\n\\nSelect Department,Employee,Salary from CTE where rnk = 1\\n"
                    }
                ]
            },
            {
                "id": 1574884,
                "content": [
                    {
                        "username": "tr1328",
                        "content": "\\'\\'\\'\\nSELECT D.Name as Department, E.Name as Employee, Salary FROM Employee E inner join Department D on E.DepartmentId = D.Id WHERE (DepartmentId,Salary) in(SELECT DepartmentId, MAX(Salary) FROM Employee group by DepartmentId)\\n\\'\\'\\'"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "this is not good because problem not limit total result, so you don\\'t have to include departmentId in query result\\n# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n"
                    },
                    {
                        "username": "JYu89828",
                        "content": "\\t/* Write your T-SQL query statement below */\\n\\tselect c.Department, c.Employee, c.Salary\\n\\tfrom\\n\\t(select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\n\\tfrom Employee e join Department d on e.DepartmentId=d.Id) as c\\n\\twhere rank=1\\n"
                    },
                    {
                        "username": "AbdelrahmanDwedar",
                        "content": "you don\\'t need to make a rank for it, you could just use the max() function in this case."
                    },
                    {
                        "username": "pratibhaga8",
                        "content": "[@hailing_liu](/hailing_liu) not working ...subquery is not working"
                    },
                    {
                        "username": "hailing_liu",
                        "content": "When I change the last sentense to \"where c.rank=1\", it works. "
                    },
                    {
                        "username": "ajitraut",
                        "content": "\\nselect d.Name as Department, e.Name as Employee, e.salary as salary \\nfrom Employee e , Department d \\nwhere \\n       e.DepartmentId = d.Id\\nand \\n      (e.DepartmentId, e.Salary)  in \\n  (select e.DepartmentId, max(e.Salary) from Employee e group by e.DepartmentId);\\n\\n"
                    },
                    {
                        "username": "Jennie11",
                        "content": "\\nSELECT d.Name AS Department, e.Name As Employee, e.Salary AS Salary\\nFROM Employee AS e\\nLEFT JOIN Department AS d\\nON e.DepartmentId = d.Id\\nWHERE (d.Id, e.Salary) in (SELECT DepartmentId, max(Salary)\\n                          FROM Employee\\n                          GROUP BY DepartmentId)\\n;\\n"
                    },
                    {
                        "username": "obence09",
                        "content": "The task says thet the row order does not matter.\\nMy Query works but it fails to pass the test due to the fact thet in my query the order of the rows are different than in the result set but the result is the same....\\nPlease fix this!!\\n\\n\\'\\'\\'SELECT d.Name AS \\'Department\\',e.Name AS \\'Emloyee\\', e.Salary   \\nFROM (SELECT Name, Salary, DepartmentId,\\n      dense_rank() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS \\'rank\\' FROM Employee) AS e \\nJOIN Department AS d ON e.DepartmentId = d.Id\\nWHERE e.rank = 1;\\'\\'\\'\\n"
                    },
                    {
                        "username": "rohitahuja823",
                        "content": "Select sq.Department, sq.Employee, sq.Salary from(\\nSelect d.name as Department, e.name as Employee, e.salary as Salary,\\nrank() over(partition by e.departmentId order by salary desc) as rn\\nfrom Employee e\\njoin Department d\\non e.departmentId = d.id\\norder by e.id\\n) sq\\nwhere sq.rn = 1"
                    },
                    {
                        "username": "vineetatrivedi",
                        "content": "\\'\\'\\'\\n;with cte \\nas (\\nSelect max(salary) salary , departmentid, d.name departmentname\\nfrom Employee e \\ninner join department d on e.departmentid =d.id\\ngroup by e.departmentid, d.name\\n)\\nselect departmentname department, e.name Employee , e.Salary\\nfrom employee e\\ninner join cte on e.departmentid =cte.departmentid\\n                and cte.salary =e.salary\\n\\'\\'\\'"
                    },
                    {
                        "username": "adxyadxy",
                        "content": "\\nselect Department, name as \"Employee\",  salary as \"Salary\" from \\n(select d.name as \"Department\", e.salary, e.name, dense_rank() over (partition by e.departmentid order by e.salary desc) as salary_rank \\nfrom employee e\\ninner join department d on e.departmentid=d.id) as temp\\nwhere salary_rank=1"
                    },
                    {
                        "username": "SolmanRaj",
                        "content": "Thank You it Helped me.."
                    },
                    {
                        "username": "mymay",
                        "content": "\\'\\'\\'\\nselect D.Name Department, E.Name Employee, E.Salary from Employee E, Department D\\nwhere E.DepartmentId = D.Id and (DepartmentId, Salary) in \\n(select DepartmentId, max(Salary) from Employee\\n group by DepartmentId)\\n \\'\\'\\'"
                    },
                    {
                        "username": "faisal0901",
                        "content": "little bit confusing where the JOIN ?\\n"
                    },
                    {
                        "username": "Adamevans",
                        "content": "with max as \\n(select max(salary) as maxSalary,\\ndepartmentId\\nfrom Employee e\\ngroup by DepartmentId)\\n\\nselect d.name as Department,\\ne.name as Employee,\\ne.Salary from\\nEmployee e \\ninner join department d on d.id = e.DepartmentId\\nwhere e.salary in (select maxSalary from max where departmentId = e.departmentId)"
                    },
                    {
                        "username": "rabikunwar177",
                        "content": "WITH CTE AS\\n(\\n    Select d.name as Department,e.name as Employee,e.salary as Salary,\\n    dense_rank() over (partition by d.name order by e.salary desc) as rnk \\n     from Employee e\\n    left join Department d\\n    on e.departmentId = d.id\\n)\\n\\nSelect Department,Employee,Salary from CTE where rnk = 1\\n"
                    }
                ]
            },
            {
                "id": 1573400,
                "content": [
                    {
                        "username": "tr1328",
                        "content": "\\'\\'\\'\\nSELECT D.Name as Department, E.Name as Employee, Salary FROM Employee E inner join Department D on E.DepartmentId = D.Id WHERE (DepartmentId,Salary) in(SELECT DepartmentId, MAX(Salary) FROM Employee group by DepartmentId)\\n\\'\\'\\'"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "this is not good because problem not limit total result, so you don\\'t have to include departmentId in query result\\n# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n"
                    },
                    {
                        "username": "JYu89828",
                        "content": "\\t/* Write your T-SQL query statement below */\\n\\tselect c.Department, c.Employee, c.Salary\\n\\tfrom\\n\\t(select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\n\\tfrom Employee e join Department d on e.DepartmentId=d.Id) as c\\n\\twhere rank=1\\n"
                    },
                    {
                        "username": "AbdelrahmanDwedar",
                        "content": "you don\\'t need to make a rank for it, you could just use the max() function in this case."
                    },
                    {
                        "username": "pratibhaga8",
                        "content": "[@hailing_liu](/hailing_liu) not working ...subquery is not working"
                    },
                    {
                        "username": "hailing_liu",
                        "content": "When I change the last sentense to \"where c.rank=1\", it works. "
                    },
                    {
                        "username": "ajitraut",
                        "content": "\\nselect d.Name as Department, e.Name as Employee, e.salary as salary \\nfrom Employee e , Department d \\nwhere \\n       e.DepartmentId = d.Id\\nand \\n      (e.DepartmentId, e.Salary)  in \\n  (select e.DepartmentId, max(e.Salary) from Employee e group by e.DepartmentId);\\n\\n"
                    },
                    {
                        "username": "Jennie11",
                        "content": "\\nSELECT d.Name AS Department, e.Name As Employee, e.Salary AS Salary\\nFROM Employee AS e\\nLEFT JOIN Department AS d\\nON e.DepartmentId = d.Id\\nWHERE (d.Id, e.Salary) in (SELECT DepartmentId, max(Salary)\\n                          FROM Employee\\n                          GROUP BY DepartmentId)\\n;\\n"
                    },
                    {
                        "username": "obence09",
                        "content": "The task says thet the row order does not matter.\\nMy Query works but it fails to pass the test due to the fact thet in my query the order of the rows are different than in the result set but the result is the same....\\nPlease fix this!!\\n\\n\\'\\'\\'SELECT d.Name AS \\'Department\\',e.Name AS \\'Emloyee\\', e.Salary   \\nFROM (SELECT Name, Salary, DepartmentId,\\n      dense_rank() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS \\'rank\\' FROM Employee) AS e \\nJOIN Department AS d ON e.DepartmentId = d.Id\\nWHERE e.rank = 1;\\'\\'\\'\\n"
                    },
                    {
                        "username": "rohitahuja823",
                        "content": "Select sq.Department, sq.Employee, sq.Salary from(\\nSelect d.name as Department, e.name as Employee, e.salary as Salary,\\nrank() over(partition by e.departmentId order by salary desc) as rn\\nfrom Employee e\\njoin Department d\\non e.departmentId = d.id\\norder by e.id\\n) sq\\nwhere sq.rn = 1"
                    },
                    {
                        "username": "vineetatrivedi",
                        "content": "\\'\\'\\'\\n;with cte \\nas (\\nSelect max(salary) salary , departmentid, d.name departmentname\\nfrom Employee e \\ninner join department d on e.departmentid =d.id\\ngroup by e.departmentid, d.name\\n)\\nselect departmentname department, e.name Employee , e.Salary\\nfrom employee e\\ninner join cte on e.departmentid =cte.departmentid\\n                and cte.salary =e.salary\\n\\'\\'\\'"
                    },
                    {
                        "username": "adxyadxy",
                        "content": "\\nselect Department, name as \"Employee\",  salary as \"Salary\" from \\n(select d.name as \"Department\", e.salary, e.name, dense_rank() over (partition by e.departmentid order by e.salary desc) as salary_rank \\nfrom employee e\\ninner join department d on e.departmentid=d.id) as temp\\nwhere salary_rank=1"
                    },
                    {
                        "username": "SolmanRaj",
                        "content": "Thank You it Helped me.."
                    },
                    {
                        "username": "mymay",
                        "content": "\\'\\'\\'\\nselect D.Name Department, E.Name Employee, E.Salary from Employee E, Department D\\nwhere E.DepartmentId = D.Id and (DepartmentId, Salary) in \\n(select DepartmentId, max(Salary) from Employee\\n group by DepartmentId)\\n \\'\\'\\'"
                    },
                    {
                        "username": "faisal0901",
                        "content": "little bit confusing where the JOIN ?\\n"
                    },
                    {
                        "username": "Adamevans",
                        "content": "with max as \\n(select max(salary) as maxSalary,\\ndepartmentId\\nfrom Employee e\\ngroup by DepartmentId)\\n\\nselect d.name as Department,\\ne.name as Employee,\\ne.Salary from\\nEmployee e \\ninner join department d on d.id = e.DepartmentId\\nwhere e.salary in (select maxSalary from max where departmentId = e.departmentId)"
                    },
                    {
                        "username": "rabikunwar177",
                        "content": "WITH CTE AS\\n(\\n    Select d.name as Department,e.name as Employee,e.salary as Salary,\\n    dense_rank() over (partition by d.name order by e.salary desc) as rnk \\n     from Employee e\\n    left join Department d\\n    on e.departmentId = d.id\\n)\\n\\nSelect Department,Employee,Salary from CTE where rnk = 1\\n"
                    }
                ]
            },
            {
                "id": 1573177,
                "content": [
                    {
                        "username": "tr1328",
                        "content": "\\'\\'\\'\\nSELECT D.Name as Department, E.Name as Employee, Salary FROM Employee E inner join Department D on E.DepartmentId = D.Id WHERE (DepartmentId,Salary) in(SELECT DepartmentId, MAX(Salary) FROM Employee group by DepartmentId)\\n\\'\\'\\'"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "this is not good because problem not limit total result, so you don\\'t have to include departmentId in query result\\n# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n"
                    },
                    {
                        "username": "JYu89828",
                        "content": "\\t/* Write your T-SQL query statement below */\\n\\tselect c.Department, c.Employee, c.Salary\\n\\tfrom\\n\\t(select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\n\\tfrom Employee e join Department d on e.DepartmentId=d.Id) as c\\n\\twhere rank=1\\n"
                    },
                    {
                        "username": "AbdelrahmanDwedar",
                        "content": "you don\\'t need to make a rank for it, you could just use the max() function in this case."
                    },
                    {
                        "username": "pratibhaga8",
                        "content": "[@hailing_liu](/hailing_liu) not working ...subquery is not working"
                    },
                    {
                        "username": "hailing_liu",
                        "content": "When I change the last sentense to \"where c.rank=1\", it works. "
                    },
                    {
                        "username": "ajitraut",
                        "content": "\\nselect d.Name as Department, e.Name as Employee, e.salary as salary \\nfrom Employee e , Department d \\nwhere \\n       e.DepartmentId = d.Id\\nand \\n      (e.DepartmentId, e.Salary)  in \\n  (select e.DepartmentId, max(e.Salary) from Employee e group by e.DepartmentId);\\n\\n"
                    },
                    {
                        "username": "Jennie11",
                        "content": "\\nSELECT d.Name AS Department, e.Name As Employee, e.Salary AS Salary\\nFROM Employee AS e\\nLEFT JOIN Department AS d\\nON e.DepartmentId = d.Id\\nWHERE (d.Id, e.Salary) in (SELECT DepartmentId, max(Salary)\\n                          FROM Employee\\n                          GROUP BY DepartmentId)\\n;\\n"
                    },
                    {
                        "username": "obence09",
                        "content": "The task says thet the row order does not matter.\\nMy Query works but it fails to pass the test due to the fact thet in my query the order of the rows are different than in the result set but the result is the same....\\nPlease fix this!!\\n\\n\\'\\'\\'SELECT d.Name AS \\'Department\\',e.Name AS \\'Emloyee\\', e.Salary   \\nFROM (SELECT Name, Salary, DepartmentId,\\n      dense_rank() OVER(PARTITION BY DepartmentId ORDER BY Salary DESC) AS \\'rank\\' FROM Employee) AS e \\nJOIN Department AS d ON e.DepartmentId = d.Id\\nWHERE e.rank = 1;\\'\\'\\'\\n"
                    },
                    {
                        "username": "rohitahuja823",
                        "content": "Select sq.Department, sq.Employee, sq.Salary from(\\nSelect d.name as Department, e.name as Employee, e.salary as Salary,\\nrank() over(partition by e.departmentId order by salary desc) as rn\\nfrom Employee e\\njoin Department d\\non e.departmentId = d.id\\norder by e.id\\n) sq\\nwhere sq.rn = 1"
                    },
                    {
                        "username": "vineetatrivedi",
                        "content": "\\'\\'\\'\\n;with cte \\nas (\\nSelect max(salary) salary , departmentid, d.name departmentname\\nfrom Employee e \\ninner join department d on e.departmentid =d.id\\ngroup by e.departmentid, d.name\\n)\\nselect departmentname department, e.name Employee , e.Salary\\nfrom employee e\\ninner join cte on e.departmentid =cte.departmentid\\n                and cte.salary =e.salary\\n\\'\\'\\'"
                    },
                    {
                        "username": "adxyadxy",
                        "content": "\\nselect Department, name as \"Employee\",  salary as \"Salary\" from \\n(select d.name as \"Department\", e.salary, e.name, dense_rank() over (partition by e.departmentid order by e.salary desc) as salary_rank \\nfrom employee e\\ninner join department d on e.departmentid=d.id) as temp\\nwhere salary_rank=1"
                    },
                    {
                        "username": "SolmanRaj",
                        "content": "Thank You it Helped me.."
                    },
                    {
                        "username": "mymay",
                        "content": "\\'\\'\\'\\nselect D.Name Department, E.Name Employee, E.Salary from Employee E, Department D\\nwhere E.DepartmentId = D.Id and (DepartmentId, Salary) in \\n(select DepartmentId, max(Salary) from Employee\\n group by DepartmentId)\\n \\'\\'\\'"
                    },
                    {
                        "username": "faisal0901",
                        "content": "little bit confusing where the JOIN ?\\n"
                    },
                    {
                        "username": "Adamevans",
                        "content": "with max as \\n(select max(salary) as maxSalary,\\ndepartmentId\\nfrom Employee e\\ngroup by DepartmentId)\\n\\nselect d.name as Department,\\ne.name as Employee,\\ne.Salary from\\nEmployee e \\ninner join department d on d.id = e.DepartmentId\\nwhere e.salary in (select maxSalary from max where departmentId = e.departmentId)"
                    },
                    {
                        "username": "rabikunwar177",
                        "content": "WITH CTE AS\\n(\\n    Select d.name as Department,e.name as Employee,e.salary as Salary,\\n    dense_rank() over (partition by d.name order by e.salary desc) as rnk \\n     from Employee e\\n    left join Department d\\n    on e.departmentId = d.id\\n)\\n\\nSelect Department,Employee,Salary from CTE where rnk = 1\\n"
                    }
                ]
            },
            {
                "id": 2072043,
                "content": [
                    {
                        "username": "wheatsnackbread",
                        "content": "T-SQL using subqueries:\\n\\n/* Write your T-SQL query statement below */\\n\\nSELECT Department.name AS Department, Employee.name AS Employee, Employee.salary AS Salary FROM\\n((SELECT departmentId, MAX(salary) AS maxSalary FROM Employee GROUP BY departmentId) sub LEFT JOIN Employee on sub.maxSalary = Employee.salary AND sub.departmentId = Employee.departmentId)  INNER JOIN Department ON Employee.departmentId = Department.id;"
                    },
                    {
                        "username": "aryan1113",
                        "content": "Why is the discussion section flooded with solutions :/"
                    },
                    {
                        "username": "Jasskaran0007",
                        "content": "While doing this question I came across a very important concept of GROUP BY clause, which can be ignored when first time coming across the GROUP BY clause, which is, that the columns which are not included in the GROUP BY clause must be a part of aggregate functions like MAX, MIN, SUM, AVG, otherwise it can lead to an error.\\nWhich means queries like, \\nSELECT Department.name AS Department, Employee.name AS Employee, MAX(salary) AS Salary FROM Employee JOIN Department ON Employee.departmentId=Department.id GROUP BY Department.id.\\nwont work.\\n\\n\\nHope I am not the only one."
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "\"Always remember, programming is just like life. It might seem hard at first, but every mistake is an opportunity to learn and grow. Don\\'t be discouraged by errors or unexpected results. Just keep trying, and with each attempt, you\\'re getting closer to your goal. The sky is the limit, so dream big and keep coding!\"\\n- Barbie"
                    },
                    {
                        "username": "shouvik32",
                        "content": "#VERY Easy to UNDERSTAND\\n#UPVOTE IF YOU LIKE \\n\\nSELECT Department.name AS Department,Employee.name AS Employee,salary\\nFROM Employee\\nINNER JOIN Department ON Employee.departmentId=Department.id \\nWHERE(departmentId,Salary) IN \\n(\\nSELECT departmentId, MAX(Salary) FROM Employee\\nGROUP BY departmentId\\n)"
                    },
                    {
                        "username": "alfej136",
                        "content": "did anyone had written the query in T-SQL ? if yes then can you please reply the answer...."
                    },
                    {
                        "username": "Zivko",
                        "content": "WITH CTE AS\\n(SELECT RANK () OVER (PARTITION BY d.name ORDER BY e.salary DESC) AS rank, e.name AS Employee, d.name AS Department, e.salary AS Salary\\nFROM Employee AS e\\nINNER JOIN Department AS d\\nON e.departmentid = d.id)\\n\\nSELECT Employee, Department, Salary\\nFROM CTE\\nWHERE rank = 1"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n)"
                    },
                    {
                        "username": "user8428J",
                        "content": "select d.name as Department,e.Employee,e.Salary\\nfrom\\n((select name as Employee,departmentId, Salary, rank() over(partition by departmentId order by salary desc) as \\'rank\\'\\nfrom employee) as e inner join department as d\\non e.departmentId = d.id)\\nwhere e.rank=1\\norder by e.rank"
                    },
                    {
                        "username": "Anmol_29",
                        "content": "with cte as(\\n  select b.name as dept,a.name,a.salary from Employee a inner join Department b on a.departmentId = b.id\\n),\\ncte1 as(\\n  select *, dense_rank() over(partition by dept order by salary desc) as rnk from cte\\n)\\n\\nselect dept as Department, name as Employee, salary from cte1 where rnk = 1;"
                    }
                ]
            },
            {
                "id": 2025116,
                "content": [
                    {
                        "username": "wheatsnackbread",
                        "content": "T-SQL using subqueries:\\n\\n/* Write your T-SQL query statement below */\\n\\nSELECT Department.name AS Department, Employee.name AS Employee, Employee.salary AS Salary FROM\\n((SELECT departmentId, MAX(salary) AS maxSalary FROM Employee GROUP BY departmentId) sub LEFT JOIN Employee on sub.maxSalary = Employee.salary AND sub.departmentId = Employee.departmentId)  INNER JOIN Department ON Employee.departmentId = Department.id;"
                    },
                    {
                        "username": "aryan1113",
                        "content": "Why is the discussion section flooded with solutions :/"
                    },
                    {
                        "username": "Jasskaran0007",
                        "content": "While doing this question I came across a very important concept of GROUP BY clause, which can be ignored when first time coming across the GROUP BY clause, which is, that the columns which are not included in the GROUP BY clause must be a part of aggregate functions like MAX, MIN, SUM, AVG, otherwise it can lead to an error.\\nWhich means queries like, \\nSELECT Department.name AS Department, Employee.name AS Employee, MAX(salary) AS Salary FROM Employee JOIN Department ON Employee.departmentId=Department.id GROUP BY Department.id.\\nwont work.\\n\\n\\nHope I am not the only one."
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "\"Always remember, programming is just like life. It might seem hard at first, but every mistake is an opportunity to learn and grow. Don\\'t be discouraged by errors or unexpected results. Just keep trying, and with each attempt, you\\'re getting closer to your goal. The sky is the limit, so dream big and keep coding!\"\\n- Barbie"
                    },
                    {
                        "username": "shouvik32",
                        "content": "#VERY Easy to UNDERSTAND\\n#UPVOTE IF YOU LIKE \\n\\nSELECT Department.name AS Department,Employee.name AS Employee,salary\\nFROM Employee\\nINNER JOIN Department ON Employee.departmentId=Department.id \\nWHERE(departmentId,Salary) IN \\n(\\nSELECT departmentId, MAX(Salary) FROM Employee\\nGROUP BY departmentId\\n)"
                    },
                    {
                        "username": "alfej136",
                        "content": "did anyone had written the query in T-SQL ? if yes then can you please reply the answer...."
                    },
                    {
                        "username": "Zivko",
                        "content": "WITH CTE AS\\n(SELECT RANK () OVER (PARTITION BY d.name ORDER BY e.salary DESC) AS rank, e.name AS Employee, d.name AS Department, e.salary AS Salary\\nFROM Employee AS e\\nINNER JOIN Department AS d\\nON e.departmentid = d.id)\\n\\nSELECT Employee, Department, Salary\\nFROM CTE\\nWHERE rank = 1"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n)"
                    },
                    {
                        "username": "user8428J",
                        "content": "select d.name as Department,e.Employee,e.Salary\\nfrom\\n((select name as Employee,departmentId, Salary, rank() over(partition by departmentId order by salary desc) as \\'rank\\'\\nfrom employee) as e inner join department as d\\non e.departmentId = d.id)\\nwhere e.rank=1\\norder by e.rank"
                    },
                    {
                        "username": "Anmol_29",
                        "content": "with cte as(\\n  select b.name as dept,a.name,a.salary from Employee a inner join Department b on a.departmentId = b.id\\n),\\ncte1 as(\\n  select *, dense_rank() over(partition by dept order by salary desc) as rnk from cte\\n)\\n\\nselect dept as Department, name as Employee, salary from cte1 where rnk = 1;"
                    }
                ]
            },
            {
                "id": 2016757,
                "content": [
                    {
                        "username": "wheatsnackbread",
                        "content": "T-SQL using subqueries:\\n\\n/* Write your T-SQL query statement below */\\n\\nSELECT Department.name AS Department, Employee.name AS Employee, Employee.salary AS Salary FROM\\n((SELECT departmentId, MAX(salary) AS maxSalary FROM Employee GROUP BY departmentId) sub LEFT JOIN Employee on sub.maxSalary = Employee.salary AND sub.departmentId = Employee.departmentId)  INNER JOIN Department ON Employee.departmentId = Department.id;"
                    },
                    {
                        "username": "aryan1113",
                        "content": "Why is the discussion section flooded with solutions :/"
                    },
                    {
                        "username": "Jasskaran0007",
                        "content": "While doing this question I came across a very important concept of GROUP BY clause, which can be ignored when first time coming across the GROUP BY clause, which is, that the columns which are not included in the GROUP BY clause must be a part of aggregate functions like MAX, MIN, SUM, AVG, otherwise it can lead to an error.\\nWhich means queries like, \\nSELECT Department.name AS Department, Employee.name AS Employee, MAX(salary) AS Salary FROM Employee JOIN Department ON Employee.departmentId=Department.id GROUP BY Department.id.\\nwont work.\\n\\n\\nHope I am not the only one."
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "\"Always remember, programming is just like life. It might seem hard at first, but every mistake is an opportunity to learn and grow. Don\\'t be discouraged by errors or unexpected results. Just keep trying, and with each attempt, you\\'re getting closer to your goal. The sky is the limit, so dream big and keep coding!\"\\n- Barbie"
                    },
                    {
                        "username": "shouvik32",
                        "content": "#VERY Easy to UNDERSTAND\\n#UPVOTE IF YOU LIKE \\n\\nSELECT Department.name AS Department,Employee.name AS Employee,salary\\nFROM Employee\\nINNER JOIN Department ON Employee.departmentId=Department.id \\nWHERE(departmentId,Salary) IN \\n(\\nSELECT departmentId, MAX(Salary) FROM Employee\\nGROUP BY departmentId\\n)"
                    },
                    {
                        "username": "alfej136",
                        "content": "did anyone had written the query in T-SQL ? if yes then can you please reply the answer...."
                    },
                    {
                        "username": "Zivko",
                        "content": "WITH CTE AS\\n(SELECT RANK () OVER (PARTITION BY d.name ORDER BY e.salary DESC) AS rank, e.name AS Employee, d.name AS Department, e.salary AS Salary\\nFROM Employee AS e\\nINNER JOIN Department AS d\\nON e.departmentid = d.id)\\n\\nSELECT Employee, Department, Salary\\nFROM CTE\\nWHERE rank = 1"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n)"
                    },
                    {
                        "username": "user8428J",
                        "content": "select d.name as Department,e.Employee,e.Salary\\nfrom\\n((select name as Employee,departmentId, Salary, rank() over(partition by departmentId order by salary desc) as \\'rank\\'\\nfrom employee) as e inner join department as d\\non e.departmentId = d.id)\\nwhere e.rank=1\\norder by e.rank"
                    },
                    {
                        "username": "Anmol_29",
                        "content": "with cte as(\\n  select b.name as dept,a.name,a.salary from Employee a inner join Department b on a.departmentId = b.id\\n),\\ncte1 as(\\n  select *, dense_rank() over(partition by dept order by salary desc) as rnk from cte\\n)\\n\\nselect dept as Department, name as Employee, salary from cte1 where rnk = 1;"
                    }
                ]
            },
            {
                "id": 2004439,
                "content": [
                    {
                        "username": "wheatsnackbread",
                        "content": "T-SQL using subqueries:\\n\\n/* Write your T-SQL query statement below */\\n\\nSELECT Department.name AS Department, Employee.name AS Employee, Employee.salary AS Salary FROM\\n((SELECT departmentId, MAX(salary) AS maxSalary FROM Employee GROUP BY departmentId) sub LEFT JOIN Employee on sub.maxSalary = Employee.salary AND sub.departmentId = Employee.departmentId)  INNER JOIN Department ON Employee.departmentId = Department.id;"
                    },
                    {
                        "username": "aryan1113",
                        "content": "Why is the discussion section flooded with solutions :/"
                    },
                    {
                        "username": "Jasskaran0007",
                        "content": "While doing this question I came across a very important concept of GROUP BY clause, which can be ignored when first time coming across the GROUP BY clause, which is, that the columns which are not included in the GROUP BY clause must be a part of aggregate functions like MAX, MIN, SUM, AVG, otherwise it can lead to an error.\\nWhich means queries like, \\nSELECT Department.name AS Department, Employee.name AS Employee, MAX(salary) AS Salary FROM Employee JOIN Department ON Employee.departmentId=Department.id GROUP BY Department.id.\\nwont work.\\n\\n\\nHope I am not the only one."
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "\"Always remember, programming is just like life. It might seem hard at first, but every mistake is an opportunity to learn and grow. Don\\'t be discouraged by errors or unexpected results. Just keep trying, and with each attempt, you\\'re getting closer to your goal. The sky is the limit, so dream big and keep coding!\"\\n- Barbie"
                    },
                    {
                        "username": "shouvik32",
                        "content": "#VERY Easy to UNDERSTAND\\n#UPVOTE IF YOU LIKE \\n\\nSELECT Department.name AS Department,Employee.name AS Employee,salary\\nFROM Employee\\nINNER JOIN Department ON Employee.departmentId=Department.id \\nWHERE(departmentId,Salary) IN \\n(\\nSELECT departmentId, MAX(Salary) FROM Employee\\nGROUP BY departmentId\\n)"
                    },
                    {
                        "username": "alfej136",
                        "content": "did anyone had written the query in T-SQL ? if yes then can you please reply the answer...."
                    },
                    {
                        "username": "Zivko",
                        "content": "WITH CTE AS\\n(SELECT RANK () OVER (PARTITION BY d.name ORDER BY e.salary DESC) AS rank, e.name AS Employee, d.name AS Department, e.salary AS Salary\\nFROM Employee AS e\\nINNER JOIN Department AS d\\nON e.departmentid = d.id)\\n\\nSELECT Employee, Department, Salary\\nFROM CTE\\nWHERE rank = 1"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n)"
                    },
                    {
                        "username": "user8428J",
                        "content": "select d.name as Department,e.Employee,e.Salary\\nfrom\\n((select name as Employee,departmentId, Salary, rank() over(partition by departmentId order by salary desc) as \\'rank\\'\\nfrom employee) as e inner join department as d\\non e.departmentId = d.id)\\nwhere e.rank=1\\norder by e.rank"
                    },
                    {
                        "username": "Anmol_29",
                        "content": "with cte as(\\n  select b.name as dept,a.name,a.salary from Employee a inner join Department b on a.departmentId = b.id\\n),\\ncte1 as(\\n  select *, dense_rank() over(partition by dept order by salary desc) as rnk from cte\\n)\\n\\nselect dept as Department, name as Employee, salary from cte1 where rnk = 1;"
                    }
                ]
            },
            {
                "id": 1993143,
                "content": [
                    {
                        "username": "wheatsnackbread",
                        "content": "T-SQL using subqueries:\\n\\n/* Write your T-SQL query statement below */\\n\\nSELECT Department.name AS Department, Employee.name AS Employee, Employee.salary AS Salary FROM\\n((SELECT departmentId, MAX(salary) AS maxSalary FROM Employee GROUP BY departmentId) sub LEFT JOIN Employee on sub.maxSalary = Employee.salary AND sub.departmentId = Employee.departmentId)  INNER JOIN Department ON Employee.departmentId = Department.id;"
                    },
                    {
                        "username": "aryan1113",
                        "content": "Why is the discussion section flooded with solutions :/"
                    },
                    {
                        "username": "Jasskaran0007",
                        "content": "While doing this question I came across a very important concept of GROUP BY clause, which can be ignored when first time coming across the GROUP BY clause, which is, that the columns which are not included in the GROUP BY clause must be a part of aggregate functions like MAX, MIN, SUM, AVG, otherwise it can lead to an error.\\nWhich means queries like, \\nSELECT Department.name AS Department, Employee.name AS Employee, MAX(salary) AS Salary FROM Employee JOIN Department ON Employee.departmentId=Department.id GROUP BY Department.id.\\nwont work.\\n\\n\\nHope I am not the only one."
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "\"Always remember, programming is just like life. It might seem hard at first, but every mistake is an opportunity to learn and grow. Don\\'t be discouraged by errors or unexpected results. Just keep trying, and with each attempt, you\\'re getting closer to your goal. The sky is the limit, so dream big and keep coding!\"\\n- Barbie"
                    },
                    {
                        "username": "shouvik32",
                        "content": "#VERY Easy to UNDERSTAND\\n#UPVOTE IF YOU LIKE \\n\\nSELECT Department.name AS Department,Employee.name AS Employee,salary\\nFROM Employee\\nINNER JOIN Department ON Employee.departmentId=Department.id \\nWHERE(departmentId,Salary) IN \\n(\\nSELECT departmentId, MAX(Salary) FROM Employee\\nGROUP BY departmentId\\n)"
                    },
                    {
                        "username": "alfej136",
                        "content": "did anyone had written the query in T-SQL ? if yes then can you please reply the answer...."
                    },
                    {
                        "username": "Zivko",
                        "content": "WITH CTE AS\\n(SELECT RANK () OVER (PARTITION BY d.name ORDER BY e.salary DESC) AS rank, e.name AS Employee, d.name AS Department, e.salary AS Salary\\nFROM Employee AS e\\nINNER JOIN Department AS d\\nON e.departmentid = d.id)\\n\\nSELECT Employee, Department, Salary\\nFROM CTE\\nWHERE rank = 1"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n)"
                    },
                    {
                        "username": "user8428J",
                        "content": "select d.name as Department,e.Employee,e.Salary\\nfrom\\n((select name as Employee,departmentId, Salary, rank() over(partition by departmentId order by salary desc) as \\'rank\\'\\nfrom employee) as e inner join department as d\\non e.departmentId = d.id)\\nwhere e.rank=1\\norder by e.rank"
                    },
                    {
                        "username": "Anmol_29",
                        "content": "with cte as(\\n  select b.name as dept,a.name,a.salary from Employee a inner join Department b on a.departmentId = b.id\\n),\\ncte1 as(\\n  select *, dense_rank() over(partition by dept order by salary desc) as rnk from cte\\n)\\n\\nselect dept as Department, name as Employee, salary from cte1 where rnk = 1;"
                    }
                ]
            },
            {
                "id": 1985404,
                "content": [
                    {
                        "username": "wheatsnackbread",
                        "content": "T-SQL using subqueries:\\n\\n/* Write your T-SQL query statement below */\\n\\nSELECT Department.name AS Department, Employee.name AS Employee, Employee.salary AS Salary FROM\\n((SELECT departmentId, MAX(salary) AS maxSalary FROM Employee GROUP BY departmentId) sub LEFT JOIN Employee on sub.maxSalary = Employee.salary AND sub.departmentId = Employee.departmentId)  INNER JOIN Department ON Employee.departmentId = Department.id;"
                    },
                    {
                        "username": "aryan1113",
                        "content": "Why is the discussion section flooded with solutions :/"
                    },
                    {
                        "username": "Jasskaran0007",
                        "content": "While doing this question I came across a very important concept of GROUP BY clause, which can be ignored when first time coming across the GROUP BY clause, which is, that the columns which are not included in the GROUP BY clause must be a part of aggregate functions like MAX, MIN, SUM, AVG, otherwise it can lead to an error.\\nWhich means queries like, \\nSELECT Department.name AS Department, Employee.name AS Employee, MAX(salary) AS Salary FROM Employee JOIN Department ON Employee.departmentId=Department.id GROUP BY Department.id.\\nwont work.\\n\\n\\nHope I am not the only one."
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "\"Always remember, programming is just like life. It might seem hard at first, but every mistake is an opportunity to learn and grow. Don\\'t be discouraged by errors or unexpected results. Just keep trying, and with each attempt, you\\'re getting closer to your goal. The sky is the limit, so dream big and keep coding!\"\\n- Barbie"
                    },
                    {
                        "username": "shouvik32",
                        "content": "#VERY Easy to UNDERSTAND\\n#UPVOTE IF YOU LIKE \\n\\nSELECT Department.name AS Department,Employee.name AS Employee,salary\\nFROM Employee\\nINNER JOIN Department ON Employee.departmentId=Department.id \\nWHERE(departmentId,Salary) IN \\n(\\nSELECT departmentId, MAX(Salary) FROM Employee\\nGROUP BY departmentId\\n)"
                    },
                    {
                        "username": "alfej136",
                        "content": "did anyone had written the query in T-SQL ? if yes then can you please reply the answer...."
                    },
                    {
                        "username": "Zivko",
                        "content": "WITH CTE AS\\n(SELECT RANK () OVER (PARTITION BY d.name ORDER BY e.salary DESC) AS rank, e.name AS Employee, d.name AS Department, e.salary AS Salary\\nFROM Employee AS e\\nINNER JOIN Department AS d\\nON e.departmentid = d.id)\\n\\nSELECT Employee, Department, Salary\\nFROM CTE\\nWHERE rank = 1"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n)"
                    },
                    {
                        "username": "user8428J",
                        "content": "select d.name as Department,e.Employee,e.Salary\\nfrom\\n((select name as Employee,departmentId, Salary, rank() over(partition by departmentId order by salary desc) as \\'rank\\'\\nfrom employee) as e inner join department as d\\non e.departmentId = d.id)\\nwhere e.rank=1\\norder by e.rank"
                    },
                    {
                        "username": "Anmol_29",
                        "content": "with cte as(\\n  select b.name as dept,a.name,a.salary from Employee a inner join Department b on a.departmentId = b.id\\n),\\ncte1 as(\\n  select *, dense_rank() over(partition by dept order by salary desc) as rnk from cte\\n)\\n\\nselect dept as Department, name as Employee, salary from cte1 where rnk = 1;"
                    }
                ]
            },
            {
                "id": 1975666,
                "content": [
                    {
                        "username": "wheatsnackbread",
                        "content": "T-SQL using subqueries:\\n\\n/* Write your T-SQL query statement below */\\n\\nSELECT Department.name AS Department, Employee.name AS Employee, Employee.salary AS Salary FROM\\n((SELECT departmentId, MAX(salary) AS maxSalary FROM Employee GROUP BY departmentId) sub LEFT JOIN Employee on sub.maxSalary = Employee.salary AND sub.departmentId = Employee.departmentId)  INNER JOIN Department ON Employee.departmentId = Department.id;"
                    },
                    {
                        "username": "aryan1113",
                        "content": "Why is the discussion section flooded with solutions :/"
                    },
                    {
                        "username": "Jasskaran0007",
                        "content": "While doing this question I came across a very important concept of GROUP BY clause, which can be ignored when first time coming across the GROUP BY clause, which is, that the columns which are not included in the GROUP BY clause must be a part of aggregate functions like MAX, MIN, SUM, AVG, otherwise it can lead to an error.\\nWhich means queries like, \\nSELECT Department.name AS Department, Employee.name AS Employee, MAX(salary) AS Salary FROM Employee JOIN Department ON Employee.departmentId=Department.id GROUP BY Department.id.\\nwont work.\\n\\n\\nHope I am not the only one."
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "\"Always remember, programming is just like life. It might seem hard at first, but every mistake is an opportunity to learn and grow. Don\\'t be discouraged by errors or unexpected results. Just keep trying, and with each attempt, you\\'re getting closer to your goal. The sky is the limit, so dream big and keep coding!\"\\n- Barbie"
                    },
                    {
                        "username": "shouvik32",
                        "content": "#VERY Easy to UNDERSTAND\\n#UPVOTE IF YOU LIKE \\n\\nSELECT Department.name AS Department,Employee.name AS Employee,salary\\nFROM Employee\\nINNER JOIN Department ON Employee.departmentId=Department.id \\nWHERE(departmentId,Salary) IN \\n(\\nSELECT departmentId, MAX(Salary) FROM Employee\\nGROUP BY departmentId\\n)"
                    },
                    {
                        "username": "alfej136",
                        "content": "did anyone had written the query in T-SQL ? if yes then can you please reply the answer...."
                    },
                    {
                        "username": "Zivko",
                        "content": "WITH CTE AS\\n(SELECT RANK () OVER (PARTITION BY d.name ORDER BY e.salary DESC) AS rank, e.name AS Employee, d.name AS Department, e.salary AS Salary\\nFROM Employee AS e\\nINNER JOIN Department AS d\\nON e.departmentid = d.id)\\n\\nSELECT Employee, Department, Salary\\nFROM CTE\\nWHERE rank = 1"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n)"
                    },
                    {
                        "username": "user8428J",
                        "content": "select d.name as Department,e.Employee,e.Salary\\nfrom\\n((select name as Employee,departmentId, Salary, rank() over(partition by departmentId order by salary desc) as \\'rank\\'\\nfrom employee) as e inner join department as d\\non e.departmentId = d.id)\\nwhere e.rank=1\\norder by e.rank"
                    },
                    {
                        "username": "Anmol_29",
                        "content": "with cte as(\\n  select b.name as dept,a.name,a.salary from Employee a inner join Department b on a.departmentId = b.id\\n),\\ncte1 as(\\n  select *, dense_rank() over(partition by dept order by salary desc) as rnk from cte\\n)\\n\\nselect dept as Department, name as Employee, salary from cte1 where rnk = 1;"
                    }
                ]
            },
            {
                "id": 1967834,
                "content": [
                    {
                        "username": "wheatsnackbread",
                        "content": "T-SQL using subqueries:\\n\\n/* Write your T-SQL query statement below */\\n\\nSELECT Department.name AS Department, Employee.name AS Employee, Employee.salary AS Salary FROM\\n((SELECT departmentId, MAX(salary) AS maxSalary FROM Employee GROUP BY departmentId) sub LEFT JOIN Employee on sub.maxSalary = Employee.salary AND sub.departmentId = Employee.departmentId)  INNER JOIN Department ON Employee.departmentId = Department.id;"
                    },
                    {
                        "username": "aryan1113",
                        "content": "Why is the discussion section flooded with solutions :/"
                    },
                    {
                        "username": "Jasskaran0007",
                        "content": "While doing this question I came across a very important concept of GROUP BY clause, which can be ignored when first time coming across the GROUP BY clause, which is, that the columns which are not included in the GROUP BY clause must be a part of aggregate functions like MAX, MIN, SUM, AVG, otherwise it can lead to an error.\\nWhich means queries like, \\nSELECT Department.name AS Department, Employee.name AS Employee, MAX(salary) AS Salary FROM Employee JOIN Department ON Employee.departmentId=Department.id GROUP BY Department.id.\\nwont work.\\n\\n\\nHope I am not the only one."
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "\"Always remember, programming is just like life. It might seem hard at first, but every mistake is an opportunity to learn and grow. Don\\'t be discouraged by errors or unexpected results. Just keep trying, and with each attempt, you\\'re getting closer to your goal. The sky is the limit, so dream big and keep coding!\"\\n- Barbie"
                    },
                    {
                        "username": "shouvik32",
                        "content": "#VERY Easy to UNDERSTAND\\n#UPVOTE IF YOU LIKE \\n\\nSELECT Department.name AS Department,Employee.name AS Employee,salary\\nFROM Employee\\nINNER JOIN Department ON Employee.departmentId=Department.id \\nWHERE(departmentId,Salary) IN \\n(\\nSELECT departmentId, MAX(Salary) FROM Employee\\nGROUP BY departmentId\\n)"
                    },
                    {
                        "username": "alfej136",
                        "content": "did anyone had written the query in T-SQL ? if yes then can you please reply the answer...."
                    },
                    {
                        "username": "Zivko",
                        "content": "WITH CTE AS\\n(SELECT RANK () OVER (PARTITION BY d.name ORDER BY e.salary DESC) AS rank, e.name AS Employee, d.name AS Department, e.salary AS Salary\\nFROM Employee AS e\\nINNER JOIN Department AS d\\nON e.departmentid = d.id)\\n\\nSELECT Employee, Department, Salary\\nFROM CTE\\nWHERE rank = 1"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n)"
                    },
                    {
                        "username": "user8428J",
                        "content": "select d.name as Department,e.Employee,e.Salary\\nfrom\\n((select name as Employee,departmentId, Salary, rank() over(partition by departmentId order by salary desc) as \\'rank\\'\\nfrom employee) as e inner join department as d\\non e.departmentId = d.id)\\nwhere e.rank=1\\norder by e.rank"
                    },
                    {
                        "username": "Anmol_29",
                        "content": "with cte as(\\n  select b.name as dept,a.name,a.salary from Employee a inner join Department b on a.departmentId = b.id\\n),\\ncte1 as(\\n  select *, dense_rank() over(partition by dept order by salary desc) as rnk from cte\\n)\\n\\nselect dept as Department, name as Employee, salary from cte1 where rnk = 1;"
                    }
                ]
            },
            {
                "id": 1883127,
                "content": [
                    {
                        "username": "wheatsnackbread",
                        "content": "T-SQL using subqueries:\\n\\n/* Write your T-SQL query statement below */\\n\\nSELECT Department.name AS Department, Employee.name AS Employee, Employee.salary AS Salary FROM\\n((SELECT departmentId, MAX(salary) AS maxSalary FROM Employee GROUP BY departmentId) sub LEFT JOIN Employee on sub.maxSalary = Employee.salary AND sub.departmentId = Employee.departmentId)  INNER JOIN Department ON Employee.departmentId = Department.id;"
                    },
                    {
                        "username": "aryan1113",
                        "content": "Why is the discussion section flooded with solutions :/"
                    },
                    {
                        "username": "Jasskaran0007",
                        "content": "While doing this question I came across a very important concept of GROUP BY clause, which can be ignored when first time coming across the GROUP BY clause, which is, that the columns which are not included in the GROUP BY clause must be a part of aggregate functions like MAX, MIN, SUM, AVG, otherwise it can lead to an error.\\nWhich means queries like, \\nSELECT Department.name AS Department, Employee.name AS Employee, MAX(salary) AS Salary FROM Employee JOIN Department ON Employee.departmentId=Department.id GROUP BY Department.id.\\nwont work.\\n\\n\\nHope I am not the only one."
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "\"Always remember, programming is just like life. It might seem hard at first, but every mistake is an opportunity to learn and grow. Don\\'t be discouraged by errors or unexpected results. Just keep trying, and with each attempt, you\\'re getting closer to your goal. The sky is the limit, so dream big and keep coding!\"\\n- Barbie"
                    },
                    {
                        "username": "shouvik32",
                        "content": "#VERY Easy to UNDERSTAND\\n#UPVOTE IF YOU LIKE \\n\\nSELECT Department.name AS Department,Employee.name AS Employee,salary\\nFROM Employee\\nINNER JOIN Department ON Employee.departmentId=Department.id \\nWHERE(departmentId,Salary) IN \\n(\\nSELECT departmentId, MAX(Salary) FROM Employee\\nGROUP BY departmentId\\n)"
                    },
                    {
                        "username": "alfej136",
                        "content": "did anyone had written the query in T-SQL ? if yes then can you please reply the answer...."
                    },
                    {
                        "username": "Zivko",
                        "content": "WITH CTE AS\\n(SELECT RANK () OVER (PARTITION BY d.name ORDER BY e.salary DESC) AS rank, e.name AS Employee, d.name AS Department, e.salary AS Salary\\nFROM Employee AS e\\nINNER JOIN Department AS d\\nON e.departmentid = d.id)\\n\\nSELECT Employee, Department, Salary\\nFROM CTE\\nWHERE rank = 1"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n)"
                    },
                    {
                        "username": "user8428J",
                        "content": "select d.name as Department,e.Employee,e.Salary\\nfrom\\n((select name as Employee,departmentId, Salary, rank() over(partition by departmentId order by salary desc) as \\'rank\\'\\nfrom employee) as e inner join department as d\\non e.departmentId = d.id)\\nwhere e.rank=1\\norder by e.rank"
                    },
                    {
                        "username": "Anmol_29",
                        "content": "with cte as(\\n  select b.name as dept,a.name,a.salary from Employee a inner join Department b on a.departmentId = b.id\\n),\\ncte1 as(\\n  select *, dense_rank() over(partition by dept order by salary desc) as rnk from cte\\n)\\n\\nselect dept as Department, name as Employee, salary from cte1 where rnk = 1;"
                    }
                ]
            },
            {
                "id": 1873440,
                "content": [
                    {
                        "username": "wheatsnackbread",
                        "content": "T-SQL using subqueries:\\n\\n/* Write your T-SQL query statement below */\\n\\nSELECT Department.name AS Department, Employee.name AS Employee, Employee.salary AS Salary FROM\\n((SELECT departmentId, MAX(salary) AS maxSalary FROM Employee GROUP BY departmentId) sub LEFT JOIN Employee on sub.maxSalary = Employee.salary AND sub.departmentId = Employee.departmentId)  INNER JOIN Department ON Employee.departmentId = Department.id;"
                    },
                    {
                        "username": "aryan1113",
                        "content": "Why is the discussion section flooded with solutions :/"
                    },
                    {
                        "username": "Jasskaran0007",
                        "content": "While doing this question I came across a very important concept of GROUP BY clause, which can be ignored when first time coming across the GROUP BY clause, which is, that the columns which are not included in the GROUP BY clause must be a part of aggregate functions like MAX, MIN, SUM, AVG, otherwise it can lead to an error.\\nWhich means queries like, \\nSELECT Department.name AS Department, Employee.name AS Employee, MAX(salary) AS Salary FROM Employee JOIN Department ON Employee.departmentId=Department.id GROUP BY Department.id.\\nwont work.\\n\\n\\nHope I am not the only one."
                    },
                    {
                        "username": "MitchMountainCoding",
                        "content": "\"Always remember, programming is just like life. It might seem hard at first, but every mistake is an opportunity to learn and grow. Don\\'t be discouraged by errors or unexpected results. Just keep trying, and with each attempt, you\\'re getting closer to your goal. The sky is the limit, so dream big and keep coding!\"\\n- Barbie"
                    },
                    {
                        "username": "shouvik32",
                        "content": "#VERY Easy to UNDERSTAND\\n#UPVOTE IF YOU LIKE \\n\\nSELECT Department.name AS Department,Employee.name AS Employee,salary\\nFROM Employee\\nINNER JOIN Department ON Employee.departmentId=Department.id \\nWHERE(departmentId,Salary) IN \\n(\\nSELECT departmentId, MAX(Salary) FROM Employee\\nGROUP BY departmentId\\n)"
                    },
                    {
                        "username": "alfej136",
                        "content": "did anyone had written the query in T-SQL ? if yes then can you please reply the answer...."
                    },
                    {
                        "username": "Zivko",
                        "content": "WITH CTE AS\\n(SELECT RANK () OVER (PARTITION BY d.name ORDER BY e.salary DESC) AS rank, e.name AS Employee, d.name AS Department, e.salary AS Salary\\nFROM Employee AS e\\nINNER JOIN Department AS d\\nON e.departmentid = d.id)\\n\\nSELECT Employee, Department, Salary\\nFROM CTE\\nWHERE rank = 1"
                    },
                    {
                        "username": "minhphamduy",
                        "content": "# Write your MySQL query statement below\\n\\nselect d.name as Department, e.name as Employee, e.salary as Salary\\nfrom department d left join employee e on xxqd.id = e.departmentId\\nwhere e.salary = (\\n  select max(salary) \\n  from employee \\n  where departmentId = d.id\\n)"
                    },
                    {
                        "username": "user8428J",
                        "content": "select d.name as Department,e.Employee,e.Salary\\nfrom\\n((select name as Employee,departmentId, Salary, rank() over(partition by departmentId order by salary desc) as \\'rank\\'\\nfrom employee) as e inner join department as d\\non e.departmentId = d.id)\\nwhere e.rank=1\\norder by e.rank"
                    },
                    {
                        "username": "Anmol_29",
                        "content": "with cte as(\\n  select b.name as dept,a.name,a.salary from Employee a inner join Department b on a.departmentId = b.id\\n),\\ncte1 as(\\n  select *, dense_rank() over(partition by dept order by salary desc) as rnk from cte\\n)\\n\\nselect dept as Department, name as Employee, salary from cte1 where rnk = 1;"
                    }
                ]
            },
            {
                "id": 1872239,
                "content": [
                    {
                        "username": "user9299fG",
                        "content": "Running the query gives the result as Accepted but When submitting it the results shows as Wrong Answer and the Input and the Expected output are showing results of a different database"
                    },
                    {
                        "username": "shivamj11",
                        "content": "try to use dense_rank function, join, \\n\\n[solution](https://leetcode.com/problems/department-highest-salary/solutions/3430521/mysql-dense-rank/)"
                    },
                    {
                        "username": "bedmuthaapoorv",
                        "content": "should be tagged easy!\\n"
                    },
                    {
                        "username": "awnishsingh",
                        "content": "select Department.name as Department, Employee.name as Employee,\\n (Employee.salary) as Salary from\\nEmployee inner join\\n Department on Employee.departmentId=Department.id\\n where (departmentId ,salary ) in\\n (select departmentId ,max(salary) as salary from Employee group by departmentId)\\n\\n\\nfirst you perform the inner join operation than extract max(salary) and group by department id \\n"
                    },
                    {
                        "username": "sgodbole11",
                        "content": "--Oracle\\nwith sachin as\\n(select d.Name as Department, e.Name as Employee, e.Salary as Salary, \\nrank() over(PARTITION by d.Name order by Salary desc) as rank\\nfrom Employee e join Department d on e.DepartmentId=d.Id)\\nselect Department,Employee,Salary from sachin where rank=1;"
                    },
                    {
                        "username": "Puneet72",
                        "content": "with cte as (select departmentId ,name,salary from Employee),\\ncte2 as (select id,name from Department)\\n\\nselect  Department, Employee, Salary\\nfrom (select \\nb.name as Department,a.name Employee,a.salary as Salary,dense_rank() over (partition by b.name  order by a.salary desc)  as rnk\\nfrom \\ncte a \\nleft join cte2 b on \\na.departmentId = b.id\\n) a where rnk=1\\n"
                    },
                    {
                        "username": "shubhradeep23",
                        "content": "Simple solution WITHOUT JOIN\\n\\n\\nSELECT Department.name AS Department ,Employee.name AS Employee, Employee.salary\\nFROM Department,Employee  \\nWHERE Employee.departmentId=Department.id and (departmentId, salary) IN\\n(SELECT departmentId,MAX(salary) FROM Employee GROUP BY departmentId) ;"
                    },
                    {
                        "username": "michaelm926",
                        "content": "Can someone correct my code please, i\\'m just a beginner, have not come across the MAX and GROUP BY syntax, SO I wanted to use UNION, below is my code:\\nSELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\nFROM employee e\\nJOIN department d ON e.departmentId = d.id\\nORDER BY e.departmentId ASC, salary DESC\\nLIMIT 2\\nUNION\\nSELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\nFROM employee e\\nJOIN department d ON e.departmentId = d.id\\nORDER BY e.departmentId DESC, salary DESC\\nLIMIT 1;\\n\\nI keep getting a run error over the \"union\" syntax, I dont know what\\'s wrong"
                    },
                    {
                        "username": "jjjho",
                        "content": "[why this didn\\'t work]\\nselect b.name as department, a.name as employee, salary\\nfrom (\\nselect *, rank() over (partition by departmentid order by salary desc) as rank \\nfrom employee\\n) a \\nleft join department b on a.departmentid = b.id\\nwhere a.rank = 1"
                    },
                    {
                        "username": "endocsc",
                        "content": "select Department, Employee, Salary\\nfrom (\\n    select d.name as Department, e.name as Employee, e.salary as Salary,   \\n    dense_rank() over(partition by e.departmentId order by e.salary desc) as \\'rank_salary\\'\\n    from Employee e \\n    left join Department d on e.departmentId = d.id) as A\\nwhere rank_salary = 1"
                    }
                ]
            },
            {
                "id": 1867467,
                "content": [
                    {
                        "username": "user9299fG",
                        "content": "Running the query gives the result as Accepted but When submitting it the results shows as Wrong Answer and the Input and the Expected output are showing results of a different database"
                    },
                    {
                        "username": "shivamj11",
                        "content": "try to use dense_rank function, join, \\n\\n[solution](https://leetcode.com/problems/department-highest-salary/solutions/3430521/mysql-dense-rank/)"
                    },
                    {
                        "username": "bedmuthaapoorv",
                        "content": "should be tagged easy!\\n"
                    },
                    {
                        "username": "awnishsingh",
                        "content": "select Department.name as Department, Employee.name as Employee,\\n (Employee.salary) as Salary from\\nEmployee inner join\\n Department on Employee.departmentId=Department.id\\n where (departmentId ,salary ) in\\n (select departmentId ,max(salary) as salary from Employee group by departmentId)\\n\\n\\nfirst you perform the inner join operation than extract max(salary) and group by department id \\n"
                    },
                    {
                        "username": "sgodbole11",
                        "content": "--Oracle\\nwith sachin as\\n(select d.Name as Department, e.Name as Employee, e.Salary as Salary, \\nrank() over(PARTITION by d.Name order by Salary desc) as rank\\nfrom Employee e join Department d on e.DepartmentId=d.Id)\\nselect Department,Employee,Salary from sachin where rank=1;"
                    },
                    {
                        "username": "Puneet72",
                        "content": "with cte as (select departmentId ,name,salary from Employee),\\ncte2 as (select id,name from Department)\\n\\nselect  Department, Employee, Salary\\nfrom (select \\nb.name as Department,a.name Employee,a.salary as Salary,dense_rank() over (partition by b.name  order by a.salary desc)  as rnk\\nfrom \\ncte a \\nleft join cte2 b on \\na.departmentId = b.id\\n) a where rnk=1\\n"
                    },
                    {
                        "username": "shubhradeep23",
                        "content": "Simple solution WITHOUT JOIN\\n\\n\\nSELECT Department.name AS Department ,Employee.name AS Employee, Employee.salary\\nFROM Department,Employee  \\nWHERE Employee.departmentId=Department.id and (departmentId, salary) IN\\n(SELECT departmentId,MAX(salary) FROM Employee GROUP BY departmentId) ;"
                    },
                    {
                        "username": "michaelm926",
                        "content": "Can someone correct my code please, i\\'m just a beginner, have not come across the MAX and GROUP BY syntax, SO I wanted to use UNION, below is my code:\\nSELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\nFROM employee e\\nJOIN department d ON e.departmentId = d.id\\nORDER BY e.departmentId ASC, salary DESC\\nLIMIT 2\\nUNION\\nSELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\nFROM employee e\\nJOIN department d ON e.departmentId = d.id\\nORDER BY e.departmentId DESC, salary DESC\\nLIMIT 1;\\n\\nI keep getting a run error over the \"union\" syntax, I dont know what\\'s wrong"
                    },
                    {
                        "username": "jjjho",
                        "content": "[why this didn\\'t work]\\nselect b.name as department, a.name as employee, salary\\nfrom (\\nselect *, rank() over (partition by departmentid order by salary desc) as rank \\nfrom employee\\n) a \\nleft join department b on a.departmentid = b.id\\nwhere a.rank = 1"
                    },
                    {
                        "username": "endocsc",
                        "content": "select Department, Employee, Salary\\nfrom (\\n    select d.name as Department, e.name as Employee, e.salary as Salary,   \\n    dense_rank() over(partition by e.departmentId order by e.salary desc) as \\'rank_salary\\'\\n    from Employee e \\n    left join Department d on e.departmentId = d.id) as A\\nwhere rank_salary = 1"
                    }
                ]
            },
            {
                "id": 1861291,
                "content": [
                    {
                        "username": "user9299fG",
                        "content": "Running the query gives the result as Accepted but When submitting it the results shows as Wrong Answer and the Input and the Expected output are showing results of a different database"
                    },
                    {
                        "username": "shivamj11",
                        "content": "try to use dense_rank function, join, \\n\\n[solution](https://leetcode.com/problems/department-highest-salary/solutions/3430521/mysql-dense-rank/)"
                    },
                    {
                        "username": "bedmuthaapoorv",
                        "content": "should be tagged easy!\\n"
                    },
                    {
                        "username": "awnishsingh",
                        "content": "select Department.name as Department, Employee.name as Employee,\\n (Employee.salary) as Salary from\\nEmployee inner join\\n Department on Employee.departmentId=Department.id\\n where (departmentId ,salary ) in\\n (select departmentId ,max(salary) as salary from Employee group by departmentId)\\n\\n\\nfirst you perform the inner join operation than extract max(salary) and group by department id \\n"
                    },
                    {
                        "username": "sgodbole11",
                        "content": "--Oracle\\nwith sachin as\\n(select d.Name as Department, e.Name as Employee, e.Salary as Salary, \\nrank() over(PARTITION by d.Name order by Salary desc) as rank\\nfrom Employee e join Department d on e.DepartmentId=d.Id)\\nselect Department,Employee,Salary from sachin where rank=1;"
                    },
                    {
                        "username": "Puneet72",
                        "content": "with cte as (select departmentId ,name,salary from Employee),\\ncte2 as (select id,name from Department)\\n\\nselect  Department, Employee, Salary\\nfrom (select \\nb.name as Department,a.name Employee,a.salary as Salary,dense_rank() over (partition by b.name  order by a.salary desc)  as rnk\\nfrom \\ncte a \\nleft join cte2 b on \\na.departmentId = b.id\\n) a where rnk=1\\n"
                    },
                    {
                        "username": "shubhradeep23",
                        "content": "Simple solution WITHOUT JOIN\\n\\n\\nSELECT Department.name AS Department ,Employee.name AS Employee, Employee.salary\\nFROM Department,Employee  \\nWHERE Employee.departmentId=Department.id and (departmentId, salary) IN\\n(SELECT departmentId,MAX(salary) FROM Employee GROUP BY departmentId) ;"
                    },
                    {
                        "username": "michaelm926",
                        "content": "Can someone correct my code please, i\\'m just a beginner, have not come across the MAX and GROUP BY syntax, SO I wanted to use UNION, below is my code:\\nSELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\nFROM employee e\\nJOIN department d ON e.departmentId = d.id\\nORDER BY e.departmentId ASC, salary DESC\\nLIMIT 2\\nUNION\\nSELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\nFROM employee e\\nJOIN department d ON e.departmentId = d.id\\nORDER BY e.departmentId DESC, salary DESC\\nLIMIT 1;\\n\\nI keep getting a run error over the \"union\" syntax, I dont know what\\'s wrong"
                    },
                    {
                        "username": "jjjho",
                        "content": "[why this didn\\'t work]\\nselect b.name as department, a.name as employee, salary\\nfrom (\\nselect *, rank() over (partition by departmentid order by salary desc) as rank \\nfrom employee\\n) a \\nleft join department b on a.departmentid = b.id\\nwhere a.rank = 1"
                    },
                    {
                        "username": "endocsc",
                        "content": "select Department, Employee, Salary\\nfrom (\\n    select d.name as Department, e.name as Employee, e.salary as Salary,   \\n    dense_rank() over(partition by e.departmentId order by e.salary desc) as \\'rank_salary\\'\\n    from Employee e \\n    left join Department d on e.departmentId = d.id) as A\\nwhere rank_salary = 1"
                    }
                ]
            },
            {
                "id": 1856474,
                "content": [
                    {
                        "username": "user9299fG",
                        "content": "Running the query gives the result as Accepted but When submitting it the results shows as Wrong Answer and the Input and the Expected output are showing results of a different database"
                    },
                    {
                        "username": "shivamj11",
                        "content": "try to use dense_rank function, join, \\n\\n[solution](https://leetcode.com/problems/department-highest-salary/solutions/3430521/mysql-dense-rank/)"
                    },
                    {
                        "username": "bedmuthaapoorv",
                        "content": "should be tagged easy!\\n"
                    },
                    {
                        "username": "awnishsingh",
                        "content": "select Department.name as Department, Employee.name as Employee,\\n (Employee.salary) as Salary from\\nEmployee inner join\\n Department on Employee.departmentId=Department.id\\n where (departmentId ,salary ) in\\n (select departmentId ,max(salary) as salary from Employee group by departmentId)\\n\\n\\nfirst you perform the inner join operation than extract max(salary) and group by department id \\n"
                    },
                    {
                        "username": "sgodbole11",
                        "content": "--Oracle\\nwith sachin as\\n(select d.Name as Department, e.Name as Employee, e.Salary as Salary, \\nrank() over(PARTITION by d.Name order by Salary desc) as rank\\nfrom Employee e join Department d on e.DepartmentId=d.Id)\\nselect Department,Employee,Salary from sachin where rank=1;"
                    },
                    {
                        "username": "Puneet72",
                        "content": "with cte as (select departmentId ,name,salary from Employee),\\ncte2 as (select id,name from Department)\\n\\nselect  Department, Employee, Salary\\nfrom (select \\nb.name as Department,a.name Employee,a.salary as Salary,dense_rank() over (partition by b.name  order by a.salary desc)  as rnk\\nfrom \\ncte a \\nleft join cte2 b on \\na.departmentId = b.id\\n) a where rnk=1\\n"
                    },
                    {
                        "username": "shubhradeep23",
                        "content": "Simple solution WITHOUT JOIN\\n\\n\\nSELECT Department.name AS Department ,Employee.name AS Employee, Employee.salary\\nFROM Department,Employee  \\nWHERE Employee.departmentId=Department.id and (departmentId, salary) IN\\n(SELECT departmentId,MAX(salary) FROM Employee GROUP BY departmentId) ;"
                    },
                    {
                        "username": "michaelm926",
                        "content": "Can someone correct my code please, i\\'m just a beginner, have not come across the MAX and GROUP BY syntax, SO I wanted to use UNION, below is my code:\\nSELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\nFROM employee e\\nJOIN department d ON e.departmentId = d.id\\nORDER BY e.departmentId ASC, salary DESC\\nLIMIT 2\\nUNION\\nSELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\nFROM employee e\\nJOIN department d ON e.departmentId = d.id\\nORDER BY e.departmentId DESC, salary DESC\\nLIMIT 1;\\n\\nI keep getting a run error over the \"union\" syntax, I dont know what\\'s wrong"
                    },
                    {
                        "username": "jjjho",
                        "content": "[why this didn\\'t work]\\nselect b.name as department, a.name as employee, salary\\nfrom (\\nselect *, rank() over (partition by departmentid order by salary desc) as rank \\nfrom employee\\n) a \\nleft join department b on a.departmentid = b.id\\nwhere a.rank = 1"
                    },
                    {
                        "username": "endocsc",
                        "content": "select Department, Employee, Salary\\nfrom (\\n    select d.name as Department, e.name as Employee, e.salary as Salary,   \\n    dense_rank() over(partition by e.departmentId order by e.salary desc) as \\'rank_salary\\'\\n    from Employee e \\n    left join Department d on e.departmentId = d.id) as A\\nwhere rank_salary = 1"
                    }
                ]
            },
            {
                "id": 1848258,
                "content": [
                    {
                        "username": "user9299fG",
                        "content": "Running the query gives the result as Accepted but When submitting it the results shows as Wrong Answer and the Input and the Expected output are showing results of a different database"
                    },
                    {
                        "username": "shivamj11",
                        "content": "try to use dense_rank function, join, \\n\\n[solution](https://leetcode.com/problems/department-highest-salary/solutions/3430521/mysql-dense-rank/)"
                    },
                    {
                        "username": "bedmuthaapoorv",
                        "content": "should be tagged easy!\\n"
                    },
                    {
                        "username": "awnishsingh",
                        "content": "select Department.name as Department, Employee.name as Employee,\\n (Employee.salary) as Salary from\\nEmployee inner join\\n Department on Employee.departmentId=Department.id\\n where (departmentId ,salary ) in\\n (select departmentId ,max(salary) as salary from Employee group by departmentId)\\n\\n\\nfirst you perform the inner join operation than extract max(salary) and group by department id \\n"
                    },
                    {
                        "username": "sgodbole11",
                        "content": "--Oracle\\nwith sachin as\\n(select d.Name as Department, e.Name as Employee, e.Salary as Salary, \\nrank() over(PARTITION by d.Name order by Salary desc) as rank\\nfrom Employee e join Department d on e.DepartmentId=d.Id)\\nselect Department,Employee,Salary from sachin where rank=1;"
                    },
                    {
                        "username": "Puneet72",
                        "content": "with cte as (select departmentId ,name,salary from Employee),\\ncte2 as (select id,name from Department)\\n\\nselect  Department, Employee, Salary\\nfrom (select \\nb.name as Department,a.name Employee,a.salary as Salary,dense_rank() over (partition by b.name  order by a.salary desc)  as rnk\\nfrom \\ncte a \\nleft join cte2 b on \\na.departmentId = b.id\\n) a where rnk=1\\n"
                    },
                    {
                        "username": "shubhradeep23",
                        "content": "Simple solution WITHOUT JOIN\\n\\n\\nSELECT Department.name AS Department ,Employee.name AS Employee, Employee.salary\\nFROM Department,Employee  \\nWHERE Employee.departmentId=Department.id and (departmentId, salary) IN\\n(SELECT departmentId,MAX(salary) FROM Employee GROUP BY departmentId) ;"
                    },
                    {
                        "username": "michaelm926",
                        "content": "Can someone correct my code please, i\\'m just a beginner, have not come across the MAX and GROUP BY syntax, SO I wanted to use UNION, below is my code:\\nSELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\nFROM employee e\\nJOIN department d ON e.departmentId = d.id\\nORDER BY e.departmentId ASC, salary DESC\\nLIMIT 2\\nUNION\\nSELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\nFROM employee e\\nJOIN department d ON e.departmentId = d.id\\nORDER BY e.departmentId DESC, salary DESC\\nLIMIT 1;\\n\\nI keep getting a run error over the \"union\" syntax, I dont know what\\'s wrong"
                    },
                    {
                        "username": "jjjho",
                        "content": "[why this didn\\'t work]\\nselect b.name as department, a.name as employee, salary\\nfrom (\\nselect *, rank() over (partition by departmentid order by salary desc) as rank \\nfrom employee\\n) a \\nleft join department b on a.departmentid = b.id\\nwhere a.rank = 1"
                    },
                    {
                        "username": "endocsc",
                        "content": "select Department, Employee, Salary\\nfrom (\\n    select d.name as Department, e.name as Employee, e.salary as Salary,   \\n    dense_rank() over(partition by e.departmentId order by e.salary desc) as \\'rank_salary\\'\\n    from Employee e \\n    left join Department d on e.departmentId = d.id) as A\\nwhere rank_salary = 1"
                    }
                ]
            },
            {
                "id": 1840390,
                "content": [
                    {
                        "username": "user9299fG",
                        "content": "Running the query gives the result as Accepted but When submitting it the results shows as Wrong Answer and the Input and the Expected output are showing results of a different database"
                    },
                    {
                        "username": "shivamj11",
                        "content": "try to use dense_rank function, join, \\n\\n[solution](https://leetcode.com/problems/department-highest-salary/solutions/3430521/mysql-dense-rank/)"
                    },
                    {
                        "username": "bedmuthaapoorv",
                        "content": "should be tagged easy!\\n"
                    },
                    {
                        "username": "awnishsingh",
                        "content": "select Department.name as Department, Employee.name as Employee,\\n (Employee.salary) as Salary from\\nEmployee inner join\\n Department on Employee.departmentId=Department.id\\n where (departmentId ,salary ) in\\n (select departmentId ,max(salary) as salary from Employee group by departmentId)\\n\\n\\nfirst you perform the inner join operation than extract max(salary) and group by department id \\n"
                    },
                    {
                        "username": "sgodbole11",
                        "content": "--Oracle\\nwith sachin as\\n(select d.Name as Department, e.Name as Employee, e.Salary as Salary, \\nrank() over(PARTITION by d.Name order by Salary desc) as rank\\nfrom Employee e join Department d on e.DepartmentId=d.Id)\\nselect Department,Employee,Salary from sachin where rank=1;"
                    },
                    {
                        "username": "Puneet72",
                        "content": "with cte as (select departmentId ,name,salary from Employee),\\ncte2 as (select id,name from Department)\\n\\nselect  Department, Employee, Salary\\nfrom (select \\nb.name as Department,a.name Employee,a.salary as Salary,dense_rank() over (partition by b.name  order by a.salary desc)  as rnk\\nfrom \\ncte a \\nleft join cte2 b on \\na.departmentId = b.id\\n) a where rnk=1\\n"
                    },
                    {
                        "username": "shubhradeep23",
                        "content": "Simple solution WITHOUT JOIN\\n\\n\\nSELECT Department.name AS Department ,Employee.name AS Employee, Employee.salary\\nFROM Department,Employee  \\nWHERE Employee.departmentId=Department.id and (departmentId, salary) IN\\n(SELECT departmentId,MAX(salary) FROM Employee GROUP BY departmentId) ;"
                    },
                    {
                        "username": "michaelm926",
                        "content": "Can someone correct my code please, i\\'m just a beginner, have not come across the MAX and GROUP BY syntax, SO I wanted to use UNION, below is my code:\\nSELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\nFROM employee e\\nJOIN department d ON e.departmentId = d.id\\nORDER BY e.departmentId ASC, salary DESC\\nLIMIT 2\\nUNION\\nSELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\nFROM employee e\\nJOIN department d ON e.departmentId = d.id\\nORDER BY e.departmentId DESC, salary DESC\\nLIMIT 1;\\n\\nI keep getting a run error over the \"union\" syntax, I dont know what\\'s wrong"
                    },
                    {
                        "username": "jjjho",
                        "content": "[why this didn\\'t work]\\nselect b.name as department, a.name as employee, salary\\nfrom (\\nselect *, rank() over (partition by departmentid order by salary desc) as rank \\nfrom employee\\n) a \\nleft join department b on a.departmentid = b.id\\nwhere a.rank = 1"
                    },
                    {
                        "username": "endocsc",
                        "content": "select Department, Employee, Salary\\nfrom (\\n    select d.name as Department, e.name as Employee, e.salary as Salary,   \\n    dense_rank() over(partition by e.departmentId order by e.salary desc) as \\'rank_salary\\'\\n    from Employee e \\n    left join Department d on e.departmentId = d.id) as A\\nwhere rank_salary = 1"
                    }
                ]
            },
            {
                "id": 1833864,
                "content": [
                    {
                        "username": "user9299fG",
                        "content": "Running the query gives the result as Accepted but When submitting it the results shows as Wrong Answer and the Input and the Expected output are showing results of a different database"
                    },
                    {
                        "username": "shivamj11",
                        "content": "try to use dense_rank function, join, \\n\\n[solution](https://leetcode.com/problems/department-highest-salary/solutions/3430521/mysql-dense-rank/)"
                    },
                    {
                        "username": "bedmuthaapoorv",
                        "content": "should be tagged easy!\\n"
                    },
                    {
                        "username": "awnishsingh",
                        "content": "select Department.name as Department, Employee.name as Employee,\\n (Employee.salary) as Salary from\\nEmployee inner join\\n Department on Employee.departmentId=Department.id\\n where (departmentId ,salary ) in\\n (select departmentId ,max(salary) as salary from Employee group by departmentId)\\n\\n\\nfirst you perform the inner join operation than extract max(salary) and group by department id \\n"
                    },
                    {
                        "username": "sgodbole11",
                        "content": "--Oracle\\nwith sachin as\\n(select d.Name as Department, e.Name as Employee, e.Salary as Salary, \\nrank() over(PARTITION by d.Name order by Salary desc) as rank\\nfrom Employee e join Department d on e.DepartmentId=d.Id)\\nselect Department,Employee,Salary from sachin where rank=1;"
                    },
                    {
                        "username": "Puneet72",
                        "content": "with cte as (select departmentId ,name,salary from Employee),\\ncte2 as (select id,name from Department)\\n\\nselect  Department, Employee, Salary\\nfrom (select \\nb.name as Department,a.name Employee,a.salary as Salary,dense_rank() over (partition by b.name  order by a.salary desc)  as rnk\\nfrom \\ncte a \\nleft join cte2 b on \\na.departmentId = b.id\\n) a where rnk=1\\n"
                    },
                    {
                        "username": "shubhradeep23",
                        "content": "Simple solution WITHOUT JOIN\\n\\n\\nSELECT Department.name AS Department ,Employee.name AS Employee, Employee.salary\\nFROM Department,Employee  \\nWHERE Employee.departmentId=Department.id and (departmentId, salary) IN\\n(SELECT departmentId,MAX(salary) FROM Employee GROUP BY departmentId) ;"
                    },
                    {
                        "username": "michaelm926",
                        "content": "Can someone correct my code please, i\\'m just a beginner, have not come across the MAX and GROUP BY syntax, SO I wanted to use UNION, below is my code:\\nSELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\nFROM employee e\\nJOIN department d ON e.departmentId = d.id\\nORDER BY e.departmentId ASC, salary DESC\\nLIMIT 2\\nUNION\\nSELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\nFROM employee e\\nJOIN department d ON e.departmentId = d.id\\nORDER BY e.departmentId DESC, salary DESC\\nLIMIT 1;\\n\\nI keep getting a run error over the \"union\" syntax, I dont know what\\'s wrong"
                    },
                    {
                        "username": "jjjho",
                        "content": "[why this didn\\'t work]\\nselect b.name as department, a.name as employee, salary\\nfrom (\\nselect *, rank() over (partition by departmentid order by salary desc) as rank \\nfrom employee\\n) a \\nleft join department b on a.departmentid = b.id\\nwhere a.rank = 1"
                    },
                    {
                        "username": "endocsc",
                        "content": "select Department, Employee, Salary\\nfrom (\\n    select d.name as Department, e.name as Employee, e.salary as Salary,   \\n    dense_rank() over(partition by e.departmentId order by e.salary desc) as \\'rank_salary\\'\\n    from Employee e \\n    left join Department d on e.departmentId = d.id) as A\\nwhere rank_salary = 1"
                    }
                ]
            },
            {
                "id": 1817099,
                "content": [
                    {
                        "username": "user9299fG",
                        "content": "Running the query gives the result as Accepted but When submitting it the results shows as Wrong Answer and the Input and the Expected output are showing results of a different database"
                    },
                    {
                        "username": "shivamj11",
                        "content": "try to use dense_rank function, join, \\n\\n[solution](https://leetcode.com/problems/department-highest-salary/solutions/3430521/mysql-dense-rank/)"
                    },
                    {
                        "username": "bedmuthaapoorv",
                        "content": "should be tagged easy!\\n"
                    },
                    {
                        "username": "awnishsingh",
                        "content": "select Department.name as Department, Employee.name as Employee,\\n (Employee.salary) as Salary from\\nEmployee inner join\\n Department on Employee.departmentId=Department.id\\n where (departmentId ,salary ) in\\n (select departmentId ,max(salary) as salary from Employee group by departmentId)\\n\\n\\nfirst you perform the inner join operation than extract max(salary) and group by department id \\n"
                    },
                    {
                        "username": "sgodbole11",
                        "content": "--Oracle\\nwith sachin as\\n(select d.Name as Department, e.Name as Employee, e.Salary as Salary, \\nrank() over(PARTITION by d.Name order by Salary desc) as rank\\nfrom Employee e join Department d on e.DepartmentId=d.Id)\\nselect Department,Employee,Salary from sachin where rank=1;"
                    },
                    {
                        "username": "Puneet72",
                        "content": "with cte as (select departmentId ,name,salary from Employee),\\ncte2 as (select id,name from Department)\\n\\nselect  Department, Employee, Salary\\nfrom (select \\nb.name as Department,a.name Employee,a.salary as Salary,dense_rank() over (partition by b.name  order by a.salary desc)  as rnk\\nfrom \\ncte a \\nleft join cte2 b on \\na.departmentId = b.id\\n) a where rnk=1\\n"
                    },
                    {
                        "username": "shubhradeep23",
                        "content": "Simple solution WITHOUT JOIN\\n\\n\\nSELECT Department.name AS Department ,Employee.name AS Employee, Employee.salary\\nFROM Department,Employee  \\nWHERE Employee.departmentId=Department.id and (departmentId, salary) IN\\n(SELECT departmentId,MAX(salary) FROM Employee GROUP BY departmentId) ;"
                    },
                    {
                        "username": "michaelm926",
                        "content": "Can someone correct my code please, i\\'m just a beginner, have not come across the MAX and GROUP BY syntax, SO I wanted to use UNION, below is my code:\\nSELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\nFROM employee e\\nJOIN department d ON e.departmentId = d.id\\nORDER BY e.departmentId ASC, salary DESC\\nLIMIT 2\\nUNION\\nSELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\nFROM employee e\\nJOIN department d ON e.departmentId = d.id\\nORDER BY e.departmentId DESC, salary DESC\\nLIMIT 1;\\n\\nI keep getting a run error over the \"union\" syntax, I dont know what\\'s wrong"
                    },
                    {
                        "username": "jjjho",
                        "content": "[why this didn\\'t work]\\nselect b.name as department, a.name as employee, salary\\nfrom (\\nselect *, rank() over (partition by departmentid order by salary desc) as rank \\nfrom employee\\n) a \\nleft join department b on a.departmentid = b.id\\nwhere a.rank = 1"
                    },
                    {
                        "username": "endocsc",
                        "content": "select Department, Employee, Salary\\nfrom (\\n    select d.name as Department, e.name as Employee, e.salary as Salary,   \\n    dense_rank() over(partition by e.departmentId order by e.salary desc) as \\'rank_salary\\'\\n    from Employee e \\n    left join Department d on e.departmentId = d.id) as A\\nwhere rank_salary = 1"
                    }
                ]
            },
            {
                "id": 1805118,
                "content": [
                    {
                        "username": "user9299fG",
                        "content": "Running the query gives the result as Accepted but When submitting it the results shows as Wrong Answer and the Input and the Expected output are showing results of a different database"
                    },
                    {
                        "username": "shivamj11",
                        "content": "try to use dense_rank function, join, \\n\\n[solution](https://leetcode.com/problems/department-highest-salary/solutions/3430521/mysql-dense-rank/)"
                    },
                    {
                        "username": "bedmuthaapoorv",
                        "content": "should be tagged easy!\\n"
                    },
                    {
                        "username": "awnishsingh",
                        "content": "select Department.name as Department, Employee.name as Employee,\\n (Employee.salary) as Salary from\\nEmployee inner join\\n Department on Employee.departmentId=Department.id\\n where (departmentId ,salary ) in\\n (select departmentId ,max(salary) as salary from Employee group by departmentId)\\n\\n\\nfirst you perform the inner join operation than extract max(salary) and group by department id \\n"
                    },
                    {
                        "username": "sgodbole11",
                        "content": "--Oracle\\nwith sachin as\\n(select d.Name as Department, e.Name as Employee, e.Salary as Salary, \\nrank() over(PARTITION by d.Name order by Salary desc) as rank\\nfrom Employee e join Department d on e.DepartmentId=d.Id)\\nselect Department,Employee,Salary from sachin where rank=1;"
                    },
                    {
                        "username": "Puneet72",
                        "content": "with cte as (select departmentId ,name,salary from Employee),\\ncte2 as (select id,name from Department)\\n\\nselect  Department, Employee, Salary\\nfrom (select \\nb.name as Department,a.name Employee,a.salary as Salary,dense_rank() over (partition by b.name  order by a.salary desc)  as rnk\\nfrom \\ncte a \\nleft join cte2 b on \\na.departmentId = b.id\\n) a where rnk=1\\n"
                    },
                    {
                        "username": "shubhradeep23",
                        "content": "Simple solution WITHOUT JOIN\\n\\n\\nSELECT Department.name AS Department ,Employee.name AS Employee, Employee.salary\\nFROM Department,Employee  \\nWHERE Employee.departmentId=Department.id and (departmentId, salary) IN\\n(SELECT departmentId,MAX(salary) FROM Employee GROUP BY departmentId) ;"
                    },
                    {
                        "username": "michaelm926",
                        "content": "Can someone correct my code please, i\\'m just a beginner, have not come across the MAX and GROUP BY syntax, SO I wanted to use UNION, below is my code:\\nSELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\nFROM employee e\\nJOIN department d ON e.departmentId = d.id\\nORDER BY e.departmentId ASC, salary DESC\\nLIMIT 2\\nUNION\\nSELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\nFROM employee e\\nJOIN department d ON e.departmentId = d.id\\nORDER BY e.departmentId DESC, salary DESC\\nLIMIT 1;\\n\\nI keep getting a run error over the \"union\" syntax, I dont know what\\'s wrong"
                    },
                    {
                        "username": "jjjho",
                        "content": "[why this didn\\'t work]\\nselect b.name as department, a.name as employee, salary\\nfrom (\\nselect *, rank() over (partition by departmentid order by salary desc) as rank \\nfrom employee\\n) a \\nleft join department b on a.departmentid = b.id\\nwhere a.rank = 1"
                    },
                    {
                        "username": "endocsc",
                        "content": "select Department, Employee, Salary\\nfrom (\\n    select d.name as Department, e.name as Employee, e.salary as Salary,   \\n    dense_rank() over(partition by e.departmentId order by e.salary desc) as \\'rank_salary\\'\\n    from Employee e \\n    left join Department d on e.departmentId = d.id) as A\\nwhere rank_salary = 1"
                    }
                ]
            },
            {
                "id": 1804485,
                "content": [
                    {
                        "username": "user9299fG",
                        "content": "Running the query gives the result as Accepted but When submitting it the results shows as Wrong Answer and the Input and the Expected output are showing results of a different database"
                    },
                    {
                        "username": "shivamj11",
                        "content": "try to use dense_rank function, join, \\n\\n[solution](https://leetcode.com/problems/department-highest-salary/solutions/3430521/mysql-dense-rank/)"
                    },
                    {
                        "username": "bedmuthaapoorv",
                        "content": "should be tagged easy!\\n"
                    },
                    {
                        "username": "awnishsingh",
                        "content": "select Department.name as Department, Employee.name as Employee,\\n (Employee.salary) as Salary from\\nEmployee inner join\\n Department on Employee.departmentId=Department.id\\n where (departmentId ,salary ) in\\n (select departmentId ,max(salary) as salary from Employee group by departmentId)\\n\\n\\nfirst you perform the inner join operation than extract max(salary) and group by department id \\n"
                    },
                    {
                        "username": "sgodbole11",
                        "content": "--Oracle\\nwith sachin as\\n(select d.Name as Department, e.Name as Employee, e.Salary as Salary, \\nrank() over(PARTITION by d.Name order by Salary desc) as rank\\nfrom Employee e join Department d on e.DepartmentId=d.Id)\\nselect Department,Employee,Salary from sachin where rank=1;"
                    },
                    {
                        "username": "Puneet72",
                        "content": "with cte as (select departmentId ,name,salary from Employee),\\ncte2 as (select id,name from Department)\\n\\nselect  Department, Employee, Salary\\nfrom (select \\nb.name as Department,a.name Employee,a.salary as Salary,dense_rank() over (partition by b.name  order by a.salary desc)  as rnk\\nfrom \\ncte a \\nleft join cte2 b on \\na.departmentId = b.id\\n) a where rnk=1\\n"
                    },
                    {
                        "username": "shubhradeep23",
                        "content": "Simple solution WITHOUT JOIN\\n\\n\\nSELECT Department.name AS Department ,Employee.name AS Employee, Employee.salary\\nFROM Department,Employee  \\nWHERE Employee.departmentId=Department.id and (departmentId, salary) IN\\n(SELECT departmentId,MAX(salary) FROM Employee GROUP BY departmentId) ;"
                    },
                    {
                        "username": "michaelm926",
                        "content": "Can someone correct my code please, i\\'m just a beginner, have not come across the MAX and GROUP BY syntax, SO I wanted to use UNION, below is my code:\\nSELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\nFROM employee e\\nJOIN department d ON e.departmentId = d.id\\nORDER BY e.departmentId ASC, salary DESC\\nLIMIT 2\\nUNION\\nSELECT d.name AS Department, e.name AS Employee, e.salary AS Salary\\nFROM employee e\\nJOIN department d ON e.departmentId = d.id\\nORDER BY e.departmentId DESC, salary DESC\\nLIMIT 1;\\n\\nI keep getting a run error over the \"union\" syntax, I dont know what\\'s wrong"
                    },
                    {
                        "username": "jjjho",
                        "content": "[why this didn\\'t work]\\nselect b.name as department, a.name as employee, salary\\nfrom (\\nselect *, rank() over (partition by departmentid order by salary desc) as rank \\nfrom employee\\n) a \\nleft join department b on a.departmentid = b.id\\nwhere a.rank = 1"
                    },
                    {
                        "username": "endocsc",
                        "content": "select Department, Employee, Salary\\nfrom (\\n    select d.name as Department, e.name as Employee, e.salary as Salary,   \\n    dense_rank() over(partition by e.departmentId order by e.salary desc) as \\'rank_salary\\'\\n    from Employee e \\n    left join Department d on e.departmentId = d.id) as A\\nwhere rank_salary = 1"
                    }
                ]
            },
            {
                "id": 1803042,
                "content": [
                    {
                        "username": "vinayakam19",
                        "content": "Using CTE\\n\\n `with highest_salary as (select e.name as employee, e.salary as Salary, d.name as Department, DENSE_RANK() OVER(PARTITION BY d.name order by Salary desc) as sal_rank from Employee e join Department d on e.departmentId = d.id)\\n\\nselect Department, Employee, Salary from highest_salary where sal_rank = 1;`"
                    },
                    {
                        "username": "abhilaash31270",
                        "content": "select d.name Department ,e.name Employee,e.salary Salary from Employee e inner join Department d on e.departmentId=d.id where \\n(departmentId,salary) in (select departmentId,max(salary) from employee group by departmentId);"
                    },
                    {
                        "username": "nishdhana15",
                        "content": "WITH ranktable AS\\n(SELECT d.name as Department ,e.name as Employee, e.salary as salary, DENSE_RANK() OVER(partition by d.name ORDER BY salary DESC ) as sranks\\nFROM employee as e\\nLEFT JOIN Department as d\\nON e.departmentid=d.id\\n)\\n\\nSELECT Department, Employee,salary\\nFROM ranktable\\nWHERE sranks = 1"
                    },
                    {
                        "username": "EdgarMartinezEsqueda",
                        "content": "`SELECT d.name 'Department', e.name 'Employee', e.salary 'Salary'\nFROM Employee e, Department d\nWHERE e.salary =  (SELECT MAX(salary) FROM Employee WHERE departmentId = d.id) AND e.departmentId = d.id;`\n\nThe 'AND' is just a validation to avoid duplicates"
                    },
                    {
                        "username": "vasanthav251995",
                        "content": "SELECT Department,Employee,Salary from\\n(SELECT d.NAME as Department,e.Name as Employee, e.Salary,\\nDENSE_RANK() over (partition by d.NAME order by e.SALARY Desc) RANK from Employee e\\nLEFT JOIN Department d\\nON e.DepartmentID=d.ID ) a\\nWHERE RANK<=1"
                    },
                    {
                        "username": "user5564YW",
                        "content": " `with joined_ as \\n(\\nselect e.name as Employee,e.salary as Salary ,d.name as Department  from\\nEmployee e\\nleft join\\nDepartment d\\non e.departmentId =d.id \\n) \\n\\nselect sub.Department , sub.Employee  , sub.Salary\\nfrom (\\nselect Department,Employee,Salary, dense_rank()over(partition by Department order by Salary desc) as rank_\\nfrom joined_ \\n) sub\\nwhere sub.rank_ =1;`"
                    },
                    {
                        "username": "omehdiakram",
                        "content": "WITH DEP AS (\\n    SELECT \\n        DISTINCT D.name AS Department, \\n        E1.name AS Employee, \\n        E1.salary AS salary\\n    FROM \\n        Employee E1 JOIN Department D ON E1.departmentId = D.id\\n    WHERE \\n        E1.salary in (SELECT MAX(salary) FROM EMPLOYEE E2 WHERE E2.departmentId = E1.departmentId)\\n)\\n\\nSELECT * FROM DEP;"
                    },
                    {
                        "username": "javedabdool13",
                        "content": "with cte as (\\nselect D.name as Department ,E.name as Employee,E.salary as Salary,\\ncase when max(E.salary) over(partition by D.name) = E.salary  then 1 else 0 end as x\\nfrom Employee E\\ninner join Department D on E.departmentId = D.id) \\n\\nselect DEpartment,Employee,Salary from cte \\nwhere x = 1\\n"
                    },
                    {
                        "username": "Ansh123",
                        "content": "`with dept as (select d.id, d.name,\\nmax(salary) as Salary\\nfrom Employee e inner join Department d on e.departmentId=d.id\\ngroup by 1,2)\\nselect d.name as Department, e.name as Employee, d.Salary from Employee e inner join dept d on e.departmentId=d.id and e.salary=d.Salary`"
                    },
                    {
                        "username": "asifanas",
                        "content": "SELECT d.name as Department, temp.name as Employee, temp.salary as Salary FROM department d inner join (SELECT e.name, temp.salary, temp.departmentid FROM employee e inner join (SELECT departmentid, max(salary) as salary FROM employee group by departmentid) as temp on(temp.departmentid=e.departmentid and e.salary=temp.salary)) as temp on(temp.departmentid=d.id);"
                    }
                ]
            },
            {
                "id": 1801465,
                "content": [
                    {
                        "username": "vinayakam19",
                        "content": "Using CTE\\n\\n `with highest_salary as (select e.name as employee, e.salary as Salary, d.name as Department, DENSE_RANK() OVER(PARTITION BY d.name order by Salary desc) as sal_rank from Employee e join Department d on e.departmentId = d.id)\\n\\nselect Department, Employee, Salary from highest_salary where sal_rank = 1;`"
                    },
                    {
                        "username": "abhilaash31270",
                        "content": "select d.name Department ,e.name Employee,e.salary Salary from Employee e inner join Department d on e.departmentId=d.id where \\n(departmentId,salary) in (select departmentId,max(salary) from employee group by departmentId);"
                    },
                    {
                        "username": "nishdhana15",
                        "content": "WITH ranktable AS\\n(SELECT d.name as Department ,e.name as Employee, e.salary as salary, DENSE_RANK() OVER(partition by d.name ORDER BY salary DESC ) as sranks\\nFROM employee as e\\nLEFT JOIN Department as d\\nON e.departmentid=d.id\\n)\\n\\nSELECT Department, Employee,salary\\nFROM ranktable\\nWHERE sranks = 1"
                    },
                    {
                        "username": "EdgarMartinezEsqueda",
                        "content": "`SELECT d.name 'Department', e.name 'Employee', e.salary 'Salary'\nFROM Employee e, Department d\nWHERE e.salary =  (SELECT MAX(salary) FROM Employee WHERE departmentId = d.id) AND e.departmentId = d.id;`\n\nThe 'AND' is just a validation to avoid duplicates"
                    },
                    {
                        "username": "vasanthav251995",
                        "content": "SELECT Department,Employee,Salary from\\n(SELECT d.NAME as Department,e.Name as Employee, e.Salary,\\nDENSE_RANK() over (partition by d.NAME order by e.SALARY Desc) RANK from Employee e\\nLEFT JOIN Department d\\nON e.DepartmentID=d.ID ) a\\nWHERE RANK<=1"
                    },
                    {
                        "username": "user5564YW",
                        "content": " `with joined_ as \\n(\\nselect e.name as Employee,e.salary as Salary ,d.name as Department  from\\nEmployee e\\nleft join\\nDepartment d\\non e.departmentId =d.id \\n) \\n\\nselect sub.Department , sub.Employee  , sub.Salary\\nfrom (\\nselect Department,Employee,Salary, dense_rank()over(partition by Department order by Salary desc) as rank_\\nfrom joined_ \\n) sub\\nwhere sub.rank_ =1;`"
                    },
                    {
                        "username": "omehdiakram",
                        "content": "WITH DEP AS (\\n    SELECT \\n        DISTINCT D.name AS Department, \\n        E1.name AS Employee, \\n        E1.salary AS salary\\n    FROM \\n        Employee E1 JOIN Department D ON E1.departmentId = D.id\\n    WHERE \\n        E1.salary in (SELECT MAX(salary) FROM EMPLOYEE E2 WHERE E2.departmentId = E1.departmentId)\\n)\\n\\nSELECT * FROM DEP;"
                    },
                    {
                        "username": "javedabdool13",
                        "content": "with cte as (\\nselect D.name as Department ,E.name as Employee,E.salary as Salary,\\ncase when max(E.salary) over(partition by D.name) = E.salary  then 1 else 0 end as x\\nfrom Employee E\\ninner join Department D on E.departmentId = D.id) \\n\\nselect DEpartment,Employee,Salary from cte \\nwhere x = 1\\n"
                    },
                    {
                        "username": "Ansh123",
                        "content": "`with dept as (select d.id, d.name,\\nmax(salary) as Salary\\nfrom Employee e inner join Department d on e.departmentId=d.id\\ngroup by 1,2)\\nselect d.name as Department, e.name as Employee, d.Salary from Employee e inner join dept d on e.departmentId=d.id and e.salary=d.Salary`"
                    },
                    {
                        "username": "asifanas",
                        "content": "SELECT d.name as Department, temp.name as Employee, temp.salary as Salary FROM department d inner join (SELECT e.name, temp.salary, temp.departmentid FROM employee e inner join (SELECT departmentid, max(salary) as salary FROM employee group by departmentid) as temp on(temp.departmentid=e.departmentid and e.salary=temp.salary)) as temp on(temp.departmentid=d.id);"
                    }
                ]
            },
            {
                "id": 1795189,
                "content": [
                    {
                        "username": "vinayakam19",
                        "content": "Using CTE\\n\\n `with highest_salary as (select e.name as employee, e.salary as Salary, d.name as Department, DENSE_RANK() OVER(PARTITION BY d.name order by Salary desc) as sal_rank from Employee e join Department d on e.departmentId = d.id)\\n\\nselect Department, Employee, Salary from highest_salary where sal_rank = 1;`"
                    },
                    {
                        "username": "abhilaash31270",
                        "content": "select d.name Department ,e.name Employee,e.salary Salary from Employee e inner join Department d on e.departmentId=d.id where \\n(departmentId,salary) in (select departmentId,max(salary) from employee group by departmentId);"
                    },
                    {
                        "username": "nishdhana15",
                        "content": "WITH ranktable AS\\n(SELECT d.name as Department ,e.name as Employee, e.salary as salary, DENSE_RANK() OVER(partition by d.name ORDER BY salary DESC ) as sranks\\nFROM employee as e\\nLEFT JOIN Department as d\\nON e.departmentid=d.id\\n)\\n\\nSELECT Department, Employee,salary\\nFROM ranktable\\nWHERE sranks = 1"
                    },
                    {
                        "username": "EdgarMartinezEsqueda",
                        "content": "`SELECT d.name 'Department', e.name 'Employee', e.salary 'Salary'\nFROM Employee e, Department d\nWHERE e.salary =  (SELECT MAX(salary) FROM Employee WHERE departmentId = d.id) AND e.departmentId = d.id;`\n\nThe 'AND' is just a validation to avoid duplicates"
                    },
                    {
                        "username": "vasanthav251995",
                        "content": "SELECT Department,Employee,Salary from\\n(SELECT d.NAME as Department,e.Name as Employee, e.Salary,\\nDENSE_RANK() over (partition by d.NAME order by e.SALARY Desc) RANK from Employee e\\nLEFT JOIN Department d\\nON e.DepartmentID=d.ID ) a\\nWHERE RANK<=1"
                    },
                    {
                        "username": "user5564YW",
                        "content": " `with joined_ as \\n(\\nselect e.name as Employee,e.salary as Salary ,d.name as Department  from\\nEmployee e\\nleft join\\nDepartment d\\non e.departmentId =d.id \\n) \\n\\nselect sub.Department , sub.Employee  , sub.Salary\\nfrom (\\nselect Department,Employee,Salary, dense_rank()over(partition by Department order by Salary desc) as rank_\\nfrom joined_ \\n) sub\\nwhere sub.rank_ =1;`"
                    },
                    {
                        "username": "omehdiakram",
                        "content": "WITH DEP AS (\\n    SELECT \\n        DISTINCT D.name AS Department, \\n        E1.name AS Employee, \\n        E1.salary AS salary\\n    FROM \\n        Employee E1 JOIN Department D ON E1.departmentId = D.id\\n    WHERE \\n        E1.salary in (SELECT MAX(salary) FROM EMPLOYEE E2 WHERE E2.departmentId = E1.departmentId)\\n)\\n\\nSELECT * FROM DEP;"
                    },
                    {
                        "username": "javedabdool13",
                        "content": "with cte as (\\nselect D.name as Department ,E.name as Employee,E.salary as Salary,\\ncase when max(E.salary) over(partition by D.name) = E.salary  then 1 else 0 end as x\\nfrom Employee E\\ninner join Department D on E.departmentId = D.id) \\n\\nselect DEpartment,Employee,Salary from cte \\nwhere x = 1\\n"
                    },
                    {
                        "username": "Ansh123",
                        "content": "`with dept as (select d.id, d.name,\\nmax(salary) as Salary\\nfrom Employee e inner join Department d on e.departmentId=d.id\\ngroup by 1,2)\\nselect d.name as Department, e.name as Employee, d.Salary from Employee e inner join dept d on e.departmentId=d.id and e.salary=d.Salary`"
                    },
                    {
                        "username": "asifanas",
                        "content": "SELECT d.name as Department, temp.name as Employee, temp.salary as Salary FROM department d inner join (SELECT e.name, temp.salary, temp.departmentid FROM employee e inner join (SELECT departmentid, max(salary) as salary FROM employee group by departmentid) as temp on(temp.departmentid=e.departmentid and e.salary=temp.salary)) as temp on(temp.departmentid=d.id);"
                    }
                ]
            },
            {
                "id": 1794080,
                "content": [
                    {
                        "username": "vinayakam19",
                        "content": "Using CTE\\n\\n `with highest_salary as (select e.name as employee, e.salary as Salary, d.name as Department, DENSE_RANK() OVER(PARTITION BY d.name order by Salary desc) as sal_rank from Employee e join Department d on e.departmentId = d.id)\\n\\nselect Department, Employee, Salary from highest_salary where sal_rank = 1;`"
                    },
                    {
                        "username": "abhilaash31270",
                        "content": "select d.name Department ,e.name Employee,e.salary Salary from Employee e inner join Department d on e.departmentId=d.id where \\n(departmentId,salary) in (select departmentId,max(salary) from employee group by departmentId);"
                    },
                    {
                        "username": "nishdhana15",
                        "content": "WITH ranktable AS\\n(SELECT d.name as Department ,e.name as Employee, e.salary as salary, DENSE_RANK() OVER(partition by d.name ORDER BY salary DESC ) as sranks\\nFROM employee as e\\nLEFT JOIN Department as d\\nON e.departmentid=d.id\\n)\\n\\nSELECT Department, Employee,salary\\nFROM ranktable\\nWHERE sranks = 1"
                    },
                    {
                        "username": "EdgarMartinezEsqueda",
                        "content": "`SELECT d.name 'Department', e.name 'Employee', e.salary 'Salary'\nFROM Employee e, Department d\nWHERE e.salary =  (SELECT MAX(salary) FROM Employee WHERE departmentId = d.id) AND e.departmentId = d.id;`\n\nThe 'AND' is just a validation to avoid duplicates"
                    },
                    {
                        "username": "vasanthav251995",
                        "content": "SELECT Department,Employee,Salary from\\n(SELECT d.NAME as Department,e.Name as Employee, e.Salary,\\nDENSE_RANK() over (partition by d.NAME order by e.SALARY Desc) RANK from Employee e\\nLEFT JOIN Department d\\nON e.DepartmentID=d.ID ) a\\nWHERE RANK<=1"
                    },
                    {
                        "username": "user5564YW",
                        "content": " `with joined_ as \\n(\\nselect e.name as Employee,e.salary as Salary ,d.name as Department  from\\nEmployee e\\nleft join\\nDepartment d\\non e.departmentId =d.id \\n) \\n\\nselect sub.Department , sub.Employee  , sub.Salary\\nfrom (\\nselect Department,Employee,Salary, dense_rank()over(partition by Department order by Salary desc) as rank_\\nfrom joined_ \\n) sub\\nwhere sub.rank_ =1;`"
                    },
                    {
                        "username": "omehdiakram",
                        "content": "WITH DEP AS (\\n    SELECT \\n        DISTINCT D.name AS Department, \\n        E1.name AS Employee, \\n        E1.salary AS salary\\n    FROM \\n        Employee E1 JOIN Department D ON E1.departmentId = D.id\\n    WHERE \\n        E1.salary in (SELECT MAX(salary) FROM EMPLOYEE E2 WHERE E2.departmentId = E1.departmentId)\\n)\\n\\nSELECT * FROM DEP;"
                    },
                    {
                        "username": "javedabdool13",
                        "content": "with cte as (\\nselect D.name as Department ,E.name as Employee,E.salary as Salary,\\ncase when max(E.salary) over(partition by D.name) = E.salary  then 1 else 0 end as x\\nfrom Employee E\\ninner join Department D on E.departmentId = D.id) \\n\\nselect DEpartment,Employee,Salary from cte \\nwhere x = 1\\n"
                    },
                    {
                        "username": "Ansh123",
                        "content": "`with dept as (select d.id, d.name,\\nmax(salary) as Salary\\nfrom Employee e inner join Department d on e.departmentId=d.id\\ngroup by 1,2)\\nselect d.name as Department, e.name as Employee, d.Salary from Employee e inner join dept d on e.departmentId=d.id and e.salary=d.Salary`"
                    },
                    {
                        "username": "asifanas",
                        "content": "SELECT d.name as Department, temp.name as Employee, temp.salary as Salary FROM department d inner join (SELECT e.name, temp.salary, temp.departmentid FROM employee e inner join (SELECT departmentid, max(salary) as salary FROM employee group by departmentid) as temp on(temp.departmentid=e.departmentid and e.salary=temp.salary)) as temp on(temp.departmentid=d.id);"
                    }
                ]
            },
            {
                "id": 1790502,
                "content": [
                    {
                        "username": "vinayakam19",
                        "content": "Using CTE\\n\\n `with highest_salary as (select e.name as employee, e.salary as Salary, d.name as Department, DENSE_RANK() OVER(PARTITION BY d.name order by Salary desc) as sal_rank from Employee e join Department d on e.departmentId = d.id)\\n\\nselect Department, Employee, Salary from highest_salary where sal_rank = 1;`"
                    },
                    {
                        "username": "abhilaash31270",
                        "content": "select d.name Department ,e.name Employee,e.salary Salary from Employee e inner join Department d on e.departmentId=d.id where \\n(departmentId,salary) in (select departmentId,max(salary) from employee group by departmentId);"
                    },
                    {
                        "username": "nishdhana15",
                        "content": "WITH ranktable AS\\n(SELECT d.name as Department ,e.name as Employee, e.salary as salary, DENSE_RANK() OVER(partition by d.name ORDER BY salary DESC ) as sranks\\nFROM employee as e\\nLEFT JOIN Department as d\\nON e.departmentid=d.id\\n)\\n\\nSELECT Department, Employee,salary\\nFROM ranktable\\nWHERE sranks = 1"
                    },
                    {
                        "username": "EdgarMartinezEsqueda",
                        "content": "`SELECT d.name 'Department', e.name 'Employee', e.salary 'Salary'\nFROM Employee e, Department d\nWHERE e.salary =  (SELECT MAX(salary) FROM Employee WHERE departmentId = d.id) AND e.departmentId = d.id;`\n\nThe 'AND' is just a validation to avoid duplicates"
                    },
                    {
                        "username": "vasanthav251995",
                        "content": "SELECT Department,Employee,Salary from\\n(SELECT d.NAME as Department,e.Name as Employee, e.Salary,\\nDENSE_RANK() over (partition by d.NAME order by e.SALARY Desc) RANK from Employee e\\nLEFT JOIN Department d\\nON e.DepartmentID=d.ID ) a\\nWHERE RANK<=1"
                    },
                    {
                        "username": "user5564YW",
                        "content": " `with joined_ as \\n(\\nselect e.name as Employee,e.salary as Salary ,d.name as Department  from\\nEmployee e\\nleft join\\nDepartment d\\non e.departmentId =d.id \\n) \\n\\nselect sub.Department , sub.Employee  , sub.Salary\\nfrom (\\nselect Department,Employee,Salary, dense_rank()over(partition by Department order by Salary desc) as rank_\\nfrom joined_ \\n) sub\\nwhere sub.rank_ =1;`"
                    },
                    {
                        "username": "omehdiakram",
                        "content": "WITH DEP AS (\\n    SELECT \\n        DISTINCT D.name AS Department, \\n        E1.name AS Employee, \\n        E1.salary AS salary\\n    FROM \\n        Employee E1 JOIN Department D ON E1.departmentId = D.id\\n    WHERE \\n        E1.salary in (SELECT MAX(salary) FROM EMPLOYEE E2 WHERE E2.departmentId = E1.departmentId)\\n)\\n\\nSELECT * FROM DEP;"
                    },
                    {
                        "username": "javedabdool13",
                        "content": "with cte as (\\nselect D.name as Department ,E.name as Employee,E.salary as Salary,\\ncase when max(E.salary) over(partition by D.name) = E.salary  then 1 else 0 end as x\\nfrom Employee E\\ninner join Department D on E.departmentId = D.id) \\n\\nselect DEpartment,Employee,Salary from cte \\nwhere x = 1\\n"
                    },
                    {
                        "username": "Ansh123",
                        "content": "`with dept as (select d.id, d.name,\\nmax(salary) as Salary\\nfrom Employee e inner join Department d on e.departmentId=d.id\\ngroup by 1,2)\\nselect d.name as Department, e.name as Employee, d.Salary from Employee e inner join dept d on e.departmentId=d.id and e.salary=d.Salary`"
                    },
                    {
                        "username": "asifanas",
                        "content": "SELECT d.name as Department, temp.name as Employee, temp.salary as Salary FROM department d inner join (SELECT e.name, temp.salary, temp.departmentid FROM employee e inner join (SELECT departmentid, max(salary) as salary FROM employee group by departmentid) as temp on(temp.departmentid=e.departmentid and e.salary=temp.salary)) as temp on(temp.departmentid=d.id);"
                    }
                ]
            },
            {
                "id": 1776128,
                "content": [
                    {
                        "username": "vinayakam19",
                        "content": "Using CTE\\n\\n `with highest_salary as (select e.name as employee, e.salary as Salary, d.name as Department, DENSE_RANK() OVER(PARTITION BY d.name order by Salary desc) as sal_rank from Employee e join Department d on e.departmentId = d.id)\\n\\nselect Department, Employee, Salary from highest_salary where sal_rank = 1;`"
                    },
                    {
                        "username": "abhilaash31270",
                        "content": "select d.name Department ,e.name Employee,e.salary Salary from Employee e inner join Department d on e.departmentId=d.id where \\n(departmentId,salary) in (select departmentId,max(salary) from employee group by departmentId);"
                    },
                    {
                        "username": "nishdhana15",
                        "content": "WITH ranktable AS\\n(SELECT d.name as Department ,e.name as Employee, e.salary as salary, DENSE_RANK() OVER(partition by d.name ORDER BY salary DESC ) as sranks\\nFROM employee as e\\nLEFT JOIN Department as d\\nON e.departmentid=d.id\\n)\\n\\nSELECT Department, Employee,salary\\nFROM ranktable\\nWHERE sranks = 1"
                    },
                    {
                        "username": "EdgarMartinezEsqueda",
                        "content": "`SELECT d.name 'Department', e.name 'Employee', e.salary 'Salary'\nFROM Employee e, Department d\nWHERE e.salary =  (SELECT MAX(salary) FROM Employee WHERE departmentId = d.id) AND e.departmentId = d.id;`\n\nThe 'AND' is just a validation to avoid duplicates"
                    },
                    {
                        "username": "vasanthav251995",
                        "content": "SELECT Department,Employee,Salary from\\n(SELECT d.NAME as Department,e.Name as Employee, e.Salary,\\nDENSE_RANK() over (partition by d.NAME order by e.SALARY Desc) RANK from Employee e\\nLEFT JOIN Department d\\nON e.DepartmentID=d.ID ) a\\nWHERE RANK<=1"
                    },
                    {
                        "username": "user5564YW",
                        "content": " `with joined_ as \\n(\\nselect e.name as Employee,e.salary as Salary ,d.name as Department  from\\nEmployee e\\nleft join\\nDepartment d\\non e.departmentId =d.id \\n) \\n\\nselect sub.Department , sub.Employee  , sub.Salary\\nfrom (\\nselect Department,Employee,Salary, dense_rank()over(partition by Department order by Salary desc) as rank_\\nfrom joined_ \\n) sub\\nwhere sub.rank_ =1;`"
                    },
                    {
                        "username": "omehdiakram",
                        "content": "WITH DEP AS (\\n    SELECT \\n        DISTINCT D.name AS Department, \\n        E1.name AS Employee, \\n        E1.salary AS salary\\n    FROM \\n        Employee E1 JOIN Department D ON E1.departmentId = D.id\\n    WHERE \\n        E1.salary in (SELECT MAX(salary) FROM EMPLOYEE E2 WHERE E2.departmentId = E1.departmentId)\\n)\\n\\nSELECT * FROM DEP;"
                    },
                    {
                        "username": "javedabdool13",
                        "content": "with cte as (\\nselect D.name as Department ,E.name as Employee,E.salary as Salary,\\ncase when max(E.salary) over(partition by D.name) = E.salary  then 1 else 0 end as x\\nfrom Employee E\\ninner join Department D on E.departmentId = D.id) \\n\\nselect DEpartment,Employee,Salary from cte \\nwhere x = 1\\n"
                    },
                    {
                        "username": "Ansh123",
                        "content": "`with dept as (select d.id, d.name,\\nmax(salary) as Salary\\nfrom Employee e inner join Department d on e.departmentId=d.id\\ngroup by 1,2)\\nselect d.name as Department, e.name as Employee, d.Salary from Employee e inner join dept d on e.departmentId=d.id and e.salary=d.Salary`"
                    },
                    {
                        "username": "asifanas",
                        "content": "SELECT d.name as Department, temp.name as Employee, temp.salary as Salary FROM department d inner join (SELECT e.name, temp.salary, temp.departmentid FROM employee e inner join (SELECT departmentid, max(salary) as salary FROM employee group by departmentid) as temp on(temp.departmentid=e.departmentid and e.salary=temp.salary)) as temp on(temp.departmentid=d.id);"
                    }
                ]
            },
            {
                "id": 1775001,
                "content": [
                    {
                        "username": "vinayakam19",
                        "content": "Using CTE\\n\\n `with highest_salary as (select e.name as employee, e.salary as Salary, d.name as Department, DENSE_RANK() OVER(PARTITION BY d.name order by Salary desc) as sal_rank from Employee e join Department d on e.departmentId = d.id)\\n\\nselect Department, Employee, Salary from highest_salary where sal_rank = 1;`"
                    },
                    {
                        "username": "abhilaash31270",
                        "content": "select d.name Department ,e.name Employee,e.salary Salary from Employee e inner join Department d on e.departmentId=d.id where \\n(departmentId,salary) in (select departmentId,max(salary) from employee group by departmentId);"
                    },
                    {
                        "username": "nishdhana15",
                        "content": "WITH ranktable AS\\n(SELECT d.name as Department ,e.name as Employee, e.salary as salary, DENSE_RANK() OVER(partition by d.name ORDER BY salary DESC ) as sranks\\nFROM employee as e\\nLEFT JOIN Department as d\\nON e.departmentid=d.id\\n)\\n\\nSELECT Department, Employee,salary\\nFROM ranktable\\nWHERE sranks = 1"
                    },
                    {
                        "username": "EdgarMartinezEsqueda",
                        "content": "`SELECT d.name 'Department', e.name 'Employee', e.salary 'Salary'\nFROM Employee e, Department d\nWHERE e.salary =  (SELECT MAX(salary) FROM Employee WHERE departmentId = d.id) AND e.departmentId = d.id;`\n\nThe 'AND' is just a validation to avoid duplicates"
                    },
                    {
                        "username": "vasanthav251995",
                        "content": "SELECT Department,Employee,Salary from\\n(SELECT d.NAME as Department,e.Name as Employee, e.Salary,\\nDENSE_RANK() over (partition by d.NAME order by e.SALARY Desc) RANK from Employee e\\nLEFT JOIN Department d\\nON e.DepartmentID=d.ID ) a\\nWHERE RANK<=1"
                    },
                    {
                        "username": "user5564YW",
                        "content": " `with joined_ as \\n(\\nselect e.name as Employee,e.salary as Salary ,d.name as Department  from\\nEmployee e\\nleft join\\nDepartment d\\non e.departmentId =d.id \\n) \\n\\nselect sub.Department , sub.Employee  , sub.Salary\\nfrom (\\nselect Department,Employee,Salary, dense_rank()over(partition by Department order by Salary desc) as rank_\\nfrom joined_ \\n) sub\\nwhere sub.rank_ =1;`"
                    },
                    {
                        "username": "omehdiakram",
                        "content": "WITH DEP AS (\\n    SELECT \\n        DISTINCT D.name AS Department, \\n        E1.name AS Employee, \\n        E1.salary AS salary\\n    FROM \\n        Employee E1 JOIN Department D ON E1.departmentId = D.id\\n    WHERE \\n        E1.salary in (SELECT MAX(salary) FROM EMPLOYEE E2 WHERE E2.departmentId = E1.departmentId)\\n)\\n\\nSELECT * FROM DEP;"
                    },
                    {
                        "username": "javedabdool13",
                        "content": "with cte as (\\nselect D.name as Department ,E.name as Employee,E.salary as Salary,\\ncase when max(E.salary) over(partition by D.name) = E.salary  then 1 else 0 end as x\\nfrom Employee E\\ninner join Department D on E.departmentId = D.id) \\n\\nselect DEpartment,Employee,Salary from cte \\nwhere x = 1\\n"
                    },
                    {
                        "username": "Ansh123",
                        "content": "`with dept as (select d.id, d.name,\\nmax(salary) as Salary\\nfrom Employee e inner join Department d on e.departmentId=d.id\\ngroup by 1,2)\\nselect d.name as Department, e.name as Employee, d.Salary from Employee e inner join dept d on e.departmentId=d.id and e.salary=d.Salary`"
                    },
                    {
                        "username": "asifanas",
                        "content": "SELECT d.name as Department, temp.name as Employee, temp.salary as Salary FROM department d inner join (SELECT e.name, temp.salary, temp.departmentid FROM employee e inner join (SELECT departmentid, max(salary) as salary FROM employee group by departmentid) as temp on(temp.departmentid=e.departmentid and e.salary=temp.salary)) as temp on(temp.departmentid=d.id);"
                    }
                ]
            },
            {
                "id": 1744587,
                "content": [
                    {
                        "username": "vinayakam19",
                        "content": "Using CTE\\n\\n `with highest_salary as (select e.name as employee, e.salary as Salary, d.name as Department, DENSE_RANK() OVER(PARTITION BY d.name order by Salary desc) as sal_rank from Employee e join Department d on e.departmentId = d.id)\\n\\nselect Department, Employee, Salary from highest_salary where sal_rank = 1;`"
                    },
                    {
                        "username": "abhilaash31270",
                        "content": "select d.name Department ,e.name Employee,e.salary Salary from Employee e inner join Department d on e.departmentId=d.id where \\n(departmentId,salary) in (select departmentId,max(salary) from employee group by departmentId);"
                    },
                    {
                        "username": "nishdhana15",
                        "content": "WITH ranktable AS\\n(SELECT d.name as Department ,e.name as Employee, e.salary as salary, DENSE_RANK() OVER(partition by d.name ORDER BY salary DESC ) as sranks\\nFROM employee as e\\nLEFT JOIN Department as d\\nON e.departmentid=d.id\\n)\\n\\nSELECT Department, Employee,salary\\nFROM ranktable\\nWHERE sranks = 1"
                    },
                    {
                        "username": "EdgarMartinezEsqueda",
                        "content": "`SELECT d.name 'Department', e.name 'Employee', e.salary 'Salary'\nFROM Employee e, Department d\nWHERE e.salary =  (SELECT MAX(salary) FROM Employee WHERE departmentId = d.id) AND e.departmentId = d.id;`\n\nThe 'AND' is just a validation to avoid duplicates"
                    },
                    {
                        "username": "vasanthav251995",
                        "content": "SELECT Department,Employee,Salary from\\n(SELECT d.NAME as Department,e.Name as Employee, e.Salary,\\nDENSE_RANK() over (partition by d.NAME order by e.SALARY Desc) RANK from Employee e\\nLEFT JOIN Department d\\nON e.DepartmentID=d.ID ) a\\nWHERE RANK<=1"
                    },
                    {
                        "username": "user5564YW",
                        "content": " `with joined_ as \\n(\\nselect e.name as Employee,e.salary as Salary ,d.name as Department  from\\nEmployee e\\nleft join\\nDepartment d\\non e.departmentId =d.id \\n) \\n\\nselect sub.Department , sub.Employee  , sub.Salary\\nfrom (\\nselect Department,Employee,Salary, dense_rank()over(partition by Department order by Salary desc) as rank_\\nfrom joined_ \\n) sub\\nwhere sub.rank_ =1;`"
                    },
                    {
                        "username": "omehdiakram",
                        "content": "WITH DEP AS (\\n    SELECT \\n        DISTINCT D.name AS Department, \\n        E1.name AS Employee, \\n        E1.salary AS salary\\n    FROM \\n        Employee E1 JOIN Department D ON E1.departmentId = D.id\\n    WHERE \\n        E1.salary in (SELECT MAX(salary) FROM EMPLOYEE E2 WHERE E2.departmentId = E1.departmentId)\\n)\\n\\nSELECT * FROM DEP;"
                    },
                    {
                        "username": "javedabdool13",
                        "content": "with cte as (\\nselect D.name as Department ,E.name as Employee,E.salary as Salary,\\ncase when max(E.salary) over(partition by D.name) = E.salary  then 1 else 0 end as x\\nfrom Employee E\\ninner join Department D on E.departmentId = D.id) \\n\\nselect DEpartment,Employee,Salary from cte \\nwhere x = 1\\n"
                    },
                    {
                        "username": "Ansh123",
                        "content": "`with dept as (select d.id, d.name,\\nmax(salary) as Salary\\nfrom Employee e inner join Department d on e.departmentId=d.id\\ngroup by 1,2)\\nselect d.name as Department, e.name as Employee, d.Salary from Employee e inner join dept d on e.departmentId=d.id and e.salary=d.Salary`"
                    },
                    {
                        "username": "asifanas",
                        "content": "SELECT d.name as Department, temp.name as Employee, temp.salary as Salary FROM department d inner join (SELECT e.name, temp.salary, temp.departmentid FROM employee e inner join (SELECT departmentid, max(salary) as salary FROM employee group by departmentid) as temp on(temp.departmentid=e.departmentid and e.salary=temp.salary)) as temp on(temp.departmentid=d.id);"
                    }
                ]
            },
            {
                "id": 1735105,
                "content": [
                    {
                        "username": "vinayakam19",
                        "content": "Using CTE\\n\\n `with highest_salary as (select e.name as employee, e.salary as Salary, d.name as Department, DENSE_RANK() OVER(PARTITION BY d.name order by Salary desc) as sal_rank from Employee e join Department d on e.departmentId = d.id)\\n\\nselect Department, Employee, Salary from highest_salary where sal_rank = 1;`"
                    },
                    {
                        "username": "abhilaash31270",
                        "content": "select d.name Department ,e.name Employee,e.salary Salary from Employee e inner join Department d on e.departmentId=d.id where \\n(departmentId,salary) in (select departmentId,max(salary) from employee group by departmentId);"
                    },
                    {
                        "username": "nishdhana15",
                        "content": "WITH ranktable AS\\n(SELECT d.name as Department ,e.name as Employee, e.salary as salary, DENSE_RANK() OVER(partition by d.name ORDER BY salary DESC ) as sranks\\nFROM employee as e\\nLEFT JOIN Department as d\\nON e.departmentid=d.id\\n)\\n\\nSELECT Department, Employee,salary\\nFROM ranktable\\nWHERE sranks = 1"
                    },
                    {
                        "username": "EdgarMartinezEsqueda",
                        "content": "`SELECT d.name 'Department', e.name 'Employee', e.salary 'Salary'\nFROM Employee e, Department d\nWHERE e.salary =  (SELECT MAX(salary) FROM Employee WHERE departmentId = d.id) AND e.departmentId = d.id;`\n\nThe 'AND' is just a validation to avoid duplicates"
                    },
                    {
                        "username": "vasanthav251995",
                        "content": "SELECT Department,Employee,Salary from\\n(SELECT d.NAME as Department,e.Name as Employee, e.Salary,\\nDENSE_RANK() over (partition by d.NAME order by e.SALARY Desc) RANK from Employee e\\nLEFT JOIN Department d\\nON e.DepartmentID=d.ID ) a\\nWHERE RANK<=1"
                    },
                    {
                        "username": "user5564YW",
                        "content": " `with joined_ as \\n(\\nselect e.name as Employee,e.salary as Salary ,d.name as Department  from\\nEmployee e\\nleft join\\nDepartment d\\non e.departmentId =d.id \\n) \\n\\nselect sub.Department , sub.Employee  , sub.Salary\\nfrom (\\nselect Department,Employee,Salary, dense_rank()over(partition by Department order by Salary desc) as rank_\\nfrom joined_ \\n) sub\\nwhere sub.rank_ =1;`"
                    },
                    {
                        "username": "omehdiakram",
                        "content": "WITH DEP AS (\\n    SELECT \\n        DISTINCT D.name AS Department, \\n        E1.name AS Employee, \\n        E1.salary AS salary\\n    FROM \\n        Employee E1 JOIN Department D ON E1.departmentId = D.id\\n    WHERE \\n        E1.salary in (SELECT MAX(salary) FROM EMPLOYEE E2 WHERE E2.departmentId = E1.departmentId)\\n)\\n\\nSELECT * FROM DEP;"
                    },
                    {
                        "username": "javedabdool13",
                        "content": "with cte as (\\nselect D.name as Department ,E.name as Employee,E.salary as Salary,\\ncase when max(E.salary) over(partition by D.name) = E.salary  then 1 else 0 end as x\\nfrom Employee E\\ninner join Department D on E.departmentId = D.id) \\n\\nselect DEpartment,Employee,Salary from cte \\nwhere x = 1\\n"
                    },
                    {
                        "username": "Ansh123",
                        "content": "`with dept as (select d.id, d.name,\\nmax(salary) as Salary\\nfrom Employee e inner join Department d on e.departmentId=d.id\\ngroup by 1,2)\\nselect d.name as Department, e.name as Employee, d.Salary from Employee e inner join dept d on e.departmentId=d.id and e.salary=d.Salary`"
                    },
                    {
                        "username": "asifanas",
                        "content": "SELECT d.name as Department, temp.name as Employee, temp.salary as Salary FROM department d inner join (SELECT e.name, temp.salary, temp.departmentid FROM employee e inner join (SELECT departmentid, max(salary) as salary FROM employee group by departmentid) as temp on(temp.departmentid=e.departmentid and e.salary=temp.salary)) as temp on(temp.departmentid=d.id);"
                    }
                ]
            },
            {
                "id": 1734308,
                "content": [
                    {
                        "username": "vinayakam19",
                        "content": "Using CTE\\n\\n `with highest_salary as (select e.name as employee, e.salary as Salary, d.name as Department, DENSE_RANK() OVER(PARTITION BY d.name order by Salary desc) as sal_rank from Employee e join Department d on e.departmentId = d.id)\\n\\nselect Department, Employee, Salary from highest_salary where sal_rank = 1;`"
                    },
                    {
                        "username": "abhilaash31270",
                        "content": "select d.name Department ,e.name Employee,e.salary Salary from Employee e inner join Department d on e.departmentId=d.id where \\n(departmentId,salary) in (select departmentId,max(salary) from employee group by departmentId);"
                    },
                    {
                        "username": "nishdhana15",
                        "content": "WITH ranktable AS\\n(SELECT d.name as Department ,e.name as Employee, e.salary as salary, DENSE_RANK() OVER(partition by d.name ORDER BY salary DESC ) as sranks\\nFROM employee as e\\nLEFT JOIN Department as d\\nON e.departmentid=d.id\\n)\\n\\nSELECT Department, Employee,salary\\nFROM ranktable\\nWHERE sranks = 1"
                    },
                    {
                        "username": "EdgarMartinezEsqueda",
                        "content": "`SELECT d.name 'Department', e.name 'Employee', e.salary 'Salary'\nFROM Employee e, Department d\nWHERE e.salary =  (SELECT MAX(salary) FROM Employee WHERE departmentId = d.id) AND e.departmentId = d.id;`\n\nThe 'AND' is just a validation to avoid duplicates"
                    },
                    {
                        "username": "vasanthav251995",
                        "content": "SELECT Department,Employee,Salary from\\n(SELECT d.NAME as Department,e.Name as Employee, e.Salary,\\nDENSE_RANK() over (partition by d.NAME order by e.SALARY Desc) RANK from Employee e\\nLEFT JOIN Department d\\nON e.DepartmentID=d.ID ) a\\nWHERE RANK<=1"
                    },
                    {
                        "username": "user5564YW",
                        "content": " `with joined_ as \\n(\\nselect e.name as Employee,e.salary as Salary ,d.name as Department  from\\nEmployee e\\nleft join\\nDepartment d\\non e.departmentId =d.id \\n) \\n\\nselect sub.Department , sub.Employee  , sub.Salary\\nfrom (\\nselect Department,Employee,Salary, dense_rank()over(partition by Department order by Salary desc) as rank_\\nfrom joined_ \\n) sub\\nwhere sub.rank_ =1;`"
                    },
                    {
                        "username": "omehdiakram",
                        "content": "WITH DEP AS (\\n    SELECT \\n        DISTINCT D.name AS Department, \\n        E1.name AS Employee, \\n        E1.salary AS salary\\n    FROM \\n        Employee E1 JOIN Department D ON E1.departmentId = D.id\\n    WHERE \\n        E1.salary in (SELECT MAX(salary) FROM EMPLOYEE E2 WHERE E2.departmentId = E1.departmentId)\\n)\\n\\nSELECT * FROM DEP;"
                    },
                    {
                        "username": "javedabdool13",
                        "content": "with cte as (\\nselect D.name as Department ,E.name as Employee,E.salary as Salary,\\ncase when max(E.salary) over(partition by D.name) = E.salary  then 1 else 0 end as x\\nfrom Employee E\\ninner join Department D on E.departmentId = D.id) \\n\\nselect DEpartment,Employee,Salary from cte \\nwhere x = 1\\n"
                    },
                    {
                        "username": "Ansh123",
                        "content": "`with dept as (select d.id, d.name,\\nmax(salary) as Salary\\nfrom Employee e inner join Department d on e.departmentId=d.id\\ngroup by 1,2)\\nselect d.name as Department, e.name as Employee, d.Salary from Employee e inner join dept d on e.departmentId=d.id and e.salary=d.Salary`"
                    },
                    {
                        "username": "asifanas",
                        "content": "SELECT d.name as Department, temp.name as Employee, temp.salary as Salary FROM department d inner join (SELECT e.name, temp.salary, temp.departmentid FROM employee e inner join (SELECT departmentid, max(salary) as salary FROM employee group by departmentid) as temp on(temp.departmentid=e.departmentid and e.salary=temp.salary)) as temp on(temp.departmentid=d.id);"
                    }
                ]
            },
            {
                "id": 1733827,
                "content": [
                    {
                        "username": "Deepak_3024",
                        "content": "# Write your MySQL query statement below\\nselect d.name as Department,\\ne.name as Employee,\\ne.salary as Salary\\nfrom employee e\\njoin Department d on d.id=e.departmentId\\nwhere (d.id,e.salary)in(Select departmentId,max(Salary)\\nfrom employee\\ngroup by departmentId"
                    },
                    {
                        "username": "rahuljishu",
                        "content": "I mainly prefer temp table using with, so here is it, something different, \\n\\n/* Write your T-SQL query statement below */\\nwith reference as (\\nselect \\nE.name as Employee, E.salary as salary, D.id as id, D.name as Department, \\nrank() over (partition by D.id order by D.id, E.salary desc) as rank\\nfrom Employee E\\njoin Department D on E.departmentId = D.id)\\n\\nselect Department, Employee, Salary\\nfrom reference \\nwhere rank=1"
                    },
                    {
                        "username": "himsindhu1499",
                        "content": "with cte as (select \\ndense_rank() over(partition by departmentId order by salary desc) as \\'rnk\\',e.name as \\'Employee\\',e.salary as \\'Salary\\',d.name as \\'Department\\'\\nfrom Employee e\\njoin Department d on e.departmentId=d.id)\\nselect Department,Employee,Salary\\nfrom cte\\nwhere rnk=1"
                    },
                    {
                        "username": "singhprajjawal",
                        "content": "select d.name as Department,e.name as Employee,\\ne.salary as Salary  from Employee e\\ninner join  Department  d on \\nd.id= e.departmentid\\nwhere e.salary>70000\\n\\nResult is accepted but submission is not getting accepted ??\\nanyone opinion?"
                    },
                    {
                        "username": "LiSLeetCode",
                        "content": "What\\'s the difference of those two queries?\\n\\n`SELECT d.name AS Department, e.name AS Employee, e.salary AS salary\\nFROM Department d, Employee e\\nWHERE d.id = e.departmentId;`\\n\\n`SELECT d.name AS Department, e.name AS Employee, e.salary AS salary\\nFROM Department d\\nJOIN Employee e\\nON d.id = e.departmentId;`"
                    },
                    {
                        "username": "ParisssssTian",
                        "content": "with temp as(select d.name as department, max(salary) as salary\\nfrom Employee e\\ninner join department d\\non d.id = e.departmentId\\ngroup by d.name)\\n\\nselect temp.Department, sumtemp.Employee, sumtemp.Salary\\nfrom(\\nselect d.name as Department, e.name as Employee, E.salary as Salary\\nfrom Employee e\\ninner join Department d\\non e.departmentId = d.id\\n) as sumtemp, temp\\nwhere temp.department = sumtemp.Department and temp.salary = sumtemp.Salary"
                    },
                    {
                        "username": "AABBCCDDEEFF",
                        "content": " `select d.name as \"Department\" , e.name as \"Employee\" , e.Salary \\nfrom employee e\\ninner join Department d on e.departmentId=d.id \\nwhere 1 > (select count(*) from Employee e2 where d.id=e2.departmentId and e.salary < e2.salary) `"
                    },
                    {
                        "username": "Maobu",
                        "content": "Could somebody tell me why am I wrong in submitting, but right in the run?\\n\"\\'\\'\\nselect d.name as department, e.name as employee, e.salary\\nfrom employee e\\nleft JOIN department d\\non e.departmentid=d.id\\nwhere e.salary in (\\n    select max(salary)\\nfrom employee\\ngroup by departmentid)\\n\\'\\'\\'\\n"
                    },
                    {
                        "username": "Atulfs",
                        "content": "with cte1 as(select d1.name as Department,e1.name as Employee, e1.salary as Salary,\\ndense_rank()over(partition by d1.name order by e1.salary desc)as rkt\\nfrom Employee e1\\njoin Department d1 \\non e1.departmentId=d1.id )\\nselect Department,Employee, Salary\\nfrom cte1 \\nwhere rkt =1;"
                    },
                    {
                        "username": "srikanthmungi",
                        "content": "with c as (select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\nfrom Employee e join Department d on e.DepartmentId=d.Id)\\nselect Department,Employee,Salary from c where c.rank=1\\n"
                    }
                ]
            },
            {
                "id": 1719729,
                "content": [
                    {
                        "username": "Deepak_3024",
                        "content": "# Write your MySQL query statement below\\nselect d.name as Department,\\ne.name as Employee,\\ne.salary as Salary\\nfrom employee e\\njoin Department d on d.id=e.departmentId\\nwhere (d.id,e.salary)in(Select departmentId,max(Salary)\\nfrom employee\\ngroup by departmentId"
                    },
                    {
                        "username": "rahuljishu",
                        "content": "I mainly prefer temp table using with, so here is it, something different, \\n\\n/* Write your T-SQL query statement below */\\nwith reference as (\\nselect \\nE.name as Employee, E.salary as salary, D.id as id, D.name as Department, \\nrank() over (partition by D.id order by D.id, E.salary desc) as rank\\nfrom Employee E\\njoin Department D on E.departmentId = D.id)\\n\\nselect Department, Employee, Salary\\nfrom reference \\nwhere rank=1"
                    },
                    {
                        "username": "himsindhu1499",
                        "content": "with cte as (select \\ndense_rank() over(partition by departmentId order by salary desc) as \\'rnk\\',e.name as \\'Employee\\',e.salary as \\'Salary\\',d.name as \\'Department\\'\\nfrom Employee e\\njoin Department d on e.departmentId=d.id)\\nselect Department,Employee,Salary\\nfrom cte\\nwhere rnk=1"
                    },
                    {
                        "username": "singhprajjawal",
                        "content": "select d.name as Department,e.name as Employee,\\ne.salary as Salary  from Employee e\\ninner join  Department  d on \\nd.id= e.departmentid\\nwhere e.salary>70000\\n\\nResult is accepted but submission is not getting accepted ??\\nanyone opinion?"
                    },
                    {
                        "username": "LiSLeetCode",
                        "content": "What\\'s the difference of those two queries?\\n\\n`SELECT d.name AS Department, e.name AS Employee, e.salary AS salary\\nFROM Department d, Employee e\\nWHERE d.id = e.departmentId;`\\n\\n`SELECT d.name AS Department, e.name AS Employee, e.salary AS salary\\nFROM Department d\\nJOIN Employee e\\nON d.id = e.departmentId;`"
                    },
                    {
                        "username": "ParisssssTian",
                        "content": "with temp as(select d.name as department, max(salary) as salary\\nfrom Employee e\\ninner join department d\\non d.id = e.departmentId\\ngroup by d.name)\\n\\nselect temp.Department, sumtemp.Employee, sumtemp.Salary\\nfrom(\\nselect d.name as Department, e.name as Employee, E.salary as Salary\\nfrom Employee e\\ninner join Department d\\non e.departmentId = d.id\\n) as sumtemp, temp\\nwhere temp.department = sumtemp.Department and temp.salary = sumtemp.Salary"
                    },
                    {
                        "username": "AABBCCDDEEFF",
                        "content": " `select d.name as \"Department\" , e.name as \"Employee\" , e.Salary \\nfrom employee e\\ninner join Department d on e.departmentId=d.id \\nwhere 1 > (select count(*) from Employee e2 where d.id=e2.departmentId and e.salary < e2.salary) `"
                    },
                    {
                        "username": "Maobu",
                        "content": "Could somebody tell me why am I wrong in submitting, but right in the run?\\n\"\\'\\'\\nselect d.name as department, e.name as employee, e.salary\\nfrom employee e\\nleft JOIN department d\\non e.departmentid=d.id\\nwhere e.salary in (\\n    select max(salary)\\nfrom employee\\ngroup by departmentid)\\n\\'\\'\\'\\n"
                    },
                    {
                        "username": "Atulfs",
                        "content": "with cte1 as(select d1.name as Department,e1.name as Employee, e1.salary as Salary,\\ndense_rank()over(partition by d1.name order by e1.salary desc)as rkt\\nfrom Employee e1\\njoin Department d1 \\non e1.departmentId=d1.id )\\nselect Department,Employee, Salary\\nfrom cte1 \\nwhere rkt =1;"
                    },
                    {
                        "username": "srikanthmungi",
                        "content": "with c as (select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\nfrom Employee e join Department d on e.DepartmentId=d.Id)\\nselect Department,Employee,Salary from c where c.rank=1\\n"
                    }
                ]
            },
            {
                "id": 1716486,
                "content": [
                    {
                        "username": "Deepak_3024",
                        "content": "# Write your MySQL query statement below\\nselect d.name as Department,\\ne.name as Employee,\\ne.salary as Salary\\nfrom employee e\\njoin Department d on d.id=e.departmentId\\nwhere (d.id,e.salary)in(Select departmentId,max(Salary)\\nfrom employee\\ngroup by departmentId"
                    },
                    {
                        "username": "rahuljishu",
                        "content": "I mainly prefer temp table using with, so here is it, something different, \\n\\n/* Write your T-SQL query statement below */\\nwith reference as (\\nselect \\nE.name as Employee, E.salary as salary, D.id as id, D.name as Department, \\nrank() over (partition by D.id order by D.id, E.salary desc) as rank\\nfrom Employee E\\njoin Department D on E.departmentId = D.id)\\n\\nselect Department, Employee, Salary\\nfrom reference \\nwhere rank=1"
                    },
                    {
                        "username": "himsindhu1499",
                        "content": "with cte as (select \\ndense_rank() over(partition by departmentId order by salary desc) as \\'rnk\\',e.name as \\'Employee\\',e.salary as \\'Salary\\',d.name as \\'Department\\'\\nfrom Employee e\\njoin Department d on e.departmentId=d.id)\\nselect Department,Employee,Salary\\nfrom cte\\nwhere rnk=1"
                    },
                    {
                        "username": "singhprajjawal",
                        "content": "select d.name as Department,e.name as Employee,\\ne.salary as Salary  from Employee e\\ninner join  Department  d on \\nd.id= e.departmentid\\nwhere e.salary>70000\\n\\nResult is accepted but submission is not getting accepted ??\\nanyone opinion?"
                    },
                    {
                        "username": "LiSLeetCode",
                        "content": "What\\'s the difference of those two queries?\\n\\n`SELECT d.name AS Department, e.name AS Employee, e.salary AS salary\\nFROM Department d, Employee e\\nWHERE d.id = e.departmentId;`\\n\\n`SELECT d.name AS Department, e.name AS Employee, e.salary AS salary\\nFROM Department d\\nJOIN Employee e\\nON d.id = e.departmentId;`"
                    },
                    {
                        "username": "ParisssssTian",
                        "content": "with temp as(select d.name as department, max(salary) as salary\\nfrom Employee e\\ninner join department d\\non d.id = e.departmentId\\ngroup by d.name)\\n\\nselect temp.Department, sumtemp.Employee, sumtemp.Salary\\nfrom(\\nselect d.name as Department, e.name as Employee, E.salary as Salary\\nfrom Employee e\\ninner join Department d\\non e.departmentId = d.id\\n) as sumtemp, temp\\nwhere temp.department = sumtemp.Department and temp.salary = sumtemp.Salary"
                    },
                    {
                        "username": "AABBCCDDEEFF",
                        "content": " `select d.name as \"Department\" , e.name as \"Employee\" , e.Salary \\nfrom employee e\\ninner join Department d on e.departmentId=d.id \\nwhere 1 > (select count(*) from Employee e2 where d.id=e2.departmentId and e.salary < e2.salary) `"
                    },
                    {
                        "username": "Maobu",
                        "content": "Could somebody tell me why am I wrong in submitting, but right in the run?\\n\"\\'\\'\\nselect d.name as department, e.name as employee, e.salary\\nfrom employee e\\nleft JOIN department d\\non e.departmentid=d.id\\nwhere e.salary in (\\n    select max(salary)\\nfrom employee\\ngroup by departmentid)\\n\\'\\'\\'\\n"
                    },
                    {
                        "username": "Atulfs",
                        "content": "with cte1 as(select d1.name as Department,e1.name as Employee, e1.salary as Salary,\\ndense_rank()over(partition by d1.name order by e1.salary desc)as rkt\\nfrom Employee e1\\njoin Department d1 \\non e1.departmentId=d1.id )\\nselect Department,Employee, Salary\\nfrom cte1 \\nwhere rkt =1;"
                    },
                    {
                        "username": "srikanthmungi",
                        "content": "with c as (select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\nfrom Employee e join Department d on e.DepartmentId=d.Id)\\nselect Department,Employee,Salary from c where c.rank=1\\n"
                    }
                ]
            },
            {
                "id": 1713316,
                "content": [
                    {
                        "username": "Deepak_3024",
                        "content": "# Write your MySQL query statement below\\nselect d.name as Department,\\ne.name as Employee,\\ne.salary as Salary\\nfrom employee e\\njoin Department d on d.id=e.departmentId\\nwhere (d.id,e.salary)in(Select departmentId,max(Salary)\\nfrom employee\\ngroup by departmentId"
                    },
                    {
                        "username": "rahuljishu",
                        "content": "I mainly prefer temp table using with, so here is it, something different, \\n\\n/* Write your T-SQL query statement below */\\nwith reference as (\\nselect \\nE.name as Employee, E.salary as salary, D.id as id, D.name as Department, \\nrank() over (partition by D.id order by D.id, E.salary desc) as rank\\nfrom Employee E\\njoin Department D on E.departmentId = D.id)\\n\\nselect Department, Employee, Salary\\nfrom reference \\nwhere rank=1"
                    },
                    {
                        "username": "himsindhu1499",
                        "content": "with cte as (select \\ndense_rank() over(partition by departmentId order by salary desc) as \\'rnk\\',e.name as \\'Employee\\',e.salary as \\'Salary\\',d.name as \\'Department\\'\\nfrom Employee e\\njoin Department d on e.departmentId=d.id)\\nselect Department,Employee,Salary\\nfrom cte\\nwhere rnk=1"
                    },
                    {
                        "username": "singhprajjawal",
                        "content": "select d.name as Department,e.name as Employee,\\ne.salary as Salary  from Employee e\\ninner join  Department  d on \\nd.id= e.departmentid\\nwhere e.salary>70000\\n\\nResult is accepted but submission is not getting accepted ??\\nanyone opinion?"
                    },
                    {
                        "username": "LiSLeetCode",
                        "content": "What\\'s the difference of those two queries?\\n\\n`SELECT d.name AS Department, e.name AS Employee, e.salary AS salary\\nFROM Department d, Employee e\\nWHERE d.id = e.departmentId;`\\n\\n`SELECT d.name AS Department, e.name AS Employee, e.salary AS salary\\nFROM Department d\\nJOIN Employee e\\nON d.id = e.departmentId;`"
                    },
                    {
                        "username": "ParisssssTian",
                        "content": "with temp as(select d.name as department, max(salary) as salary\\nfrom Employee e\\ninner join department d\\non d.id = e.departmentId\\ngroup by d.name)\\n\\nselect temp.Department, sumtemp.Employee, sumtemp.Salary\\nfrom(\\nselect d.name as Department, e.name as Employee, E.salary as Salary\\nfrom Employee e\\ninner join Department d\\non e.departmentId = d.id\\n) as sumtemp, temp\\nwhere temp.department = sumtemp.Department and temp.salary = sumtemp.Salary"
                    },
                    {
                        "username": "AABBCCDDEEFF",
                        "content": " `select d.name as \"Department\" , e.name as \"Employee\" , e.Salary \\nfrom employee e\\ninner join Department d on e.departmentId=d.id \\nwhere 1 > (select count(*) from Employee e2 where d.id=e2.departmentId and e.salary < e2.salary) `"
                    },
                    {
                        "username": "Maobu",
                        "content": "Could somebody tell me why am I wrong in submitting, but right in the run?\\n\"\\'\\'\\nselect d.name as department, e.name as employee, e.salary\\nfrom employee e\\nleft JOIN department d\\non e.departmentid=d.id\\nwhere e.salary in (\\n    select max(salary)\\nfrom employee\\ngroup by departmentid)\\n\\'\\'\\'\\n"
                    },
                    {
                        "username": "Atulfs",
                        "content": "with cte1 as(select d1.name as Department,e1.name as Employee, e1.salary as Salary,\\ndense_rank()over(partition by d1.name order by e1.salary desc)as rkt\\nfrom Employee e1\\njoin Department d1 \\non e1.departmentId=d1.id )\\nselect Department,Employee, Salary\\nfrom cte1 \\nwhere rkt =1;"
                    },
                    {
                        "username": "srikanthmungi",
                        "content": "with c as (select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\nfrom Employee e join Department d on e.DepartmentId=d.Id)\\nselect Department,Employee,Salary from c where c.rank=1\\n"
                    }
                ]
            },
            {
                "id": 1709048,
                "content": [
                    {
                        "username": "Deepak_3024",
                        "content": "# Write your MySQL query statement below\\nselect d.name as Department,\\ne.name as Employee,\\ne.salary as Salary\\nfrom employee e\\njoin Department d on d.id=e.departmentId\\nwhere (d.id,e.salary)in(Select departmentId,max(Salary)\\nfrom employee\\ngroup by departmentId"
                    },
                    {
                        "username": "rahuljishu",
                        "content": "I mainly prefer temp table using with, so here is it, something different, \\n\\n/* Write your T-SQL query statement below */\\nwith reference as (\\nselect \\nE.name as Employee, E.salary as salary, D.id as id, D.name as Department, \\nrank() over (partition by D.id order by D.id, E.salary desc) as rank\\nfrom Employee E\\njoin Department D on E.departmentId = D.id)\\n\\nselect Department, Employee, Salary\\nfrom reference \\nwhere rank=1"
                    },
                    {
                        "username": "himsindhu1499",
                        "content": "with cte as (select \\ndense_rank() over(partition by departmentId order by salary desc) as \\'rnk\\',e.name as \\'Employee\\',e.salary as \\'Salary\\',d.name as \\'Department\\'\\nfrom Employee e\\njoin Department d on e.departmentId=d.id)\\nselect Department,Employee,Salary\\nfrom cte\\nwhere rnk=1"
                    },
                    {
                        "username": "singhprajjawal",
                        "content": "select d.name as Department,e.name as Employee,\\ne.salary as Salary  from Employee e\\ninner join  Department  d on \\nd.id= e.departmentid\\nwhere e.salary>70000\\n\\nResult is accepted but submission is not getting accepted ??\\nanyone opinion?"
                    },
                    {
                        "username": "LiSLeetCode",
                        "content": "What\\'s the difference of those two queries?\\n\\n`SELECT d.name AS Department, e.name AS Employee, e.salary AS salary\\nFROM Department d, Employee e\\nWHERE d.id = e.departmentId;`\\n\\n`SELECT d.name AS Department, e.name AS Employee, e.salary AS salary\\nFROM Department d\\nJOIN Employee e\\nON d.id = e.departmentId;`"
                    },
                    {
                        "username": "ParisssssTian",
                        "content": "with temp as(select d.name as department, max(salary) as salary\\nfrom Employee e\\ninner join department d\\non d.id = e.departmentId\\ngroup by d.name)\\n\\nselect temp.Department, sumtemp.Employee, sumtemp.Salary\\nfrom(\\nselect d.name as Department, e.name as Employee, E.salary as Salary\\nfrom Employee e\\ninner join Department d\\non e.departmentId = d.id\\n) as sumtemp, temp\\nwhere temp.department = sumtemp.Department and temp.salary = sumtemp.Salary"
                    },
                    {
                        "username": "AABBCCDDEEFF",
                        "content": " `select d.name as \"Department\" , e.name as \"Employee\" , e.Salary \\nfrom employee e\\ninner join Department d on e.departmentId=d.id \\nwhere 1 > (select count(*) from Employee e2 where d.id=e2.departmentId and e.salary < e2.salary) `"
                    },
                    {
                        "username": "Maobu",
                        "content": "Could somebody tell me why am I wrong in submitting, but right in the run?\\n\"\\'\\'\\nselect d.name as department, e.name as employee, e.salary\\nfrom employee e\\nleft JOIN department d\\non e.departmentid=d.id\\nwhere e.salary in (\\n    select max(salary)\\nfrom employee\\ngroup by departmentid)\\n\\'\\'\\'\\n"
                    },
                    {
                        "username": "Atulfs",
                        "content": "with cte1 as(select d1.name as Department,e1.name as Employee, e1.salary as Salary,\\ndense_rank()over(partition by d1.name order by e1.salary desc)as rkt\\nfrom Employee e1\\njoin Department d1 \\non e1.departmentId=d1.id )\\nselect Department,Employee, Salary\\nfrom cte1 \\nwhere rkt =1;"
                    },
                    {
                        "username": "srikanthmungi",
                        "content": "with c as (select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\nfrom Employee e join Department d on e.DepartmentId=d.Id)\\nselect Department,Employee,Salary from c where c.rank=1\\n"
                    }
                ]
            },
            {
                "id": 1705977,
                "content": [
                    {
                        "username": "Deepak_3024",
                        "content": "# Write your MySQL query statement below\\nselect d.name as Department,\\ne.name as Employee,\\ne.salary as Salary\\nfrom employee e\\njoin Department d on d.id=e.departmentId\\nwhere (d.id,e.salary)in(Select departmentId,max(Salary)\\nfrom employee\\ngroup by departmentId"
                    },
                    {
                        "username": "rahuljishu",
                        "content": "I mainly prefer temp table using with, so here is it, something different, \\n\\n/* Write your T-SQL query statement below */\\nwith reference as (\\nselect \\nE.name as Employee, E.salary as salary, D.id as id, D.name as Department, \\nrank() over (partition by D.id order by D.id, E.salary desc) as rank\\nfrom Employee E\\njoin Department D on E.departmentId = D.id)\\n\\nselect Department, Employee, Salary\\nfrom reference \\nwhere rank=1"
                    },
                    {
                        "username": "himsindhu1499",
                        "content": "with cte as (select \\ndense_rank() over(partition by departmentId order by salary desc) as \\'rnk\\',e.name as \\'Employee\\',e.salary as \\'Salary\\',d.name as \\'Department\\'\\nfrom Employee e\\njoin Department d on e.departmentId=d.id)\\nselect Department,Employee,Salary\\nfrom cte\\nwhere rnk=1"
                    },
                    {
                        "username": "singhprajjawal",
                        "content": "select d.name as Department,e.name as Employee,\\ne.salary as Salary  from Employee e\\ninner join  Department  d on \\nd.id= e.departmentid\\nwhere e.salary>70000\\n\\nResult is accepted but submission is not getting accepted ??\\nanyone opinion?"
                    },
                    {
                        "username": "LiSLeetCode",
                        "content": "What\\'s the difference of those two queries?\\n\\n`SELECT d.name AS Department, e.name AS Employee, e.salary AS salary\\nFROM Department d, Employee e\\nWHERE d.id = e.departmentId;`\\n\\n`SELECT d.name AS Department, e.name AS Employee, e.salary AS salary\\nFROM Department d\\nJOIN Employee e\\nON d.id = e.departmentId;`"
                    },
                    {
                        "username": "ParisssssTian",
                        "content": "with temp as(select d.name as department, max(salary) as salary\\nfrom Employee e\\ninner join department d\\non d.id = e.departmentId\\ngroup by d.name)\\n\\nselect temp.Department, sumtemp.Employee, sumtemp.Salary\\nfrom(\\nselect d.name as Department, e.name as Employee, E.salary as Salary\\nfrom Employee e\\ninner join Department d\\non e.departmentId = d.id\\n) as sumtemp, temp\\nwhere temp.department = sumtemp.Department and temp.salary = sumtemp.Salary"
                    },
                    {
                        "username": "AABBCCDDEEFF",
                        "content": " `select d.name as \"Department\" , e.name as \"Employee\" , e.Salary \\nfrom employee e\\ninner join Department d on e.departmentId=d.id \\nwhere 1 > (select count(*) from Employee e2 where d.id=e2.departmentId and e.salary < e2.salary) `"
                    },
                    {
                        "username": "Maobu",
                        "content": "Could somebody tell me why am I wrong in submitting, but right in the run?\\n\"\\'\\'\\nselect d.name as department, e.name as employee, e.salary\\nfrom employee e\\nleft JOIN department d\\non e.departmentid=d.id\\nwhere e.salary in (\\n    select max(salary)\\nfrom employee\\ngroup by departmentid)\\n\\'\\'\\'\\n"
                    },
                    {
                        "username": "Atulfs",
                        "content": "with cte1 as(select d1.name as Department,e1.name as Employee, e1.salary as Salary,\\ndense_rank()over(partition by d1.name order by e1.salary desc)as rkt\\nfrom Employee e1\\njoin Department d1 \\non e1.departmentId=d1.id )\\nselect Department,Employee, Salary\\nfrom cte1 \\nwhere rkt =1;"
                    },
                    {
                        "username": "srikanthmungi",
                        "content": "with c as (select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\nfrom Employee e join Department d on e.DepartmentId=d.Id)\\nselect Department,Employee,Salary from c where c.rank=1\\n"
                    }
                ]
            },
            {
                "id": 1703765,
                "content": [
                    {
                        "username": "Deepak_3024",
                        "content": "# Write your MySQL query statement below\\nselect d.name as Department,\\ne.name as Employee,\\ne.salary as Salary\\nfrom employee e\\njoin Department d on d.id=e.departmentId\\nwhere (d.id,e.salary)in(Select departmentId,max(Salary)\\nfrom employee\\ngroup by departmentId"
                    },
                    {
                        "username": "rahuljishu",
                        "content": "I mainly prefer temp table using with, so here is it, something different, \\n\\n/* Write your T-SQL query statement below */\\nwith reference as (\\nselect \\nE.name as Employee, E.salary as salary, D.id as id, D.name as Department, \\nrank() over (partition by D.id order by D.id, E.salary desc) as rank\\nfrom Employee E\\njoin Department D on E.departmentId = D.id)\\n\\nselect Department, Employee, Salary\\nfrom reference \\nwhere rank=1"
                    },
                    {
                        "username": "himsindhu1499",
                        "content": "with cte as (select \\ndense_rank() over(partition by departmentId order by salary desc) as \\'rnk\\',e.name as \\'Employee\\',e.salary as \\'Salary\\',d.name as \\'Department\\'\\nfrom Employee e\\njoin Department d on e.departmentId=d.id)\\nselect Department,Employee,Salary\\nfrom cte\\nwhere rnk=1"
                    },
                    {
                        "username": "singhprajjawal",
                        "content": "select d.name as Department,e.name as Employee,\\ne.salary as Salary  from Employee e\\ninner join  Department  d on \\nd.id= e.departmentid\\nwhere e.salary>70000\\n\\nResult is accepted but submission is not getting accepted ??\\nanyone opinion?"
                    },
                    {
                        "username": "LiSLeetCode",
                        "content": "What\\'s the difference of those two queries?\\n\\n`SELECT d.name AS Department, e.name AS Employee, e.salary AS salary\\nFROM Department d, Employee e\\nWHERE d.id = e.departmentId;`\\n\\n`SELECT d.name AS Department, e.name AS Employee, e.salary AS salary\\nFROM Department d\\nJOIN Employee e\\nON d.id = e.departmentId;`"
                    },
                    {
                        "username": "ParisssssTian",
                        "content": "with temp as(select d.name as department, max(salary) as salary\\nfrom Employee e\\ninner join department d\\non d.id = e.departmentId\\ngroup by d.name)\\n\\nselect temp.Department, sumtemp.Employee, sumtemp.Salary\\nfrom(\\nselect d.name as Department, e.name as Employee, E.salary as Salary\\nfrom Employee e\\ninner join Department d\\non e.departmentId = d.id\\n) as sumtemp, temp\\nwhere temp.department = sumtemp.Department and temp.salary = sumtemp.Salary"
                    },
                    {
                        "username": "AABBCCDDEEFF",
                        "content": " `select d.name as \"Department\" , e.name as \"Employee\" , e.Salary \\nfrom employee e\\ninner join Department d on e.departmentId=d.id \\nwhere 1 > (select count(*) from Employee e2 where d.id=e2.departmentId and e.salary < e2.salary) `"
                    },
                    {
                        "username": "Maobu",
                        "content": "Could somebody tell me why am I wrong in submitting, but right in the run?\\n\"\\'\\'\\nselect d.name as department, e.name as employee, e.salary\\nfrom employee e\\nleft JOIN department d\\non e.departmentid=d.id\\nwhere e.salary in (\\n    select max(salary)\\nfrom employee\\ngroup by departmentid)\\n\\'\\'\\'\\n"
                    },
                    {
                        "username": "Atulfs",
                        "content": "with cte1 as(select d1.name as Department,e1.name as Employee, e1.salary as Salary,\\ndense_rank()over(partition by d1.name order by e1.salary desc)as rkt\\nfrom Employee e1\\njoin Department d1 \\non e1.departmentId=d1.id )\\nselect Department,Employee, Salary\\nfrom cte1 \\nwhere rkt =1;"
                    },
                    {
                        "username": "srikanthmungi",
                        "content": "with c as (select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\nfrom Employee e join Department d on e.DepartmentId=d.Id)\\nselect Department,Employee,Salary from c where c.rank=1\\n"
                    }
                ]
            },
            {
                "id": 1693435,
                "content": [
                    {
                        "username": "Deepak_3024",
                        "content": "# Write your MySQL query statement below\\nselect d.name as Department,\\ne.name as Employee,\\ne.salary as Salary\\nfrom employee e\\njoin Department d on d.id=e.departmentId\\nwhere (d.id,e.salary)in(Select departmentId,max(Salary)\\nfrom employee\\ngroup by departmentId"
                    },
                    {
                        "username": "rahuljishu",
                        "content": "I mainly prefer temp table using with, so here is it, something different, \\n\\n/* Write your T-SQL query statement below */\\nwith reference as (\\nselect \\nE.name as Employee, E.salary as salary, D.id as id, D.name as Department, \\nrank() over (partition by D.id order by D.id, E.salary desc) as rank\\nfrom Employee E\\njoin Department D on E.departmentId = D.id)\\n\\nselect Department, Employee, Salary\\nfrom reference \\nwhere rank=1"
                    },
                    {
                        "username": "himsindhu1499",
                        "content": "with cte as (select \\ndense_rank() over(partition by departmentId order by salary desc) as \\'rnk\\',e.name as \\'Employee\\',e.salary as \\'Salary\\',d.name as \\'Department\\'\\nfrom Employee e\\njoin Department d on e.departmentId=d.id)\\nselect Department,Employee,Salary\\nfrom cte\\nwhere rnk=1"
                    },
                    {
                        "username": "singhprajjawal",
                        "content": "select d.name as Department,e.name as Employee,\\ne.salary as Salary  from Employee e\\ninner join  Department  d on \\nd.id= e.departmentid\\nwhere e.salary>70000\\n\\nResult is accepted but submission is not getting accepted ??\\nanyone opinion?"
                    },
                    {
                        "username": "LiSLeetCode",
                        "content": "What\\'s the difference of those two queries?\\n\\n`SELECT d.name AS Department, e.name AS Employee, e.salary AS salary\\nFROM Department d, Employee e\\nWHERE d.id = e.departmentId;`\\n\\n`SELECT d.name AS Department, e.name AS Employee, e.salary AS salary\\nFROM Department d\\nJOIN Employee e\\nON d.id = e.departmentId;`"
                    },
                    {
                        "username": "ParisssssTian",
                        "content": "with temp as(select d.name as department, max(salary) as salary\\nfrom Employee e\\ninner join department d\\non d.id = e.departmentId\\ngroup by d.name)\\n\\nselect temp.Department, sumtemp.Employee, sumtemp.Salary\\nfrom(\\nselect d.name as Department, e.name as Employee, E.salary as Salary\\nfrom Employee e\\ninner join Department d\\non e.departmentId = d.id\\n) as sumtemp, temp\\nwhere temp.department = sumtemp.Department and temp.salary = sumtemp.Salary"
                    },
                    {
                        "username": "AABBCCDDEEFF",
                        "content": " `select d.name as \"Department\" , e.name as \"Employee\" , e.Salary \\nfrom employee e\\ninner join Department d on e.departmentId=d.id \\nwhere 1 > (select count(*) from Employee e2 where d.id=e2.departmentId and e.salary < e2.salary) `"
                    },
                    {
                        "username": "Maobu",
                        "content": "Could somebody tell me why am I wrong in submitting, but right in the run?\\n\"\\'\\'\\nselect d.name as department, e.name as employee, e.salary\\nfrom employee e\\nleft JOIN department d\\non e.departmentid=d.id\\nwhere e.salary in (\\n    select max(salary)\\nfrom employee\\ngroup by departmentid)\\n\\'\\'\\'\\n"
                    },
                    {
                        "username": "Atulfs",
                        "content": "with cte1 as(select d1.name as Department,e1.name as Employee, e1.salary as Salary,\\ndense_rank()over(partition by d1.name order by e1.salary desc)as rkt\\nfrom Employee e1\\njoin Department d1 \\non e1.departmentId=d1.id )\\nselect Department,Employee, Salary\\nfrom cte1 \\nwhere rkt =1;"
                    },
                    {
                        "username": "srikanthmungi",
                        "content": "with c as (select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\nfrom Employee e join Department d on e.DepartmentId=d.Id)\\nselect Department,Employee,Salary from c where c.rank=1\\n"
                    }
                ]
            },
            {
                "id": 1692717,
                "content": [
                    {
                        "username": "Deepak_3024",
                        "content": "# Write your MySQL query statement below\\nselect d.name as Department,\\ne.name as Employee,\\ne.salary as Salary\\nfrom employee e\\njoin Department d on d.id=e.departmentId\\nwhere (d.id,e.salary)in(Select departmentId,max(Salary)\\nfrom employee\\ngroup by departmentId"
                    },
                    {
                        "username": "rahuljishu",
                        "content": "I mainly prefer temp table using with, so here is it, something different, \\n\\n/* Write your T-SQL query statement below */\\nwith reference as (\\nselect \\nE.name as Employee, E.salary as salary, D.id as id, D.name as Department, \\nrank() over (partition by D.id order by D.id, E.salary desc) as rank\\nfrom Employee E\\njoin Department D on E.departmentId = D.id)\\n\\nselect Department, Employee, Salary\\nfrom reference \\nwhere rank=1"
                    },
                    {
                        "username": "himsindhu1499",
                        "content": "with cte as (select \\ndense_rank() over(partition by departmentId order by salary desc) as \\'rnk\\',e.name as \\'Employee\\',e.salary as \\'Salary\\',d.name as \\'Department\\'\\nfrom Employee e\\njoin Department d on e.departmentId=d.id)\\nselect Department,Employee,Salary\\nfrom cte\\nwhere rnk=1"
                    },
                    {
                        "username": "singhprajjawal",
                        "content": "select d.name as Department,e.name as Employee,\\ne.salary as Salary  from Employee e\\ninner join  Department  d on \\nd.id= e.departmentid\\nwhere e.salary>70000\\n\\nResult is accepted but submission is not getting accepted ??\\nanyone opinion?"
                    },
                    {
                        "username": "LiSLeetCode",
                        "content": "What\\'s the difference of those two queries?\\n\\n`SELECT d.name AS Department, e.name AS Employee, e.salary AS salary\\nFROM Department d, Employee e\\nWHERE d.id = e.departmentId;`\\n\\n`SELECT d.name AS Department, e.name AS Employee, e.salary AS salary\\nFROM Department d\\nJOIN Employee e\\nON d.id = e.departmentId;`"
                    },
                    {
                        "username": "ParisssssTian",
                        "content": "with temp as(select d.name as department, max(salary) as salary\\nfrom Employee e\\ninner join department d\\non d.id = e.departmentId\\ngroup by d.name)\\n\\nselect temp.Department, sumtemp.Employee, sumtemp.Salary\\nfrom(\\nselect d.name as Department, e.name as Employee, E.salary as Salary\\nfrom Employee e\\ninner join Department d\\non e.departmentId = d.id\\n) as sumtemp, temp\\nwhere temp.department = sumtemp.Department and temp.salary = sumtemp.Salary"
                    },
                    {
                        "username": "AABBCCDDEEFF",
                        "content": " `select d.name as \"Department\" , e.name as \"Employee\" , e.Salary \\nfrom employee e\\ninner join Department d on e.departmentId=d.id \\nwhere 1 > (select count(*) from Employee e2 where d.id=e2.departmentId and e.salary < e2.salary) `"
                    },
                    {
                        "username": "Maobu",
                        "content": "Could somebody tell me why am I wrong in submitting, but right in the run?\\n\"\\'\\'\\nselect d.name as department, e.name as employee, e.salary\\nfrom employee e\\nleft JOIN department d\\non e.departmentid=d.id\\nwhere e.salary in (\\n    select max(salary)\\nfrom employee\\ngroup by departmentid)\\n\\'\\'\\'\\n"
                    },
                    {
                        "username": "Atulfs",
                        "content": "with cte1 as(select d1.name as Department,e1.name as Employee, e1.salary as Salary,\\ndense_rank()over(partition by d1.name order by e1.salary desc)as rkt\\nfrom Employee e1\\njoin Department d1 \\non e1.departmentId=d1.id )\\nselect Department,Employee, Salary\\nfrom cte1 \\nwhere rkt =1;"
                    },
                    {
                        "username": "srikanthmungi",
                        "content": "with c as (select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\nfrom Employee e join Department d on e.DepartmentId=d.Id)\\nselect Department,Employee,Salary from c where c.rank=1\\n"
                    }
                ]
            },
            {
                "id": 1681613,
                "content": [
                    {
                        "username": "Deepak_3024",
                        "content": "# Write your MySQL query statement below\\nselect d.name as Department,\\ne.name as Employee,\\ne.salary as Salary\\nfrom employee e\\njoin Department d on d.id=e.departmentId\\nwhere (d.id,e.salary)in(Select departmentId,max(Salary)\\nfrom employee\\ngroup by departmentId"
                    },
                    {
                        "username": "rahuljishu",
                        "content": "I mainly prefer temp table using with, so here is it, something different, \\n\\n/* Write your T-SQL query statement below */\\nwith reference as (\\nselect \\nE.name as Employee, E.salary as salary, D.id as id, D.name as Department, \\nrank() over (partition by D.id order by D.id, E.salary desc) as rank\\nfrom Employee E\\njoin Department D on E.departmentId = D.id)\\n\\nselect Department, Employee, Salary\\nfrom reference \\nwhere rank=1"
                    },
                    {
                        "username": "himsindhu1499",
                        "content": "with cte as (select \\ndense_rank() over(partition by departmentId order by salary desc) as \\'rnk\\',e.name as \\'Employee\\',e.salary as \\'Salary\\',d.name as \\'Department\\'\\nfrom Employee e\\njoin Department d on e.departmentId=d.id)\\nselect Department,Employee,Salary\\nfrom cte\\nwhere rnk=1"
                    },
                    {
                        "username": "singhprajjawal",
                        "content": "select d.name as Department,e.name as Employee,\\ne.salary as Salary  from Employee e\\ninner join  Department  d on \\nd.id= e.departmentid\\nwhere e.salary>70000\\n\\nResult is accepted but submission is not getting accepted ??\\nanyone opinion?"
                    },
                    {
                        "username": "LiSLeetCode",
                        "content": "What\\'s the difference of those two queries?\\n\\n`SELECT d.name AS Department, e.name AS Employee, e.salary AS salary\\nFROM Department d, Employee e\\nWHERE d.id = e.departmentId;`\\n\\n`SELECT d.name AS Department, e.name AS Employee, e.salary AS salary\\nFROM Department d\\nJOIN Employee e\\nON d.id = e.departmentId;`"
                    },
                    {
                        "username": "ParisssssTian",
                        "content": "with temp as(select d.name as department, max(salary) as salary\\nfrom Employee e\\ninner join department d\\non d.id = e.departmentId\\ngroup by d.name)\\n\\nselect temp.Department, sumtemp.Employee, sumtemp.Salary\\nfrom(\\nselect d.name as Department, e.name as Employee, E.salary as Salary\\nfrom Employee e\\ninner join Department d\\non e.departmentId = d.id\\n) as sumtemp, temp\\nwhere temp.department = sumtemp.Department and temp.salary = sumtemp.Salary"
                    },
                    {
                        "username": "AABBCCDDEEFF",
                        "content": " `select d.name as \"Department\" , e.name as \"Employee\" , e.Salary \\nfrom employee e\\ninner join Department d on e.departmentId=d.id \\nwhere 1 > (select count(*) from Employee e2 where d.id=e2.departmentId and e.salary < e2.salary) `"
                    },
                    {
                        "username": "Maobu",
                        "content": "Could somebody tell me why am I wrong in submitting, but right in the run?\\n\"\\'\\'\\nselect d.name as department, e.name as employee, e.salary\\nfrom employee e\\nleft JOIN department d\\non e.departmentid=d.id\\nwhere e.salary in (\\n    select max(salary)\\nfrom employee\\ngroup by departmentid)\\n\\'\\'\\'\\n"
                    },
                    {
                        "username": "Atulfs",
                        "content": "with cte1 as(select d1.name as Department,e1.name as Employee, e1.salary as Salary,\\ndense_rank()over(partition by d1.name order by e1.salary desc)as rkt\\nfrom Employee e1\\njoin Department d1 \\non e1.departmentId=d1.id )\\nselect Department,Employee, Salary\\nfrom cte1 \\nwhere rkt =1;"
                    },
                    {
                        "username": "srikanthmungi",
                        "content": "with c as (select d.Name as \\'Department\\', e.Name as \\'Employee\\', e.Salary as \\'Salary\\', rank() over(PARTITION by d.Name order by Salary desc) as \\'rank\\'\\nfrom Employee e join Department d on e.DepartmentId=d.Id)\\nselect Department,Employee,Salary from c where c.rank=1\\n"
                    }
                ]
            }
        ]
    }
]